/** \page zorba_options Zorba Configuration Options

\section build_options Configuring Zorba at compile time

If you want to know how to configure and optimize Zorba to better suit your
needs, here is a list of what you can do.
All these configuration options are cmake options, that is, you have to call
cmake -Doption_name=option_value before calling make to build zorba.


\subsection ZORBA_BUILD_STATIC_LIBRARY ZORBA_BUILD_STATIC_LIBRARY
Default OFF
External dependency: none

By default Zorba is built as a dynamic library.
You can use this option to compile Zorba as static library.

\subsection ZORBA_FOR_ONE_THREAD_ONLY ZORBA_FOR_ONE_THREAD_ONLY
Default OFF
External dependency: none

By default Zorba is able to deal with multiple threads, synchronizing access to
xml data store.
If you don't intend to use it in multithreading environment, you can use this
option to improve the performance.

\subsection ZORBA_NATIVE_STORE ZORBA_NATIVE_STORE
Default ON
External dependency: libxml2

By default Zorba comes with an in-memory xml store.
If you intend to write your own store by following the store api, you have to
disable the native store first
and recompile Zorba with your own store.

\subsection ZORBA_NO_BIGNUMBERS ZORBA_NO_BIGNUMBERS
Default OFF
External dependency: none

Zorba is using MAPM library to deal with very big numbers, following the spec
for decimals and integers.
If you don't need to work with numbers bigger that the IEEE 754 double/C++
double domain, then you can use this option.
This will deactivate MAPM and use normal doubles for xs:decimal and xs:double,
normal int for xs:integer
and normal float for xs:float.
For some cases this will speed up the performance a lot.

\subsection ZORBA_NO_UNICODE ZORBA_NO_UNICODE
Default OFF
External dependency: none

Zorba is working with UTF-8 strings by using the ICU library.
If you don't need unicode processing and simple ASCII texts are enough for you,
you can use this option.
This will improve performance for heavy string processing and also reduce the
footprint of the library by removing the ICU dependency.

\subsection ZORBA_NUMERIC_OPTIMIZATION ZORBA_NUMERIC_OPTIMIZATION
Default OFF
External dependency: none

If you deal with a lot of numeric processing this option might improve
performance.
This will activate a group of hashes that remember the already used numbers and
provide them when needed.
If the value space is too big then this option might give a drop in performance.

\subsection ZORBA_USE_SWIG ZORBA_USE_SWIG
Default ON
External dependency: Swig (http://www.swig.org/download.html)

If you want to generate language bindings for either one of the following
languages (Java, Ruby, PHP or Python) you first have to install Swig.
Check out the \ref build page, section \ref packages for more details.

\subsection ZORBA_VERIFY_PEER_SSL_CERTIFICATE ZORBA_VERIFY_PEER_SSL_CERTIFICATE
Default OFF
External dependency: curl with ssl and CA certificates file

In order to use a more reliable SSL connection for data transfer, CURL library
can verify the certificate of the peer against the list of CA certificates in
the local dir.
If you intend to use this option you have to provide CURL this CA certifs file.
By default Zorba will download https files without checking the SSL certificate.

\subsection ZORBA_WITH_FILE_ACCESS ZORBA_WITH_FILE_ACCESS
Default ON
External dependency: none

You can use this option to restrict Zorba to not be able to use fn:doc on local
files.

\subsection ZORBA_WITH_FOP ZORBA_WITH_FOP
Default OFF
External dependency: Java (http://java.sun.com/javase/downloads/index.jsp) and
Apache FOP (http://xmlgraphics.apache.org/fop/download.html)

Apache FOP (Formatting Objects Processor) is a print formatter driven by XSL
formatting objects (XSL-FO) and an output independent formatter. It is a Java
application that reads a formatting object (FO) tree and renders the resulting
pages to a specified output.
Please check out \ref build page, section \ref packages for more details.

\subsection ZORBA_WITH_LIBXML2_SAX ZORBA_WITH_LIBXML2_SAX
Default ON
External dependency: libxml2

..to be completed

\subsection ZORBA_XQUERYX ZORBA_XQUERYX
Default OFF
External dependency: libxml2, libxslt

You can activate XQueryX support by this option. After that you can compile and
run XQueryX code through the normal api,
and Zorba is able to detect the difference between XQueryX and XQuery code and
compile accordingly.
After enabling this option, the XQuery code can still be used.
XQueryX and XQueryX Update are supported.


*/




