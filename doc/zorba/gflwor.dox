/** \page gflwor General FLWOR

\section gflworgrammar GFLWOR Grammar

<tt>
FLWORExpr ::= InitialClause Clause* ReturnClause

InitialClause ::= ForClause | LetClause | WindowClause

Clause ::= InitialClause | WhereClause | GroupByClause | OrderByClause | CountClause
</tt>

\section gflworsem GFLWOR Semantics

Each clause accepts a tuple stream as input, acts on that tuple stream, and produces a tuple stream as output. Apart from the initial clause requirement and the final return clause, all clauses can appear in any order.

\section gflworclauses GFLWOR new clauses

An outer for clause behaves like a for-clause, except that, if the binding 
sequence for a variable in the outer for clause is empty, rather than producing 
no bindings for that variable, the outer for clause produces a single binding 
which binds that variable to an empty sequence.

The syntax for an outer for clause is the same as for a regular for clause,
but with an extra <tt>outer</tt> keyword prepended before the <tt>for</tt>
keyword.

<tt>
CountClause ::= "count" "$" VarName
</tt>

A count clause augments each tuple in it's input tuple stream with an
additional variable, named in the clause. The value of this variable is
the singleton xs:integer value of the ordinal position of the tuple in
the input tuple stream, starting at 1.

\section gflworexamples GFLWOR Examples

\subsection gflwor_example1 Example 1
\code
(: All FLWOR clauses can appear in any order :)

for $x in (3, 1, 2)
count $m
order by $x
count $n
let $delta := $n - $m
return <r><x>{$x}</x><m>{$m}</m><n>{$n}</n><d>{$delta}</d></r>
\endcode

\subsection gflwor_example2 Example 2
\code
(: Multiple where clauses :)

for $x in (1, 2, 3, 4) for $y in (20, 10, 30, 15)
where ($y idiv 10) gt $x
let $q := $y div $x
where abs ($q - round ($q)) gt 0
return $q
\endcode

\subsection gflwor_example3 Example 3
\code
(: Simple Example :)

for $x in (5,6,7,1,2,3,4)
where $x < 4
for $y in (4,9,6,8,2)
let $z := $x * $y
where $z > 20
return 
<value x="{$x}" y="{$y}">{$z}</value>
\endcode

\subsection gflwor_example4 Example 4
\include gflwor_ex2.xq

\subsection gflwor_example5 Example 5
\include gflwor_ex4.xq

\subsection gflwor_example6 Example 6
\code
(: Output Numbering :)

<page>{
for $product in doc($products_ctx)/*/product
order by $product
count $x
return 
<item pos="{$x}">{$product/name}</item>
}</page>
\endcode


Here is how you can use the %zorba command line utility to execute for instance \ref gflwor_example5
\code
zorba -e sales_ctx=sales-records.xml -e products_ctx=products.xml -f -q gflwor_example5.xq
\endcode

sales-records.xml, stores.xml and products.xml can be found at <a href="http://www.w3.org/TR/xquery-11-use-cases/#dataproducts" target="_blank">http://www.w3.org/TR/xquery-11-use-cases/#dataproducts</a>.

gflwor_example5.xq contains \ref gflwor_example5 query.

*/
