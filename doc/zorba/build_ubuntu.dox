/**

\page build_ubuntu Zorba Build Notes for Ubuntu/Debian Linux Users

\section ubuntu_packages Ubuntu Packages

Most of the tools and libraries you might need to build Zorba are
available in the standard Ubuntu/Debian repositories.  Here we list
the packages that you should install to meet the requirements
specified at \ref build_prerequisites.

\subsection ubuntu_tools Tools
To install the gcc compiler and CMake:
\code
sudo apt-get install build-essential cmake
\endcode

To install Git (for building the latest Zorba source, or for
building non-core modules):
\code
sudo apt-get install git
\endcode

\subsection ubuntu_libs Core Zorba Library Dependencies
Required libraries for core Zorba:
\code
sudo apt-get install libxml2-dev uuid-dev
\endcode

Recommended libraries for core Zorba:
\code
sudo apt-get install libicu-dev libxerces-c-dev
\endcode

Optional libraries for core Zorba:
\code
sudo apt-get install libxslt-dev libcurl4-openssl-dev libxerces-c-dev
\endcode

\subsection ubuntu_noncore_libs Non-Core Module Library Dependencies

\subsubsection ubuntu_html HTML Module (data-converters package)
\code
sudo apt-get install libtidy-dev
\endcode

\subsubsection ubuntu_geos Geo Module

To install libgeos for the Geo Module, first ensure that the version
available for your distribution is at least 3.2.2:

\code
apt-cache show libgeos-dev | grep Version:
\endcode

If it is lower than 3.2.2, then you may add our PPA to your list of
repositories to get a later version:

\code
sudo add-apt-repository ppa:juan457/zorba
sudo apt-get update
\endcode

In either case, install libgeos with:
\code
sudo apt-get install libgeos-dev
\endcode

\subsubsection ubuntu_imagemagick ImageMagick (for image modules)

\code
sudo apt-get install imagemagick libmagick++-dev libmagickwand-dev
\endcode

\subsubsection ubuntu_cclient Email Module

We recommend using our PPA to install the C-Client module, as the
Ubuntu packages are not built correctly at least on 64-bit platforms.

\code
sudo add-apt-repository ppa:juan457/zorba
sudo apt-get update
sudo sudo apt-get install libc-client2007e libc-client2007e-dev
\endcode

Or, you may build it yourself from source, so long as you force the
-fPIC option:

\code
wget ftp://ftp.cac.washington.edu/imap/imap-2007e.tar.gz
tar -xf imap-2007e.tar.gz
sudo apt-get install libpam-dev
cd imap-2007e
make lnp EXTRACFLAGS="-I/usr/include/openssl -fPIC"
\endcode

Note: In case of errors, delete all, untar and make again, don't trust
make clean.

If you do this, be sure to pass the path to the \"\c c-client\"
subdirectory of your build to CMake when configuring Zorba, e.g.:
\code
cmake -DCMAKE_PREFIX_PATH="~/imap-2007e/c-client" ../
make
\endcode

*/
