/** \page php_ubuntu_tutorial Zorba XQuery in PHP 5 - Ubuntu Installation
by Cezar Andrei,
May 13th, 2011

\section initial_setup Initial setup

These steps were checked on Ubuntu 10.10. Send us email with the results you had on diffrent platforms.

\section install_apache_http Install Apache HTTP Server

\code
$ sudo apt-get install apache2
\endcode

Once the web server installation is done, PHP5 needs intalled also.

\section install_php5 Install PHP5

\code
$ sudo apt-get install php5 php5-dev libapache2-mod-php5 php5-curl php5-gd \
php5-idn php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ps \
php5-pspell php5-recode php5-snmp php5-tidy php5-xmlrpc php5-xsl php5-common
\endcode

Let's create a new PHP file to ensure everything is working:
\code
$ sudo pico /var/www/test.php
\endcode

Add this code to the file:
\code
<?php
    phpinfo();
?>
\endcode

Restart Apache so all the prior changes get applied:
\code
$ sudo /etc/init.d/apache2 restart
\endcode

Now using a web browser point it to: http://localhost/test.php

Check if php works corectly.

\section install_zorba Install Zorba

Get Zorba sources and follow \ref build.

Check Zorba is working.

\code
$ zorba -q '2+1'
<?xml version="1.0" encoding="UTF-8"?>
3
\endcode

Check php test is working.

\code
$ ctest -R php
Start processing tests
Test project /tmp/zorba-1.2.0/build
1188/1188 Testing php                             Passed
100% tests passed, 0 tests failed out of 1
\endcode

Passing the php test means that PHP5 is instlled corectly and there is a succesfull build that includes the PHP swig binding.

\section enable_zorba_extension Enable Zorba extension in PHP

Copy Zorba extension library files to /usr/local/lib/php/.

\code
zorba/build$ cp swig/php/zorba_api.so swig/php/zorba_api_wrapper.php /usr/local/lib/php/
\endcode

Add the folowing lines to /etc/php5/apache2/php.ini file.

\code
include_path="/usr/local/lib/php/"
extension=/usr/local/lib/php/zorba_api.so
\endcode

Restart Apache Http server

\code
$ sudo /etc/init.d/apache2 restart
\endcode

Refresh browser: http://localhost/test.php

Check if zorba_api is in the list of php known extensions.

\section verify_it_works Verify it works

Add the following content to /var/www/zorba.php:

\code
<html>
<title>Zorba test</title>
<body>
<?php
    // include Zorba API
    require_once 'zorba_api_wrapper.php';
    // create Zorba instance in memory
    $ms = InMemoryStore::getInstance();
    $zorba = Zorba::getInstance($ms);

    try {
        // create and compile query string<
        $queryStr = '1+2';
        $query = $zorba->compileQuery($queryStr);

        // execute query and display result
        $result = $query->execute();
        echo $result;
        // clean up
        $query->destroy();
        $zorba->shutdown();
        InMemoryStore::shutdown($ms);
    } catch (Exception $e) {
        die('ERROR:' . $e->getMessage());
    }
?>
</body>
</html>
\endcode


Point your browser to http://localhost/zorba.php and see the result.

\section further_reading Further reading

For more details on how to use Zorba API in PHP go to <a href="http://www.ibm.com/developerworks/xml/library/x-zorba/?ca=drs-#N1018E">Building XQuery-powered applications with PHP and Zorba</a> article by Vikram Vaswani.

\section useful_links Useful links

<a href="http://www.giantflyingsaucer.com/blog/?p=1826">Install PHP 5, Apache 2 and MongoDB on Ubuntu 10.10</a>

<a href="http://www.ibm.com/developerworks/xml/library/x-zorba/?ca=drs-"> Building XQuery-powered applications with PHP and Zorba</a>

<a href="http://www.zorba-xquery.com/doc/zorba-latest/zorba/html/build.html"> Zorba build instructions</a>
*/
