/** \page fop FO

In order to use Zorba's FO functionality, the module "http://www.zorba-xquery.com/zorba/fop-functions" has
to be included at the beginning of a query. For example

\code
  import module namespace fop = "http://www.zorba-xquery.com/zorba/fop-functions";
\endcode

Currently, zorba supports only PDF as output. In order to get the function running, the user has to have fop.jar (in ${APACHE-FOP}/build) and all dependencies in her classpath (all jars in the ${APACHE-FOP}/lib directory). If not, the Java Virtual Machine will throw an exception.

\section fopfunctions FO Function

\subsection fopfunction GET Functions

\code
 declare nondeterministic sequential function zorba-rest:get( $root as node() )                         as xs:base64Binary;
\endcode

This functions creates a PDF from a XSL-FO root node.

\section fopexample FO Example

The following code illustrates the usage of the zorba-fop module:

\code
import module namespace fop = "http://www.zorba-xquery.com/zorba/fop-functions";

declare namespace fo = "http://www.w3.org/1999/XSL/Format";

let $fop := <fo:root>
  <fo:layout-master-set>
    <fo:simple-page-master  master-name="A4" 
                            page-width="210mm" page-height="297mm">
      <fo:region-body region-name="xsl-region-body"  margin="2cm"/>
    </fo:simple-page-master>
  </fo:layout-master-set>
  <fo:page-sequence  master-reference="A4">
    <fo:flow flow-name="xsl-region-body">
      <fo:block>Hello World!</fo:block>
    </fo:flow>
  </fo:page-sequence>
</fo:root>

return fop:zorba-fop($fop)
\endcode

This sample just generates a DIN-A4 page and writes the words "Hello World!" on it. To learn how to create a valid xsl-fo root node, please see the xsl-fo recommondation at http://www.w3.org/TR/xsl11/

*/
