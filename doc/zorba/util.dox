/** \page util The "Zorba util" functions

<ul>
   <li> Table of Contents
   <ul>
     <li> \ref introduction
     <ul>
       <li> \ref namespace
     </ul>
     <li> \ref signatures
     <ul>
      <li> \ref tidyLib
      <ul>
        <li> \ref tidy
        <li> \ref tdoc
      </ul>
     </ul>
    <li> \ref random_generation
    <ul>
      <li> \ref uuid
      <li> \ref random
    </ul>
    <li> \ref mail_intro
    <ul>
      <li> \ref configuring
      <ul>
        <li> \ref mail_installation
        <li> \ref mail_configuring
        <li> \ref mail_static_context
      </ul>
      <li> \ref mail_functions
      <ul>
        <li> \ref mail
      </ul>
    </ul>
    <li> \ref apendix_util
    <li> \ref apendix_naming
   </ul>
 </ul>

\section introduction 1 Introduction
This document defines a general set of functions grouped together under "zorba-util" namespace.

\subsection namespace 1.1 Namespace
In order to use Zorba util functions, the module <tt>"http://www.zorba-xquery.com/zorba/util-functions"</tt> has
to be included at the beginning of a query. For example

\code
  import module namespace zorba-util = "http://www.zorba-xquery.com/zorba/util-functions";
\endcode

\section signatures 2 Function Signatures and Descriptions

\subsection tidyLib 2.1 Functions using Tidy library
In order to use the functions that require Tidy you have to:\n
- install Tidy either from <a href="http://tidy.sourceforge.net/#binaries" target="_blank">binaries</a> or <a href="http://tidy.sourceforge.net/#source" target="_blank">source code</a>.\n
- rebuild Zorba with ZORBA_WITH_TIDY set to ON.\n

\subsection tidy 2.1.1 zorba-util:tidy

\code
  declare function tidy($str          as xs:string) as item()
  declare function tidy($str          as xs:string,
                        $tidyOptions  as xs:string?) as item()
\endcode

Summary: Assuming <b>$str</b> contains a "dirty" HTML the function will return an item containing a valid XHTML version of the <b>$str</b>. \n

A complete set of options that can be set for a Tidy call can be found at <a href="http://tidy.sourceforge.net/docs/quickref.html" target="_blank">HTML Tidy Configuration Options</a> \n

By default Zorba sets these values for the following options: \n
- char-encoding=utf8 \n
- newline=LF \n
- tidy-mark=true \n
- quote-nbsp=no \n

These options can be overwritten by passing different <b>$tidyOptions</b>

\subsection ex_tidy Example:
\code
  import module namespace
  fn-zorba-util="http://www.zorba-xquery.com/zorba/util-functions";
  fn:string(fn-zorba-util:tidy('<title>Foo</title><p>Foo!','"newline=CRLF","doctype=omit","force-output","bare=yes"'))
\endcode

As a result: \n
- <i>newline</i> will be set to <i>CRLF</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#newline" target="_blank">newline</a>) \n
- <i>doctype</i> will be set to <i>omit</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#doctype" target="_blank">doctype</a>) \n
- <i>force-output</i> will be set to <i>true</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#force-output" target="_blank">force-output</a>) \n
- <i>bare</i> will be set to <i>true</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#bare" target="_blank">bare</a>) \n

Note: you can set a boolean parameter to true by either of the following methods: \n
- passing only the option name (like <i>force-output</i> in the above example) \n
- passing the option name and the value (like <i>bare</i> in the above example) \n

Error conditions:\n
If Tidy lib is not able to transform the given string into a valid XHTML, an error is raised XQP0029_TIDY_ERROR (see \ref apendix_util).\n

\subsection tdoc 2.1.2 zorba-util:tdoc

\code
  declare function tdoc($uri         as xs:string?) as document-node()?
  declare function tdoc($uri         as xs:string
                        $tidyOptions as xs:string?) as document-node()?
\endcode

Summary: This function if very similar to the <tt>15.5.4 fn:doc</tt> from <a href="http://www.w3.org/TR/xquery-operators/#func-doc" target="_blank">XQuery 1.0 and XPath 2.0 Functions and Operators</a> function. The only difference is that prior to parsing  and inserting the document identified by <b>$uri</b> in the store, <tt>tdoc</tt> function transforms the document into a valid XHTML document with the help of Tidy lib.\n

A complete set of options that can be set for a Tidy call can be found at <a href="http://tidy.sourceforge.net/docs/quickref.html" target="_blank">HTML Tidy Configuration Options</a> \n

By default Zorba sets these values for the following options: \n
- char-encoding=utf8 \n
- newline=LF \n
- tidy-mark=true \n
- quote-nbsp=no \n

These options can be overwritten by passing different <b>$tidyOptions</b>

\subsection ex_tdoc Example:
\code
  import module namespace
  fn-zorba-util="http://www.zorba-xquery.com/zorba/util-functions";
  fn-zorba-util:tdoc('http://tidy.sourceforge.net/libintro.html','"newline=CRLF","doctype=omit","force-output","bare=yes"')
\endcode

As a result: \n
- <i>newline</i> will be set to <i>CRLF</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#newline" target="_blank">newline</a>) \n
- <i>doctype</i> will be set to <i>omit</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#doctype" target="_blank">doctype</a>) \n
- <i>force-output</i> will be set to <i>true</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#force-output" target="_blank">force-output</a>) \n
- <i>bare</i> will be set to <i>true</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#bare" target="_blank">bare</a>) \n

Note: you can set a boolean parameter to true by either of the following methods: \n
- passing only the option name (like <i>force-output</i> in the above example) \n
- passing the option name and the value (like <i>bare</i> in the above example) \n

Error conditions:\n
If Tidy lib is not able to transform the given string into a valid XHTML, an error is raised XQP0029_TIDY_ERROR (see \ref apendix_util).\n

\subsection random_generation 2.2 Functions for generating UUID's, random integers

\subsection uuid 2.2.1 zorba-util:uuid

\code
  declare function uuid() as xs:string
\endcode

Summary: This function does not generates a DCE 1.1 variant UUIDs.\n
However please take into account that the UUID contains the time (as the number of 100-nanosecond intervals since the adoption of the Gregorian calendar in the West) at which the UUID was generated (like DCE version 1 states).\n
The UUID does not contain the MAC address of the machine used to generate it, and that is why the generated UUID's are not conformant to DCE version 1.\n

\subsection random 2.2.2 zorba-util:random

\code
  declare function random() as xs:integer
  declare function random($seed as xs:integer) as xs:integer
\endcode

Summary: Function for generating a random integer. \n
<b>$seed</b> can be used to set the starting point of the std::rand sequence. If random is called whithin a loop but diffrent numbers are expected as a result this parameter should be set. Please see the example below. \n

\code
  import module namespace zu = "http://www.zorba-xquery.com/zorba/util-functions";
  for $i in (1 to 10)
    return zu:random($i)
\endcode

If the seed is not passed as an argument the same number will be generated every time: \n

\code
  import module namespace zu = "http://www.zorba-xquery.com/zorba/util-functions";
  for $i in (1 to 10)
    return zu:random()
\endcode

\section mail_intro 2.3 Introduction

This section describes the function used for sending email. \n
Zorba provides email support through the <a href="http://www.washington.edu/imap/" target="_blank">UW IMAP toolkit</a>. \n

\subsection configuring 2.3.1 Configuring

\subsection mail_installation 2.3.1.1 Installation

C-Client library is a prerequirement of the installation.

<b>Installing C-Client from sources:</b> \n
C-Client library is part of the <a href="http://www.washington.edu/imap/" target="_blank">UW IMAP toolkit</a>. \n
Make sure to install C-Client with SSL support and also check if the name of the library is <b>libc-client.a</b>.\n

\subsection mail_configuring 2.3.1.2 Configuring Zorba to run with Email support
If C-Client was installed from sources be sure to pass the location hints when reconfiguring Zorba: \n
assuming the C-Client sources are under /home/user/imap-2007e, \n
you should configure Zorba with -DCCLIENT_INCLUDE_DIRS=/home/user/imap-2007e -DCCLIENT_LIBRARY_DIRS=/home/user/imap-2007e/c-client \n
After that the ZORBA_WITH_EMAIL flag should be set to ON. \n

\subsection mail_static_context 2.3.1.3 Configuring SMTP parameters in the Static Context
There are several values that have to be configured in the static context prior to calling any email functions. These are the following: \n
- SMTP server \n
- SMTP username \n
- SMTP password \n

<b>SMTP server</b> \n
The SMTP server has to be specified as a string in the following form: \n
<i> remote_system_name [":" port] [flags] </i> \n
a complete list of usage see \ref apendix_naming

For example: \n
- smtp.gmail.com:587/tls/novalidate-cert \n
- [209.85.129.111]:587/tls/novalidate-cert \n

<b>SMTP username</b> \n
This is the remote username used to authenticate to the SMTP server. \n

Note: \n
If you have specified a username in the SMTP server through <b>/user=</b> it will be overwritten by the one defined as SMTP username.

<b>SMTP password</b> \n
This is the remote username password used to authenticate to the SMTP server. \n

\subsection mail_functions 2.3.2 Mail functions

\subsection mail 2.3.2.1 zorba-util:mail

\code
  declare function mail(  $to       as xs:string
                          $subject  as xs:string
                          $message  as xs:string)  as none
\endcode

Parameters: \n
<b>$to</b> Receiver, or receivers of the email. The formatting of this string must comply with <a href="http://www.faqs.org/rfcs/rfc2822.html" target="_blank">RFC 2822</a>. \n

Examples: \n
- user@example.com \n
- user@example.com, anotheruser@example.com \n
- User <user@example.com> \n
- User <user@example.com>, Another User <anotheruser@example.com> \n

<b>$subject</b> Subject of the email to be sent. The formatting of this string must comply with <a href="http://www.faqs.org/rfcs/rfc2047.html" target="_blank">RFC 2047</a>. \n

<b>$message</b> Message to be sent. \n
Each line should be separated with a LF (\\n). Lines should not be larger than 70 characters. \n

Error conditions:\n
If the SMTP server was not set in the static context an error is raised API0038_SMTP_SEVER_ERROR_SET_OPTION (see \ref apendix_util).\n
If the <b>$to</b> parameter was not set an error is raised API0039_TO_SET_OPTION (see \ref apendix_util).\n
If the email could not be sent for some reason an error is raised API0040_MAIL_NOT_SENT with the details of the failure (see \ref apendix_util).\n

\subsection ex_mail Example:
\code
  #include <zorba/zorba.h>
  #include <simplestore/simplestore.h>

  simplestore::SimpleStore* lStore = simplestore::SimpleStoreManager::getStore();
  Zorba* lZorba = Zorba::getInstance(lStore);

  StaticContext_t lStaticContext = aZorba->createStaticContext();

  // set the values needed for the SMTP connection (SMTP server, username and password)
  lStaticContext->setSMTPServer("smtp.gmail.com:587/tls/novalidate-cert");
  lStaticContext->setSMTPUname("username");
  lStaticContext->setSMTPUpwd("password");

  XQuery_t lQuery = aZorba->compileQuery("import module namespace zu = 'http://www.zorba-xquery.com/zorba/util-functions'; zu:mail('user@domain.com','this is a test email','it works!')", lStaticContext);

  try {
    std::cout << lQuery << std::endl;
  } catch (SystemException &e) {
      std::cerr << e << std::endl;
      return false;
  }

  return true;

  lZorba->shutdown();
  simplestore::SimpleStoreManager::shutdownStore(lStore);
\endcode

\section apendix_util Appendix A:  Error codes

  XQP0029_TIDY_ERROR - Error in Tidy library - is returned in case Tidy lib is not able to transform the given string into a valid XHTML.\n
  API0038_SMTP_SEVER_ERROR_SET_OPTION - is returned if the mail function was called prior to setting the SMTP server in the static context.\n
  API0039_TO_SET_OPTION - is returned if the To: parameter was not set correctly.\n
  API0040_MAIL_NOT_SENT - is returned if the email could not be sent. \n

\section apendix_naming Appendix B: SMTP server naming conventions
This list is in fact section <i>III. Remote names</i> part of the <i>naming.txt</i> provided with the <a href="http://www.washington.edu/imap/" target="_blank">UW IMAP toolkit</a>. \n

All names are in the form \n
<table border="0" cellpadding="0" cellspacing="0">
<tr>
  <td colspan="2"><b>remote_system_name [":" port] [flags]</b></td>
</tr>
<tr>
  <td colspan="2">where:</td>
</tr>
<tr>
  <td><b>remote_system_name</b></td>
  <td>Internet domain name or bracketed IP address of server.</td>
</tr>
<tr>
  <td><b>port</b> </td>
  <td>optional TCP port number, default is the default port for that service.</td>
</tr>
<tr>
  <td><b>flags</b></td>
  <td>optional flags, one of the following:</td>
</tr>
<tr>
  <td><b>/user=</b></td>
  <td>remote user name for login on the server</td>
</tr>
<tr>
  <td><b>/anonymous</b></td>
  <td>remote access as anonymous user</td>
</tr>
<tr>
  <td><b>/secure</b></td>
  <td>do not transmit a plaintext password over the network</td>
</tr>
<tr>
  <td><b>/ssl</b></td>
  <td>use the Secure Socket Layer to encrypt the session</td>
</tr>
<tr>
  <td><b>/validate-cert</b></td>
  <td>validate certificates from TLS/SSL server (this is the default behavior)</td>
</tr>
<tr>
  <td><b>/novalidate-cert</b></td>
  <td>do not validate certificates from TLS/SSL server, needed if server uses self-signed certificates</td>
</tr>
<tr>
  <td><b>/tls</b></td>
  <td>force use of start-TLS to encrypt the session, and reject connection to servers that do not support it</td>
</tr>
<tr>
  <td><b>/tls-sslv23</b></td>
  <td>use the depreciated SSLv23 client when negotiating TLS to the server. This is necessary with some broken servers which (incorrectly) think that TLS is just another way of doing SSL</td>
</tr>
<tr>
  <td><b>/notls</b></td>
  <td>do not do start-TLS to encrypt the session, even with servers that support it</td>
</tr>
<tr>
  <td><b>/loser</b></td>
  <td>disable various protocol features and perform various client-side workarounds; for example, it disables the SEARCH command in IMAP and does client-side searching instead. The precise measures taken by <b>/loser</b> depend upon the protocol and are subject to change over time. <b>/loser</b> is intended for use with defective servers which do not implement the protocol specification correctly. It should be used only as a last resort since it will seriously degrade performance</td>
</tr>
</table>

For example: \n
- smtp.gmail.com:587/tls/novalidate-cert \n
- [209.85.129.111]:587/tls/novalidate-cert \n

*/
