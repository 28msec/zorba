/** \page util The "Zorba util" functions

<ul>
   <li> Table of Contents
   <ul>
     <li> \ref intro_util
     <ul>
       <li> \ref namespace_util
     </ul>
     <li> \ref signatures_util
     <ul>
      <li> \ref tidyLib
      <ul>
        <li> \ref tidy
        <li> \ref tdoc
      </ul>
     </ul>
    <li> \ref random_generation
    <ul>
      <li> \ref uuid
      <li> \ref random
    </ul>
    <li> \ref parse_util
    <li> \ref serialize_util
    <ul>
      <li> \ref serialize_to_string
    </ul>
    <li> \ref apendix_util
   </ul>
 </ul>

\section intro_util 1 Introduction
This document defines a general set of functions grouped together under "zorba-util" namespace.

\subsection namespace_util 1.1 Namespace
In order to use Zorba util functions, the module <tt>"http://www.zorba-xquery.com/zorba/util-functions"</tt> has
to be included at the beginning of a query. For example

\code
  import module namespace zorba-util = "http://www.zorba-xquery.com/zorba/util-functions";
\endcode

\section signatures_util 2 Function Signatures and Descriptions

\subsection tidyLib 2.1 Functions using Tidy library
In order to use the functions that require Tidy you have to:\n
- install Tidy either from <a href="http://tidy.sourceforge.net/#binaries" target="_blank">binaries</a> or <a href="http://tidy.sourceforge.net/#source" target="_blank">source code</a>.\n
- rebuild Zorba with ZORBA_WITH_TIDY set to ON.\n
- note that on Windows you have to set the paths to tidy/include and tidy.lib in cmake before compiling \n

\subsection tidy 2.1.1 zorba-util:tidy

\code
  declare function tidy($str          as xs:string) as item()
  declare function tidy($str          as xs:string,
                        $tidyOptions  as xs:string?) as item()
\endcode

Summary: Assuming <b>$str</b> contains a "dirty" HTML the function will return an item containing a valid XHTML version of the <b>$str</b>. \n

A complete set of options that can be set for a Tidy call can be found at <a href="http://tidy.sourceforge.net/docs/quickref.html" target="_blank">HTML Tidy Configuration Options</a> \n

By default Zorba sets these values for the following options: \n
- char-encoding=utf8 \n
- newline=LF \n
- tidy-mark=true \n
- quote-nbsp=no \n

These options can be overwritten by passing different <b>$tidyOptions</b>

\subsection ex_tidy Example:
\code
  import module namespace fn-zorba-util="http://www.zorba-xquery.com/zorba/util-functions";
  fn:string(fn-zorba-util:tidy('<title>Foo</title><p>Foo!','"newline=CRLF","doctype=omit","force-output","bare=yes"'))
\endcode

As a result: \n
- <i>newline</i> will be set to <i>CRLF</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#newline" target="_blank">newline</a>) \n
- <i>doctype</i> will be set to <i>omit</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#doctype" target="_blank">doctype</a>) \n
- <i>force-output</i> will be set to <i>true</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#force-output" target="_blank">force-output</a>) \n
- <i>bare</i> will be set to <i>true</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#bare" target="_blank">bare</a>) \n

Note: you can set a boolean parameter to true by either of the following methods: \n
- passing only the option name (like <i>force-output</i> in the above example) \n
- passing the option name and the value (like <i>bare</i> in the above example) \n

Error conditions:\n
If Tidy lib is not able to transform the given string into a valid XHTML, an error is raised XQP0029_TIDY_ERROR (see \ref apendix_util).\n

\subsection tdoc 2.1.2 zorba-util:tdoc

\code
  declare function tdoc($uri         as xs:string?) as document-node()?
  declare function tdoc($uri         as xs:string
                        $tidyOptions as xs:string?) as document-node()?
\endcode

Summary: This function is very similar to the <tt>15.5.4 fn:doc</tt> from <a href="http://www.w3.org/TR/xquery-operators/#func-doc" target="_blank">XQuery 1.0 and XPath 2.0 Functions and Operators</a> function. The only difference is that prior to parsing  and inserting the document identified by <b>$uri</b> in the store, <tt>tdoc</tt> function transforms the document into a valid XHTML document with the help of Tidy lib.\n

A complete set of options that can be set for a Tidy call can be found at <a href="http://tidy.sourceforge.net/docs/quickref.html" target="_blank">HTML Tidy Configuration Options</a> \n

By default Zorba sets these values for the following options: \n
- char-encoding=utf8 \n
- newline=LF \n
- tidy-mark=true \n
- quote-nbsp=no \n

These options can be overwritten by passing different <b>$tidyOptions</b>

\subsection ex_tdoc Example:
\code
  import module namespace  fn-zorba-util="http://www.zorba-xquery.com/zorba/util-functions";
  fn-zorba-util:tdoc('http://tidy.sourceforge.net/libintro.html','"newline=CRLF","doctype=omit","force-output","bare=yes"')
\endcode

As a result: \n
- <i>newline</i> will be set to <i>CRLF</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#newline" target="_blank">newline</a>) \n
- <i>doctype</i> will be set to <i>omit</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#doctype" target="_blank">doctype</a>) \n
- <i>force-output</i> will be set to <i>true</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#force-output" target="_blank">force-output</a>) \n
- <i>bare</i> will be set to <i>true</i> (see <a href="http://tidy.sourceforge.net/docs/quickref.html#bare" target="_blank">bare</a>) \n

Note: you can set a boolean parameter to true by either of the following methods: \n
- passing only the option name (like <i>force-output</i> in the above example) \n
- passing the option name and the value (like <i>bare</i> in the above example) \n

Error conditions:\n
If Tidy lib is not able to transform the given string into a valid XHTML, an error is raised XQP0029_TIDY_ERROR (see \ref apendix_util).\n

\subsection random_generation 2.2 Functions for generating UUID's, random integers

\subsection uuid 2.2.1 zorba-util:uuid

\code
  declare function uuid() as xs:string
\endcode

Summary: This function does not generate a DCE 1.1 variant UUIDs.\n
However please take into account that the UUID contains the time (as the number of 100-nanosecond intervals since the adoption of the Gregorian calendar in the West) at which the UUID was generated (like DCE version 1 states).\n
The UUID does not contain the MAC address of the machine used to generate it, and that is why the generated UUID's are not conformant to DCE version 1.\n

\subsection random 2.2.2 zorba-util:random

\code
  declare function random() as xs:integer
  declare function random($seed as xs:integer) as xs:integer
\endcode

Summary: Function for generating a random integer. \n
<b>$seed</b> can be used to set the starting point of the std::rand sequence. If random is called whithin a loop but diffrent numbers are expected as a result this parameter should be set. Please see the example below. \n

\code
  import module namespace zu = "http://www.zorba-xquery.com/zorba/util-functions";
  for $i in (1 to 10)
    return zu:random($i)
\endcode

If the seed is not passed as an argument the same number will be generated every time: \n

\code
  import module namespace zu = "http://www.zorba-xquery.com/zorba/util-functions";
  for $i in (1 to 10)
    return zu:random()
\endcode

\section parse_util 3 Function for parsing XML

\code
  declare function parse($doc xs:string) as document-node()?
\endcode

Summary: Loads the document given as string into the store

Error scenarios:
\verbatim
If the passed string does not have a valid XML structure, the STR0008
error is raised
\endverbatim

In the following, we demonstrate the use of the parse function.

\include util_parse2.xq

The following query:

\include util_parse1.xq

will raise [STR0008] Loader parsing error: Namespace prefix system on order
is not defined

\section serialize_util 4 Function for serialization

\code
  declare function serialize-to-string($doc as item()*) as xs:string
\endcode

Summary: This functions takes a sequence of nodes, serializes them into strings
and returns the concatenation of all strings. \n
The serialization is done with "omit-xml-declaration" parameter set to true

In the following, we demonstrate the use of the serialize-to-string function.

\include util_serialize_to_string1.xq

will output:

\include util_serialize_to_string1.xml.res

\section apendix_util Appendix A:  Error codes

  XQP0029_TIDY_ERROR - Error in Tidy library - is returned in case Tidy lib is not able to transform the given string into a valid XHTML.\n

*/
