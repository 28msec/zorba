/** \page commandline The Zorba Command Line Utility

<ul>
  <li> Table of Contents
  <ul>
    <li> \ref commandLineUsage
    <li> \ref commandLineHelp
    <li> \ref commandlineexamples
    <ul>
      <li> \ref cmdlineExample1
      <li> \ref cmdlineExample2
    </ul>
  </ul>
</ul>

\section commandLineUsage Usage
%zorba [options] [-q Inline_Query ...] or \n
%zorba [options] -f [-q Query_File ...]

\section commandLineHelp Help

\verbatim
Available options:

--timing, -t
Print timing information. In case of multiple queries the timing information is provided per each query. Both wallclock time and user time (which excludes I/O, network delays and other kernel waits) are shown.

--output-file, -o
Write the result to the given file.

--serialization-parameter, -z
Set serialization parameter in the form of a parameter=value pair (see http://www.w3.org/TR/xslt-xquery-serialization/#serparam, e.g. -z method=xhtml, -z doctype-system='DTD/xhtml1-strict.dtd', -z indent=yes).

--serialize-html
Serialize the result as HTML.

--serialize-text
Serialize the result as Text.

--indent, -i
Indent output.

--print-query
Print the queries.

--print-errors-as-xml, -x
Print the errors as XML.

--byte-order-mark
Set the byte-order-mark for the serializer.

--omit-xml-declaration, -r
Omit the XML declaration from the result.

--base-uri
Set the base URI property of the static context.

--boundary-space
Set the boundary-space policy ('strip' or 'preserve') in the static context.

--default-collation
Add the given collation and set the value of the default collation in the static context to the given collation.

--construction-mode
Set the construction mode ('strip' or 'preserve') in the static context.

--ordering-mode
Set the ordering mode ('ordered' or 'unordered') in the static context.

--multiple, -m
Execute the given queries multiple times.

--query, -q
Query test or file URI (file://...)

--as-files, -f
Treat all -q arguments as file paths instead of URIs or inline queries.

--external-variable, -e
Provide the value for a variable given a file (name=file) or a value (name:=value)

--context-item
Set the context item to the XML document in a given file.

--optimization-level
Optimization level for the query compiler (O0 or O1)

--lib-module, -l
Query compiler option to treat the query as a library module. If this is set --compile-only option is also set to true.

--parse-only
Stop after parsing the query.

--compile-only
Only compile (don't execute)

--no-serializer
Do not serialize (discard) result.

--debug-ports, -p
Specify the ports for zorba debugger. The format is requestPort:eventPort.

--debug, -d
Launch the Zorba command line debugger.

--debug-server
Launch the Zorba debugger server and wait for incomming client connections.

--debug-server-host
Set the host, on which the debugger server is run

--no-colors
Use no colors in the debugger client.

--no-logo
Print no logo when starting the debugger client or server.

--timeout
Specify a timeout in seconds. After the specified time, the execution of the query will be aborted.

--module-path
Module paths added to the built-in resolver, i.e. where module imports are looking for modules.

--install-path
The path where the modules are searched.

\endverbatim

\section commandlineexamples Examples

\subsection cmdlineExample1 Execute inline queries
This example shows the use of <tt>-t</tt>, <tt>--print-query</tt> output options and <tt>-i</tt> execute option.

Zorba command:
\verbatim
zorba -t --print-query -q "1+1" -q "fn:concat('un', 'grateful')" -q "fn:matches('abracadabra', '^a.*a$')"
\endverbatim

Output:
\verbatim
Query number 1 :
1+1
<?xml version="1.0" encoding="UTF-8"?>
2
Number of executions = 1
Compilation time: 31 milliseconds
First Execution time: 0 milliseconds (i.e. parsing the document is included)

Query number 2 :
fn:concat('un', 'grateful')
<?xml version="1.0" encoding="UTF-8"?>
ungrateful
Number of executions = 1
Compilation time: 9 milliseconds
First Execution time: 0 milliseconds (i.e. parsing the document is included)

Query number 3 :
fn:matches('abracadabra', '^a.*a$')
<?xml version="1.0" encoding="UTF-8"?>
true
Number of executions = 1
Compilation time: 8 milliseconds
First Execution time: 0 milliseconds (i.e. parsing the document is included)
\endverbatim

\subsection cmdlineExample2 Execute update queries
The purpose of this example is to demonstrate the use of <tt>-f</tt> and <tt>-e</tt> execute options.

 These are the files used in this example and their meaning:
<table border="0">
 <tr>
  <td><tt>  works-mod.xml</tt></td>
  <td>File that will be used as external variable.</td>
 </tr>
 <tr>
  <td><tt>  comandline_doc_example_2.xq</tt></td>
  <td>This is an update query. For details please see below.</td>
 </tr>
 <tr>
  <td><tt>  comandline_doc_example_2-test.xq</tt></td>
  <td>Query used to see the results of the update query. For details please see below.</td>
 </tr>
</table>

works-mod.xml :
\include works-mod.xml

comandline_doc_example_2.xq :
\include comandline_doc_example_2.xq

comandline_doc_example_2-test.xq :
\include comandline_doc_example_2-test.xq

%Zorba command:
\verbatim
zorba -e input-context=works-mod.xml -f -q comandline_doc_example_2.xq -q comandline_doc_example_2-test.xq
\endverbatim

\Note Make sure you give the correct path to the works-mod.xml, comandline_doc_example_2.xq and comandline_doc_example_2-test.xq files.
 
Expected result:
\include comandline_doc_example_2.xml

*/
