# Copyright 2006-2008 The FLWOR Foundation.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import inspect

sys.path.insert(0, '@pythonPath@')
import zorba_api
from zorba_api import SAX2ContentHandlerProxy

#
# SAX callbacks
#
# The SAX callbacks output the XML elements just as serialization would
#

def startElement(URI, LocalName, QName, attribs):
  sys.stdout.write("<" + QName)
  for i in range(0,attribs.getLength()):
    sys.stdout.write(" " + attribs.getQName(i) + "=\"" + attribs.getValue(i) + "\"")
  sys.stdout.write(">")

def endElement(URI, LocalName, QName):
  sys.stdout.write("</" + QName + ">")

def characters(chars):
  sys.stdout.write(chars)



def example_sax(zorba):
  dataManager = zorba.getXmlDataManager()
  dataManager.loadDocument("books.xml", "<books><book year=\"1980\">Book 1</book><book year=\"1981\">Book 2</book></books>")
  xquery1 = zorba.compileQuery("doc('books.xml')")
  
  proxy = SAX2ContentHandlerProxy()
  proxy.setStartElementHandler(startElement)
  proxy.setEndElementHandler(endElement)
  proxy.setCharactersHandler(characters)
  xquery1.executeSAX(proxy)
  
  return

#
# Main entry point
#

store = zorba_api.InMemoryStore_getInstance()
zorba = zorba_api.Zorba_getInstance(store)

print "Example SAX:"
example_sax(zorba)
print ""

zorba.shutdown()
zorba_api.InMemoryStore_shutdown(store)
