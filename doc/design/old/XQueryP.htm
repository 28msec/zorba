<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xml:lang="EN" lang="EN">
<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
  <title>XQueryP</title>
  <style type="text/css">
/*<![CDATA[*/
code           { font-family: monospace; }

div.constraint,
div.issue,
div.note,
div.notice     { margin-left: 2em; }

div.issue
p.title        { margin-left: -2em; }

ol.enumar      { list-style-type: decimal; }
ol.enumla      { list-style-type: lower-alpha; }
ol.enumlr      { list-style-type: lower-roman; }
ol.enumua      { list-style-type: upper-alpha; }
ol.enumur      { list-style-type: upper-roman; }

li p           { margin-top: 0.3em;
                 margin-bottom: 0.3em; }

sup small      { font-style: italic;
                 color: #8F8F8F;
               }
    
div.exampleInner pre { margin-left: 1em;
                       margin-top: 0em; margin-bottom: 0em}
div.exampleOuter {border: 4px double gray;
                  margin: 0em; padding: 0em}
div.exampleInner { background-color: #d5dee3;
                   border-top-width: 4px;
                   border-top-style: double;
                   border-top-color: #d3d3d3;
                   border-bottom-width: 4px;
                   border-bottom-style: double;
                   border-bottom-color: #d3d3d3;
                   padding: 4px; margin: 0em }
div.exampleWrapper { margin: 4px }
div.exampleHeader { font-weight: bold;
                    margin: 4px}

div.issue { border-bottom-color: black;
            border-bottom-style: solid;
            border-bottom-width: 1pt;
            margin-bottom: 20pt;
}

th.issue-toc-head { border-bottom-color: black;
                    border-bottom-style: solid;
                    border-bottom-width: 1pt;
}

      
table.small    { font-size: x-small; }

/*
   Copyright 1997-2003 W3C (MIT, ERCIM, Keio). All Rights Reserved.
   The following software licensing rules apply:
   http://www.w3.org/Consortium/Legal/copyright-software */

/* $Id: base.css,v 1.25 2006/04/18 08:42:53 bbos Exp $ */

body {
  padding: 2em 1em 2em 70px;
  margin: 0;
  font-family: sans-serif;
  color: black;
  background: white;
  background-position: top left;
  background-attachment: fixed;
  background-repeat: no-repeat;
}
:link { color: #00C; background: transparent }
:visited { color: #609; background: transparent }
a:active { color: #C00; background: transparent }

a:link img, a:visited img { border-style: none } /* no border on img links */

a img { color: white; }        /* trick to hide the border in Netscape 4 */
@media all {                   /* hide the next rule from Netscape 4 */
  a img { color: inherit; }    /* undo the color change above */
}

th, td { /* ns 4 */
  font-family: sans-serif;
}

h1, h2, h3, h4, h5, h6 { text-align: left }
/* background should be transparent, but WebTV has a bug */
h1, h2, h3, h4 { color: #A00030; background: white }
h1 { font: 170% sans-serif }
h2 { font: 140% sans-serif }
h3 { font: 120% sans-serif }
h4 { font: bold 100% sans-serif }
h5 { font: italic 100% sans-serif }
h6 { font: small-caps 100% sans-serif }

.hide { display: none }

div.head { margin-bottom: 1em }
div.head h1 { margin-top: 2em; clear: both }
div.head table { margin-left: 2em; margin-top: 2em }

p.copyright { font-size: small }
p.copyright small { font-size: small }

@media screen {  /* hide from IE3 */
a[href:hover { background: #ffa }
}

pre { margin-left: 2em }
/*
p {
  margin-top: 0.6em;
  margin-bottom: 0.6em;
}
*/
dt, dd { margin-top: 0; margin-bottom: 0 } /* opera 3.50 */
dt { font-weight: bold }

pre, code { font-family: monospace } /* navigator 4 requires this */

ul.toc, ol.toc {
  list-style: disc;  /* Mac NS has problem with 'none' */
  list-style: none;
}

@media aural {  
  h1, h2, h3 { stress: 20; richness: 90 }
  .hide { speak: none }
  p.copyright { volume: x-soft; speech-rate: x-fast }
  dt { pause-before: 20% }
  pre { speak-punctuation: code } 
}



body {
  background-image: url(http://www.zorba.org/StyleSheets/TR/logo-WD);
}

/**/]]>

  </style>
</head>

<body>

<div class="head">
<p><a href="http://www.zorba.org/"><img width="72" height="48" alt="Zorba"
src="http://www.zorba.org/Icons/zorba_home" />
</a></p>

<h1><a id="title" name="title"></a>XQueryP</h1>
<h4>FLWOR Foundation Proposal, Dec. 22, 2006</h4>
<dl>
  <dt>This version:</dt>
    <dd><a
      href="http://www.zorba.org/TR/2006/WD-xqueryp-20061215/">http://www.flworfound.org/pubs/2006/WD-xqueryp-20061215/</a></dd>
  <dt>Latest version:</dt>
    <dd><a
      href="http://www.zorba.org/TR/xqueryp/">http://www.flworfound.org/pubs/xqueryp/</a></dd>
  <dt>Previous version:</dt>
    <dd></dd>
  <dt>Editors:</dt>
    <dd>Don Chamberlin, IBM Almaden Research Center <a
      href="mailto:chamberlin@almaden.ibm.com">&lt;chamberlin@almaden.ibm.com&gt;</a></dd>
    <dd>MIchael Carey, BEA Systems <a
      href="mailto:mcarey@bea.com">&lt;mcarey@bea.com&gt;</a></dd>
    <dd>Daniela Florescu, Oracle Corporation <a
      href="mailto:dana.florescu@oracle.com">&lt;dana.florescu@oracle.com&gt;</a></dd>
    <dd>Donald Kossmann, ETH Zurich <a
      href="mailto:">&lt;kossmann@inf.ethz.ch&gt;</a></dd>
    <dd>Paul Pedersen, FLWOR Foundation <a
      href="mailto:pcp071098@yahoo.com">&lt;pcp071098@yahoo.com&gt;</a></dd>
    <dd>Jonathan Robie, Data Direct <a
      href="mailto:jonathan.robie@datadirect.com">&lt;jonathan.robie@datadirect.com&gt;</a></dd>
</dl>

<p class="copyright"><a
href="http://www.zorba.org/Consortium/Legal/ipr-notice#Copyright">Copyright</a> © 2006 <a
href="http://www.zorba.org/"><acronym title="World Wide Web Consortium">FLWOR
Foundation</acronym></a><sup>®</sup>, All Rights Reserved.</p>
</div>
<hr />

<div>
<h2><a id="abstract" name="abstract"></a>Abstract</h2>

<p>This document defines an extension of the XML Query language, <a
href="">XQuery 1.0</a>. The XQueryP language provides procedular extension to
XQuery that permit the language to be used as an effective Web application
programming platform.</p>
</div>

<div>
<h2><a id="status" name="status"></a>Status of this Document</h2>

<p><em>This section describes the status of this document at the time of its
publication. Other documents may supersede this document. A list of current
Zorba publications and the latest revision of this technical report can be
found in the <a href="http://www.zorba.org/TR/">Zorba technical reports
index</a> at http://www.zorba.org/TR/.</em></p>

<p>This document is designed to be read in conjunction with the following
documents:</p>
<ul>
  <li><p><a href="#xquery">[XQuery 1.0]</a></p>
  </li>
  <li><p><a href="#xqupdate">[XQuery Update Facility]</a></p>
  </li>
  <li><p><a href="#xqfulltext">[XQuery 1.0 Full-Text]</a></p>
  </li>
</ul>
</div>

<div class="toc">
<h2><a id="contents" name="contents"></a>Table of Contents</h2>

<p class="toc">1 <a href="#introduction">Introduction</a><br />
2 <a href="#id-extensions">Extensions to XQuery 1.0</a><br />
    2.1 <a href="#id-processing-model">Extensions to the Processing
Model</a><br />
    2.2 <a href="#id-prolog-extensions">Extensions to the Prolog</a><br />
    2.3 <a href="#id-new-expressions">New Kinds of Expressions</a><br />
        2.3.1 <a href="#id-insert">Blocks</a><br />
        2.3.2 <a href="#id-delete">Assignment</a><br />
        2.3.3 <a href="#id-replace">While</a><br />
        2.3.4 <a href="#id-rename">Try-catch</a><br />
    2.4 <a href="#id-extensions-to-existing">Extensions to Existing
Expressions</a><br />
        2.4.1 <a href="#id-flwor-expr">FLWOR Expression</a><br />
        2.4.2 <a href="#id-typeswitch-expr">Typeswitch
Expression</a><br />
        2.4.3 <a href="#id-typeswitch-expr">Conditional
Expression</a><br />
        2.4.4 <a href="#id-typeswitch-expr">Comma Expression</a><br />
        2.4.5 <a href="#id-typeswitch-expr">Parenthesized
Expression</a><br />
        2.4.6 <a href="#id-function-call">Function Declaration</a><br
/>
        2.4.7 <a href="#id-function-call">Function Call</a><br />
        2.4.8 <a href="#id-function-call">Other Expressions</a><br />
    2.5 <a href="#id-new-functions">Extensions to Built-in Function
Library</a><br />
        2.5.1 <a href="#id-func-put">fn:set</a><br />
3 <a href="#id-update-operations">Sequential Execution Mode</a><br />
  </p>

<h3><a id="appendices" name="appendices"></a>Appendices</h3>

<p class="toc">A <a href="#id-grammar">EBNF for XQueryP Grammar</a><br />
B <a href="#References">References</a><br />
C <a href="#id-errors">Error Conditions</a><br />
D <a href="#id-glossary">Glossary</a><br />
E <a href="#id-revisions-log">Revision Log</a><br />
<br />
</p>
</div>
<hr />

<div class="body">

<div class="div1">
<h2><a id="introduction" name="introduction"></a>1 Introduction</h2>

<p>This document defines the syntax and semantics of XQueryP, an extension to
<a href="#xquery">XQuery 1.0</a>. This language extension provides
procedural programming facilities intended to make XQueryP into a simple and
powerful Web application programming environment.</p>

<p>[<a title="XQuery" id="dt-xquery" name="dt-xquery">Definition</a>: Within
this document, the term <b>XQuery</b> refers to the language specified by <a
href="#xquery">XQuery 1.0</a>, <a href="#xqupdate">XQuery 1.0 Update
Facility</a>, and <a href="#xqfulltext">XQuery 1.0 and XPath 2.0
Full-Text</a>.]</p>

<p>[<a title="data model" id="dt-data-model"
name="dt-data-model">Definition</a>: The term <b>data model</b> refers to the
data model specified by <a href="#datamodel">XQuery 1.0 and XPath 2.0 
Data Model (XDM)</a>.]</p>

<p>[<a title="XDM instance" id="dt-xdm-instance"
name="dt-xdm-instance">Definition</a>: The term <b>XDM instance</b> denotes
an unconstrained sequence of zero or more nodes and/or atomic values as
defined by the <a title="data model" href="#dt-data-model">data
model</a>.]</p>
</div>

<div class="div1">
<h2><a id="id-extensions" name="id-extensions"></a>2 Extensions to XQuery
1.0</h2>

<p>An <a title="XQuery 1.0" href="#dt-xquery">XQuery 1.0</a> expression takes
one or more <a title="XDM instance" href="#dt-xdm-instance">XDM instances</a>
as input and returns an <a title="XDM instance" href="#dt-xdm-instance">XDM
instance</a> as a result. In XQuery 1.0, an expression never modifies the
state of an existing node; however, constructor expressions create new nodes
with new identities.</p>

<p>The <a title="XQuery Update" href="#dt-xqupdate">XQuery Update
Facility</a> introduces a new category of expression called <a
title="updating expression" href="#dt-updating-expression">updating
expressions</a>, which can modify the state of an existing node.</p>

<p>The <a title="XQuery 1.0 Full-Text" href="#td-xqfulltext/">XQuery
Full-Text Extension</a> defines a set of expressions and an extended data
model (tokenized text), which can be used for full-text and text-structural
searches over collections of XML documents.</p>

<p>The goal of the XQueryP proposal is to define the smallest extension to
XQuery that makes development of XML applications reasonably feasible.</p>

<p>The extensions to XQuery 1.0 provided by XQueryP may be characterized as
follow:</p>
<ol>
  <li><a href="#id-sequential">sequential execution mode</a>: an ordering of 
    sub-expression in the XQuery expression tree that determines the ordering 
    of side-effects,</li>
  <li><a href="#id-block">blocks</a>: an expression with explicit sequential
    ordering,</li>
  <li><a href="#id-assignment">assignments</a>: dynamic binding of variables
    to values,</li>
  <li><a href="#id-while">while expressions</a>: the standard procedural
    control-flow primitive,
  and</li>
  <li><a href="#id-try-catch">try-catch expressions</a>: exception handling.</li>
</ol>

<div class="div2">
<h3><a id="id-processing-model" name="id-processing-model"></a>2.1 Extensions
to the Processing Model</h3>

<p>In XQuery, as in SQL, data is passed from one expression to another by
physical nesting of expressions. Side effects are saved on "pending update
lists" and made effective only as the last step in the query processing. As a
result, the side effects of one expression cannot be seen by other
expressions. This approach does not scale well to complex applications.
Application development would be made easier by the notion od a "state" that
could be modified by successive updating expressions. The idea of a state,
represented by a set of variables, is a natural extension of XQuery, since
the language already has variables that are bound by various kinds of
expressions such as for, let, some, and every.</p>

<p>The XQuery Update Facility defines an internal "apply" operation that
makes updates visible, and invokes this operation at the root of the
expression tree. If the "apply" operation were invoked at earlier stages in
query processing, expressions would be able to see the side effects of other
expressions. In order to make the result well-defined, it would be necessary
to define an ordering on the evaluation of expressions in the expression
tree. We propose to define such an ordering and to make it effective by means
of a prolog declaration called an execution declaration. In the absence of an
execution declaration, the semantics of XQuery are exactly as specified by
XQuery 1.0 and the XQuery Update Facility. If an execution declaration is
present, the query is said to be in sequential mode, and a sequential
ordering is defined on the expression tree. The semantics of updating
expressions are changed to invoke the "apply" operation immediately rather
than returning a pending update list. In sequential mode, each expression can
see the side effects of previous expressions. In sequential mode, the effect
of evaluating an expression tree must be the same as though the expressions
were evaluated in sequential order. If none of the expressions have side
effects, sequential mode is not relevant, and all the optimizations available
in XQuery 1.0 still apply. In the presence of side effects, the evaluation
order of expressions is effectively constrained by the interdependencies
among the expressions, which can be detected by standard data-flow
optimization techniques.</p>
</div>

<div class="div2">
<h3><a id="id-prolog-extensions" name="id-prolog-extensions"></a>2.2
Extensions to the Prolog</h3>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-Setter"
      name="doc-xqueryp-Setter"></a>[7]   </td>
      <td><code><a href="#prod-xqueryp-Setter">Setter</a></code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-BoundarySpaceDecl">BoundarySpaceDecl</a> | <a
        href="#prod-xqueryp-DefaultCollationDecl">DefaultCollationDecl</a> |
        <a href="#prod-xqueryp-BaseURIDecl">BaseURIDecl</a> | <a
        href="#prod-xqueryp-ConstructionDecl">ConstructionDecl</a> | <a
        href="#prod-xqueryp-OrderingModeDecl">OrderingModeDecl</a> | <a
        href="#prod-xqueryp-EmptyOrderDecl">EmptyOrderDecl</a> | <a
        href="#prod-xqueryp-CopyNamespacesDecl">CopyNamespacesDecl</a> | <a
        href="#prod-xqueryp-RevalidationDecl">RevalidationDecl</a><br />
        | <a
        href="#doc-xqueryp-ExecutionDecl"><em>ExecutionDecl</em></a></code>

        <p></p>
      </td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-ExecutionDecl"
        name="doc-xqueryp-ExecutionDecl"></a>[141]   </td>
      <td><code><a
        href="#prod-xqueryp-RevalidationDecl">ExecutionDecl</a></code></td>
      <td>   ::=   </td>
      <td><code>"declare" "execution" ("sequential" | "default")</code></td>
    </tr>
  </tbody>
</table>

<p>The Prolog is extended by adding a new kind of <a
href="#doc-xqueryp-Setter">Setter</a> called an execution declaration.</p>

<p>[<a title="execution declaration" id="dt-execution-decl"
name="dt-execution-decl">Definition</a>: The <b>execution declaration</b>
sets the <a title="execution mode" href="#dt-execution-mode">execution
mode</a> in the static context, overriding any implementation-defined
default.]</p>

<p>[<a title="executioon mode" id="dt-execution-mode"
name="dt-execution-mode">Definition</a>: <b>Execution mode</b>, which may be
set to <code>sequential</code> or <code>default</code>, is a component of the
static context that imposes a sequential ordering on the evaluation of XQuery
expressions, including updates.]</p>

<p>The value of execution mode is determined as follows:</p>
<ul>
  <li><p>Default initial value: <code>default</code>.</p>
  </li>
  <li><p>Can be overwritten by an implementation: Yes</p>
  </li>
  <li><p>Scope: Global.</p>
  </li>
  <li><p>Consistency rules: Must be <code>sequential</code> or
    <code>default</code>.</p>
  </li>
</ul>

<p>In sequential mode a sequential ordering is defined on the XQuery
expression tree. The semantics of updating expressions are changed to invoke
the "apply" operation immediately rather than returning a pending update
list. In sequential mode, each expression can see the effects of previous
expressions in the same module.</p>
</div>

<p>In sequential mode, the effect of evaluating an expression tree must be
the same as though the expression were evaluated in sequential order. If none
of the sub-expressions have side-effects, then sequential mode is neutral.</p>

<p>The evaluation order of expressions in sequential mode is defined as
follows:</p>
<ul>
  <li>FLWOR: The for let where and order-by clauses are evaluated first, in
    order of appearance, generating a tuple-stream. The n the return clause
    is evaluated multiple times in the order of the tuple stream, and "apply"
    is invoked after each evaluation.</li>
  <li>if-then-else: The if-clause is evaluated first. Next, either the
    then-clause or the else-clause (bit nbot both) is evaluated.</li>
  <li>typeswitch: The switch-expression is evaluated first. The exactly one
    of the return-clauses is evaluated.</li>
  <li>transform: No change to existing semantic is needed. The copy-clause is
    evaluated first, then the modify-clause is evaluated and applied, then
    the return-clause is evaluated.</li>
  <li>comma: Operand expressions are evaluated from left to right, and
    "apply" is invoked after each.</li>
  <li>function call: Argument expressions are evaluated before the function
    body.</li>
</ul>

<div class="div2">
<h3><a id="id-new-expressions" name="id-new-expressions"></a>2.3 New Kinds of
Expressions</h3>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-PrimaryExpr"
        name="doc-xqueryp-PrimaryExpr"></a>[84]   </td>
      <td><code><a
      href="#prod-xqueryp-PrimaryExpr">PrimaryExpr</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Literal">Literal</a><br />
        | <a href="#prod-xqueryp-VarRef">VarRef</a><br />
        | <a href="#doc-xqueryp-ParenthesizedExpr">ParenthesizedExpr</a><br />
        | <a href="#prod-xqueryp-ContextItemExpr">ContextItemExpr</a><br />
        | <a href="#doc-xqueryp-FunctionCall">FunctionCall</a><br />
        | <a href="#doc-xqueryp-OrderedExpr">OrderedExpr</a><br />
        | <a href="#doc-xqueryp-UnorderedExpr">UnorderedExpr</a><br />
        | <a href="#doc-xqueryp-Constructor">Constructor</a><br />
        | <a href="#doc-xqueryp-Block"><span
        style="font-style: italic">Block</span></a></code>

        <p></p>
      </td>
    </tr>
  </tbody>
</table>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-ExprSingle"
        name="doc-xqueryp-ExprSingle"></a>[32]   </td>
      <td><code><a href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-FLWORExpr">FLWORExpr</a><br />
        | <a href="#prod-xqueryp-QuantifiedExpr">QuantifiedExpr</a><br />
        | <a href="#doc-xqueryp-TypeswitchExpr">TypeswitchExpr</a><br />
        | <a href="#prod-xqueryp-IfExpr">IfExpr</a><br />
        | <a href="#doc-xqueryp-OrExpr">OrExpr</a><br />
        | <a href="#doc-xqueryp-InsertExpr">InsertExpr</a><br />
        | <a href="#doc-xqueryp-DeleteExpr">DeleteExpr</a><br />
        | <a href="#doc-xqueryp-RenameExpr">RenameExpr</a><br />
        | <a href="#doc-xqueryp-ReplaceExpr">ReplaceExpr</a><br />
        | <a href="#doc-xqueryp-TransformExpr">TransformExpr</a><br />
        | <a href="#doc-xqueryp-AssignExpr"><span
        style="font-style: italic">AssignExpr</span></a> | <a
        href="#doc-xqueryp-WhileExpr"><span
        style="font-style: italic">WhileExpr</span></a> | <a
        href="#doc-xqueryp-TryCatchExpr"><span
        style="font-style: italic">TryCatchExpr</span></a></code></td>
    </tr>
  </tbody>
</table>

<p>XQueryP extends the syntax of <a
href="#doc-xqueryp-PrimaryExpr">PrimaryExpr</a> by adding a
<code>Block</code> expression. XQueryP extends the syntax of <a
href="#doc-xqueryp-ExprSingle">ExprSingle</a> by adding three new types of
expression: <code>AssignExpr</code>, <code>WhileExpr</code> and
<code>TryCatchExpr</code>. The syntax and semantics of these expressions are
described in the following sections.</p>

<div class="div3">
<h4><a id="id-block" name="id-block"></a>2.3.1 Block</h4>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-block"
      name="doc-xqueryp-Block"></a>[401]   </td>
      <td><code><a href="#prod-xqueryp-Block">Block</a></code></td>
      <td>   ::=   </td>
      <td><code>"{" (<a href="#doc-xqueryp-BlockDecl">BlockDecl</a> ";" )* <a
        href="#doc-xqueryp-Expr">Expr</a> (";" <a
        href="#doc-xqueryp-Expr">Expr</a>)* "}"</code></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-BlockDecl"
        name="doc-xqueryp-BlockDecl"></a>[402]   </td>
      <td><code><a href="#prod-xqueryp-BlockDecl">BlockDecl</a></code></td>
      <td>   ::=   </td>
      <td><code>"declare" "$" <a href="#doc-xqueryp-VarName">VarName</a> <a
        href="#doc-xqueryp-VarName">TypeDeclaration</a>? (":=" <a
        href="#doc-xqueryp-ExprSingle">ExprSingle</a>)? ("," "$" <a
        href="#doc-xqueryp-VarName">VarName</a> <a
        href="#doc-xqueryp-VarName">TypeDeclaration</a>? (":=" <a
        href="#doc-xqueryp-ExprSingle">ExprSingle</a>)? )*</code></td>
    </tr>
  </tbody>
</table>

<p>Example:</p>
<ul>
  <li>The following example illustrates usage of a block. The example
    increases the price of all items in a catalog whose price is less than
    100 by ten percent, and returns the updated items. It is often desirable
    for an expression to both update an element and return it (or some value
    computed from it), both for efficiency and because it might (as in this
    case) be impossible to find the updated elements by a subsequent query.

    <div class="exampleInner">
    <pre>for $item in /catalog/item[price &lt; 100]
return
{do replace value of $item/price with $item/price * 1.1; $item}</pre>
    </div>
  </li>
</ul>

<p>A block may contain a mixture of updating and non-updating expressions. In
common usage, it is expected that all the expressions in a block, possibly
excepting the final one, will be updating expressions. A block is defined to
be an updating expression if any of its contained expressions is an updating
expression. Inside a block, the syntax and semantics of a declaration are
very similar to those of a let-clause in a FLWOR expression. Each declaration
names one or more variables and can provide a type and an initializing
expression for each variable.</p>

<p>The semantics of a block expression are as follows:</p>
<ol class="enumar">
  <li>If execution mode is not sequential, a block raises a static error. If
    execution mode is sequential, the declarations (if any) are processed in
    order, bringing new variables into scope inside the block.</li>
  <li>The expressions are evaluated from left to right, with the side effects
    of each expression made effective immediately.</li>
  <li>The results of all the expressions except the last one are ignored. The
    result of the last expression is returned as the result of the block.</li>
  <li>The individual variable declarations are processed in order from left
    to right.</li>
  <li>For each variable declaration, the initializing expression (if any)
    must be a non-updating expression, and its type must match the declared
    type (using the rules for SequenceType matching).</li>
  <li>The initializing expression (if any) isevaluated and the resulting
    value is bound to the declared variable.</li>
  <li>The scope of each declared variable is the remainder of the block,
    including the initializing expressions of subsequent declared variables,
    but not including its own initializing expression.</li>
  <li>Each variable declaration occludes any existing inscope variable with
    the same name.</li>
  <li>If a declaration inside a block does not specify a type for a variable,
    the implicit type of the variable is xs:anyType.</li>
  <li>If a declaration does not specify an initializing expression for a
    variable, the variable is not bound to a value. Any reference to such a
    variable (other than on the left-hand-side of an assignment expression,
    as described in the next section) is a dynamic error.</li>
</ol>
</div>

<div class="div3">
<h4><a id="id-assignment" name="id-assignment"></a>2.3.2 Assignment</h4>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-AssignExpr"
        name="doc-xqueryp-AssignExpr"></a>[403]   </td>
      <td><code><a href="#prod-xqueryp-AssignExpr">AssignExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"set" "$" <a href="#doc-xqueryp-VarName">VarName</a> ":=" <a
        href="#doc-xqueryp-ExprSingle">ExprSingle</a></code></td>
    </tr>
  </tbody>
</table>

<p>Assignment expressions bind variables to values. They allow different
parts of a computation to exchange information through side effects rather
than by returning values. Like the insert, delete, replace, and rename
expressions, theassignment expression is an updating expression that returns
an empty sequence.</p>

<p>Example:</p>
<ul>
  <li>The following example illustrates the use of a block containing an
    assignment expression. The example generates a list of project elements
    in document order, showing the individual cost and cumulative cost of
    each project in the year 2005.

    <div class="exampleInner">
    <pre>{ declare $total-cost as xs:decimal := 0;
  for $p in /project[year eq 2005]
  return 
  { set $total-cost := $total-cost + $p/cost; 
    &lt;project&gt; 
      &lt;name&gt;{$p/name}&lt;/name&gt;
      &lt;cost&gt;{$p/cost}&lt;/cost&gt;
      &lt;cumulative-cost&gt;{$total-cost}&lt;/cumulative-cost&gt; 
    &lt;/project&gt; 
  }
}</pre>
    </div>
  </li>
</ul>

<p>The semantics of an assignment expression are as follows:</p>
<ol>
  <li>If execution mode is not sequential, a static error is raised.</li>
  <li>If execution mode is sequential, the variable named on the
    lefthand-side of the assignment expression must have been declared in the
    query prolog or in a containing block, and must not have been overridden
    by a variable binding in a for-clause, let-clause, typeswitch, or
    quantified expression.</li>
  <li>The expression on the right-hand side of the assignment expression must
    be a non-updating expression, and its type must match the type of the
    variable on the left-hand-side, using the rules for SequenceType
  matching.</li>
  <li>The right-hand-side expression is evaluated and the resulting value is
    bound to the named variable, replacing its existing value (if any).</li>
</ol>
</div>

<p></p>

<div class="div3">
<h4><a id="id-while" name="id-while"></a>2.3.3 While Expression</h4>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-WhileExpr"
      name="doc-xqueryp-WhileEXpr"></a>[404]   </td>
      <td><code><a href="#prod-xqueryp-While">WhileExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"while" "(" <a href="#doc-xqueryp-TestExpr">TestExpr</a> ")"
        "return" <a href="#doc-xqueryp-BodyExpr">BodyExpr</a></code></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-TestExpr"
        name="doc-xqueryp-TestExpr"></a>[405]   </td>
      <td><code><a href="#prod-xqueryp-TestExpr">TestExpr</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#doc-xqueryp-ExprSingle">ExprSingle</a></code></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-BodyExpr"
        name="doc-xqueryp-BodyExpr"></a>[406]   </td>
      <td><code><a href="#prod-xqueryp-BodyExpr">BodyExpr</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#doc-xqueryp-ExprSingle">ExprSingle</a></code></td>
    </tr>
  </tbody>
</table>

<p>A FLWOR expression iterates over a predefined set of values. In sequential
mode, successive iterations may see a different dynamic context, and there is
a need to terminate an iteration based on the dynamic context. This is
accomplished by introducing a new iterator called a while expression.</p>

<p>Example:</p>
<ul>
  <li>The following example ...

    <div class="exampleInner">
    <pre>while ( ... ) return ...</pre>
    </div>
  </li>
</ul>

<p>The semantics of a while expression are as follows:</p>
<ol>
  <li>If execution mode is not sequential, a static error is raised.</li>
  <li>The test expression must not be an updating expression.</li>
  <li>The test expression is evaluated. The following two-step process is
    then repeated as long as the effective boolean value of the test
    expression is true:
    <p>• The body expression is evaluated and its side effects are made
    effective.</p>
    <p>• The test expression is re-evaluated.</p>
  </li>
  <li>The result of a while expression is the concatenation of all the values
    returned by its body expression, in iteration order.</li>
  <li>A while expression is an updating expression if its body expression is
    an updating expression; otherwise it is a non-updating expression.</li>
</ol>
</div>

<p></p>

<div class="div3">
<h4><a id="id-trycatch" name="id-trycatch"></a>2.3.4 Try-catch Expression</h4>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-TryCatchExpr"
      name="doc-xqueryp-TryCatchEXpr"></a>[407]   </td>
      <td><code><a href="#prod-xqueryp-TryCatchExpr">TryCatchExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"try" "(" <a href="#doc-xqueryp-TryExpr">TryExpr</a> ")"
        "catch" <a href="#doc-xqueryp-BodyExpr">CatchExpr</a></code></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-TryExpr"
        name="doc-xqueryp-TryExpr"></a>[408]   </td>
      <td><code><a href="#prod-xqueryp-TryExpr">TryExpr</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#doc-xqueryp-ExprSingle">ExprSingle</a></code></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-CatchExpr"
        name="doc-xqueryp-CatchExpr"></a>[409]   </td>
      <td><code><a href="#prod-xqueryp-CatchExpr">CatchExpr</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#doc-xqueryp-ExprSingle">...</a></code></td>
    </tr>
  </tbody>
</table>

<p>.</p>

<p>Example:</p>
<ul>
  <li>The following example ...

    <div class="exampleInner">
    <pre>try ( ... ) catch ...</pre>
    </div>
  </li>
</ul>

<p>The semantics of a try-catch expression are as follows:</p>
<ol>
  <li>.</li>
  <li>.</li>
</ol>
</div>


<div class="div2">
<h3><a id="id-extensions-to-existing"
name="id-extensions-to-existing"></a>2.4 Extensions to Existing
Expressions</h3>

<p>XQueryP provides extensions to the semantics of several existing kinds of
XQuery expressions, as specified in this section.</p>

<div class="div3">
<h4><a id="id-flwor-expr" name="id-flwor-expr"></a>2.4.1 FLWOR Expression</h4>

<p>The syntax of the FLWOR expression is not changed. Its semantics are
extended as follows:</p>
<ol class="enumar">
  <li>If ..</li>
</ol>

<p>The following example .. :</p>
<ul>
  <li>Update ..

    <div class="exampleInner">
    <pre>for $p in ..</pre>
    </div>
  </li>
</ul>
</div>

<div class="div3">
<h4><a id="id-typeswitch-expr" name="id-typeswitch-expr"></a>2.4.2 Typeswitch
Expression</h4>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-TypeswitchExpr"
        name="doc-xqueryp-TypeswitchExpr"></a>[43]   </td>
      <td><code><a
        href="#prod-xqueryp-TypeswitchExpr">TypeswitchExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"typeswitch" "(" <a href="#prod-xqueryp-Expr">Expr</a> ")" <a
        href="#doc-xqueryp-CaseClause">CaseClause</a>+ "default" ("$" <a
        href="#prod-xqueryp-VarName">VarName</a>)? "return" <a
        href="#doc-xqueryp-ExprSingle">ExprSingle</a></code></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-CaseClause"
        name="doc-xqueryp-CaseClause"></a>[44]   </td>
      <td><code><a href="#prod-xqueryp-CaseClause">CaseClause</a></code></td>
      <td>   ::=   </td>
      <td><code>"case" ("$" <a href="#prod-xqueryp-VarName">VarName</a>
        "as")? <a href="#prod-xqueryp-SequenceType">SequenceType</a> "return"
        <a href="#doc-xqueryp-ExprSingle">ExprSingle</a></code></td>
    </tr>
  </tbody>
</table>

<p>The syntax of the typeswitch expression is unchanged. Its semantics are
extended as follows (the term "branch" refers to any <code>case</code> or
<code>default</code> clause in the typeswitch expression):</p>
<ol class="enumar">
  <li>If ..</li>
</ol>
</div>

<div class="div3">
<h4><a id="id-conditional-expr" name="id-conditional-expr"></a>2.4.3
Conditional Expression</h4>

<p>The semantics of conditional expressions are extended as follows (the term
"branch" refers to the <code>then</code> and <code>else</code> clauses in the
conditional expression):</p>
<ol class="enumar">
  <li>If ..</li>
</ol>

<p>The following example illustrates .. :</p>
<ul>
  <li>If the ..

    <div class="exampleInner">
    <pre>if ..</pre>
    </div>
  </li>
</ul>
</div>

<div class="div3">
<h4><a id="id-comma-expr" name="id-comma-expr"></a>2.4.4 Comma Expression</h4>

<p>The semantics of comma expressions (composed of one or more expressions
concatenated by the comma operator, as described in Section 3.3.1 of <a
href="#xquery">[XQuery 1.0]</a>) are extended as follows:</p>
<ol class="enumar">
  <li>If ..</li>
</ol>

<p>The following example illustrates ..</p>
<ul>
  <li>This example ..

    <div class="exampleInner">
    <pre>let ..</pre>
    </div>
  </li>
</ul>
</div>

<div class="div3">
<h4><a id="id-parenthesized-expr" name="id-parenthesized-expr"></a>2.4.5
Parenthesized Expression</h4>

<p>The semantics of a parenthesized expression (any XQuery expression
enclosed in parentheses) are extended as follows:</p>
<ol>
  <li>If ..</li>
</ol>
</div>

<div class="div3">
<p>The following example illustrates ..</p>
<ul>
  <li>This example ..

    <div class="exampleInner">
    <pre>let ..</pre>
    </div>
  </li>
</ul>

<h4>2.4.6 Function Declaration</h4>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="doc-xqueryp-FunctionDecl"
        name="doc-xqueryp-FunctionDecl"></a>[26]   </td>
      <td><code><a
      href="#prod-xqueryp-FunctionDecl">FunctionDecl</a></code></td>
      <td>   ::=   </td>
      <td><code>"declare" "updating"? "function" <a
        href="#prod-xqueryp-QName">QName</a> "(" <a
        href="#prod-xqueryp-ParamList">ParamList</a>? ")" ("as" <a
        href="#prod-xqueryp-SequenceType">SequenceType</a>)? (<a
        href="#prod-xqueryp-EnclosedExpr">EnclosedExpr</a> |
        "external")</code></td>
    </tr>
  </tbody>
</table>

<p>The syntax of a function declaration is ..</p>

<p>The following example ..</p>
<ul>
  <li>This function ..

    <div class="exampleInner">
    <pre>declare ..</pre>
    </div>
  </li>
</ul>
</div>

<div class="div3">
<h4><a id="id-function-call" name="id-function-call"></a>2.4.7 Function
Call</h4>

<p>The semantics of a function call are extended as follows:</p>

<p>The function call is evaluated as specified in Section 3.1.5 of <a
href="#xquery">[XQuery 1.0]</a>. If any input parameter of the function <a
title="updating expression" href="#dt-updating-expression">.</a>.</p>
</div>

<div class="div3">
<h4><a id="id-other-expr" name="id-other-expr"></a>2.4.8 Other
Expressions</h4>

<p>The semantics of all XQuery expressions other than FLWOR expressions,
typeswitch expressions, conditional expressions, comma expressions,
parenthesized expressions, and function calls are extended as follows:</p>

<p>..</p>
</div>
</div>

<div class="div2">
<h3><a id="id-new-functions" name="id-new-functions"></a>2.5 Extensions to
Built-in Function Library</h3>

<p>XQuery Update Facility provides extensions to XQuery built-in function
library, as specified in this section.</p>

<div class="div3">
<h4><a id="id-func-put" name="id-func-put"></a>2.5.1 fn:set</h4>

<div class="exampleOuter">

<div class="proto">
<code class="function">fn:set</code>(<code class="arg">$node</code><code
class="as"> as </code><code class="type">node()</code>)</div>

<p>Summary: Stores a</p>

<p>Implementations may provide user-defined error handling options that allow
processing to continue following an error in storing a resource.</p>
</div>
</div>
</div>
</div>

<div class="div1">
<h2><a id="id-sequential" name="id-sequential"></a>3 Sequential
Execution Mode</h2>

<p>This section describes sequential execution mode.</p>
</div>
</div>

<div class="back">

<div class="div1">
<h2><a id="id-grammar" name="id-grammar"></a>A EBNF for XQuery 1.0 Grammar
with XQueryP extensions</h2>

<p>The EBNF in this document and in this section is aligned with the current
XML Query 1.0 grammar (see <a href="#xquery">[XQuery 1.0]</a>).</p>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Module"
      name="prod-xqueryp-Module"></a>[1]   </td>
      <td><code>Module</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-VersionDecl">VersionDecl</a>? (<a
        href="#prod-xqueryp-LibraryModule">LibraryModule</a> | <a
        href="#prod-xqueryp-MainModule">MainModule</a>)</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-VersionDecl"
        name="prod-xqueryp-VersionDecl"></a>[2]   </td>
      <td><code>VersionDecl</code></td>
      <td>   ::=   </td>
      <td><code>"xquery" "version" <a
        href="#prod-xqueryp-StringLiteral">StringLiteral</a> ("encoding" <a
        href="#prod-xqueryp-StringLiteral">StringLiteral</a>)? <a
        href="#prod-xqueryp-Separator">Separator</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-MainModule"
        name="prod-xqueryp-MainModule"></a>[3]   </td>
      <td><code>MainModule</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Prolog">Prolog</a> <a
        href="#prod-xqueryp-QueryBody">QueryBody</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-LibraryModule"
        name="prod-xqueryp-LibraryModule"></a>[4]   </td>
      <td><code>LibraryModule</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-ModuleDecl">ModuleDecl</a> <a
        href="#prod-xqueryp-Prolog">Prolog</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ModuleDecl"
        name="prod-xqueryp-ModuleDecl"></a>[5]   </td>
      <td><code>ModuleDecl</code></td>
      <td>   ::=   </td>
      <td><code>"module" "namespace" <a
        href="#prod-xqueryp-NCName">NCName</a> "=" <a
        href="#prod-xqueryp-URILiteral">URILiteral</a> <a
        href="#prod-xqueryp-Separator">Separator</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Prolog"
      name="prod-xqueryp-Prolog"></a>[6]   </td>
      <td><code>Prolog</code></td>
      <td>   ::=   </td>
      <td><code>((<a
        href="#prod-xqueryp-DefaultNamespaceDecl">DefaultNamespaceDecl</a> |
        <a href="#prod-xqueryp-Setter">Setter</a> | <a
        href="#prod-xqueryp-NamespaceDecl">NamespaceDecl</a> | <a
        href="#prod-xqueryp-Import">Import</a>) <a
        href="#prod-xqueryp-Separator">Separator</a>)* ((<a
        href="#prod-xqueryp-VarDecl">VarDecl</a> | <a
        href="#prod-xqueryp-FunctionDecl">FunctionDecl</a> | <a
        href="#prod-xqueryp-OptionDecl">OptionDecl</a>) <a
        href="#prod-xqueryp-Separator">Separator</a>)*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Setter"
      name="prod-xqueryp-Setter"></a>[7]   </td>
      <td><code><a href="#doc-xqueryp-Setter">Setter</a></code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-BoundarySpaceDecl">BoundarySpaceDecl</a> | <a
        href="#prod-xqueryp-DefaultCollationDecl">DefaultCollationDecl</a> |
        <a href="#prod-xqueryp-BaseURIDecl">BaseURIDecl</a> | <a
        href="#prod-xqueryp-ConstructionDecl">ConstructionDecl</a> | <a
        href="#prod-xqueryp-OrderingModeDecl">OrderingModeDecl</a> | <a
        href="#prod-xqueryp-EmptyOrderDecl">EmptyOrderDecl</a> | <a
        href="#prod-xqueryp-RevalidationDecl">RevalidationDecl</a> | <a
        href="#prod-xqueryp-CopyNamespacesDecl">CopyNamespacesDecl</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Import"
      name="prod-xqueryp-Import"></a>[8]   </td>
      <td><code>Import</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-SchemaImport">SchemaImport</a> | <a
        href="#prod-xqueryp-ModuleImport">ModuleImport</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Separator"
        name="prod-xqueryp-Separator"></a>[9]   </td>
      <td><code>Separator</code></td>
      <td>   ::=   </td>
      <td><code>";"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-NamespaceDecl"
        name="prod-xqueryp-NamespaceDecl"></a>[10]   </td>
      <td><code>NamespaceDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "namespace" <a
        href="#prod-xqueryp-NCName">NCName</a> "=" <a
        href="#prod-xqueryp-URILiteral">URILiteral</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-BoundarySpaceDecl"
        name="prod-xqueryp-BoundarySpaceDecl"></a>[11]   </td>
      <td><code>BoundarySpaceDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "boundary-space" ("preserve" | "strip")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DefaultNamespaceDecl"
        name="prod-xqueryp-DefaultNamespaceDecl"></a>[12]   </td>
      <td><code>DefaultNamespaceDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "default" ("element" | "function") "namespace" <a
        href="#prod-xqueryp-URILiteral">URILiteral</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-OptionDecl"
        name="prod-xqueryp-OptionDecl"></a>[13]   </td>
      <td><code>OptionDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "option" <a href="#prod-xqueryp-QName">QName</a> <a
        href="#prod-xqueryp-StringLiteral">StringLiteral</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-OrderingModeDecl"
        name="prod-xqueryp-OrderingModeDecl"></a>[14]   </td>
      <td><code>OrderingModeDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "ordering" ("ordered" | "unordered")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-EmptyOrderDecl"
        name="prod-xqueryp-EmptyOrderDecl"></a>[15]   </td>
      <td><code>EmptyOrderDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "default" "order" "empty" ("greatest" |
        "least")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CopyNamespacesDecl"
        name="prod-xqueryp-CopyNamespacesDecl"></a>[16]   </td>
      <td><code>CopyNamespacesDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "copy-namespaces" <a
        href="#prod-xqueryp-PreserveMode">PreserveMode</a> "," <a
        href="#prod-xqueryp-InheritMode">InheritMode</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-PreserveMode"
        name="prod-xqueryp-PreserveMode"></a>[17]   </td>
      <td><code>PreserveMode</code></td>
      <td>   ::=   </td>
      <td><code>"preserve" | "no-preserve"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-InheritMode"
        name="prod-xqueryp-InheritMode"></a>[18]   </td>
      <td><code>InheritMode</code></td>
      <td>   ::=   </td>
      <td><code>"inherit" | "no-inherit"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DefaultCollationDecl"
        name="prod-xqueryp-DefaultCollationDecl"></a>[19]   </td>
      <td><code>DefaultCollationDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "default" "collation" <a
        href="#prod-xqueryp-URILiteral">URILiteral</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-BaseURIDecl"
        name="prod-xqueryp-BaseURIDecl"></a>[20]   </td>
      <td><code>BaseURIDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "base-uri" <a
        href="#prod-xqueryp-URILiteral">URILiteral</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-SchemaImport"
        name="prod-xqueryp-SchemaImport"></a>[21]   </td>
      <td><code>SchemaImport</code></td>
      <td>   ::=   </td>
      <td><code>"import" "schema" <a
        href="#prod-xqueryp-SchemaPrefix">SchemaPrefix</a>? <a
        href="#prod-xqueryp-URILiteral">URILiteral</a> ("at" <a
        href="#prod-xqueryp-URILiteral">URILiteral</a> ("," <a
        href="#prod-xqueryp-URILiteral">URILiteral</a>)*)?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-SchemaPrefix"
        name="prod-xqueryp-SchemaPrefix"></a>[22]   </td>
      <td><code>SchemaPrefix</code></td>
      <td>   ::=   </td>
      <td><code>("namespace" <a href="#prod-xqueryp-NCName">NCName</a> "=") |
        ("default" "element" "namespace")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ModuleImport"
        name="prod-xqueryp-ModuleImport"></a>[23]   </td>
      <td><code>ModuleImport</code></td>
      <td>   ::=   </td>
      <td><code>"import" "module" ("namespace" <a
        href="#prod-xqueryp-NCName">NCName</a> "=")? <a
        href="#prod-xqueryp-URILiteral">URILiteral</a> ("at" <a
        href="#prod-xqueryp-URILiteral">URILiteral</a> ("," <a
        href="#prod-xqueryp-URILiteral">URILiteral</a>)*)?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-VarDecl"
        name="prod-xqueryp-VarDecl"></a>[24]   </td>
      <td><code>VarDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "variable" "$" <a
        href="#prod-xqueryp-QName">QName</a> <a
        href="#prod-xqueryp-TypeDeclaration">TypeDeclaration</a>? ((":=" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a>) |
      "external")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ConstructionDecl"
        name="prod-xqueryp-ConstructionDecl"></a>[25]   </td>
      <td><code>ConstructionDecl</code></td>
      <td>   ::=   </td>
      <td><code>"declare" "construction" ("strip" | "preserve")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-FunctionDecl"
        name="prod-xqueryp-FunctionDecl"></a>[26]   </td>
      <td><code><a
      href="#doc-xqueryp-FunctionDecl">FunctionDecl</a></code></td>
      <td>   ::=   </td>
      <td><code>"declare" "updating"? "function" <a
        href="#prod-xqueryp-QName">QName</a> "(" <a
        href="#prod-xqueryp-ParamList">ParamList</a>? ")" ("as" <a
        href="#prod-xqueryp-SequenceType">SequenceType</a>)? (<a
        href="#prod-xqueryp-EnclosedExpr">EnclosedExpr</a> |
        "external")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ParamList"
        name="prod-xqueryp-ParamList"></a>[27]   </td>
      <td><code>ParamList</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Param">Param</a> ("," <a
        href="#prod-xqueryp-Param">Param</a>)*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Param"
      name="prod-xqueryp-Param"></a>[28]   </td>
      <td><code>Param</code></td>
      <td>   ::=   </td>
      <td><code>"$" <a href="#prod-xqueryp-QName">QName</a> <a
        href="#prod-xqueryp-TypeDeclaration">TypeDeclaration</a>?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-EnclosedExpr"
        name="prod-xqueryp-EnclosedExpr"></a>[29]   </td>
      <td><code>EnclosedExpr</code></td>
      <td>   ::=   </td>
      <td><code>"{" <a href="#prod-xqueryp-Expr">Expr</a> "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-QueryBody"
        name="prod-xqueryp-QueryBody"></a>[30]   </td>
      <td><code>QueryBody</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Expr">Expr</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Expr"
      name="prod-xqueryp-Expr"></a>[31]   </td>
      <td><code>Expr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-ExprSingle">ExprSingle</a> ("," <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a>)*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ExprSingle"
        name="prod-xqueryp-ExprSingle"></a>[32]   </td>
      <td><code><a href="#doc-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-FLWORExpr">FLWORExpr</a><br />
        | <a href="#prod-xqueryp-QuantifiedExpr">QuantifiedExpr</a><br />
        | <a href="#prod-xqueryp-TypeswitchExpr">TypeswitchExpr</a><br />
        | <a href="#prod-xqueryp-IfExpr">IfExpr</a><br />
        | <a href="#prod-xqueryp-InsertExpr">InsertExpr</a><br />
        | <a href="#prod-xqueryp-DeleteExpr">DeleteExpr</a><br />
        | <a href="#prod-xqueryp-RenameExpr">RenameExpr</a><br />
        | <a href="#prod-xqueryp-ReplaceExpr">ReplaceExpr</a><br />
        | <a href="#prod-xqueryp-TransformExpr">TransformExpr</a><br />
        | <a href="#prod-xqueryp-OrExpr">OrExpr</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-FLWORExpr"
        name="prod-xqueryp-FLWORExpr"></a>[33]   </td>
      <td><code>FLWORExpr</code></td>
      <td>   ::=   </td>
      <td><code>(<a href="#prod-xqueryp-ForClause">ForClause</a> | <a
        href="#prod-xqueryp-LetClause">LetClause</a>)+ <a
        href="#prod-xqueryp-WhereClause">WhereClause</a>? <a
        href="#prod-xqueryp-OrderByClause">OrderByClause</a>? "return" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ForClause"
        name="prod-xqueryp-ForClause"></a>[34]   </td>
      <td><code>ForClause</code></td>
      <td>   ::=   </td>
      <td><code>"for" "$" <a href="#prod-xqueryp-VarName">VarName</a> <a
        href="#prod-xqueryp-TypeDeclaration">TypeDeclaration</a>? <a
        href="#prod-xqueryp-PositionalVar">PositionalVar</a>? "in" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a> ("," "$" <a
        href="#prod-xqueryp-VarName">VarName</a> <a
        href="#prod-xqueryp-TypeDeclaration">TypeDeclaration</a>? <a
        href="#prod-xqueryp-PositionalVar">PositionalVar</a>? "in" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a>)*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-PositionalVar"
        name="prod-xqueryp-PositionalVar"></a>[35]   </td>
      <td><code>PositionalVar</code></td>
      <td>   ::=   </td>
      <td><code>"at" "$" <a
      href="#prod-xqueryp-VarName">VarName</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-LetClause"
        name="prod-xqueryp-LetClause"></a>[36]   </td>
      <td><code>LetClause</code></td>
      <td>   ::=   </td>
      <td><code>"let" "$" <a href="#prod-xqueryp-VarName">VarName</a> <a
        href="#prod-xqueryp-TypeDeclaration">TypeDeclaration</a>? ":=" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a> ("," "$" <a
        href="#prod-xqueryp-VarName">VarName</a> <a
        href="#prod-xqueryp-TypeDeclaration">TypeDeclaration</a>? ":=" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a>)*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-WhereClause"
        name="prod-xqueryp-WhereClause"></a>[37]   </td>
      <td><code>WhereClause</code></td>
      <td>   ::=   </td>
      <td><code>"where" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-OrderByClause"
        name="prod-xqueryp-OrderByClause"></a>[38]   </td>
      <td><code>OrderByClause</code></td>
      <td>   ::=   </td>
      <td><code>(("order" "by") | ("stable" "order" "by")) <a
        href="#prod-xqueryp-OrderSpecList">OrderSpecList</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-OrderSpecList"
        name="prod-xqueryp-OrderSpecList"></a>[39]   </td>
      <td><code>OrderSpecList</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-OrderSpec">OrderSpec</a> ("," <a
        href="#prod-xqueryp-OrderSpec">OrderSpec</a>)*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-OrderSpec"
        name="prod-xqueryp-OrderSpec"></a>[40]   </td>
      <td><code>OrderSpec</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-ExprSingle">ExprSingle</a> <a
        href="#prod-xqueryp-OrderModifier">OrderModifier</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-OrderModifier"
        name="prod-xqueryp-OrderModifier"></a>[41]   </td>
      <td><code>OrderModifier</code></td>
      <td>   ::=   </td>
      <td><code>("ascending" | "descending")? ("empty" ("greatest" |
        "least"))? ("collation" <a
        href="#prod-xqueryp-URILiteral">URILiteral</a>)?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-QuantifiedExpr"
        name="prod-xqueryp-QuantifiedExpr"></a>[42]   </td>
      <td><code>QuantifiedExpr</code></td>
      <td>   ::=   </td>
      <td><code>("some" | "every") "$" <a
        href="#prod-xqueryp-VarName">VarName</a> <a
        href="#prod-xqueryp-TypeDeclaration">TypeDeclaration</a>? "in" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a> ("," "$" <a
        href="#prod-xqueryp-VarName">VarName</a> <a
        href="#prod-xqueryp-TypeDeclaration">TypeDeclaration</a>? "in" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a>)* "satisfies" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-TypeswitchExpr"
        name="prod-xqueryp-TypeswitchExpr"></a>[43]   </td>
      <td><code><a
        href="#doc-xqueryp-TypeswitchExpr">TypeswitchExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"typeswitch" "(" <a href="#prod-xqueryp-Expr">Expr</a> ")" <a
        href="#prod-xqueryp-CaseClause">CaseClause</a>+ "default" ("$" <a
        href="#prod-xqueryp-VarName">VarName</a>)? "return" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CaseClause"
        name="prod-xqueryp-CaseClause"></a>[44]   </td>
      <td><code><a href="#doc-xqueryp-CaseClause">CaseClause</a></code></td>
      <td>   ::=   </td>
      <td><code>"case" ("$" <a href="#prod-xqueryp-VarName">VarName</a>
        "as")? <a href="#prod-xqueryp-SequenceType">SequenceType</a> "return"
        <a href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-IfExpr"
        name="prod-xqueryp-IfExpr"></a>[45]   </td>
      <td><code>IfExpr</code></td>
      <td>   ::=   </td>
      <td><code>"if" "(" <a href="#prod-xqueryp-Expr">Expr</a> ")" "then" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a> "else" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-OrExpr"
        name="prod-xqueryp-OrExpr"></a>[46]   </td>
      <td><code>OrExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-AndExpr">AndExpr</a> ( "or" <a
        href="#prod-xqueryp-AndExpr">AndExpr</a> )*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AndExpr"
        name="prod-xqueryp-AndExpr"></a>[47]   </td>
      <td><code>AndExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-ComparisonExpr">ComparisonExpr</a> (
        "and" <a href="#prod-xqueryp-ComparisonExpr">ComparisonExpr</a>
        )*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ComparisonExpr"
        name="prod-xqueryp-ComparisonExpr"></a>[48]   </td>
      <td><code>ComparisonExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-RangeExpr">RangeExpr</a> ( (<a
        href="#prod-xqueryp-ValueComp">ValueComp</a><br />
        | <a href="#prod-xqueryp-GeneralComp">GeneralComp</a><br />
        | <a href="#prod-xqueryp-NodeComp">NodeComp</a>) <a
        href="#prod-xqueryp-RangeExpr">RangeExpr</a> )?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-RangeExpr"
        name="prod-xqueryp-RangeExpr"></a>[49]   </td>
      <td><code>RangeExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-AdditiveExpr">AdditiveExpr</a> ( "to"
        <a href="#prod-xqueryp-AdditiveExpr">AdditiveExpr</a> )?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AdditiveExpr"
        name="prod-xqueryp-AdditiveExpr"></a>[50]   </td>
      <td><code>AdditiveExpr</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-MultiplicativeExpr">MultiplicativeExpr</a> ( ("+"
        | "-") <a
        href="#prod-xqueryp-MultiplicativeExpr">MultiplicativeExpr</a>
        )*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-MultiplicativeExpr"
        name="prod-xqueryp-MultiplicativeExpr"></a>[51]   </td>
      <td><code>MultiplicativeExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-UnionExpr">UnionExpr</a> ( ("*" |
        "div" | "idiv" | "mod") <a
        href="#prod-xqueryp-UnionExpr">UnionExpr</a> )*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-UnionExpr"
        name="prod-xqueryp-UnionExpr"></a>[52]   </td>
      <td><code>UnionExpr</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-IntersectExceptExpr">IntersectExceptExpr</a> (
        ("union" | "|") <a
        href="#prod-xqueryp-IntersectExceptExpr">IntersectExceptExpr</a>
        )*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-IntersectExceptExpr"
        name="prod-xqueryp-IntersectExceptExpr"></a>[53]   </td>
      <td><code>IntersectExceptExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-InstanceofExpr">InstanceofExpr</a> (
        ("intersect" | "except") <a
        href="#prod-xqueryp-InstanceofExpr">InstanceofExpr</a> )*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-InstanceofExpr"
        name="prod-xqueryp-InstanceofExpr"></a>[54]   </td>
      <td><code>InstanceofExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-TreatExpr">TreatExpr</a> ( "instance"
        "of" <a href="#prod-xqueryp-SequenceType">SequenceType</a>
      )?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-TreatExpr"
        name="prod-xqueryp-TreatExpr"></a>[55]   </td>
      <td><code>TreatExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-CastableExpr">CastableExpr</a> (
        "treat" "as" <a href="#prod-xqueryp-SequenceType">SequenceType</a>
        )?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CastableExpr"
        name="prod-xqueryp-CastableExpr"></a>[56]   </td>
      <td><code>CastableExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-CastExpr">CastExpr</a> ( "castable"
        "as" <a href="#prod-xqueryp-SingleType">SingleType</a> )?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CastExpr"
        name="prod-xqueryp-CastExpr"></a>[57]   </td>
      <td><code>CastExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-UnaryExpr">UnaryExpr</a> ( "cast" "as"
        <a href="#prod-xqueryp-SingleType">SingleType</a> )?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-UnaryExpr"
        name="prod-xqueryp-UnaryExpr"></a>[58]   </td>
      <td><code>UnaryExpr</code></td>
      <td>   ::=   </td>
      <td><code>("-" | "+")* <a
        href="#prod-xqueryp-ValueExpr">ValueExpr</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ValueExpr"
        name="prod-xqueryp-ValueExpr"></a>[59]   </td>
      <td><code>ValueExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-ValidateExpr">ValidateExpr</a> | <a
        href="#prod-xqueryp-PathExpr">PathExpr</a> | <a
        href="#prod-xqueryp-ExtensionExpr">ExtensionExpr</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-GeneralComp"
        name="prod-xqueryp-GeneralComp"></a>[60]   </td>
      <td><code>GeneralComp</code></td>
      <td>   ::=   </td>
      <td><code>"=" | "!=" | "&lt;" | "&lt;=" | "&gt;" | "&gt;="</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ValueComp"
        name="prod-xqueryp-ValueComp"></a>[61]   </td>
      <td><code>ValueComp</code></td>
      <td>   ::=   </td>
      <td><code>"eq" | "ne" | "lt" | "le" | "gt" | "ge"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-NodeComp"
        name="prod-xqueryp-NodeComp"></a>[62]   </td>
      <td><code>NodeComp</code></td>
      <td>   ::=   </td>
      <td><code>"is" | "&lt;&lt;" | "&gt;&gt;"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ValidateExpr"
        name="prod-xqueryp-ValidateExpr"></a>[63]   </td>
      <td><code>ValidateExpr</code></td>
      <td>   ::=   </td>
      <td><code>"validate" <a
        href="#prod-xqueryp-ValidationMode">ValidationMode</a>? "{" <a
        href="#prod-xqueryp-Expr">Expr</a> "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ValidationMode"
        name="prod-xqueryp-ValidationMode"></a>[64]   </td>
      <td><code>ValidationMode</code></td>
      <td>   ::=   </td>
      <td><code>"lax" | "strict"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ExtensionExpr"
        name="prod-xqueryp-ExtensionExpr"></a>[65]   </td>
      <td><code>ExtensionExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Pragma">Pragma</a>+ "{" <a
        href="#prod-xqueryp-Expr">Expr</a>? "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Pragma"
        name="prod-xqueryp-Pragma"></a>[66]   </td>
      <td><code>Pragma</code></td>
      <td>   ::=   </td>
      <td><code>"(#" <a href="#prod-xqueryp-S">S</a>? <a
        href="#prod-xqueryp-QName">QName</a> (<a href="#prod-xqueryp-S">S</a>
        <a href="#prod-xqueryp-PragmaContents">PragmaContents</a>)?
        "#)"</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-PragmaContents"
        name="prod-xqueryp-PragmaContents"></a>[67]   </td>
      <td><code>PragmaContents</code></td>
      <td>   ::=   </td>
      <td><code>(<a href="#prod-xqueryp-Char">Char</a>* - (Char* '#)'
        Char*))</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-PathExpr"
        name="prod-xqueryp-PathExpr"></a>[68]   </td>
      <td><code>PathExpr</code></td>
      <td>   ::=   </td>
      <td><code>("/" <a
        href="#prod-xqueryp-RelativePathExpr">RelativePathExpr</a>?)<br />
        | ("//" <a
        href="#prod-xqueryp-RelativePathExpr">RelativePathExpr</a>)<br />
        | <a
      href="#prod-xqueryp-RelativePathExpr">RelativePathExpr</a></code></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-leading-lone-slash">gn:
        leading-lone-slash</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-RelativePathExpr"
        name="prod-xqueryp-RelativePathExpr"></a>[69]   </td>
      <td><code>RelativePathExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-StepExpr">StepExpr</a> (("/" | "//")
        <a href="#prod-xqueryp-StepExpr">StepExpr</a>)*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-StepExpr"
        name="prod-xqueryp-StepExpr"></a>[70]   </td>
      <td><code>StepExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-FilterExpr">FilterExpr</a> | <a
        href="#prod-xqueryp-AxisStep">AxisStep</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AxisStep"
        name="prod-xqueryp-AxisStep"></a>[71]   </td>
      <td><code>AxisStep</code></td>
      <td>   ::=   </td>
      <td><code>(<a href="#prod-xqueryp-ReverseStep">ReverseStep</a> | <a
        href="#prod-xqueryp-ForwardStep">ForwardStep</a>) <a
        href="#prod-xqueryp-PredicateList">PredicateList</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ForwardStep"
        name="prod-xqueryp-ForwardStep"></a>[72]   </td>
      <td><code>ForwardStep</code></td>
      <td>   ::=   </td>
      <td><code>(<a href="#prod-xqueryp-ForwardAxis">ForwardAxis</a> <a
        href="#prod-xqueryp-NodeTest">NodeTest</a>) | <a
        href="#prod-xqueryp-AbbrevForwardStep">AbbrevForwardStep</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ForwardAxis"
        name="prod-xqueryp-ForwardAxis"></a>[73]   </td>
      <td><code>ForwardAxis</code></td>
      <td>   ::=   </td>
      <td><code>("child" "::")<br />
        | ("descendant" "::")<br />
        | ("attribute" "::")<br />
        | ("self" "::")<br />
        | ("descendant-or-self" "::")<br />
        | ("following-sibling" "::")<br />
        | ("following" "::")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AbbrevForwardStep"
        name="prod-xqueryp-AbbrevForwardStep"></a>[74]   </td>
      <td><code>AbbrevForwardStep</code></td>
      <td>   ::=   </td>
      <td><code>"@"? <a href="#prod-xqueryp-NodeTest">NodeTest</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ReverseStep"
        name="prod-xqueryp-ReverseStep"></a>[75]   </td>
      <td><code>ReverseStep</code></td>
      <td>   ::=   </td>
      <td><code>(<a href="#prod-xqueryp-ReverseAxis">ReverseAxis</a> <a
        href="#prod-xqueryp-NodeTest">NodeTest</a>) | <a
        href="#prod-xqueryp-AbbrevReverseStep">AbbrevReverseStep</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ReverseAxis"
        name="prod-xqueryp-ReverseAxis"></a>[76]   </td>
      <td><code>ReverseAxis</code></td>
      <td>   ::=   </td>
      <td><code>("parent" "::")<br />
        | ("ancestor" "::")<br />
        | ("preceding-sibling" "::")<br />
        | ("preceding" "::")<br />
        | ("ancestor-or-self" "::")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AbbrevReverseStep"
        name="prod-xqueryp-AbbrevReverseStep"></a>[77]   </td>
      <td><code>AbbrevReverseStep</code></td>
      <td>   ::=   </td>
      <td><code>".."</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-NodeTest"
        name="prod-xqueryp-NodeTest"></a>[78]   </td>
      <td><code>NodeTest</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-KindTest">KindTest</a> | <a
        href="#prod-xqueryp-NameTest">NameTest</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-NameTest"
        name="prod-xqueryp-NameTest"></a>[79]   </td>
      <td><code>NameTest</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-QName">QName</a> | <a
        href="#prod-xqueryp-Wildcard">Wildcard</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Wildcard"
        name="prod-xqueryp-Wildcard"></a>[80]   </td>
      <td><code>Wildcard</code></td>
      <td>   ::=   </td>
      <td><code>"*"<br />
        | (<a href="#prod-xqueryp-NCName">NCName</a> ":" "*")<br />
        | ("*" ":" <a href="#prod-xqueryp-NCName">NCName</a>)</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-FilterExpr"
        name="prod-xqueryp-FilterExpr"></a>[81]   </td>
      <td><code>FilterExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-PrimaryExpr">PrimaryExpr</a> <a
        href="#prod-xqueryp-PredicateList">PredicateList</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-PredicateList"
        name="prod-xqueryp-PredicateList"></a>[82]   </td>
      <td><code>PredicateList</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Predicate">Predicate</a>*</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Predicate"
        name="prod-xqueryp-Predicate"></a>[83]   </td>
      <td><code>Predicate</code></td>
      <td>   ::=   </td>
      <td><code>"[" <a href="#prod-xqueryp-Expr">Expr</a> "]"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-PrimaryExpr"
        name="prod-xqueryp-PrimaryExpr"></a>[84]   </td>
      <td><code>PrimaryExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Literal">Literal</a> | <a
        href="#prod-xqueryp-VarRef">VarRef</a> | <a
        href="#prod-xqueryp-ParenthesizedExpr">ParenthesizedExpr</a> | <a
        href="#prod-xqueryp-ContextItemExpr">ContextItemExpr</a> | <a
        href="#prod-xqueryp-FunctionCall">FunctionCall</a> | <a
        href="#prod-xqueryp-OrderedExpr">OrderedExpr</a> | <a
        href="#prod-xqueryp-UnorderedExpr">UnorderedExpr</a> | <a
        href="#prod-xqueryp-Constructor">Constructor</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Literal"
        name="prod-xqueryp-Literal"></a>[85]   </td>
      <td><code>Literal</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-NumericLiteral">NumericLiteral</a> |
        <a href="#prod-xqueryp-StringLiteral">StringLiteral</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-NumericLiteral"
        name="prod-xqueryp-NumericLiteral"></a>[86]   </td>
      <td><code>NumericLiteral</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-IntegerLiteral">IntegerLiteral</a> |
        <a href="#prod-xqueryp-DecimalLiteral">DecimalLiteral</a> | <a
        href="#prod-xqueryp-DoubleLiteral">DoubleLiteral</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-VarRef"
        name="prod-xqueryp-VarRef"></a>[87]   </td>
      <td><code>VarRef</code></td>
      <td>   ::=   </td>
      <td><code>"$" <a href="#prod-xqueryp-VarName">VarName</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-VarName"
        name="prod-xqueryp-VarName"></a>[88]   </td>
      <td><code>VarName</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-QName">QName</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ParenthesizedExpr"
        name="prod-xqueryp-ParenthesizedExpr"></a>[89]   </td>
      <td><code>ParenthesizedExpr</code></td>
      <td>   ::=   </td>
      <td><code>"(" <a href="#prod-xqueryp-Expr">Expr</a>? ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ContextItemExpr"
        name="prod-xqueryp-ContextItemExpr"></a>[90]   </td>
      <td><code>ContextItemExpr</code></td>
      <td>   ::=   </td>
      <td><code>"."</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-OrderedExpr"
        name="prod-xqueryp-OrderedExpr"></a>[91]   </td>
      <td><code>OrderedExpr</code></td>
      <td>   ::=   </td>
      <td><code>"ordered" "{" <a href="#prod-xqueryp-Expr">Expr</a>
      "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-UnorderedExpr"
        name="prod-xqueryp-UnorderedExpr"></a>[92]   </td>
      <td><code>UnorderedExpr</code></td>
      <td>   ::=   </td>
      <td><code>"unordered" "{" <a href="#prod-xqueryp-Expr">Expr</a>
        "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-FunctionCall"
        name="prod-xqueryp-FunctionCall"></a>[93]   </td>
      <td><code>FunctionCall</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-QName">QName</a> "(" (<a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a> ("," <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a>)*)? ")"</code></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-reserved-function-names">gn:
        reserved-function-names</a><sup><small>XQ</small></sup></span>
      */</i></td>
    </tr>
    <tr valign="baseline">
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-parens">gn:
        parens</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Constructor"
        name="prod-xqueryp-Constructor"></a>[94]   </td>
      <td><code>Constructor</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-DirectConstructor">DirectConstructor</a><br />
        | <a
        href="#prod-xqueryp-ComputedConstructor">ComputedConstructor</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DirectConstructor"
        name="prod-xqueryp-DirectConstructor"></a>[95]   </td>
      <td><code>DirectConstructor</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-DirElemConstructor">DirElemConstructor</a><br />
        | <a
        href="#prod-xqueryp-DirCommentConstructor">DirCommentConstructor</a><br
        />
        | <a
      href="#prod-xqueryp-DirPIConstructor">DirPIConstructor</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DirElemConstructor"
        name="prod-xqueryp-DirElemConstructor"></a>[96]   </td>
      <td><code>DirElemConstructor</code></td>
      <td>   ::=   </td>
      <td><code>"&lt;" <a href="#prod-xqueryp-QName">QName</a> <a
        href="#prod-xqueryp-DirAttributeList">DirAttributeList</a> ("/&gt;" |
        ("&gt;" <a href="#prod-xqueryp-DirElemContent">DirElemContent</a>*
        "&lt;/" <a href="#prod-xqueryp-QName">QName</a> <a
        href="#prod-xqueryp-S">S</a>? "&gt;"))</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DirAttributeList"
        name="prod-xqueryp-DirAttributeList"></a>[97]   </td>
      <td><code>DirAttributeList</code></td>
      <td>   ::=   </td>
      <td><code>(<a href="#prod-xqueryp-S">S</a> (<a
        href="#prod-xqueryp-QName">QName</a> <a href="#prod-xqueryp-S">S</a>?
        "=" <a href="#prod-xqueryp-S">S</a>? <a
        href="#prod-xqueryp-DirAttributeValue">DirAttributeValue</a>)?)*</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DirAttributeValue"
        name="prod-xqueryp-DirAttributeValue"></a>[98]   </td>
      <td><code>DirAttributeValue</code></td>
      <td>   ::=   </td>
      <td><code>('"' (<a href="#prod-xqueryp-EscapeQuot">EscapeQuot</a> | <a
        href="#prod-xqueryp-QuotAttrValueContent">QuotAttrValueContent</a>)*
        '"')<br />
        | ("'" (<a href="#prod-xqueryp-EscapeApos">EscapeApos</a> | <a
        href="#prod-xqueryp-AposAttrValueContent">AposAttrValueContent</a>)*
        "'")</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-QuotAttrValueContent"
        name="prod-xqueryp-QuotAttrValueContent"></a>[99]   </td>
      <td><code>QuotAttrValueContent</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-QuotAttrContentChar">QuotAttrContentChar</a><br />
        | <a href="#prod-xqueryp-CommonContent">CommonContent</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AposAttrValueContent"
        name="prod-xqueryp-AposAttrValueContent"></a>[100]   </td>
      <td><code>AposAttrValueContent</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-AposAttrContentChar">AposAttrContentChar</a><br />
        | <a href="#prod-xqueryp-CommonContent">CommonContent</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DirElemContent"
        name="prod-xqueryp-DirElemContent"></a>[101]   </td>
      <td><code>DirElemContent</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-DirectConstructor">DirectConstructor</a><br />
        | <a href="#prod-xqueryp-CDataSection">CDataSection</a><br />
        | <a href="#prod-xqueryp-CommonContent">CommonContent</a><br />
        | <a
        href="#prod-xqueryp-ElementContentChar">ElementContentChar</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CommonContent"
        name="prod-xqueryp-CommonContent"></a>[102]   </td>
      <td><code>CommonContent</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-PredefinedEntityRef">PredefinedEntityRef</a> | <a
        href="#prod-xqueryp-CharRef">CharRef</a> | "{{" | "}}" | <a
        href="#prod-xqueryp-EnclosedExpr">EnclosedExpr</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DirCommentConstructor"
        name="prod-xqueryp-DirCommentConstructor"></a>[103]   </td>
      <td><code>DirCommentConstructor</code></td>
      <td>   ::=   </td>
      <td><code>"&lt;!--" <a
        href="#prod-xqueryp-DirCommentContents">DirCommentContents</a>
        "--&gt;"</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DirCommentContents"
        name="prod-xqueryp-DirCommentContents"></a>[104]   </td>
      <td><code>DirCommentContents</code></td>
      <td>   ::=   </td>
      <td><code>((<a href="#prod-xqueryp-Char">Char</a> - '-') | ('-' (<a
        href="#prod-xqueryp-Char">Char</a> - '-')))*</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DirPIConstructor"
        name="prod-xqueryp-DirPIConstructor"></a>[105]   </td>
      <td><code>DirPIConstructor</code></td>
      <td>   ::=   </td>
      <td><code>"&lt;?" <a href="#prod-xqueryp-PITarget">PITarget</a> (<a
        href="#prod-xqueryp-S">S</a> <a
        href="#prod-xqueryp-DirPIContents">DirPIContents</a>)?
      "?&gt;"</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DirPIContents"
        name="prod-xqueryp-DirPIContents"></a>[106]   </td>
      <td><code>DirPIContents</code></td>
      <td>   ::=   </td>
      <td><code>(<a href="#prod-xqueryp-Char">Char</a>* - (Char* '?&gt;'
        Char*))</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CDataSection"
        name="prod-xqueryp-CDataSection"></a>[107]   </td>
      <td><code>CDataSection</code></td>
      <td>   ::=   </td>
      <td><code>"&lt;![CDATA[" <a
        href="#prod-xqueryp-CDataSectionContents">CDataSectionContents</a>
        "]]&gt;"</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CDataSectionContents"
        name="prod-xqueryp-CDataSectionContents"></a>[108]   </td>
      <td><code>CDataSectionContents</code></td>
      <td>   ::=   </td>
      <td><code>(<a href="#prod-xqueryp-Char">Char</a>* - (Char* ']]&gt;'
        Char*))</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ComputedConstructor"
        name="prod-xqueryp-ComputedConstructor"></a>[109]   </td>
      <td><code>ComputedConstructor</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="#prod-xqueryp-CompDocConstructor">CompDocConstructor</a><br />
        | <a
        href="#prod-xqueryp-CompElemConstructor">CompElemConstructor</a><br />
        | <a
        href="#prod-xqueryp-CompAttrConstructor">CompAttrConstructor</a><br />
        | <a
        href="#prod-xqueryp-CompTextConstructor">CompTextConstructor</a><br />
        | <a
        href="#prod-xqueryp-CompCommentConstructor">CompCommentConstructor</a><br
        />
        | <a
        href="#prod-xqueryp-CompPIConstructor">CompPIConstructor</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CompDocConstructor"
        name="prod-xqueryp-CompDocConstructor"></a>[110]   </td>
      <td><code>CompDocConstructor</code></td>
      <td>   ::=   </td>
      <td><code>"document" "{" <a href="#prod-xqueryp-Expr">Expr</a>
        "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CompElemConstructor"
        name="prod-xqueryp-CompElemConstructor"></a>[111]   </td>
      <td><code>CompElemConstructor</code></td>
      <td>   ::=   </td>
      <td><code>"element" (<a href="#prod-xqueryp-QName">QName</a> | ("{" <a
        href="#prod-xqueryp-Expr">Expr</a> "}")) "{" <a
        href="#prod-xqueryp-ContentExpr">ContentExpr</a>? "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ContentExpr"
        name="prod-xqueryp-ContentExpr"></a>[112]   </td>
      <td><code>ContentExpr</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Expr">Expr</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CompAttrConstructor"
        name="prod-xqueryp-CompAttrConstructor"></a>[113]   </td>
      <td><code>CompAttrConstructor</code></td>
      <td>   ::=   </td>
      <td><code>"attribute" (<a href="#prod-xqueryp-QName">QName</a> | ("{"
        <a href="#prod-xqueryp-Expr">Expr</a> "}")) "{" <a
        href="#prod-xqueryp-Expr">Expr</a>? "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CompTextConstructor"
        name="prod-xqueryp-CompTextConstructor"></a>[114]   </td>
      <td><code>CompTextConstructor</code></td>
      <td>   ::=   </td>
      <td><code>"text" "{" <a href="#prod-xqueryp-Expr">Expr</a>
      "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CompCommentConstructor"
        name="prod-xqueryp-CompCommentConstructor"></a>[115]   </td>
      <td><code>CompCommentConstructor</code></td>
      <td>   ::=   </td>
      <td><code>"comment" "{" <a href="#prod-xqueryp-Expr">Expr</a>
      "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CompPIConstructor"
        name="prod-xqueryp-CompPIConstructor"></a>[116]   </td>
      <td><code>CompPIConstructor</code></td>
      <td>   ::=   </td>
      <td><code>"processing-instruction" (<a
        href="#prod-xqueryp-NCName">NCName</a> | ("{" <a
        href="#prod-xqueryp-Expr">Expr</a> "}")) "{" <a
        href="#prod-xqueryp-Expr">Expr</a>? "}"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-SingleType"
        name="prod-xqueryp-SingleType"></a>[117]   </td>
      <td><code>SingleType</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-AtomicType">AtomicType</a>
      "?"?</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-TypeDeclaration"
        name="prod-xqueryp-TypeDeclaration"></a>[118]   </td>
      <td><code>TypeDeclaration</code></td>
      <td>   ::=   </td>
      <td><code>"as" <a
        href="#prod-xqueryp-SequenceType">SequenceType</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-SequenceType"
        name="prod-xqueryp-SequenceType"></a>[119]   </td>
      <td><code>SequenceType</code></td>
      <td>   ::=   </td>
      <td><code>("empty-sequence" "(" ")")<br />
        | (<a href="#prod-xqueryp-ItemType">ItemType</a> <a
        href="#prod-xqueryp-OccurrenceIndicator">OccurrenceIndicator</a>?)</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-OccurrenceIndicator"
        name="prod-xqueryp-OccurrenceIndicator"></a>[120]   </td>
      <td><code>OccurrenceIndicator</code></td>
      <td>   ::=   </td>
      <td><code>"?" | "*" | "+"</code></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-occurrence-indicators">gn:
        occurrence-indicators</a><sup><small>XQ</small></sup></span>
      */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ItemType"
        name="prod-xqueryp-ItemType"></a>[121]   </td>
      <td><code>ItemType</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-KindTest">KindTest</a> | ("item" "("
        ")") | <a href="#prod-xqueryp-AtomicType">AtomicType</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AtomicType"
        name="prod-xqueryp-AtomicType"></a>[122]   </td>
      <td><code>AtomicType</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-QName">QName</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-KindTest"
        name="prod-xqueryp-KindTest"></a>[123]   </td>
      <td><code>KindTest</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-DocumentTest">DocumentTest</a><br />
        | <a href="#prod-xqueryp-ElementTest">ElementTest</a><br />
        | <a href="#prod-xqueryp-AttributeTest">AttributeTest</a><br />
        | <a href="#prod-xqueryp-SchemaElementTest">SchemaElementTest</a><br
        />
        | <a
        href="#prod-xqueryp-SchemaAttributeTest">SchemaAttributeTest</a><br />
        | <a href="#prod-xqueryp-PITest">PITest</a><br />
        | <a href="#prod-xqueryp-CommentTest">CommentTest</a><br />
        | <a href="#prod-xqueryp-TextTest">TextTest</a><br />
        | <a href="#prod-xqueryp-AnyKindTest">AnyKindTest</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AnyKindTest"
        name="prod-xqueryp-AnyKindTest"></a>[124]   </td>
      <td><code>AnyKindTest</code></td>
      <td>   ::=   </td>
      <td><code>"node" "(" ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DocumentTest"
        name="prod-xqueryp-DocumentTest"></a>[125]   </td>
      <td><code>DocumentTest</code></td>
      <td>   ::=   </td>
      <td><code>"document-node" "(" (<a
        href="#prod-xqueryp-ElementTest">ElementTest</a> | <a
        href="#prod-xqueryp-SchemaElementTest">SchemaElementTest</a>)?
        ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-TextTest"
        name="prod-xqueryp-TextTest"></a>[126]   </td>
      <td><code>TextTest</code></td>
      <td>   ::=   </td>
      <td><code>"text" "(" ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CommentTest"
        name="prod-xqueryp-CommentTest"></a>[127]   </td>
      <td><code>CommentTest</code></td>
      <td>   ::=   </td>
      <td><code>"comment" "(" ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-PITest"
        name="prod-xqueryp-PITest"></a>[128]   </td>
      <td><code>PITest</code></td>
      <td>   ::=   </td>
      <td><code>"processing-instruction" "(" (<a
        href="#prod-xqueryp-NCName">NCName</a> | <a
        href="#prod-xqueryp-StringLiteral">StringLiteral</a>)? ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AttributeTest"
        name="prod-xqueryp-AttributeTest"></a>[129]   </td>
      <td><code>AttributeTest</code></td>
      <td>   ::=   </td>
      <td><code>"attribute" "(" (<a
        href="#prod-xqueryp-AttribNameOrWildcard">AttribNameOrWildcard</a>
        ("," <a href="#prod-xqueryp-TypeName">TypeName</a>)?)? ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AttribNameOrWildcard"
        name="prod-xqueryp-AttribNameOrWildcard"></a>[130]   </td>
      <td><code>AttribNameOrWildcard</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-AttributeName">AttributeName</a> |
        "*"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-SchemaAttributeTest"
        name="prod-xqueryp-SchemaAttributeTest"></a>[131]   </td>
      <td><code>SchemaAttributeTest</code></td>
      <td>   ::=   </td>
      <td><code>"schema-attribute" "(" <a
        href="#prod-xqueryp-AttributeDeclaration">AttributeDeclaration</a>
        ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AttributeDeclaration"
        name="prod-xqueryp-AttributeDeclaration"></a>[132]   </td>
      <td><code>AttributeDeclaration</code></td>
      <td>   ::=   </td>
      <td><code><a
      href="#prod-xqueryp-AttributeName">AttributeName</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ElementTest"
        name="prod-xqueryp-ElementTest"></a>[133]   </td>
      <td><code>ElementTest</code></td>
      <td>   ::=   </td>
      <td><code>"element" "(" (<a
        href="#prod-xqueryp-ElementNameOrWildcard">ElementNameOrWildcard</a>
        ("," <a href="#prod-xqueryp-TypeName">TypeName</a> "?"?)?)?
      ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ElementNameOrWildcard"
        name="prod-xqueryp-ElementNameOrWildcard"></a>[134]   </td>
      <td><code>ElementNameOrWildcard</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-ElementName">ElementName</a> |
        "*"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-SchemaElementTest"
        name="prod-xqueryp-SchemaElementTest"></a>[135]   </td>
      <td><code>SchemaElementTest</code></td>
      <td>   ::=   </td>
      <td><code>"schema-element" "(" <a
        href="#prod-xqueryp-ElementDeclaration">ElementDeclaration</a>
        ")"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ElementDeclaration"
        name="prod-xqueryp-ElementDeclaration"></a>[136]   </td>
      <td><code>ElementDeclaration</code></td>
      <td>   ::=   </td>
      <td><code><a
      href="#prod-xqueryp-ElementName">ElementName</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AttributeName"
        name="prod-xqueryp-AttributeName"></a>[137]   </td>
      <td><code>AttributeName</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-QName">QName</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ElementName"
        name="prod-xqueryp-ElementName"></a>[138]   </td>
      <td><code>ElementName</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-QName">QName</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-TypeName"
        name="prod-xqueryp-TypeName"></a>[139]   </td>
      <td><code>TypeName</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-QName">QName</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-URILiteral"
        name="prod-xqueryp-URILiteral"></a>[140]   </td>
      <td><code>URILiteral</code></td>
      <td>   ::=   </td>
      <td><code><a
      href="#prod-xqueryp-StringLiteral">StringLiteral</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-RevalidationDecl"
        name="prod-xqueryp-RevalidationDecl"></a>[141]   </td>
      <td><code><a
        href="#doc-xqueryp-RevalidationDecl">RevalidationDecl</a></code></td>
      <td>   ::=   </td>
      <td><code>"declare" "revalidation" ("strict" | "lax" |
      "skip")</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-InsertExpr"
        name="prod-xqueryp-InsertExpr"></a>[142]   </td>
      <td><code><a href="#doc-xqueryp-InsertExpr">InsertExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"do" "insert" <a
        href="#prod-xqueryp-SourceExpr">SourceExpr</a> ((("as" ("first" |
        "last"))? "into")<br />
        | "after"<br />
        | "before") <a
      href="#prod-xqueryp-TargetExpr">TargetExpr</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DeleteExpr"
        name="prod-xqueryp-DeleteExpr"></a>[143]   </td>
      <td><code><a href="#doc-xqueryp-DeleteExpr">DeleteExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"do" "delete" <a
        href="#prod-xqueryp-TargetExpr">TargetExpr</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ReplaceExpr"
        name="prod-xqueryp-ReplaceExpr"></a>[144]   </td>
      <td><code><a href="#doc-xqueryp-ReplaceExpr">ReplaceExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"do" "replace" ("value" "of")? <a
        href="#prod-xqueryp-TargetExpr">TargetExpr</a> "with" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-RenameExpr"
        name="prod-xqueryp-RenameExpr"></a>[145]   </td>
      <td><code><a href="#doc-xqueryp-RenameExpr">RenameExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"do" "rename" <a
        href="#prod-xqueryp-TargetExpr">TargetExpr</a> "as" <a
        href="#prod-xqueryp-NewNameExpr">NewNameExpr</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-SourceExpr"
        name="prod-xqueryp-SourceExpr"></a>[146]   </td>
      <td><code><a href="#doc-xqueryp-SourceExpr">SourceExpr</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-TargetExpr"
        name="prod-xqueryp-TargetExpr"></a>[147]   </td>
      <td><code><a href="#doc-xqueryp-TargetExpr">TargetExpr</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-NewNameExpr"
        name="prod-xqueryp-NewNameExpr"></a>[148]   </td>
      <td><code><a href="#doc-xqueryp-NewNameExpr">NewNameExpr</a></code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-TransformExpr"
        name="prod-xqueryp-TransformExpr"></a>[149]   </td>
      <td><code><a
      href="#doc-xqueryp-TransformExpr">TransformExpr</a></code></td>
      <td>   ::=   </td>
      <td><code>"transform" "copy" "$" <a
        href="#prod-xqueryp-VarName">VarName</a> ":=" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a> ("," "$" <a
        href="#prod-xqueryp-VarName">VarName</a> ":=" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a>)* "modify" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a> "return" <a
        href="#prod-xqueryp-ExprSingle">ExprSingle</a></code></td>
      <td></td>
    </tr>
  </tbody>
</table>

<div class="div2">
<h3><a id="id-terminal-symbols" name="id-terminal-symbols"></a>A.1 Terminal
Symbols</h3>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-IntegerLiteral"
        name="prod-xqueryp-IntegerLiteral"></a>[150]   </td>
      <td><code>IntegerLiteral</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Digits">Digits</a></code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DecimalLiteral"
        name="prod-xqueryp-DecimalLiteral"></a>[151]   </td>
      <td><code>DecimalLiteral</code></td>
      <td>   ::=   </td>
      <td><code>("." <a href="#prod-xqueryp-Digits">Digits</a>) | (<a
        href="#prod-xqueryp-Digits">Digits</a> "." [0-9]*)</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-DoubleLiteral"
        name="prod-xqueryp-DoubleLiteral"></a>[152]   </td>
      <td><code>DoubleLiteral</code></td>
      <td>   ::=   </td>
      <td><code>(("." <a href="#prod-xqueryp-Digits">Digits</a>) | (<a
        href="#prod-xqueryp-Digits">Digits</a> ("." [0-9]*)?)) [eE] [+-]? <a
        href="#prod-xqueryp-Digits">Digits</a></code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-StringLiteral"
        name="prod-xqueryp-StringLiteral"></a>[153]   </td>
      <td><code>StringLiteral</code></td>
      <td>   ::=   </td>
      <td><code>('"' (<a
        href="#prod-xqueryp-PredefinedEntityRef">PredefinedEntityRef</a> | <a
        href="#prod-xqueryp-CharRef">CharRef</a> | <a
        href="#prod-xqueryp-EscapeQuot">EscapeQuot</a> | [^"&amp;])* '"') |
        ("'" (<a
        href="#prod-xqueryp-PredefinedEntityRef">PredefinedEntityRef</a> | <a
        href="#prod-xqueryp-CharRef">CharRef</a> | <a
        href="#prod-xqueryp-EscapeApos">EscapeApos</a> | [^'&amp;])*
        "'")</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-PredefinedEntityRef"
        name="prod-xqueryp-PredefinedEntityRef"></a>[154]   </td>
      <td><code>PredefinedEntityRef</code></td>
      <td>   ::=   </td>
      <td><code>"&amp;" ("lt" | "gt" | "amp" | "quot" | "apos")
      ";"</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-EscapeQuot"
        name="prod-xqueryp-EscapeQuot"></a>[155]   </td>
      <td><code>EscapeQuot</code></td>
      <td>   ::=   </td>
      <td><code>'""'</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-EscapeApos"
        name="prod-xqueryp-EscapeApos"></a>[156]   </td>
      <td><code>EscapeApos</code></td>
      <td>   ::=   </td>
      <td><code>"''"</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-ElementContentChar"
        name="prod-xqueryp-ElementContentChar"></a>[157]   </td>
      <td><code>ElementContentChar</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Char">Char</a> -
      [{}&lt;&amp;]</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-QuotAttrContentChar"
        name="prod-xqueryp-QuotAttrContentChar"></a>[158]   </td>
      <td><code>QuotAttrContentChar</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Char">Char</a> -
      ["{}&lt;&amp;]</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-AposAttrContentChar"
        name="prod-xqueryp-AposAttrContentChar"></a>[159]   </td>
      <td><code>AposAttrContentChar</code></td>
      <td>   ::=   </td>
      <td><code><a href="#prod-xqueryp-Char">Char</a> -
      ['{}&lt;&amp;]</code></td>
      <td></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Comment"
        name="prod-xqueryp-Comment"></a>[160]   </td>
      <td><code>Comment</code></td>
      <td>   ::=   </td>
      <td><code>"(:" (<a
        href="#prod-xqueryp-CommentContents">CommentContents</a> | <a
        href="#prod-xqueryp-Comment">Comment</a>)* ":)"</code></td>
      <td><i>/* <span><a href="http://www.w3.org/TR/xquery#ws-explicit">ws:
        explicit</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
    <tr valign="baseline">
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-comments">gn:
        comments</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-PITarget"
        name="prod-xqueryp-PITarget"></a>[161]   </td>
      <td><code>PITarget</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="http://www.w3.org/TR/REC-xml/#NT-PITarget">[http://www.w3.org/TR/REC-xml#NT-PITarget]</a><sup><small>XML</small></sup></code></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-xml-version">gn:
        xml-version</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CharRef"
        name="prod-xqueryp-CharRef"></a>[162]   </td>
      <td><code>CharRef</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="http://www.w3.org/TR/REC-xml/#NT-CharRef">[http://www.w3.org/TR/REC-xml#NT-CharRef]</a><sup><small>XML</small></sup></code></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-xml-version">gn:
        xml-version</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-QName"
      name="prod-xqueryp-QName"></a>[163]   </td>
      <td><code>QName</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="http://www.w3.org/TR/REC-xml-names/#NT-QName">[http://www.w3.org/TR/REC-xml-names/#NT-QName]</a><sup><small>Names</small></sup></code></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-xml-version">gn:
        xml-version</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-NCName"
        name="prod-xqueryp-NCName"></a>[164]   </td>
      <td><code>NCName</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="http://www.w3.org/TR/REC-xml-names/#NT-NCName">[http://www.w3.org/TR/REC-xml-names/#NT-NCName]</a><sup><small>Names</small></sup></code></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-xml-version">gn:
        xml-version</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-S" name="prod-xqueryp-S"></a>[165]   </td>
      <td><code>S</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="http://www.w3.org/TR/REC-xml/#NT-S">[http://www.w3.org/TR/REC-xml#NT-S]</a><sup><small>XML</small></sup></code></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-xml-version">gn:
        xml-version</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Char"
      name="prod-xqueryp-Char"></a>[166]   </td>
      <td><code>Char</code></td>
      <td>   ::=   </td>
      <td><code><a
        href="http://www.w3.org/TR/REC-xml/#NT-Char">[http://www.w3.org/TR/REC-xml#NT-Char]</a><sup><small>XML</small></sup></code></td>
      <td><i>/* <span><a
        href="http://www.w3.org/TR/xquery#parse-note-xml-version">gn:
        xml-version</a><sup><small>XQ</small></sup></span> */</i></td>
    </tr>
  </tbody>
</table>

<p>The following symbols are used only in the definition of terminal symbols;
they are not terminal symbols in the grammar of <a href="#id-grammar"><b>A
EBNF for XQuery 1.0 Grammar with Update extensions</b></a>.</p>

<table summary="Scrap" class="scrap">
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-Digits"
        name="prod-xqueryp-Digits"></a>[167]   </td>
      <td><code>Digits</code></td>
      <td>   ::=   </td>
      <td><code>[0-9]+</code></td>
    </tr>
  </tbody>
  <tbody>
    <tr valign="baseline">
      <td><a id="prod-xqueryp-CommentContents"
        name="prod-xqueryp-CommentContents"></a>[168]   </td>
      <td><code>CommentContents</code></td>
      <td>   ::=   </td>
      <td><code>(<a href="#prod-xqueryp-Char">Char</a>+ - (Char* ('(:' |
        ':)') Char*))</code></td>
    </tr>
  </tbody>
</table>
</div>
</div>

<div class="div1">
<h2><a id="References" name="References"></a></h2>

<h2>B References</h2>

<div class="div2">
<dl>
  <dt class="label"><span><a id="xquery" name="xquery"></a>XQuery
  1.0</span></dt>
    <dd>
      <div>
      World Wide Web Consortium. <em>XQuery 1.0: An XML Query Language</em>.
      W3C Proposed Recommendation, 21 November 2006. See <a
      href="http://www.w3.org/TR/xquery/">http://www.w3.org/TR/xquery/</a>.</div>
    </dd>
  <dt class="label"><span><a id="xqupdate" name="xqupdate"></a>XQuery Update
  Facility</span></dt>
    <dd>
      <div>
      World Wide Web Consortium. <em>XQuery Update Facility</em>. W3C Working
      Draft, 11 July 2006. See <a
      href="http://www.w3.org/TR/xqueryp-update-requirements">http://www.w3.org/TR/xqupdate</a>.</div>
    </dd>
  <dt class="label"><span><a id="xqfulltext" name="xqfulltext"></a>XQuery 1.0
  and XPath 2.0 Full-Text</span></dt>
    <dd>
      <div>
      World Wide Web Consortium. <em>XQuery 1.0 and XPath 2.0 Full-Text</em>.
      W3C Working Draft, 1 May 2006. See <a
      href="http://www.w3.org/TR/xquery-full-text/">http://www.w3.org/TR/xquery-full-text/</a>.</div>
    </dd>
  <dt class="label"><span><a id="datamodel" name="datamodel"></a>XQuery/XPath
  Data Model (XDM)</span></dt>
    <dd>
      <div>
      World Wide Web Consortium. <em>XQuery 1.0 and XPath 2.0 Data Model
      (XDM)</em>. W3C Working Draft, 03 November 2005. See <a
      href="http://www.w3.org/TR/xpath-datamodel/">http://www.w3.org/TR/xpath-datamodel/</a>.</div>
    </dd>
</dl>
</div>
</div>

<div class="div1">
<h2><a id="id-errors" name="id-errors"></a></h2>

<h2>C Error Conditions</h2>
<dl>
  <dt><a name="ERRXUST0001" id="ERRXUST0001"></a>err:XQP0001</dt>
</dl>
</div>

<div class="div1">
<h2><a id="id-glossary" name="id-glossary"></a></h2>

<h2>D Glossary (Non-Normative)</h2>
<dl>
  <dt><a name="GLdt-basic-updating-expression"
  id="GLdt-basic-updating-expression"></a>basic updating expression</dt>
    <dd><p>A <b>basic updating expression</b> is an insert, delete, replace,
      or rename expression, or a call to an updating function.</p>
    </dd>
  <dt><a name="GLdt-data-model" id="GLdt-data-model"></a>data model</dt>
    <dd><p>The term <b>data model</b> refers to the data model specified by
      <a href="#datamodel">[XQuery/XPath Data Model (XDM)]</a>.</p>
    </dd>
  <dt><a name="GLdt-mark" id="GLdt-mark"></a>mark</dt>
    <dd><p>To <b>mark</b> a node means to identify the node as participating
      in a later operation.</p>
    </dd>
  <dt><a name="GLdt-non-updating-expression"
  id="GLdt-non-updating-expression"></a>non-updating expression</dt>
    <dd><p>A <b>non-updating expression</b> is any XQuery expression that is
      not an <a title="updating expression"
      href="#dt-updating-expression">updating expression</a>.</p>
    </dd>
  <dt><a name="GLdt-pending-update-list"
  id="GLdt-pending-update-list"></a>pending update list</dt>
    <dd><p>A <b>pending update list</b> is an unordered collection of <a
      title="update primitive" href="#dt-update-primitive">update
      primitives</a>, which represent node state changes that have not yet
      been applied.</p>
    </dd>
  <dt><a name="GLdt-snapshot-semantics"
  id="GLdt-snapshot-semantics"></a>snapshot semantics</dt>
    <dd><p>The <code>upd:applyUpdates</code> operation determines the scope
      within which all expressions are evaluated before any updates are
      applied. This is sometimes called the scope of <b>snapshot
      semantics</b>.</p>
    </dd>
  <dt><a name="GLdt-target-node" id="GLdt-target-node"></a>target node</dt>
    <dd><p>The first argument of an update primitive, called its <b>target
      node</b>, is the principal node to be affected by the update
      primitive.</p>
    </dd>
  <dt><a name="GLdt-update-operation" id="GLdt-update-operation"></a>update
  operation</dt>
    <dd><p><b>Update operations</b> are used in defining the semantics of
      XQuery updates, but are not directly available to users. Update
      operations are defined in <a href="#id-update-operations"><b>3 Update
      Operations</b></a>.</p>
    </dd>
  <dt><a name="GLdt-update-primitive" id="GLdt-update-primitive"></a>update
  primitive</dt>
    <dd><p><b>Update primitives</b> are the components of <a
      title="pending update list" href="#dt-pending-update-list">pending
      update lists</a>. Each <b>update primitive</b> represents a node state
      change that has not yet been applied.</p>
    </dd>
  <dt><a name="GLdt-updating-expression"
  id="GLdt-updating-expression"></a>updating expression</dt>
    <dd><p>An <b>updating expression</b> is an expression that contains a <a
      title="basic updating expression"
      href="#dt-basic-updating-expression">basic updating expression</a> that
      is not inside the <code>modify</code> clause of a transform
      expression.</p>
    </dd>
  <dt><a name="GLdt-xdm-instance" id="GLdt-xdm-instance"></a>XDM instance</dt>
    <dd><p>The term <b>XDM instance</b> denotes an unconstrained sequence of
      zero or more nodes and/or atomic values as defined by the <a
      title="data model" href="#dt-data-model">data model</a>.</p>
    </dd>
  <dt><a name="GLdt-xquery" id="GLdt-xquery"></a>XQuery</dt>
    <dd><p>Within this document, the term <b>XQuery</b> refers to the
      language specified by <a href="#xquery">[XQuery 1.0]</a>.</p>
    </dd>
</dl>
</div>

<div class="div1">
<h2><a id="id-revisions-log" name="id-revisions-log"></a>E Revision Log
(Non-Normative)</h2>

<p>This log records the substantive changes that have been made to this
document since the Initial Working Draft.</p>

<div class="div2">
<h3><a id="id-log-8may2006" name="id-log-8may2006"></a>E.1 Version</h3>
</div>
</div>
</div>
</div>
</body>
</html>
