# Copyright 2006-2008 The FLWOR Foundation.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FIND_PACKAGE(PHP5)

MESSAGE(STATUS "SWIG PHP....")

IF( NOT PHP5_FOUND )
  MESSAGE(STATUS "SWIG PHP: PHP5 binding not generated because library and include file not installed.")
ELSE( NOT PHP5_FOUND )
  MESSAGE(STATUS "SWIG PHP: Generating PHP5 API")
  SET_SOURCE_FILES_PROPERTIES(zorba_api.i PROPERTIES CPLUSPLUS ON)
  INCLUDE_DIRECTORIES(${PHP5_INCLUDES})
  IF(WIN32)
  INCLUDE_DIRECTORIES(${PHP5_MAIN_INCLUDE_DIR})
  INCLUDE_DIRECTORIES(${PHP5_TSRM_INCLUDE_DIR})
  INCLUDE_DIRECTORIES(${PHP5_ZEND_INCLUDE_DIR})
  ADD_DEFINITIONS(-DZEND_WIN32 -DPHP_WIN32 -DZEND_INCLUDE_FULL_WINDOWS_HEADERS -DZEND_DEBUG=0 -DZTS=1)
  ENDIF(WIN32)
  SWIG_ADD_MODULE(zorba_api php5 zorba_api.i)
  IF(APPLE)
    SWIG_LINK_LIBRARIES(zorba_api zorba_simplestore ${CMAKE_SHARED_MODULE_CREATE_C_FLAGS})
  ELSE(APPLE)
    SWIG_LINK_LIBRARIES(zorba_api zorba_simplestore)
  ENDIF(APPLE)
  IF(WIN32)
    SWIG_LINK_LIBRARIES(zorba_api ${PHP5_LIBRARY})
  ENDIF(WIN32)
  # The following fix was added because of the changes in CMake 2.8, which have the
  # result of naming the java binding library "liblibzorba_api.so" instead of "libzorba_api.so"
  IF ( LINUX OR CYGWIN )
    SET_TARGET_PROPERTIES( ${SWIG_MODULE_zorba_api_REAL_NAME} PROPERTIES PREFIX "" )
  ENDIF ( LINUX OR CYGWIN )

	IF (NOT WIN32 OR CYGWIN)
    STRING(REPLACE ${CMAKE_INSTALL_PREFIX} "" PHP5_INSTALL_PATH ${PHP5_EXTENSION_DIR})
    SET(PHP5_INSTALL_PATH ${CMAKE_INSTALL_PREFIX}${PHP5_INSTALL_PATH})
    MESSAGE(STATUS "SWIG PHP: PHP module install path: " ${PHP5_INSTALL_PATH})

    INSTALL ( FILES ${CMAKE_CURRENT_BINARY_DIR}/zorba_api_wrapper.php
                    ${CMAKE_CURRENT_BINARY_DIR}/${ZORBA_SWIG_LIB_PREFIX}zorba_api.so
              DESTINATION ${PHP5_INSTALL_PATH} )
	ELSE (NOT WIN32 OR CYGWIN)
    INSTALL ( FILES ${CMAKE_CURRENT_BINARY_DIR}/zorba_api.php
                    ${CMAKE_CURRENT_BINARY_DIR}/php_zorba_api.dll
              DESTINATION php_ext )
	ENDIF (NOT WIN32 OR CYGWIN)
  ###
  # Start PHP proxy generation
  ###
  #Configure the test file
  SET(phpAPIPath ${CMAKE_CURRENT_BINARY_DIR})
  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/generate_proxy.php.in ${CMAKE_CURRENT_BINARY_DIR}/generate_proxy.php)

  ADD_CUSTOM_COMMAND(
    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/zorba_api_wrapper.php
    # the following addes a dependency to the *.cxx file that is generated by swig
    DEPENDS ${swig_generated_file_fullname}
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/generate_proxy.php.in
    COMMAND ${PHP5_EXECUTABLE} 
    ARGS generate_proxy.php
  )
  ADD_CUSTOM_TARGET(php_wrapper ALL
    DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/zorba_api_wrapper.php
  )
  ### End PHP proxy generation

ENDIF( NOT PHP5_FOUND )
