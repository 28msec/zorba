INCLUDE(../cmake_modules/AddSrcSubfolder.cmake)

# some compiler flags that should always be used in order to force a good programming style
IF (MSVC)
	ADD_DEFINITIONS(${DEFINITIONS})
ELSE (MSVC)
    GET_FILENAME_COMPONENT(CXX_EXE ${CMAKE_CXX_COMPILER} NAME)
    IF ("icpc" STREQUAL ${CXX_EXE}) # intel cxx compiler
            MESSAGE(STATUS "it seems we are using the intel cxx compiler")
            ADD_DEFINITIONS(-D_DEBUG -DORBA_USE_PTHREAD_LIBRARY -wd981 -Wall)
    ELSE ("icpc" STREQUAL ${CXX_EXE}) # g++ compiler
            ADD_DEFINITIONS(-Wall -Wno-unused -Wpointer-arith -Woverloaded-virtual ${DEFINITIONS})
    ENDIF ("icpc" STREQUAL ${CXX_EXE})
ENDIF (MSVC)

SET(ZORBA_SRCS)

ADD_SRC_SUBFOLDER(ZORBA_SRCS api API_SRCS )
ADD_SRC_SUBFOLDER(ZORBA_SRCS compiler COMPILER_SRCS)

FOREACH (SRCS ${COMPILER_BUILD_SRCS})
    LIST(APPEND ZORBA_SRCS ${SRCS})
ENDFOREACH (SRCS)

ADD_SRC_SUBFOLDER(ZORBA_SRCS system SYSTEM_SRCS)
ADD_SRC_SUBFOLDER(ZORBA_SRCS context CONTEXT_SRCS)
ADD_SRC_SUBFOLDER(ZORBA_SRCS errors	ERRORS_SRCS)
ADD_SRC_SUBFOLDER(ZORBA_SRCS functions FUNCTIONS_SRCS)
ADD_SRC_SUBFOLDER(ZORBA_SRCS runtime RUNTIME_SRCS)
ADD_SRC_SUBFOLDER(ZORBA_SRCS store STORE_SRCS)
ADD_SRC_SUBFOLDER(ZORBA_SRCS types TYPES_SRCS)
ADD_SRC_SUBFOLDER(ZORBA_SRCS util UTIL_SRCS)


IF (MSVC)
	ADD_LIBRARY(zorba ${ZORBA_SRCS})
	IF (BUILD_STATIC_LIBRARY)
		ADD_LIBRARY(zorba_static ${ZORBA_SRCS})
	ENDIF (BUILD_STATIC_LIBRARY)
ELSE (MSVC)
	ADD_LIBRARY(zorba SHARED ${ZORBA_SRCS})
	IF (BUILD_STATIC_LIBRARY)
		ADD_LIBRARY(zorba_static STATIC ${ZORBA_SRCS})
	ENDIF (BUILD_STATIC_LIBRARY)
ENDIF (MSVC)

TARGET_LINK_LIBRARIES(zorba ${requiredlibs})

IF (BUILD_STATIC_LIBRARY)
	TARGET_LINK_LIBRARIES(zorba_static ${requiredlibs})
ENDIF (BUILD_STATIC_LIBRARY)
