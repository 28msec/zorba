<?xml version="1.0" encoding="UTF-8"?>

<!--
/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// Zorba Parse XML Fragment function                                           //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////
-->
<zorba:iterators
  xmlns:zorba="http://www.zorba-xquery.com"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.zorba-xquery.com ../runtime.xsd">
    
<zorba:header>
  <zorba:include form="Quoted">runtime/parsing_and_serializing/fragment_istream.h</zorba:include>
  <zorba:include form="Quoted">store/api/store.h</zorba:include>
</zorba:header>

<!--
/*******************************************************************************
 * 14.9.1 parse-xml:parse
********************************************************************************/
-->
  <zorba:iterator name="FnParseXmlFragmentIterator">
      
    <zorba:description author="Zorba Team">fn-zorba-xml:parse</zorba:description>
    
    <zorba:function>
      <zorba:signature localname="parse" prefix="fn-zorba-xml">
        <zorba:param>xs:string?</zorba:param>  <!-- string to parse -->
        <zorba:param>element()?</zorba:param>  <!-- parse() options -->
        <zorba:output>node()*</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>
    </zorba:function>
    
    <zorba:state generateReset="false">
      <zorba:member type="FragmentIStream" name="theFragmentStream" brief="the input fragment"/>
      <zorba:member type="store::LoadProperties" name="theProperties" brief="loader properties"/>
      <zorba:member type="zstring" name="baseUri"/>
      <zorba:member type="zstring" name="docUri"/>
    </zorba:state>
      
  </zorba:iterator>
  
  
</zorba:iterators>  
