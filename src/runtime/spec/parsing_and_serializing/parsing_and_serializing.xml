<?xml version="1.0" encoding="UTF-8"?>

<!--
/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// 14.9 Parsing and serializing                                                //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////
-->
<zorba:iterators
  xmlns:zorba="http://www.zorba-xquery.com"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.zorba-xquery.com ../runtime.xsd">
    
<!--
/*******************************************************************************
 * 14.9.1 fn:parse-xml
********************************************************************************/
-->
  <zorba:iterator name="FnParseXmlIterator">
      
    <zorba:description author="Zorba Team">fn:parse-xml</zorba:description>
    
    <zorba:function>

      <zorba:signature localname="parse-xml" prefix="fn" version="3.0">
        <zorba:param>xs:string?</zorba:param> <!-- string to parse -->
        <zorba:output>document-node()</zorba:output>
      </zorba:signature>
      
      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
        <zorba:isSource returnValue="true"/>
      </zorba:methods>

    </zorba:function>

  </zorba:iterator>

<!--
/*******************************************************************************
 * 14.9.3 fn:serialize
********************************************************************************/
-->
  <zorba:iterator name="FnSerializeIterator">

    <zorba:description author="Zorba Team">fn:serialize</zorba:description>

    <zorba:function>

      <zorba:signature localname="serialize" prefix="fn" version="3.0">
        <zorba:param>item()*</zorba:param>
        <zorba:output>xs:string</zorba:output>
      </zorba:signature>

      <zorba:signature localname="serialize" prefix="fn" version="3.0">
        <zorba:param>item()*</zorba:param>
        <zorba:param>element()?</zorba:param>
        <zorba:output>xs:string</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
        <zorba:isSource returnValue="true"/>
        <zorba:mustCopyInputNodes/>
      </zorba:methods>

    </zorba:function>

    <zorba:method static="true" name="streamReleaser" return="void">
      <zorba:param type="std::istream*" name="stream"/>
    </zorba:method>

    <zorba:method static="true" name="setSerializationParams" return="void">
      <zorba:param type="zorba::serializer&amp;" name="aSerializer"/>
      <zorba:param type="store::Item_t&amp;" name="aParamElem"/>
      <zorba:param type="static_context*" name="aSctx"/>
      <zorba:param type="const QueryLoc&amp;" name="aLoc"/>
    </zorba:method>

  </zorba:iterator>


</zorba:iterators>
