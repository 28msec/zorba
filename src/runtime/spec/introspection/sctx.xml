<?xml version="1.0" encoding="UTF-8"?>

<!--
/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////
-->
<zorba:iterators
  xmlns:zorba="http://www.zorba-xquery.com"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.zorba-xquery.com ../runtime.xsd">

<zorba:source>
    <zorba:include  form="Quoted">store/api/iterator.h</zorba:include>
    <zorba:include  form="Quoted">compiler/expression/var_expr.h</zorba:include>
</zorba:source>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="StaticNamespacesIterator">
    <zorba:description author="Zorba Team">
      sc:statically-known-namespaces
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="statically-known-namespaces"
                       prefix="fn-zorba-introspect-sctx">
        <zorba:output>xs:string*</zorba:output>
      </zorba:signature>
    </zorba:function>

    <zorba:state generateReset="false" generateDestructor="false">
      <zorba:member type="store::NsBindings" name="theBindings"
                    brief="vector of namespace bindings"/>
      <zorba:member type="ulong" name="thePosition" brief="current position"/>
    </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="StaticNamespaceBindingIterator">
    <zorba:description author="Zorba Team">
      sc:statically-known-namespace-binding
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="statically-known-namespace-binding"
                       prefix="fn-zorba-introspect-sctx">
        <zorba:param>xs:string</zorba:param>
        <zorba:output>xs:string?</zorba:output>
      </zorba:signature>
    </zorba:function>
</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="InscopeVariablesIterator">

  <zorba:description author="Zorba Team">
    sc:in-scope-variables
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="in-scope-variables"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:QName*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="std::vector&lt;var_expr_t&gt;" name="theVariables"
                  brief="vector of variables"/>
    <zorba:member type="ulong" name="thePosition" brief="current position"/>
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="DefaultCollectionTypeIterator">

  <zorba:description author="Zorba Team">
    sc:default-collection-type
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="default-collection-type"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="XPath10CompatModeIterator">

  <zorba:description author="Zorba Team">
    sc:xpath10-compatibility-mode
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="xpath10-compatibility-mode"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>
  </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="StaticallyKnownDocumentsIterator">

  <zorba:description author="Zorba Team">
    sc:statically-known-documents
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="statically-known-documents"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:anyURI*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="std::vector &lt; zstring &gt;" name="theDocuments"
                  brief="vector of document URIs"/>
    <zorba:member type="ulong" name="thePosition" brief="current position"/>
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="StaticallyKnownDocumentTypeIterator">

  <zorba:description author="Zorba Team">
    sc:statically-known-document-type
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="statically-known-document-type"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:QName</zorba:output>
    </zorba:signature>
  </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="StaticallyKnownCollationsIterator">

  <zorba:description author="Zorba Team">
    sc:statically-known-collations
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="statically-known-collations"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:anyURI*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="std::vector &lt; std::string &gt;" name="theCollations"
                  brief="vector of collation uris"/>
    <zorba:member type="ulong" name="thePosition" brief="current position"/>
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="ConstructionModeIterator">

  <zorba:description author="Zorba Team">
    sc:construction-mode
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="construction-mode"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="OrderingModeIterator">

  <zorba:description author="Zorba Team">
    sc:ordering-mode
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="ordering-mode"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="DefaultOrderIterator">

  <zorba:description author="Zorba Team">
    sc:default-order
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="default-order"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="BoundarySpacePolicyIterator">

  <zorba:description author="Zorba Team">
    sc:boundary-space-policy
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="boundary-space-policy"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="CopyNamespacesModeIterator">

  <zorba:description author="Zorba Team">
    sc:copy-namespaces-mode
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="copy-namespaces-mode"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:string+</zorba:output>
    </zorba:signature>
  </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="FunctionNamesIterator">

  <zorba:description author="Zorba Team">
    sc:function-names
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="function-names"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:QName*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="std::vector &lt; function *&gt;" name="theFunctions"
                  brief="vector of functions"/>
    <zorba:member type="ulong" name="thePosition" brief="current position"/>
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="FunctionArgumentsCountIterator">

  <zorba:description author="Zorba Team">
    sc:function-arguments-count
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="function-arguments-count"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:param>xs:QName</zorba:param>
      <zorba:output>xs:int*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="std::vector &lt; int &gt;" name="arities"
                  brief="vector of arities"/>
    <zorba:member type="unsigned int" name="position" brief="current position"/>
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="InScopeSchemaTypesIterator">

  <zorba:description author="Zorba Team">
    sc:in-scope-schema-types
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="in-scope-schema-types"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:QName*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="unsigned int" name="ns_pos" brief="current position"/>
    <zorba:member type="unsigned int" name="elem_pos" brief="current position"/>
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="InScopeElementDeclarationsIterator">

  <zorba:description author="Zorba Team">
    sc:in-scope-element-declarations
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="in-scope-element-declarations"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:QName*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="unsigned int" name="ns_pos" brief="current position"/>
    <zorba:member type="unsigned int" name="elem_pos" brief="current position"/>
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="InScopeAttributeDeclarationsIterator">

  <zorba:description author="Zorba Team">
    sc:in-scope-attribute-declarations
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="in-scope-attribute-declarations"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:QName*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="unsigned int" name="ns_pos" brief="current position"/>
    <zorba:member type="unsigned int" name="elem_pos" brief="current position"/>
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="InScopeElementGroupsIterator">

  <zorba:description author="Zorba Team">
    sc:in-scope-schema-types
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="in-scope-element-groups"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:QName*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="unsigned int" name="ns_pos" brief="current position"/>
    <zorba:member type="unsigned int" name="elem_pos" brief="current position"/>
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="InScopeAttributeGroupsIterator">

  <zorba:description author="Zorba Team">
    sc:in-scope-schema-types
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="in-scope-attribute-groups"
                     prefix="fn-zorba-introspect-sctx">
      <zorba:output>xs:QName*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false" generateDestructor="false">
    <zorba:member type="unsigned int" name="ns_pos" brief="current position"/>
    <zorba:member type="unsigned int" name="elem_pos" brief="current position"/>
  </zorba:state>

</zorba:iterator>


<!--
/*******************************************************************************
*******************************************************************************/
-->
<zorba:iterator name="OptionIterator">

    <zorba:description author="Zorba Team">
      sc:option
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="option"
                       prefix="fn-zorba-introspect-sctx">
        <zorba:param>xs:QName</zorba:param>
        <zorba:output>xs:string?</zorba:output>
      </zorba:signature>
    </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
*******************************************************************************/
-->
<zorba:iterator name="FunctionAnnotationsIterator">

    <zorba:description author="Zorba Team">
      sc:option
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="function-annotations"
                       prefix="fn-zorba-introspect-sctx">
        <zorba:param>xs:QName</zorba:param>
        <zorba:param>xs:integer</zorba:param>
        <zorba:output>xs:QName*</zorba:output>
      </zorba:signature>
    </zorba:function>
    
    <zorba:state generateReset="false" generateDestructor="false">
      <zorba:member type="const function*" name="theFunction"
                  brief="the function"/>
      <zorba:member type="ulong" name="thePosition" brief="current position"/>
    </zorba:state>

</zorba:iterator>

</zorba:iterators>
