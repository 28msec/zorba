<?xml version="1.0" encoding="UTF-8"?>

<!--
/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////
-->
<zorba:iterators
  xmlns:zorba="http://www.zorba-xquery.com"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.zorba-xquery.com ../runtime.xsd">
    
<zorba:source>
    <zorba:include  form="Quoted">store/api/iterator.h</zorba:include>
</zorba:source>
  

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="IsAvailableCollectionIterator">

    <zorba:description author="Zorba Team">
      dc:is-available-collection
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="is-available-collection"
                       prefix="fn-zorba-introspect-dctx">
        <zorba:param>xs:QName</zorba:param>
        <zorba:output>xs:boolean</zorba:output>
      </zorba:signature>
      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>
    </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="AvailableCollectionsIterator">

    <zorba:description author="Zorba Team">
      dc:available-collections
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="available-collections"
                       prefix="fn-zorba-introspect-dctx">
        <zorba:output>xs:QName*</zorba:output>
      </zorba:signature>
      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>
    </zorba:function>

    <zorba:state generateInit="false" generateReset="false" generateDestructor="false">
      <zorba:member type="store::Iterator_t" name="nameItState"
                    brief="the current iterator"/>
    </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="IsAvailableIndexIterator">

    <zorba:description author="Zorba Team">
      dc:is-available-index
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="is-available-index"
                       prefix="fn-zorba-introspect-dctx">
        <zorba:param>xs:QName</zorba:param>
        <zorba:output>xs:boolean</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>

    </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="AvailableIndexesIterator">

    <zorba:description author="Zorba Team">
      dc:available-indexes
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="available-indexes"
                       prefix="fn-zorba-introspect-dctx">
        <zorba:output>xs:QName*</zorba:output>
      </zorba:signature>
      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>
    </zorba:function>

    <zorba:state generateInit="false" generateReset="false" generateDestructor="false">
      <zorba:member type="store::Iterator_t" name="nameItState"
                    brief="the current iterator"/>
    </zorba:state>

</zorba:iterator>


<!--
/*******************************************************************************
*******************************************************************************/
-->
<zorba:iterator name="IsActivatedICIterator">

    <zorba:description author="Zorba Team">
      dc:is-activated-integrity-constraint
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="is-activated-integrity-constraint"
                       prefix="fn-zorba-introspect-dctx">
        <zorba:param>xs:QName</zorba:param>
        <zorba:output>xs:boolean</zorba:output>
      </zorba:signature>
      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>
    </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
*******************************************************************************/
-->
<zorba:iterator name="ActivatedICsIterator">

    <zorba:description author="Zorba Team">
      dc:activated-integrity-constraints
    </zorba:description>

    <zorba:function>
      <zorba:signature localname="activated-integrity-constraints"
                       prefix="fn-zorba-introspect-dctx">
        <zorba:output>xs:QName*</zorba:output>
      </zorba:signature>
      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>
    </zorba:function>

    <zorba:state  generateInit="false" 
                  generateReset="false" 
                  generateDestructor="false">
      <zorba:member type="store::Iterator_t" name="nameItState"
                    brief="the current iterator"/>
    </zorba:state>

</zorba:iterator>

</zorba:iterators>
