<?xml version="1.0" encoding="UTF-8"?>

<!--
/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////
-->
<zorba:iterators
  xmlns:zorba="http://www.zorba-xquery.com"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.zorba-xquery.com ../runtime.xsd">

<!--
/*******************************************************************************
********************************************************************************/
-->
  <zorba:iterator name="ReferenceIterator">

    <zorba:description author="Federico Cavalieri">       
      declare function ref:reference($item as item()) as xs:string
    </zorba:description>
    
    <zorba:function>
    
      <zorba:signature localname="reference" prefix="fn-reference">
        <zorba:param>structured-item()</zorba:param>   
        <zorba:output>xs:string</zorba:output>
      </zorba:signature>
      
      <zorba:methods>
        <zorba:mustCopyInputNodes value="true"/>
      </zorba:methods>

    </zorba:function>

  </zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
  <zorba:iterator name="HasReferenceIterator">

    <zorba:description author="Till Westmann">
      declare function ref:has-reference($item as item()) as xs:boolean
    </zorba:description>

    <zorba:function>

      <zorba:signature localname="has-reference" prefix="fn-reference">
        <zorba:param>structured-item()</zorba:param>
        <zorba:output>xs:boolean</zorba:output>
      </zorba:signature>

    </zorba:function>

  </zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
  <zorba:iterator name="AssignReferenceIterator">

    <zorba:description author="Till Westmann">
      declare function ref:assign-reference($item as item()) as xs:boolean
    </zorba:description>

    <zorba:function>

      <zorba:signature localname="assign-reference" prefix="fn-reference">
        <zorba:param>structured-item()</zorba:param>
        <zorba:param>xs:string</zorba:param>
        <zorba:output>xs:boolean</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:getScriptingKind returnValue="SEQUENTIAL_FUNC_EXPR"/>
      </zorba:methods>

    </zorba:function>

  </zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
  <zorba:iterator name="DereferenceIterator">

    <zorba:description author="Federico Cavalieri">
      declare function ref:dereference($reference as xs:string) as item()?
    </zorba:description>

    <zorba:function>
    
      <zorba:signature localname="dereference" prefix="fn-reference">
        <zorba:param>xs:string</zorba:param>
        <zorba:output>structured-item()?</zorba:output>
      </zorba:signature>
      
    </zorba:function>
        
  </zorba:iterator>

</zorba:iterators>

