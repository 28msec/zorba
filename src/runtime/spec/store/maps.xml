<?xml version="1.0" encoding="UTF-8"?>

<!--
/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////
-->
<zorba:iterators
  xmlns:zorba="http://www.zorba-xquery.com"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.zorba-xquery.com ../runtime.xsd">
    
<zorba:source>
    <zorba:include form="Quoted">store/api/iterator.h</zorba:include>
    <zorba:include form="Quoted">store/api/index.h</zorba:include>
</zorba:source>

<zorba:header>
    <zorba:include form="Quoted">store/api/index.h</zorba:include>
    <zorba:include form="Angle-bracket">vector</zorba:include>
</zorba:header>
  

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="MapCreateIterator" >

    <zorba:description author="Matthias Brantner">
    </zorba:description>

    <zorba:function>

      <zorba:signature localname="create" prefix="zorba-store-unordered-maps">
        <zorba:param>xs:string</zorba:param> <!-- name of the hashmap -->
        <zorba:param>item()</zorba:param> <!-- list of key types -->
        <zorba:output>empty-sequence()</zorba:output>
      </zorba:signature>

      <zorba:signature localname="create" prefix="zorba-store-unordered-maps">
        <zorba:param>xs:string</zorba:param> <!-- name of the hashmap -->
        <zorba:param>item()</zorba:param> <!-- list of key types -->
        <zorba:param>object()</zorba:param> <!-- options object -->
        <zorba:output>empty-sequence()</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:getScriptingKind returnValue="SEQUENTIAL_FUNC_EXPR"/>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>

    </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="MapDropIterator" >

    <zorba:description author="Matthias Brantner">
    </zorba:description>

    <zorba:function> 

      <zorba:signature localname="drop" prefix="zorba-store-unordered-maps">
        <zorba:param>xs:string</zorba:param>
        <zorba:output>empty-sequence()</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:getScriptingKind returnValue="SEQUENTIAL_FUNC_EXPR"/>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>

    </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="MapGetIterator" >

    <zorba:description author="Matthias Brantner">
    </zorba:description>

    <zorba:function> 

      <zorba:signature localname="get" prefix="zorba-store-unordered-maps">
        <zorba:param>xs:string</zorba:param>
        <zorba:param>item()</zorba:param>
        <zorba:output>item()*</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>

    </zorba:function>

    <zorba:state>
      <zorba:member type="store::IndexProbeIterator_t" name="theIter"/>
      <zorba:member type="store::IndexCondition_t" name="theCond"/>
    </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="MapInsertIterator" >

    <zorba:description author="Matthias Brantner">
    </zorba:description>

    <zorba:function> 

      <zorba:signature localname="insert" prefix="zorba-store-unordered-maps">
        <zorba:param>xs:string</zorba:param>
        <zorba:param>item()</zorba:param>
        <zorba:param>item()*</zorba:param>
        <zorba:output>empty-sequence()</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:getScriptingKind returnValue="SEQUENTIAL_FUNC_EXPR"/>
        <zorba:accessesDynCtx returnValue="true"/>
        <zorba:mustCopyInputNodes value="true"/>
      </zorba:methods>

    </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="MapDeleteIterator" >

    <zorba:description author="Matthias Brantner">
    </zorba:description>

    <zorba:function> 

      <zorba:signature
        localname="delete"
        prefix="zorba-store-unordered-maps">

        <zorba:param>xs:string</zorba:param>
        <zorba:param>item()</zorba:param>
        <zorba:output>empty-sequence()</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:getScriptingKind returnValue="SEQUENTIAL_FUNC_EXPR"/>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>

    </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="MapKeysIterator">

    <zorba:description author="Matthias Brantner">
    </zorba:description>

    <zorba:function> 

      <zorba:signature localname="keys" prefix="zorba-store-unordered-maps">
        <zorba:param>xs:string</zorba:param>
        <zorba:output>array()*</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>

    </zorba:function>

    <zorba:state>
      <zorba:member type="store::Index::KeyIterator_t" name="theIter"/>
    </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="MapSizeIterator" >

    <zorba:description author="Matthias Brantner">
    </zorba:description>

    <zorba:function> 

      <zorba:signature localname="size" prefix="zorba-store-unordered-maps">
        <zorba:param>xs:string</zorba:param>
        <zorba:output>xs:integer</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>

    </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="AvailableMapsIterator" >

    <zorba:description author="Matthias Brantner">
    </zorba:description>

    <zorba:function> 

      <zorba:signature localname="available-maps" prefix="zorba-store-unordered-maps">
        <zorba:output>xs:string*</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>

    </zorba:function>

    <zorba:state generateInit="false" generateReset="false" generateDestructor="false">
      <zorba:member type="store::Iterator_t"
        name="persistentMapNamesIter"
        brief="the current iterator"/>
      <zorba:member type="std::vector&lt;store::Item_t>"
        name="transientMapNames" brief="all the transient map names"/>
      <zorba:member type="std::vector&lt;store::Item_t>::const_iterator"
        name="transientMapNamesIter"
        brief="the current iterator"/>
    </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
********************************************************************************/
-->
<zorba:iterator name="MapOptionsIterator" >

    <zorba:description author="Matthias Brantner">
    </zorba:description>

    <zorba:function> 

      <zorba:signature localname="options" prefix="zorba-store-unordered-maps">
        <zorba:param>xs:string</zorba:param>
        <zorba:output>object()</zorba:output>
      </zorba:signature>

      <zorba:methods>
        <zorba:accessesDynCtx returnValue="true"/>
      </zorba:methods>

    </zorba:function>

</zorba:iterator>

</zorba:iterators>
