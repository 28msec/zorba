<?xml version="1.0" encoding="UTF-8"?>

<!--
/*******************************************************************************
* Debug iterators (trace, read-line, print)
* 8.1 fn:resolve-uri
* 3 The Error Function
********************************************************************************/
-->

<zorba:iterators xmlns:zorba="http://www.zorba-xquery.com">
    
<zorba:header>
    <zorba:include form="Quoted">common/shared_types.h</zorba:include>
    <zorba:include form="Quoted">runtime/base/narybase.h</zorba:include>
</zorba:header>

<zorba:source>
    <zorba:include form="Quoted">system/globalenv.h</zorba:include>
    <zorba:include form="Quoted">runtime/visitors/planiter_visitor.h</zorba:include>
    <zorba:include form="Quoted">store/api/item.h</zorba:include>
    <zorba:include form="Quoted">store/api/iterator.h</zorba:include>
    <zorba:include form="Quoted">store/api/item_factory.h</zorba:include>
</zorba:source>

<zorba:codegen>
    <zorba:h>
      <zorba:include form="Quoted">common/shared_types.h</zorba:include>
      <zorba:include form="Quoted">functions/function_impl.h</zorba:include>
    </zorba:h>
    <zorba:cpp>
      <zorba:include form="Quoted">runtime/misc/misc.h</zorba:include>
      <zorba:include form="Quoted">functions/func_misc.h</zorba:include>
    </zorba:cpp>
</zorba:codegen>
    
<!--
/*******************************************************************************
 * Debug iterators:trace
********************************************************************************/
-->

<zorba:iterator
  name="TraceIterator">

  <zorba:description author="Zorba Team">fn:trace</zorba:description>
    
  <zorba:state generateInit="true" generateReset="true">
    <zorba:member type="store::Item_t" name="theTagItem" defaultValue="NULL" brief=""/>
    <zorba:member type="uint32_t" name="theIndex" defaultValue="0" brief=""/>
    <zorba:member type="std::ostream*" name="theOS" defaultValue="0" brief=""/>
  </zorba:state>
  
  <zorba:function generateCodegen="false">
    <zorba:signature localname="trace" prefix="fn">
      <zorba:param>item()*</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>item()*</zorba:output>
    </zorba:signature>
  </zorba:function>
  
</zorba:iterator>

<!--
/*******************************************************************************
 * Debug iterators:read-line
********************************************************************************/
-->
  
<zorba:iterator name="ReadLineIterator">
  
  <zorba:description author="Zorba Team">op-zorba:read-line</zorba:description>
  
  <zorba:function requiresDynamicContext="true">
    <zorba:signature localname="read-line" prefix="op-zorba">
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
  
</zorba:iterator>


<!--
/*******************************************************************************
 * Debug iterators:print
********************************************************************************/
-->

<zorba:iterator name="PrintIterator">
  
  <zorba:description author="Zorba Team">op-zorba:print</zorba:description>
  
  <zorba:constructor>
    <zorba:parameter type="bool" name="aPrintToConsole" defaultValue="true"/>
  </zorba:constructor>
  
  <zorba:member type="bool" name="thePrintToConsole" />
  
  <zorba:function requiresDynamicContext="true">
    <zorba:signature localname="print" prefix="op-zorba">
      <zorba:param>item()*</zorba:param>
      <zorba:output>empty-sequence()</zorba:output>
    </zorba:signature>
  </zorba:function>
  
</zorba:iterator>
  

<!--
/*******************************************************************************
 * 8.1 fn:resolve-uri
********************************************************************************/
-->
  
  <zorba:iterator name="ResolveUriIterator">
    
    <zorba:description author="Zorba Team">fn:resolve-uri</zorba:description>
    
    <zorba:function requiresDynamicContext="true">
      <zorba:signature localname="resolve-uri" prefix="fn">
        <zorba:param>xs:string?</zorba:param>
        <zorba:param>xs:string</zorba:param>
        <zorba:output>xs:anyURI?</zorba:output>
      </zorba:signature>
    </zorba:function>
    
  </zorba:iterator>


<!--
/*******************************************************************************
 * 3 The Error Function
********************************************************************************/
-->
  
  <zorba:iterator name="ErrorIterator">
    
    <zorba:description author="Zorba Team">fn:error</zorba:description>
    
    <zorba:function isVacuous="true" isFnError="true">
      <zorba:signature localname="error" prefix="fn">
        <zorba:output>none</zorba:output>
      </zorba:signature>
      <zorba:signature localname="error" prefix="fn">
        <zorba:param>xs:QName</zorba:param>
        <zorba:output>none</zorba:output>
      </zorba:signature>
      <zorba:signature localname="error" prefix="fn">
        <zorba:param>xs:QName?</zorba:param>
        <zorba:param>xs:string</zorba:param>
        <zorba:output>none</zorba:output>
      </zorba:signature>
      <zorba:signature localname="error" prefix="fn">
        <zorba:param>xs:QName?</zorba:param>
        <zorba:param>xs:string</zorba:param>
        <zorba:param>item()*</zorba:param>
        <zorba:output>none</zorba:output>
      </zorba:signature>
    </zorba:function>
    
  </zorba:iterator>
</zorba:iterators>
