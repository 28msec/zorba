<?xml version="1.0" encoding="UTF-8"?>

<!--
/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// 7.2 Functions to Assemble and Disassemble Strings
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////
-->
<zorba:iterators
  xmlns:zorba="http://www.zorba-xquery.com"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.zorba-xquery.com ../runtime.xsd">

<zorba:header>
    <zorba:include form="Quoted">zorbautils/checked_vector.h</zorba:include>
    <zorba:include form="Quoted">zorbatypes/schema_types.h</zorba:include>
</zorba:header>

<!--
/*******************************************************************************
 * 7.2.1 fn:codepoints-to-string
********************************************************************************/
-->
<zorba:iterator  name="CodepointsToStringIterator">

  <zorba:description author="Zorba Team">
    fn:codepoints-to-string
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="codepoints-to-string" prefix="fn">
      <zorba:param>xs:integer*</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>
<!--
/*******************************************************************************
 * 7.2.2 fn:string-to-codepoints
********************************************************************************/
-->
<zorba:iterator name="StringToCodepointsIterator">

  <zorba:description author="Zorba Team">
    fn:string-to-codepoints
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="string-to-codepoints" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:integer*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateInit="false" generateReset="false">
    <zorba:member type="xs_unsignedInt" name="theIterator"
                  brief="the current iterator"/>
    <zorba:member type="checked_vector&lt;xs_unsignedInt&gt;" name="theResult"
      brief="the resulting vector"/>
    <zorba:member type="std::istream*" name="theStream" />
  </zorba:state>

</zorba:iterator>

<!--
/*******************************************************************************
 * 7.3.2 fn:compare
********************************************************************************/
-->

<zorba:iterator name="CompareStrIterator">

  <zorba:description author="Zorba Team">
      fn:compare
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="compare" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:integer?</zorba:output>
    </zorba:signature>

    <zorba:signature localname="compare" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:integer?</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.3.3 fn:codepoint-equal
********************************************************************************/
-->

<zorba:iterator name="CodepointEqualIterator">

  <zorba:description author="Zorba Team">
      fn:codepoint-equal
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="codepoint-equal" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:boolean?</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
 *
 * 7.4 Functions on String Values
 *_______________________________________________________________________*/
-->

<!--
/*******************************************************************************
 * 7.4.1 fn:concat
********************************************************************************/
-->
<zorba:iterator name="ConcatStrIterator">

  <zorba:description author="Zorba Team">
      fn:concat
  </zorba:description>

  <zorba:function>
    <zorba:signature variadic="true" localname="concat" prefix="fn">
      <zorba:param>xs:anyAtomicType?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>

    <zorba:methods>
      <zorba:ignoresSortedNodes/>
      <zorba:ignoresDuplicateNodes/>
    </zorba:methods>
  </zorba:function>
</zorba:iterator>



<!--
/*******************************************************************************
 * 7.4.2 fn:string-join
********************************************************************************/
-->
<zorba:iterator name="StringJoinIterator">

  <zorba:description author="Zorba Team">
      fn:string-join
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="string-join" prefix="fn" version="3.0">
      <zorba:param>xs:string*</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
    <zorba:signature localname="string-join" prefix="fn">
      <zorba:param>xs:string*</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.3 fn:substring
********************************************************************************/
-->
<zorba:iterator name="SubstringIterator">

  <zorba:description author="Zorba Team">
      fn:substring
  </zorba:description>

  <zorba:function specializable="true">
    <zorba:signature localname="substring" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:double</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>

    <zorba:signature localname="substring" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:double</zorba:param>
      <zorba:param>xs:double</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>

<zorba:iterator name="SubstringIntOptIterator">

  <zorba:description author="Zorba Team">
      fn:substring
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="substring_int" prefix="op">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:integer</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>

    <zorba:signature localname="substring_int" prefix="op">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:integer</zorba:param>
      <zorba:param>xs:integer</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.4 fn:string-length
********************************************************************************/
-->
<zorba:iterator name="StringLengthIterator">

  <zorba:description author="Zorba Team">
    fn:string-length
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="string-length" prefix="fn">
      <zorba:output>xs:integer</zorba:output>
    </zorba:signature>

    <zorba:signature localname="string-length" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:integer</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.5 fn:normalize-space
********************************************************************************/
-->
<zorba:iterator name="NormalizeSpaceIterator">

  <zorba:description author="Zorba Team">
    fn:normalize-space
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="normalize-space" prefix="fn">
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>

    <zorba:signature localname="normalize-space" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.6 fn:normalize-unicode
********************************************************************************/
-->
<zorba:iterator name="NormalizeUnicodeIterator">

  <zorba:description author="Zorba Team">
      fn:normalize-unicode
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="normalize-unicode" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>

    <zorba:signature localname="normalize-unicode" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.7 fn:upper-case
********************************************************************************/
-->
<zorba:iterator name="UpperCaseIterator">

  <zorba:description author="Zorba Team">
      fn:upper-case
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="upper-case" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.8 fn:lower-case
********************************************************************************/
-->
<zorba:iterator name="LowerCaseIterator">

  <zorba:description author="Zorba Team">
      fn:lower-case
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="lower-case" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.9 fn:translate
********************************************************************************/
-->
<zorba:iterator name="TranslateIterator">

  <zorba:description author="Zorba Team">
      fn:translate
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="translate" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.10 fn:encode-for-uri
********************************************************************************/
-->
<zorba:iterator name="EncodeForUriIterator">

  <zorba:description author="Zorba Team">
      fn:encode-for-uri
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="encode-for-uri" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.11 fn:iri-to-uri
********************************************************************************/
-->
<zorba:iterator name="IriToUriIterator">

  <zorba:description author="Zorba Team">
      fn:iri-to-uri
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="iri-to-uri" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.4.12 fn:escape-html-uri
********************************************************************************/
-->
<zorba:iterator name="EscapeHtmlUriIterator">

  <zorba:description author="Zorba Team">
      fn:escape-html-uri
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="escape-html-uri" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
 *
 * 7.5 Functions Based on Substring Matching
-->

<!--
/*******************************************************************************
 * 7.5.1 fn:contains
********************************************************************************/
-->
<zorba:iterator name="ContainsIterator">

  <zorba:description author="Zorba Team">
      fn:contains
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="contains" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>

    <zorba:signature localname="contains" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.5.2 fn:starts-with
********************************************************************************/
-->
<zorba:iterator name="StartsWithIterator">

  <zorba:description author="Zorba Team">
      fn:starts-with
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="starts-with" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>

    <zorba:signature localname="starts-with" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.5.3 fn:ends-with
********************************************************************************/
-->
<zorba:iterator name="EndsWithIterator">

  <zorba:description author="Zorba Team">
      fn:ends-with
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="ends-with" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>

    <zorba:signature localname="ends-with" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.5.4 fn:substring-before
********************************************************************************/
-->
<zorba:iterator name="SubstringBeforeIterator">

  <zorba:description author="Zorba Team">
      fn:substring-before
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="substring-before" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>

    <zorba:signature localname="substring-before" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 7.5.5 fn:substring-after
********************************************************************************/
-->
<zorba:iterator name="SubstringAfterIterator">

  <zorba:description author="Zorba Team">
      fn:substring-after
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="substring-after" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>

    <zorba:signature localname="substring-after" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>

<!--
/*******************************************************************************
// 7.6.2 fn:matches
********************************************************************************/
-->
<zorba:iterator name="FnMatchesIterator">

  <zorba:description author="Zorba Team">
      fn:matches
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="matches" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>

    <zorba:signature localname="matches" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>

<!--
/*******************************************************************************
// 7.6.3 fn:replace
********************************************************************************/
-->
<zorba:iterator name="FnReplaceIterator">

  <zorba:description author="Zorba Team">
      fn:replace
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="replace" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>

    <zorba:signature localname="replace" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>

<!--
/*******************************************************************************
 * 7.6.4 fn:tokenize
********************************************************************************/
-->
<zorba:iterator name="FnTokenizeIterator">

  <zorba:description author="Zorba Team">
      fn:tokenize
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="tokenize" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string*</zorba:output>
    </zorba:signature>

    <zorba:signature localname="tokenize" prefix="fn">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state generateReset="false">
    <zorba:member type="zstring" name="theString"
                  brief="the remaining string"/>
    <zorba:member type="zstring" name="thePattern"
                  brief="the pattern string"/>
    <zorba:member type="zstring" name="theFlags"
                  brief="the tokenizing flags"/>
    <zorba:member type="xs_int" name="start_pos" defaultValue="0"
                  brief="the start position"/>
    <zorba:member type="xs_boolean" name="hasmatched" defaultValue="false"
                  brief="flag indicating whether a match was found"/>
  </zorba:state>
</zorba:iterator>

<!--
/*******************************************************************************
// 5.6.5 fn:analyze-string
********************************************************************************/
-->
<zorba:iterator name="FnAnalyzeStringIterator">

  <zorba:description author="Zorba Team">
    fn:analyze-string
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="analyze-string" prefix="fn" version="3.0">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>element()</zorba:output>
    </zorba:signature>

    <zorba:signature localname="analyze-string" prefix="fn" version="3.0">
      <zorba:param>xs:string?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>element()</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>

<!--
/*******************************************************************************
 * http://www.zorba-xquery.com/modules/string
********************************************************************************/
-->
<!--
/*******************************************************************************
 * string:materialize
********************************************************************************/
-->
<zorba:iterator name="StringMaterializeIterator">

  <zorba:description author="Zorba Team">
    string:materialize
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="materialize" prefix="fn-zorba-string">
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
 * string:is-streamable
********************************************************************************/
-->
<zorba:iterator name="StringIsStreamableIterator">

  <zorba:description author="Zorba Team">
    string:is-streamable
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="is-streamable" prefix="fn-zorba-string">
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:boolean</zorba:output>
    </zorba:signature>
  </zorba:function>

</zorba:iterator>

<!--
/*******************************************************************************
 * string:tokenize
********************************************************************************/
-->
<zorba:iterator name="StringTokenizeIterator">

  <zorba:description author="Matthias Brantner">
    string:tokenize
  </zorba:description>

  <zorba:function>
    <zorba:signature localname="tokenize" prefix="fn-zorba-string">
      <zorba:param>xs:string</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string*</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:state>
    <zorba:member type="zstring" name="theSeparator"
      brief="separator for the tokenization"/>
    <zorba:member type="std::istream*" name="theIStream"
      brief="the remaining string (if the input is streamable)"/>
    <zorba:member type="zstring" name="theInput"
      brief="the string to tokenize (if the input is not streamable)"/>
    <zorba:member type="size_t" name="theNextStartPos" defaultValue="0"/>
  </zorba:state>

</zorba:iterator>

</zorba:iterators>
