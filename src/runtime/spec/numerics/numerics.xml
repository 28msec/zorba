<?xml version="1.0" encoding="UTF-8"?>

<!--
/////////////////////////////////////////////////////////////////////////////////
//  6.4  Functions on Numeric Values                                           // 
//  XQuery 1.1 functions (FormatNumber)                                        //
/////////////////////////////////////////////////////////////////////////////////
-->
<zorba:iterators
  xmlns:zorba="http://www.zorba-xquery.com"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.zorba-xquery.com ../runtime.xsd">

<zorba:header>
  <zorba:include form="Quoted">util/utf8_string.h</zorba:include>
</zorba:header>
  <!--
/*******************************************************************************
 * 6.4.1 fn:abs
********************************************************************************/
-->
<zorba:iterator name="AbsIterator">

  <zorba:description author="Zorba Team">fn:abs</zorba:description>

  <zorba:function>
    <zorba:signature localname="abs" prefix="fn">
      <zorba:param>xs:anyAtomicType?</zorba:param>
      <zorba:output>xs:anyAtomicType?</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>

<!--
/*******************************************************************************
 * 6.4.2 fn:ceiling
********************************************************************************/
-->
<zorba:iterator name="CeilingIterator">
  
  <zorba:description author="Zorba Team">fn:ceiling</zorba:description>
  
  <zorba:function>
    <zorba:signature localname="ceiling" prefix="fn">
      <zorba:param>xs:anyAtomicType?</zorba:param>
      <zorba:output>xs:anyAtomicType?</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>
  
<!--
/*******************************************************************************
 * 6.4.3 fn:floor
********************************************************************************/
-->
<zorba:iterator name="FloorIterator">
  
  <zorba:description author="Zorba Team">fn:floor</zorba:description>
  
  <zorba:function>

    <zorba:signature localname="floor" prefix="fn">
      <zorba:param>xs:anyAtomicType?</zorba:param>
      <zorba:output>xs:anyAtomicType?</zorba:output>
    </zorba:signature>

    <zorba:methods>
      <zorba:getReturnType/>
    </zorba:methods>
  </zorba:function>
</zorba:iterator>
  

<!--
/*******************************************************************************
 * 6.4.4 fn:round
********************************************************************************/
-->
<zorba:iterator name="RoundIterator">
  
  <zorba:description author="Zorba Team">fn:round</zorba:description>
  
  <zorba:function>
    <zorba:signature localname="round" prefix="fn">
      <zorba:param>xs:anyAtomicType?</zorba:param>
      <zorba:output>xs:anyAtomicType?</zorba:output>
    </zorba:signature>
    <zorba:signature localname="round" prefix="fn" version="3.0">
      <zorba:param>xs:anyAtomicType?</zorba:param>
      <zorba:param>xs:integer</zorba:param>
      <zorba:output>xs:anyAtomicType?</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>


<!--
/*******************************************************************************
 * 6.4.5 fn:round-half-to-even
********************************************************************************/
-->
<zorba:iterator name="RoundHalfToEvenIterator">
  
  <zorba:description author="Zorba Team">fn:round-half-to-even</zorba:description>
  
  <zorba:function>
    <zorba:signature localname="round-half-to-even" prefix="fn">
      <zorba:param>xs:anyAtomicType?</zorba:param>
      <zorba:output>xs:anyAtomicType?</zorba:output>
    </zorba:signature>
    <zorba:signature localname="round-half-to-even" prefix="fn">
      <zorba:param>xs:anyAtomicType?</zorba:param>
      <zorba:param>xs:integer</zorba:param>
      <zorba:output>xs:anyAtomicType?</zorba:output>
    </zorba:signature>
  </zorba:function>
</zorba:iterator>

<!--
/*******************************************************************************
 * XQuery 1.1 functions
********************************************************************************/
-->
  <zorba:iterator name="FormatNumberIterator">
    
    <zorba:description author="Zorba Team">fn:format-number</zorba:description>
    
    <zorba:function>
      <zorba:signature localname="format-number" prefix="fn" version="3.0">
        <zorba:param>xs:anyAtomicType?</zorba:param>
        <zorba:param>xs:string</zorba:param>
        <zorba:output>xs:string</zorba:output>
      </zorba:signature>
      <zorba:signature localname="format-number" prefix="fn" version="3.0">
        <zorba:param>xs:anyAtomicType?</zorba:param>
        <zorba:param>xs:string</zorba:param>
        <zorba:param>xs:string</zorba:param>
        <zorba:output>xs:string</zorba:output>
      </zorba:signature>
    </zorba:function>
  </zorba:iterator>
  
<!--
/*******************************************************************************
 * 4.5.1 fn:format-integer in XQuery3.0
********************************************************************************/
-->
<zorba:iterator name="FormatIntegerIterator">

  <zorba:description author="Zorba Team">fn:format-integer</zorba:description>

  <zorba:function>
    <zorba:signature localname="format-integer" prefix="fn" version="3.0">
      <zorba:param>xs:integer?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
    <zorba:signature localname="format-integer" prefix="fn" version="3.0">
      <zorba:param>xs:integer?</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:param>xs:string</zorba:param>
      <zorba:output>xs:string</zorba:output>
    </zorba:signature>
  </zorba:function>

  <zorba:method name="StringToXsInteger"
    return="static xs_integer">
    <zorba:param type="const char *" name="str"/>
  </zorba:method>

  <zorba:method name="checkOptionalModifier"
    return="static void">
    <zorba:param type="utf8_string&lt;zstring&gt; &amp;" name="utf8_picture"/>
    <zorba:param type="unsigned int" name="off"/>
    <zorba:param type="bool *" name="is_ordinal"/>
    <zorba:param type="bool *" name="is_traditional"/>
    <zorba:param type="utf8_string&lt;zstring&gt; &amp;" name="word_terminal"/>
  </zorba:method>

  <zorba:method name="formatIntegerAZ"
    return="static void">
    <zorba:param type="xs_integer" name="valueInteger"/>
    <zorba:param type="char" name="c0"/>
    <zorba:param type="zstring &amp;" name="resultString"/>
  </zorba:method>

  <zorba:method name="formatIntegerRoman"
    return="static void">
    <zorba:param type="xs_integer" name="valueInteger"/>
    <zorba:param type="zstring &amp;" name="resultString"/>
  </zorba:method>

  <zorba:method name="formatIntegerEnglish"
    return="static void">
    <zorba:param type="xs_integer" name="valueInteger"/>
    <zorba:param type="bool" name="is_ordinal"/>
    <zorba:param type="zstring &amp;" name="resultString"/>
  </zorba:method>

  <zorba:method name="isDecimalDigitPattern"
    return="static bool">
    <zorba:param type="utf8_string&lt;zstring&gt; &amp;" name="utf8_picture"/>
    <zorba:param type="unsigned int *" name="picture_size"/>
    <zorba:param type="unsigned int *" name="groupingInterval"/>
    <zorba:param type="utf8_string&lt;zstring&gt;::value_type *" name="groupingChar"/>
    <zorba:param type="utf8_string&lt;zstring&gt;::value_type *" name="utf8zero"/>
  </zorba:method>

  <zorba:method name="formatIntegerDecimalPattern"
    return="static void">
    <zorba:param type="zstring::const_reverse_iterator" name="valueit"/>
    <zorba:param type="zstring::const_reverse_iterator   &amp;" name="valueit_rend"/>
    <zorba:param type="std::vector&lt;unicode::code_point&gt;::const_reverse_iterator" name="pictureit"/>
    <zorba:param type="std::vector&lt;unicode::code_point&gt;::const_reverse_iterator  &amp;" name="pictureit_rend"/>
    <zorba:param type="unsigned int" name="picture_pos"/>
    <zorba:param type="unsigned int" name="grouping_interval"/>
    <zorba:param type="utf8_string&lt;zstring&gt;::value_type" name="grouping_char"/>
    <zorba:param type="utf8_string&lt;zstring&gt;::value_type" name="utf8zero"/>
    <zorba:param type="utf8_string&lt;zstring&gt; &amp;" name="utf8_result"/>
  </zorba:method>

  <zorba:method name="addOrdinalEnglish"
    return="static void">
    <zorba:param type="zstring &amp;" name="valueString"/>
    <zorba:param type="unsigned int" name="valuelen"/>
    <zorba:param type="utf8_string&lt;zstring&gt; &amp;" name="utf8_result"/>
  </zorba:method>

</zorba:iterator>

 </zorba:iterators>


