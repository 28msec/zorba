<!--
 !  Copyright 2006-2013 The FLWOR Foundation.
 !
 !  Licensed under the Apache License, Version 2.0 (the "License");
 !  you may not use this file except in compliance with the License.
 !  You may obtain a copy of the License at
 !
 !  http://www.apache.org/licenses/LICENSE-2.0
 !
 !  Unless required by applicable law or agreed to in writing, software
 !  distributed under the License is distributed on an "AS IS" BASIS,
 !  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 !  See the License for the specific language governing permissions and
 !  limitations under the License.
 -->

<!--
 !  This file lists all the namespace URIs and prefixes used for errors and
 !  warnings. The attributes are:
 !
 !  prefix:
 !    The error namespace prefix, e.g., "err" (for standard XQuery errors).
 !
 !  uri:
 !    The error namespace URI.  It can be either a C++ identifier that refers
 !    to constant or macro defined elsewhere, e.g., "XQUERY_ERR_NS" defined in
 !    ns_consts.h or a string literal starting with "http:".
 !
 !  class-prefix:
 !    The prefix for C++ class/type names used in code, e.g., "XQueryError" is
 !    used to form the class names "XQueryErrorCode" and "XQueryErrorQName".
 !
 !  kind-function:
 !    How the {class-prefix}QName::kind() member function is to be implemented;
 !    one of: "override", "standard", or "unknown".
 !
 !    override:
 !      You must supply the entire function definition in qname.cpp.
 !
 !    standard:
 !      The function definition is generated automatically such that it returns
 !      dynamic, static, and type error kinds based on the local name of the
 !      error's QName.
 !
 !    unknown:
 !      The function definition is generated automatically such that it returns
 !      UNKNOWN_KIND.
 !-->

<diagnostic-namespaces>

  <namespace prefix="err" uri="XQUERY_ERR_NS"
             class-prefix="XQueryError" kind-function="override"/>

  <namespace prefix="jerr" uri="JSONIQ_ERR_NS"
             class-prefix="JSONiqError" kind-function="standard"/>

  <namespace prefix="zerr" uri="ZORBA_ERR_NS"
             class-prefix="ZorbaError" kind-function="unknown"/>

  <namespace prefix="zwarn" uri="ZORBA_WARN_NS"
             class-prefix="ZorbaWarning" kind-function="standard"/>

  <namespace prefix="csv" uri="http://zorba.io/modules/json-csv"
             class-prefix="ZorbaCSVError" kind-function="unknown"/>
             
  <namespace prefix="dt" uri="http://zorba.io/modules/datetime"
             class-prefix="ZorbaDateTimeError" kind-function="unknown"/>
             
  <namespace prefix="zuri" uri="http://zorba.io/modules/uri"
             class-prefix="ZorbaURIError" kind-function="unknown"/>

</diagnostic-namespaces>
<!-- vim:set et sw=2 ts=2: -->
