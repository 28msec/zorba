/**
 * Copyright 2006-2013 The FLWOR Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
 /*
  * THIS FILE IS GENERATED.
  * PLEASE DO NOT EDIT.
  */


#include "stdafx.h"
#include <zorba/diagnostic_list.h>

namespace zorba {


namespace err {

XQueryErrorCode XPST0001( "err:XPST0001" );


XQueryErrorCode XPST0003( "err:XPST0003" );


XQueryErrorCode XPST0005( "err:XPST0005" );


XQueryErrorCode XPST0008( "err:XPST0008" );


XQueryErrorCode XPST0017( "err:XPST0017" );


XQueryErrorCode XPST0051( "err:XPST0051" );


XQueryErrorCode XPST0080( "err:XPST0080" );


XQueryErrorCode XPST0081( "err:XPST0081" );


XQueryErrorCode XPST0083( "err:XPST0083" );


XQueryErrorCode XPTY0004( "err:XPTY0004" );


XQueryErrorCode XPTY0018( "err:XPTY0018" );


XQueryErrorCode XPTY0019( "err:XPTY0019" );


XQueryErrorCode XPTY0020( "err:XPTY0020" );


XQueryErrorCode XPTY0117( "err:XPTY0117" );


XQueryErrorCode XQTY0024( "err:XQTY0024" );


XQueryErrorCode XQTY0030( "err:XQTY0030" );


XQueryErrorCode XQTY0086( "err:XQTY0086" );


XQueryErrorCode XQTY0105( "err:XQTY0105" );


XQueryErrorCode XQST0009( "err:XQST0009" );


XQueryErrorCode XQST0012( "err:XQST0012" );


XQueryErrorCode XQST0013( "err:XQST0013" );


XQueryErrorCode XQST0022( "err:XQST0022" );


XQueryErrorCode XQST0031( "err:XQST0031" );


XQueryErrorCode XQST0032( "err:XQST0032" );


XQueryErrorCode XQST0033( "err:XQST0033" );


XQueryErrorCode XQST0034( "err:XQST0034" );


XQueryErrorCode XQST0035( "err:XQST0035" );


XQueryErrorCode XQST0036( "err:XQST0036" );


XQueryErrorCode XQST0038( "err:XQST0038" );


XQueryErrorCode XQST0039( "err:XQST0039" );


XQueryErrorCode XQST0040( "err:XQST0040" );


XQueryErrorCode XQST0045( "err:XQST0045" );


XQueryErrorCode XQST0046( "err:XQST0046" );


XQueryErrorCode XQST0047( "err:XQST0047" );


XQueryErrorCode XQST0048( "err:XQST0048" );


XQueryErrorCode XQST0049( "err:XQST0049" );


XQueryErrorCode XQST0052( "err:XQST0052" );


XQueryErrorCode XQST0054( "err:XQST0054" );


XQueryErrorCode XQST0055( "err:XQST0055" );


XQueryErrorCode XQST0057( "err:XQST0057" );


XQueryErrorCode XQST0058( "err:XQST0058" );


XQueryErrorCode XQST0059( "err:XQST0059" );


XQueryErrorCode XQST0060( "err:XQST0060" );


XQueryErrorCode XQST0065( "err:XQST0065" );


XQueryErrorCode XQST0066( "err:XQST0066" );


XQueryErrorCode XQST0067( "err:XQST0067" );


XQueryErrorCode XQST0068( "err:XQST0068" );


XQueryErrorCode XQST0069( "err:XQST0069" );


XQueryErrorCode XQST0070( "err:XQST0070" );


XQueryErrorCode XQST0071( "err:XQST0071" );


XQueryErrorCode XQST0076( "err:XQST0076" );


XQueryErrorCode XQST0079( "err:XQST0079" );


XQueryErrorCode XQST0085( "err:XQST0085" );


XQueryErrorCode XQST0087( "err:XQST0087" );


XQueryErrorCode XQST0088( "err:XQST0088" );


XQueryErrorCode XQST0089( "err:XQST0089" );


XQueryErrorCode XQST0090( "err:XQST0090" );


XQueryErrorCode XQST0093( "err:XQST0093" );


XQueryErrorCode XQST0094( "err:XQST0094" );


XQueryErrorCode XQST0097( "err:XQST0097" );


XQueryErrorCode XQST0098( "err:XQST0098" );


XQueryErrorCode XQST0099( "err:XQST0099" );


XQueryErrorCode XQST0103( "err:XQST0103" );


XQueryErrorCode XQST0106( "err:XQST0106" );


XQueryErrorCode XQST0111( "err:XQST0111" );


XQueryErrorCode XQST0113( "err:XQST0113" );


XQueryErrorCode XQST0114( "err:XQST0114" );


XQueryErrorCode XQST0116( "err:XQST0116" );


XQueryErrorCode XQST0120( "err:XQST0120" );


XQueryErrorCode XQST0122( "err:XQST0122" );


XQueryErrorCode XQST0123( "err:XQST0123" );


XQueryErrorCode XQST0126( "err:XQST0126" );


XQueryErrorCode XQST0127( "err:XQST0127" );


XQueryErrorCode XQST0128( "err:XQST0128" );


XQueryErrorCode XPDY0002( "err:XPDY0002" );


XQueryErrorCode XPDY0050( "err:XPDY0050" );


XQueryErrorCode XQDY0025( "err:XQDY0025" );


XQueryErrorCode XQDY0026( "err:XQDY0026" );


XQueryErrorCode XQDY0027( "err:XQDY0027" );


XQueryErrorCode XQDY0041( "err:XQDY0041" );


XQueryErrorCode XQDY0044( "err:XQDY0044" );


XQueryErrorCode XQDY0054( "err:XQDY0054" );


XQueryErrorCode XQDY0061( "err:XQDY0061" );


XQueryErrorCode XQDY0064( "err:XQDY0064" );


XQueryErrorCode XQDY0072( "err:XQDY0072" );


XQueryErrorCode XQDY0074( "err:XQDY0074" );


XQueryErrorCode XQDY0084( "err:XQDY0084" );


XQueryErrorCode XQDY0091( "err:XQDY0091" );


XQueryErrorCode XQDY0092( "err:XQDY0092" );


XQueryErrorCode XQDY0096( "err:XQDY0096" );


XQueryErrorCode XQDY0101( "err:XQDY0101" );


XQueryErrorCode XQDY0102( "err:XQDY0102" );


XQueryErrorCode XTDE1310( "err:XTDE1310" );


XQueryErrorCode FOFD1340( "err:FOFD1340" );


XQueryErrorCode FOFD1350( "err:FOFD1350" );


#if !defined(ZORBA_NO_FULL_TEXT)
XQueryErrorCode FTST0008( "err:FTST0008" );


XQueryErrorCode FTST0009( "err:FTST0009" );


XQueryErrorCode FTDY0016( "err:FTDY0016" );


XQueryErrorCode FTDY0017( "err:FTDY0017" );


XQueryErrorCode FTST0018( "err:FTST0018" );


XQueryErrorCode FTST0019( "err:FTST0019" );


XQueryErrorCode FTDY0020( "err:FTDY0020" );
#endif


XQueryErrorCode FOER0000( "err:FOER0000" );


XQueryErrorCode FOAR0001( "err:FOAR0001" );


XQueryErrorCode FOAR0002( "err:FOAR0002" );


XQueryErrorCode FOCA0001( "err:FOCA0001" );


XQueryErrorCode FOCA0002( "err:FOCA0002" );


XQueryErrorCode FOCA0003( "err:FOCA0003" );


XQueryErrorCode FOCA0005( "err:FOCA0005" );


XQueryErrorCode FOCA0006( "err:FOCA0006" );


XQueryErrorCode FOCH0001( "err:FOCH0001" );


XQueryErrorCode FOCH0002( "err:FOCH0002" );


XQueryErrorCode FOCH0003( "err:FOCH0003" );


XQueryErrorCode FOCH0004( "err:FOCH0004" );


XQueryErrorCode FODC0001( "err:FODC0001" );


XQueryErrorCode FODC0002( "err:FODC0002" );


XQueryErrorCode FODC0003( "err:FODC0003" );


XQueryErrorCode FODC0004( "err:FODC0004" );


XQueryErrorCode FODC0005( "err:FODC0005" );


XQueryErrorCode FODC0006( "err:FODC0006" );


XQueryErrorCode FODC0007( "err:FODC0007" );


XQueryErrorCode FODF1280( "err:FODF1280" );


XQueryErrorCode FODF1310( "err:FODF1310" );


XQueryErrorCode FODT0001( "err:FODT0001" );


XQueryErrorCode FODT0002( "err:FODT0002" );


XQueryErrorCode FODT0003( "err:FODT0003" );


XQueryErrorCode FONS0004( "err:FONS0004" );


XQueryErrorCode FONS0005( "err:FONS0005" );


XQueryErrorCode FORG0001( "err:FORG0001" );


XQueryErrorCode FORG0002( "err:FORG0002" );


XQueryErrorCode FORG0003( "err:FORG0003" );


XQueryErrorCode FORG0004( "err:FORG0004" );


XQueryErrorCode FORG0005( "err:FORG0005" );


XQueryErrorCode FORG0006( "err:FORG0006" );


XQueryErrorCode FORG0008( "err:FORG0008" );


XQueryErrorCode FORG0009( "err:FORG0009" );


XQueryErrorCode FORX0001( "err:FORX0001" );


XQueryErrorCode FORX0002( "err:FORX0002" );


XQueryErrorCode FORX0003( "err:FORX0003" );


XQueryErrorCode FORX0004( "err:FORX0004" );


XQueryErrorCode FOTY0012( "err:FOTY0012" );


XQueryErrorCode FOTY0013( "err:FOTY0013" );


XQueryErrorCode FOTY0014( "err:FOTY0014" );


XQueryErrorCode FOTY0015( "err:FOTY0015" );


XQueryErrorCode FOUT1170( "err:FOUT1170" );


XQueryErrorCode FOUT1190( "err:FOUT1190" );


XQueryErrorCode FOFL0001( "err:FOFL0001" );


XQueryErrorCode FOCZ0001( "err:FOCZ0001" );


XQueryErrorCode XUST0001( "err:XUST0001" );


XQueryErrorCode XUST0002( "err:XUST0002" );


XQueryErrorCode XUST0003( "err:XUST0003" );


XQueryErrorCode XUTY0004( "err:XUTY0004" );


XQueryErrorCode XUTY0005( "err:XUTY0005" );


XQueryErrorCode XUTY0006( "err:XUTY0006" );


XQueryErrorCode XUTY0007( "err:XUTY0007" );


XQueryErrorCode XUTY0008( "err:XUTY0008" );


XQueryErrorCode XUDY0009( "err:XUDY0009" );


XQueryErrorCode XUTY0010( "err:XUTY0010" );


XQueryErrorCode XUTY0011( "err:XUTY0011" );


XQueryErrorCode XUTY0012( "err:XUTY0012" );


XQueryErrorCode XUTY0013( "err:XUTY0013" );


XQueryErrorCode XUDY0014( "err:XUDY0014" );


XQueryErrorCode XUDY0015( "err:XUDY0015" );


XQueryErrorCode XUDY0016( "err:XUDY0016" );


XQueryErrorCode XUDY0017( "err:XUDY0017" );


XQueryErrorCode XUDY0018( "err:XUDY0018" );


XQueryErrorCode XUDY0019( "err:XUDY0019" );


XQueryErrorCode XUDY0021( "err:XUDY0021" );


XQueryErrorCode XUTY0022( "err:XUTY0022" );


XQueryErrorCode XUDY0023( "err:XUDY0023" );


XQueryErrorCode XUDY0024( "err:XUDY0024" );


XQueryErrorCode XUDY0027( "err:XUDY0027" );


XQueryErrorCode XUST0028( "err:XUST0028" );


XQueryErrorCode XUDY0029( "err:XUDY0029" );


XQueryErrorCode XUDY0030( "err:XUDY0030" );


XQueryErrorCode XUDY0031( "err:XUDY0031" );


XQueryErrorCode FOUP0001( "err:FOUP0001" );


XQueryErrorCode FOUP0002( "err:FOUP0002" );


XQueryErrorCode SENR0001( "err:SENR0001" );


XQueryErrorCode SERE0003( "err:SERE0003" );


XQueryErrorCode SEPM0004( "err:SEPM0004" );


XQueryErrorCode SERE0005( "err:SERE0005" );


XQueryErrorCode SERE0006( "err:SERE0006" );


XQueryErrorCode SESU0007( "err:SESU0007" );


XQueryErrorCode SERE0008( "err:SERE0008" );


XQueryErrorCode SEPM0009( "err:SEPM0009" );


XQueryErrorCode SEPM0010( "err:SEPM0010" );


XQueryErrorCode SESU0011( "err:SESU0011" );


XQueryErrorCode SERE0012( "err:SERE0012" );


XQueryErrorCode SESU0013( "err:SESU0013" );


XQueryErrorCode SERE0014( "err:SERE0014" );


XQueryErrorCode SERE0015( "err:SERE0015" );


XQueryErrorCode SEPM0016( "err:SEPM0016" );


} // namespace err

namespace zerr {

ZorbaErrorCode ZXQP0000_NO_ERROR( "zerr:ZXQP0000" );


ZorbaErrorCode ZXQP0001_DYNAMIC_RUNTIME_ERROR( "zerr:ZXQP0001" );


ZorbaErrorCode ZXQP0002_ASSERT_FAILED( "zerr:ZXQP0002" );


ZorbaErrorCode ZXQP0003_INTERNAL_ERROR( "zerr:ZXQP0003" );


ZorbaErrorCode ZXQP0004_NOT_IMPLEMENTED( "zerr:ZXQP0004" );


ZorbaErrorCode ZXQP0005_NOT_ENABLED( "zerr:ZXQP0005" );


ZorbaErrorCode ZXQP0006_UNKNOWN_ENCODING( "zerr:ZXQP0006" );


ZorbaErrorCode ZXQP0007_FUNCTION_SIGNATURE_NOT_EQUAL( "zerr:ZXQP0007" );


ZorbaErrorCode ZXQP0008_FUNCTION_IMPL_NOT_FOUND( "zerr:ZXQP0008" );


ZorbaErrorCode ZXQP0009_FUNCTION_LOCALNAME_MISMATCH( "zerr:ZXQP0009" );


ZorbaErrorCode ZXQP0010_FUNCTION_NOT_SEQUENTIAL( "zerr:ZXQP0010" );


ZorbaErrorCode ZXQP0011_INVALID_LOCALE( "zerr:ZXQP0011" );


ZorbaErrorCode ZXQP0012_UNKNOWN_LOCALE( "zerr:ZXQP0012" );


ZorbaErrorCode ZXQP0013_FXCHARHEAP_EXCEPTION( "zerr:ZXQP0013" );


ZorbaErrorCode ZXQP0014_OUT_OF_MEMORY( "zerr:ZXQP0014" );


ZorbaErrorCode ZXQP0016_RESERVED_MODULE_TARGET_NAMESPACE( "zerr:ZXQP0016" );


ZorbaErrorCode ZXQP0017_FILE_ACCESS_DISABLED( "zerr:ZXQP0017" );


ZorbaErrorCode ZXQP0020_INVALID_URI( "zerr:ZXQP0020" );


ZorbaErrorCode ZXQP0021_USER_ERROR( "zerr:ZXQP0021" );


ZorbaErrorCode ZXQP0024_XML_DOES_NOT_MATCH_SCHEMA( "zerr:ZXQP0024" );


ZorbaErrorCode ZXQP0025_COULD_NOT_FETCH_RESOURCE( "zerr:ZXQP0025" );


ZorbaErrorCode ZXQP0026_INVALID_ENUM_VALUE( "zerr:ZXQP0026" );


ZorbaErrorCode ZXQP0028_TARGET_NAMESPACE_NOT_PROVIDED( "zerr:ZXQP0028" );


ZorbaErrorCode ZXQP0029_URI_ACCESS_DENIED( "zerr:ZXQP0029" );


ZorbaErrorCode ZXQP0030_DEADLOCK( "zerr:ZXQP0030" );


ZorbaErrorCode ZXQP0031_MALFORMED_XQUERYX_INPUT( "zerr:ZXQP0031" );


ZorbaErrorCode ZXQP0032_ERROR_TRANSFORMING_XQUERYX_TO_XQUERY( "zerr:ZXQP0032" );


ZorbaErrorCode ZXQP0033_SCHEMA_XML_ERROR( "zerr:ZXQP0033" );


ZorbaErrorCode ZXQP0035_SCHEMA_UNEXPECTED_ERROR( "zerr:ZXQP0035" );


ZorbaErrorCode ZXQP0036_BREAKITERATOR_CREATION_FAILED( "zerr:ZXQP0036" );


ZorbaErrorCode ZXQP0037_INAPPROPRIATE_MODULE_VERSION( "zerr:ZXQP0037" );


ZorbaErrorCode ZXQP0038_INAPPROPRIATE_ZORBA_VERSION( "zerr:ZXQP0038" );


ZorbaErrorCode ZXQP0039_INVALID_VERSION_SPECIFICATION( "zerr:ZXQP0039" );


ZorbaErrorCode ZXQP0040_MISSING_NONDETERMINISTIC_ANNOTATION( "zerr:ZXQP0040" );


ZorbaErrorCode ZXQP0050_FEATURE_NOT_AVAILABLE( "zerr:ZXQP0050" );


ZorbaErrorCode ZXQP0060_OPTION_NOT_KNOWN( "zerr:ZXQP0060" );


ZorbaErrorCode ZXQP0061_DISABLE_HTTP_OPTION_IN_QUERY( "zerr:ZXQP0061" );


ZorbaErrorCode ZXQP0062_MISSING_ANNOTATION_LITERALS( "zerr:ZXQP0062" );


ZorbaErrorCode ZXQP0063_INVALID_ANNOTATION_LITERAL_TYPE( "zerr:ZXQP0063" );


ZorbaErrorCode ZXQP0064_INVALID_ARGUMENT_INDEX( "zerr:ZXQP0064" );


ZorbaErrorCode ZXQP0065_INVALID_ANNOTATION( "zerr:ZXQP0065" );


#if !defined(ZORBA_NO_FULL_TEXT)
ZorbaErrorCode ZXQP8401_THESAURUS_VERSION_MISMATCH( "zerr:ZXQP8401" );


ZorbaErrorCode ZXQP8402_THESAURUS_ENDIANNESS_MISMATCH( "zerr:ZXQP8402" );


ZorbaErrorCode ZXQP8403_THESAURUS_DATA_ERROR( "zerr:ZXQP8403" );
#endif


ZorbaErrorCode ZXQD0001_PREFIX_NOT_DECLARED( "zerr:ZXQD0001" );


ZorbaErrorCode ZXQD0002_DOCUMENT_NOT_VALID( "zerr:ZXQD0002" );


ZorbaErrorCode ZXQD0003_INCONSISTENT_PARSE_FRAGMENT_OPTIONS( "zerr:ZXQD0003" );


ZorbaErrorCode ZXQD0004_INVALID_PARAMETER( "zerr:ZXQD0004" );


ZorbaErrorCode ZXQD0005_INVALID_KEY_FOR_MAP( "zerr:ZXQD0005" );


ZorbaErrorCode ZXQD0006_INVALID_UTF8_BYTE_SEQUENCE( "zerr:ZXQD0006" );


ZorbaErrorCode ZAPI0002_XQUERY_COMPILATION_FAILED( "zerr:ZAPI0002" );


ZorbaErrorCode ZAPI0003_XQUERY_NOT_COMPILED( "zerr:ZAPI0003" );


ZorbaErrorCode ZAPI0004_XQUERY_ALREADY_COMPILED( "zerr:ZAPI0004" );


ZorbaErrorCode ZAPI0005_XQUERY_ALREADY_EXECUTING( "zerr:ZAPI0005" );


ZorbaErrorCode ZAPI0006_XQUERY_ALREADY_CLOSED( "zerr:ZAPI0006" );


ZorbaErrorCode ZAPI0007_CANNOT_SERIALIZE_PUL( "zerr:ZAPI0007" );


ZorbaErrorCode ZAPI0008_NOT_AN_UPDATE_XQUERY( "zerr:ZAPI0008" );


ZorbaErrorCode ZAPI0009_XQUERY_NOT_COMPILED_IN_DEBUG_MODE( "zerr:ZAPI0009" );


ZorbaErrorCode ZAPI0011_VARIABLE_NOT_DECLARED( "zerr:ZAPI0011" );


ZorbaErrorCode ZAPI0014_INVALID_ARGUMENT( "zerr:ZAPI0014" );


ZorbaErrorCode ZAPI0015_CREATEMODULE_NOT_FOUND( "zerr:ZAPI0015" );


ZorbaErrorCode ZAPI0019_MODULE_ALREADY_REGISTERED( "zerr:ZAPI0019" );


ZorbaErrorCode ZAPI0020_DOCUMENT_ALREADY_EXISTS( "zerr:ZAPI0020" );


ZorbaErrorCode ZAPI0021_ITEM_TO_LOAD_IS_NOT_XML_DOC( "zerr:ZAPI0021" );


ZorbaErrorCode ZAPI0023_NON_ATOMIC_CONTEXT_SIZE_VALUE( "zerr:ZAPI0023" );


ZorbaErrorCode ZAPI0024_NON_INTEGER_CONTEXT_SIZE_VALUE( "zerr:ZAPI0024" );


ZorbaErrorCode ZAPI0025_NON_ATOMIC_CONTEXT_POSITION_VALUE( "zerr:ZAPI0025" );


ZorbaErrorCode ZAPI0026_NON_INTEGER_CONTEXT_POSITION_VALUE( "zerr:ZAPI0026" );


ZorbaErrorCode ZAPI0027_CANNOT_UPDATE_DCTX_WITH_ITERATORS( "zerr:ZAPI0027" );


ZorbaErrorCode ZAPI0028_INVALID_NODE_URI( "zerr:ZAPI0028" );


ZorbaErrorCode ZAPI0029_REFERENCE_ALREADY_PRESENT( "zerr:ZAPI0029" );


ZorbaErrorCode ZAPI0030_NO_CURRENT_REFERENCE( "zerr:ZAPI0030" );


ZorbaErrorCode ZAPI0039_XQUERY_HAS_ITERATOR_ALREADY( "zerr:ZAPI0039" );


ZorbaErrorCode ZAPI0040_ITERATOR_NOT_OPEN( "zerr:ZAPI0040" );


ZorbaErrorCode ZAPI0041_ITERATOR_ALREADY_OPEN( "zerr:ZAPI0041" );


ZorbaErrorCode ZAPI0042_ITERATOR_CLOSED( "zerr:ZAPI0042" );


ZorbaErrorCode ZAPI0043_CANNOT_SERIALIZE_JSON_ITEM( "zerr:ZAPI0043" );


ZorbaErrorCode ZAPI0045_CANNOT_SERIALIZE_MIXED_XDM_JDM( "zerr:ZAPI0045" );


ZorbaErrorCode ZAPI0070_INVALID_SERIALIZATION_METHOD_FOR_SAX( "zerr:ZAPI0070" );


ZorbaErrorCode ZAPI0080_CANNOT_RETRIEVE_REFERENCE( "zerr:ZAPI0080" );


ZorbaErrorCode ZAPI0090_CANNOT_VALIDATE_NON_ROOT( "zerr:ZAPI0090" );


ZorbaErrorCode ZCSE0001_NONEXISTENT_INPUT_FIELD( "zerr:ZCSE0001" );


ZorbaErrorCode ZCSE0002_INCOMPATIBLE_INPUT_FIELD( "zerr:ZCSE0002" );


ZorbaErrorCode ZCSE0003_UNRECOGNIZED_CLASS_FIELD( "zerr:ZCSE0003" );


ZorbaErrorCode ZCSE0004_UNRESOLVED_FIELD_REFERENCE( "zerr:ZCSE0004" );


ZorbaErrorCode ZCSE0005_CLASS_VERSION_TOO_NEW( "zerr:ZCSE0005" );


ZorbaErrorCode ZCSE0006_CLASS_VERSION_TOO_OLD( "zerr:ZCSE0006" );


ZorbaErrorCode ZCSE0007_INPUT_ARCHIVE_USED_FOR_OUT_SERIALIZATION( "zerr:ZCSE0007" );


ZorbaErrorCode ZCSE0008_OUTPUT_ARCHIVE_USED_FOR_IN_SERIALIZATION( "zerr:ZCSE0008" );


ZorbaErrorCode ZCSE0009_CLASS_NOT_SERIALIZABLE( "zerr:ZCSE0009" );


ZorbaErrorCode ZCSE0010_ITEM_TYPE_NOT_SERIALIZABLE( "zerr:ZCSE0010" );


ZorbaErrorCode ZCSE0011_INPUT_ARCHIVE_NOT_ZORBA_ARCHIVE( "zerr:ZCSE0011" );


ZorbaErrorCode ZCSE0012_INCOMPATIBLE_ARCHIVE_VERSION( "zerr:ZCSE0012" );


ZorbaErrorCode ZCSE0013_UNABLE_TO_LOAD_QUERY( "zerr:ZCSE0013" );


ZorbaErrorCode ZCSE0014_INFINITE_CIRCULAR_DEPENDENCIES( "zerr:ZCSE0014" );


ZorbaErrorCode ZCSE0015_INCOMPATIBLE_BETWEEN_32_AND_64_BITS_OR_LE_AND_BE( "zerr:ZCSE0015" );


ZorbaErrorCode ZCSE0016_CANNOT_LOAD_FROM_RELEASE_TO_DEBUG( "zerr:ZCSE0016" );


ZorbaErrorCode ZCSE0017_CANNOT_LOAD_FROM_DEBUG_TO_RELEASE( "zerr:ZCSE0017" );


ZorbaErrorCode ZDDY0001_COLLECTION_NOT_DECLARED( "zerr:ZDDY0001" );


ZorbaErrorCode ZDDY0002_COLLECTION_ALREADY_EXISTS( "zerr:ZDDY0002" );


ZorbaErrorCode ZDDY0003_COLLECTION_DOES_NOT_EXIST( "zerr:ZDDY0003" );


ZorbaErrorCode ZDDY0004_COLLECTION_CONST_UPDATE( "zerr:ZDDY0004" );


ZorbaErrorCode ZDDY0005_COLLECTION_APPEND_BAD_INSERT( "zerr:ZDDY0005" );


ZorbaErrorCode ZDDY0006_COLLECTION_QUEUE_BAD_INSERT( "zerr:ZDDY0006" );


ZorbaErrorCode ZDDY0007_COLLECTION_APPEND_BAD_DELETE( "zerr:ZDDY0007" );


ZorbaErrorCode ZDDY0008_COLLECTION_QUEUE_BAD_DELETE( "zerr:ZDDY0008" );


ZorbaErrorCode ZDDY0009_COLLECTION_QUEUE_BAD_DELETE( "zerr:ZDDY0009" );


ZorbaErrorCode ZDDY0010_COLLECTION_CONST_NODE_UPDATE( "zerr:ZDDY0010" );


ZorbaErrorCode ZDDY0011_COLLECTION_NODE_NOT_FOUND( "zerr:ZDDY0011" );


ZorbaErrorCode ZDDY0012_COLLECTION_UNORDERED_BAD_OPERATION( "zerr:ZDDY0012" );


ZorbaErrorCode ZDDY0013_COLLECTION_BAD_DESTROY_INDEXES( "zerr:ZDDY0013" );


ZorbaErrorCode ZDDY0014_COLLECTION_BAD_DESTROY_ICS( "zerr:ZDDY0014" );


ZorbaErrorCode ZDDY0015_COLLECTION_BAD_DESTROY_NODES( "zerr:ZDDY0015" );


ZorbaErrorCode ZDDY0016_COLLECTION_MULTIPLE_CREATES( "zerr:ZDDY0016" );


ZorbaErrorCode ZDDY0017_NODE_IS_ORPHAN( "zerr:ZDDY0017" );


ZorbaErrorCode ZDDY0018_NODES_NOT_IN_SAME_COLLECTION( "zerr:ZDDY0018" );


ZorbaErrorCode ZDDY0020_INDEX_DOMAIN_NODE_NOT_IN_COLLECTION( "zerr:ZDDY0020" );


ZorbaErrorCode ZDDY0019_COLLECTION_ITERATOR_NOT_OPEN( "zerr:ZDDY0019" );


ZorbaErrorCode ZDDY0021_INDEX_NOT_DECLARED( "zerr:ZDDY0021" );


ZorbaErrorCode ZDDY0022_INDEX_ALREADY_EXISTS( "zerr:ZDDY0022" );


ZorbaErrorCode ZDDY0023_INDEX_DOES_NOT_EXIST( "zerr:ZDDY0023" );


ZorbaErrorCode ZDDY0024_INDEX_UNIQUE_VIOLATION( "zerr:ZDDY0024" );


ZorbaErrorCode ZDDY0025_INDEX_WRONG_NUMBER_OF_PROBE_ARGS( "zerr:ZDDY0025" );


ZorbaErrorCode ZDDY0026_INDEX_RANGE_PROBE_NOT_ALLOWED( "zerr:ZDDY0026" );


ZorbaErrorCode ZDDY0027_INDEX_MULTIPLE_CREATES( "zerr:ZDDY0027" );


ZorbaErrorCode ZDDY0028_INDEX_DOMAIN_HAS_DUPLICATE_NODES( "zerr:ZDDY0028" );


ZorbaErrorCode ZDDY0029_INDEX_POINT_GENERAL_PROBE_NOT_ALLOWED( "zerr:ZDDY0029" );


ZorbaErrorCode ZDDY0030_INDEX_RANGE_GENERAL_PROBE_NOT_ALLOWED( "zerr:ZDDY0030" );


ZorbaErrorCode ZDDY0031_IC_NOT_DECLARED( "zerr:ZDDY0031" );


ZorbaErrorCode ZDDY0032_IC_NOT_ACTIVATED( "zerr:ZDDY0032" );


ZorbaErrorCode ZDDY0033_IC_NOT_MET( "zerr:ZDDY0033" );


ZorbaErrorCode ZDDY0034_INDEX_RANGE_VALUE_PROBE_BAD_KEY_TYPES( "zerr:ZDDY0034" );


ZorbaErrorCode ZDDY0035_INDEX_GENERAL_INSERT( "zerr:ZDDY0035" );


ZorbaErrorCode ZDDY0036_NON_ROOT_NODE_DELETION( "zerr:ZDDY0036" );


ZorbaErrorCode ZDDY0037_COLLECTION_APPEND_BAD_EDIT( "zerr:ZDDY0037" );


ZorbaErrorCode ZDDY0038_COLLECTION_QUEUE_BAD_EDIT( "zerr:ZDDY0038" );


ZorbaErrorCode ZDDY0039_NON_ROOT_NODE_EDIT( "zerr:ZDDY0039" );


ZorbaErrorCode ZDDY0040_INCONSISTENT_EDIT( "zerr:ZDDY0040" );


ZorbaErrorCode ZDDY0041_CONCURRENT_MODIFICATION( "zerr:ZDDY0041" );


ZorbaErrorCode ZDDY0042_ITEM_NOT_IN_COLLECTION( "zerr:ZDDY0042" );


ZorbaErrorCode ZDDY0043_INVALID_OPTION_TYPE( "zerr:ZDDY0043" );


ZorbaErrorCode ZDST0001_COLLECTION_ALREADY_DECLARED( "zerr:ZDST0001" );


ZorbaErrorCode ZDST0002_COLLECTION_ALREADY_IMPORTED( "zerr:ZDST0002" );


ZorbaErrorCode ZDST0003_COLLECTION_DECL_IN_MAIN_MODULE( "zerr:ZDST0003" );


ZorbaErrorCode ZDST0004_COLLECTION_MULTIPLE_PROPERTY_VALUES( "zerr:ZDST0004" );


ZorbaErrorCode ZDST0006_COLLECTION_INVALID_PROPERTY_VALUE( "zerr:ZDST0006" );


ZorbaErrorCode ZDST0007_COLLECTION_DECL_IN_FOREIGN_MODULE( "zerr:ZDST0007" );


ZorbaErrorCode ZDST0021_INDEX_ALREADY_DECLARED( "zerr:ZDST0021" );


ZorbaErrorCode ZDST0022_INDEX_ALREADY_IMPORTED( "zerr:ZDST0022" );


ZorbaErrorCode ZDST0023_INDEX_DECL_IN_MAIN_MODULE( "zerr:ZDST0023" );


ZorbaErrorCode ZDST0024_INDEX_MULTIPLE_PROPERTY_VALUES( "zerr:ZDST0024" );


ZorbaErrorCode ZDST0025_INDEX_BAD_UNIQUE_PROPERTY( "zerr:ZDST0025" );


ZorbaErrorCode ZDST0026_INDEX_INVALID_PROPERTY_VALUE( "zerr:ZDST0026" );


ZorbaErrorCode ZDST0027_INDEX_BAD_KEY_TYPE( "zerr:ZDST0027" );


ZorbaErrorCode ZDST0028_INDEX_NOT_DETERMINISTIC( "zerr:ZDST0028" );


ZorbaErrorCode ZDST0029_INDEX_INVALID_DATA_SOURCE( "zerr:ZDST0029" );


ZorbaErrorCode ZDST0030_INDEX_NON_CONST_DATA_SOURCE( "zerr:ZDST0030" );


ZorbaErrorCode ZDST0031_INDEX_HAS_FREE_VARS( "zerr:ZDST0031" );


ZorbaErrorCode ZDST0032_INDEX_REFERENCES_CTX_ITEM( "zerr:ZDST0032" );


ZorbaErrorCode ZDST0033_INDEX_NON_SIMPLE_EXPR( "zerr:ZDST0033" );


ZorbaErrorCode ZDST0034_INDEX_CANNOT_DO_AUTOMATIC_MAINTENANCE( "zerr:ZDST0034" );


ZorbaErrorCode ZDST0035_INDEX_GENERAL_MULTIKEY( "zerr:ZDST0035" );


ZorbaErrorCode ZDST0036_INDEX_DECL_IN_FOREIGN_MODULE( "zerr:ZDST0036" );


ZorbaErrorCode ZDST0041_IC_ALREADY_DECLARED( "zerr:ZDST0041" );


ZorbaErrorCode ZDST0044_IC_DECL_IN_MAIN_MODULE( "zerr:ZDST0044" );


ZorbaErrorCode ZDST0048_IC_DECL_IN_FOREIGN_MODULE( "zerr:ZDST0048" );


ZorbaErrorCode ZDST0060_FEATURE_NOT_SUPPORTED( "zerr:ZDST0060" );


ZorbaErrorCode ZDTY0001_COLLECTION_INVALID_NODE_TYPE( "zerr:ZDTY0001" );


ZorbaErrorCode ZDTY0010_INDEX_DOMAIN_TYPE_ERROR( "zerr:ZDTY0010" );


ZorbaErrorCode ZDTY0011_INDEX_KEY_TYPE_ERROR( "zerr:ZDTY0011" );


ZorbaErrorCode ZDTY0012_INDEX_KEY_TYPE_ERROR( "zerr:ZDTY0012" );


#if defined(ZORBA_WITH_DEBUGGER)
ZorbaErrorCode ZGDB0001_CANNOT_CONNECT_TO_CLIENT( "zerr:ZGDB0001" );
#endif


ZorbaErrorCode ZOSE0001_FILE_NOT_FOUND( "zerr:ZOSE0001" );


ZorbaErrorCode ZOSE0002_NOT_PLAIN_FILE( "zerr:ZOSE0002" );


ZorbaErrorCode ZOSE0003_STREAM_READ_FAILURE( "zerr:ZOSE0003" );


ZorbaErrorCode ZOSE0004_IO_ERROR( "zerr:ZOSE0004" );


ZorbaErrorCode ZOSE0005_DLL_LOAD_FAILED( "zerr:ZOSE0005" );


ZorbaErrorCode ZOSE0006_TRANSCODING_ERROR( "zerr:ZOSE0006" );


ZorbaErrorCode ZOSE0007_UNSUPPORTED_LOCALE( "zerr:ZOSE0007" );


ZorbaErrorCode ZSTR0001_INDEX_ALREADY_EXISTS( "zerr:ZSTR0001" );


ZorbaErrorCode ZSTR0002_INDEX_DOES_NOT_EXIST( "zerr:ZSTR0002" );


ZorbaErrorCode ZSTR0003_INDEX_PARTIAL_KEY_INSERT( "zerr:ZSTR0003" );


ZorbaErrorCode ZSTR0004_INDEX_PARTIAL_KEY_REMOVE( "zerr:ZSTR0004" );


ZorbaErrorCode ZSTR0007_INDEX_UNSUPPORTED_PROBE_CONDITION( "zerr:ZSTR0007" );


ZorbaErrorCode ZSTR0008_COLLECTION_ALREADY_EXISTS( "zerr:ZSTR0008" );


ZorbaErrorCode ZSTR0009_COLLECTION_NOT_FOUND( "zerr:ZSTR0009" );


ZorbaErrorCode ZSTR0010_COLLECTION_NODE_ALREADY_IN_COLLECTION( "zerr:ZSTR0010" );


ZorbaErrorCode ZSTR0011_COLLECTION_NON_ROOT_NODE( "zerr:ZSTR0011" );


ZorbaErrorCode ZSTR0012_COLLECTION_ITEM_MUST_BE_A_NODE( "zerr:ZSTR0012" );


ZorbaErrorCode ZSTR0013_COLLECTION_ITEM_MUST_BE_STRUCTURED( "zerr:ZSTR0013" );


ZorbaErrorCode ZSTR0015_IC_ALREADY_EXISTS( "zerr:ZSTR0015" );


ZorbaErrorCode ZSTR0016_IC_DOES_NOT_EXIST( "zerr:ZSTR0016" );


ZorbaErrorCode ZSTR0020_LOADER_IO_ERROR( "zerr:ZSTR0020" );


ZorbaErrorCode ZSTR0021_LOADER_PARSING_ERROR( "zerr:ZSTR0021" );


ZorbaErrorCode ZSTR0030_NODEID_ERROR( "zerr:ZSTR0030" );


ZorbaErrorCode ZSTR0040_TYPE_ERROR( "zerr:ZSTR0040" );


ZorbaErrorCode ZSTR0041_NAN_COMPARISON( "zerr:ZSTR0041" );


ZorbaErrorCode ZSTR0045_DUPLICATE_NODE_ERROR( "zerr:ZSTR0045" );


ZorbaErrorCode ZSTR0050_FUNCTION_NOT_IMPLEMENTED_FOR_ITEMTYPE( "zerr:ZSTR0050" );


ZorbaErrorCode ZSTR0055_STREAMABLE_STRING_CONSUMED( "zerr:ZSTR0055" );


ZorbaErrorCode ZSTR0060_RANGE_EXCEPTION( "zerr:ZSTR0060" );


ZorbaErrorCode ZSTR0065_STRINGS_IN_POOL( "zerr:ZSTR0065" );


ZorbaErrorCode ZSTR0066_REFERENCED_NODE_NOT_IN_COLLECTION( "zerr:ZSTR0066" );


ZorbaErrorCode XSST0001( "zerr:XSST0001" );


ZorbaErrorCode XSST0002( "zerr:XSST0002" );


ZorbaErrorCode XSST0003( "zerr:XSST0003" );


ZorbaErrorCode XSST0004( "zerr:XSST0004" );


ZorbaErrorCode XSST0005( "zerr:XSST0005" );


ZorbaErrorCode XSST0006( "zerr:XSST0006" );


ZorbaErrorCode XSST0007( "zerr:XSST0007" );


ZorbaErrorCode XSST0008( "zerr:XSST0008" );


ZorbaErrorCode XSST0009( "zerr:XSST0009" );


ZorbaErrorCode XSST0010( "zerr:XSST0010" );


ZorbaErrorCode ZJPE0001_ILLEGAL_CHARACTER( "zerr:ZJPE0001" );


ZorbaErrorCode ZJPE0002_ILLEGAL_CODEPOINT( "zerr:ZJPE0002" );


ZorbaErrorCode ZJPE0003_ILLEGAL_ESCAPE( "zerr:ZJPE0003" );


ZorbaErrorCode ZJPE0004_ILLEGAL_LITERAL( "zerr:ZJPE0004" );


ZorbaErrorCode ZJPE0005_ILLEGAL_NUMBER( "zerr:ZJPE0005" );


ZorbaErrorCode ZJPE0006_UNEXPECTED_TOKEN( "zerr:ZJPE0006" );


ZorbaErrorCode ZJPE0007_UNTERMINATED_STRING( "zerr:ZJPE0007" );


ZorbaErrorCode ZJPE0008_ILLEGAL_QNAME( "zerr:ZJPE0008" );


ZorbaErrorCode ZJPE0009_ILLEGAL_EMPTY_STRING( "zerr:ZJPE0009" );


ZorbaErrorCode ZJPE0010_JSONML_ARRAY_REQUIRES_BRACKET( "zerr:ZJPE0010" );


ZorbaErrorCode ZJSE0001_NOT_ELEMENT_NODE( "zerr:ZJSE0001" );


ZorbaErrorCode ZJSE0002_ELEMENT_MISSING_ATTRIBUTE( "zerr:ZJSE0002" );


ZorbaErrorCode ZJSE0003_BAD_ATTRIBUTE_VALUE( "zerr:ZJSE0003" );


ZorbaErrorCode ZJSE0004_BAD_NODE( "zerr:ZJSE0004" );


ZorbaErrorCode ZJSE0005_BAD_PREFIX( "zerr:ZJSE0005" );


ZorbaErrorCode ZJSE0007_ELEMENT_MISSING_VALUE( "zerr:ZJSE0007" );


ZorbaErrorCode ZJSE0008_BAD_ELEMENT_VALUE( "zerr:ZJSE0008" );


ZorbaErrorCode ZJSE0009_MULTIPLE_CHILDREN( "zerr:ZJSE0009" );


ZorbaErrorCode ZJ2X0001_JSONML_ARRAY_BAD_JSON( "zerr:ZJ2X0001" );


ZorbaErrorCode ZJ2X0002_JSONML_OBJECT_BAD_JSON( "zerr:ZJ2X0002" );


} // namespace zerr

namespace jerr {

JSONiqErrorCode JNTY0002( "jerr:JNTY0002" );


JSONiqErrorCode JNDY0003( "jerr:JNDY0003" );


JSONiqErrorCode JNTY0004( "jerr:JNTY0004" );


JSONiqErrorCode JNUP0005( "jerr:JNUP0005" );


JSONiqErrorCode JNUP0006( "jerr:JNUP0006" );


JSONiqErrorCode JNUP0007( "jerr:JNUP0007" );


JSONiqErrorCode JNUP0008( "jerr:JNUP0008" );


JSONiqErrorCode JNUP0009( "jerr:JNUP0009" );


JSONiqErrorCode JNUP0010( "jerr:JNUP0010" );


JSONiqErrorCode JNTY0011( "jerr:JNTY0011" );


JSONiqErrorCode JNSE0012( "jerr:JNSE0012" );


JSONiqErrorCode JNSE0013( "jerr:JNSE0013" );


JSONiqErrorCode JNSE0014( "jerr:JNSE0014" );


JSONiqErrorCode JNSE0022( "jerr:JNSE0022" );


JSONiqErrorCode JNUP0016( "jerr:JNUP0016" );


JSONiqErrorCode JNUP0017( "jerr:JNUP0017" );


JSONiqErrorCode JNTY0018( "jerr:JNTY0018" );


JSONiqErrorCode JNUP0019( "jerr:JNUP0019" );


JSONiqErrorCode JNTY0023( "jerr:JNTY0023" );


JSONiqErrorCode JNTY0024( "jerr:JNTY0024" );


JSONiqErrorCode JNTY0020( "jerr:JNTY0020" );


JSONiqErrorCode JNTY0021( "jerr:JNTY0021" );


JSONiqErrorCode JNDY0021( "jerr:JNDY0021" );


} // namespace jerr

namespace jse {

JSoundErrorCode DUPLICATE_PREFIX( "jse:DUPLICATE_PREFIX" );


JSoundErrorCode DUPLICATE_TYPE( "jse:DUPLICATE_TYPE" );


JSoundErrorCode ILLEGAL_ARRAY_SIZE( "jse:ILLEGAL_ARRAY_SIZE" );


JSoundErrorCode ILLEGAL_BASE_TYPE( "jse:ILLEGAL_BASE_TYPE" );


JSoundErrorCode ILLEGAL_FACET( "jse:ILLEGAL_FACET" );


JSoundErrorCode ILLEGAL_FACET_VALUE( "jse:ILLEGAL_FACET_VALUE" );


JSoundErrorCode ILLEGAL_KEY( "jse:ILLEGAL_KEY" );


JSoundErrorCode ILLEGAL_NAMESPACE( "jse:ILLEGAL_NAMESPACE" );


JSoundErrorCode ILLEGAL_PREFIX( "jse:ILLEGAL_PREFIX" );


JSoundErrorCode ILLEGAL_SCHEMA( "jse:ILLEGAL_SCHEMA" );


JSoundErrorCode ILLEGAL_TYPE( "jse:ILLEGAL_TYPE" );


JSoundErrorCode INVALID_OPTION( "jse:INVALID_OPTION" );


JSoundErrorCode MISSING_KEY( "jse:MISSING_KEY" );


JSoundErrorCode NEW_KEY_NOT_ALLOWED( "jse:NEW_KEY_NOT_ALLOWED" );


JSoundErrorCode SCHEMA_NOT_FOUND( "jse:SCHEMA_NOT_FOUND" );


JSoundErrorCode TYPE_MISMATCH( "jse:TYPE_MISMATCH" );


JSoundErrorCode UNKNOWN_PREFIX( "jse:UNKNOWN_PREFIX" );


JSoundErrorCode UNKNOWN_TYPE( "jse:UNKNOWN_TYPE" );


JSoundErrorCode FACET_VIOLATION( "jse:FACET_VIOLATION" );


JSoundErrorCode TYPE_VIOLATION( "jse:TYPE_VIOLATION" );


} // namespace jse

namespace zwarn {

ZorbaWarningCode ZWST0002_UNKNOWN_ANNOTATION( "zwarn:ZWST0002" );


ZorbaWarningCode ZWST0003_FAKE_SEQUENTIAL_FUNCTION( "zwarn:ZWST0003" );


ZorbaWarningCode ZWST0004_AMBIGUOUS_SEQUENTIAL_FLWOR( "zwarn:ZWST0004" );


ZorbaWarningCode ZWST0005_CACHING_NOT_POSSIBLE( "zwarn:ZWST0005" );


ZorbaWarningCode ZWST0006_CACHING_MIGHT_NOT_BE_INTENDED( "zwarn:ZWST0006" );


ZorbaWarningCode ZWST0007_LOADER_PARSING_WARNING( "zwarn:ZWST0007" );


ZorbaWarningCode ZWST0008_DEPRECATED( "zwarn:ZWST0008" );


ZorbaWarningCode ZWST0009_COMMON_LANGUAGE_WARNING( "zwarn:ZWST0009" );


} // namespace zwarn

namespace csv {

ZorbaCSVErrorCode INVALID_OPTION( "csv:INVALID_OPTION" );


ZorbaCSVErrorCode INVALID_VALUE( "csv:INVALID_VALUE" );


ZorbaCSVErrorCode MISSING_VALUE( "csv:MISSING_VALUE" );


ZorbaCSVErrorCode EXTRA_VALUE( "csv:EXTRA_VALUE" );


} // namespace csv

namespace dt {

ZorbaDateTimeErrorCode INVALID_SPECIFICATION( "dt:INVALID_SPECIFICATION" );


ZorbaDateTimeErrorCode INSUFFICIENT_BUFFER( "dt:INSUFFICIENT_BUFFER" );


ZorbaDateTimeErrorCode INVALID_VALUE( "dt:INVALID_VALUE" );


ZorbaDateTimeErrorCode LITERAL_MISMATCH( "dt:LITERAL_MISMATCH" );


ZorbaDateTimeErrorCode INCOMPLETE_DATE_OR_TIME( "dt:INCOMPLETE_DATE_OR_TIME" );


ZorbaDateTimeErrorCode INVALID_LOCALE( "dt:INVALID_LOCALE" );


ZorbaDateTimeErrorCode UNKNOWN_LOCALE( "dt:UNKNOWN_LOCALE" );


ZorbaDateTimeErrorCode UNSUPPORTED_LOCALE( "dt:UNSUPPORTED_LOCALE" );


} // namespace dt

namespace zuri {

ZorbaURIErrorCode CHARSET_UNKNOWN( "zuri:CHARSET_UNKNOWN" );


ZorbaURIErrorCode OPAQUE_COMB_NOT_VALID( "zuri:OPAQUE_COMB_NOT_VALID" );


ZorbaURIErrorCode OPAQUE_WITHOUT_SCHEME( "zuri:OPAQUE_WITHOUT_SCHEME" );


ZorbaURIErrorCode INVALID_ABSOLUTE_PATH( "zuri:INVALID_ABSOLUTE_PATH" );


ZorbaURIErrorCode URI_UNRESOLVED_OR_NOSTREAM( "zuri:URI_UNRESOLVED_OR_NOSTREAM" );


} // namespace zuri

} // namespace zorba
/*
 * Local variables:
 * mode: c++
 * End:
 */ 
