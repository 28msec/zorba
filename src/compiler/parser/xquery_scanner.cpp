#line 2 "xquery_scanner.yy.cpp"

#line 4 "xquery_scanner.yy.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 33
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
/* %endif */

/* %if-c-only */
    
/* %endif */

/* %if-c-only */

/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;
#endif /* ! C99 */

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! FLEXINT_H */

/* %endif */

/* %if-c++-only */
/* %endif */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* %not-for-header */

/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
/* %ok-for-header */

/* %if-reentrant */

/* An opaque pointer. */
#ifndef YY_TYPEDEF_YY_SCANNER_T
#define YY_TYPEDEF_YY_SCANNER_T
typedef void* yyscan_t;
#endif

/* For convenience, these vars (plus the bison vars far below)
   are macros in the reentrant scanner. */
#define yyin yyg->yyin_r
#define yyout yyg->yyout_r
#define yyextra yyg->yyextra_r
#define yyleng yyg->yyleng_r
#define yytext yyg->yytext_r
#define yylineno (YY_CURRENT_BUFFER_LVALUE->yy_bs_lineno)
#define yycolumn (YY_CURRENT_BUFFER_LVALUE->yy_bs_column)
#define yy_flex_debug yyg->yy_flex_debug_r

int yylex_init (yyscan_t* scanner);
/* %endif */

/* %if-not-reentrant */
/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yyg->yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yyg->yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart(yyin ,yyscanner )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#define YY_BUF_SIZE 16384
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

/* %if-not-reentrant */
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    /* Note: We specifically omit the test for yy_rule_can_match_eol because it requires
     *       access to the local variable yy_act. Since yyless() is a macro, it would break
     *       existing scanners that call yyless() from OUTSIDE yylex. 
     *       One obvious solution it to make yy_act a global. I tried that, and saw
     *       a 5% performance hit in a non-yylineno scanner, because yy_act is
     *       normally declared as a register variable-- so it is not worth it.
     */
    #define  YY_LESS_LINENO(n) \
            do { \
                int yyl;\
                for ( yyl = n; yyl < yyleng; ++yyl )\
                    if ( yytext[yyl] == '\n' )\
                        --yylineno;\
            }while(0)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = yyg->yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yyg->yy_c_buf_p = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yyg->yytext_ptr , yyscanner )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef unsigned int yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
	FILE *yy_input_file;
/* %endif */

/* %if-c++-only */
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( yyg->yy_buffer_stack \
                          ? yyg->yy_buffer_stack[yyg->yy_buffer_stack_top] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE yyg->yy_buffer_stack[yyg->yy_buffer_stack_top]

/* %if-c-only Standard (non-C++) definition */

/* %if-not-reentrant */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

void yyrestart (FILE *input_file ,yyscan_t yyscanner );
void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer ,yyscan_t yyscanner );
YY_BUFFER_STATE yy_create_buffer (FILE *file,int size ,yyscan_t yyscanner );
void yy_delete_buffer (YY_BUFFER_STATE b ,yyscan_t yyscanner );
void yy_flush_buffer (YY_BUFFER_STATE b ,yyscan_t yyscanner );
void yypush_buffer_state (YY_BUFFER_STATE new_buffer ,yyscan_t yyscanner );
void yypop_buffer_state (yyscan_t yyscanner );

static void yyensure_buffer_stack (yyscan_t yyscanner );
static void yy_load_buffer_state (yyscan_t yyscanner );
static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file ,yyscan_t yyscanner );

#define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER ,yyscanner)

YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size ,yyscan_t yyscanner );
YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str ,yyscan_t yyscanner );
YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len ,yyscan_t yyscanner );

/* %endif */

void *yyalloc (yy_size_t ,yyscan_t yyscanner );
void *yyrealloc (void *,yy_size_t ,yyscan_t yyscanner );
void yyfree (void * ,yyscan_t yyscanner );

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer(yyin,YY_BUF_SIZE ,yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */

#define yywrap(n) 1
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

typedef unsigned char YY_CHAR;

typedef int yy_state_type;

#define yytext_ptr yytext_r

/* %if-c-only Standard (non-C++) definition */

static yy_state_type yy_get_previous_state (yyscan_t yyscanner );
static yy_state_type yy_try_NUL_trans (yy_state_type current_state  ,yyscan_t yyscanner);
static int yy_get_next_buffer (yyscan_t yyscanner );
static void yy_fatal_error (yyconst char msg[] ,yyscan_t yyscanner );

/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yyg->yytext_ptr = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	yyg->yytext_ptr -= yyg->yy_more_len; \
	yyleng = (size_t) (yy_cp - yyg->yytext_ptr); \
	yyg->yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	yyg->yy_c_buf_p = yy_cp;

/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 500
#define YY_END_OF_BUFFER 501
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[3664] =
    {   0,
      162,  162,    0,    0,    0,    0,  428,  428,    0,    0,
        0,    0,    0,    0,    0,    0,  406,  406,  415,  415,
      421,  421,  318,  318,  330,  330,  434,  434,  306,  306,
      437,  437,  440,  440,    0,    0,  165,  165,    0,    0,
        0,    0,    0,    0,  339,  339,  453,  453,    0,    0,
      447,  447,  335,  335,  472,  472,    0,    0,  501,  161,
        1,    2,  161,  162,  112,  161,   76,  161,  161,   21,
       59,   61,   34,   20,   33,   66,   35,   52,   19,   88,
       50,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,

       58,   16,  161,   96,  499,  494,  494,  499,  491,  492,
      499,  482,  482,  482,  427,  428,  428,  427,  427,  422,
      423,  426,  424,  500,  499,  499,  467,  462,  462,  462,
      467,  461,  457,  467,  470,  468,  469,  476,  476,  476,
      405,  406,  406,  405,  405,  340,  381,  405,  363,  385,
      405,  355,  384,  365,  375,  404,  380,  404,  404,  404,
      404,  404,  404,  404,  404,  404,  404,  404,  404,  404,
      404,  404,  404,  404,  395,  414,  415,  415,  414,  414,
      411,  408,  409,  409,  409,  407,  420,  421,  421,  420,
      420,  420,  420,  416,  418,  317,  318,  318,  317,  317,

      317,  317,  313,  311,  315,  316,  316,  329,  330,  330,
      329,  329,  329,  329,  328,  329,  329,  329,  329,  433,
      434,  434,  433,  433,  430,  431,  429,  305,  306,  306,
      305,  255,  305,  237,  305,  305,  305,  244,  213,  218,
      177,  211,  221,  305,  169,  210,  179,  189,  245,  207,
      251,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      168,  226,  243,  436,  437,  437,  436,  435,  441,  440,
      440,  440,  441,  443,  499,  500,  443,  443,  442,  165,
      165,  164,  163,  477,  477,  499,  479,  499,  499,  500,

      499,  486,  486,  483,  499,  484,  499,  338,  339,  339,
      338,  338,  336,  455,  453,  453,  453,  449,  450,  455,
      451,  448,  454,  499,  499,  446,  447,  447,  446,  446,
      444,  334,  335,  335,  334,  334,  334,  334,  473,  472,
      472,  472,  473,  499,  499,  307,  499,    1,  162,    2,
        0,   62,    0,  111,    0,    0,   62,   93,   90,    0,
        0,    0,   65,   54,   36,   37,   54,   52,   51,   51,
       87,    0,    0,   85,    0,   32,   58,    0,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,

       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,  113,  494,    0,    0,
        0,    0,    0,    0,  493,  497,  498,    0,  428,  425,
        0,    0,  462,    0,    0,    0,    0,    0,    0,    0,
      456,  459,  465,  466,  469,  469,    0,  475,  474,  406,
      387,  354,  343,    0,    0,  362,  383,  382,  373,  374,
      404,    0,  404,  404,  404,  404,  404,  404,  404,  404,
      404,  404,  404,  404,  404,  404,  404,  404,  404,  404,
      404,  404,  404,  404,  404,  404,  404,  404,  404,  404,

      404,  404,  404,  404,  404,  404,  404,  415,  410,  409,
        0,  409,  409,  421,    0,  419,    0,    0,    0,  419,
      417,  418,  318,    0,  312,    0,    0,    0,  312,  310,
      316,  316,  330,    0,  320,    0,    0,    0,  320,  324,
        0,    0,    0,    0,    0,  434,  432,  306,  214,    0,
      252,    0,  254,    0,    0,  252,  304,  241,    0,    0,
      222,  223,  176,  209,  208,  187,  188,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      256,  437,  435,    0,  440,  438,    0,    0,    0,    0,
        0,  442,    0,  442,  165,  164,  477,    0,    0,  479,
      478,    0,    0,  480,  486,  485,    0,    0,    0,    0,
        0,    0,  489,  490,  339,  337,  336,    0,  453,  452,
      454,    0,    0,  319,    0,    0,    0,  319,  447,  445,
      444,    0,  335,  333,    0,    0,  472,    0,  472,    0,
        0,  308,    0,    0,    0,  308,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

       60,   53,   53,   54,    0,   56,    0,    0,    0,   57,
       58,   58,   58,   58,   58,  109,  109,   32,   58,  109,
        0,   32,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,    0,   32,   58,   58,   58,   58,   58,   58,
       58,   58,   58,    0,   22,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
        0,    0,    0,    0,    0,    0,    0,  481,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  469,

        0,  404,  404,  402,  402,  402,  361,  361,  361,  361,
      361,  404,  404,  404,  404,  404,  404,  404,  404,  367,
      367,  367,  404,  404,  368,  368,  368,  369,  369,  369,
      404,  378,  378,  378,  404,  404,  379,  379,  379,  404,
      370,  370,  370,  371,  371,  371,  404,  372,  372,  372,
      404,  390,  390,  390,  404,  404,  404,  404,  404,  404,
      404,  404,  393,  393,  393,  404,  404,  404,  404,  409,
      409,  409,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  314,  314,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  235,    0,  174,  174,  174,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  181,    0,    0,    0,    0,    0,    0,    0,
      182,  183,    0,  205,    0,    0,  206,    0,    0,  184,
        0,    0,    0,  185,    0,  186,    0,    0,  217,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  224,    0,    0,    0,    0,    0,    0,

        0,    0,    0,  435,  439,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  336,  454,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      444,    0,    0,  472,  471,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   83,   60,   55,   84,    0,    0,    0,   58,
       58,  115,  115,   32,   58,  115,   58,  117,  117,   32,
       58,  117,    0,    0,    0,    0,    0,    0,    0,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,    0,

        0,    0,    0,   58,   58,   58,   58,   58,   58,   58,
        0,   32,   58,   58,   58,   58,   58,    0,   32,   58,
       58,   58,   58,   58,    0,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,   58,   58,   58,   58,   58,   58,   58,   58,
       58,   58,  496,    0,    0,  495,    0,    0,    0,    0,
      464,    0,    0,  463,    0,    0,  458,    0,  469,  403,
      404,  360,  360,  360,    0,    0,    0,    0,    0,  404,
      404,  404,  404,  364,  364,  364,  404,  404,  404,  404,
      404,  404,  404,  404,  404,  404,  386,  386,  386,  404,

      404,  404,  404,  404,  404,  404,  404,  404,  404,  404,
      404,  404,  409,  409,  409,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  236,    0,    0,
      265,  265,  265,  173,  267,  267,  267,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,  178,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  212,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  435,    0,
        0,  488,    0,    0,  487,    0,    0,  336,  454,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  444,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   58,    0,   32,    0,    0,   58,    0,   32,    0,
        0,    0,   95,    0,    0,    0,   95,    0,    0,    0,
        0,    0,    0,   58,   58,    0,   32,   58,   58,   58,
       58,   58,   58,   58,    0,    0,    0,    0,    0,   58,
       58,   58,   58,   58,   58,   58,   77,    0,  132,  132,
       32,   58,  132,   58,  102,  102,   32,   58,  102,   58,
        0,   32,   78,    0,   58,   58,   58,   58,    0,   29,
        0,   58,   58,   58,   58,   58,   58,   58,   58,  140,
      140,   32,   58,  140,   58,   58,    0,   58,    0,   32,

        0,   28,   11,   58,   58,   58,   58,   58,   58,   58,
       58,   58,    0,   32,   58,   58,   58,    0,    0,    0,
        0,    0,    0,  358,    0,    0,    0,  358,    0,    0,
      404,  401,  401,  401,    0,    0,  404,  404,  404,  404,
      357,  357,  357,  404,  404,  404,  376,  376,  376,  404,
      404,    0,    0,    0,  350,  404,  404,  404,  404,  404,
      404,    0,  349,  356,  356,  356,  404,  404,    0,    0,
      404,  409,  409,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  234,
      234,  234,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  171,    0,    0,
        0,    0,    0,    0,  238,    0,  262,    0,  190,    0,
        0,  192,    0,    0,    0,  239,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  284,
        0,    0,    0,    0,    0,  170,    0,    0,    0,    0,
        0,    0,    0,    0,  193,  193,  193,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      105,  105,   32,   58,  105,    0,    0,    0,   58,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       58,   58,    0,    0,    0,    0,   58,   58,   58,   58,
       58,   58,    0,    0,    0,    0,    0,    0,   58,   58,
       58,    0,   32,   58,    0,   32,   58,    0,    0,   58,
       58,    0,    0,    0,    0,   58,   58,   58,   58,    0,
       58,   58,   58,   58,   58,   58,   58,   58,   58,  141,

      141,   32,   58,  141,   49,   58,   79,    0,  144,  144,
       32,   58,  144,   58,   58,   58,   58,   58,    0,   32,
       58,   58,    0,    0,    0,    0,    0,   58,  160,  160,
       32,   58,  160,   58,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      404,    0,    0,  404,  404,  404,  404,  404,  404,  404,
      404,  404,    0,  353,    0,    0,  404,  404,  404,  404,
      404,    0,    0,  394,  394,  394,    0,  341,  396,  396,
      396,  409,  409,    0,    0,    0,    0,    0,    0,    0,
        0,  201,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  175,    0,    0,
      229,  288,    0,    0,  225,    0,    0,    0,    0,  227,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  303,
        0,  332,    0,    0,    0,    0,    0,   58,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,  119,    0,    0,    0,    0,
       58,  106,  106,   32,   58,  106,    0,    0,    0,    0,
       41,   58,   58,   58,   58,   58,   58,    0,    0,    0,
        0,    0,   58,   58,    0,   32,   80,    0,   58,    0,
        0,   58,    0,    0,    0,   32,   58,    0,    0,    0,
        0,    0,  134,  134,   32,   58,  134,   58,  110,  110,
       32,   58,  110,    0,   32,    0,  136,  136,   32,   58,
      136,   58,   58,    0,  138,  138,   32,   58,  138,   58,
       58,   58,   58,   58,    0,    0,   58,   58,   58,   58,
       58,    0,    0,  146,  146,   32,   58,  146,  147,  147,

       32,   58,  147,    0,    0,    0,    0,    0,    0,    0,
       58,    0,   32,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      404,    0,    0,    0,  404,  404,  404,  404,  404,  366,
      366,  366,  404,  404,  404,    0,    0,  404,  391,  391,
      391,  404,  404,    0,    0,    0,    0,  409,  409,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  269,    0,    0,    0,  202,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,  180,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  279,    0,  204,    0,  263,
        0,    0,    0,  282,    0,    0,  219,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  290,  264,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   58,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  121,    0,   58,    0,    0,    0,    0,
        0,   27,   13,    0,   32,   58,   58,   58,   58,   58,
        0,    0,    0,    0,   58,    0,   23,    6,    0,    0,
        0,    0,  131,  131,   32,   58,  131,    0,    0,    0,

       58,    0,    0,    0,    0,   58,    0,    0,    0,    0,
       58,    0,    0,    0,    0,   17,   58,   46,   58,   58,
       58,   58,   58,   58,    0,    0,   58,   58,   58,   58,
       58,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   32,    0,    0,  166,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  404,  398,    0,
      404,    0,  348,  404,    0,  344,  404,  404,  404,  404,
        0,    0,    0,  404,  404,  404,  404,    0,    0,    0,
        0,    0,    0,  412,  409,    0,    0,  322,    0,    0,
        0,    0,    0,    0,    0,    0,  259,    0,    0,    0,

        0,  231,    0,    0,    0,    0,    0,  250,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  261,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   86,    0,   58,    0,  118,  120,
      122,   58,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   58,   58,   58,   58,  129,
      129,   32,   58,  129,   99,    0,    0,    0,    0,   58,

       10,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   58,    0,    0,    0,    0,  133,  133,   32,   58,
      133,    0,    0,   58,    0,    0,    0,    0,   58,   58,
       58,   58,   58,   58,  142,  142,   32,   58,  142,   58,
        0,   58,   58,   58,   58,    0,   32,    3,  107,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  460,  404,
        0,    0,  404,  404,  359,  359,  359,    0,    0,  404,
      388,    0,  404,  404,  404,  404,    0,    0,    0,  400,
        0,  409,    0,    0,    0,    0,    0,  326,    0,  268,

        0,  258,  270,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  260,  195,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  172,    0,    0,    0,    0,    0,
        0,  278,    0,    0,    0,    0,  215,    0,    0,  228,
        0,    0,  286,    0,    0,    0,    0,  233,    0,    0,
      203,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  331,  309,  116,   58,   39,    0,
       24,    0,    7,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   58,
       58,    0,   32,   58,  128,  128,   32,   58,  128,   98,

      101,    0,   58,    0,    0,    0,    9,    0,    0,    0,
        0,    0,    0,    0,    0,   58,    0,    0,    0,    0,
        0,  104,  135,  135,   32,   58,  135,    0,    0,    0,
      114,  137,  137,   32,   58,  137,   58,    0,   58,   58,
       58,   58,  143,  143,   32,   58,  143,    0,   32,   58,
        0,   18,  145,  145,   32,   58,  145,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  167,    0,
      345,    0,    0,  404,  404,    0,    0,  377,  377,  377,
      404,  392,  392,  392,  404,  404,    0,    0,  409,    0,

        0,    0,  321,    0,    0,  266,  248,    0,    0,    0,
        0,  242,    0,    0,    0,    0,    0,  276,  194,  197,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  191,
      200,    0,    0,  280,  257,  281,    0,  220,  287,    0,
        0,  289,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   58,    0,    0,   40,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   58,   58,    0,
        0,    0,    0,   32,  100,   58,    0,    0,    0,    0,
        0,  103,   58,   45,    0,    0,    0,    0,    0,   58,

       48,   58,   58,   58,   58,    0,    0,    0,    5,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  404,  404,    0,    0,    0,  404,
      404,  404,    0,  409,    0,    0,  323,    0,    0,    0,
        0,    0,    0,    0,    0,  249,    0,    0,  196,    0,
        0,    0,  199,  253,    0,    0,    0,  240,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   58,    0,    0,    0,    8,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,   58,   58,
       43,    0,    0,    0,    0,    0,   58,    0,    0,    0,
       58,    0,    0,    0,   58,   58,   58,   58,   58,    0,
        0,    0,    4,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  397,    0,  404,  404,  399,    0,  404,
      404,  404,    0,  409,    0,  327,    0,    0,  230,    0,
        0,    0,    0,    0,    0,  247,    0,  232,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   58,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   58,   58,    0,    0,
        0,    0,    0,    0,   58,    0,   58,    0,    0,    0,
       58,   58,  139,  139,   32,   58,  139,   58,   58,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      404,  404,  404,  404,  404,    0,    0,  409,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  283,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   58,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   58,   58,    0,    0,    0,
        0,    0,    0,   30,    0,   58,   74,   73,    0,   58,
       58,   58,   58,    0,    0,    0,    0,    0,    0,  156,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  351,  404,  404,  404,  404,    0,    0,  409,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  299,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   58,    0,  124,    0,    0,
        0,    0,    0,    0,    0,    0,   94,    0,    0,    0,

        0,   58,   58,    0,    0,    0,  130,   58,    0,   58,
       58,   58,    0,   25,    0,    0,    0,    0,    0,    0,
        0,  158,  159,    0,    0,    0,    0,    0,    0,    0,
        0,   92,    0,    0,  404,  404,    0,  346,    0,    0,
        0,    0,  413,    0,    0,  272,    0,    0,    0,  246,
      277,    0,    0,    0,    0,    0,    0,    0,    0,  301,
      302,    0,    0,    0,    0,    0,    0,    0,    0,   58,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   58,   58,    0,    0,   58,    0,
       58,   58,   58,   82,    0,    0,    0,  155,  157,  148,

        0,    0,    0,    0,    0,    0,    0,  342,  404,  404,
      389,    0,  325,    0,    0,    0,    0,  216,    0,    0,
        0,  298,  300,  291,    0,    0,    0,    0,    0,    0,
        0,  123,   70,    0,    0,    0,    0,    0,    0,    0,
        0,  125,   14,    0,    0,   91,    0,    0,    0,    0,
        0,   58,   58,    0,    0,   58,   69,   58,   58,    0,
       26,    0,    0,    0,    0,  150,    0,    0,    0,  404,
        0,  347,  271,  273,    0,    0,    0,    0,  293,    0,
        0,    0,   38,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   68,    0,    0,    0,   81,    0,   58,

       58,    0,    0,    0,    0,   58,    0,    0,    0,    0,
        0,  152,  153,  404,    0,    0,    0,    0,    0,    0,
      295,  296,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   58,    0,
        0,    0,   44,   47,   58,    0,    0,  149,  151,  404,
        0,    0,    0,    0,  292,  294,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   58,   58,
       42,  127,    0,   58,    0,    0,    0,  404,    0,    0,
        0,    0,    0,    0,   63,    0,    0,    0,    0,    0,
        0,    0,    0,   58,   58,   58,    0,   58,    0,    0,

      404,    0,  275,    0,    0,    0,    0,    0,    0,    0,
       64,    0,    0,    0,    0,   58,   58,   58,    0,   12,
        0,  404,    0,    0,   89,    0,    0,    0,    0,   97,
        0,    0,    0,   58,  126,    0,   31,    0,    0,  352,
      274,    0,   75,    0,   71,    0,    0,    0,   58,  154,
      297,    0,   72,    0,    0,   67,   15,    0,    0,    0,
        0,    0,    0
    } ;

static yyconst flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    4,    5,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   23,   24,   25,
       26,   27,   28,   29,   30,   31,   32,   33,   34,   31,
       35,   35,   35,   35,   35,   35,   35,   35,   35,   36,
       35,   35,   37,   38,   35,   35,   35,   35,   35,   35,
       39,   40,   41,   40,   42,   40,   43,   44,   45,   46,

       47,   48,   49,   50,   51,   35,   52,   53,   54,   55,
       56,   57,   58,   59,   60,   61,   62,   63,   64,   65,
       66,   35,   67,   68,   69,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,

       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   70,   70
    } ;

static yyconst flex_int32_t yy_meta[71] =
    {   0,
        1,    2,    2,    3,    2,    2,    4,    5,    6,    4,
        4,    7,    8,    9,   10,   11,    4,    4,   12,   13,
        4,   14,   15,   16,    7,    4,    4,    4,    4,   17,
       17,   17,   17,   17,   18,   18,   18,   18,   19,   19,
       19,   18,   17,   17,   20,   21,   17,   17,   18,   18,
       22,   18,   18,   18,   18,   23,   18,   18,   18,   24,
       25,   18,   26,   18,   18,   18,   27,   19,   28,   29
    } ;

static yyconst flex_int16_t yy_base[4237] =
    {   0,
        0,    0,   70,   74,   87,   93,   98,  103,   73,   76,
      170,  240,  310,    0,  119,  122,  380,    0,  450,    0,
      520,    0,  590,    0,  659,  715,  150,  182,  772,    0,
      842,    0,  912,    0,  188,  203,  982,    0, 1052, 1081,
      210,  219,  223,  667, 1110,    0, 1180,    0,  107,  111,
     1250,    0,  681,  694, 1320, 1326,  247,  248,10223,25548,
      144,  156,  264,  272,25548,   72,25548,10210,   80,  160,
     1331,10198,25548,25548,25548,  157,  194,  654,25548,  741,
    25548,  282, 1395, 1293, 1307, 1322, 1359, 1333,  704, 1378,
     1355, 1398, 1412, 1426, 1311, 1435, 1454, 1385,  174,  679,

      635,25548,10144,25548,25548,    0,    0,  248,10195,10140,
    10137,25548,25548,10163,25548, 1512, 1519, 1524,10175,25548,
    25548,25548,25548,25548,10138,10138,25548,    0,    0,    0,
     1489,  683,10125,10120,25548,25548, 1531,25548,10160,10166,
    25548, 1546, 1553, 1558,10154,25548,  193, 1563,25548,25548,
    10153,25548,  155,25548,  202,10155,25548, 1447,  646, 1329,
     1517,  202, 1530,  692,  145,  684,  239,  241,  104, 1549,
     1555,   75,  671,  209,25548,25548, 1593, 1613, 1618,10153,
    25548,25548,10152,   58,  259,25548,25548, 1623, 1628, 1633,
       77,  221,10151,25548,    0,25548, 1638, 1643, 1648,  271,

      241,10144,25548,25548,25548,    0,10105,25548, 1653, 1658,
     1663,  701,  737,10142,25548,10117,10107,  669,10102,25548,
     1668, 1673, 1678,10125,25548,25548,25548,25548, 1683, 1688,
     1693,10121,  748,25548,10134,  750, 1333, 1698,25548,25548,
    25548,25548,  660,10118,25548,  742,25548, 1317,25548,25548,
    25548, 1526,10096, 1295, 1453, 1652, 1433, 1300, 1389, 1665,
    10086,  252, 1320, 1386,10094, 1666, 1553, 1347,10096, 1533,
    25548,10070,25548,25548, 1726, 1731, 1740,10102,25548, 1745,
     1750, 1755, 1760,25548, 1408, 1453, 1497, 1530, 1592, 1768,
     1773,    0,25548, 1782, 1787,10101,    0,10096,10094,10092,

     1378,    0,    0,10111, 1759,10051,10047,25548, 1801, 1816,
     1821,10092,10090,25548, 1826, 1831, 1836,25548,25548,10084,
    25548,25548,10087, 1379, 1451,25548, 1841, 1846, 1851,10073,
    10072,25548, 1856, 1861, 1866,10071,10030,10027,25548,10068,
    10066,10063,10059, 1565, 1702,25548,10015, 1871, 1876, 1881,
     1708,10055, 1879,25548, 1706, 1880,10048,25548,25548, 1888,
    10000,    0,25548, 1566,25548,25548, 1873, 1877,25548, 1524,
     1898, 1408,10036,25548, 1911,25548, 1937,10042, 1942, 1964,
     1969, 2035, 1993, 1749, 1750, 1910, 1864, 1861, 1934, 2020,
     1939, 1891, 1943, 1853, 1961, 2024, 1935, 2092, 1936, 1967,

     2012, 2021, 1944, 2025, 2047,  236, 2034, 2062, 2064, 2054,
     1966, 2071, 2077, 2079, 2072, 2023, 2086, 1919, 2084, 2090,
     2091, 2094, 2104, 2106, 2099, 2097,25548,    0, 1702,  649,
     9987, 9981, 9989, 9969,25548,25548,25548,10003, 2171,25548,
     9983, 9972,    0, 1716, 1668, 9965, 9957, 9968, 9943, 1492,
    25548,25548,25548,25548, 2176, 2181,    0,25548,25548, 2186,
    25548,25548,25548, 2191, 9944,25548,25548,25548,25548,25548,
     9980,    0, 1429, 2234, 2304, 1353, 1757, 1414, 2175, 1903,
     2062, 2374, 2208, 2444, 2514, 2148, 2584, 2654, 2177, 2724,
     2794, 2179, 2864, 2180, 2934, 2058, 2050, 2145, 1443, 2178,

     1438, 2182, 3004, 2185, 2205, 2241, 2186, 2208,25548, 9978,
        0, 2242, 1759, 2213, 1941, 9992, 3026, 1727, 3027, 9986,
    25548,    0, 2274, 1946, 9990, 3040, 1786, 3047, 9983,25548,
        0, 3105, 2279, 2154, 9987, 3094, 2017, 3127, 9981,25548,
     9943, 9940, 9935, 9968, 9939, 2291,25548, 2332,25548, 2215,
     9960, 3141,25548, 2141, 3148, 9954,25548,25548, 2350, 9905,
    25548,25548,25548,25548,25548,25548,25548, 9903, 9910, 2220,
     9917, 2344, 9912, 9899, 9905, 2359, 2362, 2424, 9895, 9897,
     9881,    0, 1970, 9882, 9881, 9881, 9891,    0,    0, 9873,
     2207,    0, 1850, 2209, 9859,    0, 9876,    0, 9858, 9873,

     9860, 9846, 9845, 9855, 2169, 2237, 9845, 9845, 2228, 9846,
     9838,    0, 9844, 9839, 9831, 9834, 9824, 9827, 2057, 9814,
    25548, 2357, 9848,    0, 2364, 2429, 9855, 2472,    0, 2342,
     2397, 2402, 2409,25548, 2484,    0, 2494, 9846, 9844,    0,
    25548, 9838, 2272,25548,    0,25548, 2142, 1964, 9804, 9803,
     9818, 9799,25548,25548, 2499,25548, 9826,    0, 2542,25548,
     9825,    0, 2408, 9839, 3149, 2327, 3162, 9833, 2554,25548,
     9821,    0, 2559,25548, 9796, 9783, 9821,    0, 9820, 9811,
     2428, 9823, 3169, 2329, 3170, 9817, 9783, 2374, 2269, 9766,
     9765, 9781, 9756, 2401, 2425, 9756, 9753, 9769, 9750,    0,

        0,25548, 2549, 2651, 9789, 9787, 9789, 9764, 9772,25548,
     2685, 2766, 3228, 2836, 3298,25548, 2698,25548, 2752, 9778,
     3367, 9769, 2894, 3036, 3163, 3326, 3339, 3380, 3385, 3420,
     3269, 2907, 3433, 9768, 3446, 3452, 3468, 3484, 3491, 3497,
     3519, 2822, 3524, 2703,25548, 3546, 3559, 3581, 3586, 3256,
     3608, 3614, 3621, 2726, 2931, 2429, 2796, 2934, 2716, 2786,
     2856, 2863, 2925, 2932, 2516, 2728, 2518, 2937, 2635, 3000,
     2798, 3001, 2723, 3006, 2793, 2916, 3015, 2865, 3089, 3091,
     2266,    0, 9733, 9733, 9763, 9726, 9729,25548, 9736, 9723,
     2470,    0, 9724, 9724, 9754, 9717, 9709, 9745, 9731, 3157,

        0,    0, 3683,25548, 9736,    0,25548, 3637, 9735, 9733,
        0, 2513, 3203, 2661, 3753,  709, 2872, 2486, 2653,25548,
     9732,    0, 2526, 2527,25548, 9731,    0,25548, 9729,    0,
     2697,25548, 9727,    0, 2720, 2529,25548, 9714,    0, 2941,
    25548, 9701,    0,25548, 9700,    0, 3823,25548, 9699,    0,
     2669,25548, 9698,    0, 2739, 2738, 2975, 2386, 2807, 2879,
     2723, 2968,25548, 9696,    0, 2809, 2863, 2943, 2967,    0,
     2946, 3011, 2441, 2453, 9656, 9655, 9671, 9652, 2829, 2656,
     9652, 9640, 9656, 9635, 2906, 3010, 9623, 9622, 9638, 9618,
     3032, 3034, 9610, 9597, 9605, 9586,25548,    0, 3225, 3047,

     9584, 9582, 9592, 9573, 3255, 3070, 9573, 9571, 9587, 9568,
     9580, 9575, 9574, 2935, 9559, 3269, 3209, 9557, 9556, 9566,
     9547, 3271, 3224, 9547, 9546, 9561, 9542, 3654, 9545, 3660,
        0, 3781,25548, 9540,25548, 3851, 9562, 9528, 2999, 9530,
     9528, 9537, 9531, 9529, 9523, 9509,    0, 3864, 9536, 9511,
     9496, 9500,25548, 9498, 9469, 9468, 9454, 3794, 9459, 9456,
    25548,25548, 9448,25548, 9442, 2873,25548, 9448, 9435,25548,
     3799, 9447, 9446,25548, 9438,25548, 9463, 9420,25548, 9426,
     9427, 9407, 9389, 9405, 9380, 9394, 9387, 9373, 9365, 9380,
     9365, 9358, 9365,25548, 9366, 9352, 9348, 9327, 9326, 9313,

     9304, 9297, 9300,    0,25548, 3352, 3139, 9320, 2696, 2900,
        0, 9285, 9275, 9306, 9269, 9269,    0,    0, 3311, 3228,
     9262, 9258, 9268, 9249, 3313, 3230, 9249, 9247, 9263, 9244,
        0, 9235, 9243, 9268,25548, 3330, 3232, 9222, 9220, 9234,
     9215, 3337, 3293, 9206, 9205, 9221, 9202, 9195, 3117,    0,
     9191, 9171, 9202, 9165, 9168, 3159,    0, 9163, 9162, 9191,
     9154, 9151,25548,    0,25548,25548, 9173, 9182, 3063, 3869,
     3883,25548, 3914, 9180, 3927, 9185, 3932,25548, 3954, 9171,
     3959, 9177, 3181, 2844, 9137, 9143, 9133, 9116, 9153, 3981,
     3994, 4007, 4020, 4033, 4046, 4059, 4072, 4088, 4094, 9122,

     9110, 9116, 9137, 4110, 4116, 4138, 4143, 4165, 4170, 4196,
     4201, 9136, 4252, 4280, 4339, 4309, 4218, 4232, 9126, 4370,
     4302, 4396, 4410, 4295, 9111, 4423, 4436, 4450, 4463, 4486,
     4500, 4522, 4527, 4588, 4553, 4616, 4558, 4629, 4645, 4667,
     4680, 4693, 4706, 4719, 4733, 4755, 4768, 4781, 4794, 4807,
     4820, 4833, 9134, 9109, 9070,25548, 9047, 9041, 9042, 9053,
     9086, 9065, 9026,25548, 9028, 9018,25548, 9045, 3407,25548,
        0,25548, 9054,    0, 4383, 3268, 3143, 9053, 9040, 3165,
     4892, 4868, 3351,25548, 9037,    0, 3141, 3354, 4962, 3340,
     3042, 3337, 5032, 3374, 3341, 4855,25548, 9016,    0, 4862,

     3369, 3382, 3381, 3384, 3392, 2793, 4920, 5102, 3419, 3032,
     4933, 3430,    0, 3436, 3408, 3324,    0, 8981, 8980, 9011,
     8974, 8977, 3394,    0, 8974, 8974, 8994, 8957, 8953, 3439,
        0, 8940, 8940, 8965, 8928, 8931, 3454,    0, 8920, 8920,
     8950, 8906, 8907, 3488,    0, 8885, 8885, 8916, 8879, 8882,
     3491,    0, 8880, 8877, 8906, 8868, 8871, 8856, 8855, 8851,
     8855, 8850, 8861, 3494,    0, 8849, 8849, 8870, 8832, 8835,
     3510,    0, 8828, 8826, 8855, 8818, 8811, 4324, 8842, 8802,
    25548, 4990, 8825,25548,25548, 5003, 8819, 8777, 5130, 8808,
     8774, 8781, 8771, 8765, 8801, 8764, 5008, 5078, 8768, 8767,

     8747, 8761, 8739, 8750, 8753,25548, 8741, 8709, 8714, 8737,
        0, 8693, 8699, 8690, 8693, 8690, 8685, 5060, 8722,    0,
     8676,    0, 8685, 8668,    0, 8653, 5073, 5143, 8691, 8660,
     8653,25548, 8662, 8672, 8639, 8638, 8647, 8635, 8642, 8627,
     8625,    0, 8622, 8634, 8629, 8620, 8615,    0, 8609, 8607,
     8601, 8596, 8607, 8602, 8604, 8594, 5159, 8587,    0, 3673,
     8623, 8622, 8609, 8572,25548, 8567, 8561,    0,    0, 3513,
        0, 8562, 8559, 8589, 8550, 8553, 3517,    0, 8542, 8542,
     8573, 8536, 8524,    0, 8513, 8500, 3522,    0, 8498, 8498,
     8529, 8491, 8494, 3531,    0, 8492, 8486, 8517, 8480, 8483,

     8480, 8501, 8464, 8464, 8452, 8483, 8435, 8437, 8428, 8458,
     8450, 5215, 5284, 8449, 8415, 8446, 5289, 5302, 8445,   16,
      100, 3433,  228, 3550, 3196, 4525,  729, 1029, 1061, 1289,
     1352, 1496, 3494, 5315, 5320, 5349, 1570, 5183, 5366, 5371,
     5393, 5399, 5421, 5435, 1555, 1663, 3499, 1777, 3543, 5449,
     5462, 5489, 5190, 5495, 5502, 5517,25548, 1790,25548, 5196,
    25548, 5524, 1892, 5539,25548, 5552,25548, 5565, 1943, 5570,
     5592, 1981,25548, 2146, 5605, 5612, 5618, 5644, 5649,25548,
     2328, 5666, 5671, 5693, 5698, 5725, 5730, 5752, 5759,25548,
     5765,25548, 5781, 2392, 5786, 5829, 2554, 5857, 5811, 2398,

     5870,25548,25548, 5937, 5886, 5965, 5912, 5978, 5994, 5899,
     6007, 6022, 6029, 2470, 6036, 6098, 6051, 2542, 2671, 2740,
     2820, 2940, 3456, 2989, 5287, 3555, 5335, 3081, 3164, 3556,
     3177,25548, 3191,    0, 6077, 3242, 3552, 3522, 3547, 3551,
    25548, 3265,    0, 3462, 3575, 3574,25548, 3271,    0, 3578,
     3444, 6058, 3897, 6126,25548, 6139, 3609, 3598, 3623, 3611,
     3626, 6144,25548,25548, 3328,    0, 6167, 6190, 6172, 4123,
     6260, 3615, 3766, 3395, 3372, 3474, 3479, 3552, 3520, 3524,
     3546, 3624, 3592, 3610, 3619, 3657, 3712, 3718, 3727, 3766,
     3731, 3749, 3746, 3786, 3751, 3755, 3753, 3762, 3765, 3760,

     3768, 3772, 3783, 3821, 3798, 3802, 3799, 3837, 3816, 3820,
     3818, 3857,    0, 6218, 3858, 3826, 3861, 6231, 3871, 3839,
     3873, 3861, 3862, 3866, 3853, 3871, 3898, 3924, 3875,25548,
     6288, 3901, 6236, 3902, 3882, 3866, 3881, 3890, 3889, 3894,
     3889, 3894, 3898, 3892, 3912, 3930, 3951,25548, 6301, 3907,
     3917, 3910, 3917, 6306,25548, 3952,25548, 3915,25548, 3922,
     3919,25548, 3937, 6319, 3958,25548, 3943, 3966, 3930, 3946,
     3927, 3958, 3941, 6332, 3943, 3956, 3946, 3955, 3952,25548,
     3966,    0, 3960, 3969,    0,25548,    0, 6338,    0, 3974,
     6351, 3959,    0, 3963,25548, 6357, 4005, 3967,    0, 4022,

     4009, 3980, 3984, 3981, 4020, 3985, 3989, 3993, 3996,    0,
     4033, 3998, 4002, 4006, 4044, 4010, 4014, 4011, 4028, 4043,
    25548, 6370,25548, 6375, 4067, 4025, 4062, 4086, 6388, 4028,
     4065, 4135, 4088, 4050, 4042, 4044, 4079, 4070, 4112, 4097,
     4075, 4094, 4112, 4097,    0, 4100, 4101, 4106, 6443, 4155,
     6402, 6503, 4125, 4134, 4159, 4167, 6427, 6475, 6531, 6544,
     6560, 6576, 4138, 4139, 4144, 4136, 6582, 4168, 6470, 6589,
     6611, 6456, 4169, 6633, 6640, 4171, 6655, 4172, 4193, 6660,
     6682, 4141, 4189, 4190, 4202, 6731, 6707, 6801, 6759, 4187,
     6871, 6774, 6899, 6829, 6942, 6842, 6912, 6971, 6984,25548,

     6712,25548, 7011, 4202,25548, 7016,25548, 4204,25548, 6781,
    25548, 7039, 4212, 7044, 7066, 7071, 7093, 7099, 7106, 4206,
     7162, 7232, 4192, 4169, 4183, 4189, 4221, 7123,25548, 7129,
    25548, 7136, 4229, 7190, 4201, 4189, 4211, 4252, 4233, 4189,
     4190, 4227, 4226, 4312, 4279, 4228, 4234, 4252, 4240, 4287,
     4308, 4264, 4312, 4358, 4359, 4314, 4360, 4335, 7302, 4408,
     4412, 4371, 5176,25548, 7277, 4367, 4411, 7372, 4381, 4424,
     7203, 7348, 4369,25548, 4380,    0, 7260,25548,25548, 4382,
        0, 4399, 4426, 4356, 4369, 4393, 4401, 4398, 4398, 4439,
     4455,25548, 4413, 4451, 4460, 4417, 4456, 4470, 4429,    0,

     4421, 4423, 4428, 4471,    0, 7284, 4473, 4442, 4451, 4478,
     4447, 4485, 4457, 4460, 4465, 4452, 4469, 4455, 4470, 4474,
     4473, 4474, 4479, 4482, 4514, 7353, 4515, 7334, 4473,    0,
     4497, 7412, 4519, 4520, 4529, 4505, 4504, 4504, 4504, 4499,
     4542, 4510, 4547, 4556,    0, 4530,    0, 4548,    0, 7417,
     4554, 4539,    0, 4521, 4529,    0, 4535,25548, 4542, 7430,
    25548,25548, 7443, 4587,25548, 4580, 7448, 4601,    0,25548,
        0, 7462, 4602, 4589, 4565, 4587, 4587, 4618, 4581,25548,
     4581,25548, 4590, 4616, 4607, 7467, 4631, 7486, 4614, 7491,
     4638, 4640,    0, 4608, 4610, 4643, 4614, 4619, 4655,    0,

     4621, 4624, 4663, 4628, 4633,25548, 4630,    0, 4631, 4670,
     7510,25548, 7515,25548, 7533, 4684, 4641, 4647, 4681, 4690,
    25548, 7538, 7560, 7573, 7586, 7608, 7621, 4645, 4655, 4661,
     4674, 4695, 7636, 7643, 7650, 4696,25548, 4703, 7710, 4672,
     4705, 7677, 7682, 4707, 7738, 4708, 7752, 4671, 4718, 4728,
     7757, 4721,25548, 7779,25548, 7798, 4729, 7803,25548, 7825,
    25548, 7830, 4730, 7843, 4725, 4698,25548, 7856,25548, 7862,
     4734, 7869, 7876, 4739,25548, 7891,25548, 7898, 4736, 7904,
     7911, 7926, 7940, 4720, 4731, 4753, 4734, 4759, 4732, 4747,
     4771, 4716, 4757,25548, 7962,25548, 4785, 4772,25548, 7968,

    25548, 4786, 4773, 4755, 4762, 4793, 4769, 4766, 4804, 4829,
     7986, 7991, 4818,    0, 4795, 4815, 4824,    0, 4794, 4797,
     4830, 4795, 4806, 4853,    0, 4822, 4825, 4859, 4824, 4830,
     4866,    0, 4864, 4925, 4867, 8008, 4923, 8013, 4905,25548,
     4865,    0, 4928, 4906, 4974, 4864, 4918, 4975,25548, 4919,
        0, 4976, 4977, 8035, 4921, 4885, 4926, 8041, 8054, 8067,
        0, 4905, 4895, 4908, 4910, 4935, 4969, 4993, 4972, 4998,
     4970,25548, 4966,    0, 4967,25548, 4991, 5013, 5046, 5070,
        0, 5063, 5073, 5042, 5034, 8080,    0, 5040, 5043, 5040,
     5050, 5037, 5065, 5083, 5095, 5080, 5093, 5127, 8093, 5128,

        0,25548, 5099, 5099, 5132, 5133, 5107, 5112, 5115, 5119,
     5106, 5145, 5286, 5115, 5152,25548, 5116,25548, 5154,25548,
     5141, 5185, 5152,25548, 5164, 5157,25548, 5167, 5250, 8100,
     5276, 5240, 5279, 5250, 5263, 5290,25548,25548, 5266, 5272,
     5281, 5280, 5278, 5309, 5318, 8106, 5288, 5290, 5307, 5287,
     5326, 8113,    0, 5333, 5333, 5298, 5303, 5300, 5338, 5304,
     5308, 5318,    0,25548,    0, 8119, 5334, 5322, 8141, 5360,
     8146,25548,25548, 8212, 5363, 8159, 8165, 8205, 8172, 8275,
     5340, 5330, 5345, 5361, 8240, 8306, 5385,25548, 5354, 5388,
     5389, 5405,25548, 8233,25548, 8323, 5398, 5354, 5394, 5419,

     8345, 5395, 5363, 5384, 5408, 8394, 5376, 8373, 5410, 5413,
     8423, 5400, 5422, 5391, 8378,25548, 8436,25548, 8451, 8473,
     8478, 8500, 8506, 8561, 8350, 5424, 8529, 8513, 8589, 8602,
     8634,    0, 5433, 5446, 5414, 5414, 5406, 5405, 5410, 5425,
     8639, 5450, 8702, 5451, 5428, 5454,25548, 5432, 5440, 5457,
     5422, 5426, 5423, 5462, 5427, 5431, 5428, 5487,25548, 5479,
     8656, 8542,25548, 5492, 8661,25548, 5491, 8766, 8688, 5490,
        0, 5501, 5537, 5509, 5523, 5516, 5510, 5476, 5514,    0,
     5527, 5563, 8715,25548, 5536, 8738, 5538,25548, 5518, 5529,
     5523,    0, 5525,    0, 5538,    0,25548,    0, 5543, 5531,

     5569,25548, 5576, 8720, 5546, 8751, 5579,25548, 5548, 5559,
     5544,    0, 5565, 5564, 5580, 5584, 5583, 5588, 5610, 5619,
     5580, 5614,25548,    0, 5577, 5616, 5641, 5585, 8798, 5583,
        0, 5589, 5636, 5613, 5614, 5607,    0, 5643, 5663, 5629,
        0, 5621, 5622, 5623, 5628, 5665,    0, 5667, 5690, 5645,
        0, 5670, 5691, 5665, 5664, 5656, 5654, 5655, 5671, 5696,
     8835, 5697,    0,    0,25548,    0, 8841, 5722,25548,25548,
    25548, 8848, 5667, 5672, 5701, 5694, 5669, 5693, 5680, 5700,
     5690, 5699, 5694, 5717, 5751, 8854, 8870, 8884, 8944,25548,
     8811,25548, 8898, 5778,25548,    0,    0, 5730, 8816, 8920,

    25548, 6432, 5755, 5725, 5758, 5782, 8976, 5770, 5740, 8989,
     5775, 8996, 5753, 5752, 5780, 5796,25548, 9002,25548, 9018,
     5804,    0, 5783, 9041, 5753, 5785, 5803,    0, 9111, 9069,
     9139, 9152, 9168, 9181,25548, 9023,25548, 9194, 5862, 9229,
     5799, 9257, 9270, 9286, 9353, 9330, 5800,25548,25548, 9091,
     5801, 5766, 5789, 5797, 9207, 5821, 5820, 5843, 5811, 5826,
     5818, 5831, 5831, 5860, 5827, 5864, 5896,    0,25548, 9299,
     9382, 5870, 9396, 5865,25548, 5839,    0, 9335, 5872, 9451,
    25548, 5883, 5874, 9521, 5869, 5878, 5861, 5885, 5913,25548,
     5887, 5909, 5868, 5908,    0, 5911, 5910,25548,    0,25548,

        0,25548,25548, 5919, 5924, 9401, 5962,    0, 5925, 5964,
     5940, 5930,    0,25548,25548,    0,    0, 5944, 5950, 5934,
     5972, 5947, 5980, 5999,25548, 5959, 5993, 5958, 9425, 5996,
        0,25548,    0, 9312,    0,    0,25548, 5997,    0,25548,
     5994,    0,25548,    0, 6000, 6024, 6043,25548, 6025,    0,
    25548, 6026, 5989, 5993, 6013, 9431, 6026, 6025, 6015, 6022,
     6015, 6027, 6027, 6061,25548,25548,25548, 9481,25548, 9496,
     6062, 6071,25548, 6028, 6031, 6035, 6034, 6078, 6049, 6078,
     6081, 6097, 6091, 6108, 6092, 6110, 6098, 6136, 6164, 9550,
     9563, 9592, 6137, 9597,25548, 9503,25548, 9610, 6166,25548,

    25548,    0, 9623, 6249, 9636,    0,25548, 6138, 6165, 6102,
     9651, 6141, 6160,    0, 6161, 9658, 6233, 6123, 6162, 9671,
     6189,25548,25548, 9664,25548, 9684, 6303, 6178, 9706, 6203,
    25548,25548, 9724,25548, 9730, 6335, 9737, 6372, 9743, 9765,
     9770, 9796,25548, 9801,25548, 9818, 6396, 9831, 6204, 9849,
     9854,25548,25548, 9875,25548, 9880, 6397, 6185, 6335, 6220,
     6221, 6193, 6196, 6197, 9893, 6273, 6235, 6255, 6258, 6271,
     6353, 6270, 6265, 6308, 6399, 6272, 9906, 6322,25548, 9911,
    25548, 6287, 6326, 6327, 6363, 6316, 6343,25548, 6344,    0,
     6378,25548, 6345,    0, 6404, 6400, 6322, 6359, 6417, 6338,

     6376, 6468,25548,    0, 6368,25548,25548, 6364, 6365, 6368,
     6416,25548, 6386, 6420, 6471,    0, 9924,25548,25548,25548,
        0, 6391, 6392, 6404, 6444,    0,    0, 6420, 6446,25548,
    25548, 9929, 6459,25548,25548,25548, 6434,25548,25548, 6440,
     6469,25548, 6442, 6449, 6450, 9942, 6479, 6476, 6496, 6485,
     6498, 6504, 6505, 6500, 6532, 6546, 9947, 9969, 6533,25548,
     6506, 6508, 6521, 6520, 6516, 6523, 6554, 6541, 6555, 6554,
     6551, 6557, 6563, 6565, 6558,10035, 6587, 9974, 9979, 6595,
     6572, 6597,10005, 6599,25548,10011, 6787,10018, 6600, 6577,
     6603,25548,10041,25548, 6574, 6575, 6607, 6571, 6609,10048,

    25548,10063,10070,10098,10103, 6584, 6625,10126,25548, 6584,
     6600, 6593, 6630, 6652, 6594, 6607, 6615, 6615, 6649, 6614,
     6617, 6616, 6634, 6626, 6624, 6622, 6643,10149, 6667, 6641,
     6670,    0, 6671, 6680, 6674, 6800,    0, 6675, 6685, 6678,
     6702, 6681, 6643, 6813, 6653, 6696,25548,    0, 6671, 6672,
        0, 6701, 6751, 6670, 6744,25548,10131, 6745,25548, 6722,
        0, 6728,25548,25548,    0, 6758, 6834,25548, 6771, 6739,
     6778, 6777, 6778, 6795, 6795, 6830, 6799, 6800, 6800, 6817,
     6809, 6807, 6806, 6821, 6867,10154, 6925,10167,    0,25548,
     6883, 6909, 6846, 6845, 6890, 6873, 6859, 6902, 6861, 6864,

     6872, 6874, 6880, 6878, 6908, 6903, 6935, 6956,10182,10197,
    25548, 6925, 6961, 6976, 6938, 6972,10213, 7149, 6973, 6942,
    10226, 6953, 6958, 6945,10239,10261,10316,10291,10344, 6947,
     6982, 7008,25548, 6949, 6957,10357, 7001,10274, 6975, 6979,
     6970, 7009, 7036, 6971, 6989, 6989, 6978, 6984,10296, 6997,
     7007, 7031, 6999,25548, 7041, 7034, 7037,25548, 7063, 7060,
     7040, 7064,10373, 7068, 7018,25548, 7005, 7016,25548, 7091,
     7027, 7035, 7045, 7070, 7058,25548, 7066,25548, 7133, 7101,
     7134,    0,10386,10391, 7093, 7096, 7088, 7135, 7195, 7099,
     7135, 7150, 7139, 7145,10409, 7157, 7166,10416, 7217,10422,

     7253, 7161, 7167, 7153, 7181, 7166, 7172, 7175, 7200, 7203,
     7210, 7214, 7219, 7223, 7226, 7234,10429,10442, 7225,10464,
     7309, 7232, 7270, 7345,10477, 7233,10482,    0,    0, 7252,
    10504,10509,25548,10534,25548,10539, 7280,10561,10568, 7231,
    10574, 7414, 7288, 7311,10590, 7322, 7301,    0, 7301, 7415,
     7289, 7301, 7308, 7313, 7314,10595, 7343, 7332, 7360, 7349,
    10608, 7432, 7420, 7436, 7464,10622, 7382, 7487, 7352, 7357,
     7362, 7359, 7364, 7370, 7404, 7459, 7367, 7395, 7460,25548,
    10635, 7435,10640, 7437, 7432,    0, 7432, 7484, 7424, 7425,
     7446, 7451, 7452,10658, 7483, 7449, 7484,10671, 7701, 7505,

     7467,    0, 7473, 7475, 7484, 7506, 7489, 7495, 7497, 7511,
        0, 7502, 7512, 7504, 7507,10678,10684, 7516, 7545, 7522,
    10700, 7557,10706,25548,    0,10713,25548,25548, 7525,10726,
    10751,10756,10778,10783, 7550, 7520, 7521, 7561, 7525,25548,
     7526,    0,    0, 7532, 7533, 7540, 7541, 7575, 7540, 7542,
        0,10800,25548,10805, 7597, 7606,10818, 7536, 7580,10831,
     7543, 7543,    0, 7551, 7561, 7555, 7613,    0,    0, 7551,
     7595, 7560, 7607, 7572,25548, 7573,    0,    0, 7573, 7582,
     7596, 7604, 7638, 7603, 7606,10844, 7622,25548, 7619, 7605,
     7627, 7619,10857, 7619, 7620, 7631,25548, 7628, 7635, 7640,

     7643,10870,10875, 7632, 7639, 7675,25548,10897, 7652,10902,
    10924,10930,10937,25548,10956, 7678, 7646, 7685, 7730,    0,
        0,25548,25548,    0, 7658, 7680, 7687, 7724, 7749, 7686,
     7719,25548,10970, 8219, 7751, 7747,10976,25548,    0, 7746,
     7772,10983,25548,    0, 7726,25548, 7721, 7731, 7737,25548,
    25548,    0, 7766, 7796, 7734, 7768, 7799,    0,    0,25548,
    25548,    0, 7745, 7748, 7754, 7792, 7801, 7756, 7774,10989,
        0,    0, 7804, 7764, 7790,10996, 7815,    0,11002, 7793,
        0, 7780,11015,11020,11033,11055, 7791, 7783,11060,    0,
    11083,11088,11110,25548, 7827, 7794, 7854,25548,25548,25548,

     7807,    0, 7808, 7896, 7795, 7796, 9689,25548, 7861,11115,
    25548, 7924,25548,    0,    0, 7826, 7826,25548, 7933, 7831,
     7935,25548,25548,25548, 7844,    0, 7845, 7937, 7860, 7862,
     7961,25548,25548, 7864, 7875, 7875, 7881, 7885, 7879, 7892,
     7930,25548,11137, 7932,    0,25548, 7906,11142, 7938,11155,
     7946,11168,11173, 7912, 7927,11195,25548,11200,11223,11228,
    25548, 7956, 7983,11245, 7920,25548, 7925,    0,    0, 7963,
    11250,25548,25548,25548, 7948, 7950,11267, 7942,25548, 7943,
        0,    0,25548, 7947, 7951, 7963, 7968, 7976, 7969, 7979,
     8003, 8019, 8005,25548, 7973, 7968, 8009,25548, 8010,11272,

    11285, 7988, 7987, 8051, 8064,11298, 8038,11311, 8027,    0,
        0,25548,25548, 8028, 7991, 7999,11326, 8040,    0,    0,
    25548,25548, 8022, 8011, 8032, 8023, 8024, 8034, 8041, 8077,
     8067, 8111, 8038, 8058, 8105, 8114, 8107, 8116,11331, 8164,
        0, 8084,25548,25548, 8130, 8084, 8118,25548,25548, 8134,
     8102, 8107, 8102, 8136,25548,25548, 8127,    0, 8139, 8146,
     8144, 8132, 8135, 8181, 8145, 8152, 8217, 8226, 8209, 8212,
    25548,25548, 8136, 8195, 8141, 8179, 8238, 8274, 8140,    0,
     8153, 8204, 8290, 8182,25548, 8183, 8170, 8211, 8219,    0,
     8251, 8270, 8245, 8305, 8281, 8264, 8271, 8280, 8273, 8346,

     8316, 8274,25548, 8290, 8351,    0, 8278, 8306, 8301, 8307,
    25548, 8302, 8321, 8326, 8335, 8383, 8391, 8407,    0,11344,
     8328,11358,    0, 8329,25548,    0, 8334,    0, 8336,25548,
     8336, 8362, 8360, 8477,25548,11374,25548,    0,11390,25548,
    25548,    0,25548, 8375,25548,    0, 8386, 8377, 8437,25548,
    25548,    0,25548, 8386,11395,25548,11408, 8426, 8429, 8443,
     8470, 8476,25548,11422,11451,11480,11509,11538,11567,11596,
    11625,11654,11683,11712,11741,11770,11799,11828,11857,11874,
    11899,11924,11949,11974,11989,12004,12030,12059,12077,12103,
    12132,12150,12176,12205,12234,12263,12281,12306,12331,12348,

    12363,12391,12418,12433,12448,12474,12503,12521,12546,12573,
    12601,12630,12659,12688,12701,12714,12728,12753,12769,12794,
    12819,12844,12854,12869,12879,12894,12904,12930,12959,12977,
    13003,13032,13050,13076,13105,13134,13163,13192,13221,13250,
    13279,13308,13337,13366,13395,13424,13453,13482,13511,13529,
    13539,13564,13574,13599,13626,13643,13669,13687,13715,13742,
    13757,13767,13782,13792,13818,13847,13865,13875,13900,13927,
    13954,13982,14011,14040,14058,14071,14084,14110,14138,14163,
    14179, 8597, 8606,14204,14230,14248,14263,14273,14288,14303,
    14318,14344,14373,14402,14431,14460,14478,14503,14528,14556,

     8657,14574,14589,14604,14629, 8666, 8716,14646,14672,14700,
    14725,14741,14767,14796,14825,14854,14870,14878,14898,14913,
    14928,14938,14964,14993,15022,15040,15055, 8718, 8849, 8899,
     8915, 9070, 9086, 9147, 9202,15081,15110,15139,15168,15197,
    15226,15255,15284,15313,15342,15360,15385,15411,15427,15437,
    15452, 9265, 9307,15467, 9331, 9397,15480,15488,15509,15538,
    15566,15592,15621,15650,15679,15708,15737,15756,15782,15811,
    15840,15869,15887,15897,15912,15925,15933,15941,15949,15957,
    15965,15973,15981,16002,16031,16060,16089,16118,16147,16176,
    16205,16234,16263,16292,16321,16350,16379,16395,16403,16424,

    16440,16448,16468,16484,16510,16539,16568,16597,16626,16655,
    16684,16713,16742,16771,16800,16829,16847,16873,16886,16901,
    16927,16956,16985,17014,17043,17072,17101,17130,17159,17188,
    17217,17246,17275,17304,17333,17362,17391,17420,17449,17478,
    17507,17536,17564,17590, 9426, 9558,17619,17638,17664,17693,
    17722,17751,17780,17809,17838,17867,17896,17925, 9630, 9685,
    17943,17969,17998,18011,18037,18066,18094,18120,18149,18178,
    18207,18236,18265,18294,18323,18352,18381,18410,18439,18468,
    18497,18526,18555,18584,18613,18642,18670,18696,18712,18720,
    18741,18770,18799,18827,18854,18883,18902,18928,18957,18986,

    19015,19044,19073,19102,19131,19160,19176,19184,19194,19220,
    19249,19278,19307,19336,19365,19383,19409,19438,19467,19496,
    19525,19554,19583,19612,19641,19670,19699,19728,19757,19786,
    19815,19844,19873,19902,19931,19960,19989,20018,20047,20076,
    20105,20134,20162,20178,20204,20233,20262,20290,20317,20346,
    20375,20404,20433,20462,20491,20520,20549,20578,20607,20636,
    20664,20674,20700,20729,20758,20776,20802,20831,20860,20889,
    20918,20947,20976,21005,21034,21063,21092,21121,21150,21179,
    21208,21237,21266,21295,21324,21353,21382,21411,21440,21469,
    21498,21526,21551,21568,21594,21623,21651,21662,21688,21717,

    21746,21775,21804,21833,21862,21891,21920,21938,21964,21977,
    22003,22021,22047,22076,22105,22134,22163,22192,22221,22250,
    22279,22308,22337,22366,22394,22421,22450,22479,22507,22533,
    22559,22588,22617,22646,22675,22704,22733,22751,22777,22806,
    22824,22850,22879,22908,22937,22966,22995,23024,23053,23082,
    23111,23140,23168,23179,23205,23234,23263,23291,23318,23347,
    23376,23405,23434,23462,23488,23514,23543,23562,23588,23617,
    23646,23675,23704,23733,23762,23791,23820,23849,23878,23907,
    23936,23965,23994,24023,24052,24081,24110,24139,24168,24197,
    24226,24255,24284,24313,24342,24371,24400,24429,24458,24487,

    24516,24545,24574,24603,24632,24661,24680,24706,24735,24764,
    24793,24822,24851,24880,24909,24938,24967,24996,25025,25054,
    25083,25112,25141,25170,25199,25228,25257,25286,25315,25344,
    25373,25402,25431,25460,25489,25518
    } ;

static yyconst flex_int16_t yy_def[4237] =
    {   0,
     3663,    1, 3664, 3664, 3665, 3665, 3666, 3666, 3667, 3667,
     3668, 3668, 3663,   13, 3669, 3669, 3663,   17, 3663,   19,
     3663,   21, 3663,   23, 3670, 3670, 3671, 3671, 3663,   29,
     3663,   31, 3663,   33, 3672, 3672, 3663,   37, 3673, 3673,
     3674, 3674, 3675, 3675, 3663,   45, 3663,   47, 3667, 3667,
     3663,   51, 3676, 3676, 3677, 3677, 3667, 3667, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3678, 3663, 3663, 3679, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3680, 3663, 3663,
     3663, 3681, 3681,   83,   83,   83,   83,   83,   83,   83,
       83,   83,   83,   83,   83,   83,   96,   96,   96,   96,

       96, 3663, 3663, 3663, 3663, 3682, 3682, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3683, 3683, 3683,
     3663, 3663, 3663, 3663, 3663, 3663, 3684, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3685, 3663, 3685, 3685, 3685,
     3685, 3685, 3685, 3685, 3685, 3685, 3685, 3685, 3685, 3685,
     3685, 3685, 3685, 3685, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3686, 3686, 3686, 3663, 3663, 3663, 3663, 3663,
     3687, 3688, 3663, 3663, 3689, 3663, 3663, 3663, 3663, 3690,

     3691, 3663, 3663, 3663, 3663, 3692, 3692, 3663, 3663, 3663,
     3663, 3693, 3694, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3695, 3663, 3663, 3696, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3697, 3663, 3663,
     3663, 3663, 3698, 3663, 3699, 3699, 3699, 3699, 3699, 3663,
     3663, 3700, 3663, 3663, 3663, 3663, 3701, 3663, 3702, 3702,

     3702, 3703, 3703, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3704, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3705, 3706, 3707, 3663, 3663, 3663, 3663, 3663,
     3708, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3709,
     3709, 3709, 3710, 3711, 3712, 3663, 3663, 3663, 3663, 3663,
     3713, 3663, 3663, 3663, 3714, 3663, 3663, 3663, 3663, 3663,
     3663, 3715, 3663, 3716, 3663, 3663, 3716, 3717, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3718, 3719, 3718, 3718,
     3718, 3718, 3718,  381,  381,  381,  381,  381,  381,  381,
      381,  381,  381,  381,  381,  381,  381, 3718,  381,  381,

      381,  381,  381,  381,  381,  381,  381,  381,  381,  381,
      381,  381,  381,  381,  381,  381,  381,  381,  381,  381,
      381,  381,  381,  381,  381,  381, 3663, 3720, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3721, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3722, 3723, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3724, 3725, 3724, 3724, 3724, 3724, 3724, 3724, 3724, 3724,
     3724, 3724, 3724, 3724, 3724, 3724, 3663, 3724, 3724, 3724,
     3724, 3724, 3724, 3724, 3724, 3724, 3724, 3724, 3724, 3724,

     3724, 3724, 3724, 3724, 3724, 3724, 3724, 3663, 3663, 3726,
     3727, 3726, 3726, 3663, 3728, 3663, 3663, 3729, 3663, 3663,
     3663, 3730, 3663, 3731, 3663, 3663, 3732, 3663, 3663, 3663,
     3733, 3733, 3663, 3734, 3663, 3663, 3735, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3736,
     3663, 3663, 3663, 3737, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3738, 3739, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3740, 3663, 3663, 3663, 3663, 3663, 3741, 3742, 3663,
     3743, 3744, 3663, 3745, 3663, 3746, 3663, 3747, 3663, 3663,

     3748, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3749, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3750, 3751, 3663, 3663, 3663, 3752, 3753, 3754,
     3754, 3754, 3755, 3663, 3663, 3756, 3663, 3663, 3757, 3758,
     3663, 3759, 3759, 3663, 3760, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3761, 3762, 3663, 3663,
     3763, 3764, 3765, 3663, 3663, 3766, 3663, 3663, 3663, 3663,
     3767, 3768, 3663, 3663, 3663, 3663, 3769, 3770, 3771, 3663,
     3772, 3663, 3663, 3773, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3774,

     3775, 3663, 3663, 3776, 3663, 3777, 3663, 3663, 3778, 3663,
     3779, 3780, 3780, 3780, 3780, 3663, 3663, 3663, 3780, 3781,
     3663, 3663, 3780, 3780, 3780, 3780, 3780, 3780, 3780, 3780,
     3780, 3780, 3663, 3663, 3780, 3780, 3780, 3780, 3780, 3780,
     3780, 3780, 3780, 3663, 3663, 3780, 3780, 3780, 3780, 3780,
     3780, 3780, 3780,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  753,  753,
     3663, 3782, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3783, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3784,

     3785, 3786, 3663, 3663, 3787, 3788, 3663, 3663, 3663, 3787,
     3788, 3787, 3787, 3787, 3787, 3787, 3787, 3787, 3787, 3663,
     3787, 3788, 3787, 3787, 3663, 3787, 3788, 3663, 3787, 3788,
     3787, 3663, 3787, 3788, 3787, 3787, 3663, 3787, 3788, 3787,
     3663, 3787, 3788, 3663, 3787, 3788, 3787, 3663, 3787, 3788,
     3787, 3663, 3787, 3788, 3787, 3787, 3787, 3787, 3787, 3787,
     3787, 3787, 3663, 3787, 3788, 3787, 3787, 3787, 3787, 3789,
     3790, 3790, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3791, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3792,
     3793, 3794, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3795, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3796, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3797, 3663, 3798, 3799, 3800, 3800, 3663,
     3801, 3663, 3663, 3663, 3663, 3663, 3802, 3803, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3804, 3663, 3663, 3805, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3806,
     3663, 3663, 3663, 3663, 3663, 3663, 3807, 3663, 3663, 3663,
     3663, 3663, 3663, 3808, 3663, 3663, 3663, 3809, 3809, 3810,
     3811, 3663, 3663, 3663, 3811, 3812, 3811, 3663, 3663, 3663,
     3811, 3812, 3813, 3814, 3663, 3663, 3663, 3663, 3815, 3811,
     3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3663,

     3663, 3663, 3816, 3811, 3811, 3811, 3811, 3811, 3811, 3811,
     3663, 3663, 3811, 3811, 3811, 3811, 3811, 3663, 3663, 3811,
     3811, 3811, 3811, 3811, 3663, 3811, 3811, 3811, 3811, 3811,
     3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811,
     3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811,
     3811, 3811, 3663, 3817, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3818, 3663, 3663, 3663, 3663, 3663, 3663, 3819, 3663,
     3820, 3663, 3821, 3822, 3663, 3823, 3824, 3663, 3825, 3821,
     3821, 3821, 3821, 3663, 3821, 3822, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3821, 3821, 3663, 3821, 3822, 3821,

     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821, 3821, 3826, 3827, 3827, 3663, 3828, 3663, 3663, 3663,
     3663, 3663, 3663, 3829, 3663, 3663, 3663, 3663, 3663, 3663,
     3830, 3663, 3663, 3663, 3663, 3663, 3663, 3831, 3663, 3663,
     3663, 3663, 3663, 3663, 3832, 3663, 3663, 3663, 3663, 3663,
     3663, 3833, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3834, 3663, 3663, 3663, 3663, 3663,
     3663, 3835, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3836, 3663, 3837, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3838,
     3839, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3840,
     3663, 3841, 3663, 3663, 3842, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3843, 3663, 3663, 3663, 3663, 3663, 3844, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3845, 3663, 3846, 3847,
     3848, 3663, 3849, 3663, 3663, 3663, 3663, 3850, 3851, 3663,
     3852, 3663, 3663, 3663, 3663, 3663, 3663, 3853, 3663, 3663,
     3663, 3663, 3663, 3854, 3663, 3663, 3663, 3855, 3663, 3663,
     3663, 3663, 3663, 3663, 3856, 3663, 3663, 3663, 3663, 3663,

     3663, 3857, 3663, 3663, 3663, 3858, 3663, 3663, 3663, 3663,
     3859, 3663, 3663, 3663, 3663, 3860, 3861, 3663, 3663, 3663,
     3862, 3863, 3663, 3663, 3864, 3663, 3663, 3663, 3663, 3663,
     3663, 3865, 3865, 3861, 3861, 3663, 3663, 3861, 3861, 3861,
     3861, 3861, 3861, 3861, 3663, 3663, 3663, 3866, 3866, 3861,
     3861, 3861, 3861, 3861, 3861, 3861, 3663, 3867, 3663, 3663,
     3663, 3861, 3868, 3861, 3663, 3663, 3663, 3861, 3868, 3861,
     3663, 3663, 3663, 3869, 3861, 3861, 3861, 3861, 3663, 3663,
     3663, 3861, 3861, 3861, 3861, 3861, 3861, 3861, 3861, 3663,
     3663, 3663, 3861, 3868, 3861, 3861, 3868, 3861, 3663, 3663,

     3663, 3663, 3663, 3861, 3861, 3861, 3861, 3861, 3861, 3861,
     3861, 3861, 3663, 3663, 3861, 3861, 3861, 3663, 3663, 3663,
     3663, 3663, 3870, 3663, 3663, 3871, 3663, 3663, 3872, 3872,
     3873, 3663, 3873, 3874, 3663, 3663, 3873, 3873, 3873, 3873,
     3663, 3873, 3874, 3873, 3873, 3873, 3663, 3873, 3874, 3873,
     3873, 3663, 3663, 3663, 3663, 3873, 3873, 3873, 3873, 3873,
     3873, 3663, 3663, 3663, 3873, 3874, 3873, 3873, 3663, 3663,
     3873, 3875, 3875, 3876, 3663, 3663, 3663, 3877, 3663, 3663,
     3663, 3878, 3663, 3663, 3663, 3879, 3663, 3663, 3663, 3880,
     3663, 3663, 3663, 3881, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3882, 3663, 3663, 3663, 3883, 3663, 3663,
     3663, 3884, 3885, 3663, 3663, 3663, 3886, 3663, 3663, 3663,
     3887, 3663, 3663, 3663, 3663, 3663, 3888, 3888, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3889, 3889, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3890, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3891, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3892, 3663, 3663, 3893, 3663, 3894, 3663, 3895, 3663,
     3663, 3663, 3896, 3663, 3663, 3663, 3663, 3663, 3897, 3663,

     3898, 3663, 3663, 3663, 3899, 3663, 3663, 3663, 3663, 3900,
     3901, 3663, 3663, 3663, 3902, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3903, 3904, 3663, 3905, 3905, 3903, 3663,
     3906, 3906, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3907, 3663, 3663, 3663, 3663, 3908,
     3903, 3903, 3663, 3663, 3909, 3904, 3903, 3903, 3903, 3903,
     3903, 3903, 3663, 3663, 3663, 3663, 3663, 3910, 3903, 3903,
     3903, 3663, 3663, 3903, 3663, 3663, 3903, 3911, 3911, 3903,
     3903, 3663, 3912, 3913, 3913, 3903, 3903, 3903, 3903, 3663,
     3903, 3903, 3903, 3903, 3903, 3903, 3903, 3903, 3903, 3663,

     3663, 3663, 3903, 3904, 3663, 3903, 3663, 3914, 3663, 3663,
     3663, 3903, 3904, 3903, 3903, 3903, 3903, 3903, 3663, 3663,
     3903, 3903, 3663, 3663, 3663, 3663, 3915, 3903, 3663, 3663,
     3663, 3903, 3904, 3903, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3916,
     3917, 3663, 3918, 3917, 3917, 3917, 3917, 3917, 3917, 3917,
     3917, 3917, 3663, 3663, 3663, 3663, 3917, 3917, 3917, 3917,
     3917, 3663, 3663, 3663, 3917, 3919, 3663, 3663, 3663, 3917,
     3919, 3920, 3920, 3663, 3663, 3663, 3663, 3663, 3663, 3921,
     3921, 3663, 3663, 3922, 3922, 3663, 3923, 3923, 3663, 3924,

     3663, 3663, 3663, 3925, 3926, 3663, 3663, 3663, 3663, 3927,
     3663, 3928, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3929, 3663, 3663, 3663, 3663, 3930,
     3663, 3663, 3663, 3931, 3931, 3663, 3663, 3663, 3663, 3663,
     3932, 3663, 3933, 3933, 3934, 3663, 3935, 3663, 3936, 3663,
     3663, 3663, 3937, 3663, 3663, 3938, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3939, 3663,
     3940, 3663, 3663, 3663, 3663, 3663, 3663, 3941, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3942, 3943, 3663, 3663,
     3944, 3663, 3945, 3663, 3663, 3663, 3663, 3663, 3663, 3946,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3947, 3663, 3663,
     3943, 3663, 3663, 3663, 3943, 3948, 3663, 3663, 3949, 3949,
     3663, 3943, 3943, 3943, 3943, 3943, 3943, 3663, 3663, 3663,
     3663, 3663, 3943, 3943, 3663, 3663, 3663, 3950, 3943, 3663,
     3951, 3943, 3663, 3952, 3663, 3663, 3943, 3663, 3953, 3953,
     3663, 3954, 3663, 3663, 3663, 3943, 3948, 3943, 3663, 3663,
     3663, 3943, 3948, 3663, 3663, 3663, 3663, 3663, 3663, 3943,
     3948, 3943, 3943, 3948, 3663, 3663, 3663, 3943, 3948, 3943,
     3943, 3943, 3943, 2083, 3955, 3955, 2083, 2083, 2083, 2083,
     2083, 3663, 3956, 3663, 3663, 3663, 2083, 3948, 3663, 3663,

     3663, 2083, 3948, 3663, 3663, 3663, 3663, 3663, 3957, 3957,
     3943, 3663, 3663, 3958, 3663, 3663, 3663, 3959, 3663, 3663,
     3663, 3663, 3663, 3663, 3960, 3663, 3663, 3663, 3663, 3663,
     3961, 3962, 3963, 3963, 3961, 3961, 3961, 3961, 3961, 3663,
     3961, 3964, 3961, 3961, 3961, 3663, 3965, 3961, 3663, 3961,
     3964, 3961, 3961, 3663, 3663, 3663, 3966, 3967, 3967, 3663,
     3968, 3663, 3663, 3663, 3663, 3969, 3663, 3970, 3663, 3971,
     3663, 3663, 3663, 3972, 3663, 3663, 3663, 3663, 3973, 3973,
     3974, 3975, 3975, 3663, 3663, 3663, 3976, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3977, 3663, 3663,

     3978, 3663, 3663, 3663, 3979, 3980, 3663, 3663, 3663, 3663,
     3663, 3981, 3981, 3663, 3982, 3663, 3663, 3663, 3663, 3663,
     3663, 3983, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3984, 3663, 3663, 3985, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3986, 3986, 3663, 3663, 3663, 3663, 3663,
     3663, 3987, 3988, 3663, 3989, 3663, 3663, 3663, 3990, 3663,
     3663, 3663, 3991, 3663, 3992, 3987, 3663, 3663, 3663, 3993,
     3663, 3663, 3663, 3663, 3663, 3987, 3987, 3987, 3987, 3987,
     3663, 3663, 3663, 3663, 3987, 3994, 3663, 3663, 3663, 3995,
     3996, 3996, 3663, 3663, 3663, 3987, 3997, 3663, 3998, 3998,

     3987, 3663, 3663, 3663, 3999, 3987, 3663, 3663, 4000, 3663,
     3987, 3663, 4001, 3663, 3663, 3663, 3987, 3663, 3987, 3987,
     3987, 3987, 3987, 3987, 3663, 4002, 3987, 3987, 3987, 3987,
     3987, 4003, 4004, 4004, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 4005, 3663, 3663, 3663, 4006, 3663, 3663, 3663, 4007,
     3663, 3663, 3663, 4008, 3663, 3663, 3663, 4009, 3663, 4010,
     4009, 3663, 3663, 4009, 3663, 3663, 4009, 4009, 4009, 4009,
     4011, 4012, 4012, 4009, 4009, 4009, 4009, 3663, 4013, 4014,
     4015, 4015, 3663, 3663, 4016, 3663, 3663, 3663, 3663, 3663,
     3663, 4017, 3663, 4018, 3663, 4019, 3663, 4020, 3663, 3663,

     4021, 3663, 4022, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 4023, 3663, 3663, 3663, 3663, 3663, 3663, 4024, 4024,
     3663, 4025, 3663, 4026, 3663, 4027, 4027, 3663, 3663, 3663,
     4028, 3663, 4029, 3663, 3663, 3663, 4030, 4031, 4031, 3663,
     4032, 3663, 3663, 4033, 3663, 4034, 4035, 4036, 4036, 3663,
     4037, 4038, 4038, 3663, 3663, 3663, 3663, 3663, 3663, 4039,
     3663, 3663, 4040, 4041, 3663, 4042, 4043, 4044, 3663, 3663,
     3663, 4043, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 4045, 4043, 4043, 4043, 4043, 3663,
     3663, 3663, 4043, 4044, 3663, 4046, 4047, 3663, 3663, 4043,

     3663, 4048, 4049, 3663, 4050, 4050, 3663, 4051, 3663, 3663,
     4052, 4043, 3663, 3663, 4053, 4053, 3663, 3663, 3663, 4043,
     4044, 4054, 3663, 4043, 3663, 4055, 4055, 4056, 4043, 4043,
     4043, 4043, 4043, 4043, 3663, 3663, 3663, 4043, 4044, 4043,
     3663, 4043, 4043, 4043, 4043, 3663, 3663, 3663, 3663, 3663,
     4057, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 4058, 3663, 4059, 4059, 4060, 3663, 4061,
     3663, 3663, 4061, 2573, 3663, 2573, 4062, 3663, 3663, 4061,
     3663, 4063, 2573, 4061, 2573, 2573, 3663, 4064, 4064, 3663,
     4065, 4066, 3663, 4067, 4068, 3663, 3663, 3663, 4069, 3663,

     4070, 3663, 3663, 3663, 3663, 3663, 3663, 4071, 3663, 4072,
     3663, 3663, 4073, 3663, 3663, 4074, 4075, 3663, 3663, 3663,
     4076, 3663, 4077, 4077, 3663, 3663, 4078, 3663, 3663, 3663,
     4079, 3663, 4080, 3663, 4081, 4082, 3663, 4083, 4084, 3663,
     3663, 4085, 3663, 4086, 3663, 4087, 4087, 3663, 4088, 4089,
     3663, 4090, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 4091, 3663, 3663, 3663, 4092, 3663, 4093,
     3663, 4094, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 4095, 4095, 4092,
     4092, 3663, 3663, 4092, 3663, 3663, 3663, 4092, 4094, 3663,

     3663, 4096, 4092, 3663, 4097, 4098, 3663, 4099, 4099, 3663,
     3663, 4100, 3663, 4101, 3663, 4092, 4094, 3663, 3663, 3663,
     4102, 3663, 3663, 3663, 3663, 4092, 4094, 3663, 3663, 4103,
     3663, 3663, 3663, 3663, 4092, 4094, 4092, 4094, 4092, 4092,
     4092, 4092, 3663, 3663, 3663, 4092, 4094, 3663, 3663, 4092,
     3663, 3663, 3663, 3663, 3663, 4092, 4094, 3663, 3663, 4104,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 4105, 4105, 3663, 3663, 4106, 3663, 3663,
     3663, 3663, 4107, 4108, 4108, 3663, 4109, 3663, 4108, 4110,
     4108, 3663, 4108, 4110, 4108, 4108, 3663, 4111, 4112, 3663,

     4113, 4113, 3663, 4114, 3663, 3663, 3663, 3663, 3663, 3663,
     4115, 3663, 3663, 4116, 4116, 4117, 3663, 3663, 3663, 3663,
     4118, 3663, 3663, 3663, 4119, 4120, 4121, 3663, 4122, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     4123, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 4124, 4124, 4092, 4125, 4126, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 4127, 4092, 4092, 4094,
     3663, 4128, 3663, 3663, 3663, 4092, 4129, 4130, 4131, 3663,
     3663, 3663, 4092, 3663, 3663, 3663, 3663, 3663, 3663, 4092,

     3663, 4092, 4092, 4092, 4092, 3663, 4132, 3663, 3663, 3663,
     3663, 3663, 4133, 4133, 3663, 3663, 3663, 3663, 4134, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 4135, 3663,
     3663, 4136, 4137, 4137, 4138, 4138, 4139, 4140, 4140, 4138,
     4138, 4138, 3663, 4141, 3663, 4142, 3663, 4143, 3663, 3663,
     4144, 4145, 4145, 3663, 4146, 3663, 3663, 3663, 3663, 3663,
     4147, 3663, 3663, 3663, 4148, 4149, 4149, 3663, 4150, 3663,
     3663, 3663, 3663, 3663, 3663, 4151, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 4152, 4092, 3663, 4153, 4154, 3663,
     4155, 4155, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 4092, 4092,
     3663, 3663, 4156, 4156, 3663, 4157, 4092, 4158, 3663, 3663,
     4092, 3663, 3663, 3663, 4092, 4092, 4092, 4092, 4092, 3663,
     4159, 4159, 3663, 3663, 3663, 3663, 4160, 3663, 3663, 3663,
     3663, 4161, 4161, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 4137, 4138, 4138, 3663, 4140, 4138,
     4138, 4138, 3663, 4141, 3663, 3663, 3663, 3663, 3663, 4145,
     3663, 3663, 3663, 4162, 3663, 3663, 3663, 3663, 4149, 4150,
     4150, 4163, 3663, 3663, 3663, 3663, 3663, 4151, 4151, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 4092, 4164, 4165,

     4155, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 4092, 4092, 3663, 3663,
     4156, 3663, 4157, 4157, 4092, 3663, 4092, 4166, 4167, 3663,
     4092, 4092, 3663, 3663, 3663, 4092, 4168, 4092, 4092, 3663,
     3663, 4159, 3663, 3663, 3663, 3663, 3663, 4169, 3663, 4161,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     4138, 4138, 4138, 4138, 4138, 3663, 3663, 4141, 3663, 3663,
     3663, 3663, 3663, 3663, 4162, 4162, 3663, 3663, 4150, 3663,
     3663, 3663, 3663, 3663, 3663, 4170, 3663, 4151, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 4092, 4164, 3663,

     3663, 4171, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     4172, 3663, 3663, 3663, 3663, 4092, 4092, 3663, 3663, 3663,
     3663, 4157, 3663, 3663, 4173, 4092, 3663, 3663, 3663, 4092,
     4092, 4092, 4092, 3663, 3663, 3663, 3663, 4174, 3663, 3663,
     3663, 4175, 4176, 3663, 3663, 3663, 3663, 4177, 3663, 3663,
     4178, 3663, 3663, 4138, 4138, 4138, 4138, 3663, 4179, 4141,
     3663, 3663, 4180, 3663, 3663, 3663, 4162, 4181, 4182, 3663,
     4183, 3663, 4184, 3663, 3663, 3663, 4185, 4186, 3663, 3663,
     3663, 3663, 4187, 3663, 3663, 4092, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 4092, 4092, 3663, 3663, 3663, 3663, 4092, 3663, 4092,
     4092, 4092, 3663, 3663, 3663, 3663, 3663, 4174, 4174, 4188,
     4189, 3663, 3663, 4190, 3663, 3663, 3663, 4177, 4177, 3663,
     3663, 3663, 3663, 3663, 4138, 4138, 3663, 3663, 4191, 4179,
     4179, 3663, 3663, 4192, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 4193, 4183, 4183, 3663, 4184, 4184, 4194, 4195, 3663,
     3663, 4196, 3663, 3663, 3663, 4187, 4187, 3663, 3663, 4092,
     4197, 4198, 3663, 3663, 3663, 3663, 3663, 4199, 3663, 3663,
     4200, 3663, 3663, 3663, 4092, 4092, 3663, 3663, 4092, 4201,
     4092, 4092, 4092, 3663, 4202, 3663, 4174, 3663, 3663, 3663,

     3663, 4203, 3663, 4177, 3663, 3663, 3663, 3663, 4138, 4138,
     3663, 4179, 3663, 4204, 4205, 3663, 3663, 3663, 4183, 3663,
     4184, 3663, 3663, 3663, 3663, 4206, 3663, 4187, 3663, 3663,
     4207, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     4208, 3663, 3663, 3663, 4209, 3663, 3663, 3663, 3663, 3663,
     3663, 4092, 4092, 3663, 3663, 4092, 3663, 4092, 4092, 3663,
     3663, 4202, 4202, 3663, 3663, 3663, 3663, 4210, 4211, 4138,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     4212, 4213, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     4208, 4208, 4214, 3663, 3663, 3663, 4215, 3663, 4216, 4092,

     4092, 3663, 3663, 4207, 4207, 4092, 4202, 3663, 3663, 4217,
     4218, 3663, 3663, 4138, 3663, 3663, 3663, 3663, 4219, 4220,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 4208,
     4214, 4214, 3663, 3663, 4215, 4215, 4216, 4216, 4092, 4207,
     4221, 3663, 3663, 3663, 3539, 3663, 4222, 3663, 3663, 4138,
     3663, 3663, 3663, 4223, 3663, 3663, 3663, 4224, 3663, 3663,
     3663, 3663, 3663, 4214, 3663, 3663, 4215, 4216, 3539, 3539,
     3663, 3663, 3663, 3539, 3663, 4222, 4222, 4138, 3663, 4225,
     3663, 4223, 4223, 3663, 3663, 3663, 3663, 3663, 3663, 4226,
     3663, 3663, 3663, 3539, 3539, 3539, 3663, 3539, 3663, 4222,

     4138, 3663, 3663, 3663, 4223, 4227, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3539, 3539, 3539, 4228, 4092,
     3663, 4138, 4229, 3663, 3663, 4230, 3663, 4231, 3663, 3663,
     3663, 3663, 3663, 3539, 3663, 3663, 3663, 4232, 3663, 3663,
     3663, 4233, 3663, 3663, 3663, 4234, 3663, 3663, 3539, 3663,
     3663, 4235, 3663, 3663, 3663, 3663, 3663, 3663, 4236, 4236,
     4236, 4236,    0, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663
    } ;

static yyconst flex_int16_t yy_nxt[25619] =
    {   0,
       60,   61,   62,   63,   64,   61,   65,   66,   60,   67,
       60,   68,   69,   70,   71,   72,   73,   74,   75,   76,
       77,   78,   60,   79,   80,   60,   60,   60,   81,   82,
       82,   82,   82,   82,   82,   82,   82,   82,   60,   60,
       60,   82,   83,   84,   85,   86,   87,   88,   82,   82,
       89,   82,   90,   91,   92,   93,   94,   82,   95,   96,
       97,   98,   99,  100,  101,   82,  102,  103,  104,   60,
      105, 1730,  107,  105,  105,  124,  107,  105,  124,  352,
      511,  108,  109,  353,  516,  108,  109,  105,  517,  113,
      105,  356,  357,  105,  105,  113,  105,  472,  105,  116,

      117,  118,  116,  116,  116,  117,  118,  116,  116,  124,
      512,  119,  120,  124,  324,  121,  119,  120,  324,  325,
      121,  124, 1732,  325,  124,  122,  472,  114,  125,  505,
      122,  125,  139,  114,  126,  139,  110,  126,  111,  105,
      110,  140,  111,  105,  140,  348,  349,  349,  349,  348,
      497,  221,  222,  223,  221,  221,  105,  349,  350,  349,
      349,  349,  105,  224,  123,  225,  226,  472,  358,  123,
      127,  128,  129,  127,  128,  128,  363,  227,  364,  467,
      468,  131,  359,  221,  222,  223,  221,  221,  284,  285,
      286,  284,  285,  285,  132,  224,  288,  225,  226,  365,

      492,  462,  289,  284,  285,  286,  284,  285,  285,  227,
      105,  288,  300,  105,  366,  463,  422,  289,  377,  105,
      377,  300,  105,  105,  472,  303,  105,  469,  470,  377,
      304,  472,  519,  520,  305, 1422,  133,  301,  134,  127,
      127,  128,  129,  127,  128,  128,  301,  105,  484,  124,
      124,  131,  528,  529,  344,  344,  429,  284,  507,  345,
      345,  472,  485,  472,  132,  349,  349,  349,  349,  349,
      346,  346,  284,  349,  349,  349,  349,  349,  525,  105,
      756,  511,  526,  375,  375,  375,  375,  375,  105,  306,
      430,  307,  105,  347,  347,  376,  431,  495,  598,  496,

      432,  377,  433,  513,  378,  434,  133,  599,  134,  127,
      135,  105,  124,  135,  105,  105,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
      135,  135,  135,  135,  135,  135,  136,  135,  135,  137,
      137,  137,  137,  137,  137,  137,  137,  137,  135,  135,
      135,  137,  137,  137,  137,  137,  137,  137,  137,  137,
      137,  137,  137,  137,  137,  137,  137,  137,  137,  137,
      137,  137,  137,  137,  137,  137,  135,  135,  135,  135,
      141,  142,  143,  144,  142,  142,  145,  141,  141,  146,
      141,  141,  141,  147,  148,  141,  141,  149,  150,  141,

      141,  141,  151,  152,  153,  154,  155,  141,  141,  156,
      156,  156,  156,  156,  156,  156,  156,  156,  157,  141,
      141,  156,  158,  156,  159,  160,  161,  156,  162,  156,
      163,  156,  164,  165,  166,  167,  168,  156,  169,  170,
      171,  172,  173,  174,  156,  156,  141,  175,  141,  141,
      176,  177,  178,  179,  177,  177,  176,  176,  176,  176,
      176,  176,  176,  180,  181,  182,  176,  176,  176,  176,
      176,  176,  176,  176,  176,  176,  176,  176,  176,  183,
      183,  183,  183,  183,  183,  183,  183,  183,  176,  176,
      176,  183,  183,  183,  183,  183,  184,  183,  183,  183,

      183,  183,  183,  183,  183,  183,  183,  183,  183,  185,
      183,  183,  183,  183,  183,  183,  186,  176,  176,  176,
      187,  188,  189,  190,  188,  188,  187,  191,  187,  187,
      187,  187,  192,  193,  194,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  195,
      195,  195,  195,  195,  195,  195,  195,  195,  187,  187,
      187,  195,  195,  195,  195,  195,  195,  195,  195,  195,
      195,  195,  195,  195,  195,  195,  195,  195,  195,  195,
      195,  195,  195,  195,  195,  195,  187,  187,  187,  187,
      196,  197,  198,  199,  197,  197,  196,  200,  196,  196,

      196,  196,  201,  202,  196,  196,  196,  203,  196,  196,
      196,  196,  196,  204,  196,  205,  196,  196,  196,  206,
      206,  206,  206,  206,  206,  206,  206,  206,  196,  196,
      196,  206,  207,  206,  206,  206,  206,  206,  206,  206,
      206,  206,  206,  206,  206,  206,  206,  206,  206,  206,
      206,  206,  206,  206,  206,  206,  196,  196,  196,  196,
      209,  210,  211,  209,  209,  561,  212,  105,  472,  303,
      105,  213,  214,  367,  304,  368,  215,  377,  305,  377,
      562,  377,  333,  334,  335,  333,  333,  370,  476,  450,
      377,  105,  426,  472,  336,  333,  334,  335,  333,  333,

      370,  477,  783,  451,  216,  784,  472,  336,  535,  217,
      452,  543,  536,  218,  472,  219,  209,  210,  211,  209,
      209,  377,  212,  377,  544,  423,  506,  213,  214,  424,
      493,  472,  215,  306,  425,  307,  105,  337,  490,  494,
      338, 1425,  371,  371,  371,  371,  371,  372,  538,  539,
      337,  398,  491,  338,  373,  551,  377,  399,  400,  552,
      216,  555,  556,  377,  377,  217,  564,  565,  374,  218,
     1187,  219,  228,  229,  230,  231,  229,  229,  232,  233,
      228,  234,  228,  235,  236,  237,  238,  239,  240,  241,
      242,  228,  243,  228,  244,  245,  246,  247,  248,  249,

      228,  228,  228,  228,  228,  228,  228,  228,  228,  228,
      250,  228,  251,  228,  252,  253,  254,  255,  256,  257,
      258,  228,  259,  228,  260,  261,  262,  263,  264,  228,
      265,  266,  267,  268,  269,  270,  228,  228,  271,  272,
      273,  228,  274,  275,  276,  277,  275,  275,  274,  274,
      274,  274,  274,  274,  274,  274,  274,  274,  274,  274,
      274,  274,  274,  274,  274,  274,  274,  274,  274,  274,
      274,  278,  278,  278,  278,  278,  278,  278,  278,  278,
      274,  274,  274,  278,  278,  278,  278,  278,  278,  278,
      278,  278,  278,  278,  278,  278,  278,  278,  278,  278,

      278,  278,  278,  278,  278,  278,  278,  278,  274,  274,
      274,  274,  279,  280,  281,  282,  280,  280,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  279,  279,  279,  279,  279,  279,  279,  279,  279,
      279,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      279,  279,  279,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,  279,  279,
      279,  279,  105,  290,  291,  290,  290,  290,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,

      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      105,  105,  105,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  293,  105,
      105,  105,  105,  294,  295,  294,  294,  294,  105,  105,
      105,  105,  105,  105,  105,  296,  105,  105,  105,  105,
      105,  105,  105,  105, 1745,  105,  105,  105,  105,  298,
      105,  105,  294,  295,  294,  294,  294,  105,  105,  105,
      105,  105,  105,  105,  296,  105,  105,  105,  105,  105,

      105,  105,  105, 1746,  105,  105,  105,  105,  298,  105,
      308,  309,  310,  311,  309,  309,  308,  308,  308,  308,
      308,  308,  308,  312,  308,  308,  308,  308,  308,  308,
      308,  308,  308,  308,  308,  308,  308,  308,  308,  313,
      313,  313,  313,  313,  313,  313,  313,  313,  308,  308,
      308,  313,  313,  313,  313,  313,  313,  313,  313,  313,
      313,  313,  313,  313,  313,  313,  313,  313,  313,  313,
      313,  313,  313,  313,  313,  313,  308,  308,  308,  308,
      314,  315,  316,  317,  315,  315,  314,  318,  314,  314,
      314,  314,  319,  314,  314,  314,  314,  314,  314,  314,

      320,  314,  314,  314,  314,  321,  322,  314,  314,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  314,  314,
      314,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  314,  314,  314,  314,
      326,  327,  328,  329,  327,  327,  326,  326,  326,  326,
      326,  326,  326,  330,  326,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  326,  326,  326,  331,
      331,  331,  331,  331,  331,  331,  331,  331,  326,  326,
      326,  331,  331,  331,  331,  331,  331,  331,  331,  331,

      331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
      331,  331,  331,  331,  331,  331,  326,  326,  326,  326,
      339,  340,  341,  339,  340,  340,  339,  340,  341,  339,
      340,  340,  360,  360,  360,  360,  360,  574,  343,  384,
      377,  557,  566,  567,  343,  377,  588,  377, 1747,  385,
      575,  472,  377,  377,  377,  558,  386,  411,  377,  377,
      589,  377,  387,  377,  600,  377,  377,  377,  388,  377,
      377,  377,  389,  361,  377,  472,  377,  390,  601,  478,
      377,  377,  377,  395,  479,  377,  664,  377,  396,  339,
      665,  397,  377,  377, 1748,  339,  375,  375,  375,  375,

      375,  614,  377,  615,  644,  643,  377,  377,  376,  377,
      404,  391,  813,  392,  377,  377,  631,  378,  377,  377,
      401,  393,  632,  394,  402,  377,  707,  377,  602,  377,
      377,  377,  377,  403,  590,  603,  472,  377,  377,  420,
      377,  421,  379,  591,  604,  377,  708,  380,  592,  381,
      377,  472,  377,  405,  382,  383,  406,  377,  377,  377,
      472,  631,  667,  668,  377,  472,  377,  632,  408,  472,
      407,  377,  377,  377,  803,  409,  815,  412,  377,  413,
      377,  414,  377,  584,  410,  377,  377,  377,  585,  377,
      415,  586,  859,  587,  377,  377,  377,  444,  377,  576,

      416,  473,  861,  577,  417,  631,  474,  475,  578,  377,
      798,  632,  418,  439,  439,  439,  439,  439, 1433,  419,
      439,  439,  439,  439,  439,  439,  439,  439,  439,  439,
      799,  445,  455,  455,  455,  455,  455,  446,  633,  472,
      705,  447,  705,  448,  634,  706,  449,  460,  460,  460,
      460,  460,  472,  457,  460,  460,  460,  460,  460,  460,
      460,  460,  460,  460,  464,  464,  464,  464,  464,  480,
      481,  472,  682,  568,  482,  486,  683,  472,  569,  617,
      570,  483,  618,  619,  487,  571,  572,  364,  620,  488,
      489,  498, 1755,  499,  508,  508,  508,  508,  508,  703,

      631,  501,  610,  611,  502,  465,  632, 1763,  612,  500,
      503,  613,  703,  504,  508,  508,  508,  508,  508,  508,
      508,  508,  508,  508,  514,  514,  514,  514,  514,  514,
      514,  514,  514,  514,  514,  514,  514,  514,  514,  523,
      523,  523,  523,  523,  523,  523,  523,  523,  523,  523,
      523,  523,  523,  523,  533,  533,  533,  533,  533,  533,
      533,  533,  533,  533,  533,  533,  533,  533,  533,  546,
      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
      546,  546,  546,  546,  548,  548,  548,  548,  548,  548,
      548,  548,  548,  548,  548,  548,  548,  548,  548,  559,

      559,  559,  559,  559,  579,  580,  581,  593,  606,  582,
      607,  594,  608,  685,  686,  352,  583,  356,  357,  353,
      595,  793, 1764,  781,  794,  596,  609,  622,  622,  622,
      622,  622,  622,  622,  622,  622,  622,  791,  519,  520,
      560,  622,  622,  622,  622,  622,  625,  625,  625,  625,
      625,  625,  625,  625,  625,  625,  625,  625,  625,  625,
      625,  626,  626,  626,  626,  626,  782,  647,  627,  635,
      635,  635,  635,  635,  635,  635,  635,  635,  635,  472,
      792,  511,  629,  637,  637,  637,  637,  637,  637,  637,
      637,  637,  637,  377,  377,  638,  724,  528,  529, 1449,

      638,  648,  655,  655,  655,  655,  655,  649,  872,  725,
      814,  650, 1779,  651,  377,  377,  652,  655,  655,  655,
      655,  655,  655,  655,  655,  655,  655,  659,  659,  659,
      659,  659,  659,  659,  659,  659,  659,  659,  659,  659,
      659,  659,  669,  669,  669,  669,  669,  669,  669,  669,
      669,  669,  669,  669,  669,  669,  669,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  348,  349,  349,  349,  348,  349,  349,  349,
      349,  349,  349,  350,  349,  349,  349,  688,  694,  360,
      360,  360,  360,  360,  704,  739,  367,  377,  368,  371,

      371,  371,  371,  371,  968,  728,  703,  710,  377,  969,
      370,  373,  375,  375,  375,  375,  375,  727,  377,  703,
      729,  689,  695,  370,  376,  472,  377,  690,  696,  377,
      361,  691,  697,  692,  698,  377,  693,  699,  375,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  516,  817,
      376,  737,  517,  525,  377,  376,  377,  526,  710,  378,
      726,  771,  818,  377,  378,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  377,  730,  376,  377,  377,
      377,  731,  376,  377,  377,  736,  378,  377,  377,  738,
      743,  378,  746,  732,  721,  721,  721,  721,  721,  377,

      377,  377,  712, 1783,  377,  377,  722,  752,  377,  377,
      377,  377,  954,  714,  955,  378,  713, 1012,  762,  740,
     1013,  733,  733,  733,  733,  733,  377,  747,  538,  539,
      956,  377,  377,  734,  715,  716,  717,  717,  717,  717,
      717,  716,  716,  716,  716,  716,  716,  716,  718,  716,
      716,  716,  716,  723,  719,  716,  377,  720,  716,  716,
      716,  716,  716,  716,  735,  377,  748,  377,  377,  377,
      753,  749,  472,  716,  716,  716,  741,  377,  377,  757,
      472,  750,  742,  751,  472,  377,  377,  769,  377,  377,
      377,  377,  754,  744,  744,  744,  744,  744,  377,  377,

      760,  716,  716,  716,  716,  745,  377,  755,  377,  761,
      857, 1001,  377,  856,  378,  377,  377, 1002,  819,  377,
      758,  377,  759,  377,  763,  768,  764,  377,  377,  377,
      377,  766,  765,  767,  377,  377,  377,  377,  377,  770,
      772,  377,  377,  377,  377,  773,  775,  774,  377,  377,
      377,  377,  555,  556,  776,  377,  377,  779,  780,  377,
      777,  535,  377, 1010,  377,  536,  778,  472, 1785,  377,
      472,  377,  439,  439,  439,  439,  439,  455,  455,  455,
      455,  455,  455,  455,  455,  455,  455,  460,  460,  460,
      460,  460,  464,  464,  464,  464,  464,  472,  831,  472,

      472,  472,  472,  457,  472,  858, 1011,  472,  472,  508,
      508,  508,  508,  508,  514,  514,  514,  514,  514,  816,
      860,  984,  551,  840,  847,  851,  552,  472,  862,  985,
      472,  866,  869,  465,  804,  804,  804,  804,  804,  804,
      804,  804,  804,  804,  804,  804,  804,  804,  804,  804,
      804,  804,  823,  805,  804,  867,  806,  804,  804,  804,
      804,  804,  804,  472,  511,  931,  965,  966,  824,  971,
      990,  972,  804,  804,  804,  523,  523,  523,  523,  523,
      533,  533,  533,  533,  533,  932,  991,  781,  871, 1153,
      986,  868,  546,  546,  546,  546,  546,  987,  644,  643,

      804,  804,  804,  804,  807,  808,  808,  808,  808,  808,
      807,  807,  807,  807,  807,  807,  807,  809,  807,  807,
      807,  807, 1051,  810,  807, 1052,  811,  807,  807,  807,
      807,  807,  807,  548,  548,  548,  548,  548,  667,  668,
      685,  686,  807,  807,  807,  936,  936,  936,  936,  936,
      631,  559,  559,  559,  559,  559,  632,  937,  622,  622,
      622,  622,  622, 1790,  812,  625,  625,  625,  625,  625,
      807,  807,  807,  807,  820,  820,  820,  820,  820,  820,
      820,  820,  820,  820,  820,  820,  820,  820,  820,  820,
      820,  820,  560,  821,  820, 1049,  822,  820,  820,  820,

      820,  820,  820,  941,  944,  633,  942,  710,  472,  945,
      631,  634,  820,  820,  820,  664,  632,  633,  943,  665,
     1808,  946, 1056,  632,  947,  948,  948,  948,  948,  948,
      626,  626,  626,  626,  626,  682, 1204,  949, 1050,  683,
      820,  820,  820,  820,  825,  825,  825,  825,  825,  825,
      825,  825,  825,  825,  825,  825,  825,  825,  825,  825,
      825,  825, 1216,  826,  825, 1057,  827,  825,  825,  825,
      825,  825,  825,  626,  626,  626,  626,  626, 1058,  377,
      627, 1059,  825,  825,  825,  635,  635,  635,  635,  635,
     1126,  791, 1827, 1161,  629,  637,  637,  637,  637,  637,

      655,  655,  655,  655,  655, 1217, 1218,  638,  472, 1219,
      825,  825,  825,  825,  828,  828,  828,  828,  828,  828,
      828,  828,  828,  828,  828,  828,  828,  828,  828,  828,
      828,  828, 1189,  829,  828,  472,  830,  828,  828,  828,
      828,  828,  828,  659,  659,  659,  659,  659,  472,  472,
      429,  472,  828,  828,  828,  669,  669,  669,  669,  669,
      673,  673,  673,  673,  673,  705,  377,  705,  377,  710,
      706, 1180, 1191, 1192, 1136, 1195, 1805,  377, 1138,  377,
      828,  828,  828,  828,  832,  832,  832,  832,  832,  832,
      832,  832,  832,  832,  832,  832,  832,  832,  832,  832,

      832,  832,  471,  833,  832,  471,  834,  832,  832,  832,
      832,  832,  832,  471,  471,  471,  471,  471,  471,  471,
      471,  471,  832,  832,  832,  471,  471,  471,  471,  471,
      471,  471,  471,  471,  471,  471,  471,  471,  471,  471,
      471,  471,  471,  835,  836,  471,  471,  471,  471,  471,
      832,  832,  832,  832,  837,  837,  837,  837,  837,  837,
      837,  837,  837,  837,  837,  837,  837,  837,  837,  837,
      837,  837,  704,  838,  837,  472,  839,  837,  837,  837,
      837,  837,  837,  472,  703,  377,  375,  375,  375,  375,
      375,  472,  837,  837,  837, 1140,  377,  703,  376,  375,

      375,  375,  375,  375,  744,  744,  744,  744,  744, 1225,
      637,  376, 1226, 1190, 1183, 1200,  745, 1835, 1361,  472,
      837,  837,  837,  837,  841,  841,  841,  841,  841,  841,
      841,  841,  841,  841,  841,  841,  841,  841,  841,  841,
      841,  841,  472,  842,  841,  472,  843,  841,  841,  841,
      841,  841,  841,  375,  375,  375,  375,  375, 1130, 1193,
      472,  472,  841,  841,  841,  376,  377,  375,  375,  375,
      375,  375, 1124,  377,  378, 1137,  377,  377,  377,  376,
     1194, 1144, 1202, 1207,  377, 1201, 1836,  377,  378,  377,
      841,  841,  841,  841,  844,  844,  844,  844,  844,  844,

      844,  844,  844,  844,  844,  844,  844,  844,  844,  844,
      844,  844, 1071,  845,  844,  472,  846,  844,  844,  844,
      844,  844,  844, 1111, 1111, 1111, 1111, 1111,  444,  472,
     1131,  472,  844,  844,  844, 1112,  377,  375,  375,  375,
      375,  375, 1127, 1146,  378, 1561,  377,  377,  377,  376,
     1223, 1209, 1142, 1205, 1147, 1426, 1427,  377,  378,  377,
      844,  844,  844,  844,  848,  848,  848,  848,  848,  848,
      848,  848,  848,  848,  848,  848,  848,  848,  848,  848,
      848,  848, 1077,  849,  848,  472,  850,  848,  848,  848,
      848,  848,  848, 1224,  472,  375,  375,  375,  375,  375,

     1132,  472,  848,  848,  848, 1133,  377,  376,  375,  375,
      375,  375,  375,  377, 1150,  377,  378,  377, 1210, 1324,
      376, 1010, 1206, 1362,  377, 1188,  377, 1230, 1325,  378,
      848,  848,  848,  848,  852,  852,  852,  852,  852,  852,
      852,  852,  852,  852,  852,  852,  852,  852,  852,  852,
      852,  852, 1090,  853,  852, 1125,  854,  852,  852,  852,
      852,  852,  852,  472, 1148,  472,  377, 1099,  511, 1837,
     1231, 1134,  852,  852,  852,  377, 1128,  377, 1135,  855,
     1129,  377,  377, 1139,  377, 1261,  377,  377, 1211,  472,
      472, 1262,  377,  377, 1196,  377, 1523,  472,  377, 1214,

      852,  852,  852,  852,  863,  863,  863,  863,  863,  863,
      863,  863,  863,  863,  863,  863,  863,  863,  863,  863,
      863,  863, 1208,  864,  863, 1212,  865,  863,  863,  863,
      863,  863,  863,  511,  873,  879, 1203,  375,  375,  375,
      375,  375,  863,  863,  863, 1297, 1141, 1143,  885,  376,
      377,  377, 1145, 1237,  472,  891,  377, 1215,  378, 1298,
     1149,  377,  377, 1232,  472,  377, 1233,  377,  874,  880,
      863,  863,  863,  863,  875,  881,  377,  371,  876,  882,
      877,  883,  886,  878,  884, 1411, 1568, 1239,  887,  892,
     1240, 1091,  888, 1526,  889,  893, 1238,  890, 1545,  894,

     1246,  895,  899, 1247,  896,  897,  897,  897,  897,  897,
      897,  897,  897,  897,  897,  897,  897,  897,  897,  897,
      897,  897,  897, 1253,  898,  897, 1254,  897,  897,  897,
      897,  897,  897,  897, 1151,  905,  900, 1152, 1049,  377,
      351,  377,  901,  897,  897,  897,  902,  631,  903,  916,
      377,  904,  377,  632, 1527, 1528,  922, 1019,  455,  455,
      455,  455,  455,  472,  375,  375,  375,  375,  375,  906,
     1025,  897,  897,  897,  897,  907,  376, 1036, 1042,  908,
     1056,  909,  355,  917,  910,  378, 1530,  472, 1423,  918,
      923, 1020, 1424,  919, 1539,  920,  924, 1021,  921,  472,

      925, 1022,  926, 1023, 1026,  927, 1024, 1426, 1427, 1092,
     1027, 1037, 1043,  472, 1028, 1531, 1029, 1038, 1044, 1030,
     1851, 1039, 1045, 1040, 1046,  472, 1041, 1047, 1072, 1073,
     1073, 1073, 1073, 1073, 1072, 1072, 1072, 1072, 1072, 1072,
     1072, 1074, 1072, 1072, 1072, 1072, 1244, 1075, 1072, 1181,
     1076, 1072, 1072, 1072, 1072, 1072, 1072, 1118, 1118, 1118,
     1118, 1118, 1266, 1182, 1853, 1267, 1072, 1072, 1072, 1119,
      375,  375,  375,  375,  375, 1524, 1251, 1273,  378, 1525,
     1274, 1372,  376, 1379, 1373, 1389, 1380,  472, 1390, 1245,
     1264,  378, 1271,  472, 1072, 1072, 1072, 1072, 1078, 1079,

     1079, 1079, 1079, 1079, 1078, 1078, 1078, 1078, 1078, 1078,
     1078, 1080, 1078, 1078, 1078, 1078, 1098, 1081, 1078, 1252,
     1082, 1078, 1078, 1078, 1078, 1078, 1078,  375,  375,  375,
      375,  375, 1370, 1265, 1377, 1272, 1078, 1078, 1078,  376,
      375,  375,  375,  375,  375, 1216, 1396,  515,  378, 1397,
      472, 1387,  376,  626,  626,  626,  626,  626, 1394,  472,
      627,  378,  472,  472, 1078, 1078, 1078, 1078,  721,  721,
      721,  721,  721,  472, 1083, 1371,  472, 1378, 1093, 1084,
      722,  375,  375,  375,  375,  375,  375,  375,  375,  375,
      375,  472, 1094,  376, 1388, 1546,  472, 1538,  376, 1551,

     1540, 1395,  378,  472,  472, 1544,  472,  378,  455,  455,
      455,  455,  455, 1085,  472, 1223, 1550,  518,  515, 1086,
     1087,  375,  375,  375,  375,  375, 1088, 1556, 1557, 1096,
      511, 1220, 1095,  376,  733,  733,  733,  733,  733, 1558,
     1423,  472,  378, 1559, 1424, 1560,  734,  375,  375,  375,
      375,  375,  472,  375,  375,  375,  375,  375,  511,  376,
     1230, 1573,  524, 1524, 1097,  376,  472, 1525,  378,  375,
      375,  375,  375,  375,  378, 1237, 1571,  527, 1100, 1567,
     1858,  376, 1572, 1101,  472,  375,  375,  375,  375,  375,
      378, 1102,  375,  375,  375,  375,  375,  376,  375,  375,

      375,  375,  375, 1862,  376, 1105,  378, 1104, 1749, 1244,
      376,  534, 1251,  378,  537, 1264, 1750,  550, 1106,  378,
      375,  375,  375,  375,  375,  375,  375,  375,  375,  375,
     1220, 1271,  376,  554, 1370, 1108,  663,  376, 1377, 1220,
      666,  378, 1107, 1387,  472,  681,  378,  375,  375,  375,
      375,  375, 1394, 1765,  684, 1766, 1109, 1767, 1733,  376,
      375,  375,  375,  375,  375, 1768, 1527, 1528,  378,  472,
     1175, 1110,  376,  472,  472,  518, 1855, 1113, 1850, 1227,
     1227,  378,  375,  375,  375,  375,  375,  375,  375,  375,
      375,  375, 1734, 1856,  376, 1854,  472,  472, 1735,  376,

      472, 1114, 1736,  378, 1737, 1857, 1227, 1738,  378,  375,
      375,  375,  375,  375, 1115,  375,  375,  375,  375,  375,
      472,  376,  375,  375,  375,  375,  375,  376, 1860, 1116,
      378,  472, 1861,  472,  376, 1859,  378,  511, 1175, 1175,
     1175, 1175, 1175,  378, 1176,  472, 1117,  524,  472, 1177,
     1178, 1234, 1868, 1870, 1120, 1278, 1278, 1278, 1278, 1278,
     1121, 1282, 1282, 1282, 1282, 1282, 1234, 1279, 1867, 1882,
     1869, 1122, 1871, 1283,  626,  626,  626,  626,  626, 1234,
      527,  627, 1123, 1172, 1172, 1172, 1172, 1172, 1172, 1172,
     1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172, 1172,

     1172,  471, 1173, 1172,  471, 1174, 1172, 1172, 1172, 1172,
     1172, 1172,  471,  471,  471,  471,  471,  471,  471,  471,
      471, 1172, 1172, 1172,  471,  471,  471,  471,  471,  471,
      471,  471,  471,  471,  471,  471,  471,  471,  471,  471,
      471,  471,  471,  471,  471,  471,  471,  471,  471, 1172,
     1172, 1172, 1172, 1184, 1184, 1184, 1184, 1184, 1184, 1184,
     1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184,
     1184, 1241, 1185, 1184, 1241, 1186, 1184, 1184, 1184, 1184,
     1184, 1184, 1286, 1286, 1286, 1286, 1286, 1241,  511,  534,
     1248, 1184, 1184, 1184, 1287, 1318, 1318, 1318, 1318, 1318,

     1328, 1328, 1328, 1328, 1328, 1248, 1248, 1319, 1883,  537,
     1255, 1255, 1329, 1255, 1884, 1885, 1886, 1887, 1888, 1184,
     1184, 1184, 1184, 1197, 1197, 1197, 1197, 1197, 1197, 1197,
     1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197, 1197,
     1197, 1889, 1198, 1197,  550, 1199, 1197, 1197, 1197, 1197,
     1197, 1197, 1289, 1289, 1289, 1289, 1289, 1268, 1268, 1268,
      554, 1197, 1197, 1197, 1290,  948,  948,  948,  948,  948,
      375,  375,  375,  375,  375, 1275, 1275,  949, 1275, 1891,
     1617, 1893,  376, 1895,  375,  375,  375,  375,  375, 1197,
     1197, 1197, 1197, 1621, 1896, 1898,  376, 1291, 1863, 1863,

     1863, 1863, 1863, 1292, 1293,  378, 1899, 1900, 1901, 1307,
     1294, 1864, 1902, 1903, 1308, 1413, 1413, 1413, 1413, 1413,
     1628, 1905, 1309, 1910, 1912, 1913, 1914, 1414,  375,  375,
      375,  375,  375,  375,  375,  375,  375,  375, 1289, 1915,
      376, 1412, 1916, 1917, 1918,  376, 1904, 1919, 1920,  378,
     1921, 1922, 1647, 1928,  378, 1418, 1418, 1418, 1418, 1418,
      375,  375,  375,  375,  375,  948, 1923, 1419, 1924, 1929,
     1930, 1931,  376, 1925, 1935, 1936, 1937, 1415, 1938, 1939,
     1941,  378,  375,  375,  375,  375,  375, 1942, 1944, 1945,
     1946, 1417, 1947, 1948,  376,  375,  375,  375,  375,  375,

     1949, 1952, 1953,  378, 1954, 1955, 1956,  376, 1436, 1436,
     1436, 1436, 1436, 1957, 1959, 1960,  378, 1420, 1966, 1969,
     1437,  375,  375,  375,  375,  375, 1971, 1978, 1979,  378,
      647, 1434,  663,  376,  375,  375,  375,  375,  375, 1374,
     1374, 1374,  378,  666, 1381, 1381,  376,  375,  375,  375,
      375,  375, 1435, 1381, 1981,  378,  681, 1391, 1391,  376,
      375,  375,  375,  375,  375, 1438, 1391,  684,  378, 1398,
     1398, 1398,  376,  375,  375,  375,  375,  375, 1983, 1439,
     1984,  378,  710, 1985, 1728,  376, 1989, 1732, 1440,  375,
      375,  375,  375,  375,  378,  375,  375,  375,  375,  375,

     1986,  376, 1996, 1994, 1996, 1441, 1995,  376, 1987, 1992,
      378,  375,  375,  375,  375,  375,  378,  375,  375,  375,
      375,  375, 1997,  376, 1877, 1877, 1877, 1877, 1877,  376,
     1442, 1998,  378, 1999, 1443, 2003, 1444, 1878,  378,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  375, 1990,
     2001,  376, 1993, 2002, 2003, 2004,  376, 1991, 2005, 2007,
      378, 2008, 1451, 1450, 2009,  378,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375, 2000, 1750,  376, 2017,
     2018, 2020,  710,  376, 2028, 2029, 2030,  378, 2031, 2021,
     1768, 2038,  378, 2041, 1779, 2048, 1452,  375,  375,  375,

      375,  375, 1111, 1111, 1111, 1111, 1111, 2043, 1453,  376,
     1457, 2050, 1785, 2066, 1112, 2044, 2051,  710,  378, 1471,
     1471, 1471, 1471, 1471, 2052, 1454, 2086,  710, 2093, 2106,
     1455, 1472, 2107, 1118, 1118, 1118, 1118, 1118, 2104, 2108,
      378, 1473, 2105, 2110,  710, 1119, 2114, 2115, 2116, 2121,
     2121, 1456, 1459, 1460, 1460, 1460, 1460, 1460, 1459, 1459,
     1459, 1459, 1459, 1459, 1459, 1461, 1459, 1459, 1459, 1459,
     2122, 1462, 1459, 2117, 1463, 1459, 1459, 1459, 1459, 1459,
     1459,  375,  375,  375,  375,  375, 2119, 2123, 2128, 2120,
     1459, 1459, 1459,  376, 2128, 2129, 1479, 1479, 1479, 1479,

     1479, 2130,  378,  375,  375,  375,  375,  375, 1480, 1850,
      375,  375,  375,  375,  375,  376, 2118,  378, 1459, 1459,
     1459, 1459,  376, 2132,  378, 1278, 1278, 1278, 1278, 1278,
      472,  378, 2126, 2124, 2134, 2127,  472, 1279, 1464, 1465,
     1466, 1466, 1466, 1466, 1466, 1465, 1465, 1465, 1465, 1465,
     1465, 1465, 1467, 1465, 1465, 1465, 1465,  472, 1468, 1465,
     1476, 1469, 1465, 1465, 1465, 1465, 1465, 1465, 2137, 2131,
     1470,  375,  375,  375,  375,  375, 2125, 1465, 1465, 1465,
      472,  472,  472,  376, 1175, 1175, 1175, 1175, 1175, 2147,
     1176, 2157,  378,  472, 2139, 1177, 1178,  375,  375,  375,

      375,  375,  472,  472,  472, 1465, 1465, 1465, 1465,  376,
     2135,  375,  375,  375,  375,  375, 2160, 2145,  378, 2136,
     2138,  511, 1475,  376,  375,  375,  375,  375,  375, 2161,
      472, 2152,  378,  472,  472, 2162,  376,  375,  375,  375,
      375,  375, 2153, 1477, 2159,  378,  472, 2163,  511,  376,
     2143,  375,  375,  375,  375,  375, 2144, 2164,  378, 2158,
     2165, 1891, 1478,  376,  375,  375,  375,  375,  375, 1278,
     2148, 2167,  378, 1895, 1614, 2169,  376, 2166, 1898, 2171,
     2173, 1482, 2168, 2174, 1618,  378, 2175,  375,  375,  375,
      375,  375, 2170, 1904, 1483, 1910, 2177, 2178, 1484,  376,

     2180,  375,  375,  375,  375,  375, 2181, 2183,  378, 2184,
     2185, 2186, 2187,  376, 2188, 2189, 2190, 1485, 2191, 2192,
     2193, 2194,  378,  375,  375,  375,  375,  375,  375,  375,
      375,  375,  375, 1739, 2195,  376, 1925, 2198, 2201, 2203,
      376, 2205, 1935, 1318,  378, 1486, 1487, 2207, 2208,  378,
     2209, 2206, 2210, 2211,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  375, 2213, 2214,  376, 1740, 1488, 1944,
     1328,  376, 2217, 1741, 2219,  378, 2222, 1742, 2215, 1743,
     1497, 2223, 1744, 2225, 2226, 2228, 2229, 1489, 1490, 1491,
     1491, 1491, 1491, 1491, 1490, 1490, 1490, 1490, 1490, 1490,

     1490, 1492, 1490, 1490, 1490, 1490, 1495, 1493, 1490, 2233,
     1494, 1490, 1490, 1490, 1490, 1490, 1490,  375,  375,  375,
      375,  375, 2234, 2236, 1978, 2241, 1490, 1490, 1490,  376,
      375,  375,  375,  375,  375, 2239, 2242, 2243,  378, 2240,
     2245, 2246,  376, 2247, 2248, 2249, 1499, 1499, 1499, 1499,
     1499,  378, 2250, 1987, 1490, 1490, 1490, 1490, 1500, 2253,
     1991, 1992, 1496, 1422, 1996, 2256, 1422,  378, 1501, 1501,
     1501, 1501, 1501, 2257, 2258, 1498, 1999, 2003, 1425, 2260,
     1502,  375,  375,  375,  375,  375, 1425, 2261, 2262,  378,
     2263, 2265, 1089,  376,  375,  375,  375,  375,  375,  710,

     2267, 2268,  378, 2020, 2269, 2281,  376,  375,  375,  375,
      375,  375, 2270, 2282, 2283,  378, 2284, 1103, 2290,  376,
      375,  375,  375,  375,  375, 2292, 2298, 2300,  378, 2044,
     2305, 2307,  376, 1503,  375,  375,  375,  375,  375, 1504,
     2050,  378, 2308, 2052,  710,  710,  376, 2313, 2314,  710,
     2309,  710, 1505, 2086,  710,  378,  375,  375,  375,  375,
      375, 2318,  377, 2332, 1507, 1506, 2324, 2325,  376,  375,
      375,  375,  375,  375,  377, 2326,  377,  378, 2329, 2334,
      377,  376,  375,  375,  375,  375,  375,  710,  710,  377,
      378, 1508, 2327,  377,  376,  375,  375,  375,  375,  375,

     1509,  377, 2335,  378, 2336,  377, 2330,  376, 1513, 1513,
     1513, 1513, 1513,  377, 1510, 2339,  378, 2331, 2340, 2328,
     1514,  375,  375,  375,  375,  375, 2110,  377,  377,  378,
     1511,  377,  377,  376,  375,  375,  375,  375,  375, 2337,
     2346, 2348,  378, 2341, 2349, 2117,  376, 1523, 2338, 1512,
     2121, 2342, 2351, 1523, 2352,  378, 1552, 1552, 1552, 1552,
     1552, 2353, 1515, 1554, 1554, 1554, 1554, 1554, 1553, 1535,
     1535, 1535, 1535, 1535, 2124, 1555, 1526,  472, 2128, 1516,
     2355, 1536, 1526, 2356,  472, 2357, 2134,  472,  472,  472,
      472, 1517, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,

     1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532, 1532,
     1537, 1533, 1532, 2361, 1534, 1532, 1532, 1532, 1532, 1532,
     1532, 1562, 1562, 1562, 1562, 1562, 2358,  472,  472, 2371,
     1532, 1532, 1532, 1563, 1569, 1569, 1569, 1569, 1569, 1535,
     2373,  472,  472, 2379, 2380,  472, 1570, 2360, 2382, 2389,
      472, 2367, 2369, 2390, 2391,  472, 2392, 2166, 1532, 1532,
     1532, 1532, 1541, 1541, 1541, 1541, 1541, 1541, 1541, 1541,
     1541, 1541, 1541, 1541, 1541, 1541, 1541, 1541, 1541, 1541,
     2368, 1542, 1541, 2364, 1543, 1541, 1541, 1541, 1541, 1541,
     1541, 1614, 1614, 1614, 1614, 1614,  472,  472,  472,  472,

     1541, 1541, 1541, 1615, 1618, 1618, 1618, 1618, 1618, 1631,
     1631, 1631, 1631, 1631, 2393, 2168, 1619, 2394, 2370, 2376,
     2170, 1632, 2375, 2377, 2395, 2374, 2396, 2398, 1541, 1541,
     1541, 1541, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
     2399, 1548, 1547, 1616, 1549, 1547, 1547, 1547, 1547, 1547,
     1547, 1318, 1318, 1318, 1318, 1318, 1620, 2400, 2180, 1655,
     1547, 1547, 1547, 1319, 1664, 1664, 1664, 1664, 1664, 1633,
     1633, 1633, 1633, 1633, 1906, 2183, 1665, 1633, 2404, 2405,
     2409, 1634, 2401, 2410, 2411, 2403, 2412, 2413, 1547, 1547,

     1547, 1547, 1564, 1564, 1564, 1564, 1564, 1564, 1564, 1564,
     1564, 1564, 1564, 1564, 1564, 1564, 1564, 1564, 1564, 1564,
     1635, 1565, 1564, 2414, 1566, 1564, 1564, 1564, 1564, 1564,
     1564, 1289, 1289, 1289, 1289, 1289, 2415, 2416, 2417, 2418,
     1564, 1564, 1564, 1290, 1328, 1328, 1328, 1328, 1328, 2420,
     2422, 2424, 1666, 2425, 2427, 2206, 1329, 2428, 2429, 2430,
     1696, 1696, 1696, 1696, 1696, 2431, 2432, 2213, 1564, 1564,
     1564, 1564, 1697, 2434, 2215, 2435, 1291, 1863, 1863, 1863,
     1863, 1863, 1292, 1293,  375,  375,  375,  375,  375, 1294,
     1864, 1772, 1772, 1772, 1772, 1772,  376,  375,  375,  375,

      375,  375, 1667, 1773, 2436, 1756, 2437, 2439, 2440,  376,
     2441, 2442,  378, 2443, 1698, 1721, 1722, 1722, 1722, 1722,
     1722, 1721, 1721, 1721, 1721, 1721, 1721, 1721, 1723, 1721,
     1721, 1721, 1721,  377, 1724, 1721,  377, 1725, 1721, 1721,
     1721, 1721, 1721, 1721,  377,  377,  377,  377,  377,  377,
      377,  377,  377, 1721, 1721, 1721,  377,  377,  377,  377,
      377,  377,  377,  377,  377,  377,  377,  377,  377,  377,
      377,  377,  377,  377,  377,  377,  377,  377,  377,  377,
      377, 1721, 1721, 1721, 1721, 1413, 1413, 1413, 1413, 1413,
      375,  375,  375,  375,  375, 1838, 2444, 1414, 2446, 2447,

     1664, 2449,  376, 1418, 1418, 1418, 1418, 1418, 2433, 2450,
     2451,  378, 2453, 2454, 2455, 1419,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375, 2458, 2456,  376, 1839,
     2459, 2245, 1972,  376, 2463, 1840, 2457,  378, 2464, 1841,
     2460, 1842,  378, 1844, 1843, 2465, 2466, 1415, 1416, 1729,
     1436, 1436, 1436, 1436, 1436, 1421, 1422, 1996, 1751, 1996,
     1996, 1425, 1437, 2003, 2003, 1420, 1752,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  375, 1845, 2003,  376,
     2473, 2474, 2270, 1846,  376, 2485, 2495, 1847,  378, 1848,
     2496, 2497, 1849,  378,  375,  375,  375,  375,  375, 1753,

      375,  375,  375,  375,  375, 2498,  376, 2503, 1754, 2504,
     2506, 2292,  376,  710, 2509,  378, 2300, 1458, 2513, 2507,
     1757,  378,  375,  375,  375,  375,  375, 2508, 2514, 1758,
     2516, 2522, 2309, 2510,  376, 1474,  375,  375,  375,  375,
      375, 2511, 2525,  378, 2527, 2528, 2326, 1759,  376, 1760,
      375,  375,  375,  375,  375, 2334, 2552,  378, 2553, 2554,
     2550, 2555,  376,  375,  375,  375,  375,  375, 2551, 2556,
     2557,  378, 2342, 2564, 2565,  376, 2567, 2568, 2569, 1761,
     1523, 2121, 2121, 2121,  378, 1526, 2128, 2128, 2128, 1762,
      375,  375,  375,  375,  375, 1769,  375,  375,  375,  375,

      375, 2360,  376, 1775, 1775, 1775, 1775, 1775,  376,  472,
     2573,  378,  472,  472,  472, 1776, 1770,  378,  375,  375,
      375,  375,  375, 2373,  378,  375,  375,  375,  375,  375,
      376,  472,  472, 2570, 2587, 1771, 2589,  376,  472,  378,
      375,  375,  375,  375,  375,  472,  378, 1774, 2574, 2382,
     2580, 1865,  376,  375,  375,  375,  375,  375,  511, 2582,
     2594,  378, 2586, 2583, 2595,  376,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375, 2585, 1872,  376, 2596,
     1777, 2597, 2584,  376, 2599, 2591, 2601,  378, 2592, 2604,
     2605, 2401,  378, 1471, 1471, 1471, 1471, 1471, 2403, 1780,

     2608, 2610, 2611, 2612, 2613, 1472,  375,  375,  375,  375,
      375, 2615, 1781,  375,  375,  375,  375,  375,  376,  375,
      375,  375,  375,  375, 2616,  376, 2617,  378, 2618, 2619,
     2620,  376, 2420, 1926,  378, 2622, 2624, 2626, 2427, 2628,
      378, 2621, 1782, 2631, 2633,  375,  375,  375,  375,  375,
     1479, 1479, 1479, 1479, 1479, 1932, 1787,  376, 2433, 2634,
     2635, 2636, 1480, 2627, 1786, 2439,  378,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  375, 1950, 2639,  376,
     2641, 2642, 2644, 1788,  376, 2638, 2645, 2647,  378, 2449,
     1789, 2650, 2453,  378,  375,  375,  375,  375,  375,  375,

      375,  375,  375,  375, 1963, 1967,  376, 2653, 2654, 2655,
     2656,  376, 2649, 2652, 2657,  378, 2658, 1792, 2460, 2664,
      378, 2674, 2675, 1755, 2678, 1791,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375, 2676,  710,  376, 2679,
     2680, 2681, 2682,  376, 2669, 2685, 2683,  378, 2684, 2677,
     2686, 1793,  378,  375,  375,  375,  375,  375, 1794, 2687,
      375,  375,  375,  375,  375,  376,  375,  375,  375,  375,
      375, 1795,  376, 2689,  378, 1796, 2702, 2709,  376, 2710,
     2506,  378,  375,  375,  375,  375,  375,  375,  375,  375,
      375,  375, 2508,  710,  376, 2714, 2711, 2511, 2718,  376,

     3663, 2719, 2516,  378, 2712, 1783, 2728, 2527,  378, 1798,
     2720, 1797, 1499, 1499, 1499, 1499, 1499, 2729, 2721,  710,
     1807, 1808, 2760, 2551, 1500, 2730, 3663, 2762, 1799, 1800,
     1801, 1801, 1801, 1801, 1801, 1800, 1800, 1800, 1800, 1800,
     1800, 1800, 1802, 1800, 1800, 1800, 1800, 2763, 1803, 1800,
     2764, 1804, 1800, 1800, 1800, 1800, 1800, 1800,  375,  375,
      375,  375,  375, 2767, 2768, 1827, 2769, 1800, 1800, 1800,
      376, 1501, 1501, 1501, 1501, 1501, 2770,  710, 2771,  378,
     2772, 2773, 2775, 1502, 3663, 2776, 2567,  375,  375,  375,
      375,  375, 2783,  471, 2787, 1800, 1800, 1800, 1800,  376,

     1819, 1819, 1819, 1819, 1819, 2582, 2797, 2589,  378, 2591,
     2777, 1806, 1820,  375,  375,  375,  375,  375, 2778,  471,
     2800,  378, 2791,  471, 2796,  376, 2785, 2154,  471, 2795,
     2802,  511,  471, 1814,  378, 2798, 1503, 1809, 1810, 1810,
     1810, 1810, 1810, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
     1811, 1809, 1809, 1809, 1809, 2799, 1812, 1809, 1816, 1813,
     1809, 1809, 1809, 1809, 1809, 1809,  375,  375,  375,  375,
      375, 2804, 2805, 2808, 2809, 1809, 1809, 1809,  376,  375,
      375,  375,  375,  375, 2811, 2813, 2815,  378, 2816, 2817,
     2821,  376, 2822, 2823, 2621,  375,  375,  375,  375,  375,

      378, 2824, 2624, 1809, 1809, 1809, 1809,  376,  375,  375,
      375,  375,  375, 2199, 2826, 2627,  378, 2827, 2829, 2638,
      376, 2825, 1817,  375,  375,  375,  375,  375, 1815,  378,
     1513, 1513, 1513, 1513, 1513,  376, 1818,  375,  375,  375,
      375,  375, 1514, 2837,  378, 2840, 2647, 2649, 2652,  376,
     2843, 2844,  375,  375,  375,  375,  375, 2230,  378, 1552,
     1552, 1552, 1552, 1552,  376, 2841, 2845, 1821, 2848, 2849,
     2850, 1553, 2851,  378, 1823, 2852, 2853, 2854, 1535, 1535,
     1535, 1535, 1535, 2856, 2859, 1822,  710, 2861, 1824, 1825,
     1536, 2862, 1826, 2860, 2863, 2864, 2867, 1828, 1829, 1830,

     1830, 1830, 1830, 1830, 1829, 1829, 1829, 1829, 1829, 1829,
     1829, 1831, 1829, 1829, 1829, 1829, 1834, 1832, 1829, 1852,
     1833, 1829, 1829, 1829, 1829, 1829, 1829, 1554, 1554, 1554,
     1554, 1554, 2865, 2868, 2866, 2869, 1829, 1829, 1829, 1555,
     1865, 1865, 1865, 1865, 1865, 1562, 1562, 1562, 1562, 1562,
     2870, 2871, 1866, 2872, 2873, 2874, 2875, 1563, 2689, 2882,
     2709,  472, 2890, 2712, 1829, 1829, 1829, 1829, 1872, 1872,
     1872, 1872, 1872, 1569, 1569, 1569, 1569, 1569, 2876, 2888,
     1873,  710, 2038, 2041, 2895, 1570, 2877, 2889, 3663,  472,
     1874, 1874, 1874, 1874, 1874, 1874, 1874, 1874, 1874, 1874,

     1874, 1874, 1874, 1874, 1874, 1874, 1874, 1874, 2896, 1875,
     1874, 2721, 1876, 1874, 1874, 1874, 1874, 1874, 1874, 1614,
     1614, 1614, 1614, 1614, 2898, 2730, 2907, 2910, 1874, 1874,
     1874, 1615, 1618, 1618, 1618, 1618, 1618, 1633, 1633, 1633,
     1633, 1633, 2914, 2093, 1619, 2915, 2916, 2917,  710, 1634,
     2704, 2704, 2704, 2704, 2704, 2894, 1874, 1874, 1874, 1874,
     1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879,
     1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1911, 1880,
     1879, 1616, 1881, 1879, 1879, 1879, 1879, 1879, 1879, 1906,
     1906, 1906, 1906, 1906, 1620, 2919, 2920, 2921, 1879, 1879,

     1879, 1907, 1926, 1926, 1926, 1926, 1926, 1932, 1932, 1932,
     1932, 1932, 2922, 2923, 1927, 2707, 2926, 2927,  710, 1933,
     1664, 1664, 1664, 1664, 1664, 3663, 1879, 1879, 1879, 1879,
     2775, 2930, 1665, 1950, 1950, 1950, 1950, 1950, 1908, 1963,
     1963, 1963, 1963, 1963, 2778, 1951, 2932, 1909, 2934,  472,
      710, 1964, 1967, 1967, 1967, 1967, 1967, 3663, 1972, 1972,
     1972, 1972, 1972, 2937, 1968, 2939,  472,  472, 2943, 1940,
     1973,  375,  375,  375,  375,  375,  375,  375,  375,  375,
      375, 2798, 2935,  376, 2945,  472, 2911,  710,  376,  375,
      375,  375,  375,  375, 2901, 2912, 2940,  378, 2802, 2924,

      472,  376, 1974,  375,  375,  375,  375,  375, 2925, 2936,
      378,  710,  710, 2928, 2948,  376, 1975, 1976, 3663, 3663,
     1977, 2929,  472, 2949,  378, 2950,  472, 2951,  375,  375,
      375,  375,  375, 2704, 2704, 2704, 2704, 2704, 2953,  511,
      376, 2954, 2815, 1988, 1749, 1749, 1749, 1749, 1749,  378,
     1083, 2960, 2961, 2942, 2706, 1084, 2010, 1772, 1772, 1772,
     1772, 1772, 2941, 2011, 2962, 2037, 2825, 2965, 2967, 1773,
     2944,  375,  375,  375,  375,  375,  375,  375,  375,  375,
      375, 2969, 2386,  376, 2970, 2406, 2971, 2022,  376, 1085,
     2946, 2841,  378, 2955, 2972, 1086, 1087,  378, 2707, 2973,

     2974, 2976, 1088, 2012, 2013, 2013, 2013, 2013, 2013, 2012,
     2012, 2012, 2012, 2012, 2012, 2012, 2014, 2012, 2012, 2012,
     2012, 2023, 2015, 2012, 2033, 2016, 2012, 2012, 2012, 2012,
     2012, 2012,  375,  375,  375,  375,  375, 2977, 2978, 2979,
     2980, 2012, 2012, 2012,  376,  375,  375,  375,  375,  375,
     2981, 2983, 2984,  378, 2856, 2992, 2993,  376, 2994, 2982,
     2461,  375,  375,  375,  375,  375,  378, 2995, 2985, 2012,
     2012, 2012, 2012,  376, 2996, 2997, 2024,  375,  375,  375,
      375,  375,  378, 1767, 1767, 1767, 1767, 1767, 2998,  376,
      375,  375,  375,  375,  375, 2032, 2999, 3000,  378, 3001,

     3002, 3003,  376, 3004, 2025, 3005, 2026, 3006, 3007, 2877,
      710,  378, 2035, 2035, 2035, 2035, 2035, 3011, 3012, 3014,
     2027, 3016, 2889, 3020, 2036, 2290, 3022, 1100, 3023, 2305,
     3024, 2313, 1101,  378,  375,  375,  375,  375,  375, 3030,
     1102, 1775, 1775, 1775, 1775, 1775,  376, 3032, 3033, 2034,
     3034, 3035, 2914, 1776, 3038,  378,  375,  375,  375,  375,
      375, 2045, 2045, 2045, 2045, 2045, 3036, 3039,  376, 3040,
     3041, 3043, 3044, 2046, 3037, 3045, 3046,  378, 3047, 3048,
     3049, 3050,  378,  375,  375,  375,  375,  375, 3051, 2929,
     2040, 3053, 2346, 2934, 2571,  376,  472, 2939, 2039, 2578,

      472, 3063, 3055,  472,  378, 2042, 3065, 3059,  375,  375,
      375,  375,  375,  375,  375,  375,  375,  375, 2946, 3056,
      376, 3067, 3068, 2953,  472,  376, 3071, 3062, 3060,  378,
     2047, 2053, 2054, 2054, 2054, 2054, 2054, 2053, 2053, 2053,
     2053, 2053, 2053, 2053, 2055, 2053, 2053, 2053, 2053, 2058,
     2056, 2053, 3061, 2057, 2053, 2053, 2053, 2053, 2053, 2053,
     2064, 2064, 2064, 2064, 2064, 2606, 2955, 3074, 3075, 2053,
     2053, 2053, 2065, 3070, 3077,  375,  375,  375,  375,  375,
     2967,  378,  375,  375,  375,  375,  375,  376, 2704, 2704,
     2704, 2704, 2704, 3081,  376, 3082,  378, 2053, 2053, 2053,

     2053, 2059, 2060, 2060, 2060, 2060, 2060, 2059, 2059, 2059,
     2059, 2059, 2059, 2059, 2061, 2059, 2059, 2059, 2059, 2072,
     2062, 2059,  472, 2063, 2059, 2059, 2059, 2059, 2059, 2059,
      375,  375,  375,  375,  375,  511, 3083, 3084, 3085, 2059,
     2059, 2059,  376,  375,  375,  375,  375,  375, 2629, 3086,
     3087, 2074, 3089, 2707, 3057,  376, 3079, 3090, 3091, 3064,
     3092, 3093, 3094, 3095,  378, 3096, 3097, 2059, 2059, 2059,
     2059, 2067, 2068, 2068, 2068, 2068, 2068, 2067, 2067, 2067,
     2067, 2067, 2067, 2067, 2069, 2067, 2067, 2067, 2067, 2985,
     2070, 2067, 2080, 2071, 2067, 2067, 2067, 2067, 2067, 2067,

      375,  375,  375,  375,  375, 2992, 3102, 3103, 3104, 2067,
     2067, 2067,  376,  375,  375,  375,  375,  375, 3105, 3106,
     3107,  378, 3108, 3100, 3109,  376, 2987, 2987, 2987, 2987,
     2987, 3101, 3110, 3111,  378, 3112, 3113, 2067, 2067, 2067,
     2067, 2073, 2075, 2076, 2076, 2076, 2076, 2076, 2075, 2075,
     2075, 2075, 2075, 2075, 2075, 2077, 2075, 2075, 2075, 2075,
     3114, 2078, 2075, 3115, 2079, 2075, 2075, 2075, 2075, 2075,
     2075, 2081,  375,  375,  375,  375,  375, 3116, 2485, 3119,
     2075, 2075, 2075, 3014,  376,  375,  375,  375,  375,  375,
     3120, 2990, 3122,  378, 3124, 2503, 3126,  376, 3121, 3128,

     3129, 3130, 2083, 3140, 3032, 3033,  378, 3143, 2075, 2075,
     2075, 2075,  375,  375,  375,  375,  375,  375,  375,  375,
      375,  375, 3141, 3037,  376, 3147, 2082, 3148, 3149,  376,
     3142, 3043, 3151,  378, 3152, 3153, 3154, 3155,  378, 3158,
      375,  375,  375,  375,  375,  375,  375,  375,  375,  375,
     2765, 3159,  376, 2564, 3160, 3663,  472,  376, 3150,  472,
     2084,  378,  472, 3055, 3169, 3170,  378,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  375, 3663, 3171,  376,
     3161, 3162,  472, 3164,  376, 3059,  472, 3172,  378, 3173,
      511, 3174, 3176,  378,  375,  375,  375,  375,  375, 2087,

      375,  375,  375,  375,  375, 3663,  376, 1819, 1819, 1819,
     1819, 1819,  376, 3070, 3163,  378, 2088, 3177, 3165, 1820,
     3178,  378, 3168, 3081,  375,  375,  375,  375,  375, 2089,
      375,  375,  375,  375,  375, 2090,  376,  375,  375,  375,
      375,  375,  376, 3185, 3186,  378, 3187, 3663, 2832,  376,
     2704, 2704, 2704, 2704, 2704, 3079, 3179, 3089,  378, 2091,
     3189, 2092, 2094, 2095, 2095, 2095, 2095, 2095, 2094, 2094,
     2094, 2094, 2094, 2094, 2094, 2096, 2094, 2094, 2094, 2094,
     3190, 2097, 2094, 2111, 2098, 2094, 2094, 2094, 2094, 2094,
     2094, 2112, 2112, 2112, 2112, 2112, 3191, 3192, 3193, 3196,

     2094, 2094, 2094, 2113, 2154, 2154, 2154, 2154, 2154, 2846,
     3197, 3201,  378, 3202, 3203, 2707, 2155, 3188, 2987, 2987,
     2987, 2987, 2987, 3204, 3205,  472, 3206, 3207, 2094, 2094,
     2094, 2094, 2099, 2100, 2100, 2100, 2100, 2100, 2099, 2099,
     2099, 2099, 2099, 2099, 2099, 2101, 2099, 2099, 2099, 2099,
     3208, 2102, 2099, 3209, 2103, 2099, 2099, 2099, 2099, 2099,
     2099, 1877, 1877, 1877, 1877, 1877, 3210, 3663, 3211, 3212,
     2099, 2099, 2099, 3213, 1878, 3101, 3214, 3215, 1865, 1865,
     1865, 1865, 1865, 2990, 3218, 1906, 1906, 1906, 1906, 1906,
     1866, 3220, 3124, 3225, 3229,  710, 3234, 1907, 2099, 2099,

     2099, 2099, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,
     2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140, 2140,
     2146, 2141, 2140, 3663, 2142, 2140, 2140, 2140, 2140, 2140,
     2140, 3121, 3236, 2760, 1908, 2199, 2199, 2199, 2199, 2199,
     2140, 2140, 2140, 1909, 3238, 3239, 3241, 2200, 3242, 1872,
     1872, 1872, 1872, 1872, 1926, 1926, 1926, 1926, 1926, 3221,
     3243, 1873, 3244, 3245, 3246, 3248, 1927, 3222, 2140, 2140,
     2140, 2140, 2149, 2149, 2149, 2149, 2149, 2149, 2149, 2149,
     2149, 2149, 2149, 2149, 2149, 2149, 2149, 2149, 2149, 2149,
     2156, 2150, 2149, 3249, 2151, 2149, 2149, 2149, 2149, 2149,

     2149, 2196, 3250, 3251, 3259, 2197, 3261, 3262, 3263, 3264,
     2149, 2149, 2149, 1932, 1932, 1932, 1932, 1932, 1950, 1950,
     1950, 1950, 1950, 3265, 3266, 1933, 3176, 3268, 3663, 3663,
     1951, 2230, 2230, 2230, 2230, 2230, 3142, 3150, 2149, 2149,
     2149, 2149,  472, 2231, 1963, 1963, 1963, 1963, 1963, 1967,
     1967, 1967, 1967, 1967,  472, 3269, 1964, 3271,  472, 3273,
     2221, 1968, 2204, 1972, 1972, 1972, 1972, 1972, 1986, 1986,
     1986, 1986, 1986, 2957, 3663, 1973, 3274, 3276, 3254, 3255,
     2251, 3267, 3179, 3277, 3278, 2232,  472,  375,  375,  375,
      375,  375, 1990, 1990, 1990, 1990, 1990, 3256, 3663,  376,

     3279, 3280, 3281, 2235, 2254, 3283, 3188, 1974,  378,  511,
     3284,  375,  375,  375,  375,  375,  375,  375,  375,  375,
      375, 1975, 1976,  376, 3257, 1977, 3285, 2859,  376, 3287,
     1415, 3289,  378, 3290,  375,  375,  375,  375,  375, 2271,
     2271, 2271, 2271, 2271, 2252, 3291,  376, 3260, 3292, 3293,
     3294, 2272, 3295, 3296, 1420,  378, 3298, 3299, 3300, 3301,
      378, 2274, 2274, 2274, 2274, 2274, 3304, 2882, 3305, 3309,
     2266, 3663, 2907, 2275,  375,  375,  375,  375,  375, 3222,
     3033, 3317,  378, 3319, 3320, 3321,  376,  375,  375,  375,
      375,  375, 3324, 3325, 3326,  378, 3327, 3329, 3330,  376,

     3331, 3339, 3341, 3344, 2273, 3345, 3347, 3348,  378,  375,
      375,  375,  375,  375, 3349, 2277, 3352, 3354, 2276,  472,
     3355,  376,  375,  375,  375,  375,  375, 3663,  472, 3357,
      378, 3358, 3359, 3362,  376, 3267, 2278,  375,  375,  375,
      375,  375, 3363,  378, 2286, 2286, 2286, 2286, 2286,  376,
     3364, 2035, 2035, 2035, 2035, 2035, 2287, 3335,  378, 3365,
     3367, 3368, 2279, 2036, 3369,  378, 3336, 2280, 3371, 3372,
     3373, 3374, 3375, 3378, 3379, 3380, 3381, 3382,  375,  375,
      375,  375,  375, 2043, 2043, 2043, 2043, 2043, 3383, 3384,
      376, 1457, 3387, 3388, 2289, 2302, 2285, 3016, 3390,  378,

     3395, 3396, 2987, 2987, 2987, 2987, 2987, 3319, 3401, 2288,
     2293, 2294, 2294, 2294, 2294, 2294, 2293, 2293, 2293, 2293,
     2293, 2293, 2293, 2295, 2293, 2293, 2293, 2293, 3402, 2296,
     2293, 2301, 2297, 2293, 2293, 2293, 2293, 2293, 2293, 2045,
     2045, 2045, 2045, 2045, 3145, 3403, 3329, 3405, 2293, 2293,
     2293, 2046, 3397,  375,  375,  375,  375,  375, 2051, 2051,
     2051, 2051, 2051, 3156, 3406,  376, 1473, 2990, 3341,  472,
     2310, 3404, 3414,  472,  378, 3415, 2293, 2293, 2293, 2293,
      375,  375,  375,  375,  375, 3416, 3166, 3417, 3354, 3420,
     3357, 2303,  376, 3410, 3412, 3425, 3426, 2304, 2306,  375,

      375,  375,  375,  375,  375,  375,  375,  375,  375, 3409,
     3181,  376, 3427, 3183, 3367, 3194,  376, 3429, 3419, 3430,
      378, 3421, 3434, 3428, 3435,  378,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375, 3436, 3441,  376, 3445,
     3447, 3454, 3455,  376, 2064, 2064, 2064, 2064, 2064, 3463,
     3464, 3465,  378, 3467, 3468, 3469, 2065,  375,  375,  375,
      375,  375, 2311,  375,  375,  375,  375,  375, 3663,  376,
     2315, 2315, 2315, 2315, 2315,  376, 3397,  375,  375,  375,
      375,  375,  376,  472,  378, 3475, 3476, 3477, 3478,  376,
     3480,  378,  375,  375,  375,  375,  375, 2312,  378,  375,

      375,  375,  375,  375,  376,  375,  375,  375,  375,  375,
     3663,  376,  375,  375,  375,  375,  375,  376, 3404, 3481,
      378, 3482, 3470, 3484,  376, 3485,  378,  375,  375,  375,
      375,  375, 2317,  378, 3486, 2316, 3487, 3488, 3663,  376,
     3489,  375,  375,  375,  375,  375, 3412, 3663,  378, 3663,
     3490, 3663, 3492,  376, 3493, 3419, 3495, 3421, 2319, 3428,
     3497, 2320,  378,  375,  375,  375,  375,  375, 3499,  375,
      375,  375,  375,  375, 3502,  376,  710, 3503, 3463, 3510,
     2321,  376, 2322, 3483, 3511,  472, 2323, 2343, 2343, 2343,
     2343, 2343, 2112, 2112, 2112, 2112, 2112, 3315, 3515, 2344,

     3516, 3519, 3520, 3523, 2113, 3507, 3524, 3514,  378, 2362,
     2362, 2362, 2362, 2362, 2365, 2365, 2365, 2365, 2365, 3525,
     3526, 2363, 3527, 3528, 3529, 3492, 2366, 3532, 3533, 3534,
      472, 3536, 3538, 3376, 3541,  472, 2154, 2154, 2154, 2154,
     2154, 3530, 2383, 2383, 2383, 2383, 2383, 3542, 2155, 3547,
      472, 3551, 3663, 2345, 2384, 3663, 3663, 3663, 3663, 3663,
     3507, 3552, 3554,  511, 3557, 3558,  710, 3663, 2386, 2386,
     2386, 2386, 2386, 3543, 3559, 3560,  511, 3561, 3562,  710,
     2387, 2406, 2406, 2406, 2406, 2406, 3544, 3563, 3550, 3532,
     2378, 3663, 3565, 2407, 2199, 2199, 2199, 2199, 2199, 3530,

     2385, 2230, 2230, 2230, 2230, 2230, 2200, 2461, 2461, 2461,
     2461, 2461, 3566, 2231,  375,  375,  375,  375,  375, 2462,
      375,  375,  375,  375,  375, 3443,  376, 3536, 3448, 3538,
     3450, 2467,  376, 3564, 3573, 2468, 3567, 2421, 3568, 3575,
     3577,  378, 2269, 2269, 2269, 2269, 2269, 2271, 2271, 2271,
     2271, 2271, 3579, 3580, 2475, 2445,  472, 3581, 3583, 2272,
      375,  375,  375,  375,  375, 2472,  375,  375,  375,  375,
      375, 3584,  376,  375,  375,  375,  375,  375,  376,  710,
     3574,  378,  377, 3586, 3578,  376, 3571,  378, 3587,  377,
     3588, 1753, 3589, 3590,  378, 3663, 3593, 3591, 3597, 3599,

     1754, 3577, 3602, 3564, 3592, 2486,  375,  375,  375,  375,
      375, 3604, 2273, 2274, 2274, 2274, 2274, 2274,  376, 2487,
     3407, 3407, 3407, 3407, 3407, 2275, 3583,  378, 3606, 3607,
     3608, 3663, 2489, 3408,  375,  375,  375,  375,  375, 3567,
     3663, 2499, 2499, 2499, 2499, 2499,  376,  377, 3568, 2488,
     3598, 3594, 3508,  376,  377, 2476, 2477, 2478, 2500, 2479,
     3600,  377,  378, 3595,  377, 3609, 2480, 2481,  377, 3610,
     2482,  377, 3596, 2483, 2484, 2490, 2491, 2491, 2491, 2491,
     2491, 2490, 2490, 2490, 2490, 2490, 2490, 2490, 2492, 2490,
     2490, 2490, 2490, 3612, 2493, 2490,  472, 2494, 2490, 2490,

     2490, 2490, 2490, 2490, 3517, 3615, 2501, 2286, 2286, 2286,
     2286, 2286, 3605, 2490, 2490, 2490,  377, 3619, 3621, 2287,
     3623, 3613, 3618,  377,  375,  375,  375,  375,  375, 3601,
     3614, 3617,  377,  377, 3620, 3624,  376, 3626,  472,  377,
      377, 2490, 2490, 2490, 2490,  378,  375,  375,  375,  375,
      375, 2325, 2325, 2325, 2325, 2325, 3627,  377,  376, 1807,
     3663, 3628, 3629, 2541,  377, 3663, 3630,  378, 3600, 3616,
     3622, 3631, 2288, 3605, 2308, 2308, 2308, 2308, 2308, 2315,
     2315, 2315, 2315, 2315, 3632, 3633, 2523, 3638, 3642, 3644,
     3646,  376, 3630, 2512, 2517, 2518, 2518, 2518, 2518, 2518,

     2517, 2517, 2517, 2517, 2517, 2517, 2517, 2519, 2517, 2517,
     2517, 2517, 3647, 2520, 2517, 3648, 2521, 2517, 2517, 2517,
     2517, 2517, 2517, 1782,  375,  375,  375,  375,  375, 3652,
     3654, 3655, 2517, 2517, 2517,  377,  376,  375,  375,  375,
      375,  375,  377,  377, 2316,  378, 3630, 3616, 3659,  376,
      377, 3661,  375,  375,  375,  375,  375, 3634,  378,  377,
     2517, 2517, 2517, 2517,  376, 3661,  377, 1421, 1728, 2524,
     1726, 1416, 1411,  378,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  375, 3657, 2529,  376, 1720, 1060,  377,
     3663,  376, 3662, 1060, 1060,  378,  377, 3616, 3662, 2530,

      378,  375,  375,  375,  375,  375,  355,  375,  375,  375,
      375,  375, 1053,  376,  375,  375,  375,  375,  375,  376,
     1053, 3649,  378, 1053,  351, 1719,  376, 2531,  378,  377,
      375,  375,  375,  375,  375,  378,  377, 2532, 1718, 1717,
      684, 1716,  376, 2362, 2362, 2362, 2362, 2362, 1398, 1714,
     1713,  378,  681, 1712, 1391, 2363, 1710, 2543, 2534, 1709,
     2533, 2535, 2536, 2536, 2536, 2536, 2536, 2535, 2535, 2535,
     2535, 2535, 2535, 2535, 2537, 2535, 2535, 2535, 2535, 1708,
     2538, 2535, 2542, 2539, 2535, 2535, 2535, 2535, 2535, 2535,
      375,  375,  375,  375,  375, 1707,  666, 1706, 1381, 2535,

     2535, 2535,  376,  375,  375,  375,  375,  375, 1704, 1703,
     1154,  378,  663, 1154, 1702,  376, 1154, 1154, 1374, 1162,
     2540, 1014, 1162, 1014,  378, 1162, 1162, 2535, 2535, 2535,
     2535, 1014, 1362, 1700, 2544, 2546, 2546, 2546, 2546, 2546,
     2341, 2341, 2341, 2341, 2341, 1361, 1699, 2547, 2545, 1694,
     1693, 1692, 2558, 1691, 1690, 1689,  378, 2571, 2571, 2571,
     2571, 2571, 2365, 2365, 2365, 2365, 2365, 1688, 1687, 2572,
     1363, 1685, 1684, 1363, 2366, 1683, 1363, 1363,  472, 1402,
     1682, 1681, 1402, 1679, 1823, 1402, 1402, 1678, 1677, 2578,
     2578, 2578, 2578, 2578, 1676, 1675, 1674, 1673, 1824, 1825,

     2548, 2579, 1826, 2343, 2343, 2343, 2343, 2343, 1672, 1671,
      472, 1670, 1669, 1668, 1663, 2344, 2383, 2383, 2383, 2383,
     2383, 2606, 2606, 2606, 2606, 2606, 1661, 1660, 2384, 1406,
     1658, 1574, 1406, 2607, 1574, 1406, 1406, 1574, 1574, 2386,
     2386, 2386, 2386, 2386, 1656, 1654, 2559, 2560, 1653, 1652,
     1651, 2387, 2406, 2406, 2406, 2406, 2406, 1650, 1649, 1647,
     1645, 2561, 2562, 1644, 2407, 2563, 2575, 2575, 2575, 2575,
     2575, 2575, 2575, 2575, 2575, 2575, 2575, 2575, 2575, 2575,
     2575, 2575, 2575, 2575, 2593, 2576, 2575, 1643, 2577, 2575,
     2575, 2575, 2575, 2575, 2575, 1642, 1641, 1640, 2609, 2629,

     2629, 2629, 2629, 2629, 2575, 2575, 2575, 1639, 1638, 1637,
     1636, 2630,  375,  375,  375,  375,  375, 2499, 2499, 2499,
     2499, 2499, 1629, 1628,  376, 1626, 1625, 1624, 1623,  376,
     1295, 1622, 2575, 2575, 2575, 2575, 2461, 2461, 2461, 2461,
     2461, 1621,  375,  375,  375,  375,  375, 1617, 2462, 2670,
     2670, 2670, 2670, 2670,  376,  375,  375,  375,  375,  375,
     1613, 2671, 1578,  378, 1612, 1578, 1611,  376, 1578, 1578,
     2672,  375,  375,  375,  375,  375,  378, 1610,  554, 2659,
     2660, 1609, 2501,  376, 1275, 2692, 2692, 2692, 2692, 2692,
     1607, 1606,  378,  550, 2661, 2662, 2668, 2693, 2663,  375,

      375,  375,  375,  375, 1605, 1268,  378, 1603, 1602, 1601,
     1600,  376, 1582, 1599, 2673, 1582, 2690, 1598, 1582, 1582,
      378,  375,  375,  375,  375,  375, 1597, 1596, 1586,  537,
     2691, 1586, 1595,  376, 1586, 1586, 1255, 1593, 1592,  534,
     1591, 1248,  378, 2694, 2695, 2696, 2696, 2696, 2696, 2696,
     2695, 2695, 2695, 2695, 2695, 2695, 2695, 2697, 2695, 2695,
     2695, 2695, 1589, 2698, 2695, 1588, 2699, 2695, 2695, 2695,
     2695, 2695, 2695,  527, 2703, 1587, 1241, 2507, 2507, 2507,
     2507, 2507, 2695, 2695, 2695, 2037, 1585, 1584,  524, 2713,
     2510, 2510, 2510, 2510, 2510, 1583, 1234,  375,  375,  375,

      375,  375, 2715,  375,  375,  375,  375,  375, 1581,  376,
     2695, 2695, 2695, 2695, 2716,  376, 1580,  518, 2717,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  375, 1579,
     1227,  376, 1577, 1576,  515, 1575,  376, 1220,  472, 2040,
      378, 2723, 2724, 2724, 2724, 2724, 2724, 2723, 2723, 2723,
     2723, 2723, 2723, 2723, 2725, 2723, 2723, 2723, 2723,  472,
     2726, 2723, 1530, 2727, 2723, 2723, 2723, 2723, 2723, 2723,
      375,  375,  375,  375,  375, 1179,  472, 1522,  795, 2723,
     2723, 2723,  376, 1590,  795,  795, 1590, 2737, 1161, 1590,
     1590, 2738, 2550, 2550, 2550, 2550, 2550, 1521, 1520, 1594,

     1519,  785, 1594,  785, 2761, 1594, 1594, 2723, 2723, 2723,
     2723, 2732, 2733, 2733, 2733, 2733, 2733, 2732, 2732, 2732,
     2732, 2732, 2732, 2732, 2734, 2732, 2732, 2732, 2732,  785,
     2735, 2732, 1153, 2736, 2732, 2732, 2732, 2732, 2732, 2732,
      375,  375,  375,  375,  375, 1518, 2092, 1481, 1474, 2732,
     2732, 2732,  376,  375,  375,  375,  375,  375, 1458, 1449,
     1604,  378, 1447, 1604, 1446,  376, 1604, 1604, 1445,  375,
      375,  375,  375,  375,  378, 1433, 1431, 2732, 2732, 2732,
     2732,  376,  375,  375,  375,  375,  375, 2739, 1430, 1429,
      378, 1428,  710, 1421,  376,  375,  375,  375,  375,  375,

      710, 2740, 1416,  378, 1069, 1410, 1409,  376, 2765, 2765,
     2765, 2765, 2765, 1408,  355, 1608,  378, 1407, 1608, 1060,
     2766, 1608, 1608, 1405, 1404,  351, 1403, 2742, 2741, 2743,
     2744, 2744, 2744, 2744, 2744, 2743, 2743, 2743, 2743, 2743,
     2743, 2743, 2745, 2743, 2743, 2743, 2743, 1053, 2746, 2743,
     1401, 2747, 2743, 2743, 2743, 2743, 2743, 2743, 2748, 2748,
     2748, 2748, 2748, 1400, 1399, 1398, 1398, 2743, 2743, 2743,
     2749,  375,  375,  375,  375,  375, 1393, 1392, 1701,  378,
     1391, 1701, 1391,  376, 1701, 1701,  678, 2751, 2751, 2751,
     2751, 2751,  378, 1386, 1385, 2743, 2743, 2743, 2743,  376,

     2780, 2780, 2780, 2780, 2780, 1383, 1382, 1381,  378, 1381,
     1376, 1375, 2781, 2832, 2832, 2832, 2832, 2832, 1374, 2750,
     1705,  472, 1374, 1705, 1367, 2833, 1705, 1705, 1366, 1365,
     1364, 2546, 2546, 2546, 2546, 2546, 2578, 2578, 2578, 2578,
     2578, 1014, 1009, 2547, 1711, 1358, 1357, 1711, 2579, 1356,
     1711, 1711, 2752, 2753, 2754, 2754, 2754, 2754, 2754, 2753,
     2753, 2753, 2753, 2753, 2753, 2753, 2755, 2753, 2753, 2753,
     2753, 1355, 2756, 2753, 1354, 2757, 2753, 2753, 2753, 2753,
     2753, 2753, 2758, 2571, 2571, 2571, 2571, 2571, 1353, 2759,
     2786, 2753, 2753, 2753, 1352, 2572, 2548, 3663, 3663, 3663,

     3663, 3663, 2606, 2606, 2606, 2606, 2606, 1351, 1350, 3663,
     1715, 1349, 1348, 1715, 2607, 1347, 1715, 1715,  472, 2753,
     2753, 2753, 2753, 1346, 2782, 1345, 2629, 2629, 2629, 2629,
     2629, 1344, 2846, 2846, 2846, 2846, 2846, 1343, 2630, 2255,
     1342, 1341, 2255, 2810, 2847, 2255, 2255, 1340, 1339, 1338,
     2784, 2788, 2788, 2788, 2788, 2788, 2788, 2788, 2788, 2788,
     2788, 2788, 2788, 2788, 2788, 2788, 2788, 2788, 2788, 1337,
     2789, 2788, 1336, 2790, 2788, 2788, 2788, 2788, 2788, 2788,
     2828, 1335,  375,  375,  375,  375,  375, 1334, 1333, 2788,
     2788, 2788, 1331, 1330,  376, 1327, 1326, 2670, 2670, 2670,

     2670, 2670, 1323,  378,  375,  375,  375,  375,  375, 2671,
     1322, 1321, 1320, 1317, 1316, 1315,  376, 2788, 2788, 2788,
     2788, 2792, 2792, 2792, 2792, 2792, 2792, 2792, 2792, 2792,
     2792, 2792, 2792, 2792, 2792, 2792, 2792, 2792, 2792, 2857,
     2793, 2792, 1314, 2794, 2792, 2792, 2792, 2792, 2792, 2792,
     1313,  375,  375,  375,  375,  375, 1312, 1311, 1310, 2792,
     2792, 2792, 2673,  376,  375,  375,  375,  375,  375, 1305,
     1304, 2259,  378, 1303, 2259, 1302,  376, 2259, 2259, 1301,
     1300, 2879, 1299, 1296, 1295, 2880, 1288, 2792, 2792, 2792,
     2792, 1280, 2878, 2692, 2692, 2692, 2692, 2692, 2883, 2883,

     2883, 2883, 2883, 1277, 1276, 2693, 1275, 1275, 1270, 1269,
     2884,  375,  375,  375,  375,  375, 1268, 1268, 1263,  378,
     1260, 1259, 1258,  376,  375,  375,  375,  375,  375, 1257,
     1256, 1255,  378, 1255, 1250, 1249,  376, 2704, 2704, 2704,
     2704, 2704, 1248, 2350, 1248,  378, 2350, 1243, 1242, 2350,
     2350, 2881, 2711, 2711, 2711, 2711, 2711, 1241, 2706,  375,
      375,  375,  375,  375, 2891,  375,  375,  375,  375,  375,
     1241,  376, 2720, 2720, 2720, 2720, 2720,  376, 2886, 1236,
      378, 1235, 1234, 1234, 2897,  375,  375,  375,  375,  375,
     3407, 3407, 3407, 3407, 3407, 2289, 1229,  376, 2354, 1228,

     1227, 2354, 2707, 3408, 2354, 2354,  378, 2729, 2729, 2729,
     2729, 2729, 1227, 1222, 1221, 1220, 1220, 2893,  472, 2899,
      472,  472,  472,  472, 2303,  375,  375,  375,  375,  375,
     2304,  375,  375,  375,  375,  375,  472,  376,  375,  375,
      375,  375,  375,  376,  375,  375,  375,  375,  375,  472,
      376,  472,  378,  472,  472,  472,  376, 1179,  472,  378,
     2312, 2902, 1168, 1167, 1166,  378,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375, 1165, 1164,  376, 1163,
      795, 1160, 1159,  376, 1158, 1157, 1156,  378, 1155,  785,
     1103, 1089,  378,  710, 1069, 1067, 2900,  375,  375,  375,

      375,  375,  375,  375,  375,  375,  375, 1066,  706,  376,
      706, 1062, 1061, 1060,  376, 2903, 1060, 1055,  378,  375,
      375,  375,  375,  375, 1054, 1053, 1053, 1048, 2904,  684,
      681,  376, 2748, 2748, 2748, 2748, 2748, 1035,  678,  678,
      378, 1033, 1032,  672, 2749,  666,  663,  662,  658, 2905,
     2908, 2908, 2908, 2908, 2908, 2751, 2751, 2751, 2751, 2751,
     1016, 1015, 2909, 1014, 1014,  643, 1009,  376,  639, 1005,
      624,  378, 1003, 1000,  999, 2906,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  998,  997,  376,  996,
      995,  993,  992,  376, 2765, 2765, 2765, 2765, 2765,  989,

      988,  983,  378,  982,  981,  980, 2766, 2777, 2777, 2777,
     2777, 2777, 2780, 2780, 2780, 2780, 2780,  978,  977, 2931,
     2752,  975,  973,  963, 2781, 2957, 2957, 2957, 2957, 2957,
     2832, 2832, 2832, 2832, 2832,  960,  959, 2958, 2968,  958,
      957,  952, 2833, 2846, 2846, 2846, 2846, 2846,  375,  375,
      375,  375,  375,  951,  950, 2847, 2918,  940,  939,  938,
      376,  934,  930,  929,  928, 2986,  554,  550, 2345,  378,
     2987, 2987, 2987, 2987, 2987,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  915,  914,  376,  913,  912,
      911, 2989,  376,  537,  534,  527,  378,  524,  518,  515,

      511,  378,  472,  801,  797, 2975, 2883, 2883, 2883, 2883,
     2883,  796,  375,  375,  375,  375,  375,  795, 2884, 2888,
     2888, 2888, 2888, 2888,  376,  795, 3009,  790,  789,  788,
      787, 3019,  786,  378, 3010, 2990, 2876, 2876, 2876, 2876,
     2876,  785,  375,  375,  375,  375,  375,  785, 3008,  375,
      375,  375,  375,  375,  376, 3015, 3017,  710,  709,  700,
      355,  376,  351,  378,  375,  375,  375,  375,  375,  687,
      378,  375,  375,  375,  375,  375,  376,  680, 2476, 2477,
     2478,  678, 2479,  376,  678,  378,  678,  676,  675, 2480,
     2481, 3021,  378,  674,  672,  670, 2483, 2484, 3025,  375,

      375,  375,  375,  375,  375,  375,  375,  375,  375,  662,
      660,  376,  658, 3026,  656,  654,  376,  653,  646,  643,
      378,  643,  641,  639,  624,  378, 3027, 2908, 2908, 2908,
     2908, 2908, 2957, 2957, 2957, 2957, 2957,  621,  616, 2909,
      605,  597,  573,  563, 2958,  553,  549,  547, 3028, 3029,
     2928, 2928, 2928, 2928, 2928,  375,  375,  375,  375,  375,
      545,  542, 3052,  541,  540,  532,  530,  376, 2987, 2987,
     2987, 2987, 2987,  521,  511,  509,  378,  472,  466,  461,
      459, 3072,  458,  375,  375,  375,  375,  375,  454, 2989,
     3073,  453,  442, 2559, 2560,  376,  441,  440,  375,  375,

      375,  375,  375,  438,  378,  437,  436,  435, 2561, 2562,
      376,  427, 2563, 3098,  375,  375,  375,  375,  375,  378,
      362,  354, 3663, 3663, 3663, 3663,  376,  375,  375,  375,
      375,  375, 3117, 2990, 3663,  378, 3663, 3663, 3663,  376,
      375,  375,  375,  375,  375, 3663, 3663, 3663,  378, 3663,
     3663, 3663,  376, 3663, 3663, 3118, 3663, 3663, 3663, 3125,
     3663,  378,  375,  375,  375,  375,  375, 3663, 3663, 3127,
     3663, 3663, 3663, 3663,  376, 3145, 3145, 3145, 3145, 3145,
     3663, 3663, 3131,  378, 3663, 3663, 3663, 3146, 3663, 3663,
     3663, 3663,  375,  375,  375,  375,  375, 3156, 3156, 3156,

     3156, 3156, 3663, 3663,  376, 3663, 3663, 3663, 3663, 3157,
     3663, 3663, 3663,  378, 3663, 3132, 3133, 3134, 3134, 3134,
     3134, 3134, 3133, 3133, 3133, 3133, 3133, 3133, 3133, 3135,
     3133, 3133, 3133, 3133, 3138, 3136, 3133, 3663, 3137, 3133,
     3133, 3133, 3133, 3133, 3133,  375,  375,  375,  375,  375,
     3663, 3663, 3663, 3663, 3133, 3133, 3133,  376, 3036, 3036,
     3036, 3036, 3036, 3663, 3663, 3663,  378, 3663, 3663, 3663,
     3144, 3663, 3663, 3663, 3166, 3166, 3166, 3166, 3166, 3663,
     3663, 3663, 3133, 3133, 3133, 3133, 3167, 3181, 3181, 3181,
     3181, 3181, 3183, 3183, 3183, 3183, 3183, 3663, 3139, 3182,

     3663, 3663, 3663, 3663, 3184, 3663, 3663, 3663, 3663, 2758,
     3194, 3194, 3194, 3194, 3194, 3663, 2759,  375,  375,  375,
      375,  375, 3195, 3100, 3100, 3100, 3100, 3100, 3663,  376,
      375,  375,  375,  375,  375, 3200, 3663, 3663,  378, 3663,
     3663, 3663,  376,  375,  375,  375,  375,  375, 3663, 3663,
     3663,  378, 3663, 3663, 3663,  376, 3663, 3663, 3663, 3663,
     3217, 3663, 3198, 3663,  378, 3120, 3120, 3120, 3120, 3120,
     3663, 3663, 3663, 3663, 3216, 3663, 3663, 3219, 3223, 3223,
     3223, 3223, 3223,  375,  375,  375,  375,  375, 3663, 3663,
     3224, 3663, 3663, 3663, 3663,  376, 3663, 3663, 3663,  378,

     3663, 3663, 3663, 3663,  378,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  375, 3663, 3663,  376, 3663, 3663,
     3663, 3663,  376, 2881, 3663, 3663,  378, 3663, 3663, 3663,
     3663,  378, 3663, 3663, 3226,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  375, 3663, 3663,  376, 3663, 3663,
     3663, 3663,  376, 3663, 3663, 3663, 3230, 3663, 3663, 3663,
     3663,  378,  375,  375,  375,  375,  375, 3663, 3231,  375,
      375,  375,  375,  375,  376, 3141, 3141, 3141, 3141, 3141,
     3663,  376, 3663,  378, 3663, 3663, 3663, 3235, 3663, 3663,
      378, 3145, 3145, 3145, 3145, 3145, 3156, 3156, 3156, 3156,

     3156, 3663, 3663, 3146, 3663, 3663, 3663, 3663, 3157, 3252,
     3252, 3252, 3252, 3252, 3663, 3663, 3663, 3663, 2906, 3663,
     3663, 3253, 3232, 3166, 3166, 3166, 3166, 3166, 3233, 3663,
      472, 3663, 3663, 3663, 3663, 3167, 3181, 3181, 3181, 3181,
     3181, 3183, 3183, 3183, 3183, 3183, 3663, 3663, 3182, 3237,
     3663, 3663, 3663, 3184, 3663, 3663, 3663, 3663, 3247, 3194,
     3194, 3194, 3194, 3194, 3663, 3258, 3663, 3663, 3663, 3663,
     3663, 3195,  375,  375,  375,  375,  375, 3663, 3270,  375,
      375,  375,  375,  375,  376,  375,  375,  375,  375,  375,
     3663,  376, 3663,  378, 3663, 3663, 3663,  376, 3663, 3272,

      378, 3221, 3221, 3221, 3221, 3221,  378, 3223, 3223, 3223,
     3223, 3223, 3663, 3306,  375,  375,  375,  375,  375, 3224,
     3302, 3282, 3663, 3286, 3663, 3663,  376,  375,  375,  375,
      375,  375, 3663, 3663, 3663,  378, 3663, 3663, 3663,  376,
     3663, 3663, 3663, 3303, 3663, 3663, 3663, 3663,  378, 3663,
     3015, 3663,  375,  375,  375,  375,  375,  375,  375,  375,
      375,  375, 3663, 3308,  376, 3663, 3663, 3663, 3663,  376,
     3663, 3663, 3663,  378, 3663, 3663, 3310, 3663,  378, 3313,
     3313, 3313, 3313, 3313, 3315, 3315, 3315, 3315, 3315, 3663,
     3663, 3314, 3663, 3663, 3663, 3663, 3316, 3663, 3663, 3663,

      378, 3252, 3252, 3252, 3252, 3252, 3333, 3333, 3333, 3333,
     3333, 3311, 3663, 3253, 3663, 3663, 3312, 3663, 3334, 3337,
     3337, 3337, 3337, 3337, 3663, 3663, 3663,  472, 3663, 3663,
     3663, 3338, 3342, 3342, 3342, 3342, 3342, 3663, 3663, 3663,
      472, 3663, 3663, 3663, 3343,  375,  375,  375,  375,  375,
     3663, 3663, 3663,  511, 3663, 3663, 3663,  376, 3376, 3376,
     3376, 3376, 3376, 3663, 3663, 3663,  378, 3663, 3663, 3663,
     3377,  375,  375,  375,  375,  375,  375,  375,  375,  375,
      375, 3663, 3663,  376, 3663, 3663, 3663, 3663,  376, 3663,
     3663, 3370,  378, 3663, 3663, 3663, 3663,  378,  375,  375,

      375,  375,  375,  375,  375,  375,  375,  375, 3663, 3663,
      376, 3663, 3663, 3663, 3663,  376, 3663, 3663, 3663,  378,
     3663, 3386, 3663, 3663,  378,  375,  375,  375,  375,  375,
     3385,  375,  375,  375,  375,  375, 3663,  376, 3313, 3313,
     3313, 3313, 3313,  376, 3663, 3663,  378, 3663, 3663, 3663,
     3314, 3389,  378, 3663, 3663, 3663, 3391, 3315, 3315, 3315,
     3315, 3315, 3663, 3663, 3663, 3394, 3663, 3663, 3663, 3316,
     3663, 3333, 3333, 3333, 3333, 3333, 3393, 3337, 3337, 3337,
     3337, 3337, 3392, 3334, 3342, 3342, 3342, 3342, 3342, 3338,
      375,  375,  375,  375,  375, 3663, 3343, 3376, 3376, 3376,

     3376, 3376,  376, 3443, 3443, 3443, 3443, 3443, 3663, 3377,
     3663, 3431, 3663, 3663, 3663, 3444, 3448, 3448, 3448, 3448,
     3448, 3450, 3450, 3450, 3450, 3450, 3663, 3663, 3449, 3663,
     3663, 3663, 3663, 3451,  375,  375,  375,  375,  375, 3663,
     3437, 3663, 3438, 3439, 3663, 3663,  376, 3663, 3663, 3663,
     3663, 3440, 3663, 3663, 3663,  378,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375, 3663, 3663,  376, 3663,
     3663, 3663, 3663,  376, 3663, 3663, 3663,  378, 3663, 3663,
     3663, 3663,  378, 3452,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  375, 3663, 3663,  376, 3663, 3663, 3663,

     3663,  376, 3663, 3663, 3663,  378, 3663, 3453, 3456, 3663,
      378, 3460, 3460, 3460, 3460, 3460, 3471, 3471, 3471, 3471,
     3471, 3663, 3663, 3461, 3663, 3663, 3663, 3663, 3472, 3663,
     3663, 3458,  378, 3663, 3663, 3663, 3663,  472, 3443, 3443,
     3443, 3443, 3443, 3448, 3448, 3448, 3448, 3448, 3663, 3459,
     3444, 3663, 3663, 3663, 3663, 3449, 3450, 3450, 3450, 3450,
     3450, 3663, 3663, 3663, 3498, 3663, 3663, 3663, 3451,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  375, 3663,
     3663,  376, 3663, 3663, 3663, 3663,  376, 3663, 3663, 3496,
      378, 3663, 3663, 3663, 3663,  378,  375,  375,  375,  375,

      375,  375,  375,  375,  375,  375, 3663, 3663,  376, 3663,
     3663, 3663, 3663,  376, 3663, 3663, 3663, 3504, 3663, 3663,
     3501, 3663, 3505, 3500,  375,  375,  375,  375,  375, 3460,
     3460, 3460, 3460, 3460, 3663, 3663,  376, 3663, 3663, 3663,
     3663, 3461, 3663, 3663, 3663,  378, 3508, 3508, 3508, 3508,
     3508, 3471, 3471, 3471, 3471, 3471, 3663, 3663, 3509, 3663,
     3663, 3663, 3663, 3472, 3663, 3663, 3663, 3506, 3517, 3517,
     3517, 3517, 3517,  375,  375,  375,  375,  375, 3663, 3663,
     3518, 3663, 3663, 3663, 3663,  376,  375,  375,  375,  375,
      375, 3663, 3663, 3663,  378, 3663, 3663, 3663,  376,  375,

      375,  375,  375,  375, 3663, 3663, 3663, 3540, 3663, 3663,
     3663,  376, 3508, 3508, 3508, 3508, 3508, 3663, 3663, 3663,
      378, 3663, 3663, 3663, 3509, 3663, 3539, 3517, 3517, 3517,
     3517, 3517,  375,  375,  375,  375,  375, 3663, 3663, 3518,
     3663, 3663, 3663, 3663,  376, 3636, 3636, 3636, 3636, 3636,
     3663, 3663, 3663,  378, 3663, 3663, 3663, 3637, 3545, 3639,
     3639, 3639, 3639, 3639, 3663, 3663,  378, 3663, 3663, 3663,
     3663, 3640, 3663, 3663, 3546, 3636, 3636, 3636, 3636, 3636,
      472, 3663, 3663, 3569, 3663, 3663, 3663, 3637, 3663, 3553,
     3570, 3639, 3639, 3639, 3639, 3639, 3657, 3657, 3657, 3657,

     3657, 3663, 3663, 3640, 3663, 3663, 3663, 3663, 3658, 3657,
     3657, 3657, 3657, 3657, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3658,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,

      115,  115,  115,  115,  115,  115,  115,  115,  115,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  130,  130,  130,
      130,  130,  130,  130,  130,  130,  130,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  208,  208,  208,  208,

      208,  208,  208,  208,  208,  208,  208,  208,  208,  208,
      208,  208,  208,  208,  208,  208,  208,  208,  208,  208,
      208,  208,  208,  208,  208,  220,  220,  220,  220,  220,
      220,  220,  220,  220,  220,  220,  220,  220,  220,  220,
      220,  220,  220,  220,  220,  220,  220,  220,  220,  220,
      220,  220,  220,  220,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  287,  287,  287,  287,  287,  287,  287,
      287,  287,  287,  297,  297,  297,  297,  297,  297,  297,
      297,  297,  297,  297,  297,  297,  297,  297,  297,  297,

      297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  297,  299,  299,  299,  299,  299,  299,  299,  299,
      299,  299,  299,  299,  299,  299,  299,  299,  299,  299,
      299,  299,  299,  299,  299,  299,  299,  299,  299,  299,
      299,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  342,

      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  342,  342,  342,  351,  351,
      351,  351,  351,  351,  351,  351,  351,  351,  351,  351,
      351,  351,  351,  351,  351,  351,  351,  351,  351,  351,
      351,  351,  351,  351,  351,  351,  351,  355,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  355,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  355,  355,  355,
      355,  355,  355,  355,  355,  355,  369,  369, 3663, 3663,
      369,  369, 3663,  369,  369,  369,  369,  369,  369,  369,

      377,  377, 3663, 3663, 3663, 3663, 3663,  377, 3663, 3663,
      377,  377,  377,  377, 3663,  377,  377, 3663,  377,  377,
      377,  377,  377,  377,  377,  428, 3663,  428,  428,  428,
     3663, 3663,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  428,  428,
      443, 3663,  443,  443,  443, 3663,  443,  443,  443,  443,
      443,  443,  443,  443,  443,  443,  443,  443,  443,  443,
      443,  443,  443,  443,  443,  456,  456, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663,  456,  456,  456,  456, 3663,
      456,  456, 3663,  456,  456,  456,  456,  456,  456,  456,

      471,  471,  471,  471, 3663,  471,  471, 3663,  471,  471,
      471,  471,  471,  471,  471,  510,  510,  510,  510, 3663,
      510,  510, 3663,  510,  510,  510,  510,  510,  510,  510,
      515,  515,  515,  515,  515,  515,  515,  515,  515,  515,
      515,  515,  515,  515,  515,  515,  515,  515,  515,  515,
      515,  515,  515,  515,  515,  515,  515,  515,  515,  518,
      518,  518,  518,  518,  518,  518,  518,  518,  518,  518,
      518,  518,  518,  518,  518,  518,  518,  518,  518,  518,
      518,  518,  518,  518,  518,  518,  518,  518,  522,  522,
      522, 3663, 3663,  522,  522, 3663,  522,  522,  522,  522,

      522,  522,  522,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  531,  531,  531, 3663, 3663,  531,  531, 3663,  531,
      531,  531,  531,  531,  531,  531,  534,  534,  534,  534,
      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,
      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,

      534,  534,  534,  534,  534,  537,  537,  537,  537,  537,
      537,  537,  537,  537,  537,  537,  537,  537,  537,  537,
      537,  537,  537,  537,  537,  537,  537,  537,  537,  537,
      537,  537,  537,  537,  550,  550,  550,  550,  550,  550,
      550,  550,  550,  550,  550,  550,  550,  550,  550,  550,
      550,  550,  550,  550,  550,  550,  550,  550,  550,  550,
      550,  550,  550,  554,  554,  554,  554,  554,  554,  554,
      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
      554,  554,  623,  623,  623,  623, 3663,  623,  623, 3663,

      623,  623,  623,  623,  623,  623,  623,  628,  628, 3663,
     3663,  628, 3663, 3663, 3663, 3663, 3663,  628,  628,  628,
      628, 3663,  628,  628, 3663,  628,  628,  628,  628,  628,
      628,  628,  630, 3663,  630,  630,  630,  630,  630,  630,
      630,  630,  630,  630,  630,  630,  630,  630,  630,  630,
      630,  630,  630,  630,  630,  630,  630,  630,  630,  636,
      636,  636, 3663, 3663,  636,  636, 3663,  636,  636,  636,
      636,  636,  636,  636,  640,  640,  640,  640, 3663,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  642, 3663,  642,  642,  642,  642,  642,  642,

      642,  642,  642,  642,  642,  642,  642,  642,  642,  642,
      642,  642,  642,  642,  642,  642,  642,  642,  642,  645,
     3663,  645, 3663,  645, 3663,  645,  645,  645,  645,  645,
      645,  645,  645,  645,  645,  645,  645,  645,  645,  645,
      645,  645,  645,  645,  657,  657,  657,  657, 3663,  657,
      657, 3663,  657,  657,  657,  657,  657,  657,  657,  661,
      661,  661,  661, 3663,  661,  661, 3663,  661,  661,  661,
      661,  661,  661,  661,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,

      663,  663,  663,  666,  666,  666,  666,  666,  666,  666,
      666,  666,  666,  666,  666,  666,  666,  666,  666,  666,
      666,  666,  666,  666,  666,  666,  666,  666,  666,  666,
      666,  666,  671,  671,  671,  671, 3663,  671,  671, 3663,
      671,  671,  671,  671,  671,  671,  671,  677, 3663,  677,
      677,  677,  677,  677,  677,  677,  677,  677,  677,  677,
      677,  677,  677,  677,  677,  677,  677,  677,  677,  677,
      677,  677,  677,  677,  679, 3663,  679,  679,  679,  679,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,

      679,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  351,
      351,  351,  351,  351,  351,  351,  351,  351,  351,  351,
      351,  351,  351,  351,  351,  351,  351,  351,  351,  351,
      351,  351,  351,  351,  351,  351,  351,  351,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  355,  355,  355,

      355,  355,  355,  355,  355,  355,  355,  355,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  701,  701, 3663,
      701,  701,  701,  701,  701,  701,  701,  702, 3663, 3663,
      702,  702, 3663,  702,  702,  702,  702,  702,  702,  702,
      369,  369, 3663, 3663,  369,  369, 3663,  369,  369,  369,
      369,  369,  369,  369,  377,  377, 3663, 3663, 3663, 3663,
     3663,  377, 3663, 3663,  377,  377,  377,  377, 3663,  377,
      377, 3663,  377,  377,  377,  377,  377,  377,  377,  711,
     3663, 3663, 3663, 3663, 3663,  711,  711, 3663,  711,  711,
      711,  711,  711,  711,  711,  428, 3663,  428,  428,  428,

     3663, 3663,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  428,  428,
      443, 3663,  443,  443,  443, 3663,  443,  443,  443,  443,
      443,  443,  443,  443,  443,  443,  443,  443,  443,  443,
      443,  443,  443,  443,  443,  456,  456, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663,  456,  456,  456,  456, 3663,
      456,  456, 3663,  456,  456,  456,  456,  456,  456,  456,
      800,  800, 3663,  800,  800,  800,  800,  800,  800,  800,
      471,  471,  471,  471, 3663,  471,  471, 3663,  471,  471,
      471,  471,  471,  471,  471,  802,  802, 3663,  802,  802,

      802,  802,  802,  802,  802,  510,  510,  510,  510, 3663,
      510,  510, 3663,  510,  510,  510,  510,  510,  510,  510,
      870,  870, 3663,  870,  870,  870,  870,  870,  870,  870,
      515,  515,  515,  515,  515,  515,  515,  515,  515,  515,
      515,  515,  515,  515,  515,  515,  515,  515,  515,  515,
      515,  515,  515,  515,  515,  515,  515,  515,  515,  518,
      518,  518,  518,  518,  518,  518,  518,  518,  518,  518,
      518,  518,  518,  518,  518,  518,  518,  518,  518,  518,
      518,  518,  518,  518,  518,  518,  518,  518,  522,  522,
      522, 3663, 3663,  522,  522, 3663,  522,  522,  522,  522,

      522,  522,  522,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  531,  531,  531, 3663, 3663,  531,  531, 3663,  531,
      531,  531,  531,  531,  531,  531,  534,  534,  534,  534,
      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,
      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,

      534,  534,  534,  534,  534,  537,  537,  537,  537,  537,
      537,  537,  537,  537,  537,  537,  537,  537,  537,  537,
      537,  537,  537,  537,  537,  537,  537,  537,  537,  537,
      537,  537,  537,  537,  550,  550,  550,  550,  550,  550,
      550,  550,  550,  550,  550,  550,  550,  550,  550,  550,
      550,  550,  550,  550,  550,  550,  550,  550,  550,  550,
      550,  550,  550,  554,  554,  554,  554,  554,  554,  554,
      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
      554,  554,  554,  554,  554,  554,  554,  554,  554,  554,
      554,  554,  933,  933,  933,  933,  933,  933,  933,  933,

      933,  933,  933, 3663,  933, 3663,  933,  933, 3663, 3663,
      933,  933, 3663, 3663, 3663, 3663, 3663, 3663,  933,  933,
      933,  935,  935,  935,  935,  935,  935,  935,  935,  935,
      935,  935, 3663,  935, 3663,  935,  935, 3663, 3663,  935,
     3663, 3663, 3663, 3663, 3663, 3663, 3663,  935,  935,  935,
      953,  953,  953,  953,  953,  953,  953,  953,  953,  953,
      953, 3663,  953, 3663,  953,  953, 3663, 3663,  953, 3663,
     3663, 3663, 3663, 3663, 3663, 3663,  953,  953,  953,  961,
      961,  961,  961,  961,  961,  961,  961,  961,  961,  961,
     3663,  961, 3663,  961,  961, 3663, 3663,  961, 3663, 3663,

     3663, 3663, 3663, 3663, 3663,  961,  961,  961,  962,  962,
      962,  962,  962,  962,  962,  962,  962,  962,  962, 3663,
      962, 3663,  962,  962, 3663, 3663,  962, 3663, 3663, 3663,
     3663, 3663, 3663, 3663,  962,  962,  962,  964,  964,  964,
      964,  964,  964,  964,  964,  964,  964,  964, 3663,  964,
     3663,  964,  964, 3663, 3663,  964, 3663, 3663, 3663, 3663,
      964,  964, 3663,  964,  964,  964,  967,  967,  967,  967,
      967,  967,  967,  967,  967,  967,  967, 3663,  967, 3663,
      967,  967, 3663, 3663,  967, 3663, 3663, 3663, 3663, 3663,
     3663, 3663,  967,  967,  967,  970,  970,  970,  970,  970,

      970,  970,  970,  970,  970,  970, 3663,  970, 3663,  970,
      970, 3663, 3663,  970, 3663, 3663, 3663, 3663, 3663,  970,
      970,  970,  970,  970,  974,  974,  974,  974,  974,  974,
      974,  974,  974,  974,  974, 3663,  974, 3663,  974,  974,
     3663, 3663,  974, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
      974,  974,  974,  976,  976,  976,  976,  976,  976,  976,
      976,  976,  976,  976, 3663,  976, 3663,  976,  976, 3663,
     3663,  976, 3663, 3663, 3663, 3663, 3663, 3663, 3663,  976,
      976,  976,  979,  979,  979,  979,  979,  979,  979,  979,
      979,  979,  979, 3663,  979, 3663,  979,  979, 3663, 3663,

      979, 3663,  979, 3663, 3663, 3663, 3663, 3663,  979,  979,
      979,  994,  994,  994,  994,  994,  994,  994,  994,  994,
      994,  994, 3663,  994, 3663,  994,  994, 3663, 3663,  994,
     3663, 3663, 3663, 3663, 3663, 3663, 3663,  994,  994,  994,
      623,  623,  623,  623, 3663,  623,  623, 3663,  623,  623,
      623,  623,  623,  623,  623, 1004, 1004, 3663, 1004, 1004,
     1004, 1004, 1004, 1004, 1004,  628,  628, 3663, 3663,  628,
     3663, 3663, 3663, 3663, 3663,  628,  628,  628,  628, 3663,
      628,  628, 3663,  628,  628,  628,  628,  628,  628,  628,
     1006, 1006, 3663, 1006, 1006, 1006, 1006, 1006, 1006, 1006,

      630, 3663,  630,  630,  630,  630,  630,  630,  630,  630,
      630,  630,  630,  630,  630,  630,  630,  630,  630,  630,
      630,  630,  630,  630,  630,  630,  630, 1007, 3663, 1007,
     1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007,
     1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007,
     1007, 1007, 1007, 1007,  636,  636,  636, 3663, 3663,  636,
      636, 3663,  636,  636,  636,  636,  636,  636,  636, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,  640,  640,

      640,  640, 3663,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  642, 3663,  642,  642,
      642,  642,  642,  642,  642,  642,  642,  642,  642,  642,
      642,  642,  642,  642,  642,  642,  642,  642,  642,  642,
      642,  642,  642,  645, 3663,  645, 3663,  645, 3663,  645,
      645,  645,  645,  645,  645,  645,  645,  645,  645,  645,
      645,  645,  645,  645,  645,  645,  645,  645,  657,  657,
      657,  657, 3663,  657,  657, 3663,  657,  657,  657,  657,
      657,  657,  657, 1017, 1017, 3663, 1017, 1017, 1017, 1017,
     1017, 1017, 1017,  661,  661,  661,  661, 3663,  661,  661,

     3663,  661,  661,  661,  661,  661,  661,  661, 1018, 1018,
     3663, 1018, 1018, 1018, 1018, 1018, 1018, 1018,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  666,  666,  666,
      666,  666,  666,  666,  666,  666,  666,  666,  666,  666,
      666,  666,  666,  666,  666,  666,  666,  666,  666,  666,
      666,  666,  666,  666,  666,  666,  671,  671,  671,  671,
     3663,  671,  671, 3663,  671,  671,  671,  671,  671,  671,
      671, 1031, 1031, 3663, 1031, 1031, 1031, 1031, 1031, 1031,

     1031,  677, 3663,  677,  677,  677,  677,  677,  677,  677,
      677,  677,  677,  677,  677,  677,  677,  677,  677,  677,
      677,  677,  677,  677,  677,  677,  677,  677,  679, 3663,
      679,  679,  679,  679,  679,  679,  679,  679, 3663,  679,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
      679,  679,  679,  679,  679, 1034, 3663, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,

      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 3663, 1063, 3663, 1063, 1063, 3663, 3663, 1063, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 1063, 1063, 1063, 1064,
     1064, 1064, 3663, 3663, 1064, 1064, 3663, 1064, 1064, 1064,
     1064, 1064, 1064, 1064,  702, 3663, 3663,  702,  702, 3663,
      702,  702,  702,  702,  702,  702,  702, 1065, 3663, 3663,

     1065, 1065, 3663, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1070,
     1070, 3663, 3663, 3663, 3663, 3663, 1070, 3663, 3663, 1070,
     1070, 1070, 3663, 3663, 1070, 1070, 3663, 1070, 1070, 1070,
     1070, 1070, 1070, 1070,  377,  377, 3663, 3663, 3663, 3663,
     3663,  377, 3663, 3663,  377,  377,  377,  377, 3663,  377,
      377, 3663,  377,  377,  377,  377,  377,  377,  377,  711,
     3663, 3663, 3663, 3663, 3663,  711,  711, 3663,  711,  711,

      711,  711,  711,  711,  711, 1169, 1169, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 1169, 1169, 1169, 3663, 3663,
     1169, 1169, 3663, 1169, 1169, 1169, 1169, 1169, 1169, 1169,
     1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170,
     1170, 3663, 1170, 3663, 1170, 1170, 3663, 3663, 1170, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 1170, 1170, 1170, 1171,
     1171, 1171, 3663, 3663, 1171, 1171, 3663, 1171, 1171, 1171,
     1171, 1171, 1171, 1171,  471,  471,  471,  471, 3663,  471,
      471, 3663,  471,  471,  471,  471,  471,  471,  471,  802,
      802, 3663,  802,  802,  802,  802,  802,  802,  802, 1213,

     1213, 1213, 3663, 3663, 1213, 1213, 3663, 1213, 1213, 1213,
     1213, 1213, 1213, 1213,  510,  510,  510,  510, 3663,  510,
      510, 3663,  510,  510,  510,  510,  510,  510,  510,  531,
      531,  531, 3663, 3663,  531,  531, 3663,  531,  531,  531,
      531,  531,  531,  531, 1281, 1281, 1281, 1281, 1281, 1281,
     1281, 1281, 1281, 1281, 1281, 3663, 1281, 3663, 1281, 1281,
     3663, 3663, 1281, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     1281, 1281, 1281, 1284, 1284, 1284, 1284, 1284, 1284, 1284,
     1284, 1284, 1284, 1284, 3663, 1284, 3663, 1284, 1284, 3663,
     3663, 1284, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 1284,

     1284, 1284, 1285, 1285, 1285, 1285, 1285, 1285, 1285, 1285,
     1285, 1285, 1285, 3663, 1285, 3663, 1285, 1285, 3663, 3663,
     1285, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 1285, 1285,
     1285, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306, 1306,
     1306, 1306, 3663, 1306, 3663, 1306, 1306, 3663, 3663, 1306,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 1306, 1306, 1306,
     1332, 1332, 1332, 1332, 1332, 1332, 1332, 1332, 1332, 1332,
     1332, 3663, 1332, 3663, 1332, 1332, 3663, 3663, 1332, 3663,
     3663, 1332, 3663, 3663, 3663, 3663, 1332, 1332, 1332, 1359,
     1359, 1359, 3663, 3663, 1359, 1359, 3663, 1359, 1359, 1359,

     1359, 1359, 1359, 1359, 1360, 1360, 3663, 3663, 1360, 3663,
     3663, 3663, 3663, 3663, 1360, 1360, 1360, 3663, 3663, 1360,
     1360, 3663, 1360, 1360, 1360, 1360, 1360, 1360, 1360,  630,
     3663,  630,  630,  630,  630,  630,  630,  630,  630,  630,
      630,  630,  630,  630,  630,  630,  630,  630,  630,  630,
      630,  630,  630,  630,  630,  630, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1368, 1368, 1368, 3663, 3663,
     1368, 1368, 3663, 1368, 1368, 1368, 1368, 1368, 1368, 1368,

     1369, 1369, 1369, 3663, 3663, 1369, 1369, 3663, 1369, 1369,
     1369, 1369, 1369, 1369, 1369, 1384, 1384, 1384, 3663, 3663,
     1384, 1384, 3663, 1384, 1384, 1384, 1384, 1384, 1384, 1384,
     1034, 3663, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034, 1034,
     1034, 1034, 1034, 1034, 1034, 1034, 1034, 1064, 1064, 1064,
     3663, 3663, 1064, 1064, 3663, 1064, 1064, 1064, 1064, 1064,
     1064, 1064, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,

     1068, 1070, 1070, 3663, 3663, 3663, 3663, 3663, 1070, 3663,
     3663, 1070, 1070, 1070, 3663, 3663, 1070, 1070, 3663, 1070,
     1070, 1070, 1070, 1070, 1070, 1070,  377,  377, 3663, 3663,
     3663, 3663, 3663,  377, 3663, 3663,  377,  377,  377,  377,
     3663,  377,  377, 3663,  377,  377,  377,  377,  377,  377,
      377,  711, 3663, 3663, 3663, 3663, 3663,  711,  711, 3663,
      711,  711,  711,  711,  711,  711,  711, 1422, 1422, 1422,
     1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422,
     1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422,
     1422, 1422, 1422, 1422, 1422, 1422, 1425, 1425, 1425, 1425,

     1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425,
     1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425,
     1425, 1425, 1425, 1425, 1425, 1432, 1432, 1432, 1432, 1432,
     1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432,
     1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432,
     1432, 1432, 1432, 1432, 1448, 1448, 1448, 1448, 1448, 1448,
     1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448,
     1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448,
     1448, 1448, 1448, 1154, 3663, 1154, 1154, 3663, 3663, 1154,
     1154, 1162, 3663, 1162, 1162, 3663, 3663, 1162, 1162, 1169,

     1169, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 1169,
     1169, 1169, 3663, 3663, 1169, 1169, 3663, 1169, 1169, 1169,
     1169, 1169, 1169, 1169, 1171, 1171, 1171, 3663, 3663, 1171,
     1171, 3663, 1171, 1171, 1171, 1171, 1171, 1171, 1171,  471,
      471,  471,  471, 3663,  471,  471, 3663,  471,  471,  471,
      471,  471,  471,  471,  802,  802, 3663,  802,  802,  802,
      802,  802,  802,  802, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523, 1523, 1526, 1526, 1526, 1526, 1526, 1526, 1526,

     1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
     1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
     1526, 1526, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
     1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
     1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
     1529, 1213, 1213, 1213, 3663, 3663, 1213, 1213, 3663, 1213,
     1213, 1213, 1213, 1213, 1213, 1213,  510,  510,  510,  510,
     3663,  510,  510, 3663,  510,  510,  510,  510,  510,  510,
      510, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
     1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627,

     1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
     1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
     1630, 3663, 1630, 3663, 1630, 1630, 3663, 3663, 1630, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 1630, 1630, 1630, 1646,
     1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646,
     1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646,
     1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1648, 1648,
     1648, 1648, 1648, 1648, 1648, 1648, 1648, 1648, 1648, 3663,
     1648, 3663, 1648, 1648, 3663, 3663, 1648, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 1648, 1648, 1648, 1657, 1657, 1657,

     1657, 1657, 1657, 1657, 1657, 1657, 1657, 1657, 3663, 1657,
     3663, 1657, 1657, 3663, 3663, 1657, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 1657, 1657, 1657, 1659, 1659, 1659, 1659,
     1659, 1659, 1659, 1659, 1659, 1659, 1659, 3663, 1659, 3663,
     1659, 1659, 3663, 3663, 1659, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 1659, 1659, 1659, 1662, 1662, 1662, 1662, 1662,
     1662, 1662, 1662, 1662, 1662, 1662, 3663, 1662, 3663, 1662,
     1662, 3663, 3663, 1662, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 1662, 1662, 1662, 1680, 1680, 1680, 1680, 1680, 1680,
     1680, 1680, 1680, 1680, 1680, 3663, 1680, 3663, 1680, 1680,

     3663, 3663, 1680, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     1680, 1680, 1680, 1686, 1686, 1686, 1686, 1686, 1686, 1686,
     1686, 1686, 1686, 1686, 3663, 1686, 3663, 1686, 1686, 3663,
     3663, 1686, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 1686,
     1686, 1686, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695,
     1695, 1695, 1695, 3663, 1695, 3663, 1695, 1695, 3663, 3663,
     1695, 3663, 3663, 3663, 1695, 3663, 3663, 3663, 1695, 1695,
     1695, 1359, 1359, 1359, 3663, 3663, 1359, 1359, 3663, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1360, 1360, 3663, 3663,
     1360, 3663, 3663, 3663, 3663, 3663, 1360, 1360, 1360, 3663,

     3663, 1360, 1360, 3663, 1360, 1360, 1360, 1360, 1360, 1360,
     1360, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     3663, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
     1363, 3663, 1363, 1363, 3663, 3663, 1363, 1363, 1368, 1368,
     1368, 3663, 3663, 1368, 1368, 3663, 1368, 1368, 1368, 1368,
     1368, 1368, 1368, 1369, 1369, 1369, 3663, 3663, 1369, 1369,
     3663, 1369, 1369, 1369, 1369, 1369, 1369, 1369, 1384, 1384,
     1384, 3663, 3663, 1384, 1384, 3663, 1384, 1384, 1384, 1384,
     1384, 1384, 1384, 1402, 3663, 1402, 1402, 3663, 3663, 1402,

     1402, 1406, 3663, 1406, 1406, 3663, 3663, 1406, 1406, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 3663, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1727, 1727,
     1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
     1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
     1727, 1727, 1727, 1727, 1727, 1727, 1727,  377,  377, 3663,
     3663, 3663, 3663, 3663,  377, 3663, 3663,  377,  377,  377,
      377, 3663,  377,  377, 3663,  377,  377,  377,  377,  377,
      377,  377, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731,

     1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731,
     1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731,
     1731, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422,
     1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422,
     1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422,
     1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425,
     1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425,
     1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1425, 1432,
     1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432,
     1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432,

     1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1448, 1448,
     1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448,
     1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448,
     1448, 1448, 1448, 1448, 1448, 1448, 1448, 1778, 1778, 1778,
     1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778,
     1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778,
     1778, 1778, 1778, 1778, 1778, 1778,  711, 3663, 3663, 3663,
     3663, 3663,  711,  711, 3663,  711,  711,  711,  711,  711,
      711,  711, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,

     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
     1784, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523, 1523,
     1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
     1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
     1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1529,
     1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
     1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
     1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,  471,  471,

      471,  471, 3663,  471,  471, 3663,  471,  471,  471,  471,
      471,  471,  471,  802,  802, 3663,  802,  802,  802,  802,
      802,  802,  802,  510,  510,  510,  510, 3663,  510,  510,
     3663,  510,  510,  510,  510,  510,  510,  510, 1574, 3663,
     1574, 1574, 3663, 3663, 1574, 1574, 1578, 3663, 1578, 1578,
     3663, 3663, 1578, 1578, 1582, 3663, 1582, 1582, 3663, 3663,
     1582, 1582, 1586, 3663, 1586, 1586, 3663, 3663, 1586, 1586,
     1590, 3663, 1590, 1590, 3663, 3663, 1590, 1590, 1594, 3663,
     1594, 1594, 3663, 3663, 1594, 1594, 1604, 3663, 1604, 1604,
     3663, 3663, 1604, 1604, 1608, 3663, 1608, 1608, 3663, 3663,

     1608, 1608, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
     1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
     1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
     1890, 1892, 1892, 1892, 1892, 1892, 1892, 1892, 1892, 1892,
     1892, 1892, 3663, 1892, 3663, 1892, 1892, 3663, 3663, 1892,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 1892, 1892, 1892,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,

     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1627, 1627,
     1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
     1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
     1627, 1627, 1627, 1627, 1627, 1627, 1627, 1646, 1646, 1646,
     1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646,
     1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646,
     1646, 1646, 1646, 1646, 1646, 1646, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,

     1934, 1934, 1934, 1934, 1934, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 1958, 3663, 1958, 3663, 1958, 1958,
     3663, 3663, 1958, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     1958, 1958, 1958, 1961, 1961, 1961, 1961, 1961, 1961, 1961,
     1961, 1961, 1961, 1961, 3663, 1961, 3663, 1961, 1961, 3663,
     3663, 1961, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 1961,
     1961, 1961, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,

     1962, 1962, 1962, 3663, 1962, 3663, 1962, 1962, 3663, 3663,
     1962, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 1962, 1962,
     1962, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,
     1965, 1965, 3663, 1965, 3663, 1965, 1965, 3663, 3663, 1965,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 1965, 1965, 1965,
     1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
     1970, 3663, 1970, 3663, 1970, 1970, 3663, 3663, 1970, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 1970, 1970, 1970, 1980,
     1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980,
     3663, 1980, 3663, 1980, 1980, 3663, 3663, 1980, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 1980, 1980, 1980, 1701, 3663,
     1701, 1701, 3663, 3663, 1701, 1701, 1705, 3663, 1705, 1705,
     3663, 3663, 1705, 1705, 1982, 1982, 1982, 1982, 1982, 1982,
     1982, 1982, 1982, 1982, 1982, 3663, 1982, 3663, 1982, 1982,
     3663, 3663, 1982, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     1982, 1982, 1982, 1711, 3663, 1711, 1711, 3663, 3663, 1711,
     1711, 1715, 3663, 1715, 1715, 3663, 3663, 1715, 1715,  377,
      377, 3663, 3663, 3663, 3663, 3663,  377, 3663, 3663,  377,
      377,  377,  377, 3663,  377,  377, 3663,  377,  377,  377,
      377,  377,  377,  377,  711, 3663, 3663, 3663, 3663, 3663,

      711,  711, 3663,  711,  711,  711,  711,  711,  711,  711,
     1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
     1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
     1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1731,
     1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731,
     1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731,
     1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 2006, 2006,
     2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 3663,
     2006, 3663, 2006, 2006, 3663, 3663, 2006, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 2006, 2006, 2006, 1432, 1432, 1432,

     1432, 1432, 1432, 1432, 1432, 1432, 3663, 1432, 1432, 1432,
     1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432, 1432,
     1432, 1432, 1432, 1432, 1432, 1432, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 1448, 1448, 1448, 1448, 1448,
     1448, 1448, 1448, 1448, 3663, 1448, 1448, 1448, 1448, 1448,
     1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448, 1448,
     1448, 1448, 1448, 1448, 1778, 1778, 1778, 1778, 1778, 1778,
     1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778,

     1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778,
     1778, 1778, 1778, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
     1784, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,
     2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,
     2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,

     2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109,
     2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109,
     2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 1529,
     1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 3663, 1529,
     1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,
     1529, 1529, 1529, 1529, 1529, 1529, 1529, 1529,  471,  471,
      471,  471, 3663,  471,  471, 3663,  471,  471,  471,  471,
      471,  471,  471, 2133, 2133, 2133, 2133, 2133, 2133, 2133,
     2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133,
     2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133,

     2133, 2133,  802,  802, 3663,  802,  802,  802,  802,  802,
      802,  802,  510,  510,  510,  510, 3663,  510,  510, 3663,
      510,  510,  510,  510,  510,  510,  510, 1890, 1890, 1890,
     1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
     1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
     1890, 1890, 1890, 1890, 1890, 1890, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,

     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 2172, 2172, 2172, 2172, 2172, 2172,
     2172, 2172, 2172, 2172, 2172, 3663, 2172, 3663, 2172, 2172,
     3663, 3663, 2172, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     2172, 2172, 2172, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
     1627, 1627, 3663, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
     1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
     1627, 1627, 2176, 2176, 2176, 2176, 2176, 2176, 2176, 2176,
     2176, 2176, 2176, 3663, 2176, 3663, 2176, 2176, 3663, 3663,
     2176, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2176, 2176,

     2176, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179,
     2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179,
     2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179,
     2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182,
     2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182,
     2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 1646,
     1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 3663, 1646,
     1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646,
     1646, 1646, 1646, 1646, 1646, 1646, 1646, 1646, 2202, 2202,
     2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 2202, 3663,

     2202, 3663, 2202, 2202, 3663, 3663, 2202, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 2202, 2202, 2202, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 2212, 2212, 2212, 2212,
     2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212,
     2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212,
     2212, 2212, 2212, 2212, 2212, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,

     1943, 1943, 1943, 1943, 2216, 2216, 2216, 2216, 2216, 2216,
     2216, 2216, 2216, 2216, 2216, 3663, 2216, 3663, 2216, 2216,
     3663, 3663, 2216, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     2216, 2216, 2216, 2218, 2218, 2218, 2218, 2218, 2218, 2218,
     2218, 2218, 2218, 2218, 3663, 2218, 3663, 2218, 2218, 3663,
     3663, 2218, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2218,
     2218, 2218, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220,
     2220, 2220, 2220, 3663, 2220, 3663, 2220, 2220, 3663, 3663,
     2220, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2220, 2220,
     2220, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224, 2224,

     2224, 2224, 3663, 2224, 3663, 2224, 2224, 3663, 3663, 2224,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 2224, 2224, 2224,
     2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227,
     2227, 3663, 2227, 3663, 2227, 2227, 3663, 3663, 2227, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2227, 2227, 2227, 2237,
     2237, 2237, 2237, 2237, 2237, 2237, 2237, 2237, 2237, 2237,
     3663, 2237, 3663, 2237, 2237, 3663, 3663, 2237, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 2237, 2237, 2237, 2238, 2238,
     2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238, 3663,
     2238, 3663, 2238, 2238, 3663, 3663, 2238, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 2238, 2238, 2238, 2244, 2244, 2244,
     2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
     2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
     2244, 2244, 2244, 2244, 2244, 2244, 1727, 1727, 1727, 1727,
     1727, 1727, 1727, 1727, 1727, 3663, 1727, 1727, 1727, 1727,
     1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
     1727, 1727, 1727, 1727, 1727,  377,  377, 3663, 3663, 3663,
     3663, 3663,  377, 3663, 3663,  377,  377,  377,  377, 3663,
      377,  377, 3663,  377,  377,  377,  377,  377,  377,  377,
     1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 3663,

     1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731,
     1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 2264,
     2264, 2264, 2264, 2264, 2264, 2264, 2264, 2264, 2264, 2264,
     3663, 2264, 3663, 2264, 2264, 3663, 3663, 2264, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 2264, 2264, 2264,  711, 3663,
     3663, 3663, 3663, 3663,  711,  711, 3663,  711,  711,  711,
      711,  711,  711,  711, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2291, 2291, 2291, 2291, 2291, 2291, 2291,

     2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291,
     2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291,
     2291, 2291, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299,
     2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299,
     2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299,
     2299, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778,
     3663, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778,
     1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778, 1778,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,

     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 3663, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 2085, 2085,
     2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,
     2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,
     2085, 2085, 2085, 2085, 2085, 2085, 2085, 2333, 2333, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2109, 2109, 2109, 2109,

     2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109,
     2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109,
     2109, 2109, 2109, 2109, 2109, 2347, 2347, 2347, 2347, 2347,
     2347, 2347, 2347, 2347, 2347, 2347, 3663, 2347, 3663, 2347,
     2347, 3663, 3663, 2347, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 2347, 2347, 2347,  471,  471,  471,  471, 3663,  471,
      471, 3663,  471,  471,  471,  471,  471,  471,  471, 2359,
     2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359,
     3663, 2359, 3663, 2359, 2359, 3663, 3663, 2359, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 2359, 2359, 2359, 2133, 2133,

     2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133,
     2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133,
     2133, 2133, 2133, 2133, 2133, 2133, 2133,  802,  802, 3663,
      802,  802,  802,  802,  802,  802,  802, 2372, 2372, 2372,
     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372,
     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372,
     2372, 2372, 2372, 2372, 2372, 2372, 2381, 2381, 2381, 2381,
     2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381,
     2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381,
     2381, 2381, 2381, 2381, 2381,  510,  510, 3663, 3663, 3663,

     3663, 3663,  510, 3663, 3663,  510,  510,  510,  510, 3663,
      510,  510, 3663,  510,  510,  510,  510,  510,  510,  510,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 3663, 2388, 3663, 2388, 2388, 3663, 3663, 2388, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2388, 2388, 2388, 1890,
     1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 3663, 1890,
     1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
     1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 3663, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,

     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 3663, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 2397, 2397, 2397, 2397,
     2397, 2397, 2397, 2397, 2397, 2397, 2397, 3663, 2397, 3663,
     2397, 2397, 3663, 3663, 2397, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 2397, 2397, 2397, 2179, 2179, 2179, 2179, 2179,
     2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179,
     2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179,
     2179, 2179, 2179, 2179, 2402, 2402, 2402, 2402, 2402, 2402,

     2402, 2402, 2402, 2402, 2402, 3663, 2402, 3663, 2402, 2402,
     3663, 3663, 2402, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     2402, 2402, 2402, 2182, 2182, 2182, 2182, 2182, 2182, 2182,
     2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182,
     2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182,
     2182, 2182, 2408, 2408, 2408, 2408, 2408, 2408, 2408, 2408,
     2408, 2408, 2408, 3663, 2408, 3663, 2408, 2408, 3663, 3663,
     2408, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2408, 2408,
     2408, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419,

     2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2423, 2423, 2423, 2423, 2423, 2423, 2423, 2423, 2423, 2423,
     2423, 3663, 2423, 3663, 2423, 2423, 3663, 3663, 2423, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2423, 2423, 2423, 2426,
     2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426,
     2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426,
     2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 3663, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934, 1934,
     1934, 1934, 1934, 1934, 1934, 1934, 1934, 2212, 2212, 2212,

     2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212,
     2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212,
     2212, 2212, 2212, 2212, 2212, 2212, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 3663, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1943,
     1943, 1943, 1943, 1943, 1943, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2448, 2448, 2448, 2448, 2448, 2448,
     2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448,

     2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448,
     2448, 2448, 2448, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
     2452, 2452, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
     2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
     2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
     2244,  377,  377, 3663, 3663, 3663, 3663, 3663,  377, 3663,
     3663,  377,  377,  377,  377, 3663,  377,  377, 3663,  377,
      377,  377,  377,  377,  377,  377, 2469, 2469, 2469, 2469,

     2469, 2469, 2469, 2469, 2469, 2469, 2469, 3663, 2469, 3663,
     2469, 2469, 3663, 3663, 2469, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 2469, 2469, 2469, 2255, 3663, 2255, 2255, 3663,
     3663, 2255, 2255, 2259, 3663, 2259, 2259, 3663, 3663, 2259,
     2259, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470,
     2470, 2470, 3663, 2470, 3663, 2470, 2470, 3663, 3663, 2470,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 2470, 2470, 2470,
     2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,
     2471, 3663, 2471, 3663, 2471, 2471, 3663, 3663, 2471, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2471, 2471, 2471, 2019,

     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 3663, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019,
     2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019, 2502, 2502,
     3663, 3663, 3663, 3663, 3663, 2502, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 2502, 2502, 3663, 2502, 2502, 2502, 2502,
     2502, 2502, 2502, 2502, 2505, 2505, 2505, 2505, 2505, 2505,
     2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505,
     2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505,
     2505, 2505, 2505, 2291, 2291, 2291, 2291, 2291, 2291, 2291,
     2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291,

     2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291,
     2291, 2291,  711, 3663, 3663, 3663, 3663, 3663,  711,  711,
     3663,  711,  711,  711,  711,  711,  711,  711, 2299, 2299,
     2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299,
     2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299,
     2299, 2299, 2299, 2299, 2299, 2299, 2299, 2515, 2515, 2515,
     2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515,
     2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515,
     2515, 2515, 2515, 2515, 2515, 2515, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 3663, 2049, 2049, 2049, 2049,

     2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049, 2049,
     2049, 2049, 2049, 2049, 2049, 2526, 2526, 2526, 2526, 2526,
     2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526,
     2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526,
     2526, 2526, 2526, 2526, 2085, 2085, 2085, 2085, 2085, 2085,
     2085, 2085, 2085, 3663, 2085, 2085, 2085, 2085, 2085, 2085,
     2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,
     2085, 2085, 2085, 2549, 2549, 2549, 2549, 2549, 2549, 2549,
     2549, 2549, 2549, 2549, 3663, 2549, 3663, 2549, 2549, 3663,
     3663, 2549, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2549,

     2549, 2549, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333,
     2333, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109,
     3663, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109,
     2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109, 2109,
     2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566,
     2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566,
     2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2350,
     3663, 2350, 2350, 3663, 3663, 2350, 2350, 2354, 3663, 2354,

     2354, 3663, 3663, 2354, 2354,  471,  471,  471,  471, 3663,
      471,  471, 3663,  471,  471,  471,  471,  471,  471,  471,
     2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 3663,
     2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133,
     2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2133, 2581,
     2581, 2581, 2581, 2581, 2581, 2581, 2581, 2581, 2581, 2581,
     3663, 2581, 3663, 2581, 2581, 3663, 3663, 2581, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 2581, 2581, 2581, 2372, 2372,
     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372,
     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372,

     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2588, 2588, 2588,
     2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
     2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
     2588, 2588, 2588, 2588, 2588, 2588, 2590, 2590, 2590, 2590,
     2590, 2590, 2590, 2590, 2590, 2590, 2590, 3663, 2590, 3663,
     2590, 2590, 3663, 3663, 2590, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 2590, 2590, 2590, 2381, 2381, 2381, 2381, 2381,
     2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381,
     2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381,
     2381, 2381, 2381, 2381,  510,  510,  510,  510, 3663,  510,

      510, 3663,  510,  510,  510,  510,  510,  510,  510, 2598,
     2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 2598,
     3663, 2598, 3663, 2598, 2598, 3663, 3663, 2598, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 2598, 2598, 2598, 2600, 2600,
     2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 3663,
     2600, 3663, 2600, 2600, 3663, 3663, 2600, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 2600, 2600, 2600, 2602, 2602, 2602,
     2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 3663, 2602,
     3663, 2602, 2602, 3663, 3663, 2602, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 2602, 2602, 2602, 2603, 2603, 2603, 2603,

     2603, 2603, 2603, 2603, 2603, 2603, 2603, 3663, 2603, 3663,
     2603, 2603, 3663, 3663, 2603, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 2603, 2603, 2603, 2179, 2179, 2179, 2179, 2179,
     2179, 2179, 2179, 2179, 3663, 2179, 2179, 2179, 2179, 2179,
     2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179,
     2179, 2179, 2179, 2179, 2182, 2182, 2182, 2182, 2182, 2182,
     2182, 2182, 2182, 3663, 2182, 2182, 2182, 2182, 2182, 2182,
     2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182, 2182,
     2182, 2182, 2182, 2614, 2614, 2614, 2614, 2614, 2614, 2614,
     2614, 2614, 2614, 2614, 3663, 2614, 3663, 2614, 2614, 3663,

     3663, 2614, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2614,
     2614, 2614, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2419, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     2625, 2625, 2625, 2625, 2625, 2625, 2625, 2625, 2625, 2625,
     2625, 3663, 2625, 3663, 2625, 2625, 3663, 3663, 2625, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2625, 2625, 2625, 2426,

     2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426,
     2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426,
     2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2632, 2632,
     2632, 2632, 2632, 2632, 2632, 2632, 2632, 2632, 2632, 3663,
     2632, 3663, 2632, 2632, 3663, 3663, 2632, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 2632, 2632, 2632, 2212, 2212, 2212,
     2212, 2212, 2212, 2212, 2212, 2212, 3663, 2212, 2212, 2212,
     2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212,
     2212, 2212, 2212, 2212, 2212, 2212, 2637, 2637, 2637, 2637,
     2637, 2637, 2637, 2637, 2637, 2637, 2637, 3663, 2637, 3663,

     2637, 2637, 3663, 3663, 2637, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 2637, 2637, 2637, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2640, 2640, 2640, 2640, 2640, 2640,
     2640, 2640, 2640, 2640, 2640, 3663, 2640, 3663, 2640, 2640,
     3663, 3663, 2640, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     2640, 2640, 2640, 2643, 2643, 2643, 2643, 2643, 2643, 2643,
     2643, 2643, 2643, 2643, 3663, 2643, 3663, 2643, 2643, 3663,
     3663, 2643, 3663, 3663, 3663, 3663, 2643, 3663, 3663, 2643,

     2643, 2643, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646,
     2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646,
     2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646,
     2646, 2648, 2648, 2648, 2648, 2648, 2648, 2648, 2648, 2648,
     2648, 2648, 3663, 2648, 3663, 2648, 2648, 3663, 3663, 2648,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 2648, 2648, 2648,
     2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448,
     2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448,
     2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2651,
     2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651,

     3663, 2651, 3663, 2651, 2651, 3663, 3663, 2651, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 2651, 2651, 2651, 2452, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2244, 2244, 2244,
     2244, 2244, 2244, 2244, 2244, 2244, 3663, 2244, 2244, 2244,
     2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244, 2244,
     2244, 2244, 2244, 2244, 2244, 2244, 2665, 2665, 2665, 2665,
     2665, 2665, 2665, 2665, 2665, 2665, 2665, 3663, 2665, 3663,
     2665, 2665, 3663, 3663, 2665, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 2665, 2665, 2665, 2666, 2666, 2666, 2666, 2666,
     2666, 2666, 2666, 2666, 2666, 2666, 3663, 2666, 3663, 2666,
     2666, 3663, 3663, 2666, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 2666, 2666, 2666, 2667, 2667, 2667, 2667, 2667, 2667,
     2667, 2667, 2667, 2667, 2667, 3663, 2667, 3663, 2667, 2667,
     3663, 3663, 2667, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     2667, 2667, 2667,  377,  377, 3663, 3663, 3663, 3663, 3663,
      377, 3663, 3663,  377,  377,  377,  377, 3663,  377,  377,
     3663,  377,  377,  377,  377,  377,  377,  377,  711, 3663,
     3663, 3663,  711, 3663,  711,  711, 3663,  711,  711,  711,

      711,  711,  711,  711, 2688, 2688, 2688, 2688, 2688, 2688,
     2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688,
     2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688,
     2688, 2688, 2688, 2700, 2700, 2700, 2700, 2700, 2700, 2700,
     2700, 2700, 2700, 2700, 3663, 2700, 3663, 2700, 2700, 3663,
     3663, 2700, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2700,
     2700, 2700, 2701, 2701, 2701, 2701, 2701, 2701, 2701, 2701,
     2701, 2701, 2701, 3663, 2701, 3663, 2701, 2701, 3663, 3663,
     2701, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2701, 2701,
     2701, 2705, 2705, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 2705, 2705, 2705, 2705, 3663, 2705, 2705, 3663, 2705,
     2705, 2705, 2705, 2705, 2705, 2705, 2705, 2708, 2708, 2708,
     2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708,
     2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708,
     2708, 2708, 2708, 2708, 2708, 2708, 2505, 2505, 2505, 2505,
     2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505,
     2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505,
     2505, 2505, 2505, 2505, 2505, 2291, 2291, 2291, 2291, 2291,
     2291, 2291, 2291, 2291, 3663, 2291, 2291, 2291, 2291, 2291,
     2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291, 2291,

     2291, 2291, 2291, 2291, 2299, 2299, 2299, 2299, 2299, 2299,
     2299, 2299, 2299, 3663, 2299, 2299, 2299, 2299, 2299, 2299,
     2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299,
     2299, 2299, 2299, 2515, 2515, 2515, 2515, 2515, 2515, 2515,
     2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515,
     2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515,
     2515, 2515, 2722, 2722, 2722, 2722, 2722, 2722, 2722, 2722,
     2722, 2722, 2722, 3663, 2722, 3663, 2722, 2722, 3663, 3663,
     2722, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2722, 2722,
     2722, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526,

     2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526,
     2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526,
     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731,
     2731, 3663, 2731, 3663, 2731, 2731, 3663, 3663, 2731, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2731, 2731, 2731, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 3663, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333,
     2333, 2333, 2333, 2333, 2333, 2333, 2333, 2333, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,

     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2566, 2566, 2566,
     2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566,
     2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566,
     2566, 2566, 2566, 2566, 2566, 2566, 2779, 2779, 2779, 2779,
     2779, 2779, 2779, 2779, 2779, 2779, 2779, 3663, 2779, 3663,
     2779, 2779, 3663, 3663, 2779, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 2779, 2779, 2779,  471,  471, 3663, 3663, 3663,
     3663, 3663,  471, 3663, 3663,  471,  471,  471,  471, 3663,
      471,  471, 3663,  471,  471,  471,  471,  471,  471,  471,
      802,  802, 3663,  802,  802,  802,  802,  802,  802,  802,

     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 3663,
     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372,
     2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2372, 2588,
     2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
     2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
     2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2381, 2381,
     2381, 2381, 2381, 2381, 2381, 2381, 2381, 3663, 2381, 2381,
     2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381,
     2381, 2381, 2381, 2381, 2381, 2381, 2381,  510,  510,  510,
      510, 3663,  510,  510, 3663,  510,  510,  510,  510,  510,

      510,  510, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801,
     2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801,
     2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801,
     2801, 2803, 2803, 2803, 2803, 2803, 2803, 2803, 2803, 2803,
     2803, 2803, 3663, 2803, 3663, 2803, 2803, 3663, 3663, 2803,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 2803, 2803, 2803,
     2806, 2806, 2806, 2806, 2806, 2806, 2806, 2806, 2806, 2806,
     2806, 3663, 2806, 3663, 2806, 2806, 3663, 3663, 2806, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2806, 2806, 2806, 2807,
     2807, 2807, 2807, 2807, 2807, 2807, 2807, 2807, 2807, 2807,

     3663, 2807, 3663, 2807, 2807, 3663, 3663, 2807, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 2807, 2807, 2807, 2812, 2812,
     2812, 2812, 2812, 2812, 2812, 2812, 2812, 2812, 2812, 3663,
     2812, 3663, 2812, 2812, 3663, 3663, 2812, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 2812, 2812, 2812, 2814, 2814, 2814,
     2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814,
     2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814,
     2814, 2814, 2814, 2814, 2814, 2814, 2818, 2818, 2818, 2818,
     2818, 2818, 2818, 2818, 2818, 2818, 2818, 3663, 2818, 3663,
     2818, 2818, 3663, 3663, 2818, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 2818, 2818, 2818, 2819, 2819, 2819, 2819, 2819,
     2819, 2819, 2819, 2819, 2819, 2819, 3663, 2819, 3663, 2819,
     2819, 3663, 3663, 2819, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 2819, 2819, 2819, 2820, 2820, 2820, 2820, 2820, 2820,
     2820, 2820, 2820, 2820, 2820, 3663, 2820, 3663, 2820, 2820,
     3663, 3663, 2820, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     2820, 2820, 2820, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2419, 2419, 3663, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419,
     2419, 2419, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,

     2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     2623, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426,
     3663, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426,
     2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426, 2426,
     2830, 2830, 2830, 2830, 2830, 2830, 2830, 2830, 2830, 2830,
     2830, 3663, 2830, 3663, 2830, 2830, 3663, 3663, 2830, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2830, 2830, 2830, 2831,
     2831, 2831, 2831, 2831, 2831, 2831, 2831, 2831, 2831, 2831,
     3663, 2831, 3663, 2831, 2831, 3663, 3663, 2831, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 2831, 2831, 2831, 2834, 2834,
     2834, 2834, 2834, 2834, 2834, 2834, 2834, 2834, 2834, 3663,
     2834, 3663, 2834, 2834, 3663, 3663, 2834, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 2834, 2834, 2834, 2835, 2835, 2835,
     2835, 2835, 2835, 2835, 2835, 2835, 2835, 2835, 3663, 2835,
     3663, 2835, 2835, 3663, 3663, 2835, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 2835, 2835, 2835, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 3663, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 2836, 2836, 2836, 2836, 2836,

     2836, 2836, 2836, 2836, 2836, 2836, 3663, 2836, 3663, 2836,
     2836, 3663, 3663, 2836, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 2836, 2836, 2836, 2838, 2838, 2838, 2838, 2838, 2838,
     2838, 2838, 2838, 2838, 2838, 3663, 2838, 3663, 2838, 2838,
     3663, 3663, 2838, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     2838, 2838, 2838, 2839, 2839, 2839, 2839, 2839, 2839, 2839,
     2839, 2839, 2839, 2839, 3663, 2839, 3663, 2839, 2839, 3663,
     3663, 2839, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2839,
     2839, 2839, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646,
     2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646,

     2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646,
     2646, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448,
     3663, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448,
     2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448, 2448,
     2842, 2842, 2842, 2842, 2842, 2842, 2842, 2842, 2842, 2842,
     2842, 3663, 2842, 3663, 2842, 2842, 3663, 3663, 2842, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2842, 2842, 2842, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 3663, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452,
     2452, 2452, 2452, 2452, 2452, 2452, 2452, 2452, 2855, 2855,

     2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855,
     2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855,
     2855, 2855, 2855, 2855, 2855, 2855, 2855,  377,  377, 3663,
     3663, 3663, 3663, 3663,  377, 3663, 3663,  377,  377,  377,
      377, 3663,  377,  377, 3663,  377,  377,  377,  377,  377,
      377,  377, 2858, 2858, 3663, 3663, 3663, 3663, 3663, 2858,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 2858, 2858, 3663,
     2858, 2858, 2858, 2858, 2858, 2858, 2858, 2858,  711, 3663,
     3663, 3663,  711, 3663,  711,  711, 3663,  711,  711,  711,
      711,  711,  711,  711, 2688, 2688, 2688, 2688, 2688, 2688,

     2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688,
     2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688,
     2688, 2688, 2688, 2885, 2885, 2885, 2885, 2885, 2885, 2885,
     2885, 2885, 2885, 2885, 3663, 2885, 3663, 2885, 2885, 3663,
     3663, 2885, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2885,
     2885, 2885, 2705, 2705, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 2705, 2705, 2705, 2705, 3663, 2705, 2705, 3663,
     2705, 2705, 2705, 2705, 2705, 2705, 2705, 2705, 2887, 2887,
     3663, 2887, 2887, 2887, 2887, 2887, 2887, 2887, 2708, 2708,
     2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708,

     2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708,
     2708, 2708, 2708, 2708, 2708, 2708, 2708, 2505, 2505, 2505,
     2505, 2505, 2505, 2505, 2505, 2505, 3663, 2505, 2505, 2505,
     2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505, 2505,
     2505, 2505, 2505, 2505, 2505, 2505, 2892, 2892, 2892, 2892,
     2892, 2892, 2892, 2892, 2892, 2892, 2892, 3663, 2892, 3663,
     2892, 2892, 3663, 3663, 2892, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 2892, 2892, 2892, 2515, 2515, 2515, 2515, 2515,
     2515, 2515, 2515, 2515, 3663, 2515, 2515, 2515, 2515, 2515,
     2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515,

     2515, 2515, 2515, 2515, 2526, 2526, 2526, 2526, 2526, 2526,
     2526, 2526, 2526, 3663, 2526, 2526, 2526, 2526, 2526, 2526,
     2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526, 2526,
     2526, 2526, 2526, 2913, 2913, 2913, 2913, 2913, 2913, 2913,
     2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913,
     2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913,
     2913, 2913, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
     2774, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566,

     3663, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566,
     2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566, 2566,
     2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933,
     2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933,
     2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933,  471,
      471,  471,  471, 3663,  471,  471, 3663,  471,  471,  471,
      471,  471,  471,  471, 2938, 2938, 2938, 2938, 2938, 2938,
     2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938,
     2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938,
     2938, 2938, 2938,  802,  802, 3663,  802,  802,  802,  802,

      802,  802,  802, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
     2588, 2588, 3663, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
     2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
     2588, 2588,  510,  510,  510,  510, 3663,  510,  510, 3663,
      510,  510,  510,  510,  510,  510,  510, 2801, 2801, 2801,
     2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801,
     2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801,
     2801, 2801, 2801, 2801, 2801, 2801, 2947, 2947, 2947, 2947,
     2947, 2947, 2947, 2947, 2947, 2947, 2947, 3663, 2947, 3663,
     2947, 2947, 3663, 3663, 2947, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 2947, 2947, 2947, 2952, 2952, 2952, 2952, 2952,
     2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952,
     2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952,
     2952, 2952, 2952, 2952, 2814, 2814, 2814, 2814, 2814, 2814,
     2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814,
     2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814,
     2814, 2814, 2814, 2956, 2956, 2956, 2956, 2956, 2956, 2956,
     2956, 2956, 2956, 2956, 3663, 2956, 3663, 2956, 2956, 3663,
     3663, 2956, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2956,
     2956, 2956, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959,

     2959, 2959, 2959, 3663, 2959, 3663, 2959, 2959, 3663, 3663,
     2959, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2959, 2959,
     2959, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     3663, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     2963, 2963, 2963, 2963, 2963, 2963, 2963, 2963, 2963, 2963,
     2963, 3663, 2963, 3663, 2963, 2963, 3663, 3663, 2963, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 2963, 2963, 2963, 2964,
     2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964,
     3663, 2964, 3663, 2964, 2964, 3663, 3663, 2964, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 2964, 2964, 2964, 2966, 2966,
     2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966,
     2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966,
     2966, 2966, 2966, 2966, 2966, 2966, 2966, 2646, 2646, 2646,
     2646, 2646, 2646, 2646, 2646, 2646, 3663, 2646, 2646, 2646,
     2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646, 2646,
     2646, 2646, 2646, 2646, 2646, 2646, 2855, 2855, 2855, 2855,
     2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855,
     2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855,
     2855, 2855, 2855, 2855, 2855, 2988, 2988, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 2988, 2988, 2988, 2988, 3663,
     2988, 2988, 3663, 2988, 2988, 2988, 2988, 2988, 2988, 2988,
     2988, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991,
     2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991,
     2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991,
     2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 3663,
     2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688,
     2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 2688, 3013,
     3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013,
     3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013,

     3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013, 3018, 3018,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3018, 3018,
     3018, 3663, 3663, 3018, 3018, 3663, 3018, 3018, 3018, 3018,
     3018, 3018, 3018, 3018, 2502, 2502, 3663, 3663, 3663, 3663,
     3663, 2502, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2502,
     2502, 3663, 2502, 2502, 2502, 2502, 2502, 2502, 2502, 2708,
     2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 3663, 2708,
     2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708,
     2708, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 3031, 3031,
     3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031,

     3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031,
     3031, 3031, 3031, 3031, 3031, 3031, 3031, 2913, 2913, 2913,
     2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913,
     2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913,
     2913, 2913, 2913, 2913, 2913, 2913, 3042, 3042, 3042, 3042,
     3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042,
     3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042,
     3042, 3042, 3042, 3042, 3042, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 3663, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,

     2774, 2774, 2774, 2774, 3054, 3054, 3054, 3054, 3054, 3054,
     3054, 3054, 3054, 3054, 3054, 3663, 3054, 3663, 3054, 3054,
     3663, 3663, 3054, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3054, 3054, 3054, 2933, 2933, 2933, 2933, 2933, 2933, 2933,
     2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933,
     2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933, 2933,
     2933, 2933,  471,  471,  471,  471, 3663,  471,  471, 3663,
      471,  471,  471,  471,  471,  471,  471, 3058, 3058, 3058,
     3058, 3058, 3058, 3058, 3058, 3058, 3058, 3058, 3663, 3058,
     3663, 3058, 3058, 3663, 3663, 3058, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3058, 3058, 3058, 2938, 2938, 2938, 2938,
     2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938,
     2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938, 2938,
     2938, 2938, 2938, 2938, 2938,  510,  510,  510,  510, 3663,
      510,  510, 3663,  510,  510,  510,  510,  510,  510,  510,
     2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 3663,
     2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801,
     2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 2801, 3066,
     3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066, 3066,
     3663, 3066, 3663, 3066, 3066, 3663, 3663, 3066, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3066, 3066, 3066, 3069, 3069,
     3069, 3069, 3069, 3069, 3069, 3069, 3069, 3069, 3069, 3663,
     3069, 3663, 3069, 3069, 3663, 3663, 3069, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3069, 3069, 3069, 2952, 2952, 2952,
     2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952,
     2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952, 2952,
     2952, 2952, 2952, 2952, 2952, 2952, 2814, 2814, 2814, 2814,
     2814, 2814, 2814, 2814, 2814, 3663, 2814, 2814, 2814, 2814,
     2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814, 2814,
     2814, 2814, 2814, 2814, 2814, 3076, 3076, 3076, 3076, 3076,

     3076, 3076, 3076, 3076, 3076, 3076, 3663, 3076, 3663, 3076,
     3076, 3663, 3663, 3076, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3076, 3076, 3076, 3078, 3078, 3078, 3078, 3078, 3078,
     3078, 3078, 3078, 3078, 3078, 3663, 3078, 3663, 3078, 3078,
     3663, 3663, 3078, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3078, 3078, 3078, 2966, 2966, 2966, 2966, 2966, 2966, 2966,
     2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966,
     2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966, 2966,
     2966, 2966, 3080, 3080, 3080, 3080, 3080, 3080, 3080, 3080,
     3080, 3080, 3080, 3080, 3080, 3080, 3080, 3080, 3080, 3080,

     3080, 3080, 3080, 3080, 3080, 3080, 3080, 3080, 3080, 3080,
     3080, 3088, 3088, 3088, 3088, 3088, 3088, 3088, 3088, 3088,
     3088, 3088, 3088, 3088, 3088, 3088, 3088, 3088, 3088, 3088,
     3088, 3088, 3088, 3088, 3088, 3088, 3088, 3088, 3088, 3088,
     2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 3663,
     2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855,
     2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2988,
     2988, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 2988,
     2988, 2988, 2988, 3663, 2988, 2988, 3663, 2988, 2988, 2988,
     2988, 2988, 2988, 2988, 2988, 3099, 3099, 3663, 3099, 3099,

     3099, 3099, 3099, 3099, 3099, 2991, 2991, 2991, 2991, 2991,
     2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991,
     2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991, 2991,
     2991, 2991, 2991, 2991, 3013, 3013, 3013, 3013, 3013, 3013,
     3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013,
     3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013, 3013,
     3013, 3013, 3013, 3123, 3123, 3123, 3123, 3123, 3123, 3123,
     3123, 3123, 3123, 3123, 3123, 3123, 3123, 3123, 3123, 3123,
     3123, 3123, 3123, 3123, 3123, 3123, 3123, 3123, 3123, 3123,
     3123, 3123, 3018, 3018, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3018, 3018, 3018, 3663, 3663, 3018, 3018, 3663,
     3018, 3018, 3018, 3018, 3018, 3018, 3018, 3018, 3031, 3031,
     3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031,
     3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031, 3031,
     3031, 3031, 3031, 3031, 3031, 3031, 3031, 2913, 2913, 2913,
     2913, 2913, 2913, 2913, 2913, 2913, 3663, 2913, 2913, 2913,
     2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913, 2913,
     2913, 2913, 2913, 2913, 2913, 2913, 3042, 3042, 3042, 3042,
     3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042,
     3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042, 3042,

     3042, 3042, 3042, 3042, 3042, 3175, 3175, 3175, 3175, 3175,
     3175, 3175, 3175, 3175, 3175, 3175, 3175, 3175, 3175, 3175,
     3175, 3175, 3175, 3175, 3175, 3175, 3175, 3175, 3175, 3175,
     3175, 3175, 3175, 3175, 3180, 3180, 3180, 3180, 3180, 3180,
     3180, 3180, 3180, 3180, 3180, 3663, 3180, 3663, 3180, 3180,
     3663, 3663, 3180, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3180, 3180, 3180, 3199, 3199, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3199, 3199, 3199, 3663, 3663, 3199, 3199,
     3663, 3199, 3199, 3199, 3199, 3199, 3199, 3199, 3199, 2858,
     2858, 3663, 3663, 3663, 3663, 3663, 2858, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 2858, 2858, 3663, 2858, 2858, 2858,
     2858, 2858, 2858, 2858, 3227, 3227, 3227, 3227, 3227, 3227,
     3227, 3227, 3227, 3227, 3227, 3663, 3227, 3663, 3227, 3227,
     3663, 3663, 3227, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3227, 3227, 3227, 3228, 3228, 3228, 3228, 3228, 3228, 3228,
     3228, 3228, 3228, 3228, 3663, 3228, 3663, 3228, 3228, 3663,
     3663, 3228, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3228,
     3228, 3228,  711, 3663, 3663, 3663, 3663, 3663,  711,  711,
     3663,  711,  711,  711,  711,  711,  711,  711, 3240, 3240,
     3240, 3240, 3240, 3240, 3240, 3240, 3240, 3240, 3240, 3663,

     3240, 3663, 3240, 3240, 3663, 3663, 3240, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3240, 3240, 3240, 3275, 3275, 3275,
     3275, 3275, 3275, 3275, 3275, 3275, 3275, 3275, 3663, 3275,
     3663, 3275, 3275, 3663, 3663, 3275, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3275, 3275, 3275, 3288, 3288, 3288, 3288,
     3288, 3288, 3288, 3288, 3288, 3288, 3288, 3663, 3288, 3663,
     3288, 3288, 3663, 3663, 3288, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3288, 3288, 3288, 3297, 3297, 3297, 3297, 3297,
     3297, 3297, 3297, 3297, 3297, 3297, 3663, 3297, 3663, 3297,
     3297, 3663, 3663, 3297, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3297, 3297, 3297, 3307, 3307, 3307, 3307, 3307, 3307,
     3307, 3307, 3307, 3307, 3307, 3663, 3307, 3663, 3307, 3307,
     3663, 3663, 3307, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3307, 3307, 3307, 3318, 3318, 3318, 3318, 3318, 3318, 3318,
     3318, 3318, 3318, 3318, 3318, 3318, 3318, 3318, 3318, 3318,
     3318, 3318, 3318, 3318, 3318, 3318, 3318, 3318, 3318, 3318,
     3318, 3318, 3322, 3322, 3322, 3322, 3322, 3322, 3322, 3322,
     3322, 3322, 3322, 3663, 3322, 3663, 3322, 3322, 3663, 3663,
     3322, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3322, 3322,
     3322, 3323, 3323, 3323, 3323, 3323, 3323, 3323, 3323, 3323,

     3323, 3323, 3663, 3323, 3663, 3323, 3323, 3663, 3663, 3323,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3323, 3323, 3323,
     3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328,
     3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328,
     3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3328, 3332,
     3332, 3332, 3332, 3332, 3332, 3332, 3332, 3332, 3332, 3332,
     3663, 3332, 3663, 3332, 3332, 3663, 3663, 3332, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3332, 3332, 3332, 3340, 3340,
     3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340,
     3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340, 3340,

     3340, 3340, 3340, 3340, 3340, 3340, 3340, 3346, 3346, 3346,
     3346, 3346, 3346, 3346, 3346, 3346, 3346, 3346, 3663, 3346,
     3663, 3346, 3346, 3663, 3663, 3346, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3346, 3346, 3346, 3350, 3350, 3350, 3350,
     3350, 3350, 3350, 3350, 3350, 3350, 3350, 3663, 3350, 3663,
     3350, 3350, 3663, 3663, 3350, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3350, 3350, 3350, 3351, 3351, 3351, 3351, 3351,
     3351, 3351, 3351, 3351, 3351, 3351, 3663, 3351, 3663, 3351,
     3351, 3663, 3663, 3351, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3351, 3351, 3351, 3353, 3353, 3353, 3353, 3353, 3353,

     3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353,
     3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353,
     3353, 3353, 3353, 3356, 3356, 3356, 3356, 3356, 3356, 3356,
     3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356,
     3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356,
     3356, 3356, 3360, 3360, 3360, 3360, 3360, 3360, 3360, 3360,
     3360, 3360, 3360, 3663, 3360, 3663, 3360, 3360, 3663, 3663,
     3360, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3360, 3360,
     3360, 3361, 3361, 3361, 3361, 3361, 3361, 3361, 3361, 3361,
     3361, 3361, 3663, 3361, 3663, 3361, 3361, 3663, 3663, 3361,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3361, 3361, 3361,
     3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366,
     3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366,
     3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366, 3366, 3398,
     3398, 3398, 3398, 3398, 3398, 3398, 3398, 3398, 3398, 3398,
     3663, 3398, 3663, 3398, 3398, 3663, 3663, 3398, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3398, 3398, 3398, 3399, 3399,
     3399, 3399, 3399, 3399, 3399, 3399, 3399, 3399, 3399, 3663,
     3399, 3663, 3399, 3399, 3663, 3663, 3399, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3399, 3399, 3399, 3400, 3400, 3400,

     3400, 3400, 3400, 3400, 3400, 3400, 3400, 3400, 3663, 3400,
     3663, 3400, 3400, 3663, 3663, 3400, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3400, 3400, 3400, 3411, 3411, 3411, 3411,
     3411, 3411, 3411, 3411, 3411, 3411, 3411, 3663, 3411, 3663,
     3411, 3411, 3663, 3663, 3411, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3411, 3411, 3411, 3413, 3413, 3413, 3413, 3413,
     3413, 3413, 3413, 3413, 3413, 3413, 3663, 3413, 3663, 3413,
     3413, 3663, 3663, 3413, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3413, 3413, 3413, 3418, 3418, 3418, 3418, 3418, 3418,
     3418, 3418, 3418, 3418, 3418, 3663, 3418, 3663, 3418, 3418,

     3663, 3663, 3418, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3418, 3418, 3418, 3422, 3422, 3422, 3422, 3422, 3422, 3422,
     3422, 3422, 3422, 3422, 3663, 3422, 3663, 3422, 3422, 3663,
     3663, 3422, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3422,
     3422, 3422, 3423, 3423, 3423, 3423, 3423, 3423, 3423, 3423,
     3423, 3423, 3423, 3663, 3423, 3663, 3423, 3423, 3663, 3663,
     3423, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3423, 3423,
     3423, 3424, 3424, 3424, 3424, 3424, 3424, 3424, 3424, 3424,
     3424, 3424, 3663, 3424, 3663, 3424, 3424, 3663, 3663, 3424,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3424, 3424, 3424,

     3432, 3432, 3432, 3432, 3432, 3432, 3432, 3432, 3432, 3432,
     3432, 3663, 3432, 3663, 3432, 3432, 3663, 3663, 3432, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3432, 3432, 3432, 3433,
     3433, 3433, 3433, 3433, 3433, 3433, 3433, 3433, 3433, 3433,
     3663, 3433, 3663, 3433, 3433, 3663, 3663, 3433, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3433, 3433, 3433, 3442, 3442,
     3442, 3442, 3442, 3442, 3442, 3442, 3442, 3442, 3442, 3663,
     3442, 3663, 3442, 3442, 3663, 3663, 3442, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3442, 3442, 3442, 3446, 3446, 3446,
     3446, 3446, 3446, 3446, 3446, 3446, 3446, 3446, 3663, 3446,

     3663, 3446, 3446, 3663, 3663, 3446, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3446, 3446, 3446, 3457, 3457, 3457, 3457,
     3457, 3457, 3457, 3457, 3457, 3457, 3457, 3663, 3457, 3663,
     3457, 3457, 3663, 3663, 3457, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3457, 3457, 3457, 3462, 3462, 3462, 3462, 3462,
     3462, 3462, 3462, 3462, 3462, 3462, 3462, 3462, 3462, 3462,
     3462, 3462, 3462, 3462, 3462, 3462, 3462, 3462, 3462, 3462,
     3462, 3462, 3462, 3462, 3466, 3466, 3466, 3466, 3466, 3466,
     3466, 3466, 3466, 3466, 3466, 3663, 3466, 3663, 3466, 3466,
     3663, 3663, 3466, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3466, 3466, 3466, 3473, 3473, 3473, 3473, 3473, 3473, 3473,
     3473, 3473, 3473, 3473, 3663, 3473, 3663, 3473, 3473, 3663,
     3663, 3473, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3473,
     3473, 3473, 3474, 3474, 3474, 3474, 3474, 3474, 3474, 3474,
     3474, 3474, 3474, 3663, 3474, 3663, 3474, 3474, 3663, 3663,
     3474, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3474, 3474,
     3474, 3479, 3479, 3479, 3479, 3479, 3479, 3479, 3479, 3479,
     3479, 3479, 3663, 3479, 3663, 3479, 3479, 3663, 3663, 3479,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3479, 3479, 3479,
      711, 3663, 3663, 3663,  711, 3663,  711,  711, 3663,  711,

      711,  711,  711,  711,  711,  711, 3491, 3491, 3491, 3491,
     3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491,
     3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491, 3491,
     3491, 3491, 3491, 3491, 3491, 3494, 3494, 3494, 3494, 3494,
     3494, 3494, 3494, 3494, 3494, 3494, 3663, 3494, 3663, 3494,
     3494, 3663, 3663, 3494, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3494, 3494, 3494, 3512, 3512, 3512, 3512, 3512, 3512,
     3512, 3512, 3512, 3512, 3512, 3663, 3512, 3663, 3512, 3512,
     3663, 3663, 3512, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3512, 3512, 3512, 3513, 3513, 3513, 3513, 3513, 3513, 3513,

     3513, 3513, 3513, 3513, 3663, 3513, 3663, 3513, 3513, 3663,
     3663, 3513, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3513,
     3513, 3513, 3521, 3521, 3521, 3521, 3521, 3521, 3521, 3521,
     3521, 3521, 3521, 3663, 3521, 3663, 3521, 3521, 3663, 3663,
     3521, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3521, 3521,
     3521, 3522, 3522, 3522, 3522, 3522, 3522, 3522, 3522, 3522,
     3522, 3522, 3663, 3522, 3663, 3522, 3522, 3663, 3663, 3522,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3522, 3522, 3522,
     3531, 3531, 3531, 3531, 3531, 3531, 3531, 3531, 3531, 3531,
     3531, 3531, 3531, 3531, 3531, 3531, 3531, 3531, 3531, 3531,

     3531, 3531, 3531, 3531, 3531, 3531, 3531, 3531, 3531, 3535,
     3535, 3535, 3535, 3535, 3535, 3535, 3535, 3535, 3535, 3535,
     3535, 3535, 3535, 3535, 3535, 3535, 3535, 3535, 3535, 3535,
     3535, 3535, 3535, 3535, 3535, 3535, 3535, 3535, 3537, 3537,
     3537, 3537, 3537, 3537, 3537, 3537, 3537, 3537, 3537, 3537,
     3537, 3537, 3537, 3537, 3537, 3537, 3537, 3537, 3537, 3537,
     3537, 3537, 3537, 3537, 3537, 3537, 3537, 3548, 3548, 3548,
     3548, 3548, 3548, 3548, 3548, 3548, 3548, 3548, 3663, 3548,
     3663, 3548, 3548, 3663, 3663, 3548, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3548, 3548, 3548, 3549, 3549, 3549, 3549,

     3549, 3549, 3549, 3549, 3549, 3549, 3549, 3663, 3549, 3663,
     3549, 3549, 3663, 3663, 3549, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3549, 3549, 3549, 3555, 3555, 3555, 3555, 3555,
     3555, 3555, 3555, 3555, 3555, 3555, 3663, 3555, 3663, 3555,
     3555, 3663, 3663, 3555, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3555, 3555, 3555, 3556, 3556, 3556, 3556, 3556, 3556,
     3556, 3556, 3556, 3556, 3556, 3663, 3556, 3663, 3556, 3556,
     3663, 3663, 3556, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3556, 3556, 3556, 3572, 3572, 3572, 3572, 3572, 3572, 3572,
     3572, 3572, 3572, 3572, 3663, 3572, 3663, 3572, 3572, 3663,

     3663, 3572, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3572,
     3572, 3572, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576,
     3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576,
     3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576,
     3576, 3582, 3582, 3582, 3582, 3582, 3582, 3582, 3582, 3582,
     3582, 3582, 3582, 3582, 3582, 3582, 3582, 3582, 3582, 3582,
     3582, 3582, 3582, 3582, 3582, 3582, 3582, 3582, 3582, 3582,
     3585, 3585, 3585, 3585, 3585, 3585, 3585, 3585, 3585, 3585,
     3585, 3663, 3585, 3663, 3585, 3585, 3663, 3663, 3585, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3585, 3585, 3585, 3603,

     3603, 3603, 3603, 3603, 3603, 3603, 3603, 3603, 3603, 3603,
     3663, 3603, 3663, 3603, 3603, 3663, 3663, 3603, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3603, 3603, 3603, 3611, 3611,
     3611, 3611, 3611, 3611, 3611, 3611, 3611, 3611, 3611, 3663,
     3611, 3663, 3611, 3611, 3663, 3663, 3611, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3611, 3611, 3611, 3625, 3625, 3625,
     3625, 3625, 3625, 3625, 3625, 3625, 3625, 3625, 3663, 3625,
     3663, 3625, 3625, 3663, 3663, 3625, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3625, 3625, 3625, 3635, 3635, 3635, 3635,
     3635, 3635, 3635, 3635, 3635, 3635, 3635, 3663, 3635, 3663,

     3635, 3635, 3663, 3663, 3635, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3635, 3635, 3635, 3641, 3641, 3641, 3641, 3641,
     3641, 3641, 3641, 3641, 3641, 3641, 3663, 3641, 3663, 3641,
     3641, 3663, 3663, 3641, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3641, 3641, 3641, 3643, 3643, 3643, 3643, 3643, 3643,
     3643, 3643, 3643, 3643, 3643, 3663, 3643, 3663, 3643, 3643,
     3663, 3663, 3643, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3643, 3643, 3643, 3645, 3645, 3645, 3645, 3645, 3645, 3645,
     3645, 3645, 3645, 3645, 3663, 3645, 3663, 3645, 3645, 3663,
     3663, 3645, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3645,

     3645, 3645, 3650, 3650, 3650, 3650, 3650, 3650, 3650, 3650,
     3650, 3650, 3650, 3663, 3650, 3663, 3650, 3650, 3663, 3663,
     3650, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3650, 3650,
     3650, 3651, 3651, 3651, 3651, 3651, 3651, 3651, 3651, 3651,
     3651, 3651, 3663, 3651, 3663, 3651, 3651, 3663, 3663, 3651,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3651, 3651, 3651,
     3653, 3653, 3653, 3653, 3653, 3653, 3653, 3653, 3653, 3653,
     3653, 3663, 3653, 3663, 3653, 3653, 3663, 3663, 3653, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3653, 3653, 3653, 3656,
     3656, 3656, 3656, 3656, 3656, 3656, 3656, 3656, 3656, 3656,

     3663, 3656, 3663, 3656, 3656, 3663, 3663, 3656, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3656, 3656, 3656, 3660, 3660,
     3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660,
     3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660,
     3660, 3660, 3660, 3660, 3660, 3660, 3660,   59, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663
    } ;

static yyconst flex_int16_t yy_chk[25619] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        3, 1420,    3,    3,    4,    9,    4,    4,   10,   66,
      184,    3,    3,   66,  191,    4,    4,    5,  191,    5,
        5,   69,   69,    6,    3,    6,    6,  172,    4,    7,

        7,    7,    7,    7,    8,    8,    8,    8,    8,   49,
      184,    7,    7,   50,   49,    7,    8,    8,   50,   49,
        8,   15, 1421,   50,   16,    7,  169,    5,    9,  172,
        8,   10,   15,    6,    9,   16,    3,   10,    3,    3,
        4,   15,    4,    4,   16,   61,   61,   61,   61,   61,
      169,   27,   27,   27,   27,   27,    5,   62,   62,   62,
       62,   62,    6,   27,    7,   27,   27,  165,   70,    8,
       11,   11,   11,   11,   11,   11,   76,   27,   76,  153,
      153,   11,   70,   28,   28,   28,   28,   28,   35,   35,
       35,   35,   35,   35,   11,   28,   35,   28,   28,   77,

      165,  147,   35,   36,   36,   36,   36,   36,   36,   28,
       41,   36,   41,   41,   77,  147,   99,   36,   99,   42,
       99,   42,   42,   43,  162,   43,   43,  155,  155,   99,
       43,  174,  192,  192,   43, 1423,   11,   41,   11,   11,
       12,   12,   12,   12,   12,   12,   42,   43,  162,   57,
       58,   12,  201,  201,   57,   58,  108,   35,  174,   57,
       58,  167,  162,  168,   12,   63,   63,   63,   63,   63,
       57,   58,   36,   64,   64,   64,   64,   64,  200,   41,
      406,  185,  200,   82,   82,   82,   82,   82,   42,   43,
      108,   43,   43,   57,   58,   82,  108,  167,  262,  168,

      108,  406,  108,  185,   82,  108,   12,  262,   12,   12,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,

       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,

       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,

       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       25,   25,   25,   25,   25,  243,   25,   44,  159,   44,
       44,   25,   25,   78,   44,   78,   25,  101,   44,  101,
      243,  101,   53,   53,   53,   53,   53,   78,  159,  132,
      101,   44,  101,  173,   53,   54,   54,   54,   54,   54,

       78,  159,  430,  132,   25,  430,  166,   54,  212,   25,
      132,  218,  212,   25,  164,   25,   26,   26,   26,   26,
       26,  100,   26,  100,  218,  100,  173,   26,   26,  100,
      166,  816,   26,   44,  100,   44,   44,   53,  164,  166,
       53, 1427,   80,   80,   80,   80,   80,   80,  213,  213,
       54,   89,  164,   54,   80,  233,   89,   89,   89,  233,
       26,  236,  236,   89,   89,   26,  246,  246,   80,   26,
      816,   26,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,

       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,

       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,

       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39, 1428,   39,   39,   39,   39,   39,
       39,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,

       40,   40,   40, 1429,   40,   40,   40,   40,   40,   40,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,

       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       55,   55,   55,   55,   55,   55,   56,   56,   56,   56,
       56,   56,   71,   71,   71,   71,   71,  254,   55,   84,
       84,  237,  248,  248,   56,   84,  258,   84, 1430,   85,
      254,  160,   84,   84,   85,  237,   85,   95,   95,   85,
      258,   85,   85,   95,  263,   95,   85,   85,   86,   86,
       95,   95,   86,   71,   86,  476,   86,   86,  263,  160,
       88,   86,   86,   88,  160,   88,  324,   88,   88,   55,
      324,   88,   88,   88, 1431,   56,   83,   83,   83,   83,

       83,  268,   91,  268,  301,  301,   87,   91,   83,   91,
       91,   87,  476,   87,   91,   91,  285,   83,   87,   87,
       90,   87,  285,   87,   90,   90,  372,   98,  264,   98,
       90,   98,   90,   90,  259,  264,  478,   90,   90,   98,
       98,   98,   83,  259,  264,   92,  372,   83,  259,   83,
       92,  473,   92,   92,   83,   83,   93,   92,   92,   93,
      501,  286,  325,  325,   93,  499,   93,  286,   94,  158,
       93,   93,   93,   94,  473,   94,  478,   96,   94,   96,
       94,   96,   96,  257,   94,   94,   94,   96,  257,   96,
       96,  257,  499,  257,   96,   96,   97,  131,   97,  255,

       97,  158,  501,  255,   97,  287,  158,  158,  255,   97,
      450,  287,   97,  116,  116,  116,  116,  116, 1432,   97,
      117,  117,  117,  117,  117,  118,  118,  118,  118,  118,
      450,  131,  137,  137,  137,  137,  137,  131,  288,  161,
      370,  131,  370,  131,  288,  370,  131,  142,  142,  142,
      142,  142,  163,  137,  143,  143,  143,  143,  143,  144,
      144,  144,  144,  144,  148,  148,  148,  148,  148,  161,
      161,  170,  344,  252,  161,  163,  344,  171,  252,  270,
      252,  161,  270,  270,  163,  252,  252,  364,  270,  163,
      163,  170, 1437,  170,  177,  177,  177,  177,  177,  364,

      289,  171,  267,  267,  171,  148,  289, 1445,  267,  170,
      171,  267,  364,  171,  178,  178,  178,  178,  178,  179,
      179,  179,  179,  179,  188,  188,  188,  188,  188,  189,
      189,  189,  189,  189,  190,  190,  190,  190,  190,  197,
      197,  197,  197,  197,  198,  198,  198,  198,  198,  199,
      199,  199,  199,  199,  209,  209,  209,  209,  209,  210,
      210,  210,  210,  210,  211,  211,  211,  211,  211,  221,
      221,  221,  221,  221,  222,  222,  222,  222,  222,  223,
      223,  223,  223,  223,  229,  229,  229,  229,  229,  230,
      230,  230,  230,  230,  231,  231,  231,  231,  231,  238,

      238,  238,  238,  238,  256,  256,  256,  260,  266,  256,
      266,  260,  266,  345,  345,  351,  256,  355,  355,  351,
      260,  445, 1446,  429,  445,  260,  266,  275,  275,  275,
      275,  275,  276,  276,  276,  276,  276,  444,  518,  518,
      238,  277,  277,  277,  277,  277,  280,  280,  280,  280,
      280,  281,  281,  281,  281,  281,  282,  282,  282,  282,
      282,  283,  283,  283,  283,  283,  429,  305,  283,  290,
      290,  290,  290,  290,  291,  291,  291,  291,  291,  477,
      444,  513,  283,  294,  294,  294,  294,  294,  295,  295,
      295,  295,  295,  384,  385,  294,  384,  527,  527, 1448,

      295,  305,  309,  309,  309,  309,  309,  305,  513,  385,
      477,  305, 1458,  305,  384,  385,  305,  310,  310,  310,
      310,  310,  311,  311,  311,  311,  311,  315,  315,  315,
      315,  315,  316,  316,  316,  316,  316,  317,  317,  317,
      317,  317,  327,  327,  327,  327,  327,  328,  328,  328,
      328,  328,  329,  329,  329,  329,  329,  333,  333,  333,
      333,  333,  334,  334,  334,  334,  334,  335,  335,  335,
      335,  335,  348,  348,  348,  348,  348,  349,  349,  349,
      349,  349,  350,  350,  350,  350,  350,  353,  356,  360,
      360,  360,  360,  360,  367,  394,  368,  394,  368,  371,

      371,  371,  371,  371,  593,  388,  367, 1463,  387,  593,
      368,  371,  375,  375,  375,  375,  375,  387,  394,  367,
      388,  353,  356,  368,  375,  480,  388,  353,  356,  387,
      360,  353,  356,  353,  356,  392,  353,  356,  377,  377,
      377,  377,  377,  379,  379,  379,  379,  379,  515,  480,
      377,  392,  515,  524,  386,  379,  392,  524, 1469,  377,
      386,  418,  480,  418,  379,  380,  380,  380,  380,  380,
      381,  381,  381,  381,  381,  386,  389,  380,  389,  397,
      399,  389,  381,  391,  418,  391,  380,  393,  403,  393,
      397,  381,  399,  389,  383,  383,  383,  383,  383,  389,

      397,  399,  379, 1472,  391,  395,  383,  403,  393,  403,
      411,  400,  583,  381,  583,  383,  380,  648,  411,  395,
      648,  390,  390,  390,  390,  390,  395,  400,  537,  537,
      583,  411,  400,  390,  381,  382,  382,  382,  382,  382,
      382,  382,  382,  382,  382,  382,  382,  382,  382,  382,
      382,  382,  382,  383,  382,  382,  401,  382,  382,  382,
      382,  382,  382,  382,  390,  402,  401,  416,  396,  404,
      404,  401,  497,  382,  382,  382,  396,  401,  407,  407,
      496,  402,  396,  402,  481,  390,  402,  416,  416,  396,
      404,  405,  405,  398,  398,  398,  398,  398,  410,  407,

      410,  382,  382,  382,  382,  398,  408,  405,  409,  410,
      497,  619,  405,  496,  398,  412,  415,  619,  481,  410,
      408,  413,  409,  414,  412,  415,  413,  408,  419,  409,
      417,  414,  413,  414,  420,  421,  412,  415,  422,  417,
      419,  426,  413,  425,  414,  420,  422,  421,  423,  419,
      424,  417,  554,  554,  423,  420,  421,  425,  426,  422,
      424,  534,  426,  647,  425,  534,  424,  498, 1474,  423,
      486,  424,  439,  439,  439,  439,  439,  455,  455,  455,
      455,  455,  456,  456,  456,  456,  456,  460,  460,  460,
      460,  460,  464,  464,  464,  464,  464,  479,  486,  489,

      500,  492,  494,  456,  502,  498,  647,  504,  507,  508,
      508,  508,  508,  508,  514,  514,  514,  514,  514,  479,
      500,  605,  550,  489,  492,  494,  550,  505,  502,  605,
      483,  504,  507,  464,  474,  474,  474,  474,  474,  474,
      474,  474,  474,  474,  474,  474,  474,  474,  474,  474,
      474,  474,  483,  474,  474,  505,  474,  474,  474,  474,
      474,  474,  474,  506,  512,  570,  591,  591,  483,  594,
      609,  594,  474,  474,  474,  523,  523,  523,  523,  523,
      533,  533,  533,  533,  533,  570,  609,  781,  512,  781,
      606,  506,  546,  546,  546,  546,  546,  606,  643,  643,

      474,  474,  474,  474,  475,  475,  475,  475,  475,  475,
      475,  475,  475,  475,  475,  475,  475,  475,  475,  475,
      475,  475,  689,  475,  475,  689,  475,  475,  475,  475,
      475,  475,  475,  548,  548,  548,  548,  548,  666,  666,
      684,  684,  475,  475,  475,  572,  572,  572,  572,  572,
      630,  559,  559,  559,  559,  559,  630,  572,  622,  622,
      622,  622,  622, 1481,  475,  625,  625,  625,  625,  625,
      475,  475,  475,  475,  482,  482,  482,  482,  482,  482,
      482,  482,  482,  482,  482,  482,  482,  482,  482,  482,
      482,  482,  559,  482,  482,  688,  482,  482,  482,  482,

      482,  482,  482,  576,  577,  631,  576, 1494,  858,  577,
      632,  631,  482,  482,  482,  663,  632,  633,  576,  663,
     1500,  577,  694,  633,  577,  578,  578,  578,  578,  578,
      626,  626,  626,  626,  626,  681,  858,  578,  688,  681,
      482,  482,  482,  482,  484,  484,  484,  484,  484,  484,
      484,  484,  484,  484,  484,  484,  484,  484,  484,  484,
      484,  484,  873,  484,  484,  694,  484,  484,  484,  484,
      484,  484,  484,  628,  628,  628,  628,  628,  695,  756,
      628,  695,  484,  484,  484,  635,  635,  635,  635,  635,
      756,  791, 1514,  791,  628,  637,  637,  637,  637,  637,

      655,  655,  655,  655,  655,  873,  874,  637,  818,  874,
      484,  484,  484,  484,  485,  485,  485,  485,  485,  485,
      485,  485,  485,  485,  485,  485,  485,  485,  485,  485,
      485,  485,  818,  485,  485,  812,  485,  485,  485,  485,
      485,  485,  485,  659,  659,  659,  659,  659,  823,  824,
     1518,  836,  485,  485,  485,  669,  669,  669,  669,  669,
      673,  673,  673,  673,  673,  703,  765,  703,  767, 1497,
      703,  812,  823,  824,  765,  836, 1497,  765,  767,  767,
      485,  485,  485,  485,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,

      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  488,  488,  488,  488,  488,  488,
      488,  488,  488,  488,  488,  488,  488,  488,  488,  488,
      488,  488,  704,  488,  488,  819,  488,  488,  488,  488,
      488,  488,  488,  814,  704,  769,  711,  711,  711,  711,
      711,  851,  488,  488,  488,  769,  769,  704,  711,  717,

      717,  717,  717,  717,  744,  744,  744,  744,  744,  880,
     1009,  717,  880,  819,  814,  851,  744, 1519, 1009,  831,
      488,  488,  488,  488,  490,  490,  490,  490,  490,  490,
      490,  490,  490,  490,  490,  490,  490,  490,  490,  490,
      490,  490,  835,  490,  490,  861,  490,  490,  490,  490,
      490,  490,  490,  719,  719,  719,  719,  719,  759,  831,
      856,  855,  490,  490,  490,  719,  759,  712,  712,  712,
      712,  712,  754,  773,  719,  766,  754,  759,  766,  712,
      835,  773,  856,  861,  773,  855, 1520,  754,  712,  766,
      490,  490,  490,  490,  491,  491,  491,  491,  491,  491,

      491,  491,  491,  491,  491,  491,  491,  491,  491,  491,
      491,  491,  712,  491,  491, 1206,  491,  491,  491,  491,
      491,  491,  491,  742,  742,  742,  742,  742, 1521,  859,
      760,  866,  491,  491,  491,  742,  760,  714,  714,  714,
      714,  714,  757,  775,  742, 1206,  757,  760,  771,  714,
      879,  866,  771,  859,  775, 1084, 1084,  757,  714,  771,
      491,  491,  491,  491,  493,  493,  493,  493,  493,  493,
      493,  493,  493,  493,  493,  493,  493,  493,  493,  493,
      493,  493,  714,  493,  493,  867,  493,  493,  493,  493,
      493,  493,  493,  879,  817,  723,  723,  723,  723,  723,

      761,  860,  493,  493,  493,  762,  761,  723,  732,  732,
      732,  732,  732,  762,  778,  778,  723,  761,  867,  966,
      732, 1010,  860, 1010,  762,  817,  778,  885,  966,  732,
      493,  493,  493,  493,  495,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      495,  495,  723,  495,  495,  755,  495,  495,  495,  495,
      495,  495,  495,  840,  776,  868,  776,  732,  871, 1522,
      885,  763,  495,  495,  495,  763,  758,  776,  764,  495,
      758,  755,  764,  768,  758,  914,  763,  768,  868,  869,
      862,  914,  755,  764,  840,  758, 1524,  857,  768,  871,

      495,  495,  495,  495,  503,  503,  503,  503,  503,  503,
      503,  503,  503,  503,  503,  503,  503,  503,  503,  503,
      503,  503,  862,  503,  503,  869,  503,  503,  503,  503,
      503,  503,  503,  872,  517,  519,  857,  724,  724,  724,
      724,  724,  503,  503,  503,  939,  770,  772,  526,  724,
      770,  772,  774,  891, 1210,  528,  774,  872,  724,  939,
      777,  770,  772,  886, 1191,  777,  886,  774,  517,  519,
      503,  503,  503,  503,  517,  519,  777, 1069,  517,  519,
      517,  519,  526,  517,  519, 1069, 1210,  892,  526,  528,
      892,  724,  526, 1528,  526,  528,  891,  526, 1191,  528,

      900,  528,  536,  900,  528,  532,  532,  532,  532,  532,
      532,  532,  532,  532,  532,  532,  532,  532,  532,  532,
      532,  532,  532,  906,  532,  532,  906,  532,  532,  532,
      532,  532,  532,  532,  779,  538,  536,  780, 1049,  779,
     1049,  780,  536,  532,  532,  532,  536, 1007,  536,  552,
      779,  536,  780, 1007, 1177, 1177,  555,  665,  800,  800,
      800,  800,  800, 1187,  725,  725,  725,  725,  725,  538,
      667,  532,  532,  532,  532,  538,  725,  683,  685,  538,
     1056,  538, 1056,  552,  538,  725, 1529, 1180, 1083,  552,
      555,  665, 1083,  552, 1187,  552,  555,  665,  552, 1531,

      555,  665,  555,  665,  667,  555,  665, 1425, 1425,  725,
      667,  683,  685, 1533,  667, 1180,  667,  683,  685,  667,
     1531,  683,  685,  683,  685,  813,  683,  685,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  899,  713,  713,  813,
      713,  713,  713,  713,  713,  713,  713,  750,  750,  750,
      750,  750,  917,  813, 1536,  917,  713,  713,  713,  750,
      731,  731,  731,  731,  731, 1176,  905,  923,  750, 1176,
      923, 1020,  731, 1026, 1020, 1037, 1026, 1542, 1037,  899,
      916,  731,  922, 1548,  713,  713,  713,  713,  715,  715,

      715,  715,  715,  715,  715,  715,  715,  715,  715,  715,
      715,  715,  715,  715,  715,  715,  731,  715,  715,  905,
      715,  715,  715,  715,  715,  715,  715,  726,  726,  726,
      726,  726, 1019,  916, 1025,  922,  715,  715,  715,  726,
      727,  727,  727,  727,  727, 1216, 1043, 1216,  726, 1043,
     1565, 1036,  727, 1006, 1006, 1006, 1006, 1006, 1042, 1192,
     1006,  727, 1190, 1195,  715,  715,  715,  715,  721,  721,
      721,  721,  721, 1183,  721, 1019, 1188, 1025,  726,  721,
      721,  728,  728,  728,  728,  728,  729,  729,  729,  729,
      729, 1201,  727,  728, 1036, 1192, 1194, 1183,  729, 1195,

     1188, 1042,  728, 1203, 1202, 1190, 1204,  729, 1169, 1169,
     1169, 1169, 1169,  721, 1205, 1223, 1194, 1223, 1574,  721,
      721,  730,  730,  730,  730,  730,  721, 1201, 1202,  729,
     1215, 1575,  728,  730,  733,  733,  733,  733,  733, 1203,
     1422, 1209,  730, 1204, 1422, 1205,  733,  735,  735,  735,
      735,  735, 1212,  736,  736,  736,  736,  736, 1214,  735,
     1230, 1215, 1230, 1523,  730,  736, 1551, 1523,  735,  737,
      737,  737,  737,  737,  736, 1237, 1212, 1237,  733, 1209,
     1544,  737, 1214,  733, 1544,  738,  738,  738,  738,  738,
      737,  733,  739,  739,  739,  739,  739,  738,  740,  740,

      740,  740,  740, 1551,  739,  736,  738,  735, 1433, 1244,
      740, 1244, 1251,  739, 1251, 1264, 1433, 1264,  737,  740,
      741,  741,  741,  741,  741,  743,  743,  743,  743,  743,
     1576, 1271,  741, 1271, 1370,  739, 1370,  743, 1377, 1577,
     1377,  741,  738, 1387, 1538, 1387,  743,  746,  746,  746,
      746,  746, 1394, 1447, 1394, 1447,  740, 1449, 1424,  746,
      747,  747,  747,  747,  747, 1449, 1526, 1526,  746, 1539,
     1530,  741,  747, 1540, 1537, 1578, 1538,  743, 1530, 1579,
     1580,  747,  748,  748,  748,  748,  748,  749,  749,  749,
      749,  749, 1424, 1539,  748, 1537, 1546, 1545, 1424,  749,

     1550,  746, 1424,  748, 1424, 1540, 1581, 1424,  749,  751,
      751,  751,  751,  751,  747,  752,  752,  752,  752,  752,
     1558,  751,  753,  753,  753,  753,  753,  752, 1546,  748,
      751, 1557, 1550, 1560,  753, 1545,  752, 1572,  808,  808,
      808,  808,  808,  753,  808, 1559,  749, 1582, 1561,  808,
      808, 1583, 1558, 1560,  751,  928,  928,  928,  928,  928,
      752,  930,  930,  930,  930,  930, 1584,  928, 1557, 1572,
     1559,  753, 1561,  930, 1360, 1360, 1360, 1360, 1360, 1585,
     1586, 1360,  753,  803,  803,  803,  803,  803,  803,  803,
      803,  803,  803,  803,  803,  803,  803,  803,  803,  803,

      803,  803,  803,  803,  803,  803,  803,  803,  803,  803,
      803,  803,  803,  803,  803,  803,  803,  803,  803,  803,
      803,  803,  803,  803,  803,  803,  803,  803,  803,  803,
      803,  803,  803,  803,  803,  803,  803,  803,  803,  803,
      803,  803,  803,  803,  803,  803,  803,  803,  803,  803,
      803,  803,  803,  815,  815,  815,  815,  815,  815,  815,
      815,  815,  815,  815,  815,  815,  815,  815,  815,  815,
      815, 1587,  815,  815, 1588,  815,  815,  815,  815,  815,
      815,  815,  932,  932,  932,  932,  932, 1589, 1573, 1590,
     1591,  815,  815,  815,  932,  958,  958,  958,  958,  958,

      971,  971,  971,  971,  971, 1592, 1593,  958, 1573, 1594,
     1595, 1596,  971, 1597, 1598, 1599, 1600, 1601, 1602,  815,
      815,  815,  815,  847,  847,  847,  847,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  847,  847,  847,  847,
      847, 1603,  847,  847, 1604,  847,  847,  847,  847,  847,
      847,  847,  936,  936,  936,  936,  936, 1605, 1606, 1607,
     1608,  847,  847,  847,  936,  948,  948,  948,  948,  948,
     1070, 1070, 1070, 1070, 1070, 1609, 1610,  948, 1611, 1612,
     1615, 1616, 1070, 1617, 1071, 1071, 1071, 1071, 1071,  847,
      847,  847,  847, 1619, 1620, 1621, 1071,  936, 1553, 1553,

     1553, 1553, 1553,  936,  936, 1071, 1622, 1623, 1624,  948,
      936, 1553, 1625, 1626,  948, 1073, 1073, 1073, 1073, 1073,
     1627, 1629,  948, 1632, 1634, 1635, 1636, 1073, 1075, 1075,
     1075, 1075, 1075, 1077, 1077, 1077, 1077, 1077, 1628, 1637,
     1075, 1071, 1638, 1639, 1640, 1077, 1628, 1641, 1642, 1075,
     1643, 1644, 1646, 1650, 1077, 1079, 1079, 1079, 1079, 1079,
     1081, 1081, 1081, 1081, 1081, 1647, 1645, 1079, 1645, 1651,
     1652, 1653, 1081, 1647, 1656, 1658, 1660, 1073, 1661, 1663,
     1665, 1081, 1090, 1090, 1090, 1090, 1090, 1667, 1668, 1669,
     1670, 1077, 1671, 1672, 1090, 1091, 1091, 1091, 1091, 1091,

     1673, 1675, 1676, 1090, 1677, 1678, 1679, 1091, 1092, 1092,
     1092, 1092, 1092, 1681, 1683, 1684, 1091, 1079, 1690, 1692,
     1092, 1093, 1093, 1093, 1093, 1093, 1694, 1697, 1698, 1092,
     1700, 1090, 1701, 1093, 1094, 1094, 1094, 1094, 1094, 1702,
     1703, 1704, 1093, 1705, 1706, 1707, 1094, 1095, 1095, 1095,
     1095, 1095, 1091, 1708, 1709, 1094, 1711, 1712, 1713, 1095,
     1096, 1096, 1096, 1096, 1096, 1093, 1714, 1715, 1095, 1716,
     1717, 1718, 1096, 1097, 1097, 1097, 1097, 1097, 1719, 1094,
     1720, 1096, 1725, 1726, 1727, 1097, 1730, 1731, 1095, 1098,
     1098, 1098, 1098, 1098, 1097, 1099, 1099, 1099, 1099, 1099,

     1728, 1098, 1735, 1734, 1736, 1096, 1734, 1099, 1728, 1733,
     1098, 1104, 1104, 1104, 1104, 1104, 1099, 1105, 1105, 1105,
     1105, 1105, 1737, 1104, 1570, 1570, 1570, 1570, 1570, 1105,
     1097, 1738, 1104, 1739, 1098, 1741, 1099, 1570, 1105, 1106,
     1106, 1106, 1106, 1106, 1107, 1107, 1107, 1107, 1107, 1732,
     1740, 1106, 1733, 1740, 1742, 1743, 1107, 1732, 1744, 1746,
     1106, 1747, 1105, 1104, 1748, 1107, 1108, 1108, 1108, 1108,
     1108, 1109, 1109, 1109, 1109, 1109, 1739, 1750, 1108, 1753,
     1754, 1755, 1756, 1109, 1763, 1764, 1765, 1108, 1766, 1756,
     1768, 1773, 1109, 1776, 1778, 1782, 1106, 1110, 1110, 1110,

     1110, 1110, 1111, 1111, 1111, 1111, 1111, 1779, 1107, 1110,
     1111, 1783, 1784, 1790, 1111, 1779, 1785, 1804, 1110, 1117,
     1117, 1117, 1117, 1117, 1785, 1108, 1808, 1813, 1820, 1824,
     1109, 1117, 1825, 1118, 1118, 1118, 1118, 1118, 1823, 1826,
     1117, 1118, 1823, 1827, 1833, 1118, 1835, 1836, 1837, 1840,
     1841, 1110, 1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113,
     1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113, 1113,
     1842, 1113, 1113, 1838, 1113, 1113, 1113, 1113, 1113, 1113,
     1113, 1114, 1114, 1114, 1114, 1114, 1839, 1843, 1846, 1839,
     1113, 1113, 1113, 1114, 1847, 1848, 1124, 1124, 1124, 1124,

     1124, 1849, 1114, 1121, 1121, 1121, 1121, 1121, 1124, 1850,
     1116, 1116, 1116, 1116, 1116, 1121, 1838, 1124, 1113, 1113,
     1113, 1113, 1116, 1852, 1121, 1278, 1278, 1278, 1278, 1278,
     1851, 1116, 1845, 1844, 1853, 1845, 1856, 1278, 1114, 1115,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1858, 1115, 1115,
     1121, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1856, 1851,
     1116, 1120, 1120, 1120, 1120, 1120, 1844, 1115, 1115, 1115,
     1854, 1855, 1857, 1120, 1175, 1175, 1175, 1175, 1175, 1866,
     1175, 1873, 1120, 1862, 1858, 1175, 1175, 1122, 1122, 1122,

     1122, 1122, 1875, 1869, 1880, 1115, 1115, 1115, 1115, 1122,
     1854, 1123, 1123, 1123, 1123, 1123, 1884, 1862, 1122, 1855,
     1857, 1882, 1120, 1123, 1126, 1126, 1126, 1126, 1126, 1885,
     1860, 1869, 1123, 1867, 1861, 1886, 1126, 1127, 1127, 1127,
     1127, 1127, 1870, 1122, 1883, 1126, 1870, 1887, 1883, 1127,
     1860, 1128, 1128, 1128, 1128, 1128, 1861, 1888, 1127, 1882,
     1889, 1890, 1123, 1128, 1129, 1129, 1129, 1129, 1129, 1891,
     1867, 1893, 1128, 1894, 1895, 1896, 1129, 1891, 1897, 1899,
     1901, 1126, 1895, 1902, 1898, 1129, 1903, 1130, 1130, 1130,
     1130, 1130, 1898, 1904, 1127, 1907, 1908, 1909, 1128, 1130,

     1910, 1131, 1131, 1131, 1131, 1131, 1911, 1912, 1130, 1913,
     1914, 1915, 1916, 1131, 1917, 1918, 1919, 1129, 1920, 1921,
     1922, 1923, 1131, 1132, 1132, 1132, 1132, 1132, 1133, 1133,
     1133, 1133, 1133, 1426, 1924, 1132, 1925, 1927, 1929, 1931,
     1133, 1933, 1934, 1935, 1132, 1130, 1131, 1936, 1937, 1133,
     1938, 1935, 1939, 1940, 1135, 1135, 1135, 1135, 1135, 1137,
     1137, 1137, 1137, 1137, 1941, 1942, 1135, 1426, 1132, 1943,
     1944, 1137, 1946, 1426, 1948, 1135, 1951, 1426, 1944, 1426,
     1137, 1952, 1426, 1954, 1955, 1957, 1959, 1133, 1134, 1134,
     1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,

     1134, 1134, 1134, 1134, 1134, 1134, 1135, 1134, 1134, 1964,
     1134, 1134, 1134, 1134, 1134, 1134, 1134, 1136, 1136, 1136,
     1136, 1136, 1966, 1968, 1973, 1975, 1134, 1134, 1134, 1136,
     1138, 1138, 1138, 1138, 1138, 1974, 1976, 1977, 1136, 1974,
     1978, 1979, 1138, 1981, 1983, 1984, 1139, 1139, 1139, 1139,
     1139, 1138, 1985, 1987, 1134, 1134, 1134, 1134, 1139, 1989,
     1991, 1992, 1136, 1992, 1994, 1995, 1996, 1139, 1140, 1140,
     1140, 1140, 1140, 1997, 1998, 1138, 1999, 2001, 1999, 2002,
     1140, 1141, 1141, 1141, 1141, 1141, 2003, 2004, 2005, 1140,
     2007, 2009, 2010, 1141, 1142, 1142, 1142, 1142, 1142, 2016,

     2017, 2018, 1141, 2019, 2020, 2028, 1142, 1143, 1143, 1143,
     1143, 1143, 2020, 2029, 2030, 1142, 2031, 2032, 2036, 1143,
     1144, 1144, 1144, 1144, 1144, 2038, 2040, 2041, 1143, 2044,
     2046, 2048, 1144, 1140, 1145, 1145, 1145, 1145, 1145, 1141,
     2049, 1144, 2050, 2052, 2057, 2063, 1145, 2065, 2066, 2071,
     2050, 2079, 1142, 2085, 2074, 1145, 1146, 1146, 1146, 1146,
     1146, 2074, 2084, 2092, 1144, 1143, 2084, 2086, 1146, 1147,
     1147, 1147, 1147, 1147, 2089, 2086, 2087, 1146, 2089, 2093,
     2087, 1147, 1148, 1148, 1148, 1148, 1148, 2098, 2103, 2090,
     1147, 1145, 2087, 2090, 1148, 1149, 1149, 1149, 1149, 1149,

     1146, 2088, 2104, 1148, 2105, 2088, 2090, 1149, 1150, 1150,
     1150, 1150, 1150, 2091, 1147, 2107, 1149, 2091, 2108, 2088,
     1150, 1151, 1151, 1151, 1151, 1151, 2109, 2097, 2102, 1150,
     1148, 2097, 2102, 1151, 1152, 1152, 1152, 1152, 1152, 2106,
     2113, 2115, 1151, 2110, 2116, 2117, 1152, 2117, 2106, 1149,
     2119, 2110, 2120, 2121, 2122, 1152, 1196, 1196, 1196, 1196,
     1196, 2123, 1150, 1200, 1200, 1200, 1200, 1200, 1196, 1182,
     1182, 1182, 1182, 1182, 2124, 1200, 2124, 1196, 2126, 1151,
     2127, 1182, 2128, 2129, 1200, 2130, 2133, 2141, 2131, 2135,
     1182, 1152, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181,

     1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181,
     1182, 1181, 1181, 2135, 1181, 1181, 1181, 1181, 1181, 1181,
     1181, 1207, 1207, 1207, 1207, 1207, 2131, 2139, 2144, 2146,
     1181, 1181, 1181, 1207, 1211, 1211, 1211, 1211, 1211, 2134,
     2147, 2150, 1207, 2155, 2156, 2137, 1211, 2134, 2157, 2162,
     2143, 2139, 2144, 2163, 2164, 1211, 2165, 2166, 1181, 1181,
     1181, 1181, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189,
     1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189,
     2143, 1189, 1189, 2137, 1189, 1189, 1189, 1189, 1189, 1189,
     1189, 1282, 1282, 1282, 1282, 1282, 2145, 2148, 2152, 2153,

     1189, 1189, 1189, 1282, 1286, 1286, 1286, 1286, 1286, 1297,
     1297, 1297, 1297, 1297, 2167, 2168, 1286, 2169, 2145, 2153,
     2170, 1297, 2152, 2153, 2171, 2148, 2173, 2175, 1189, 1189,
     1189, 1189, 1193, 1193, 1193, 1193, 1193, 1193, 1193, 1193,
     1193, 1193, 1193, 1193, 1193, 1193, 1193, 1193, 1193, 1193,
     2177, 1193, 1193, 1282, 1193, 1193, 1193, 1193, 1193, 1193,
     1193, 1318, 1318, 1318, 1318, 1318, 1286, 2178, 2179, 1318,
     1193, 1193, 1193, 1318, 1327, 1327, 1327, 1327, 1327, 1298,
     1298, 1298, 1298, 1298, 2180, 2182, 1327, 2183, 2184, 2185,
     2188, 1298, 2180, 2189, 2190, 2183, 2191, 2192, 1193, 1193,

     1193, 1193, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
     1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
     1298, 1208, 1208, 2193, 1208, 1208, 1208, 1208, 1208, 1208,
     1208, 1289, 1289, 1289, 1289, 1289, 2194, 2195, 2196, 2197,
     1208, 1208, 1208, 1289, 1328, 1328, 1328, 1328, 1328, 2198,
     2200, 2203, 1328, 2204, 2205, 2206, 1328, 2207, 2208, 2209,
     1357, 1357, 1357, 1357, 1357, 2210, 2211, 2212, 1208, 1208,
     1208, 1208, 1357, 2214, 2215, 2217, 1289, 1863, 1863, 1863,
     1863, 1863, 1289, 1289, 1438, 1438, 1438, 1438, 1438, 1289,
     1863, 1453, 1453, 1453, 1453, 1453, 1438, 1460, 1460, 1460,

     1460, 1460, 1328, 1453, 2219, 1438, 2221, 2222, 2223, 1460,
     2225, 2226, 1453, 2228, 1357, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412,
     1412, 1412, 1412, 1412, 1412, 1413, 1413, 1413, 1413, 1413,
     1417, 1417, 1417, 1417, 1417, 1525, 2229, 1413, 2231, 2232,

     2213, 2233, 1417, 1418, 1418, 1418, 1418, 1418, 2213, 2234,
     2235, 1417, 2236, 2239, 2240, 1418, 1434, 1434, 1434, 1434,
     1434, 1435, 1435, 1435, 1435, 1435, 2242, 2241, 1434, 1525,
     2243, 2244, 2245, 1435, 2247, 1525, 2241, 1434, 2248, 1525,
     2245, 1525, 1435, 1527, 1525, 2249, 2250, 1413, 2251, 1417,
     1436, 1436, 1436, 1436, 1436, 2254, 2255, 2256, 1434, 2257,
     2258, 2259, 1436, 2260, 2261, 1418, 1435, 1439, 1439, 1439,
     1439, 1439, 1440, 1440, 1440, 1440, 1440, 1527, 2262, 1439,
     2267, 2268, 2270, 1527, 1440, 2275, 2281, 1527, 1439, 1527,
     2282, 2283, 1527, 1440, 1441, 1441, 1441, 1441, 1441, 1436,

     1442, 1442, 1442, 1442, 1442, 2284, 1441, 2287, 1436, 2289,
     2290, 2291, 1442, 2297, 2298, 1441, 2299, 2302, 2303, 2292,
     1439, 1442, 1443, 1443, 1443, 1443, 1443, 2292, 2304, 1440,
     2305, 2307, 2309, 2300, 1443, 2310, 1444, 1444, 1444, 1444,
     1444, 2300, 2312, 1443, 2313, 2314, 2326, 1441, 1444, 1442,
     1450, 1450, 1450, 1450, 1450, 2333, 2335, 1444, 2336, 2337,
     2334, 2338, 1450, 1451, 1451, 1451, 1451, 1451, 2334, 2339,
     2340, 1450, 2342, 2344, 2345, 1451, 2346, 2348, 2349, 1443,
     2350, 2351, 2352, 2353, 1451, 2354, 2355, 2356, 2357, 1444,
     1452, 1452, 1452, 1452, 1452, 1450, 1454, 1454, 1454, 1454,

     1454, 2360, 1452, 1455, 1455, 1455, 1455, 1455, 1454, 2358,
     2364, 1452, 2370, 2367, 2364, 1455, 1451, 1454, 1456, 1456,
     1456, 1456, 1456, 2372, 1455, 1462, 1462, 1462, 1462, 1462,
     1456, 2374, 2377, 2358, 2378, 1452, 2379, 1462, 2376, 1456,
     1464, 1464, 1464, 1464, 1464, 2375, 1462, 1454, 2367, 2381,
     2370, 2373, 1464, 1466, 1466, 1466, 1466, 1466, 2385, 2373,
     2387, 1464, 2377, 2374, 2389, 1466, 1468, 1468, 1468, 1468,
     1468, 1470, 1470, 1470, 1470, 1470, 2376, 2382, 1468, 2390,
     1456, 2391, 2375, 1470, 2393, 2382, 2395, 1468, 2385, 2399,
     2400, 2401, 1470, 1471, 1471, 1471, 1471, 1471, 2403, 1464,

     2405, 2407, 2409, 2410, 2411, 1471, 1475, 1475, 1475, 1475,
     1475, 2413, 1470, 1476, 1476, 1476, 1476, 1476, 1475, 1477,
     1477, 1477, 1477, 1477, 2414, 1476, 2415, 1475, 2416, 2417,
     2418, 1477, 2419, 2420, 1476, 2421, 2422, 2425, 2426, 2428,
     1477, 2420, 1471, 2430, 2432, 1478, 1478, 1478, 1478, 1478,
     1479, 1479, 1479, 1479, 1479, 2427, 1476, 1478, 2433, 2434,
     2435, 2436, 1479, 2427, 1475, 2438, 1478, 1482, 1482, 1482,
     1482, 1482, 1483, 1483, 1483, 1483, 1483, 2439, 2440, 1482,
     2442, 2443, 2444, 1477, 1483, 2439, 2445, 2446, 1482, 2448,
     1478, 2450, 2452, 1483, 1484, 1484, 1484, 1484, 1484, 1485,

     1485, 1485, 1485, 1485, 2449, 2453, 1484, 2454, 2455, 2456,
     2457, 1485, 2449, 2453, 2458, 1484, 2459, 1483, 2460, 2462,
     1485, 2473, 2474, 2475, 2477, 1482, 1486, 1486, 1486, 1486,
     1486, 1487, 1487, 1487, 1487, 1487, 2476, 2468, 1486, 2478,
     2479, 2479, 2480, 1487, 2468, 2482, 2481, 1486, 2481, 2476,
     2483, 1484, 1487, 1488, 1488, 1488, 1488, 1488, 1485, 2484,
     1489, 1489, 1489, 1489, 1489, 1488, 1491, 1491, 1491, 1491,
     1491, 1486, 1489, 2485, 1488, 1487, 2498, 2503, 1491, 2504,
     2505, 1489, 1493, 1493, 1493, 1493, 1493, 1495, 1495, 1495,
     1495, 1495, 2508, 2494, 1493, 2509, 2506, 2511, 2513, 1495,

     2494, 2514, 2515, 1493, 2506, 2523, 2525, 2526, 1495, 1489,
     2516, 1488, 1499, 1499, 1499, 1499, 1499, 2527, 2516, 2521,
     1499, 2541, 2547, 2551, 1499, 2527, 2521, 2552, 1495, 1496,
     1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
     1496, 1496, 1496, 1496, 1496, 1496, 1496, 2553, 1496, 1496,
     2554, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1498, 1498,
     1498, 1498, 1498, 2556, 2557, 2558, 2559, 1496, 1496, 1496,
     1498, 1501, 1501, 1501, 1501, 1501, 2560, 2539, 2561, 1498,
     2562, 2563, 2564, 1501, 2539, 2565, 2566, 1505, 1505, 1505,
     1505, 1505, 2572, 2576, 2579, 1496, 1496, 1496, 1496, 1505,

     1510, 1510, 1510, 1510, 1510, 2582, 2587, 2588, 1505, 2591,
     2567, 1498, 1510, 1507, 1507, 1507, 1507, 1507, 2567, 2574,
     2593, 1510, 2583, 2585, 2586, 1507, 2574, 2589, 2583, 2585,
     2594, 2592, 2586, 1505, 1507, 2589, 1501, 1504, 1504, 1504,
     1504, 1504, 1504, 1504, 1504, 1504, 1504, 1504, 1504, 1504,
     1504, 1504, 1504, 1504, 1504, 2592, 1504, 1504, 1507, 1504,
     1504, 1504, 1504, 1504, 1504, 1504, 1506, 1506, 1506, 1506,
     1506, 2596, 2597, 2604, 2605, 1504, 1504, 1504, 1506, 1508,
     1508, 1508, 1508, 1508, 2607, 2609, 2610, 1506, 2611, 2612,
     2618, 1508, 2619, 2620, 2621, 1509, 1509, 1509, 1509, 1509,

     1508, 2622, 2623, 1504, 1504, 1504, 1504, 1509, 1511, 1511,
     1511, 1511, 1511, 2624, 2626, 2627, 1509, 2628, 2630, 2638,
     1511, 2624, 1508, 1512, 1512, 1512, 1512, 1512, 1506, 1511,
     1513, 1513, 1513, 1513, 1513, 1512, 1509, 1515, 1515, 1515,
     1515, 1515, 1513, 2641, 1512, 2645, 2646, 2649, 2652, 1515,
     2653, 2654, 1517, 1517, 1517, 1517, 1517, 2647, 1515, 1552,
     1552, 1552, 1552, 1552, 1517, 2647, 2655, 1511, 2657, 2658,
     2659, 1552, 2660, 1517, 1513, 2661, 2662, 2663, 1535, 1535,
     1535, 1535, 1535, 2664, 2671, 1512, 2672, 2674, 1513, 1513,
     1535, 2675, 1513, 2672, 2676, 2677, 2679, 1515, 1516, 1516,

     1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516, 1516,
     1516, 1516, 1516, 1516, 1516, 1516, 1517, 1516, 1516, 1535,
     1516, 1516, 1516, 1516, 1516, 1516, 1516, 1554, 1554, 1554,
     1554, 1554, 2678, 2680, 2678, 2681, 1516, 1516, 1516, 1554,
     1556, 1556, 1556, 1556, 1556, 1562, 1562, 1562, 1562, 1562,
     2682, 2683, 1556, 2684, 2685, 2686, 2687, 1562, 2688, 2693,
     2708, 1556, 2710, 2712, 1516, 1516, 1516, 1516, 1567, 1567,
     1567, 1567, 1567, 1569, 1569, 1569, 1569, 1569, 2689, 2709,
     1567, 2699, 2713, 2715, 2718, 1569, 2689, 2709, 2699, 1567,
     1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568,

     1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 2719, 1568,
     1568, 2721, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1614,
     1614, 1614, 1614, 1614, 2728, 2730, 2749, 2758, 1568, 1568,
     1568, 1614, 1618, 1618, 1618, 1618, 1618, 1633, 1633, 1633,
     1633, 1633, 2760, 2761, 1618, 2762, 2763, 2764, 2717, 1633,
     2704, 2704, 2704, 2704, 2704, 2717, 1568, 1568, 1568, 1568,
     1571, 1571, 1571, 1571, 1571, 1571, 1571, 1571, 1571, 1571,
     1571, 1571, 1571, 1571, 1571, 1571, 1571, 1571, 1633, 1571,
     1571, 1614, 1571, 1571, 1571, 1571, 1571, 1571, 1571, 1631,
     1631, 1631, 1631, 1631, 1618, 2766, 2767, 2768, 1571, 1571,

     1571, 1631, 1649, 1649, 1649, 1649, 1649, 1654, 1654, 1654,
     1654, 1654, 2769, 2770, 1649, 2704, 2772, 2773, 2727, 1654,
     1664, 1664, 1664, 1664, 1664, 2727, 1571, 1571, 1571, 1571,
     2774, 2776, 1664, 1674, 1674, 1674, 1674, 1674, 1631, 1688,
     1688, 1688, 1688, 1688, 2778, 1674, 2782, 1631, 2783, 2784,
     2736, 1688, 1691, 1691, 1691, 1691, 1691, 2736, 1696, 1696,
     1696, 1696, 1696, 2786, 1691, 2787, 2789, 2793, 2797, 1664,
     1696, 1722, 1722, 1722, 1722, 1722, 1724, 1724, 1724, 1724,
     1724, 2798, 2784, 1722, 2800, 2785, 2759, 2738, 1724, 1729,
     1729, 1729, 1729, 1729, 2738, 2759, 2791, 1724, 2801, 2771,

     2791, 1729, 1696, 1751, 1751, 1751, 1751, 1751, 2771, 2785,
     1729, 2747, 2757, 2775, 2805, 1751, 1696, 1696, 2747, 2757,
     1696, 2775, 2796, 2808, 1751, 2809, 2795, 2810, 1757, 1757,
     1757, 1757, 1757, 2502, 2502, 2502, 2502, 2502, 2811, 2799,
     1757, 2813, 2814, 1729, 1749, 1749, 1749, 1749, 1749, 1757,
     1749, 2822, 2823, 2796, 2502, 1749, 1749, 1772, 1772, 1772,
     1772, 1772, 2795, 1751, 2824, 1772, 2825, 2828, 2829, 1772,
     2799, 1769, 1769, 1769, 1769, 1769, 1758, 1758, 1758, 1758,
     1758, 2833, 2802, 1769, 2837, 2815, 2840, 1757, 1758, 1749,
     2802, 2841, 1769, 2815, 2843, 1749, 1749, 1758, 2502, 2844,

     2845, 2847, 1749, 1752, 1752, 1752, 1752, 1752, 1752, 1752,
     1752, 1752, 1752, 1752, 1752, 1752, 1752, 1752, 1752, 1752,
     1752, 1758, 1752, 1752, 1769, 1752, 1752, 1752, 1752, 1752,
     1752, 1752, 1759, 1759, 1759, 1759, 1759, 2848, 2849, 2850,
     2851, 1752, 1752, 1752, 1759, 1760, 1760, 1760, 1760, 1760,
     2852, 2853, 2854, 1759, 2855, 2859, 2861, 1760, 2862, 2852,
     2856, 1761, 1761, 1761, 1761, 1761, 1760, 2863, 2856, 1752,
     1752, 1752, 1752, 1761, 2864, 2865, 1759, 1762, 1762, 1762,
     1762, 1762, 1761, 1767, 1767, 1767, 1767, 1767, 2866, 1762,
     1770, 1770, 1770, 1770, 1770, 1767, 2867, 2868, 1762, 2869,

     2870, 2871, 1770, 2872, 1760, 2873, 1761, 2874, 2875, 2877,
     2880, 1770, 1771, 1771, 1771, 1771, 1771, 2880, 2881, 2882,
     1762, 2884, 2889, 2890, 1771, 2891, 2895, 1767, 2896, 2897,
     2898, 2899, 1767, 1771, 1774, 1774, 1774, 1774, 1774, 2906,
     1767, 1775, 1775, 1775, 1775, 1775, 1774, 2907, 2910, 1770,
     2911, 2912, 2913, 1775, 2915, 1774, 1777, 1777, 1777, 1777,
     1777, 1780, 1780, 1780, 1780, 1780, 2914, 2916, 1777, 2917,
     2918, 2919, 2920, 1780, 2914, 2921, 2922, 1777, 2923, 2924,
     2925, 2926, 1780, 1781, 1781, 1781, 1781, 1781, 2927, 2929,
     1775, 2930, 2931, 2933, 2934, 1781, 2935, 2938, 1774, 2939,

     2940, 2943, 2934, 2942, 1781, 1777, 2945, 2939, 1787, 1787,
     1787, 1787, 1787, 1801, 1801, 1801, 1801, 1801, 2946, 2935,
     1787, 2949, 2950, 2952, 2941, 1801, 2954, 2942, 2940, 1787,
     1781, 1786, 1786, 1786, 1786, 1786, 1786, 1786, 1786, 1786,
     1786, 1786, 1786, 1786, 1786, 1786, 1786, 1786, 1786, 1787,
     1786, 1786, 2941, 1786, 1786, 1786, 1786, 1786, 1786, 1786,
     1789, 1789, 1789, 1789, 1789, 2953, 2955, 2958, 2960, 1786,
     1786, 1786, 1789, 2953, 2962, 1792, 1792, 1792, 1792, 1792,
     2966, 1789, 1810, 1810, 1810, 1810, 1810, 1792, 2887, 2887,
     2887, 2887, 2887, 2969, 1810, 2970, 1792, 1786, 1786, 1786,

     1786, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1792,
     1788, 1788, 2936, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1794, 1794, 1794, 1794, 1794, 2944, 2971, 2972, 2973, 1788,
     1788, 1788, 1794, 1796, 1796, 1796, 1796, 1796, 2967, 2974,
     2975, 1794, 2976, 2887, 2936, 1796, 2967, 2977, 2978, 2944,
     2979, 2980, 2981, 2982, 1796, 2983, 2984, 1788, 1788, 1788,
     1788, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,
     1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 2985,
     1791, 1791, 1796, 1791, 1791, 1791, 1791, 1791, 1791, 1791,

     1793, 1793, 1793, 1793, 1793, 2991, 2993, 2994, 2995, 1791,
     1791, 1791, 1793, 1797, 1797, 1797, 1797, 1797, 2996, 2997,
     2998, 1793, 2999, 2992, 3000, 1797, 2987, 2987, 2987, 2987,
     2987, 2992, 3001, 3002, 1797, 3003, 3004, 1791, 1791, 1791,
     1791, 1793, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795,
     1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795,
     3005, 1795, 1795, 3006, 1795, 1795, 1795, 1795, 1795, 1795,
     1795, 1797, 1798, 1798, 1798, 1798, 1798, 3007, 3008, 3012,
     1795, 1795, 1795, 3013, 1798, 1799, 1799, 1799, 1799, 1799,
     3014, 2987, 3015, 1798, 3016, 3019, 3020, 1799, 3014, 3022,

     3023, 3024, 1799, 3030, 3031, 3034, 1799, 3035, 1795, 1795,
     1795, 1795, 1803, 1803, 1803, 1803, 1803, 1806, 1806, 1806,
     1806, 1806, 3032, 3037, 1803, 3039, 1798, 3040, 3041, 1806,
     3032, 3042, 3044, 1803, 3045, 3046, 3047, 3048, 1806, 3050,
     1812, 1812, 1812, 1812, 1812, 1814, 1814, 1814, 1814, 1814,
     3043, 3051, 1812, 3052, 3053, 3055, 3056, 1814, 3043, 3057,
     1806, 1812, 3061, 3055, 3065, 3067, 1814, 1815, 1815, 1815,
     1815, 1815, 1816, 1816, 1816, 1816, 1816, 3059, 3068, 1815,
     3056, 3057, 3060, 3061, 1816, 3059, 3062, 3071, 1815, 3072,
     3064, 3073, 3074, 1816, 1817, 1817, 1817, 1817, 1817, 1814,

     1818, 1818, 1818, 1818, 1818, 3070, 1817, 1819, 1819, 1819,
     1819, 1819, 1818, 3070, 3060, 1817, 1815, 3075, 3062, 1819,
     3077, 1818, 3064, 3080, 1828, 1828, 1828, 1828, 1828, 1816,
     1830, 1830, 1830, 1830, 1830, 1817, 1828, 1832, 1832, 1832,
     1832, 1832, 1830, 3085, 3086, 1828, 3087, 3079, 3081, 1832,
     3018, 3018, 3018, 3018, 3018, 3079, 3081, 3088, 1832, 1818,
     3090, 1819, 1821, 1821, 1821, 1821, 1821, 1821, 1821, 1821,
     1821, 1821, 1821, 1821, 1821, 1821, 1821, 1821, 1821, 1821,
     3091, 1821, 1821, 1828, 1821, 1821, 1821, 1821, 1821, 1821,
     1821, 1834, 1834, 1834, 1834, 1834, 3092, 3093, 3094, 3096,

     1821, 1821, 1821, 1834, 1871, 1871, 1871, 1871, 1871, 3089,
     3097, 3102, 1834, 3103, 3104, 3018, 1871, 3089, 3099, 3099,
     3099, 3099, 3099, 3105, 3106, 1871, 3107, 3108, 1821, 1821,
     1821, 1821, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
     1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
     3109, 1822, 1822, 3110, 1822, 1822, 1822, 1822, 1822, 1822,
     1822, 1877, 1877, 1877, 1877, 1877, 3111, 3101, 3112, 3113,
     1822, 1822, 1822, 3114, 1877, 3101, 3115, 3116, 1865, 1865,
     1865, 1865, 1865, 3099, 3119, 1906, 1906, 1906, 1906, 1906,
     1865, 3122, 3123, 3126, 3130, 3137, 3140, 1906, 1822, 1822,

     1822, 1822, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
     1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
     1865, 1859, 1859, 3121, 1859, 1859, 1859, 1859, 1859, 1859,
     1859, 3121, 3143, 3144, 1906, 1928, 1928, 1928, 1928, 1928,
     1859, 1859, 1859, 1906, 3146, 3147, 3149, 1928, 3151, 1872,
     1872, 1872, 1872, 1872, 1926, 1926, 1926, 1926, 1926, 3124,
     3152, 1872, 3153, 3154, 3155, 3157, 1926, 3124, 1859, 1859,
     1859, 1859, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
     1872, 1868, 1868, 3158, 1868, 1868, 1868, 1868, 1868, 1868,

     1868, 1926, 3159, 3160, 3167, 1926, 3169, 3170, 3171, 3172,
     1868, 1868, 1868, 1932, 1932, 1932, 1932, 1932, 1950, 1950,
     1950, 1950, 1950, 3173, 3174, 1932, 3175, 3177, 3142, 3150,
     1950, 1960, 1960, 1960, 1960, 1960, 3142, 3150, 1868, 1868,
     1868, 1868, 3163, 1960, 1963, 1963, 1963, 1963, 1963, 1967,
     1967, 1967, 1967, 1967, 3162, 3178, 1963, 3182, 3164, 3184,
     1950, 1967, 1932, 1972, 1972, 1972, 1972, 1972, 1986, 1986,
     1986, 1986, 1986, 3176, 3179, 1972, 3185, 3187, 3162, 3163,
     1986, 3176, 3179, 3189, 3190, 1963, 3165, 1988, 1988, 1988,
     1988, 1988, 1990, 1990, 1990, 1990, 1990, 3164, 3188, 1988,

     3191, 3192, 3193, 1967, 1990, 3195, 3188, 1972, 1988, 3168,
     3196, 2011, 2011, 2011, 2011, 2011, 2013, 2013, 2013, 2013,
     2013, 1972, 1972, 2011, 3165, 1972, 3197, 3200, 2013, 3201,
     1986, 3203, 2011, 3204, 2015, 2015, 2015, 2015, 2015, 2022,
     2022, 2022, 2022, 2022, 1988, 3205, 2015, 3168, 3206, 3207,
     3208, 2022, 3209, 3210, 1990, 2015, 3212, 3213, 3214, 3215,
     2022, 2023, 2023, 2023, 2023, 2023, 3218, 3219, 3220, 3229,
     2011, 3222, 3235, 2023, 2024, 2024, 2024, 2024, 2024, 3222,
     3236, 3237, 2023, 3238, 3239, 3241, 2024, 2025, 2025, 2025,
     2025, 2025, 3244, 3245, 3246, 2024, 3247, 3248, 3249, 2025,

     3250, 3258, 3259, 3261, 2022, 3262, 3264, 3265, 2025, 2026,
     2026, 2026, 2026, 2026, 3266, 2024, 3270, 3271, 2023, 3255,
     3272, 2026, 2027, 2027, 2027, 2027, 2027, 3267, 3256, 3273,
     2026, 3274, 3276, 3279, 2027, 3267, 2025, 2033, 2033, 2033,
     2033, 2033, 3280, 2027, 2034, 2034, 2034, 2034, 2034, 2033,
     3281, 2035, 2035, 2035, 2035, 2035, 2034, 3255, 2033, 3282,
     3283, 3284, 2026, 2035, 3285, 2034, 3256, 2027, 3287, 3289,
     3290, 3291, 3292, 3294, 3295, 3296, 3298, 3299, 2042, 2042,
     2042, 2042, 2042, 2043, 2043, 2043, 2043, 2043, 3300, 3301,
     2042, 2043, 3304, 3305, 2035, 2043, 2033, 3306, 3309, 2042,

     3316, 3317, 3199, 3199, 3199, 3199, 3199, 3318, 3325, 2034,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 3326, 2039,
     2039, 2042, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2045,
     2045, 2045, 2045, 2045, 3319, 3327, 3328, 3330, 2039, 2039,
     2039, 2045, 3319, 2047, 2047, 2047, 2047, 2047, 2051, 2051,
     2051, 2051, 2051, 3329, 3331, 2047, 2051, 3199, 3340, 3336,
     2051, 3329, 3345, 3335, 2047, 3347, 2039, 2039, 2039, 2039,
     2054, 2054, 2054, 2054, 2054, 3348, 3341, 3349, 3353, 3355,
     3356, 2045, 2054, 3336, 3341, 3363, 3364, 2045, 2047, 2056,

     2056, 2056, 2056, 2056, 2058, 2058, 2058, 2058, 2058, 3335,
     3354, 2056, 3365, 3357, 3366, 3367, 2058, 3368, 3354, 3369,
     2056, 3357, 3373, 3367, 3374, 2058, 2060, 2060, 2060, 2060,
     2060, 2062, 2062, 2062, 2062, 2062, 3375, 3377, 2060, 3380,
     3382, 3387, 3388, 2062, 2064, 2064, 2064, 2064, 2064, 3395,
     3396, 3401, 2062, 3403, 3405, 3406, 2064, 2068, 2068, 2068,
     2068, 2068, 2058, 2070, 2070, 2070, 2070, 2070, 3397, 2068,
     2072, 2072, 2072, 2072, 2072, 2070, 3397, 2073, 2073, 2073,
     2073, 2073, 2072, 3409, 2070, 3416, 3417, 3420, 3425, 2073,
     3427, 2072, 2076, 2076, 2076, 2076, 2076, 2064, 2073, 2078,

     2078, 2078, 2078, 2078, 2076, 2080, 2080, 2080, 2080, 2080,
     3404, 2078, 2081, 2081, 2081, 2081, 2081, 2080, 3404, 3429,
     2078, 3430, 3409, 3434, 2081, 3435, 2080, 2082, 2082, 2082,
     2082, 2082, 2073, 2081, 3436, 2072, 3437, 3438, 3412, 2082,
     3439, 2083, 2083, 2083, 2083, 2083, 3412, 3419, 2082, 3421,
     3440, 3428, 3441, 2083, 3444, 3419, 3447, 3421, 2080, 3428,
     3449, 2081, 2083, 2095, 2095, 2095, 2095, 2095, 3451, 2100,
     2100, 2100, 2100, 2100, 3454, 2095, 3431, 3455, 3462, 3465,
     2082, 2100, 2083, 3431, 3467, 3470, 2083, 2111, 2111, 2111,
     2111, 2111, 2112, 2112, 2112, 2112, 2112, 3463, 3475, 2111,

     3476, 3478, 3480, 3484, 2112, 3463, 3485, 3470, 2111, 2136,
     2136, 2136, 2136, 2136, 2138, 2138, 2138, 2138, 2138, 3486,
     3487, 2136, 3488, 3489, 3490, 3491, 2138, 3493, 3495, 3496,
     2136, 3497, 3499, 3492, 3502, 2138, 2154, 2154, 2154, 2154,
     2154, 3492, 2158, 2158, 2158, 2158, 2158, 3503, 2154, 3509,
     3514, 3515, 3507, 2112, 2158, 2159, 2159, 2159, 2159, 2159,
     3507, 3516, 3518, 2158, 3523, 3524, 3504, 2159, 2160, 2160,
     2160, 2160, 2160, 3504, 3525, 3526, 2159, 3527, 3528, 3505,
     2160, 2186, 2186, 2186, 2186, 2186, 3505, 3529, 3514, 3531,
     2154, 3530, 3533, 2186, 2199, 2199, 2199, 2199, 2199, 3530,

     2159, 2230, 2230, 2230, 2230, 2230, 2199, 2246, 2246, 2246,
     2246, 2246, 3534, 2230, 2252, 2252, 2252, 2252, 2252, 2246,
     2266, 2266, 2266, 2266, 2266, 3532, 2252, 3535, 3536, 3537,
     3538, 2252, 2266, 3532, 3542, 2252, 3536, 2199, 3538, 3546,
     3547, 2266, 2269, 2269, 2269, 2269, 2269, 2271, 2271, 2271,
     2271, 2271, 3551, 3552, 2269, 2230, 3550, 3553, 3554, 2271,
     2276, 2276, 2276, 2276, 2276, 2266, 2277, 2277, 2277, 2277,
     2277, 3557, 2276, 2279, 2279, 2279, 2279, 2279, 2277, 3540,
     3545, 2276, 3545, 3559, 3550, 2279, 3540, 2277, 3560, 3545,
     3561, 2269, 3562, 3563, 2279, 3564, 3566, 3565, 3573, 3575,

     2269, 3576, 3579, 3564, 3565, 2276, 2278, 2278, 2278, 2278,
     2278, 3581, 2271, 2274, 2274, 2274, 2274, 2274, 2278, 2277,
     3334, 3334, 3334, 3334, 3334, 2274, 3582, 2278, 3584, 3586,
     3587, 3567, 2279, 3334, 2294, 2294, 2294, 2294, 2294, 3567,
     3568, 2285, 2285, 2285, 2285, 2285, 2294, 3574, 3568, 2278,
     3574, 3569, 3577, 2285, 3574, 2274, 2274, 2274, 2285, 2274,
     3577, 3569, 2285, 3570, 3570, 3588, 2274, 2274, 3569, 3589,
     2274, 3570, 3570, 2274, 2274, 2280, 2280, 2280, 2280, 2280,
     2280, 2280, 2280, 2280, 2280, 2280, 2280, 2280, 2280, 2280,
     2280, 2280, 2280, 3591, 2280, 2280, 3578, 2280, 2280, 2280,

     2280, 2280, 2280, 2280, 3583, 3593, 2285, 2286, 2286, 2286,
     2286, 2286, 3583, 2280, 2280, 2280, 3596, 3597, 3599, 2286,
     3602, 3592, 3596, 3596, 2296, 2296, 2296, 2296, 2296, 3578,
     3592, 3595, 3598, 3595, 3598, 3604, 2296, 3607, 3601, 3598,
     3595, 2280, 2280, 2280, 2280, 2296, 2301, 2301, 2301, 2301,
     2301, 2325, 2325, 2325, 2325, 2325, 3608, 3594, 2301, 2325,
     3600, 3609, 3610, 2325, 3594, 3605, 3612, 2301, 3600, 3594,
     3601, 3613, 2286, 3605, 2308, 2308, 2308, 2308, 2308, 2315,
     2315, 2315, 2315, 2315, 3614, 3615, 2308, 3621, 3624, 3627,
     3629, 2315, 3631, 2301, 2306, 2306, 2306, 2306, 2306, 2306,

     2306, 2306, 2306, 2306, 2306, 2306, 2306, 2306, 2306, 2306,
     2306, 2306, 3632, 2306, 2306, 3633, 2306, 2306, 2306, 2306,
     2306, 2306, 2306, 2308, 2311, 2311, 2311, 2311, 2311, 3644,
     3647, 3648, 2306, 2306, 2306, 3616, 2311, 2317, 2317, 2317,
     2317, 2317, 3616, 3617, 2315, 2311, 3654, 3617, 3658, 2317,
     3617, 3659, 2319, 2319, 2319, 2319, 2319, 3618, 2317, 3618,
     2306, 2306, 2306, 2306, 2319, 3660, 3618, 1419, 1416, 2311,
     1415, 1414, 1411, 2319, 2320, 2320, 2320, 2320, 2320, 2321,
     2321, 2321, 2321, 2321, 3661, 2317, 2320, 1410, 1409, 3649,
     3662, 2321, 3661, 1408, 1407, 2320, 3649, 3649, 3662, 2319,

     2321, 2322, 2322, 2322, 2322, 2322, 1406, 2323, 2323, 2323,
     2323, 2323, 1405, 2322, 2328, 2328, 2328, 2328, 2328, 2323,
     1404, 3634, 2322, 1403, 1402, 1401, 2328, 2320, 2323, 3634,
     2327, 2327, 2327, 2327, 2327, 2328, 3634, 2321, 1400, 1399,
     1398, 1397, 2327, 2362, 2362, 2362, 2362, 2362, 1396, 1393,
     1392, 2327, 1391, 1390, 1389, 2362, 1386, 2328, 2323, 1385,
     2322, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324,
     2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 2324, 1383,
     2324, 2324, 2327, 2324, 2324, 2324, 2324, 2324, 2324, 2324,
     2329, 2329, 2329, 2329, 2329, 1382, 1381, 1380, 1379, 2324,

     2324, 2324, 2329, 2330, 2330, 2330, 2330, 2330, 1376, 1375,
     3782, 2329, 1374, 3782, 1373, 2330, 3782, 3782, 1372, 3783,
     2324, 1367, 3783, 1366, 2330, 3783, 3783, 2324, 2324, 2324,
     2324, 1364, 1363, 1362, 2329, 2331, 2331, 2331, 2331, 2331,
     2341, 2341, 2341, 2341, 2341, 1361, 1358, 2331, 2330, 1356,
     1355, 1354, 2341, 1353, 1352, 1351, 2331, 2361, 2361, 2361,
     2361, 2361, 2365, 2365, 2365, 2365, 2365, 1350, 1349, 2361,
     3801, 1347, 1346, 3801, 2365, 1345, 3801, 3801, 2361, 3806,
     1344, 1343, 3806, 1341, 2341, 3806, 3806, 1340, 1339, 2369,
     2369, 2369, 2369, 2369, 1338, 1337, 1336, 1335, 2341, 2341,

     2331, 2369, 2341, 2343, 2343, 2343, 2343, 2343, 1334, 1333,
     2369, 1331, 1330, 1329, 1326, 2343, 2383, 2383, 2383, 2383,
     2383, 2404, 2404, 2404, 2404, 2404, 1324, 1323, 2383, 3807,
     1321, 3828, 3807, 2404, 3828, 3807, 3807, 3828, 3828, 2386,
     2386, 2386, 2386, 2386, 1319, 1317, 2343, 2343, 1316, 1315,
     1314, 2386, 2406, 2406, 2406, 2406, 2406, 1313, 1312, 1310,
     1309, 2343, 2343, 1308, 2406, 2343, 2368, 2368, 2368, 2368,
     2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368, 2368,
     2368, 2368, 2368, 2368, 2386, 2368, 2368, 1307, 2368, 2368,
     2368, 2368, 2368, 2368, 2368, 1305, 1304, 1303, 2406, 2429,

     2429, 2429, 2429, 2429, 2368, 2368, 2368, 1302, 1301, 1300,
     1299, 2429, 2491, 2491, 2491, 2491, 2491, 2499, 2499, 2499,
     2499, 2499, 1296, 1295, 2491, 1294, 1293, 1292, 1291, 2499,
     1290, 1288, 2368, 2368, 2368, 2368, 2461, 2461, 2461, 2461,
     2461, 1287, 2467, 2467, 2467, 2467, 2467, 1283, 2461, 2472,
     2472, 2472, 2472, 2472, 2467, 2486, 2486, 2486, 2486, 2486,
     1280, 2472, 3829, 2467, 1279, 3829, 1277, 2486, 3829, 3829,
     2472, 2487, 2487, 2487, 2487, 2487, 2486, 1276, 1275, 2461,
     2461, 1274, 2499, 2487, 1273, 2488, 2488, 2488, 2488, 2488,
     1270, 1269, 2487, 1268, 2461, 2461, 2467, 2488, 2461, 2493,

     2493, 2493, 2493, 2493, 1267, 1266, 2488, 1263, 1262, 1261,
     1260, 2493, 3830, 1259, 2472, 3830, 2486, 1258, 3830, 3830,
     2493, 2500, 2500, 2500, 2500, 2500, 1257, 1256, 3831, 1255,
     2487, 3831, 1254, 2500, 3831, 3831, 1253, 1250, 1249, 1248,
     1247, 1246, 2500, 2488, 2489, 2489, 2489, 2489, 2489, 2489,
     2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489,
     2489, 2489, 1243, 2489, 2489, 1242, 2489, 2489, 2489, 2489,
     2489, 2489, 2489, 1241, 2500, 1240, 1239, 2507, 2507, 2507,
     2507, 2507, 2489, 2489, 2489, 2507, 1236, 1235, 1234, 2507,
     2510, 2510, 2510, 2510, 2510, 1233, 1232, 2512, 2512, 2512,

     2512, 2512, 2510, 2518, 2518, 2518, 2518, 2518, 1229, 2512,
     2489, 2489, 2489, 2489, 2512, 2518, 1228, 1227, 2512, 2520,
     2520, 2520, 2520, 2520, 2536, 2536, 2536, 2536, 2536, 1226,
     1225, 2520, 1222, 1221, 1220, 1219, 2536, 1218, 1198, 2510,
     2520, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
     2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 2524, 1185,
     2524, 2524, 1179, 2524, 2524, 2524, 2524, 2524, 2524, 2524,
     2530, 2530, 2530, 2530, 2530, 1178, 1173, 1168, 1166, 2524,
     2524, 2524, 2530, 3832, 1165, 1163, 3832, 2530, 1162, 3832,
     3832, 2530, 2550, 2550, 2550, 2550, 2550, 1161, 1160, 3833,

     1159, 1158, 3833, 1157, 2550, 3833, 3833, 2524, 2524, 2524,
     2524, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
     2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 1155,
     2529, 2529, 1154, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
     2531, 2531, 2531, 2531, 2531, 1153, 2550, 1125, 1119, 2529,
     2529, 2529, 2531, 2532, 2532, 2532, 2532, 2532, 1112, 1103,
     3834, 2531, 1102, 3834, 1101, 2532, 3834, 3834, 1100, 2533,
     2533, 2533, 2533, 2533, 2532, 1089, 1088, 2529, 2529, 2529,
     2529, 2533, 2534, 2534, 2534, 2534, 2534, 2531, 1087, 1086,
     2533, 1085, 1082, 1080, 2534, 2538, 2538, 2538, 2538, 2538,

     1076, 2532, 1074, 2534, 1068, 1067, 1062, 2538, 2555, 2555,
     2555, 2555, 2555, 1061, 1060, 3835, 2538, 1059, 3835, 1058,
     2555, 3835, 3835, 1055, 1054, 1053, 1052, 2534, 2533, 2540,
     2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540, 2540,
     2540, 2540, 2540, 2540, 2540, 2540, 2540, 1051, 2540, 2540,
     1048, 2540, 2540, 2540, 2540, 2540, 2540, 2540, 2542, 2542,
     2542, 2542, 2542, 1047, 1046, 1045, 1044, 2540, 2540, 2540,
     2542, 2543, 2543, 2543, 2543, 2543, 1041, 1040, 3852, 2542,
     1039, 3852, 1038, 2543, 3852, 3852, 1034, 2544, 2544, 2544,
     2544, 2544, 2543, 1033, 1032, 2540, 2540, 2540, 2540, 2544,

     2570, 2570, 2570, 2570, 2570, 1030, 1029, 1028, 2544, 1027,
     1024, 1023, 2570, 2634, 2634, 2634, 2634, 2634, 1022, 2543,
     3853, 2570, 1021, 3853, 1016, 2634, 3853, 3853, 1015, 1014,
     1013, 2546, 2546, 2546, 2546, 2546, 2578, 2578, 2578, 2578,
     2578, 1012, 1008, 2546, 3855, 1003, 1002, 3855, 2578, 1001,
     3855, 3855, 2544, 2545, 2545, 2545, 2545, 2545, 2545, 2545,
     2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545,
     2545, 1000, 2545, 2545,  999, 2545, 2545, 2545, 2545, 2545,
     2545, 2545, 2546, 2571, 2571, 2571, 2571, 2571,  998, 2546,
     2578, 2545, 2545, 2545,  997, 2571, 2546, 2573, 2573, 2573,

     2573, 2573, 2606, 2606, 2606, 2606, 2606,  996,  995, 2573,
     3856,  993,  992, 3856, 2606,  991, 3856, 3856, 2573, 2545,
     2545, 2545, 2545,  990, 2571,  989, 2629, 2629, 2629, 2629,
     2629,  988, 2656, 2656, 2656, 2656, 2656,  987, 2629, 3945,
      986,  985, 3945, 2606, 2656, 3945, 3945,  984,  983,  982,
     2573, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
     2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,  981,
     2580, 2580,  980, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
     2629,  978, 2668, 2668, 2668, 2668, 2668,  977,  975, 2580,
     2580, 2580,  973,  972, 2668,  969,  968, 2670, 2670, 2670,

     2670, 2670,  965, 2668, 2696, 2696, 2696, 2696, 2696, 2670,
      963,  960,  959,  957,  956,  955, 2696, 2580, 2580, 2580,
     2580, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
     2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2668,
     2584, 2584,  954, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
      952, 2690, 2690, 2690, 2690, 2690,  951,  950,  949, 2584,
     2584, 2584, 2670, 2690, 2691, 2691, 2691, 2691, 2691,  946,
      945, 3946, 2690,  944, 3946,  943, 2691, 3946, 3946,  942,
      941, 2691,  940,  938,  937, 2691,  934, 2584, 2584, 2584,
     2584,  929, 2690, 2692, 2692, 2692, 2692, 2692, 2694, 2694,

     2694, 2694, 2694,  927,  926, 2692,  925,  924,  921,  920,
     2694, 2698, 2698, 2698, 2698, 2698,  919,  918,  915, 2694,
      913,  912,  911, 2698, 2703, 2703, 2703, 2703, 2703,  910,
      909,  908, 2698,  907,  904,  903, 2703, 2705, 2705, 2705,
     2705, 2705,  902, 3959,  901, 2703, 3959,  896,  895, 3959,
     3959, 2692, 2711, 2711, 2711, 2711, 2711,  894, 2705, 2716,
     2716, 2716, 2716, 2716, 2711, 2724, 2724, 2724, 2724, 2724,
      893, 2716, 2720, 2720, 2720, 2720, 2720, 2724, 2703,  890,
     2716,  889,  888,  887, 2720, 2726, 2726, 2726, 2726, 2726,
     3407, 3407, 3407, 3407, 3407, 2711,  884, 2726, 3960,  883,

      882, 3960, 2705, 3407, 3960, 3960, 2726, 2729, 2729, 2729,
     2729, 2729,  881,  878,  877,  876,  875, 2716,  864, 2729,
      853,  849,  845,  842, 2720, 2733, 2733, 2733, 2733, 2733,
     2720, 2735, 2735, 2735, 2735, 2735,  838, 2733, 2737, 2737,
     2737, 2737, 2737, 2735, 2739, 2739, 2739, 2739, 2739,  833,
     2737,  829, 2735,  826,  821,  810, 2739,  809,  805, 2737,
     2729, 2739,  799,  798,  797, 2739, 2740, 2740, 2740, 2740,
     2740, 2741, 2741, 2741, 2741, 2741,  796,  795, 2740,  794,
      793,  790,  789, 2741,  787,  786,  785, 2740,  784,  783,
      734,  722, 2741,  720,  709,  708, 2737, 2742, 2742, 2742,

     2742, 2742, 2744, 2744, 2744, 2744, 2744,  707,  706, 2742,
      705,  699,  698,  697, 2744, 2740,  696,  693, 2742, 2746,
     2746, 2746, 2746, 2746,  692,  691,  690,  687, 2741,  686,
      682, 2746, 2748, 2748, 2748, 2748, 2748,  680,  679,  677,
     2746,  676,  675,  671, 2748,  668,  664,  661,  657, 2742,
     2750, 2750, 2750, 2750, 2750, 2751, 2751, 2751, 2751, 2751,
      652,  651, 2750,  650,  649,  642,  639, 2751,  638,  627,
      623, 2750,  620,  618,  617, 2748, 2754, 2754, 2754, 2754,
     2754, 2756, 2756, 2756, 2756, 2756,  616,  615, 2754,  614,
      613,  611,  610, 2756, 2765, 2765, 2765, 2765, 2765,  608,

      607,  604, 2756,  603,  602,  601, 2765, 2777, 2777, 2777,
     2777, 2777, 2780, 2780, 2780, 2780, 2780,  600,  599, 2777,
     2751,  597,  595,  590, 2780, 2817, 2817, 2817, 2817, 2817,
     2832, 2832, 2832, 2832, 2832,  587,  586, 2817, 2832,  585,
      584,  581, 2832, 2846, 2846, 2846, 2846, 2846, 2857, 2857,
     2857, 2857, 2857,  580,  579, 2846, 2765,  575,  574,  573,
     2857,  571,  569,  568,  560, 2857,  556,  551, 2777, 2857,
     2858, 2858, 2858, 2858, 2858, 2878, 2878, 2878, 2878, 2878,
     2879, 2879, 2879, 2879, 2879,  545,  544, 2878,  543,  542,
      541, 2858, 2879,  539,  535,  529, 2878,  525,  520,  516,

      510, 2879,  471,  465,  449, 2846, 2883, 2883, 2883, 2883,
     2883,  448, 2886, 2886, 2886, 2886, 2886,  447, 2883, 2888,
     2888, 2888, 2888, 2888, 2886,  446, 2878,  442,  441,  438,
      434, 2888,  433, 2886, 2879, 2858, 2876, 2876, 2876, 2876,
     2876,  432, 2893, 2893, 2893, 2893, 2893,  431, 2876, 2900,
     2900, 2900, 2900, 2900, 2893, 2883, 2886,  378,  373,  361,
      357, 2900,  352, 2893, 2902, 2902, 2902, 2902, 2902,  347,
     2900, 2903, 2903, 2903, 2903, 2903, 2902,  343, 2876, 2876,
     2876,  342, 2876, 2903,  341, 2902,  340,  338,  337, 2876,
     2876, 2893, 2903,  336,  331,  330, 2876, 2876, 2900, 2904,

     2904, 2904, 2904, 2904, 2905, 2905, 2905, 2905, 2905,  323,
      320, 2904,  313, 2902,  312,  307, 2905,  306,  304,  300,
     2904,  299,  298,  296,  278, 2905, 2903, 2908, 2908, 2908,
     2908, 2908, 2957, 2957, 2957, 2957, 2957,  272,  269, 2908,
      265,  261,  253,  244, 2957,  235,  232,  224, 2904, 2905,
     2928, 2928, 2928, 2928, 2928, 2986, 2986, 2986, 2986, 2986,
      219,  217, 2928,  216,  214,  207,  202, 2986, 2988, 2988,
     2988, 2988, 2988,  193,  183,  180, 2986,  156,  151,  145,
      140, 2957,  139, 3009, 3009, 3009, 3009, 3009,  134, 2988,
     2957,  133,  126, 2928, 2928, 3009,  125,  119, 3010, 3010,

     3010, 3010, 3010,  114, 3009,  111,  110,  109, 2928, 2928,
     3010,  103, 2928, 2986, 3017, 3017, 3017, 3017, 3017, 3010,
       72,   68,   59,    0,    0,    0, 3017, 3021, 3021, 3021,
     3021, 3021, 3009, 2988,    0, 3017,    0,    0,    0, 3021,
     3025, 3025, 3025, 3025, 3025,    0,    0,    0, 3021,    0,
        0,    0, 3025,    0,    0, 3010,    0,    0,    0, 3017,
        0, 3025, 3026, 3026, 3026, 3026, 3026,    0,    0, 3021,
        0,    0,    0,    0, 3026, 3038, 3038, 3038, 3038, 3038,
        0,    0, 3025, 3026,    0,    0,    0, 3038,    0,    0,
        0,    0, 3028, 3028, 3028, 3028, 3028, 3049, 3049, 3049,

     3049, 3049,    0,    0, 3028,    0,    0,    0,    0, 3049,
        0,    0,    0, 3028,    0, 3026, 3027, 3027, 3027, 3027,
     3027, 3027, 3027, 3027, 3027, 3027, 3027, 3027, 3027, 3027,
     3027, 3027, 3027, 3027, 3028, 3027, 3027,    0, 3027, 3027,
     3027, 3027, 3027, 3027, 3027, 3029, 3029, 3029, 3029, 3029,
        0,    0,    0,    0, 3027, 3027, 3027, 3029, 3036, 3036,
     3036, 3036, 3036,    0,    0,    0, 3029,    0,    0,    0,
     3036,    0,    0,    0, 3063, 3063, 3063, 3063, 3063,    0,
        0,    0, 3027, 3027, 3027, 3027, 3063, 3083, 3083, 3083,
     3083, 3083, 3084, 3084, 3084, 3084, 3084,    0, 3029, 3083,

        0,    0,    0,    0, 3084,    0,    0,    0,    0, 3036,
     3095, 3095, 3095, 3095, 3095,    0, 3036, 3098, 3098, 3098,
     3098, 3098, 3095, 3100, 3100, 3100, 3100, 3100,    0, 3098,
     3117, 3117, 3117, 3117, 3117, 3100,    0,    0, 3098,    0,
        0,    0, 3117, 3118, 3118, 3118, 3118, 3118,    0,    0,
        0, 3117,    0,    0,    0, 3118,    0,    0,    0,    0,
     3118,    0, 3098,    0, 3118, 3120, 3120, 3120, 3120, 3120,
        0,    0,    0,    0, 3117,    0,    0, 3120, 3125, 3125,
     3125, 3125, 3125, 3127, 3127, 3127, 3127, 3127,    0,    0,
     3125,    0,    0,    0,    0, 3127,    0,    0,    0, 3125,

        0,    0,    0,    0, 3127, 3131, 3131, 3131, 3131, 3131,
     3132, 3132, 3132, 3132, 3132,    0,    0, 3131,    0,    0,
        0,    0, 3132, 3120,    0,    0, 3131,    0,    0,    0,
        0, 3132,    0,    0, 3127, 3134, 3134, 3134, 3134, 3134,
     3136, 3136, 3136, 3136, 3136,    0,    0, 3134,    0,    0,
        0,    0, 3136,    0,    0,    0, 3131,    0,    0,    0,
        0, 3136, 3138, 3138, 3138, 3138, 3138,    0, 3132, 3139,
     3139, 3139, 3139, 3139, 3138, 3141, 3141, 3141, 3141, 3141,
        0, 3139,    0, 3138,    0,    0,    0, 3141,    0,    0,
     3139, 3145, 3145, 3145, 3145, 3145, 3156, 3156, 3156, 3156,

     3156,    0,    0, 3145,    0,    0,    0,    0, 3156, 3161,
     3161, 3161, 3161, 3161,    0,    0,    0,    0, 3141,    0,
        0, 3161, 3138, 3166, 3166, 3166, 3166, 3166, 3139,    0,
     3161,    0,    0,    0,    0, 3166, 3181, 3181, 3181, 3181,
     3181, 3183, 3183, 3183, 3183, 3183,    0,    0, 3181, 3145,
        0,    0,    0, 3183,    0,    0,    0,    0, 3156, 3194,
     3194, 3194, 3194, 3194,    0, 3166,    0,    0,    0,    0,
        0, 3194, 3198, 3198, 3198, 3198, 3198,    0, 3181, 3216,
     3216, 3216, 3216, 3216, 3198, 3217, 3217, 3217, 3217, 3217,
        0, 3216,    0, 3198,    0,    0,    0, 3217,    0, 3183,

     3216, 3221, 3221, 3221, 3221, 3221, 3217, 3223, 3223, 3223,
     3223, 3223,    0, 3221, 3226, 3226, 3226, 3226, 3226, 3223,
     3216, 3194,    0, 3198,    0,    0, 3226, 3230, 3230, 3230,
     3230, 3230,    0,    0,    0, 3226,    0,    0,    0, 3230,
        0,    0,    0, 3217,    0,    0,    0,    0, 3230,    0,
     3221,    0, 3231, 3231, 3231, 3231, 3231, 3232, 3232, 3232,
     3232, 3232,    0, 3226, 3231,    0,    0,    0,    0, 3232,
        0,    0,    0, 3231,    0,    0, 3230,    0, 3232, 3233,
     3233, 3233, 3233, 3233, 3234, 3234, 3234, 3234, 3234,    0,
        0, 3233,    0,    0,    0,    0, 3234,    0,    0,    0,

     3233, 3252, 3252, 3252, 3252, 3252, 3254, 3254, 3254, 3254,
     3254, 3231,    0, 3252,    0,    0, 3232,    0, 3254, 3257,
     3257, 3257, 3257, 3257,    0,    0,    0, 3254,    0,    0,
        0, 3257, 3260, 3260, 3260, 3260, 3260,    0,    0,    0,
     3257,    0,    0,    0, 3260, 3286, 3286, 3286, 3286, 3286,
        0,    0,    0, 3260,    0,    0,    0, 3286, 3293, 3293,
     3293, 3293, 3293,    0,    0,    0, 3286,    0,    0,    0,
     3293, 3302, 3302, 3302, 3302, 3302, 3303, 3303, 3303, 3303,
     3303,    0,    0, 3302,    0,    0,    0,    0, 3303,    0,
        0, 3286, 3302,    0,    0,    0,    0, 3303, 3308, 3308,

     3308, 3308, 3308, 3310, 3310, 3310, 3310, 3310,    0,    0,
     3308,    0,    0,    0,    0, 3310,    0,    0,    0, 3308,
        0, 3303,    0,    0, 3310, 3311, 3311, 3311, 3311, 3311,
     3302, 3312, 3312, 3312, 3312, 3312,    0, 3311, 3313, 3313,
     3313, 3313, 3313, 3312,    0,    0, 3311,    0,    0,    0,
     3313, 3308, 3312,    0,    0,    0, 3310, 3315, 3315, 3315,
     3315, 3315,    0,    0,    0, 3315,    0,    0,    0, 3315,
        0, 3333, 3333, 3333, 3333, 3333, 3312, 3337, 3337, 3337,
     3337, 3337, 3311, 3333, 3342, 3342, 3342, 3342, 3342, 3337,
     3370, 3370, 3370, 3370, 3370,    0, 3342, 3376, 3376, 3376,

     3376, 3376, 3370, 3379, 3379, 3379, 3379, 3379,    0, 3376,
        0, 3370,    0,    0,    0, 3379, 3383, 3383, 3383, 3383,
     3383, 3384, 3384, 3384, 3384, 3384,    0,    0, 3383,    0,
        0,    0,    0, 3384, 3385, 3385, 3385, 3385, 3385,    0,
     3376,    0, 3376, 3376,    0,    0, 3385,    0,    0,    0,
        0, 3376,    0,    0,    0, 3385, 3386, 3386, 3386, 3386,
     3386, 3389, 3389, 3389, 3389, 3389,    0,    0, 3386,    0,
        0,    0,    0, 3389,    0,    0,    0, 3386,    0,    0,
        0,    0, 3389, 3385, 3391, 3391, 3391, 3391, 3391, 3392,
     3392, 3392, 3392, 3392,    0,    0, 3391,    0,    0,    0,

        0, 3392,    0,    0,    0, 3391,    0, 3386, 3389,    0,
     3392, 3393, 3393, 3393, 3393, 3393, 3410, 3410, 3410, 3410,
     3410,    0,    0, 3393,    0,    0,    0,    0, 3410,    0,
        0, 3391, 3393,    0,    0,    0,    0, 3410, 3443, 3443,
     3443, 3443, 3443, 3448, 3448, 3448, 3448, 3448,    0, 3392,
     3443,    0,    0,    0,    0, 3448, 3450, 3450, 3450, 3450,
     3450,    0,    0,    0, 3450,    0,    0,    0, 3450, 3452,
     3452, 3452, 3452, 3452, 3453, 3453, 3453, 3453, 3453,    0,
        0, 3452,    0,    0,    0,    0, 3453,    0,    0, 3448,
     3452,    0,    0,    0,    0, 3453, 3456, 3456, 3456, 3456,

     3456, 3458, 3458, 3458, 3458, 3458,    0,    0, 3456,    0,
        0,    0,    0, 3458,    0,    0,    0, 3456,    0,    0,
     3453,    0, 3458, 3452, 3459, 3459, 3459, 3459, 3459, 3460,
     3460, 3460, 3460, 3460,    0,    0, 3459,    0,    0,    0,
        0, 3460,    0,    0,    0, 3459, 3464, 3464, 3464, 3464,
     3464, 3471, 3471, 3471, 3471, 3471,    0,    0, 3464,    0,
        0,    0,    0, 3471,    0,    0,    0, 3459, 3477, 3477,
     3477, 3477, 3477, 3500, 3500, 3500, 3500, 3500,    0,    0,
     3477,    0,    0,    0,    0, 3500, 3501, 3501, 3501, 3501,
     3501,    0,    0,    0, 3500,    0,    0,    0, 3501, 3506,

     3506, 3506, 3506, 3506,    0,    0,    0, 3501,    0,    0,
        0, 3506, 3508, 3508, 3508, 3508, 3508,    0,    0,    0,
     3506,    0,    0,    0, 3508,    0, 3500, 3517, 3517, 3517,
     3517, 3517, 3539, 3539, 3539, 3539, 3539,    0,    0, 3517,
        0,    0,    0,    0, 3539, 3620, 3620, 3620, 3620, 3620,
        0,    0,    0, 3539,    0,    0,    0, 3620, 3506, 3622,
     3622, 3622, 3622, 3622,    0,    0, 3620,    0,    0,    0,
        0, 3622,    0,    0, 3508, 3636, 3636, 3636, 3636, 3636,
     3622,    0,    0, 3539,    0,    0,    0, 3636,    0, 3517,
     3539, 3639, 3639, 3639, 3639, 3639, 3655, 3655, 3655, 3655,

     3655,    0,    0, 3639,    0,    0,    0,    0, 3655, 3657,
     3657, 3657, 3657, 3657,    0,    0,    0,    0,    0,    0,
        0, 3657, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664,
     3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664,
     3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664,
     3664, 3665, 3665, 3665, 3665, 3665, 3665, 3665, 3665, 3665,
     3665, 3665, 3665, 3665, 3665, 3665, 3665, 3665, 3665, 3665,
     3665, 3665, 3665, 3665, 3665, 3665, 3665, 3665, 3665, 3665,
     3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666,
     3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666,

     3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3667,
     3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667,
     3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667,
     3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667, 3668, 3668,
     3668, 3668, 3668, 3668, 3668, 3668, 3668, 3668, 3668, 3668,
     3668, 3668, 3668, 3668, 3668, 3668, 3668, 3668, 3668, 3668,
     3668, 3668, 3668, 3668, 3668, 3668, 3668, 3669, 3669, 3669,
     3669, 3669, 3669, 3669, 3669, 3669, 3669, 3669, 3669, 3669,
     3669, 3669, 3669, 3669, 3669, 3669, 3669, 3669, 3669, 3669,
     3669, 3669, 3669, 3669, 3669, 3669, 3670, 3670, 3670, 3670,

     3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670,
     3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670,
     3670, 3670, 3670, 3670, 3670, 3671, 3671, 3671, 3671, 3671,
     3671, 3671, 3671, 3671, 3671, 3671, 3671, 3671, 3671, 3671,
     3671, 3671, 3671, 3671, 3671, 3671, 3671, 3671, 3671, 3671,
     3671, 3671, 3671, 3671, 3672, 3672, 3672, 3672, 3672, 3672,
     3672, 3672, 3672, 3672, 3672, 3672, 3672, 3672, 3672, 3672,
     3672, 3672, 3672, 3672, 3672, 3672, 3672, 3672, 3672, 3672,
     3672, 3672, 3672, 3673, 3673, 3673, 3673, 3673, 3673, 3673,
     3673, 3673, 3673, 3673, 3673, 3673, 3673, 3673, 3673, 3673,

     3673, 3673, 3673, 3673, 3673, 3673, 3673, 3673, 3673, 3673,
     3673, 3673, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674,
     3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674,
     3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674,
     3674, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675,
     3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675,
     3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675,
     3676, 3676, 3676, 3676, 3676, 3676, 3676, 3676, 3676, 3676,
     3676, 3676, 3676, 3676, 3676, 3676, 3676, 3676, 3676, 3676,
     3676, 3676, 3676, 3676, 3676, 3676, 3676, 3676, 3676, 3677,

     3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677,
     3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677,
     3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3678, 3678,
     3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678,
     3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678,
     3678, 3678, 3678, 3678, 3678, 3678, 3678, 3679, 3679, 3679,
     3679, 3679, 3679, 3679, 3679, 3679, 3679, 3679, 3679, 3679,
     3679, 3679, 3679, 3679, 3679, 3679, 3679, 3679, 3679, 3679,
     3679, 3679, 3679, 3679, 3679, 3679, 3680, 3680,    0,    0,
     3680, 3680,    0, 3680, 3680, 3680, 3680, 3680, 3680, 3680,

     3681, 3681,    0,    0,    0,    0,    0, 3681,    0,    0,
     3681, 3681, 3681, 3681,    0, 3681, 3681,    0, 3681, 3681,
     3681, 3681, 3681, 3681, 3681, 3682,    0, 3682, 3682, 3682,
        0,    0, 3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682,
     3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682,
     3683,    0, 3683, 3683, 3683,    0, 3683, 3683, 3683, 3683,
     3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683,
     3683, 3683, 3683, 3683, 3683, 3684, 3684,    0,    0,    0,
        0,    0,    0,    0,    0, 3684, 3684, 3684, 3684,    0,
     3684, 3684,    0, 3684, 3684, 3684, 3684, 3684, 3684, 3684,

     3685, 3685, 3685, 3685,    0, 3685, 3685,    0, 3685, 3685,
     3685, 3685, 3685, 3685, 3685, 3686, 3686, 3686, 3686,    0,
     3686, 3686,    0, 3686, 3686, 3686, 3686, 3686, 3686, 3686,
     3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687,
     3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687,
     3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687, 3688,
     3688, 3688, 3688, 3688, 3688, 3688, 3688, 3688, 3688, 3688,
     3688, 3688, 3688, 3688, 3688, 3688, 3688, 3688, 3688, 3688,
     3688, 3688, 3688, 3688, 3688, 3688, 3688, 3688, 3689, 3689,
     3689,    0,    0, 3689, 3689,    0, 3689, 3689, 3689, 3689,

     3689, 3689, 3689, 3690, 3690, 3690, 3690, 3690, 3690, 3690,
     3690, 3690, 3690, 3690, 3690, 3690, 3690, 3690, 3690, 3690,
     3690, 3690, 3690, 3690, 3690, 3690, 3690, 3690, 3690, 3690,
     3690, 3690, 3691, 3691, 3691, 3691, 3691, 3691, 3691, 3691,
     3691, 3691, 3691, 3691, 3691, 3691, 3691, 3691, 3691, 3691,
     3691, 3691, 3691, 3691, 3691, 3691, 3691, 3691, 3691, 3691,
     3691, 3692, 3692, 3692,    0,    0, 3692, 3692,    0, 3692,
     3692, 3692, 3692, 3692, 3692, 3692, 3693, 3693, 3693, 3693,
     3693, 3693, 3693, 3693, 3693, 3693, 3693, 3693, 3693, 3693,
     3693, 3693, 3693, 3693, 3693, 3693, 3693, 3693, 3693, 3693,

     3693, 3693, 3693, 3693, 3693, 3694, 3694, 3694, 3694, 3694,
     3694, 3694, 3694, 3694, 3694, 3694, 3694, 3694, 3694, 3694,
     3694, 3694, 3694, 3694, 3694, 3694, 3694, 3694, 3694, 3694,
     3694, 3694, 3694, 3694, 3695, 3695, 3695, 3695, 3695, 3695,
     3695, 3695, 3695, 3695, 3695, 3695, 3695, 3695, 3695, 3695,
     3695, 3695, 3695, 3695, 3695, 3695, 3695, 3695, 3695, 3695,
     3695, 3695, 3695, 3696, 3696, 3696, 3696, 3696, 3696, 3696,
     3696, 3696, 3696, 3696, 3696, 3696, 3696, 3696, 3696, 3696,
     3696, 3696, 3696, 3696, 3696, 3696, 3696, 3696, 3696, 3696,
     3696, 3696, 3697, 3697, 3697, 3697,    0, 3697, 3697,    0,

     3697, 3697, 3697, 3697, 3697, 3697, 3697, 3698, 3698,    0,
        0, 3698,    0,    0,    0,    0,    0, 3698, 3698, 3698,
     3698,    0, 3698, 3698,    0, 3698, 3698, 3698, 3698, 3698,
     3698, 3698, 3699,    0, 3699, 3699, 3699, 3699, 3699, 3699,
     3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699,
     3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699, 3700,
     3700, 3700,    0,    0, 3700, 3700,    0, 3700, 3700, 3700,
     3700, 3700, 3700, 3700, 3701, 3701, 3701, 3701,    0, 3701,
     3701, 3701, 3701, 3701, 3701, 3701, 3701, 3701, 3701, 3701,
     3701, 3701, 3702,    0, 3702, 3702, 3702, 3702, 3702, 3702,

     3702, 3702, 3702, 3702, 3702, 3702, 3702, 3702, 3702, 3702,
     3702, 3702, 3702, 3702, 3702, 3702, 3702, 3702, 3702, 3703,
        0, 3703,    0, 3703,    0, 3703, 3703, 3703, 3703, 3703,
     3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703,
     3703, 3703, 3703, 3703, 3704, 3704, 3704, 3704,    0, 3704,
     3704,    0, 3704, 3704, 3704, 3704, 3704, 3704, 3704, 3705,
     3705, 3705, 3705,    0, 3705, 3705,    0, 3705, 3705, 3705,
     3705, 3705, 3705, 3705, 3706, 3706, 3706, 3706, 3706, 3706,
     3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706,
     3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706,

     3706, 3706, 3706, 3707, 3707, 3707, 3707, 3707, 3707, 3707,
     3707, 3707, 3707, 3707, 3707, 3707, 3707, 3707, 3707, 3707,
     3707, 3707, 3707, 3707, 3707, 3707, 3707, 3707, 3707, 3707,
     3707, 3707, 3708, 3708, 3708, 3708,    0, 3708, 3708,    0,
     3708, 3708, 3708, 3708, 3708, 3708, 3708, 3709,    0, 3709,
     3709, 3709, 3709, 3709, 3709, 3709, 3709, 3709, 3709, 3709,
     3709, 3709, 3709, 3709, 3709, 3709, 3709, 3709, 3709, 3709,
     3709, 3709, 3709, 3709, 3710,    0, 3710, 3710, 3710, 3710,
     3710, 3710, 3710, 3710, 3710, 3710, 3710, 3710, 3710, 3710,
     3710, 3710, 3710, 3710, 3710, 3710, 3710, 3710, 3710, 3710,

     3710, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711,
     3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711,
     3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711,
     3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712,
     3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712,
     3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3713,
     3713, 3713, 3713, 3713, 3713, 3713, 3713, 3713, 3713, 3713,
     3713, 3713, 3713, 3713, 3713, 3713, 3713, 3713, 3713, 3713,
     3713, 3713, 3713, 3713, 3713, 3713, 3713, 3713, 3714, 3714,
     3714, 3714, 3714, 3714, 3714, 3714, 3714, 3714, 3714, 3714,

     3714, 3714, 3714, 3714, 3714, 3714, 3714, 3714, 3714, 3714,
     3714, 3714, 3714, 3714, 3714, 3714, 3714, 3715, 3715,    0,
     3715, 3715, 3715, 3715, 3715, 3715, 3715, 3716,    0,    0,
     3716, 3716,    0, 3716, 3716, 3716, 3716, 3716, 3716, 3716,
     3717, 3717,    0,    0, 3717, 3717,    0, 3717, 3717, 3717,
     3717, 3717, 3717, 3717, 3718, 3718,    0,    0,    0,    0,
        0, 3718,    0,    0, 3718, 3718, 3718, 3718,    0, 3718,
     3718,    0, 3718, 3718, 3718, 3718, 3718, 3718, 3718, 3719,
        0,    0,    0,    0,    0, 3719, 3719,    0, 3719, 3719,
     3719, 3719, 3719, 3719, 3719, 3720,    0, 3720, 3720, 3720,

        0,    0, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720,
     3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720,
     3721,    0, 3721, 3721, 3721,    0, 3721, 3721, 3721, 3721,
     3721, 3721, 3721, 3721, 3721, 3721, 3721, 3721, 3721, 3721,
     3721, 3721, 3721, 3721, 3721, 3722, 3722,    0,    0,    0,
        0,    0,    0,    0,    0, 3722, 3722, 3722, 3722,    0,
     3722, 3722,    0, 3722, 3722, 3722, 3722, 3722, 3722, 3722,
     3723, 3723,    0, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
     3724, 3724, 3724, 3724,    0, 3724, 3724,    0, 3724, 3724,
     3724, 3724, 3724, 3724, 3724, 3725, 3725,    0, 3725, 3725,

     3725, 3725, 3725, 3725, 3725, 3726, 3726, 3726, 3726,    0,
     3726, 3726,    0, 3726, 3726, 3726, 3726, 3726, 3726, 3726,
     3727, 3727,    0, 3727, 3727, 3727, 3727, 3727, 3727, 3727,
     3728, 3728, 3728, 3728, 3728, 3728, 3728, 3728, 3728, 3728,
     3728, 3728, 3728, 3728, 3728, 3728, 3728, 3728, 3728, 3728,
     3728, 3728, 3728, 3728, 3728, 3728, 3728, 3728, 3728, 3729,
     3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3730, 3730,
     3730,    0,    0, 3730, 3730,    0, 3730, 3730, 3730, 3730,

     3730, 3730, 3730, 3731, 3731, 3731, 3731, 3731, 3731, 3731,
     3731, 3731, 3731, 3731, 3731, 3731, 3731, 3731, 3731, 3731,
     3731, 3731, 3731, 3731, 3731, 3731, 3731, 3731, 3731, 3731,
     3731, 3731, 3732, 3732, 3732, 3732, 3732, 3732, 3732, 3732,
     3732, 3732, 3732, 3732, 3732, 3732, 3732, 3732, 3732, 3732,
     3732, 3732, 3732, 3732, 3732, 3732, 3732, 3732, 3732, 3732,
     3732, 3733, 3733, 3733,    0,    0, 3733, 3733,    0, 3733,
     3733, 3733, 3733, 3733, 3733, 3733, 3734, 3734, 3734, 3734,
     3734, 3734, 3734, 3734, 3734, 3734, 3734, 3734, 3734, 3734,
     3734, 3734, 3734, 3734, 3734, 3734, 3734, 3734, 3734, 3734,

     3734, 3734, 3734, 3734, 3734, 3735, 3735, 3735, 3735, 3735,
     3735, 3735, 3735, 3735, 3735, 3735, 3735, 3735, 3735, 3735,
     3735, 3735, 3735, 3735, 3735, 3735, 3735, 3735, 3735, 3735,
     3735, 3735, 3735, 3735, 3736, 3736, 3736, 3736, 3736, 3736,
     3736, 3736, 3736, 3736, 3736, 3736, 3736, 3736, 3736, 3736,
     3736, 3736, 3736, 3736, 3736, 3736, 3736, 3736, 3736, 3736,
     3736, 3736, 3736, 3737, 3737, 3737, 3737, 3737, 3737, 3737,
     3737, 3737, 3737, 3737, 3737, 3737, 3737, 3737, 3737, 3737,
     3737, 3737, 3737, 3737, 3737, 3737, 3737, 3737, 3737, 3737,
     3737, 3737, 3738, 3738, 3738, 3738, 3738, 3738, 3738, 3738,

     3738, 3738, 3738,    0, 3738,    0, 3738, 3738,    0,    0,
     3738, 3738,    0,    0,    0,    0,    0,    0, 3738, 3738,
     3738, 3739, 3739, 3739, 3739, 3739, 3739, 3739, 3739, 3739,
     3739, 3739,    0, 3739,    0, 3739, 3739,    0,    0, 3739,
        0,    0,    0,    0,    0,    0,    0, 3739, 3739, 3739,
     3740, 3740, 3740, 3740, 3740, 3740, 3740, 3740, 3740, 3740,
     3740,    0, 3740,    0, 3740, 3740,    0,    0, 3740,    0,
        0,    0,    0,    0,    0,    0, 3740, 3740, 3740, 3741,
     3741, 3741, 3741, 3741, 3741, 3741, 3741, 3741, 3741, 3741,
        0, 3741,    0, 3741, 3741,    0,    0, 3741,    0,    0,

        0,    0,    0,    0,    0, 3741, 3741, 3741, 3742, 3742,
     3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742,    0,
     3742,    0, 3742, 3742,    0,    0, 3742,    0,    0,    0,
        0,    0,    0,    0, 3742, 3742, 3742, 3743, 3743, 3743,
     3743, 3743, 3743, 3743, 3743, 3743, 3743, 3743,    0, 3743,
        0, 3743, 3743,    0,    0, 3743,    0,    0,    0,    0,
     3743, 3743,    0, 3743, 3743, 3743, 3744, 3744, 3744, 3744,
     3744, 3744, 3744, 3744, 3744, 3744, 3744,    0, 3744,    0,
     3744, 3744,    0,    0, 3744,    0,    0,    0,    0,    0,
        0,    0, 3744, 3744, 3744, 3745, 3745, 3745, 3745, 3745,

     3745, 3745, 3745, 3745, 3745, 3745,    0, 3745,    0, 3745,
     3745,    0,    0, 3745,    0,    0,    0,    0,    0, 3745,
     3745, 3745, 3745, 3745, 3746, 3746, 3746, 3746, 3746, 3746,
     3746, 3746, 3746, 3746, 3746,    0, 3746,    0, 3746, 3746,
        0,    0, 3746,    0,    0,    0,    0,    0,    0,    0,
     3746, 3746, 3746, 3747, 3747, 3747, 3747, 3747, 3747, 3747,
     3747, 3747, 3747, 3747,    0, 3747,    0, 3747, 3747,    0,
        0, 3747,    0,    0,    0,    0,    0,    0,    0, 3747,
     3747, 3747, 3748, 3748, 3748, 3748, 3748, 3748, 3748, 3748,
     3748, 3748, 3748,    0, 3748,    0, 3748, 3748,    0,    0,

     3748,    0, 3748,    0,    0,    0,    0,    0, 3748, 3748,
     3748, 3749, 3749, 3749, 3749, 3749, 3749, 3749, 3749, 3749,
     3749, 3749,    0, 3749,    0, 3749, 3749,    0,    0, 3749,
        0,    0,    0,    0,    0,    0,    0, 3749, 3749, 3749,
     3750, 3750, 3750, 3750,    0, 3750, 3750,    0, 3750, 3750,
     3750, 3750, 3750, 3750, 3750, 3751, 3751,    0, 3751, 3751,
     3751, 3751, 3751, 3751, 3751, 3752, 3752,    0,    0, 3752,
        0,    0,    0,    0,    0, 3752, 3752, 3752, 3752,    0,
     3752, 3752,    0, 3752, 3752, 3752, 3752, 3752, 3752, 3752,
     3753, 3753,    0, 3753, 3753, 3753, 3753, 3753, 3753, 3753,

     3754,    0, 3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754,
     3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754,
     3754, 3754, 3754, 3754, 3754, 3754, 3754, 3755,    0, 3755,
     3755, 3755, 3755, 3755, 3755, 3755, 3755, 3755, 3755, 3755,
     3755, 3755, 3755, 3755, 3755, 3755, 3755, 3755, 3755, 3755,
     3755, 3755, 3755, 3755, 3756, 3756, 3756,    0,    0, 3756,
     3756,    0, 3756, 3756, 3756, 3756, 3756, 3756, 3756, 3757,
     3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757,
     3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757,
     3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3758, 3758,

     3758, 3758,    0, 3758, 3758, 3758, 3758, 3758, 3758, 3758,
     3758, 3758, 3758, 3758, 3758, 3758, 3759,    0, 3759, 3759,
     3759, 3759, 3759, 3759, 3759, 3759, 3759, 3759, 3759, 3759,
     3759, 3759, 3759, 3759, 3759, 3759, 3759, 3759, 3759, 3759,
     3759, 3759, 3759, 3760,    0, 3760,    0, 3760,    0, 3760,
     3760, 3760, 3760, 3760, 3760, 3760, 3760, 3760, 3760, 3760,
     3760, 3760, 3760, 3760, 3760, 3760, 3760, 3760, 3761, 3761,
     3761, 3761,    0, 3761, 3761,    0, 3761, 3761, 3761, 3761,
     3761, 3761, 3761, 3762, 3762,    0, 3762, 3762, 3762, 3762,
     3762, 3762, 3762, 3763, 3763, 3763, 3763,    0, 3763, 3763,

        0, 3763, 3763, 3763, 3763, 3763, 3763, 3763, 3764, 3764,
        0, 3764, 3764, 3764, 3764, 3764, 3764, 3764, 3765, 3765,
     3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765,
     3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765,
     3765, 3765, 3765, 3765, 3765, 3765, 3765, 3766, 3766, 3766,
     3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766,
     3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766,
     3766, 3766, 3766, 3766, 3766, 3766, 3767, 3767, 3767, 3767,
        0, 3767, 3767,    0, 3767, 3767, 3767, 3767, 3767, 3767,
     3767, 3768, 3768,    0, 3768, 3768, 3768, 3768, 3768, 3768,

     3768, 3769,    0, 3769, 3769, 3769, 3769, 3769, 3769, 3769,
     3769, 3769, 3769, 3769, 3769, 3769, 3769, 3769, 3769, 3769,
     3769, 3769, 3769, 3769, 3769, 3769, 3769, 3769, 3770,    0,
     3770, 3770, 3770, 3770, 3770, 3770, 3770, 3770,    0, 3770,
     3770, 3770, 3770, 3770, 3770, 3770, 3770, 3770, 3770, 3770,
     3770, 3770, 3770, 3770, 3770, 3771,    0, 3771, 3771, 3771,
     3771, 3771, 3771, 3771, 3771, 3771, 3771, 3771, 3771, 3771,
     3771, 3771, 3771, 3771, 3771, 3771, 3771, 3771, 3771, 3771,
     3771, 3771, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772,
     3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772,

     3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772,
     3772, 3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773,
     3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773,
     3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773,
     3774, 3774, 3774, 3774, 3774, 3774, 3774, 3774, 3774, 3774,
     3774,    0, 3774,    0, 3774, 3774,    0,    0, 3774,    0,
        0,    0,    0,    0,    0,    0, 3774, 3774, 3774, 3775,
     3775, 3775,    0,    0, 3775, 3775,    0, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3776,    0,    0, 3776, 3776,    0,
     3776, 3776, 3776, 3776, 3776, 3776, 3776, 3777,    0,    0,

     3777, 3777,    0, 3777, 3777, 3777, 3777, 3777, 3777, 3777,
     3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778,
     3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778,
     3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3779,
     3779,    0,    0,    0,    0,    0, 3779,    0,    0, 3779,
     3779, 3779,    0,    0, 3779, 3779,    0, 3779, 3779, 3779,
     3779, 3779, 3779, 3779, 3780, 3780,    0,    0,    0,    0,
        0, 3780,    0,    0, 3780, 3780, 3780, 3780,    0, 3780,
     3780,    0, 3780, 3780, 3780, 3780, 3780, 3780, 3780, 3781,
        0,    0,    0,    0,    0, 3781, 3781,    0, 3781, 3781,

     3781, 3781, 3781, 3781, 3781, 3784, 3784,    0,    0,    0,
        0,    0,    0,    0,    0, 3784, 3784, 3784,    0,    0,
     3784, 3784,    0, 3784, 3784, 3784, 3784, 3784, 3784, 3784,
     3785, 3785, 3785, 3785, 3785, 3785, 3785, 3785, 3785, 3785,
     3785,    0, 3785,    0, 3785, 3785,    0,    0, 3785,    0,
        0,    0,    0,    0,    0,    0, 3785, 3785, 3785, 3786,
     3786, 3786,    0,    0, 3786, 3786,    0, 3786, 3786, 3786,
     3786, 3786, 3786, 3786, 3787, 3787, 3787, 3787,    0, 3787,
     3787,    0, 3787, 3787, 3787, 3787, 3787, 3787, 3787, 3788,
     3788,    0, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3789,

     3789, 3789,    0,    0, 3789, 3789,    0, 3789, 3789, 3789,
     3789, 3789, 3789, 3789, 3790, 3790, 3790, 3790,    0, 3790,
     3790,    0, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3791,
     3791, 3791,    0,    0, 3791, 3791,    0, 3791, 3791, 3791,
     3791, 3791, 3791, 3791, 3792, 3792, 3792, 3792, 3792, 3792,
     3792, 3792, 3792, 3792, 3792,    0, 3792,    0, 3792, 3792,
        0,    0, 3792,    0,    0,    0,    0,    0,    0,    0,
     3792, 3792, 3792, 3793, 3793, 3793, 3793, 3793, 3793, 3793,
     3793, 3793, 3793, 3793,    0, 3793,    0, 3793, 3793,    0,
        0, 3793,    0,    0,    0,    0,    0,    0,    0, 3793,

     3793, 3793, 3794, 3794, 3794, 3794, 3794, 3794, 3794, 3794,
     3794, 3794, 3794,    0, 3794,    0, 3794, 3794,    0,    0,
     3794,    0,    0,    0,    0,    0,    0,    0, 3794, 3794,
     3794, 3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795,
     3795, 3795,    0, 3795,    0, 3795, 3795,    0,    0, 3795,
        0,    0,    0,    0,    0,    0,    0, 3795, 3795, 3795,
     3796, 3796, 3796, 3796, 3796, 3796, 3796, 3796, 3796, 3796,
     3796,    0, 3796,    0, 3796, 3796,    0,    0, 3796,    0,
        0, 3796,    0,    0,    0,    0, 3796, 3796, 3796, 3797,
     3797, 3797,    0,    0, 3797, 3797,    0, 3797, 3797, 3797,

     3797, 3797, 3797, 3797, 3798, 3798,    0,    0, 3798,    0,
        0,    0,    0,    0, 3798, 3798, 3798,    0,    0, 3798,
     3798,    0, 3798, 3798, 3798, 3798, 3798, 3798, 3798, 3799,
        0, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799,
     3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799,
     3799, 3799, 3799, 3799, 3799, 3799, 3800, 3800, 3800, 3800,
     3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800,
     3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800,
     3800, 3800, 3800, 3800, 3800, 3802, 3802, 3802,    0,    0,
     3802, 3802,    0, 3802, 3802, 3802, 3802, 3802, 3802, 3802,

     3803, 3803, 3803,    0,    0, 3803, 3803,    0, 3803, 3803,
     3803, 3803, 3803, 3803, 3803, 3804, 3804, 3804,    0,    0,
     3804, 3804,    0, 3804, 3804, 3804, 3804, 3804, 3804, 3804,
     3805,    0, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805,
     3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805,
     3805, 3805, 3805, 3805, 3805, 3805, 3805, 3808, 3808, 3808,
        0,    0, 3808, 3808,    0, 3808, 3808, 3808, 3808, 3808,
     3808, 3808, 3809, 3809, 3809, 3809, 3809, 3809, 3809, 3809,
     3809, 3809, 3809, 3809, 3809, 3809, 3809, 3809, 3809, 3809,
     3809, 3809, 3809, 3809, 3809, 3809, 3809, 3809, 3809, 3809,

     3809, 3810, 3810,    0,    0,    0,    0,    0, 3810,    0,
        0, 3810, 3810, 3810,    0,    0, 3810, 3810,    0, 3810,
     3810, 3810, 3810, 3810, 3810, 3810, 3811, 3811,    0,    0,
        0,    0,    0, 3811,    0,    0, 3811, 3811, 3811, 3811,
        0, 3811, 3811,    0, 3811, 3811, 3811, 3811, 3811, 3811,
     3811, 3812,    0,    0,    0,    0,    0, 3812, 3812,    0,
     3812, 3812, 3812, 3812, 3812, 3812, 3812, 3813, 3813, 3813,
     3813, 3813, 3813, 3813, 3813, 3813, 3813, 3813, 3813, 3813,
     3813, 3813, 3813, 3813, 3813, 3813, 3813, 3813, 3813, 3813,
     3813, 3813, 3813, 3813, 3813, 3813, 3814, 3814, 3814, 3814,

     3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814,
     3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814,
     3814, 3814, 3814, 3814, 3814, 3815, 3815, 3815, 3815, 3815,
     3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815,
     3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815,
     3815, 3815, 3815, 3815, 3816, 3816, 3816, 3816, 3816, 3816,
     3816, 3816, 3816, 3816, 3816, 3816, 3816, 3816, 3816, 3816,
     3816, 3816, 3816, 3816, 3816, 3816, 3816, 3816, 3816, 3816,
     3816, 3816, 3816, 3817,    0, 3817, 3817,    0,    0, 3817,
     3817, 3818,    0, 3818, 3818,    0,    0, 3818, 3818, 3819,

     3819,    0,    0,    0,    0,    0,    0,    0,    0, 3819,
     3819, 3819,    0,    0, 3819, 3819,    0, 3819, 3819, 3819,
     3819, 3819, 3819, 3819, 3820, 3820, 3820,    0,    0, 3820,
     3820,    0, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3821,
     3821, 3821, 3821,    0, 3821, 3821,    0, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3822, 3822,    0, 3822, 3822, 3822,
     3822, 3822, 3822, 3822, 3823, 3823, 3823, 3823, 3823, 3823,
     3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823,
     3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823,
     3823, 3823, 3823, 3824, 3824, 3824, 3824, 3824, 3824, 3824,

     3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824,
     3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824,
     3824, 3824, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825,
     3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825,
     3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825,
     3825, 3826, 3826, 3826,    0,    0, 3826, 3826,    0, 3826,
     3826, 3826, 3826, 3826, 3826, 3826, 3827, 3827, 3827, 3827,
        0, 3827, 3827,    0, 3827, 3827, 3827, 3827, 3827, 3827,
     3827, 3836, 3836, 3836, 3836, 3836, 3836, 3836, 3836, 3836,
     3836, 3836, 3836, 3836, 3836, 3836, 3836, 3836, 3836, 3836,

     3836, 3836, 3836, 3836, 3836, 3836, 3836, 3836, 3836, 3836,
     3837, 3837, 3837, 3837, 3837, 3837, 3837, 3837, 3837, 3837,
     3837,    0, 3837,    0, 3837, 3837,    0,    0, 3837,    0,
        0,    0,    0,    0,    0,    0, 3837, 3837, 3837, 3838,
     3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838,
     3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838,
     3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3839, 3839,
     3839, 3839, 3839, 3839, 3839, 3839, 3839, 3839, 3839,    0,
     3839,    0, 3839, 3839,    0,    0, 3839,    0,    0,    0,
        0,    0,    0,    0, 3839, 3839, 3839, 3840, 3840, 3840,

     3840, 3840, 3840, 3840, 3840, 3840, 3840, 3840,    0, 3840,
        0, 3840, 3840,    0,    0, 3840,    0,    0,    0,    0,
        0,    0,    0, 3840, 3840, 3840, 3841, 3841, 3841, 3841,
     3841, 3841, 3841, 3841, 3841, 3841, 3841,    0, 3841,    0,
     3841, 3841,    0,    0, 3841,    0,    0,    0,    0,    0,
        0,    0, 3841, 3841, 3841, 3842, 3842, 3842, 3842, 3842,
     3842, 3842, 3842, 3842, 3842, 3842,    0, 3842,    0, 3842,
     3842,    0,    0, 3842,    0,    0,    0,    0,    0,    0,
        0, 3842, 3842, 3842, 3843, 3843, 3843, 3843, 3843, 3843,
     3843, 3843, 3843, 3843, 3843,    0, 3843,    0, 3843, 3843,

        0,    0, 3843,    0,    0,    0,    0,    0,    0,    0,
     3843, 3843, 3843, 3844, 3844, 3844, 3844, 3844, 3844, 3844,
     3844, 3844, 3844, 3844,    0, 3844,    0, 3844, 3844,    0,
        0, 3844,    0,    0,    0,    0,    0,    0,    0, 3844,
     3844, 3844, 3845, 3845, 3845, 3845, 3845, 3845, 3845, 3845,
     3845, 3845, 3845,    0, 3845,    0, 3845, 3845,    0,    0,
     3845,    0,    0,    0, 3845,    0,    0,    0, 3845, 3845,
     3845, 3846, 3846, 3846,    0,    0, 3846, 3846,    0, 3846,
     3846, 3846, 3846, 3846, 3846, 3846, 3847, 3847,    0,    0,
     3847,    0,    0,    0,    0,    0, 3847, 3847, 3847,    0,

        0, 3847, 3847,    0, 3847, 3847, 3847, 3847, 3847, 3847,
     3847, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848,
        0, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848,
     3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848,
     3849,    0, 3849, 3849,    0,    0, 3849, 3849, 3850, 3850,
     3850,    0,    0, 3850, 3850,    0, 3850, 3850, 3850, 3850,
     3850, 3850, 3850, 3851, 3851, 3851,    0,    0, 3851, 3851,
        0, 3851, 3851, 3851, 3851, 3851, 3851, 3851, 3854, 3854,
     3854,    0,    0, 3854, 3854,    0, 3854, 3854, 3854, 3854,
     3854, 3854, 3854, 3857,    0, 3857, 3857,    0,    0, 3857,

     3857, 3858,    0, 3858, 3858,    0,    0, 3858, 3858, 3859,
     3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859,    0, 3859,
     3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859,
     3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 3860, 3860,
     3860, 3860, 3860, 3860, 3860, 3860, 3860, 3860, 3860, 3860,
     3860, 3860, 3860, 3860, 3860, 3860, 3860, 3860, 3860, 3860,
     3860, 3860, 3860, 3860, 3860, 3860, 3860, 3861, 3861,    0,
        0,    0,    0,    0, 3861,    0,    0, 3861, 3861, 3861,
     3861,    0, 3861, 3861,    0, 3861, 3861, 3861, 3861, 3861,
     3861, 3861, 3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862,

     3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862,
     3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862,
     3862, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863,
     3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863,
     3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863,
     3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864,
     3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864,
     3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3865,
     3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865,
     3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865,

     3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865, 3866, 3866,
     3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866,
     3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866,
     3866, 3866, 3866, 3866, 3866, 3866, 3866, 3867, 3867, 3867,
     3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867,
     3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867,
     3867, 3867, 3867, 3867, 3867, 3867, 3868,    0,    0,    0,
        0,    0, 3868, 3868,    0, 3868, 3868, 3868, 3868, 3868,
     3868, 3868, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869,
     3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869,

     3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869,
     3869, 3870, 3870, 3870, 3870, 3870, 3870, 3870, 3870, 3870,
     3870, 3870, 3870, 3870, 3870, 3870, 3870, 3870, 3870, 3870,
     3870, 3870, 3870, 3870, 3870, 3870, 3870, 3870, 3870, 3870,
     3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871,
     3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871,
     3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3872,
     3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872,
     3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872,
     3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3873, 3873,

     3873, 3873,    0, 3873, 3873,    0, 3873, 3873, 3873, 3873,
     3873, 3873, 3873, 3874, 3874,    0, 3874, 3874, 3874, 3874,
     3874, 3874, 3874, 3875, 3875, 3875, 3875,    0, 3875, 3875,
        0, 3875, 3875, 3875, 3875, 3875, 3875, 3875, 3876,    0,
     3876, 3876,    0,    0, 3876, 3876, 3877,    0, 3877, 3877,
        0,    0, 3877, 3877, 3878,    0, 3878, 3878,    0,    0,
     3878, 3878, 3879,    0, 3879, 3879,    0,    0, 3879, 3879,
     3880,    0, 3880, 3880,    0,    0, 3880, 3880, 3881,    0,
     3881, 3881,    0,    0, 3881, 3881, 3882,    0, 3882, 3882,
        0,    0, 3882, 3882, 3883,    0, 3883, 3883,    0,    0,

     3883, 3883, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884,
     3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884,
     3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884,
     3884, 3885, 3885, 3885, 3885, 3885, 3885, 3885, 3885, 3885,
     3885, 3885,    0, 3885,    0, 3885, 3885,    0,    0, 3885,
        0,    0,    0,    0,    0,    0,    0, 3885, 3885, 3885,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3887,
     3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887,

     3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887,
     3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887, 3888, 3888,
     3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888,
     3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888,
     3888, 3888, 3888, 3888, 3888, 3888, 3888, 3889, 3889, 3889,
     3889, 3889, 3889, 3889, 3889, 3889, 3889, 3889, 3889, 3889,
     3889, 3889, 3889, 3889, 3889, 3889, 3889, 3889, 3889, 3889,
     3889, 3889, 3889, 3889, 3889, 3889, 3890, 3890, 3890, 3890,
     3890, 3890, 3890, 3890, 3890, 3890, 3890, 3890, 3890, 3890,
     3890, 3890, 3890, 3890, 3890, 3890, 3890, 3890, 3890, 3890,

     3890, 3890, 3890, 3890, 3890, 3891, 3891, 3891, 3891, 3891,
     3891, 3891, 3891, 3891, 3891, 3891, 3891, 3891, 3891, 3891,
     3891, 3891, 3891, 3891, 3891, 3891, 3891, 3891, 3891, 3891,
     3891, 3891, 3891, 3891, 3892, 3892, 3892, 3892, 3892, 3892,
     3892, 3892, 3892, 3892, 3892,    0, 3892,    0, 3892, 3892,
        0,    0, 3892,    0,    0,    0,    0,    0,    0,    0,
     3892, 3892, 3892, 3893, 3893, 3893, 3893, 3893, 3893, 3893,
     3893, 3893, 3893, 3893,    0, 3893,    0, 3893, 3893,    0,
        0, 3893,    0,    0,    0,    0,    0,    0,    0, 3893,
     3893, 3893, 3894, 3894, 3894, 3894, 3894, 3894, 3894, 3894,

     3894, 3894, 3894,    0, 3894,    0, 3894, 3894,    0,    0,
     3894,    0,    0,    0,    0,    0,    0,    0, 3894, 3894,
     3894, 3895, 3895, 3895, 3895, 3895, 3895, 3895, 3895, 3895,
     3895, 3895,    0, 3895,    0, 3895, 3895,    0,    0, 3895,
        0,    0,    0,    0,    0,    0,    0, 3895, 3895, 3895,
     3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896,
     3896,    0, 3896,    0, 3896, 3896,    0,    0, 3896,    0,
        0,    0,    0,    0,    0,    0, 3896, 3896, 3896, 3897,
     3897, 3897, 3897, 3897, 3897, 3897, 3897, 3897, 3897, 3897,
        0, 3897,    0, 3897, 3897,    0,    0, 3897,    0,    0,

        0,    0,    0,    0,    0, 3897, 3897, 3897, 3898,    0,
     3898, 3898,    0,    0, 3898, 3898, 3899,    0, 3899, 3899,
        0,    0, 3899, 3899, 3900, 3900, 3900, 3900, 3900, 3900,
     3900, 3900, 3900, 3900, 3900,    0, 3900,    0, 3900, 3900,
        0,    0, 3900,    0,    0,    0,    0,    0,    0,    0,
     3900, 3900, 3900, 3901,    0, 3901, 3901,    0,    0, 3901,
     3901, 3902,    0, 3902, 3902,    0,    0, 3902, 3902, 3903,
     3903,    0,    0,    0,    0,    0, 3903,    0,    0, 3903,
     3903, 3903, 3903,    0, 3903, 3903,    0, 3903, 3903, 3903,
     3903, 3903, 3903, 3903, 3904,    0,    0,    0,    0,    0,

     3904, 3904,    0, 3904, 3904, 3904, 3904, 3904, 3904, 3904,
     3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905,
     3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905,
     3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3906,
     3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906,
     3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906,
     3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3907, 3907,
     3907, 3907, 3907, 3907, 3907, 3907, 3907, 3907, 3907,    0,
     3907,    0, 3907, 3907,    0,    0, 3907,    0,    0,    0,
        0,    0,    0,    0, 3907, 3907, 3907, 3908, 3908, 3908,

     3908, 3908, 3908, 3908, 3908, 3908,    0, 3908, 3908, 3908,
     3908, 3908, 3908, 3908, 3908, 3908, 3908, 3908, 3908, 3908,
     3908, 3908, 3908, 3908, 3908, 3908, 3909, 3909, 3909, 3909,
     3909, 3909, 3909, 3909, 3909, 3909, 3909, 3909, 3909, 3909,
     3909, 3909, 3909, 3909, 3909, 3909, 3909, 3909, 3909, 3909,
     3909, 3909, 3909, 3909, 3909, 3910, 3910, 3910, 3910, 3910,
     3910, 3910, 3910, 3910,    0, 3910, 3910, 3910, 3910, 3910,
     3910, 3910, 3910, 3910, 3910, 3910, 3910, 3910, 3910, 3910,
     3910, 3910, 3910, 3910, 3911, 3911, 3911, 3911, 3911, 3911,
     3911, 3911, 3911, 3911, 3911, 3911, 3911, 3911, 3911, 3911,

     3911, 3911, 3911, 3911, 3911, 3911, 3911, 3911, 3911, 3911,
     3911, 3911, 3911, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913,
     3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913,
     3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913,
     3913, 3914, 3914, 3914, 3914, 3914, 3914, 3914, 3914, 3914,
     3914, 3914, 3914, 3914, 3914, 3914, 3914, 3914, 3914, 3914,
     3914, 3914, 3914, 3914, 3914, 3914, 3914, 3914, 3914, 3914,

     3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915,
     3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915,
     3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3916,
     3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916,    0, 3916,
     3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916,
     3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3917, 3917,
     3917, 3917,    0, 3917, 3917,    0, 3917, 3917, 3917, 3917,
     3917, 3917, 3917, 3918, 3918, 3918, 3918, 3918, 3918, 3918,
     3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918,
     3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918,

     3918, 3918, 3919, 3919,    0, 3919, 3919, 3919, 3919, 3919,
     3919, 3919, 3920, 3920, 3920, 3920,    0, 3920, 3920,    0,
     3920, 3920, 3920, 3920, 3920, 3920, 3920, 3921, 3921, 3921,
     3921, 3921, 3921, 3921, 3921, 3921, 3921, 3921, 3921, 3921,
     3921, 3921, 3921, 3921, 3921, 3921, 3921, 3921, 3921, 3921,
     3921, 3921, 3921, 3921, 3921, 3921, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3923, 3923, 3923, 3923, 3923,
     3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923,

     3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923,
     3923, 3923, 3923, 3923, 3924, 3924, 3924, 3924, 3924, 3924,
     3924, 3924, 3924, 3924, 3924,    0, 3924,    0, 3924, 3924,
        0,    0, 3924,    0,    0,    0,    0,    0,    0,    0,
     3924, 3924, 3924, 3925, 3925, 3925, 3925, 3925, 3925, 3925,
     3925, 3925,    0, 3925, 3925, 3925, 3925, 3925, 3925, 3925,
     3925, 3925, 3925, 3925, 3925, 3925, 3925, 3925, 3925, 3925,
     3925, 3925, 3926, 3926, 3926, 3926, 3926, 3926, 3926, 3926,
     3926, 3926, 3926,    0, 3926,    0, 3926, 3926,    0,    0,
     3926,    0,    0,    0,    0,    0,    0,    0, 3926, 3926,

     3926, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927,
     3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927,
     3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927,
     3928, 3928, 3928, 3928, 3928, 3928, 3928, 3928, 3928, 3928,
     3928, 3928, 3928, 3928, 3928, 3928, 3928, 3928, 3928, 3928,
     3928, 3928, 3928, 3928, 3928, 3928, 3928, 3928, 3928, 3929,
     3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929,    0, 3929,
     3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929,
     3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929, 3930, 3930,
     3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930,    0,

     3930,    0, 3930, 3930,    0,    0, 3930,    0,    0,    0,
        0,    0,    0,    0, 3930, 3930, 3930, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3931, 3931, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3933, 3933, 3933, 3933, 3933,
     3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933,
     3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933,

     3933, 3933, 3933, 3933, 3934, 3934, 3934, 3934, 3934, 3934,
     3934, 3934, 3934, 3934, 3934,    0, 3934,    0, 3934, 3934,
        0,    0, 3934,    0,    0,    0,    0,    0,    0,    0,
     3934, 3934, 3934, 3935, 3935, 3935, 3935, 3935, 3935, 3935,
     3935, 3935, 3935, 3935,    0, 3935,    0, 3935, 3935,    0,
        0, 3935,    0,    0,    0,    0,    0,    0,    0, 3935,
     3935, 3935, 3936, 3936, 3936, 3936, 3936, 3936, 3936, 3936,
     3936, 3936, 3936,    0, 3936,    0, 3936, 3936,    0,    0,
     3936,    0,    0,    0,    0,    0,    0,    0, 3936, 3936,
     3936, 3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937,

     3937, 3937,    0, 3937,    0, 3937, 3937,    0,    0, 3937,
        0,    0,    0,    0,    0,    0,    0, 3937, 3937, 3937,
     3938, 3938, 3938, 3938, 3938, 3938, 3938, 3938, 3938, 3938,
     3938,    0, 3938,    0, 3938, 3938,    0,    0, 3938,    0,
        0,    0,    0,    0,    0,    0, 3938, 3938, 3938, 3939,
     3939, 3939, 3939, 3939, 3939, 3939, 3939, 3939, 3939, 3939,
        0, 3939,    0, 3939, 3939,    0,    0, 3939,    0,    0,
        0,    0,    0,    0,    0, 3939, 3939, 3939, 3940, 3940,
     3940, 3940, 3940, 3940, 3940, 3940, 3940, 3940, 3940,    0,
     3940,    0, 3940, 3940,    0,    0, 3940,    0,    0,    0,

        0,    0,    0,    0, 3940, 3940, 3940, 3941, 3941, 3941,
     3941, 3941, 3941, 3941, 3941, 3941, 3941, 3941, 3941, 3941,
     3941, 3941, 3941, 3941, 3941, 3941, 3941, 3941, 3941, 3941,
     3941, 3941, 3941, 3941, 3941, 3941, 3942, 3942, 3942, 3942,
     3942, 3942, 3942, 3942, 3942,    0, 3942, 3942, 3942, 3942,
     3942, 3942, 3942, 3942, 3942, 3942, 3942, 3942, 3942, 3942,
     3942, 3942, 3942, 3942, 3942, 3943, 3943,    0,    0,    0,
        0,    0, 3943,    0,    0, 3943, 3943, 3943, 3943,    0,
     3943, 3943,    0, 3943, 3943, 3943, 3943, 3943, 3943, 3943,
     3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944,    0,

     3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944,
     3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3947,
     3947, 3947, 3947, 3947, 3947, 3947, 3947, 3947, 3947, 3947,
        0, 3947,    0, 3947, 3947,    0,    0, 3947,    0,    0,
        0,    0,    0,    0,    0, 3947, 3947, 3947, 3948,    0,
        0,    0,    0,    0, 3948, 3948,    0, 3948, 3948, 3948,
     3948, 3948, 3948, 3948, 3949, 3949, 3949, 3949, 3949, 3949,
     3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949,
     3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949,
     3949, 3949, 3949, 3950, 3950, 3950, 3950, 3950, 3950, 3950,

     3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950,
     3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950,
     3950, 3950, 3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951,
     3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951,
     3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951,
     3951, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952,
        0, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952,
     3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952,
     3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953,
     3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953,

     3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953, 3954,
     3954, 3954, 3954, 3954, 3954, 3954, 3954, 3954,    0, 3954,
     3954, 3954, 3954, 3954, 3954, 3954, 3954, 3954, 3954, 3954,
     3954, 3954, 3954, 3954, 3954, 3954, 3954, 3954, 3955, 3955,
     3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955,
     3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955,
     3955, 3955, 3955, 3955, 3955, 3955, 3955, 3956, 3956, 3956,
     3956, 3956, 3956, 3956, 3956, 3956, 3956, 3956, 3956, 3956,
     3956, 3956, 3956, 3956, 3956, 3956, 3956, 3956, 3956, 3956,
     3956, 3956, 3956, 3956, 3956, 3956, 3957, 3957, 3957, 3957,

     3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957,
     3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957,
     3957, 3957, 3957, 3957, 3957, 3958, 3958, 3958, 3958, 3958,
     3958, 3958, 3958, 3958, 3958, 3958,    0, 3958,    0, 3958,
     3958,    0,    0, 3958,    0,    0,    0,    0,    0,    0,
        0, 3958, 3958, 3958, 3961, 3961, 3961, 3961,    0, 3961,
     3961,    0, 3961, 3961, 3961, 3961, 3961, 3961, 3961, 3962,
     3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962,
        0, 3962,    0, 3962, 3962,    0,    0, 3962,    0,    0,
        0,    0,    0,    0,    0, 3962, 3962, 3962, 3963, 3963,

     3963, 3963, 3963, 3963, 3963, 3963, 3963, 3963, 3963, 3963,
     3963, 3963, 3963, 3963, 3963, 3963, 3963, 3963, 3963, 3963,
     3963, 3963, 3963, 3963, 3963, 3963, 3963, 3964, 3964,    0,
     3964, 3964, 3964, 3964, 3964, 3964, 3964, 3965, 3965, 3965,
     3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965,
     3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965,
     3965, 3965, 3965, 3965, 3965, 3965, 3966, 3966, 3966, 3966,
     3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966,
     3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966,
     3966, 3966, 3966, 3966, 3966, 3967, 3967,    0,    0,    0,

        0,    0, 3967,    0,    0, 3967, 3967, 3967, 3967,    0,
     3967, 3967,    0, 3967, 3967, 3967, 3967, 3967, 3967, 3967,
     3968, 3968, 3968, 3968, 3968, 3968, 3968, 3968, 3968, 3968,
     3968,    0, 3968,    0, 3968, 3968,    0,    0, 3968,    0,
        0,    0,    0,    0,    0,    0, 3968, 3968, 3968, 3969,
     3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969,    0, 3969,
     3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969,
     3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969, 3970, 3970,
     3970, 3970, 3970, 3970, 3970, 3970, 3970,    0, 3970, 3970,
     3970, 3970, 3970, 3970, 3970, 3970, 3970, 3970, 3970, 3970,

     3970, 3970, 3970, 3970, 3970, 3970, 3970, 3971, 3971, 3971,
     3971, 3971, 3971, 3971, 3971, 3971,    0, 3971, 3971, 3971,
     3971, 3971, 3971, 3971, 3971, 3971, 3971, 3971, 3971, 3971,
     3971, 3971, 3971, 3971, 3971, 3971, 3972, 3972, 3972, 3972,
     3972, 3972, 3972, 3972, 3972, 3972, 3972,    0, 3972,    0,
     3972, 3972,    0,    0, 3972,    0,    0,    0,    0,    0,
        0,    0, 3972, 3972, 3972, 3973, 3973, 3973, 3973, 3973,
     3973, 3973, 3973, 3973, 3973, 3973, 3973, 3973, 3973, 3973,
     3973, 3973, 3973, 3973, 3973, 3973, 3973, 3973, 3973, 3973,
     3973, 3973, 3973, 3973, 3974, 3974, 3974, 3974, 3974, 3974,

     3974, 3974, 3974, 3974, 3974,    0, 3974,    0, 3974, 3974,
        0,    0, 3974,    0,    0,    0,    0,    0,    0,    0,
     3974, 3974, 3974, 3975, 3975, 3975, 3975, 3975, 3975, 3975,
     3975, 3975, 3975, 3975, 3975, 3975, 3975, 3975, 3975, 3975,
     3975, 3975, 3975, 3975, 3975, 3975, 3975, 3975, 3975, 3975,
     3975, 3975, 3976, 3976, 3976, 3976, 3976, 3976, 3976, 3976,
     3976, 3976, 3976,    0, 3976,    0, 3976, 3976,    0,    0,
     3976,    0,    0,    0,    0,    0,    0,    0, 3976, 3976,
     3976, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977,
     3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977,

     3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977,
     3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978,
     3978,    0, 3978,    0, 3978, 3978,    0,    0, 3978,    0,
        0,    0,    0,    0,    0,    0, 3978, 3978, 3978, 3979,
     3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979,
     3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979,
     3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979, 3980, 3980,
     3980, 3980, 3980, 3980, 3980, 3980, 3980,    0, 3980, 3980,
     3980, 3980, 3980, 3980, 3980, 3980, 3980, 3980, 3980, 3980,
     3980, 3980, 3980, 3980, 3980, 3980, 3980, 3981, 3981, 3981,

     3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981,
     3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981,
     3981, 3981, 3981, 3981, 3981, 3981, 3982, 3982, 3982, 3982,
     3982, 3982, 3982, 3982, 3982,    0, 3982, 3982, 3982, 3982,
     3982, 3982, 3982, 3982, 3982, 3982, 3982, 3982, 3982, 3982,
     3982, 3982, 3982, 3982, 3982, 3983, 3983, 3983, 3983, 3983,
     3983, 3983, 3983, 3983, 3983, 3983, 3983, 3983, 3983, 3983,
     3983, 3983, 3983, 3983, 3983, 3983, 3983, 3983, 3983, 3983,
     3983, 3983, 3983, 3983, 3984, 3984, 3984, 3984, 3984, 3984,
     3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984,

     3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984,
     3984, 3984, 3984, 3985, 3985, 3985, 3985, 3985, 3985, 3985,
     3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985,
     3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985,
     3985, 3985, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986,
     3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986,
     3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986,
     3986, 3987, 3987,    0,    0,    0,    0,    0, 3987,    0,
        0, 3987, 3987, 3987, 3987,    0, 3987, 3987,    0, 3987,
     3987, 3987, 3987, 3987, 3987, 3987, 3988, 3988, 3988, 3988,

     3988, 3988, 3988, 3988, 3988, 3988, 3988,    0, 3988,    0,
     3988, 3988,    0,    0, 3988,    0,    0,    0,    0,    0,
        0,    0, 3988, 3988, 3988, 3989,    0, 3989, 3989,    0,
        0, 3989, 3989, 3990,    0, 3990, 3990,    0,    0, 3990,
     3990, 3991, 3991, 3991, 3991, 3991, 3991, 3991, 3991, 3991,
     3991, 3991,    0, 3991,    0, 3991, 3991,    0,    0, 3991,
        0,    0,    0,    0,    0,    0,    0, 3991, 3991, 3991,
     3992, 3992, 3992, 3992, 3992, 3992, 3992, 3992, 3992, 3992,
     3992,    0, 3992,    0, 3992, 3992,    0,    0, 3992,    0,
        0,    0,    0,    0,    0,    0, 3992, 3992, 3992, 3993,

     3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993,    0, 3993,
     3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993,
     3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3994, 3994,
        0,    0,    0,    0,    0, 3994,    0,    0,    0,    0,
        0,    0,    0, 3994, 3994,    0, 3994, 3994, 3994, 3994,
     3994, 3994, 3994, 3994, 3995, 3995, 3995, 3995, 3995, 3995,
     3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995,
     3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995,
     3995, 3995, 3995, 3996, 3996, 3996, 3996, 3996, 3996, 3996,
     3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996,

     3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996,
     3996, 3996, 3997,    0,    0,    0,    0,    0, 3997, 3997,
        0, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3998, 3998,
     3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998,
     3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998,
     3998, 3998, 3998, 3998, 3998, 3998, 3998, 3999, 3999, 3999,
     3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999,
     3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999,
     3999, 3999, 3999, 3999, 3999, 3999, 4000, 4000, 4000, 4000,
     4000, 4000, 4000, 4000, 4000,    0, 4000, 4000, 4000, 4000,

     4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000,
     4000, 4000, 4000, 4000, 4000, 4001, 4001, 4001, 4001, 4001,
     4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001,
     4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001,
     4001, 4001, 4001, 4001, 4002, 4002, 4002, 4002, 4002, 4002,
     4002, 4002, 4002,    0, 4002, 4002, 4002, 4002, 4002, 4002,
     4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002,
     4002, 4002, 4002, 4003, 4003, 4003, 4003, 4003, 4003, 4003,
     4003, 4003, 4003, 4003,    0, 4003,    0, 4003, 4003,    0,
        0, 4003,    0,    0,    0,    0,    0,    0,    0, 4003,

     4003, 4003, 4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004,
     4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004,
     4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004,
     4004, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005,
        0, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005,
     4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005,
     4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006,
     4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006,
     4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4007,
        0, 4007, 4007,    0,    0, 4007, 4007, 4008,    0, 4008,

     4008,    0,    0, 4008, 4008, 4009, 4009, 4009, 4009,    0,
     4009, 4009,    0, 4009, 4009, 4009, 4009, 4009, 4009, 4009,
     4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010,    0,
     4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010,
     4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4011,
     4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011,
        0, 4011,    0, 4011, 4011,    0,    0, 4011,    0,    0,
        0,    0,    0,    0,    0, 4011, 4011, 4011, 4012, 4012,
     4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012,
     4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012,

     4012, 4012, 4012, 4012, 4012, 4012, 4012, 4013, 4013, 4013,
     4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013,
     4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013,
     4013, 4013, 4013, 4013, 4013, 4013, 4014, 4014, 4014, 4014,
     4014, 4014, 4014, 4014, 4014, 4014, 4014,    0, 4014,    0,
     4014, 4014,    0,    0, 4014,    0,    0,    0,    0,    0,
        0,    0, 4014, 4014, 4014, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4016, 4016, 4016, 4016,    0, 4016,

     4016,    0, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
        0, 4017,    0, 4017, 4017,    0,    0, 4017,    0,    0,
        0,    0,    0,    0,    0, 4017, 4017, 4017, 4018, 4018,
     4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018,    0,
     4018,    0, 4018, 4018,    0,    0, 4018,    0,    0,    0,
        0,    0,    0,    0, 4018, 4018, 4018, 4019, 4019, 4019,
     4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019,    0, 4019,
        0, 4019, 4019,    0,    0, 4019,    0,    0,    0,    0,
        0,    0,    0, 4019, 4019, 4019, 4020, 4020, 4020, 4020,

     4020, 4020, 4020, 4020, 4020, 4020, 4020,    0, 4020,    0,
     4020, 4020,    0,    0, 4020,    0,    0,    0,    0,    0,
        0,    0, 4020, 4020, 4020, 4021, 4021, 4021, 4021, 4021,
     4021, 4021, 4021, 4021,    0, 4021, 4021, 4021, 4021, 4021,
     4021, 4021, 4021, 4021, 4021, 4021, 4021, 4021, 4021, 4021,
     4021, 4021, 4021, 4021, 4022, 4022, 4022, 4022, 4022, 4022,
     4022, 4022, 4022,    0, 4022, 4022, 4022, 4022, 4022, 4022,
     4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022,
     4022, 4022, 4022, 4023, 4023, 4023, 4023, 4023, 4023, 4023,
     4023, 4023, 4023, 4023,    0, 4023,    0, 4023, 4023,    0,

        0, 4023,    0,    0,    0,    0,    0,    0,    0, 4023,
     4023, 4023, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024,
     4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024,
     4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024,
     4024, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025,
     4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025,
     4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025,
     4026, 4026, 4026, 4026, 4026, 4026, 4026, 4026, 4026, 4026,
     4026,    0, 4026,    0, 4026, 4026,    0,    0, 4026,    0,
        0,    0,    0,    0,    0,    0, 4026, 4026, 4026, 4027,

     4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027,
     4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027,
     4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027, 4028, 4028,
     4028, 4028, 4028, 4028, 4028, 4028, 4028, 4028, 4028,    0,
     4028,    0, 4028, 4028,    0,    0, 4028,    0,    0,    0,
        0,    0,    0,    0, 4028, 4028, 4028, 4029, 4029, 4029,
     4029, 4029, 4029, 4029, 4029, 4029,    0, 4029, 4029, 4029,
     4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029,
     4029, 4029, 4029, 4029, 4029, 4029, 4030, 4030, 4030, 4030,
     4030, 4030, 4030, 4030, 4030, 4030, 4030,    0, 4030,    0,

     4030, 4030,    0,    0, 4030,    0,    0,    0,    0,    0,
        0,    0, 4030, 4030, 4030, 4031, 4031, 4031, 4031, 4031,
     4031, 4031, 4031, 4031, 4031, 4031, 4031, 4031, 4031, 4031,
     4031, 4031, 4031, 4031, 4031, 4031, 4031, 4031, 4031, 4031,
     4031, 4031, 4031, 4031, 4032, 4032, 4032, 4032, 4032, 4032,
     4032, 4032, 4032, 4032, 4032,    0, 4032,    0, 4032, 4032,
        0,    0, 4032,    0,    0,    0,    0,    0,    0,    0,
     4032, 4032, 4032, 4033, 4033, 4033, 4033, 4033, 4033, 4033,
     4033, 4033, 4033, 4033,    0, 4033,    0, 4033, 4033,    0,
        0, 4033,    0,    0,    0,    0, 4033,    0,    0, 4033,

     4033, 4033, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034,
     4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034,
     4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034,
     4034, 4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035,
     4035, 4035,    0, 4035,    0, 4035, 4035,    0,    0, 4035,
        0,    0,    0,    0,    0,    0,    0, 4035, 4035, 4035,
     4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036,
     4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036,
     4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4037,
     4037, 4037, 4037, 4037, 4037, 4037, 4037, 4037, 4037, 4037,

        0, 4037,    0, 4037, 4037,    0,    0, 4037,    0,    0,
        0,    0,    0,    0,    0, 4037, 4037, 4037, 4038, 4038,
     4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038,
     4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038,
     4038, 4038, 4038, 4038, 4038, 4038, 4038, 4039, 4039, 4039,
     4039, 4039, 4039, 4039, 4039, 4039,    0, 4039, 4039, 4039,
     4039, 4039, 4039, 4039, 4039, 4039, 4039, 4039, 4039, 4039,
     4039, 4039, 4039, 4039, 4039, 4039, 4040, 4040, 4040, 4040,
     4040, 4040, 4040, 4040, 4040, 4040, 4040,    0, 4040,    0,
     4040, 4040,    0,    0, 4040,    0,    0,    0,    0,    0,

        0,    0, 4040, 4040, 4040, 4041, 4041, 4041, 4041, 4041,
     4041, 4041, 4041, 4041, 4041, 4041,    0, 4041,    0, 4041,
     4041,    0,    0, 4041,    0,    0,    0,    0,    0,    0,
        0, 4041, 4041, 4041, 4042, 4042, 4042, 4042, 4042, 4042,
     4042, 4042, 4042, 4042, 4042,    0, 4042,    0, 4042, 4042,
        0,    0, 4042,    0,    0,    0,    0,    0,    0,    0,
     4042, 4042, 4042, 4043, 4043,    0,    0,    0,    0,    0,
     4043,    0,    0, 4043, 4043, 4043, 4043,    0, 4043, 4043,
        0, 4043, 4043, 4043, 4043, 4043, 4043, 4043, 4044,    0,
        0,    0, 4044,    0, 4044, 4044,    0, 4044, 4044, 4044,

     4044, 4044, 4044, 4044, 4045, 4045, 4045, 4045, 4045, 4045,
     4045, 4045, 4045, 4045, 4045, 4045, 4045, 4045, 4045, 4045,
     4045, 4045, 4045, 4045, 4045, 4045, 4045, 4045, 4045, 4045,
     4045, 4045, 4045, 4046, 4046, 4046, 4046, 4046, 4046, 4046,
     4046, 4046, 4046, 4046,    0, 4046,    0, 4046, 4046,    0,
        0, 4046,    0,    0,    0,    0,    0,    0,    0, 4046,
     4046, 4046, 4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047,
     4047, 4047, 4047,    0, 4047,    0, 4047, 4047,    0,    0,
     4047,    0,    0,    0,    0,    0,    0,    0, 4047, 4047,
     4047, 4048, 4048,    0,    0,    0,    0,    0,    0,    0,

        0, 4048, 4048, 4048, 4048,    0, 4048, 4048,    0, 4048,
     4048, 4048, 4048, 4048, 4048, 4048, 4048, 4049, 4049, 4049,
     4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049,
     4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049,
     4049, 4049, 4049, 4049, 4049, 4049, 4050, 4050, 4050, 4050,
     4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050,
     4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050,
     4050, 4050, 4050, 4050, 4050, 4051, 4051, 4051, 4051, 4051,
     4051, 4051, 4051, 4051,    0, 4051, 4051, 4051, 4051, 4051,
     4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051,

     4051, 4051, 4051, 4051, 4052, 4052, 4052, 4052, 4052, 4052,
     4052, 4052, 4052,    0, 4052, 4052, 4052, 4052, 4052, 4052,
     4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052,
     4052, 4052, 4052, 4053, 4053, 4053, 4053, 4053, 4053, 4053,
     4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053,
     4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053,
     4053, 4053, 4054, 4054, 4054, 4054, 4054, 4054, 4054, 4054,
     4054, 4054, 4054,    0, 4054,    0, 4054, 4054,    0,    0,
     4054,    0,    0,    0,    0,    0,    0,    0, 4054, 4054,
     4054, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055,

     4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055,
     4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055,
     4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056,
     4056,    0, 4056,    0, 4056, 4056,    0,    0, 4056,    0,
        0,    0,    0,    0,    0,    0, 4056, 4056, 4056, 4057,
     4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057,    0, 4057,
     4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057,
     4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057, 4058, 4058,
     4058, 4058, 4058, 4058, 4058, 4058, 4058, 4058, 4058, 4058,
     4058, 4058, 4058, 4058, 4058, 4058, 4058, 4058, 4058, 4058,

     4058, 4058, 4058, 4058, 4058, 4058, 4058, 4059, 4059, 4059,
     4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059,
     4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059,
     4059, 4059, 4059, 4059, 4059, 4059, 4060, 4060, 4060, 4060,
     4060, 4060, 4060, 4060, 4060, 4060, 4060,    0, 4060,    0,
     4060, 4060,    0,    0, 4060,    0,    0,    0,    0,    0,
        0,    0, 4060, 4060, 4060, 4061, 4061,    0,    0,    0,
        0,    0, 4061,    0,    0, 4061, 4061, 4061, 4061,    0,
     4061, 4061,    0, 4061, 4061, 4061, 4061, 4061, 4061, 4061,
     4062, 4062,    0, 4062, 4062, 4062, 4062, 4062, 4062, 4062,

     4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063,    0,
     4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063,
     4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4064,
     4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064,
     4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064,
     4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4065, 4065,
     4065, 4065, 4065, 4065, 4065, 4065, 4065,    0, 4065, 4065,
     4065, 4065, 4065, 4065, 4065, 4065, 4065, 4065, 4065, 4065,
     4065, 4065, 4065, 4065, 4065, 4065, 4065, 4066, 4066, 4066,
     4066,    0, 4066, 4066,    0, 4066, 4066, 4066, 4066, 4066,

     4066, 4066, 4067, 4067, 4067, 4067, 4067, 4067, 4067, 4067,
     4067, 4067, 4067, 4067, 4067, 4067, 4067, 4067, 4067, 4067,
     4067, 4067, 4067, 4067, 4067, 4067, 4067, 4067, 4067, 4067,
     4067, 4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068,
     4068, 4068,    0, 4068,    0, 4068, 4068,    0,    0, 4068,
        0,    0,    0,    0,    0,    0,    0, 4068, 4068, 4068,
     4069, 4069, 4069, 4069, 4069, 4069, 4069, 4069, 4069, 4069,
     4069,    0, 4069,    0, 4069, 4069,    0,    0, 4069,    0,
        0,    0,    0,    0,    0,    0, 4069, 4069, 4069, 4070,
     4070, 4070, 4070, 4070, 4070, 4070, 4070, 4070, 4070, 4070,

        0, 4070,    0, 4070, 4070,    0,    0, 4070,    0,    0,
        0,    0,    0,    0,    0, 4070, 4070, 4070, 4071, 4071,
     4071, 4071, 4071, 4071, 4071, 4071, 4071, 4071, 4071,    0,
     4071,    0, 4071, 4071,    0,    0, 4071,    0,    0,    0,
        0,    0,    0,    0, 4071, 4071, 4071, 4072, 4072, 4072,
     4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072,
     4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072,
     4072, 4072, 4072, 4072, 4072, 4072, 4073, 4073, 4073, 4073,
     4073, 4073, 4073, 4073, 4073, 4073, 4073,    0, 4073,    0,
     4073, 4073,    0,    0, 4073,    0,    0,    0,    0,    0,

        0,    0, 4073, 4073, 4073, 4074, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074,    0, 4074,    0, 4074,
     4074,    0,    0, 4074,    0,    0,    0,    0,    0,    0,
        0, 4074, 4074, 4074, 4075, 4075, 4075, 4075, 4075, 4075,
     4075, 4075, 4075, 4075, 4075,    0, 4075,    0, 4075, 4075,
        0,    0, 4075,    0,    0,    0,    0,    0,    0,    0,
     4075, 4075, 4075, 4076, 4076, 4076, 4076, 4076, 4076, 4076,
     4076, 4076,    0, 4076, 4076, 4076, 4076, 4076, 4076, 4076,
     4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076,
     4076, 4076, 4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077,

     4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077,
     4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077,
     4077, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078,
        0, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078,
     4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078,
     4079, 4079, 4079, 4079, 4079, 4079, 4079, 4079, 4079, 4079,
     4079,    0, 4079,    0, 4079, 4079,    0,    0, 4079,    0,
        0,    0,    0,    0,    0,    0, 4079, 4079, 4079, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
        0, 4080,    0, 4080, 4080,    0,    0, 4080,    0,    0,

        0,    0,    0,    0,    0, 4080, 4080, 4080, 4081, 4081,
     4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081,    0,
     4081,    0, 4081, 4081,    0,    0, 4081,    0,    0,    0,
        0,    0,    0,    0, 4081, 4081, 4081, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,    0, 4082,
        0, 4082, 4082,    0,    0, 4082,    0,    0,    0,    0,
        0,    0,    0, 4082, 4082, 4082, 4083, 4083, 4083, 4083,
     4083, 4083, 4083, 4083, 4083,    0, 4083, 4083, 4083, 4083,
     4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083,
     4083, 4083, 4083, 4083, 4083, 4084, 4084, 4084, 4084, 4084,

     4084, 4084, 4084, 4084, 4084, 4084,    0, 4084,    0, 4084,
     4084,    0,    0, 4084,    0,    0,    0,    0,    0,    0,
        0, 4084, 4084, 4084, 4085, 4085, 4085, 4085, 4085, 4085,
     4085, 4085, 4085, 4085, 4085,    0, 4085,    0, 4085, 4085,
        0,    0, 4085,    0,    0,    0,    0,    0,    0,    0,
     4085, 4085, 4085, 4086, 4086, 4086, 4086, 4086, 4086, 4086,
     4086, 4086, 4086, 4086,    0, 4086,    0, 4086, 4086,    0,
        0, 4086,    0,    0,    0,    0,    0,    0,    0, 4086,
     4086, 4086, 4087, 4087, 4087, 4087, 4087, 4087, 4087, 4087,
     4087, 4087, 4087, 4087, 4087, 4087, 4087, 4087, 4087, 4087,

     4087, 4087, 4087, 4087, 4087, 4087, 4087, 4087, 4087, 4087,
     4087, 4088, 4088, 4088, 4088, 4088, 4088, 4088, 4088, 4088,
        0, 4088, 4088, 4088, 4088, 4088, 4088, 4088, 4088, 4088,
     4088, 4088, 4088, 4088, 4088, 4088, 4088, 4088, 4088, 4088,
     4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089,
     4089,    0, 4089,    0, 4089, 4089,    0,    0, 4089,    0,
        0,    0,    0,    0,    0,    0, 4089, 4089, 4089, 4090,
     4090, 4090, 4090, 4090, 4090, 4090, 4090, 4090,    0, 4090,
     4090, 4090, 4090, 4090, 4090, 4090, 4090, 4090, 4090, 4090,
     4090, 4090, 4090, 4090, 4090, 4090, 4090, 4090, 4091, 4091,

     4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091,
     4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091,
     4091, 4091, 4091, 4091, 4091, 4091, 4091, 4092, 4092,    0,
        0,    0,    0,    0, 4092,    0,    0, 4092, 4092, 4092,
     4092,    0, 4092, 4092,    0, 4092, 4092, 4092, 4092, 4092,
     4092, 4092, 4093, 4093,    0,    0,    0,    0,    0, 4093,
        0,    0,    0,    0,    0,    0,    0, 4093, 4093,    0,
     4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093, 4094,    0,
        0,    0, 4094,    0, 4094, 4094,    0, 4094, 4094, 4094,
     4094, 4094, 4094, 4094, 4095, 4095, 4095, 4095, 4095, 4095,

     4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095,
     4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095,
     4095, 4095, 4095, 4096, 4096, 4096, 4096, 4096, 4096, 4096,
     4096, 4096, 4096, 4096,    0, 4096,    0, 4096, 4096,    0,
        0, 4096,    0,    0,    0,    0,    0,    0,    0, 4096,
     4096, 4096, 4097, 4097,    0,    0,    0,    0,    0,    0,
        0,    0, 4097, 4097, 4097, 4097,    0, 4097, 4097,    0,
     4097, 4097, 4097, 4097, 4097, 4097, 4097, 4097, 4098, 4098,
        0, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4099, 4099,
     4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099,

     4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099,
     4099, 4099, 4099, 4099, 4099, 4099, 4099, 4100, 4100, 4100,
     4100, 4100, 4100, 4100, 4100, 4100,    0, 4100, 4100, 4100,
     4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100,
     4100, 4100, 4100, 4100, 4100, 4100, 4101, 4101, 4101, 4101,
     4101, 4101, 4101, 4101, 4101, 4101, 4101,    0, 4101,    0,
     4101, 4101,    0,    0, 4101,    0,    0,    0,    0,    0,
        0,    0, 4101, 4101, 4101, 4102, 4102, 4102, 4102, 4102,
     4102, 4102, 4102, 4102,    0, 4102, 4102, 4102, 4102, 4102,
     4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102,

     4102, 4102, 4102, 4102, 4103, 4103, 4103, 4103, 4103, 4103,
     4103, 4103, 4103,    0, 4103, 4103, 4103, 4103, 4103, 4103,
     4103, 4103, 4103, 4103, 4103, 4103, 4103, 4103, 4103, 4103,
     4103, 4103, 4103, 4104, 4104, 4104, 4104, 4104, 4104, 4104,
     4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104,
     4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104,
     4104, 4104, 4105, 4105, 4105, 4105, 4105, 4105, 4105, 4105,
     4105, 4105, 4105, 4105, 4105, 4105, 4105, 4105, 4105, 4105,
     4105, 4105, 4105, 4105, 4105, 4105, 4105, 4105, 4105, 4105,
     4105, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106,

        0, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106,
     4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106,
     4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107,
     4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107,
     4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4108,
     4108, 4108, 4108,    0, 4108, 4108,    0, 4108, 4108, 4108,
     4108, 4108, 4108, 4108, 4109, 4109, 4109, 4109, 4109, 4109,
     4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109,
     4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109,
     4109, 4109, 4109, 4110, 4110,    0, 4110, 4110, 4110, 4110,

     4110, 4110, 4110, 4111, 4111, 4111, 4111, 4111, 4111, 4111,
     4111, 4111,    0, 4111, 4111, 4111, 4111, 4111, 4111, 4111,
     4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111,
     4111, 4111, 4112, 4112, 4112, 4112,    0, 4112, 4112,    0,
     4112, 4112, 4112, 4112, 4112, 4112, 4112, 4113, 4113, 4113,
     4113, 4113, 4113, 4113, 4113, 4113, 4113, 4113, 4113, 4113,
     4113, 4113, 4113, 4113, 4113, 4113, 4113, 4113, 4113, 4113,
     4113, 4113, 4113, 4113, 4113, 4113, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4114, 4114,    0, 4114,    0,
     4114, 4114,    0,    0, 4114,    0,    0,    0,    0,    0,

        0,    0, 4114, 4114, 4114, 4115, 4115, 4115, 4115, 4115,
     4115, 4115, 4115, 4115, 4115, 4115, 4115, 4115, 4115, 4115,
     4115, 4115, 4115, 4115, 4115, 4115, 4115, 4115, 4115, 4115,
     4115, 4115, 4115, 4115, 4116, 4116, 4116, 4116, 4116, 4116,
     4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116,
     4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116,
     4116, 4116, 4116, 4117, 4117, 4117, 4117, 4117, 4117, 4117,
     4117, 4117, 4117, 4117,    0, 4117,    0, 4117, 4117,    0,
        0, 4117,    0,    0,    0,    0,    0,    0,    0, 4117,
     4117, 4117, 4118, 4118, 4118, 4118, 4118, 4118, 4118, 4118,

     4118, 4118, 4118,    0, 4118,    0, 4118, 4118,    0,    0,
     4118,    0,    0,    0,    0,    0,    0,    0, 4118, 4118,
     4118, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119,
        0, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119,
     4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119,
     4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120,    0, 4120,    0, 4120, 4120,    0,    0, 4120,    0,
        0,    0,    0,    0,    0,    0, 4120, 4120, 4120, 4121,
     4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121,
        0, 4121,    0, 4121, 4121,    0,    0, 4121,    0,    0,

        0,    0,    0,    0,    0, 4121, 4121, 4121, 4122, 4122,
     4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122,
     4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122,
     4122, 4122, 4122, 4122, 4122, 4122, 4122, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123,    0, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4124, 4124, 4124, 4124,
     4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124,
     4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124,
     4124, 4124, 4124, 4124, 4124, 4125, 4125,    0,    0,    0,

        0,    0,    0,    0,    0, 4125, 4125, 4125, 4125,    0,
     4125, 4125,    0, 4125, 4125, 4125, 4125, 4125, 4125, 4125,
     4125, 4126, 4126, 4126, 4126, 4126, 4126, 4126, 4126, 4126,
     4126, 4126, 4126, 4126, 4126, 4126, 4126, 4126, 4126, 4126,
     4126, 4126, 4126, 4126, 4126, 4126, 4126, 4126, 4126, 4126,
     4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127,    0,
     4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127,
     4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4128,
     4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128,
     4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128,

     4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4129, 4129,
        0,    0,    0,    0,    0,    0,    0,    0, 4129, 4129,
     4129,    0,    0, 4129, 4129,    0, 4129, 4129, 4129, 4129,
     4129, 4129, 4129, 4129, 4130, 4130,    0,    0,    0,    0,
        0, 4130,    0,    0,    0,    0,    0,    0,    0, 4130,
     4130,    0, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4131,
     4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131,    0, 4131,
     4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131,
     4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131, 4132, 4132,
     4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132,

     4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132,
     4132, 4132, 4132, 4132, 4132, 4132, 4132, 4133, 4133, 4133,
     4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133,
     4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133,
     4133, 4133, 4133, 4133, 4133, 4133, 4134, 4134, 4134, 4134,
     4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134,
     4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134,
     4134, 4134, 4134, 4134, 4134, 4135, 4135, 4135, 4135, 4135,
     4135, 4135, 4135, 4135,    0, 4135, 4135, 4135, 4135, 4135,
     4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135,

     4135, 4135, 4135, 4135, 4136, 4136, 4136, 4136, 4136, 4136,
     4136, 4136, 4136, 4136, 4136,    0, 4136,    0, 4136, 4136,
        0,    0, 4136,    0,    0,    0,    0,    0,    0,    0,
     4136, 4136, 4136, 4137, 4137, 4137, 4137, 4137, 4137, 4137,
     4137, 4137, 4137, 4137, 4137, 4137, 4137, 4137, 4137, 4137,
     4137, 4137, 4137, 4137, 4137, 4137, 4137, 4137, 4137, 4137,
     4137, 4137, 4138, 4138, 4138, 4138,    0, 4138, 4138,    0,
     4138, 4138, 4138, 4138, 4138, 4138, 4138, 4139, 4139, 4139,
     4139, 4139, 4139, 4139, 4139, 4139, 4139, 4139,    0, 4139,
        0, 4139, 4139,    0,    0, 4139,    0,    0,    0,    0,

        0,    0,    0, 4139, 4139, 4139, 4140, 4140, 4140, 4140,
     4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140,
     4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140,
     4140, 4140, 4140, 4140, 4140, 4141, 4141, 4141, 4141,    0,
     4141, 4141,    0, 4141, 4141, 4141, 4141, 4141, 4141, 4141,
     4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142,    0,
     4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142,
     4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4143,
     4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143,
        0, 4143,    0, 4143, 4143,    0,    0, 4143,    0,    0,

        0,    0,    0,    0,    0, 4143, 4143, 4143, 4144, 4144,
     4144, 4144, 4144, 4144, 4144, 4144, 4144, 4144, 4144,    0,
     4144,    0, 4144, 4144,    0,    0, 4144,    0,    0,    0,
        0,    0,    0,    0, 4144, 4144, 4144, 4145, 4145, 4145,
     4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145,
     4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145,
     4145, 4145, 4145, 4145, 4145, 4145, 4146, 4146, 4146, 4146,
     4146, 4146, 4146, 4146, 4146,    0, 4146, 4146, 4146, 4146,
     4146, 4146, 4146, 4146, 4146, 4146, 4146, 4146, 4146, 4146,
     4146, 4146, 4146, 4146, 4146, 4147, 4147, 4147, 4147, 4147,

     4147, 4147, 4147, 4147, 4147, 4147,    0, 4147,    0, 4147,
     4147,    0,    0, 4147,    0,    0,    0,    0,    0,    0,
        0, 4147, 4147, 4147, 4148, 4148, 4148, 4148, 4148, 4148,
     4148, 4148, 4148, 4148, 4148,    0, 4148,    0, 4148, 4148,
        0,    0, 4148,    0,    0,    0,    0,    0,    0,    0,
     4148, 4148, 4148, 4149, 4149, 4149, 4149, 4149, 4149, 4149,
     4149, 4149, 4149, 4149, 4149, 4149, 4149, 4149, 4149, 4149,
     4149, 4149, 4149, 4149, 4149, 4149, 4149, 4149, 4149, 4149,
     4149, 4149, 4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150,
     4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150,

     4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150,
     4150, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151,
     4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151,
     4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,    0,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4153,
     4153,    0,    0,    0,    0,    0,    0,    0,    0, 4153,
     4153, 4153, 4153,    0, 4153, 4153,    0, 4153, 4153, 4153,
     4153, 4153, 4153, 4153, 4153, 4154, 4154,    0, 4154, 4154,

     4154, 4154, 4154, 4154, 4154, 4155, 4155, 4155, 4155, 4155,
     4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155,
     4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155,
     4155, 4155, 4155, 4155, 4156, 4156, 4156, 4156, 4156, 4156,
     4156, 4156, 4156, 4156, 4156, 4156, 4156, 4156, 4156, 4156,
     4156, 4156, 4156, 4156, 4156, 4156, 4156, 4156, 4156, 4156,
     4156, 4156, 4156, 4157, 4157, 4157, 4157, 4157, 4157, 4157,
     4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157,
     4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157,
     4157, 4157, 4158, 4158,    0,    0,    0,    0,    0,    0,

        0,    0, 4158, 4158, 4158,    0,    0, 4158, 4158,    0,
     4158, 4158, 4158, 4158, 4158, 4158, 4158, 4158, 4159, 4159,
     4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159,
     4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159,
     4159, 4159, 4159, 4159, 4159, 4159, 4159, 4160, 4160, 4160,
     4160, 4160, 4160, 4160, 4160, 4160,    0, 4160, 4160, 4160,
     4160, 4160, 4160, 4160, 4160, 4160, 4160, 4160, 4160, 4160,
     4160, 4160, 4160, 4160, 4160, 4160, 4161, 4161, 4161, 4161,
     4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161,
     4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161,

     4161, 4161, 4161, 4161, 4161, 4162, 4162, 4162, 4162, 4162,
     4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162,
     4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162,
     4162, 4162, 4162, 4162, 4163, 4163, 4163, 4163, 4163, 4163,
     4163, 4163, 4163, 4163, 4163,    0, 4163,    0, 4163, 4163,
        0,    0, 4163,    0,    0,    0,    0,    0,    0,    0,
     4163, 4163, 4163, 4164, 4164,    0,    0,    0,    0,    0,
        0,    0,    0, 4164, 4164, 4164,    0,    0, 4164, 4164,
        0, 4164, 4164, 4164, 4164, 4164, 4164, 4164, 4164, 4165,
     4165,    0,    0,    0,    0,    0, 4165,    0,    0,    0,

        0,    0,    0,    0, 4165, 4165,    0, 4165, 4165, 4165,
     4165, 4165, 4165, 4165, 4166, 4166, 4166, 4166, 4166, 4166,
     4166, 4166, 4166, 4166, 4166,    0, 4166,    0, 4166, 4166,
        0,    0, 4166,    0,    0,    0,    0,    0,    0,    0,
     4166, 4166, 4166, 4167, 4167, 4167, 4167, 4167, 4167, 4167,
     4167, 4167, 4167, 4167,    0, 4167,    0, 4167, 4167,    0,
        0, 4167,    0,    0,    0,    0,    0,    0,    0, 4167,
     4167, 4167, 4168,    0,    0,    0,    0,    0, 4168, 4168,
        0, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4169, 4169,
     4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169,    0,

     4169,    0, 4169, 4169,    0,    0, 4169,    0,    0,    0,
        0,    0,    0,    0, 4169, 4169, 4169, 4170, 4170, 4170,
     4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170,    0, 4170,
        0, 4170, 4170,    0,    0, 4170,    0,    0,    0,    0,
        0,    0,    0, 4170, 4170, 4170, 4171, 4171, 4171, 4171,
     4171, 4171, 4171, 4171, 4171, 4171, 4171,    0, 4171,    0,
     4171, 4171,    0,    0, 4171,    0,    0,    0,    0,    0,
        0,    0, 4171, 4171, 4171, 4172, 4172, 4172, 4172, 4172,
     4172, 4172, 4172, 4172, 4172, 4172,    0, 4172,    0, 4172,
     4172,    0,    0, 4172,    0,    0,    0,    0,    0,    0,

        0, 4172, 4172, 4172, 4173, 4173, 4173, 4173, 4173, 4173,
     4173, 4173, 4173, 4173, 4173,    0, 4173,    0, 4173, 4173,
        0,    0, 4173,    0,    0,    0,    0,    0,    0,    0,
     4173, 4173, 4173, 4174, 4174, 4174, 4174, 4174, 4174, 4174,
     4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174,
     4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174,
     4174, 4174, 4175, 4175, 4175, 4175, 4175, 4175, 4175, 4175,
     4175, 4175, 4175,    0, 4175,    0, 4175, 4175,    0,    0,
     4175,    0,    0,    0,    0,    0,    0,    0, 4175, 4175,
     4175, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,

     4176, 4176,    0, 4176,    0, 4176, 4176,    0,    0, 4176,
        0,    0,    0,    0,    0,    0,    0, 4176, 4176, 4176,
     4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177,
     4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177,
     4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4178,
     4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178,
        0, 4178,    0, 4178, 4178,    0,    0, 4178,    0,    0,
        0,    0,    0,    0,    0, 4178, 4178, 4178, 4179, 4179,
     4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179,
     4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179,

     4179, 4179, 4179, 4179, 4179, 4179, 4179, 4180, 4180, 4180,
     4180, 4180, 4180, 4180, 4180, 4180, 4180, 4180,    0, 4180,
        0, 4180, 4180,    0,    0, 4180,    0,    0,    0,    0,
        0,    0,    0, 4180, 4180, 4180, 4181, 4181, 4181, 4181,
     4181, 4181, 4181, 4181, 4181, 4181, 4181,    0, 4181,    0,
     4181, 4181,    0,    0, 4181,    0,    0,    0,    0,    0,
        0,    0, 4181, 4181, 4181, 4182, 4182, 4182, 4182, 4182,
     4182, 4182, 4182, 4182, 4182, 4182,    0, 4182,    0, 4182,
     4182,    0,    0, 4182,    0,    0,    0,    0,    0,    0,
        0, 4182, 4182, 4182, 4183, 4183, 4183, 4183, 4183, 4183,

     4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183,
     4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183,
     4183, 4183, 4183, 4184, 4184, 4184, 4184, 4184, 4184, 4184,
     4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184,
     4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184,
     4184, 4184, 4185, 4185, 4185, 4185, 4185, 4185, 4185, 4185,
     4185, 4185, 4185,    0, 4185,    0, 4185, 4185,    0,    0,
     4185,    0,    0,    0,    0,    0,    0,    0, 4185, 4185,
     4185, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186,
     4186, 4186,    0, 4186,    0, 4186, 4186,    0,    0, 4186,

        0,    0,    0,    0,    0,    0,    0, 4186, 4186, 4186,
     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187,
     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187,
     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4188,
     4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188,
        0, 4188,    0, 4188, 4188,    0,    0, 4188,    0,    0,
        0,    0,    0,    0,    0, 4188, 4188, 4188, 4189, 4189,
     4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189,    0,
     4189,    0, 4189, 4189,    0,    0, 4189,    0,    0,    0,
        0,    0,    0,    0, 4189, 4189, 4189, 4190, 4190, 4190,

     4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190,    0, 4190,
        0, 4190, 4190,    0,    0, 4190,    0,    0,    0,    0,
        0,    0,    0, 4190, 4190, 4190, 4191, 4191, 4191, 4191,
     4191, 4191, 4191, 4191, 4191, 4191, 4191,    0, 4191,    0,
     4191, 4191,    0,    0, 4191,    0,    0,    0,    0,    0,
        0,    0, 4191, 4191, 4191, 4192, 4192, 4192, 4192, 4192,
     4192, 4192, 4192, 4192, 4192, 4192,    0, 4192,    0, 4192,
     4192,    0,    0, 4192,    0,    0,    0,    0,    0,    0,
        0, 4192, 4192, 4192, 4193, 4193, 4193, 4193, 4193, 4193,
     4193, 4193, 4193, 4193, 4193,    0, 4193,    0, 4193, 4193,

        0,    0, 4193,    0,    0,    0,    0,    0,    0,    0,
     4193, 4193, 4193, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194,    0, 4194,    0, 4194, 4194,    0,
        0, 4194,    0,    0,    0,    0,    0,    0,    0, 4194,
     4194, 4194, 4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195,
     4195, 4195, 4195,    0, 4195,    0, 4195, 4195,    0,    0,
     4195,    0,    0,    0,    0,    0,    0,    0, 4195, 4195,
     4195, 4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196, 4196,
     4196, 4196,    0, 4196,    0, 4196, 4196,    0,    0, 4196,
        0,    0,    0,    0,    0,    0,    0, 4196, 4196, 4196,

     4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197, 4197,
     4197,    0, 4197,    0, 4197, 4197,    0,    0, 4197,    0,
        0,    0,    0,    0,    0,    0, 4197, 4197, 4197, 4198,
     4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198,
        0, 4198,    0, 4198, 4198,    0,    0, 4198,    0,    0,
        0,    0,    0,    0,    0, 4198, 4198, 4198, 4199, 4199,
     4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199,    0,
     4199,    0, 4199, 4199,    0,    0, 4199,    0,    0,    0,
        0,    0,    0,    0, 4199, 4199, 4199, 4200, 4200, 4200,
     4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200,    0, 4200,

        0, 4200, 4200,    0,    0, 4200,    0,    0,    0,    0,
        0,    0,    0, 4200, 4200, 4200, 4201, 4201, 4201, 4201,
     4201, 4201, 4201, 4201, 4201, 4201, 4201,    0, 4201,    0,
     4201, 4201,    0,    0, 4201,    0,    0,    0,    0,    0,
        0,    0, 4201, 4201, 4201, 4202, 4202, 4202, 4202, 4202,
     4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202,
     4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202,
     4202, 4202, 4202, 4202, 4203, 4203, 4203, 4203, 4203, 4203,
     4203, 4203, 4203, 4203, 4203,    0, 4203,    0, 4203, 4203,
        0,    0, 4203,    0,    0,    0,    0,    0,    0,    0,

     4203, 4203, 4203, 4204, 4204, 4204, 4204, 4204, 4204, 4204,
     4204, 4204, 4204, 4204,    0, 4204,    0, 4204, 4204,    0,
        0, 4204,    0,    0,    0,    0,    0,    0,    0, 4204,
     4204, 4204, 4205, 4205, 4205, 4205, 4205, 4205, 4205, 4205,
     4205, 4205, 4205,    0, 4205,    0, 4205, 4205,    0,    0,
     4205,    0,    0,    0,    0,    0,    0,    0, 4205, 4205,
     4205, 4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206, 4206,
     4206, 4206,    0, 4206,    0, 4206, 4206,    0,    0, 4206,
        0,    0,    0,    0,    0,    0,    0, 4206, 4206, 4206,
     4207,    0,    0,    0, 4207,    0, 4207, 4207,    0, 4207,

     4207, 4207, 4207, 4207, 4207, 4207, 4208, 4208, 4208, 4208,
     4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208,
     4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208,
     4208, 4208, 4208, 4208, 4208, 4209, 4209, 4209, 4209, 4209,
     4209, 4209, 4209, 4209, 4209, 4209,    0, 4209,    0, 4209,
     4209,    0,    0, 4209,    0,    0,    0,    0,    0,    0,
        0, 4209, 4209, 4209, 4210, 4210, 4210, 4210, 4210, 4210,
     4210, 4210, 4210, 4210, 4210,    0, 4210,    0, 4210, 4210,
        0,    0, 4210,    0,    0,    0,    0,    0,    0,    0,
     4210, 4210, 4210, 4211, 4211, 4211, 4211, 4211, 4211, 4211,

     4211, 4211, 4211, 4211,    0, 4211,    0, 4211, 4211,    0,
        0, 4211,    0,    0,    0,    0,    0,    0,    0, 4211,
     4211, 4211, 4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212,
     4212, 4212, 4212,    0, 4212,    0, 4212, 4212,    0,    0,
     4212,    0,    0,    0,    0,    0,    0,    0, 4212, 4212,
     4212, 4213, 4213, 4213, 4213, 4213, 4213, 4213, 4213, 4213,
     4213, 4213,    0, 4213,    0, 4213, 4213,    0,    0, 4213,
        0,    0,    0,    0,    0,    0,    0, 4213, 4213, 4213,
     4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214,
     4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214,

     4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4215,
     4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215,
     4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215,
     4215, 4215, 4215, 4215, 4215, 4215, 4215, 4215, 4216, 4216,
     4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216,
     4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216, 4216,
     4216, 4216, 4216, 4216, 4216, 4216, 4216, 4217, 4217, 4217,
     4217, 4217, 4217, 4217, 4217, 4217, 4217, 4217,    0, 4217,
        0, 4217, 4217,    0,    0, 4217,    0,    0,    0,    0,
        0,    0,    0, 4217, 4217, 4217, 4218, 4218, 4218, 4218,

     4218, 4218, 4218, 4218, 4218, 4218, 4218,    0, 4218,    0,
     4218, 4218,    0,    0, 4218,    0,    0,    0,    0,    0,
        0,    0, 4218, 4218, 4218, 4219, 4219, 4219, 4219, 4219,
     4219, 4219, 4219, 4219, 4219, 4219,    0, 4219,    0, 4219,
     4219,    0,    0, 4219,    0,    0,    0,    0,    0,    0,
        0, 4219, 4219, 4219, 4220, 4220, 4220, 4220, 4220, 4220,
     4220, 4220, 4220, 4220, 4220,    0, 4220,    0, 4220, 4220,
        0,    0, 4220,    0,    0,    0,    0,    0,    0,    0,
     4220, 4220, 4220, 4221, 4221, 4221, 4221, 4221, 4221, 4221,
     4221, 4221, 4221, 4221,    0, 4221,    0, 4221, 4221,    0,

        0, 4221,    0,    0,    0,    0,    0,    0,    0, 4221,
     4221, 4221, 4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222,
     4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222,
     4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222,
     4222, 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223,
     4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223,
     4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223,
     4224, 4224, 4224, 4224, 4224, 4224, 4224, 4224, 4224, 4224,
     4224,    0, 4224,    0, 4224, 4224,    0,    0, 4224,    0,
        0,    0,    0,    0,    0,    0, 4224, 4224, 4224, 4225,

     4225, 4225, 4225, 4225, 4225, 4225, 4225, 4225, 4225, 4225,
        0, 4225,    0, 4225, 4225,    0,    0, 4225,    0,    0,
        0,    0,    0,    0,    0, 4225, 4225, 4225, 4226, 4226,
     4226, 4226, 4226, 4226, 4226, 4226, 4226, 4226, 4226,    0,
     4226,    0, 4226, 4226,    0,    0, 4226,    0,    0,    0,
        0,    0,    0,    0, 4226, 4226, 4226, 4227, 4227, 4227,
     4227, 4227, 4227, 4227, 4227, 4227, 4227, 4227,    0, 4227,
        0, 4227, 4227,    0,    0, 4227,    0,    0,    0,    0,
        0,    0,    0, 4227, 4227, 4227, 4228, 4228, 4228, 4228,
     4228, 4228, 4228, 4228, 4228, 4228, 4228,    0, 4228,    0,

     4228, 4228,    0,    0, 4228,    0,    0,    0,    0,    0,
        0,    0, 4228, 4228, 4228, 4229, 4229, 4229, 4229, 4229,
     4229, 4229, 4229, 4229, 4229, 4229,    0, 4229,    0, 4229,
     4229,    0,    0, 4229,    0,    0,    0,    0,    0,    0,
        0, 4229, 4229, 4229, 4230, 4230, 4230, 4230, 4230, 4230,
     4230, 4230, 4230, 4230, 4230,    0, 4230,    0, 4230, 4230,
        0,    0, 4230,    0,    0,    0,    0,    0,    0,    0,
     4230, 4230, 4230, 4231, 4231, 4231, 4231, 4231, 4231, 4231,
     4231, 4231, 4231, 4231,    0, 4231,    0, 4231, 4231,    0,
        0, 4231,    0,    0,    0,    0,    0,    0,    0, 4231,

     4231, 4231, 4232, 4232, 4232, 4232, 4232, 4232, 4232, 4232,
     4232, 4232, 4232,    0, 4232,    0, 4232, 4232,    0,    0,
     4232,    0,    0,    0,    0,    0,    0,    0, 4232, 4232,
     4232, 4233, 4233, 4233, 4233, 4233, 4233, 4233, 4233, 4233,
     4233, 4233,    0, 4233,    0, 4233, 4233,    0,    0, 4233,
        0,    0,    0,    0,    0,    0,    0, 4233, 4233, 4233,
     4234, 4234, 4234, 4234, 4234, 4234, 4234, 4234, 4234, 4234,
     4234,    0, 4234,    0, 4234, 4234,    0,    0, 4234,    0,
        0,    0,    0,    0,    0,    0, 4234, 4234, 4234, 4235,
     4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235,

        0, 4235,    0, 4235, 4235,    0,    0, 4235,    0,    0,
        0,    0,    0,    0,    0, 4235, 4235, 4235, 4236, 4236,
     4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236,
     4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236,
     4236, 4236, 4236, 4236, 4236, 4236, 4236, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,

     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3663, 3663, 3663, 3663, 3663
    } ;

/* Table of booleans, true if rule could match eol. */
static yyconst flex_int32_t yy_rule_can_match_eol[501] =
    {   0,
0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 
    0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 
    1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 
    1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 
    1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 
    1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 
    1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 
    0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 
    1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 
    0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 
    1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 
    0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 
    1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
    0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 
    1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
    0,     };

static yyconst flex_int16_t yy_rule_linenum[500] =
    {   0,
      267,  268,  287,  293,  300,  304,  310,  316,  323,  330,
      336,  344,  350,  356,  360,  364,  370,  376,  382,  385,
      388,  391,  398,  404,  410,  416,  422,  428,  434,  440,
      449,  458,  464,  467,  470,  473,  476,  479,  482,  485,
      488,  491,  494,  497,  500,  503,  506,  509,  512,  515,
      523,  526,  532,  535,  541,  544,  550,  556,  562,  567,
      573,  578,  583,  588,  593,  598,  606,  611,  616,  621,
      629,  634,  639,  644,  649,  657,  662,  667,  672,  677,
      682,  688,  696,  704,  713,  722,  729,  734,  743,  751,
      758,  766,  774,  782,  790,  800,  811,  814,  817,  820,

      823,  827,  830,  833,  836,  839,  842,  845,  848,  851,
      861,  864,  867,  870,  873,  876,  879,  882,  885,  888,
      891,  894,  897,  900,  903,  906,  909,  912,  915,  918,
      921,  924,  927,  930,  933,  936,  939,  942,  945,  948,
      951,  954,  957,  960,  963,  966,  969,  972,  975,  978,
      981,  984,  987,  990,  993,  996,  999, 1002, 1005, 1008,
     1014, 1018, 1034, 1040, 1045, 1063, 1068, 1089, 1093, 1097,
     1101, 1105, 1109, 1113, 1122, 1128, 1132, 1136, 1140, 1144,
     1148, 1152, 1156, 1160, 1164, 1168, 1172, 1176, 1180, 1184,
     1188, 1196, 1200, 1204, 1208, 1212, 1216, 1221, 1225, 1229,

     1233, 1237, 1241, 1245, 1249, 1253, 1257, 1261, 1265, 1269,
     1273, 1277, 1281, 1285, 1289, 1293, 1297, 1301, 1305, 1309,
     1313, 1317, 1321, 1325, 1329, 1333, 1337, 1341, 1345, 1355,
     1359, 1367, 1371, 1375, 1379, 1392, 1400, 1404, 1408, 1412,
     1420, 1427, 1435, 1443, 1446, 1449, 1452, 1455, 1458, 1461,
     1464, 1467, 1480, 1485, 1489, 1493, 1497, 1501, 1505, 1509,
     1513, 1517, 1521, 1525, 1533, 1536, 1539, 1542, 1545, 1548,
     1551, 1554, 1557, 1560, 1563, 1566, 1569, 1572, 1575, 1578,
     1581, 1584, 1587, 1590, 1593, 1596, 1599, 1602, 1605, 1608,
     1611, 1614, 1617, 1620, 1623, 1626, 1629, 1632, 1635, 1638,

     1641, 1644, 1647, 1650, 1655, 1659, 1678, 1685, 1689, 1710,
     1714, 1721, 1725, 1729, 1733, 1737, 1742, 1746, 1763, 1784,
     1789, 1796, 1801, 1808, 1815, 1819, 1823, 1827, 1831, 1835,
     1857, 1862, 1869, 1873, 1877, 1898, 1906, 1910, 1914, 1935,
     1942, 1947, 1954, 1960, 1966, 1972, 1978, 1984, 1990, 1996,
     2002, 2010, 2016, 2023, 2030, 2035, 2040, 2047, 2056, 2061,
     2066, 2071, 2076, 2081, 2086, 2091, 2096, 2101, 2106, 2111,
     2116, 2121, 2126, 2131, 2136, 2141, 2146, 2151, 2156, 2161,
     2166, 2171, 2176, 2181, 2186, 2191, 2196, 2201, 2206, 2211,
     2216, 2221, 2226, 2231, 2236, 2241, 2248, 2253, 2260, 2264,

     2268, 2272, 2276, 2280, 2286, 2290, 2310, 2318, 2323, 2331,
     2337, 2344, 2350, 2358, 2362, 2382, 2390, 2396, 2401, 2405,
     2409, 2429, 2436, 2443, 2451, 2457, 2461, 2465, 2493, 2498,
     2503, 2510, 2516, 2521, 2543, 2549, 2553, 2575, 2581, 2587,
     2591, 2612, 2618, 2640, 2648, 2652, 2656, 2680, 2687, 2694,
     2701, 2708, 2715, 2719, 2724, 2751, 2758, 2765, 2772, 2779,
     2786, 2793, 2798, 2803, 2808, 2812, 2818, 2839, 2846, 2853,
     2874, 2881, 2886, 2907, 2913, 2917, 2938, 2945, 2952, 2975,
     2998, 3006, 3033, 3040, 3047, 3051, 3056, 3060, 3065, 3069,
     3091, 3098, 3106, 3110, 3115, 3119, 3124, 3128, 3135

    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() (yyg->yy_more_flag = 1)
#define YY_MORE_ADJ yyg->yy_more_len
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
/* -*- mode: c++; indent-tabs-mode: nil; tab-width: 2 -*-
 *
 *  $Id: xquery.l,v 1.4 2006/11/14 05:24:43 Paul Pedersen Exp $
 *
 */
/*______________________________________________________________________
|                                                                       
| 	An implementation of the w3c proposal:                              
|                                                                       
| 	"Building a Tokenizer for XPath or XQuery,                          
| 	 W3C Working Draft 4 April 2005"                                    
|                                                                       
| 	[http://www.w3.org/TR/xquery-xpath-parsing/]                        
|                                                                       
| 	Extensions including update, search, and XQueryP:                   
|                                                                       
| 	[http://www.w3.org/TR/xqupdate/]                                    
| 	[http://www.w3.org/TR/xquery-full-text/]                            
| 	[http://www.ximep-2006.org/papers/Paper-Chamberlin-Carey.pdf]       
|                                                                      
|_______________________________________________________________________*/
#line 26 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"

#ifdef _WIN32
#pragma warning(disable: 4786)
#endif

#ifdef WIN32
#include "util/win32/compatib_defs.h"
#ifndef _WIN32_WCE
#include <io.h>
#endif
#endif

#include <cstdlib>
#ifndef _WIN32_WCE
#include <errno.h>
#endif
#include <limits.h>
#include <iostream>
#include <string>

#include "compiler/parser/symbol_table.h"
#include "compiler/parser/xquery_driver.h"
#include "compiler/parser/xquery_parser.hpp"
#include "zorba/util/properties.h"
#include "types/representations.h"

#define TRY_STR_LIT( ttype, put, yytext, yyleng )                       \
  do {                                                                  \
    off_t res = driver.symtab.put (yytext, yyleng);                     \
    if (res < 0) return token::UNRECOGNIZED;                            \
    else {                                                              \
      yylval->sval = res;                                               \
      return token::ttype;                                              \
    }                                                                   \
 } while (0)

#define TRY_STRINGLIT( ttype, yytext, yyleng ) TRY_STR_LIT (ttype, put_stringlit, yytext, yyleng)

#define TRY_URILIT( ttype, yytext, yyleng ) TRY_STR_LIT (ttype, put_uri, yytext, yyleng)

/*
	Work around an incompatibility in flex (at least versions
	2.5.31 through 2.5.33): it generates code that does
	not conform to C89.  See Debian bug 333231
	<http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=333231>.
*/
#undef yywrap
#define yywrap(yyscanner) 1
     
/*
	By default yylex returns int, we use token_type.
	Unfortunately yyterminate by default returns 0, which is
	not of token_type.
*/
#define yyterminate() return token::END

/*______________________________________________________________________
*                                                                      *
*  Scanner options                                                     *
*______________________________________________________________________*/
/*%option case-insensitive*/
/*%option nostdinit*/
#define YY_NO_UNISTD_H 1
/* known expensive option */
/*_____________________________________________________________________
|
|  Whitespace definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Basic character classes
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  XQuery allows '' to escape ', and "" to escape ".
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  NCName definition
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  QName definition
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  VarName definition
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Entity definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Numeric literal definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  String literal definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Content character definitions
|______________________________________________________________________*/
/*
NonXChar	[\x09\x0A\x0D\x20A-WY-Za-wy-z\x7B-\xFD]
NonMChar	[\x09\x0A\x0D\x20A-LN-Za-ln-z\x7B-\xFD]
NonLChar	[\x09\x0A\x0D\x20A-KM-Za-km-z\x7B-\xFD]
PITarget	(({NonXChar}{Char}*)|((X|x){NonMChar}{Char}*)|((X|x)(M|m){NonLChar}*)|({Char}{Char}{Char}{Char}+)) 
*/
/*______________________________________________________________________
| 
|  Exclusive start states
|______________________________________________________________________*/



















 
 







/*
	The macro YY_USER_ACTION can be defined to provide an action which is 
	always executed prior to the matched rule's action.

	The following paragraph suffices to track locations accurately. Each 
	time yylex is invoked, the begin position is moved onto the end 
	position. Then when a pattern is matched, the end position is advanced 
	of its width. In case it matched ends of lines, the end cursor is 
	adjusted, and each time blanks are matched, the begin cursor is moved 
	onto the end cursor to effectively ignore the blanks preceding tokens. 
	Comments would be treated equally. 
*/
#line 7765 "xquery_scanner.yy.cpp"

#define INITIAL 0
#define MODE_APOS_ATTRIBUTE_CONTENT 1
#define MODE_CDATA_SECTION 2
#define MODE_CLOSE_KINDTEST 3
#define MODE_DECLAREORDERING 4
#define MODE_ELEMENT_CONTENT 5
#define MODE_END_TAG 6
#define MODE_EXPR_COMMENT 7
#define MODE_ITEMTYPE 8
#define MODE_KINDTEST 9
#define MODE_KINDTESTFORPI 10
#define MODE_NAMESPACEDECL 11
#define MODE_NAMESPACEKEYWORD 12
#define MODE_OCCURRENCE_INDICATOR 13
#define MODE_OPERATOR 14
#define MODE_OPTION 15
#define MODE_PRAGMA 16
#define MODE_PRAGMACONTENTS 17
#define MODE_PROCESSING_INSTRUCTION_CTOR 18
#define MODE_PROCESSING_INSTRUCTION 19
#define MODE_PROCESSING_INSTRUCTION_CONTENT 20
#define MODE_QUOTE_ATTRIBUTE_CONTENT 21
#define MODE_SINGLETYPE 22
#define MODE_START_TAG 23
#define MODE_URITOOPERATOR 24
#define MODE_VARNAME 25
#define MODE_XMLSPACE_DECL 26
#define MODE_XML_COMMENT 27
#define MODE_XQUERY_VERSION 28

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
#include <unistd.h>
/* %endif */
/* %if-c++-only */
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */

/* Holds the entire state of the reentrant scanner. */
struct yyguts_t
    {

    /* User-defined. Not touched by flex. */
    YY_EXTRA_TYPE yyextra_r;

    /* The rest are the same as the globals declared in the non-reentrant scanner. */
    FILE *yyin_r, *yyout_r;
    size_t yy_buffer_stack_top; /**< index of top of stack. */
    size_t yy_buffer_stack_max; /**< capacity of stack. */
    YY_BUFFER_STATE * yy_buffer_stack; /**< Stack as an array. */
    char yy_hold_char;
    int yy_n_chars;
    int yyleng_r;
    char *yy_c_buf_p;
    int yy_init;
    int yy_start;
    int yy_did_buffer_switch_on_eof;
    int yy_start_stack_ptr;
    int yy_start_stack_depth;
    int *yy_start_stack;
    yy_state_type yy_last_accepting_state;
    char* yy_last_accepting_cpos;

    int yylineno_r;
    int yy_flex_debug_r;

    char *yytext_r;
    int yy_more_flag;
    int yy_more_len;

    }; /* end struct yyguts_t */

/* %if-c-only */

static int yy_init_globals (yyscan_t yyscanner );

/* %endif */

/* %if-reentrant */

/* %endif */

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int yylex_destroy (yyscan_t yyscanner );

int yyget_debug (yyscan_t yyscanner );

void yyset_debug (int debug_flag ,yyscan_t yyscanner );

YY_EXTRA_TYPE yyget_extra (yyscan_t yyscanner );

void yyset_extra (YY_EXTRA_TYPE user_defined ,yyscan_t yyscanner );

FILE *yyget_in (yyscan_t yyscanner );

void yyset_in  (FILE * in_str ,yyscan_t yyscanner );

FILE *yyget_out (yyscan_t yyscanner );

void yyset_out  (FILE * out_str ,yyscan_t yyscanner );

int yyget_leng (yyscan_t yyscanner );

char *yyget_text (yyscan_t yyscanner );

int yyget_lineno (yyscan_t yyscanner );

void yyset_lineno (int line_number ,yyscan_t yyscanner );

/* %if-bison-bridge */
/* %endif */
/* %endif End reentrant structures and macros. */

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap (yyscan_t yyscanner );
#else
extern int yywrap (yyscan_t yyscanner );
#endif
#endif

/* %not-for-header */

    static void yyunput (int c,char *buf_ptr  ,yyscan_t yyscanner);
    
/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int ,yyscan_t yyscanner);
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * ,yyscan_t yyscanner);
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

#ifdef __cplusplus
static int yyinput (yyscan_t yyscanner );
#else
static int input (yyscan_t yyscanner );
#endif
/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */

    static void yy_push_state (int new_state ,yyscan_t yyscanner);
    
    static void yy_pop_state (yyscan_t yyscanner );
    
    static int yy_top_state (yyscan_t yyscanner );
    
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
/* %endif */
/* %if-c++-only C++ definition */
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
		{ \
		int c = '*'; \
		size_t n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else \
		{ \
		errno=0; \
		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
			{ \
			if( errno != EINTR) \
				{ \
				YY_FATAL_ERROR( "input in flex scanner failed" ); \
				break; \
				} \
			errno=0; \
			clearerr(yyin); \
			} \
		}\
\
/* %if-c++-only C++ definition \ */\
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg , yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %ok-for-header */

/* %not-for-header */

/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */

extern int yylex (yyscan_t yyscanner);

#define YY_DECL int yylex (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only C++ definition */
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

/* %% [7.0] user's declarations go here */
#line 262 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"


 yylloc->step ();


#line 8085 "xquery_scanner.yy.cpp"

	if ( !yyg->yy_init )
		{
		yyg->yy_init = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yyg->yy_start )
			yyg->yy_start = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
			yyin = stdin;
/* %endif */
/* %if-c++-only */
/* %endif */

		if ( ! yyout )
/* %if-c-only */
			yyout = stdout;
/* %endif */
/* %if-c++-only */
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack (yyscanner);
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
		}

		yy_load_buffer_state(yyscanner );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		yyg->yy_more_len = 0;
		if ( yyg->yy_more_flag )
			{
			yyg->yy_more_len = yyg->yy_c_buf_p - yyg->yytext_ptr;
			yyg->yy_more_flag = 0;
			}
		yy_cp = yyg->yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yyg->yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = yyg->yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yyg->yy_last_accepting_state = yy_current_state;
				yyg->yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 3664 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_current_state != 3663 );
		yy_cp = yyg->yy_last_accepting_cpos;
		yy_current_state = yyg->yy_last_accepting_state;

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

		if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
			{
			int yyl;
			for ( yyl = yyg->yy_more_len; yyl < yyleng; ++yyl )
				if ( yytext[yyl] == '\n' )
					   
    do{ yylineno++;
        yycolumn=0;
    }while(0)
;
			}

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				fprintf( stderr, "--scanner backing up\n" );
			else if ( yy_act < 500 )
				fprintf( stderr, "--accepting rule at line %ld (\"%s\")\n",
				         (long)yy_rule_linenum[yy_act], yytext );
			else if ( yy_act == 500 )
				fprintf( stderr, "--accepting default rule (\"%s\")\n",
				         yytext );
			else if ( yy_act == 501 )
				fprintf( stderr, "--(end of buffer or a NUL)\n" );
			else
				fprintf( stderr, "--EOF (start condition %d)\n", YY_START );
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yyg->yy_hold_char;
			yy_cp = yyg->yy_last_accepting_cpos;
			yy_current_state = yyg->yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 267 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{ yylloc->step(); }
	YY_BREAK
case 2:
/* rule 2 can match eol */
YY_RULE_SETUP
#line 268 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{ yylloc->lines(yyleng); yylloc->step (); }
	YY_BREAK

typedef yy::xquery_parser::token token;

/*______________________________________________________________________
	 |
	 |  INITIAL State
	 |
	 |  This state is for patterns that occur at the beginning	of an
	 |  expression or subexpression.
	 |______________________________________________________________________*/
/* maintain INITIAL */
/* ---------------- */
case 3:
/* rule 3 can match eol */
YY_RULE_SETUP
#line 287 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::VALIDATE_LBRACE;
}
	YY_BREAK
case 4:
/* rule 4 can match eol */
YY_RULE_SETUP
#line 293 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put(yytext+9, yyleng-9);
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::VALIDATE_MODE;
}
	YY_BREAK
case 5:
/* rule 5 can match eol */
YY_RULE_SETUP
#line 300 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::TYPESWITCH_LPAR;
}
	YY_BREAK
case 6:
/* rule 6 can match eol */
YY_RULE_SETUP
#line 304 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::ELEMENT_LBRACE;
}
	YY_BREAK
case 7:
/* rule 7 can match eol */
YY_RULE_SETUP
#line 310 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::ATTRIBUTE_LBRACE;
}
	YY_BREAK
case 8:
/* rule 8 can match eol */
YY_RULE_SETUP
#line 316 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_qname(yytext+10, yyleng-11, true, true);
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::ATTRIBUTE_QNAME_LBRACE;
}
	YY_BREAK
case 9:
/* rule 9 can match eol */
YY_RULE_SETUP
#line 323 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_qname(yytext+8, yyleng-9, true, true);
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::ELEMENT_QNAME_LBRACE;
}
	YY_BREAK
case 10:
/* rule 10 can match eol */
YY_RULE_SETUP
#line 330 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::DOCUMENT_LBRACE;
}
	YY_BREAK
case 11:
/* rule 11 can match eol */
YY_RULE_SETUP
#line 336 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::TEXT_LBRACE;
}
	YY_BREAK
/* transition to MODE_PROCESSING_INSTRUCTION_CTOR */
/* ---------------------- */
case 12:
YY_RULE_SETUP
#line 344 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PROCESSING_INSTRUCTION_CTOR;
  return token::PROCESSING_INSTRUCTION;
}
	YY_BREAK
case 13:
/* rule 13 can match eol */
YY_RULE_SETUP
#line 350 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::COMMENT_LBRACE;
}
	YY_BREAK
case 14:
/* rule 14 can match eol */
YY_RULE_SETUP
#line 356 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DECLARE_FUNCTION;
}
	YY_BREAK
case 15:
/* rule 15 can match eol */
YY_RULE_SETUP
#line 360 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DECLARE_UPDATING_FUNCTION;
}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 364 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::LBRACE;
}
	YY_BREAK
case 17:
/* rule 17 can match eol */
YY_RULE_SETUP
#line 370 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::ORDERED_LBRACE;
}
	YY_BREAK
case 18:
/* rule 18 can match eol */
YY_RULE_SETUP
#line 376 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::UNORDERED_LBRACE;
}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 382 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SEMI;
}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 385 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::COMMA;
}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 388 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::LPAR;
}
	YY_BREAK
case 22:
/* rule 22 can match eol */
YY_RULE_SETUP
#line 391 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::IF_LPAR;
}
	YY_BREAK
/* transition to KINDTEST */
/* ---------------------- */
case 23:
/* rule 23 can match eol */
YY_RULE_SETUP
#line 398 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::ELEMENT_LPAR;
}
	YY_BREAK
case 24:
/* rule 24 can match eol */
YY_RULE_SETUP
#line 404 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::ATTRIBUTE_LPAR;
}
	YY_BREAK
case 25:
/* rule 25 can match eol */
YY_RULE_SETUP
#line 410 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::SCHEMA_ELEMENT_LPAR;
}
	YY_BREAK
case 26:
/* rule 26 can match eol */
YY_RULE_SETUP
#line 416 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::SCHEMA_ATTRIBUTE_LPAR;
}
	YY_BREAK
case 27:
/* rule 27 can match eol */
YY_RULE_SETUP
#line 422 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::COMMENT_LPAR;
}
	YY_BREAK
case 28:
/* rule 28 can match eol */
YY_RULE_SETUP
#line 428 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::TEXT_LPAR;
}
	YY_BREAK
case 29:
/* rule 29 can match eol */
YY_RULE_SETUP
#line 434 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::NODE_LPAR;
}
	YY_BREAK
case 30:
/* rule 30 can match eol */
YY_RULE_SETUP
#line 440 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::DOCUMENT_NODE_LPAR;
}
	YY_BREAK
/* transition to KINDTESTFORPI */
/* --------------------------- */
case 31:
/* rule 31 can match eol */
YY_RULE_SETUP
#line 449 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_KINDTESTFORPI, yyscanner);
	return token::PI_LPAR;
}
	YY_BREAK
/* order dependence: this must follow the rules: xxx{S}"(" */
case 32:
/* rule 32 can match eol */
YY_RULE_SETUP
#line 458 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = driver.symtab.put_qname(yytext, yyleng-1, false, true);
	return token::QNAME_LPAR;
}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 464 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::MINUS;
}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 467 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::PLUS;
}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 470 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SLASH;
}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 473 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::LEADING_LONE_SLASH;
}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 476 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SLASH_SLASH;
}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 479 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ANCESTOR_OR_SELF_AXIS;
}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 482 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ANCESTOR_AXIS;
}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 485 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ATTRIBUTE_AXIS;
}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 488 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::CHILD_AXIS;
}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 491 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DESCENDANT_OR_SELF_AXIS;
}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 494 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DESCENDANT_AXIS;
}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 497 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::FOLLOWING_SIBLING_AXIS;
}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 500 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::FOLLOWING_AXIS;
}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 503 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::PARENT_AXIS;
}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 506 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::PRECEDING_SIBLING_AXIS;
}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 509 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::PRECEDING_AXIS;
}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 512 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SELF_AXIS;
}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 515 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AT_SIGN;
}
	YY_BREAK
/* transition to OPERATOR */
/* ---------------------- */
case 51:
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 523 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 526 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->ival = driver.symtab.integerval(yytext, yyleng);
	BEGIN MODE_OPERATOR;
	return token::INTEGER_LITERAL;
}
	YY_BREAK
case 53:
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 532 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 535 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->decval = driver.symtab.decimalval(yytext, yyleng);
	BEGIN MODE_OPERATOR;
	return token::DECIMAL_LITERAL;
}
	YY_BREAK
case 55:
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 541 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 544 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->dval = driver.symtab.doubleval(yytext, yyleng);
	BEGIN MODE_OPERATOR;
	return token::DOUBLE_LITERAL;
}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 550 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_ncname(yytext, yyleng-2);
	BEGIN MODE_OPERATOR;
	return token::ELEM_WILDCARD;
}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 556 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_qname(yytext, yyleng);
	BEGIN MODE_OPERATOR;
	return token::QNAME;
}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 562 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::RPAR;
}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 567 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_ncname(yytext+2, yyleng-2);
	BEGIN MODE_OPERATOR;
	return token::PREFIX_WILDCARD;
}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 573 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::STAR;
}
	YY_BREAK
case 62:
/* rule 62 can match eol */
YY_RULE_SETUP
#line 578 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 63:
/* rule 63 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 583 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::DECLARE_CONSTRUCTION;
}
	YY_BREAK
case 64:
/* rule 64 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 588 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::DECLARE_DEFAULT_ORDER;
}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 593 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::DOT_DOT;
}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 598 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::DOT;
}
	YY_BREAK
/* transition to NAMESPACEDECL */
/* --------------------------- */
case 67:
/* rule 67 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 606 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEDECL;
	return token::DECLARE_DEFAULT_COLLATION;
}
	YY_BREAK
case 68:
/* rule 68 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 611 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEDECL;
	return token::DECLARE_NAMESPACE;
}
	YY_BREAK
case 69:
/* rule 69 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 616 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEDECL;
	return token::MODULE_NAMESPACE;
}
	YY_BREAK
case 70:
/* rule 70 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 621 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEDECL;
	return token::DECLARE_BASE_URI;
}
	YY_BREAK
/* transition to NAMESPACEKEYWORD */
/* ------------------------------ */
case 71:
/* rule 71 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 629 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEKEYWORD;
	return token::DECLARE_DEFAULT_ELEMENT;
}
	YY_BREAK
case 72:
/* rule 72 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 634 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEKEYWORD;
	return token::DECLARE_DEFAULT_FUNCTION;
}
	YY_BREAK
case 73:
/* rule 73 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 639 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEKEYWORD;
	return token::IMPORT_SCHEMA;
}
	YY_BREAK
case 74:
/* rule 74 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 644 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEKEYWORD;
	return token::IMPORT_MODULE;
}
	YY_BREAK
case 75:
/* rule 75 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 649 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEKEYWORD;
	return token::DECLARE_COPY_NAMESPACES;
}
	YY_BREAK
/* transition to VARNAME */
/* --------------------- */
case 76:
YY_RULE_SETUP
#line 657 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::DOLLAR;
}
	YY_BREAK
case 77:
/* rule 77 can match eol */
YY_RULE_SETUP
#line 662 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::FOR_DOLLAR;
}
	YY_BREAK
case 78:
/* rule 78 can match eol */
YY_RULE_SETUP
#line 667 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::LET_DOLLAR;
}
	YY_BREAK
case 79:
/* rule 79 can match eol */
YY_RULE_SETUP
#line 672 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::SOME_DOLLAR;
}
	YY_BREAK
case 80:
/* rule 80 can match eol */
YY_RULE_SETUP
#line 677 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::EVERY_DOLLAR;
}
	YY_BREAK
case 81:
/* rule 81 can match eol */
YY_RULE_SETUP
#line 682 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::DECLARE_VARIABLE_DOLLAR;
}
	YY_BREAK
/* update rule */
case 82:
/* rule 82 can match eol */
YY_RULE_SETUP
#line 688 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::TRANSFORM_COPY_DOLLAR;
}
	YY_BREAK
/* transition to ITEMTYPE */
/* ---------------------- */
case 83:
/* rule 83 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 696 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_ITEMTYPE;
	return token::RPAR_AS;
}	
	YY_BREAK
/* transition to XML_COMMENT */
/* ------------------------- */
case 84:
YY_RULE_SETUP
#line 704 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_XML_COMMENT, yyscanner);
	return token::XML_COMMENT_BEGIN;
}
	YY_BREAK
/* transition to PROCESSING_INSTRUCTION */
/* ------------------------------------ */
case 85:
YY_RULE_SETUP
#line 713 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{	
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_PROCESSING_INSTRUCTION, yyscanner);
	return token::PI_BEGIN;
}
	YY_BREAK
/* transition to CDATA_SECTION */
/* --------------------------- */
case 86:
YY_RULE_SETUP
#line 722 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_CDATA_SECTION, yyscanner);
	return token::CDATA_BEGIN;
}
	YY_BREAK
case 87:
/* rule 87 can match eol */
YY_RULE_SETUP
#line 729 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* transition to START_TAG */
/* ----------------------- */
case 88:
YY_RULE_SETUP
#line 734 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{ 	
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ MODE_START_TAG, yyscanner);
	return token::START_TAG;
}
	YY_BREAK
/* transition to XMLSPACE_DECL */
/* --------------------------- */
case 89:
/* rule 89 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 743 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_XMLSPACE_DECL;
	return token::DECLARE_BOUNDARY_SPACE;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 90:
YY_RULE_SETUP
#line 751 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
/* transition to DECLAREORDERING */
/* ----------------------------- */
case 91:
/* rule 91 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 758 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_DECLAREORDERING;
	return token::DECLARE_ORDERING;
}
	YY_BREAK
/* transition to XQUERY_VERSION */
/* ---------------------------- */
case 92:
/* rule 92 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 766 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_XQUERY_VERSION;
	return token::XQUERY_VERSION;
}
	YY_BREAK
/* transition to PRAGMA */
/* -------------------- */
case 93:
YY_RULE_SETUP
#line 774 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{ 	
	BEGIN MODE_PRAGMA;
	return token::PRAGMA_BEGIN;
}
	YY_BREAK
/* transition to OPTION */
/* -------------------- */
case 94:
/* rule 94 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 782 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPTION;
	return token::DECLARE_OPTION;
}
	YY_BREAK
/* transition to NAMESPACEDECL */
/* --------------------------- */
case 95:
/* rule 95 can match eol */
YY_RULE_SETUP
#line 790 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  const char *p = yytext + 2;
  for (; *p != '\'' && *p != '"'; p++);
	BEGIN MODE_NAMESPACEDECL;
	TRY_URILIT (AT_URI_LITERAL, p, yyleng + (p - yytext));
}
	YY_BREAK
/* pop previous state */
/* ------------------ */
case 96:
YY_RULE_SETUP
#line 800 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{ 	
	yy_pop_state(yyscanner);
	return token::RBRACE;
}
	YY_BREAK
/*______________________________________________________________________  
	 |
	 | Update rules <INITIAL>
	 |______________________________________________________________________*/
case 97:
/* rule 97 can match eol */
YY_RULE_SETUP
#line 811 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DECLARE_REVALIDATION_MODE;
}
	YY_BREAK
case 98:
/* rule 98 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 814 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DO_INSERT;
}
	YY_BREAK
case 99:
/* rule 99 can match eol */
YY_RULE_SETUP
#line 817 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DO_DELETE;
}
	YY_BREAK
case 100:
/* rule 100 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 820 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DO_REPLACE;
}
	YY_BREAK
case 101:
/* rule 101 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 823 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	driver.set_rename(true);
	return token::DO_RENAME;
}
	YY_BREAK
case 102:
/* rule 102 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 827 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::INTO;
}
	YY_BREAK
case 103:
/* rule 103 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 830 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::FIRST_INTO;
}
	YY_BREAK
case 104:
/* rule 104 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 833 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::LAST_INTO;
}
	YY_BREAK
case 105:
/* rule 105 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 836 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AFTER;
}
	YY_BREAK
case 106:
/* rule 106 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 839 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::BEFORE;
}
	YY_BREAK
case 107:
/* rule 107 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 842 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::VALUE_OF;
}
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 845 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH;
}
	YY_BREAK
case 109:
/* rule 109 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 848 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AS;
}
	YY_BREAK
case 110:
/* rule 110 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 851 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::MODIFY;
}
	YY_BREAK
/*______________________________________________________________________  
	 |
	 | FT rules <INITIAL>
	 |______________________________________________________________________*/
case 111:
YY_RULE_SETUP
#line 861 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::FTAND;
}
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 864 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::FTNOT;
}
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 867 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::FTOR;
}
	YY_BREAK
case 114:
/* rule 114 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 870 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::FTNOT_IN;
}
	YY_BREAK
case 115:
/* rule 115 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 873 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ALL;
}
	YY_BREAK
case 116:
/* rule 116 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 876 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ALL_WORDS;
}
	YY_BREAK
case 117:
/* rule 117 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 879 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ANY;
}
	YY_BREAK
case 118:
/* rule 118 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 882 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ANY_WORD;
}
	YY_BREAK
case 119:
/* rule 119 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 885 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AT_END;
}
	YY_BREAK
case 120:
/* rule 120 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 888 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AT_LEAST;
}
	YY_BREAK
case 121:
/* rule 121 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 891 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AT_MOST;
}
	YY_BREAK
case 122:
/* rule 122 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 894 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AT_START;
}
	YY_BREAK
case 123:
/* rule 123 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 897 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::CASE_INSENSITIVE;
}
	YY_BREAK
case 124:
/* rule 124 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 900 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::CASE_SENSITIVE;
}
	YY_BREAK
case 125:
/* rule 125 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 903 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DECLARE_FTOPTION;
}
	YY_BREAK
case 126:
/* rule 126 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 906 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DIACRITICS_INSENSITIVE;
}
	YY_BREAK
case 127:
/* rule 127 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 909 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DIACRITICS_SENSITIVE;
}
	YY_BREAK
case 128:
/* rule 128 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 912 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DIFFERENT;
}
	YY_BREAK
case 129:
/* rule 129 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 915 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DISTANCE;
}
	YY_BREAK
case 130:
/* rule 130 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 918 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ENTIRE_CONTENT;
}
	YY_BREAK
case 131:
/* rule 131 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 921 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::EXACTLY;
}
	YY_BREAK
case 132:
/* rule 132 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 924 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::FROM;
}
	YY_BREAK
case 133:
/* rule 133 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 927 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::LANGUAGE;
}
	YY_BREAK
case 134:
/* rule 134 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 930 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::LEVELS;
}
	YY_BREAK
case 135:
/* rule 135 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 933 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::LOWERCASE;
}
	YY_BREAK
case 136:
/* rule 136 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 936 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::OCCURS;
}
	YY_BREAK
case 137:
/* rule 137 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 939 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::PARAGRAPH;
}
	YY_BREAK
case 138:
/* rule 138 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 942 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::PHRASE;
}
	YY_BREAK
case 139:
/* rule 139 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 12;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 945 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::RELATIONSHIP;
}
	YY_BREAK
case 140:
/* rule 140 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 948 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SAME;
}
	YY_BREAK
case 141:
/* rule 141 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 951 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SCORE;
}
	YY_BREAK
case 142:
/* rule 142 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 954 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SENTENCE;
}
	YY_BREAK
case 143:
/* rule 143 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 957 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SENTENCES;
}
	YY_BREAK
case 144:
/* rule 144 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 960 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::TIMES;
}
	YY_BREAK
case 145:
/* rule 145 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 963 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::UPPERCASE;
}
	YY_BREAK
case 146:
/* rule 146 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 966 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WEIGHT;
}
	YY_BREAK
case 147:
/* rule 147 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 969 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WINDOW;
}
	YY_BREAK
case 148:
/* rule 148 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 972 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_CONTENT;
}
	YY_BREAK
case 149:
/* rule 149 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 975 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_DIACRITICS;
}
	YY_BREAK
case 150:
/* rule 150 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 978 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_STEMMING;
}
	YY_BREAK
case 151:
/* rule 151 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 981 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_STOP_WORDS;
}
	YY_BREAK
case 152:
/* rule 152 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 984 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_THESAURUS;
}
	YY_BREAK
case 153:
/* rule 153 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 987 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_WILDCARDS;
}
	YY_BREAK
case 154:
/* rule 154 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 990 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_DEFAULT_STOP_WORDS;
}
	YY_BREAK
case 155:
/* rule 155 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 993 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_DIACRITICS;
}
	YY_BREAK
case 156:
/* rule 156 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 996 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_STEMMING;
}
	YY_BREAK
case 157:
/* rule 157 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 999 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_STOP_WORDS;
}
	YY_BREAK
case 158:
/* rule 158 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1002 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_THESAURUS;
}
	YY_BREAK
case 159:
/* rule 159 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1005 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_WILDCARDS;
}
	YY_BREAK
case 160:
/* rule 160 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1008 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WORDS;
}
	YY_BREAK
/* catch all */
case 161:
YY_RULE_SETUP
#line 1014 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 162:
/* rule 162 can match eol */
YY_RULE_SETUP
#line 1018 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END MODE INITIAL */
/*______________________________________________________________________  
    |
    |  The PROCESSING_INSTRUCTION_CTOR State
    |
    |  transition to MODE_OPERATOR
    |______________________________________________________________________*/

case 163:
YY_RULE_SETUP
#line 1034 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  yy_push_state( /*and goto*/ INITIAL, yyscanner);
  return token::LBRACE;
}
	YY_BREAK
case 164:
YY_RULE_SETUP
#line 1040 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = driver.symtab.put_ncname(yytext, yyleng);
  return token::NCNAME;
}
	YY_BREAK
case 165:
/* rule 165 can match eol */
YY_RULE_SETUP
#line 1045 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK

/*______________________________________________________________________  
	 |
	 |	The DECLAREORDERING State
	 |
	 |	Special state to recognize declare ordering specific keywords. 
	 |	transition to INITIAL
	 |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 166:
/* rule 166 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1063 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::ORDERED;
}
	YY_BREAK
case 167:
/* rule 167 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1068 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::UNORDERED;
}
	YY_BREAK
/* <MODE_DECLAREORDERING> */
/*______________________________________________________________________  
	 |
	 |	OPERATOR State 
	 | 
	 |  This state is for patterns that are defined for operators.
	 |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 168:
YY_RULE_SETUP
#line 1089 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::LBRACE;
}
	YY_BREAK
case 169:
YY_RULE_SETUP
#line 1093 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::SEMI;
}
	YY_BREAK
case 170:
/* rule 170 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1097 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::THEN;
}
	YY_BREAK
case 171:
/* rule 171 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1101 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::ELSE;
}
	YY_BREAK
case 172:
/* rule 172 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1105 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::EXTERNAL;
}
	YY_BREAK
case 173:
/* rule 173 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1109 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::AND;
}
	YY_BREAK
case 174:
/* rule 174 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1113 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	if (!driver.ftcontains()) {
		BEGIN INITIAL;
	}
	return token::AT;
}
	YY_BREAK
/* full-text rule */
case 175:
/* rule 175 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1122 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::SCORE;
}
	YY_BREAK
case 176:
YY_RULE_SETUP
#line 1128 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::GETS;
}
	YY_BREAK
case 177:
YY_RULE_SETUP
#line 1132 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::COMMA;
}
	YY_BREAK
case 178:
/* rule 178 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1136 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::DIV;
}
	YY_BREAK
case 179:
YY_RULE_SETUP
#line 1140 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::EQUALS;
}
	YY_BREAK
case 180:
/* rule 180 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1144 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::EXCEPT;
}
	YY_BREAK
case 181:
/* rule 181 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1148 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_EQ;
}
	YY_BREAK
case 182:
/* rule 182 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1152 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_GE;
}
	YY_BREAK
case 183:
/* rule 183 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1156 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_GT;
}
	YY_BREAK
case 184:
/* rule 184 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1160 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_LE;
}
	YY_BREAK
case 185:
/* rule 185 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1164 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_LT;
}
	YY_BREAK
case 186:
/* rule 186 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1168 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_NE;
}
	YY_BREAK
case 187:
YY_RULE_SETUP
#line 1172 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::GE;
}
	YY_BREAK
case 188:
YY_RULE_SETUP
#line 1176 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::FOLLOWS;
}
	YY_BREAK
case 189:
YY_RULE_SETUP
#line 1180 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::GT;
}
	YY_BREAK
case 190:
/* rule 190 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1184 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::IDIV;
}
	YY_BREAK
case 191:
/* rule 191 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1188 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::INTERSECT;
}
	YY_BREAK
/* Update rules */
case 192:
/* rule 192 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1196 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::INTO;
}
	YY_BREAK
case 193:
/* rule 193 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1200 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::WITH;
}
	YY_BREAK
case 194:
/* rule 194 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1204 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::DO_INSERT;
}
	YY_BREAK
case 195:
/* rule 195 can match eol */
YY_RULE_SETUP
#line 1208 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::DO_DELETE;
}
	YY_BREAK
case 196:
/* rule 196 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1212 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::DO_REPLACE;
}
	YY_BREAK
case 197:
/* rule 197 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1216 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	driver.set_rename(true);
	return token::DO_RENAME;
}
	YY_BREAK
case 198:
/* rule 198 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1221 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::INTO;
}
	YY_BREAK
case 199:
/* rule 199 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1225 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::FIRST_INTO;
}
	YY_BREAK
case 200:
/* rule 200 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1229 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::LAST_INTO;
}
	YY_BREAK
case 201:
/* rule 201 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1233 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::AFTER;
}
	YY_BREAK
case 202:
/* rule 202 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1237 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::BEFORE;
}
	YY_BREAK
case 203:
/* rule 203 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1241 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VALUE_OF;
}
	YY_BREAK
case 204:
/* rule 204 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1245 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::MODIFY;
}
	YY_BREAK
case 205:
/* rule 205 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1249 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::_IN_;
}
	YY_BREAK
case 206:
/* rule 206 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1253 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::IS;
}
	YY_BREAK
case 207:
YY_RULE_SETUP
#line 1257 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::LBRACK;
}
	YY_BREAK
case 208:
YY_RULE_SETUP
#line 1261 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::LE;
}
	YY_BREAK
case 209:
YY_RULE_SETUP
#line 1265 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::PRECEDES;
}
	YY_BREAK
case 210:
YY_RULE_SETUP
#line 1269 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::LT;
}
	YY_BREAK
case 211:
YY_RULE_SETUP
#line 1273 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::MINUS;
}
	YY_BREAK
case 212:
/* rule 212 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1277 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::MOD;
}
	YY_BREAK
case 213:
YY_RULE_SETUP
#line 1281 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::STAR;
}
	YY_BREAK
case 214:
YY_RULE_SETUP
#line 1285 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::NE;
}
	YY_BREAK
case 215:
/* rule 215 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1289 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::ORDER_BY;
}
	YY_BREAK
case 216:
/* rule 216 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1293 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::STABLE_ORDER_BY;
}
	YY_BREAK
case 217:
/* rule 217 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1297 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::OR;
}
	YY_BREAK
case 218:
YY_RULE_SETUP
#line 1301 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::PLUS;
}
	YY_BREAK
case 219:
/* rule 219 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1305 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::RETURN;
}
	YY_BREAK
case 220:
/* rule 220 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1309 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::SATISFIES;
}
	YY_BREAK
case 221:
YY_RULE_SETUP
#line 1313 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::SLASH;
}
	YY_BREAK
case 222:
YY_RULE_SETUP
#line 1317 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::LEADING_LONE_SLASH;
}
	YY_BREAK
case 223:
YY_RULE_SETUP
#line 1321 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::SLASH_SLASH;
}
	YY_BREAK
case 224:
/* rule 224 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1325 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::TO;
}
	YY_BREAK
case 225:
/* rule 225 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1329 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::UNION;
}
	YY_BREAK
case 226:
YY_RULE_SETUP
#line 1333 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VBAR;
}
	YY_BREAK
case 227:
/* rule 227 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1337 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::WHERE;
}
	YY_BREAK
case 228:
/* rule 228 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1341 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::PRESERVE;
}
	YY_BREAK
case 229:
/* rule 229 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1345 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::STRIP;
}
	YY_BREAK
/* transition to SINGLETYPE */
/* ------------------------ */
case 230:
/* rule 230 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1355 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_SINGLETYPE;
	return token::CASTABLE_AS;
}
	YY_BREAK
case 231:
/* rule 231 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1359 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_SINGLETYPE;
	return token::CAST_AS;
}
	YY_BREAK
/* transition to ITEMTYPE */
/* ---------------------- */
case 232:
/* rule 232 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1367 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_ITEMTYPE;
	return token::INSTANCE_OF;
}
	YY_BREAK
case 233:
/* rule 233 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1371 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_ITEMTYPE;
	return token::TREAT_AS;
}
	YY_BREAK
case 234:
/* rule 234 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1375 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_ITEMTYPE;
	return token::CASE;
}
	YY_BREAK
case 235:
/* rule 235 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1379 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	if (driver.rename()) {
		driver.set_rename(false);
		BEGIN INITIAL;
	}
	else if (driver.ftcontains()) {
		driver.set_ftcontains(false);
	}
	else {
		BEGIN MODE_ITEMTYPE;
	}
	return token::AS;
}
	YY_BREAK
case 236:
/* rule 236 can match eol */
YY_RULE_SETUP
#line 1392 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_ITEMTYPE;
	return token::RPAR_AS;
}
	YY_BREAK
/* transition to VARNAME */
/* --------------------- */
case 237:
YY_RULE_SETUP
#line 1400 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::DOLLAR;
}
	YY_BREAK
case 238:
/* rule 238 can match eol */
YY_RULE_SETUP
#line 1404 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::FOR_DOLLAR;
}
	YY_BREAK
case 239:
/* rule 239 can match eol */
YY_RULE_SETUP
#line 1408 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::LET_DOLLAR;
}
	YY_BREAK
case 240:
/* rule 240 can match eol */
YY_RULE_SETUP
#line 1412 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::LET_SCORE_DOLLAR;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 241:
YY_RULE_SETUP
#line 1420 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
/* transition to URITOOPERATOR */
/* --------------------------- */
case 242:
/* rule 242 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1427 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_URITOOPERATOR;
	return token::COLLATION;
}
	YY_BREAK
/* restore previous state on closing brace */
/* --------------------------------------- */
case 243:
YY_RULE_SETUP
#line 1435 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
	return token::RBRACE;
}
	YY_BREAK
/* maintain OPERATOR state */
/* ----------------------- */
case 244:
YY_RULE_SETUP
#line 1443 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::RPAR;
}
	YY_BREAK
case 245:
YY_RULE_SETUP
#line 1446 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::HOOK;
}
	YY_BREAK
case 246:
/* rule 246 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1449 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::EMPTY_GREATEST;
}
	YY_BREAK
case 247:
/* rule 247 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1452 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::EMPTY_LEAST;
}
	YY_BREAK
case 248:
/* rule 248 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1455 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ASCENDING;
}
	YY_BREAK
case 249:
/* rule 249 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 10;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1458 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DESCENDING;
}
	YY_BREAK
case 250:
/* rule 250 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1461 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DEFAULT;
}
	YY_BREAK
case 251:
YY_RULE_SETUP
#line 1464 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::RBRACK;
}
	YY_BREAK
case 252:
/* rule 252 can match eol */
YY_RULE_SETUP
#line 1467 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
/*______________________________________________________________________  
	 |
	 | FT rules <OPERATOR>
	 |______________________________________________________________________*/
/* transition to INITIAL state */
/* --------------------------- */
case 253:
/* rule 253 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 10;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1480 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	driver.set_ftcontains(true);
	return token::FTCONTAINS;
}
	YY_BREAK
case 254:
YY_RULE_SETUP
#line 1485 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::FTAND;
}
	YY_BREAK
case 255:
YY_RULE_SETUP
#line 1489 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::FTNOT;
}
	YY_BREAK
case 256:
YY_RULE_SETUP
#line 1493 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::FTOR;
}
	YY_BREAK
case 257:
/* rule 257 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1497 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::FTNOT_IN;
}
	YY_BREAK
case 258:
/* rule 258 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1501 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
	return token::AT_LEAST;
}
	YY_BREAK
case 259:
/* rule 259 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1505 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
	return token::AT_MOST;
}
	YY_BREAK
case 260:
/* rule 260 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1509 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
	return token::DISTANCE;
}
	YY_BREAK
case 261:
/* rule 261 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1513 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
	return token::EXACTLY;
}
	YY_BREAK
case 262:
/* rule 262 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1517 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
	return token::FROM;
}
	YY_BREAK
case 263:
/* rule 263 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1521 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
	return token::OCCURS;
}
	YY_BREAK
case 264:
/* rule 264 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1525 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
	return token::WINDOW;
}
	YY_BREAK
/* maintain OPERATOR state */
/* ----------------------- */
case 265:
/* rule 265 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1533 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ALL;
}
	YY_BREAK
case 266:
/* rule 266 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1536 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ALL_WORDS;
}
	YY_BREAK
case 267:
/* rule 267 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1539 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ANY;
}
	YY_BREAK
case 268:
/* rule 268 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1542 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ANY_WORD;
}
	YY_BREAK
case 269:
/* rule 269 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1545 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AT_END;
}
	YY_BREAK
case 270:
/* rule 270 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1548 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AT_START;
}
	YY_BREAK
case 271:
/* rule 271 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1551 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::CASE_INSENSITIVE;
}
	YY_BREAK
case 272:
/* rule 272 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1554 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::CASE_SENSITIVE;
}
	YY_BREAK
case 273:
/* rule 273 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1557 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DECLARE_FTOPTION;
}
	YY_BREAK
case 274:
/* rule 274 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1560 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DIACRITICS_INSENSITIVE;
}
	YY_BREAK
case 275:
/* rule 275 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1563 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DIACRITICS_SENSITIVE;
}
	YY_BREAK
case 276:
/* rule 276 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1566 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DIFFERENT;
}
	YY_BREAK
case 277:
/* rule 277 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1569 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ENTIRE_CONTENT;
}
	YY_BREAK
case 278:
/* rule 278 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1572 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::LANGUAGE;
}
	YY_BREAK
case 279:
/* rule 279 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1575 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::LEVELS;
}
	YY_BREAK
case 280:
/* rule 280 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1578 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::LOWERCASE;
}
	YY_BREAK
case 281:
/* rule 281 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1581 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::PARAGRAPH;
}
	YY_BREAK
case 282:
/* rule 282 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1584 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::PHRASE;
}
	YY_BREAK
case 283:
/* rule 283 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 12;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1587 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::RELATIONSHIP;
}
	YY_BREAK
case 284:
/* rule 284 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1590 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SAME;
}
	YY_BREAK
case 285:
/* rule 285 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1593 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SCORE;
}
	YY_BREAK
case 286:
/* rule 286 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1596 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SENTENCE;
}
	YY_BREAK
case 287:
/* rule 287 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1599 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::SENTENCES;
}
	YY_BREAK
case 288:
/* rule 288 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1602 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::TIMES;
}
	YY_BREAK
case 289:
/* rule 289 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1605 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::UPPERCASE;
}
	YY_BREAK
case 290:
/* rule 290 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1608 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WEIGHT;
}
	YY_BREAK
case 291:
/* rule 291 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1611 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_CONTENT;
}
	YY_BREAK
case 292:
/* rule 292 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1614 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_DIACRITICS;
}
	YY_BREAK
case 293:
/* rule 293 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1617 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_STEMMING;
}
	YY_BREAK
case 294:
/* rule 294 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1620 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_STOP_WORDS;
}
	YY_BREAK
case 295:
/* rule 295 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1623 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_THESAURUS;
}
	YY_BREAK
case 296:
/* rule 296 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1626 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITHOUT_WILDCARDS;
}
	YY_BREAK
case 297:
/* rule 297 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1629 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_DEFAULT_STOP_WORDS;
}
	YY_BREAK
case 298:
/* rule 298 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1632 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_DIACRITICS;
}
	YY_BREAK
case 299:
/* rule 299 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1635 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_STEMMING;
}
	YY_BREAK
case 300:
/* rule 300 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1638 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_STOP_WORDS;
}
	YY_BREAK
case 301:
/* rule 301 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1641 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_THESAURUS;
}
	YY_BREAK
case 302:
/* rule 302 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1644 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WITH_WILDCARDS;
}
	YY_BREAK
case 303:
/* rule 303 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1647 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::WORDS;
}
	YY_BREAK
case 304:
YY_RULE_SETUP
#line 1650 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PRAGMA;
  return token::PRAGMA_BEGIN;
}
	YY_BREAK
case 305:
YY_RULE_SETUP
#line 1655 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 306:
/* rule 306 can match eol */
YY_RULE_SETUP
#line 1659 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_OPERATOR> */
/*______________________________________________________________________  
	|
	| XQUERY_VERSION State
	|
	| This state is for recognition of XQuery version specific keywords. 
	|______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 307:
YY_RULE_SETUP
#line 1678 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::SEMI;
}
	YY_BREAK
/* maintain XQUERYVERSION */
/* ---------------------- */
case 308:
/* rule 308 can match eol */
YY_RULE_SETUP
#line 1685 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 309:
/* rule 309 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1689 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ENCODING;
}
	YY_BREAK
/* <MODE_XQUERY_VERSION> */
/*______________________________________________________________________  
	|
	| NAMESPACEDECL State
	|
	| This state occurs inside of a namespace declaration, and is needed
	| to recognize a NCName that is to be used as the prefix, as opposed
	| to allowing a QName to occur. (Otherwise, the difference between
	| NCName and QName becomes ambiguous.)
	|______________________________________________________________________*/

case 310:
YY_RULE_SETUP
#line 1710 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
case 311:
YY_RULE_SETUP
#line 1714 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::SEMI;
}
	YY_BREAK
/* maintain NAMESPACEDECL */
/* ---------------------- */
case 312:
/* rule 312 can match eol */
YY_RULE_SETUP
#line 1721 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	TRY_URILIT (URI_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 313:
YY_RULE_SETUP
#line 1725 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::COMMA;
}
	YY_BREAK
case 314:
/* rule 314 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1729 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AT;
}
	YY_BREAK
case 315:
YY_RULE_SETUP
#line 1733 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::EQUALS;
}
	YY_BREAK
case 316:
YY_RULE_SETUP
#line 1737 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_ncname(yytext, yyleng);
	return token::NCNAME;
}
	YY_BREAK
case 317:
YY_RULE_SETUP
#line 1742 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 318:
/* rule 318 can match eol */
YY_RULE_SETUP
#line 1746 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_NAMESPACEDECL> */
/*______________________________________________________________________  
	 |
	 | URITOOPERATOR State
	 |
	 | This state is to recognize a URILiteral that transitions to the
	 | OPERATOR state.
	 |______________________________________________________________________*/
case 319:
/* rule 319 can match eol */
YY_RULE_SETUP
#line 1763 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	TRY_URILIT (URI_LITERAL, yytext, yyleng);
}
	YY_BREAK
/*______________________________________________________________________  
	 |
	 | NAMESPACEKEYWORD State
	 |
	 | This state occurs at places where the keyword "namespace" is
	 | expected, which would otherwise be ambiguous compared to a QName.
	 | QNames can not occur in this state.
	 |______________________________________________________________________*/

/* transition to NAMESPACEDECL */
/* --------------------------- */
case 320:
/* rule 320 can match eol */
YY_RULE_SETUP
#line 1784 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEDECL;
	TRY_URILIT (URI_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 321:
/* rule 321 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1789 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_NAMESPACEDECL;
	return token::NAMESPACE;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 322:
/* rule 322 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1796 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::INHERIT;
}
	YY_BREAK
case 323:
/* rule 323 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 10;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1801 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::NO_INHERIT;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 324:
YY_RULE_SETUP
#line 1808 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
/* maintain NAMESPACEKEYWORD */
/* ------------------------- */
case 325:
/* rule 325 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1815 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DEFAULT_ELEMENT;
}
	YY_BREAK
case 326:
/* rule 326 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1819 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::PRESERVE;
}
	YY_BREAK
case 327:
/* rule 327 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 11;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1823 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::NO_PRESERVE;
}
	YY_BREAK
case 328:
YY_RULE_SETUP
#line 1827 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::COMMA;
}
	YY_BREAK
case 329:
YY_RULE_SETUP
#line 1831 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 330:
/* rule 330 can match eol */
YY_RULE_SETUP
#line 1835 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_NAMESPACEKEYWORD> */
/*______________________________________________________________________  
	 |
	 | XMLSPACE_DECL State
	 |
	 | This state occurs at places where the keywords "preserve" and
	 | "strip" is expected to support "declare xmlspace". QNames cannot
	 | occur in this state.
	 |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 331:
/* rule 331 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1857 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::PRESERVE;
}
	YY_BREAK
case 332:
/* rule 332 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1862 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::STRIP;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 333:
YY_RULE_SETUP
#line 1869 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
case 334:
YY_RULE_SETUP
#line 1873 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 335:
/* rule 335 can match eol */
YY_RULE_SETUP
#line 1877 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_XMLSPACE_DECL> */
/*______________________________________________________________________  
	 |
	 | SINGLETYPE State 
	 |
	 | This state distinguishes tokens that can occur only inside the
	 | SingleType production.
	 |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 336:
YY_RULE_SETUP
#line 1898 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = driver.symtab.put_qname(yytext, yyleng);
	BEGIN MODE_OPERATOR;
	return token::QNAME;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 337:
YY_RULE_SETUP
#line 1906 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
case 338:
YY_RULE_SETUP
#line 1910 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 339:
/* rule 339 can match eol */
YY_RULE_SETUP
#line 1914 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_SINGLETYPE> */
/*______________________________________________________________________  
	 |
	 | ITEMTYPE State
	 |
	 | This state distinguishes tokens that can occur only inside the
	 | ItemType production.
	 |______________________________________________________________________*/

/* transition to VARNAME */
/* --------------------- */
case 340:
YY_RULE_SETUP
#line 1935 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_VARNAME;
	return token::DOLLAR;
}
	YY_BREAK
/* transition to OPERATOR */
/* ---------------------- */
case 341:
/* rule 341 can match eol */
YY_RULE_SETUP
#line 1942 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::VOID_TEST;
}
	YY_BREAK
case 342:
/* rule 342 can match eol */
YY_RULE_SETUP
#line 1947 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::VOID_TEST;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 343:
YY_RULE_SETUP
#line 1954 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
/* transition to KINDTEST */
/* ---------------------- */
case 344:
/* rule 344 can match eol */
YY_RULE_SETUP
#line 1960 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::ELEMENT_LPAR;
}
	YY_BREAK
case 345:
/* rule 345 can match eol */
YY_RULE_SETUP
#line 1966 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::ATTRIBUTE_LPAR;
}
	YY_BREAK
case 346:
/* rule 346 can match eol */
YY_RULE_SETUP
#line 1972 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::SCHEMA_ELEMENT_LPAR;
}
	YY_BREAK
case 347:
/* rule 347 can match eol */
YY_RULE_SETUP
#line 1978 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::SCHEMA_ATTRIBUTE_LPAR;
}
	YY_BREAK
case 348:
/* rule 348 can match eol */
YY_RULE_SETUP
#line 1984 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::COMMENT_LPAR;
}
	YY_BREAK
case 349:
/* rule 349 can match eol */
YY_RULE_SETUP
#line 1990 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::TEXT_LPAR;
}
	YY_BREAK
case 350:
/* rule 350 can match eol */
YY_RULE_SETUP
#line 1996 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::NODE_LPAR;
}
	YY_BREAK
case 351:
/* rule 351 can match eol */
YY_RULE_SETUP
#line 2002 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::DOCUMENT_NODE_LPAR;
}
	YY_BREAK
/* transition to KINDTESTFORPI */
/* --------------------------- */
case 352:
/* rule 352 can match eol */
YY_RULE_SETUP
#line 2010 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	yy_push_state( /*and goto*/ MODE_KINDTESTFORPI, yyscanner);
	return token::PI_LPAR;
}
	YY_BREAK
case 353:
/* rule 353 can match eol */
YY_RULE_SETUP
#line 2016 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{	
	BEGIN MODE_OCCURRENCE_INDICATOR;
	return token::ITEM_TEST;
}
	YY_BREAK
/* transition to PRAGMA */
/* -------------------- */
case 354:
YY_RULE_SETUP
#line 2023 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_PRAGMA;
	return token::PRAGMA_BEGIN;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 355:
YY_RULE_SETUP
#line 2030 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::SEMI;
}
	YY_BREAK
case 356:
/* rule 356 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2035 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::THEN;
}
	YY_BREAK
case 357:
/* rule 357 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2040 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::ELSE;
}
	YY_BREAK
/* transition to NAMESPACEDECL */
/* --------------------------- */
case 358:
/* rule 358 can match eol */
YY_RULE_SETUP
#line 2047 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  const char *p = yytext + 2;
  for (; *p != '\'' && *p != '"'; p++);
	BEGIN MODE_NAMESPACEDECL;
	TRY_URILIT (AT_URI_LITERAL, p, yyleng + (p - yytext));
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 359:
/* rule 359 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2056 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::EXTERNAL;
}
	YY_BREAK
case 360:
/* rule 360 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2061 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::AND;
}
	YY_BREAK
case 361:
/* rule 361 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2066 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::AT;
}
	YY_BREAK
case 362:
YY_RULE_SETUP
#line 2071 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::GETS;
}
	YY_BREAK
case 363:
YY_RULE_SETUP
#line 2076 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::COMMA;
}
	YY_BREAK
case 364:
/* rule 364 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2081 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::DIV;
}
	YY_BREAK
case 365:
YY_RULE_SETUP
#line 2086 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::EQUALS;
}
	YY_BREAK
case 366:
/* rule 366 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2091 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::EXCEPT;
}
	YY_BREAK
case 367:
/* rule 367 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2096 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_EQ;
}
	YY_BREAK
case 368:
/* rule 368 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2101 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_GE;
}
	YY_BREAK
case 369:
/* rule 369 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2106 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_GT;
}
	YY_BREAK
case 370:
/* rule 370 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2111 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_LE;
}
	YY_BREAK
case 371:
/* rule 371 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2116 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_LT;
}
	YY_BREAK
case 372:
/* rule 372 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2121 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VAL_NE;
}
	YY_BREAK
case 373:
YY_RULE_SETUP
#line 2126 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::GE;
}
	YY_BREAK
case 374:
YY_RULE_SETUP
#line 2131 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::FOLLOWS;
}
	YY_BREAK
case 375:
YY_RULE_SETUP
#line 2136 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::GT;
}
	YY_BREAK
case 376:
/* rule 376 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2141 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::IDIV;
}
	YY_BREAK
case 377:
/* rule 377 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2146 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::INTERSECT;
}
	YY_BREAK
case 378:
/* rule 378 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2151 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::_IN_;
}
	YY_BREAK
case 379:
/* rule 379 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2156 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::IS;
}
	YY_BREAK
case 380:
YY_RULE_SETUP
#line 2161 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::LBRACK;
}
	YY_BREAK
case 381:
YY_RULE_SETUP
#line 2166 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::LPAR;
}
	YY_BREAK
case 382:
YY_RULE_SETUP
#line 2171 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::LE;
}
	YY_BREAK
case 383:
YY_RULE_SETUP
#line 2176 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::PRECEDES;
}
	YY_BREAK
case 384:
YY_RULE_SETUP
#line 2181 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::LT;
}
	YY_BREAK
case 385:
YY_RULE_SETUP
#line 2186 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::MINUS;
}
	YY_BREAK
case 386:
/* rule 386 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2191 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::MOD;
}
	YY_BREAK
case 387:
YY_RULE_SETUP
#line 2196 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::NE;
}
	YY_BREAK
case 388:
/* rule 388 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2201 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::ORDER_BY;
}
	YY_BREAK
case 389:
/* rule 389 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2206 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::STABLE_ORDER_BY;
}
	YY_BREAK
case 390:
/* rule 390 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2211 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::OR;
}
	YY_BREAK
case 391:
/* rule 391 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2216 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::RETURN;
}
	YY_BREAK
case 392:
/* rule 392 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2221 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::SATISFIES;
}
	YY_BREAK
case 393:
/* rule 393 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2226 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::TO;
}
	YY_BREAK
case 394:
/* rule 394 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2231 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::UNION;
}
	YY_BREAK
case 395:
YY_RULE_SETUP
#line 2236 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::VBAR;
}
	YY_BREAK
case 396:
/* rule 396 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2241 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN INITIAL;
	return token::WHERE;
}
	YY_BREAK
/* transition to SINGLETYPE */
/* ------------------------ */
case 397:
/* rule 397 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2248 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_SINGLETYPE;
	return token::CASTABLE_AS;
}
	YY_BREAK
case 398:
/* rule 398 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2253 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_SINGLETYPE;
	return token::CAST_AS;
}
	YY_BREAK
/* maintain ITEMTYPE */
/* ----------------- */
case 399:
/* rule 399 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2260 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::INSTANCE_OF;
}
	YY_BREAK
case 400:
/* rule 400 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2264 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::TREAT_AS;
}
	YY_BREAK
case 401:
/* rule 401 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2268 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::CASE;
}
	YY_BREAK
case 402:
/* rule 402 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2272 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::AS;
}
	YY_BREAK
case 403:
/* rule 403 can match eol */
*yy_cp = yyg->yy_hold_char; /* undo effects of setting up yytext */
yyg->yy_c_buf_p = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2276 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::RPAR_AS;
}
	YY_BREAK
case 404:
YY_RULE_SETUP
#line 2280 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = driver.symtab.put_qname(yytext, yyleng);
	BEGIN MODE_OCCURRENCE_INDICATOR; 
	return token::QNAME;
}
	YY_BREAK
case 405:
YY_RULE_SETUP
#line 2286 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 406:
/* rule 406 can match eol */
YY_RULE_SETUP
#line 2290 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_ITEMTYPE> */
/*______________________________________________________________________  
	 |
	 | KINDTEST State
	 |
	 | This state is for the psuedo-parameters for the KindTest productions
	 |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 407:
YY_RULE_SETUP
#line 2310 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::LBRACE;
}
	YY_BREAK
/* transition to CLOSE_KINDTEST */
/* --------------------------- */
case 408:
YY_RULE_SETUP
#line 2318 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_CLOSE_KINDTEST;
	return token::STAR;
}
	YY_BREAK
case 409:
YY_RULE_SETUP
#line 2323 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = driver.symtab.put_qname(yytext, yyleng);
	BEGIN MODE_CLOSE_KINDTEST;
	return token::QNAME;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 410:
YY_RULE_SETUP
#line 2331 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
/* pop previous state on close paren */
/* --------------------------------- */
case 411:
YY_RULE_SETUP
#line 2337 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
	return token::RPAR;
}
	YY_BREAK
/* maintain KINDTEST */
/* ----------------- */
case 412:
/* rule 412 can match eol */
YY_RULE_SETUP
#line 2344 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_KINDTEST;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::ELEMENT_LPAR;
}
	YY_BREAK
case 413:
/* rule 413 can match eol */
YY_RULE_SETUP
#line 2350 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_KINDTEST;
	yy_push_state( /*and goto*/ MODE_KINDTEST, yyscanner);
	return token::SCHEMA_ELEMENT_LPAR;
}
	YY_BREAK
/* catch-all */
/* --------- */
case 414:
YY_RULE_SETUP
#line 2358 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 415:
/* rule 415 can match eol */
YY_RULE_SETUP
#line 2362 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_KINDTEST> */
/*______________________________________________________________________  
	 |
	 | KINDTESTFORPI
	 |
	 | This state is similar to KINDTEST, but recognizes NCNames instead of
	 | QNames.
	 |______________________________________________________________________*/

/* pop previous state on close paren */
/* --------------------------------- */
case 416:
YY_RULE_SETUP
#line 2382 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
	return token::RPAR;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 417:
YY_RULE_SETUP
#line 2390 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
/* maintain KINDTESTFORPI */
/* ---------------------- */
case 418:
YY_RULE_SETUP
#line 2396 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_ncname(yytext, yyleng);
	return token::NCNAME;
}
	YY_BREAK
case 419:
/* rule 419 can match eol */
YY_RULE_SETUP
#line 2401 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 420:
YY_RULE_SETUP
#line 2405 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 421:
/* rule 421 can match eol */
YY_RULE_SETUP
#line 2409 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_KINDTESTFORPI> */
/*______________________________________________________________________  
	 |
	 | CLOSE_KINDTEST State
	 |
	 | This state is expecting to close a KINDTEST sequence.
	 |______________________________________________________________________*/ 

/* pop previous state */
/* ------------------ */
case 422:
YY_RULE_SETUP
#line 2429 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
	return token::RPAR;
}
	YY_BREAK
/* transition to KINDTEST */
/* ---------------------- */
case 423:
YY_RULE_SETUP
#line 2436 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_KINDTEST;
	return token::COMMA;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 424:
YY_RULE_SETUP
#line 2443 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::LBRACE;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 425:
YY_RULE_SETUP
#line 2451 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
/* maintain CLOSE_KINDTEST */
/* ---------------------- */
case 426:
YY_RULE_SETUP
#line 2457 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::HOOK;
}
	YY_BREAK
case 427:
YY_RULE_SETUP
#line 2461 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 428:
/* rule 428 can match eol */
YY_RULE_SETUP
#line 2465 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_CLOSE_KINDTEST> */
/*______________________________________________________________________  
	 |
	 | OCCURRENCE_INDICATOR State
	 |
	 | This special state is needed to distinguish occurrence indicators
	 | that appear in the SequenceType production. For instance, compare
	 | "foo instance of baz*" to "baz*foo". In the first case, the "*" is
	 | interpreted as an occurrence indicator, and in the second case, it
	 | must be interpreted as a multiplication operator. But, when in the
	 | OCCURRENCEINDICATOR state, if anything else other than "?", "*",
	 | "+", those symbols must be interpreted in the OPERATOR state. For
	 | instance, this would occur with the expression "foo instance of baz
	 | and $x", with the operator "and".
	 |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 429:
YY_RULE_SETUP
#line 2493 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::OCCURS_HOOK;
}
	YY_BREAK
case 430:
YY_RULE_SETUP
#line 2498 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::OCCURS_STAR;
}
	YY_BREAK
case 431:
YY_RULE_SETUP
#line 2503 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	return token::OCCURS_PLUS;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 432:
YY_RULE_SETUP
#line 2510 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
/* anything else: push back, goto OPERATOR */
/* --------------------------------------- */
case 433:
YY_RULE_SETUP
#line 2516 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yyless(0);
	BEGIN MODE_OPERATOR;
}
	YY_BREAK
case 434:
/* rule 434 can match eol */
YY_RULE_SETUP
#line 2521 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* MODE_OCCURRENCE_INDICATOR> */
/*______________________________________________________________________  
	 |
	 | OPTION State
	 |
	 | This state is entered in the prolog for an option declaration, and
	 | recognizes a QName that transits to a INITIAL state rather than a
	 | OPERATOR state.
	 |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 435:
YY_RULE_SETUP
#line 2543 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = driver.symtab.put_qname(yytext, yyleng);
	BEGIN INITIAL;
	return token::QNAME;
}
	YY_BREAK
case 436:
YY_RULE_SETUP
#line 2549 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 437:
/* rule 437 can match eol */
YY_RULE_SETUP
#line 2553 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_OPTION> */
/*______________________________________________________________________  
	 |
	 | PRAGMA State
	 |
	 | This state is entered in a a pragma expression, and recognizes
	 | a QName that transits to a PRAGMACONTENTS state rather than an
	 | OPERATOR state.
	 |______________________________________________________________________*/

/* transition to PRAGMACONTENTS */
/* ---------------------------- */
case 438:
/* rule 438 can match eol */
YY_RULE_SETUP
#line 2575 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = driver.symtab.put_qname(yytext, yyleng,true,true);
	BEGIN MODE_PRAGMACONTENTS;
	return token::QNAME;
}
	YY_BREAK
case 439:
YY_RULE_SETUP
#line 2581 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
	yylval->sval = driver.symtab.put(yytext, yyleng-2);
	return token::QNAME_AND_END_PRAGMA;
}
	YY_BREAK
case 440:
/* rule 440 can match eol */
YY_RULE_SETUP
#line 2587 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
case 441:
YY_RULE_SETUP
#line 2591 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* <MODE_PRAGMA> */
/*______________________________________________________________________  
	 |
	 | PRAGMACONTENTS State
	 |
	 | This state recognizes characters in pragma content and transitions
	 | out of this state when a '#)' pattern is recognized.
	 |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 442:
/* rule 442 can match eol */
YY_RULE_SETUP
#line 2612 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_OPERATOR;
	yylval->sval = driver.symtab.put(yytext, yyleng-2);
	return token::PRAGMA_LITERAL_AND_END;
}
	YY_BREAK
case 443:
YY_RULE_SETUP
#line 2618 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* <MODE_PRAGMACONTENTS> */
/*______________________________________________________________________  
	 |
	 | VARNAME State
	 |
	 | This state differentiates variable names from qualified names. This
	 | allows only the pattern of a QName to be recognized when otherwise
	 | ambiguities could occur.
	 |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 444:
YY_RULE_SETUP
#line 2640 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_varname(yytext, yyleng);
	BEGIN MODE_OPERATOR;
	return token::VARNAME;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 445:
YY_RULE_SETUP
#line 2648 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
case 446:
YY_RULE_SETUP
#line 2652 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 447:
/* rule 447 can match eol */
YY_RULE_SETUP
#line 2656 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_VARNAME> */
/*______________________________________________________________________  
	 |
	 | START_TAG State
	 |
	 | This state allows attributes in the native XML syntax, and marks the
	 | beginning of an element construction. Element constructors also push
	 | the current state, popping it at the conclusion of an end tag. In
	 | the START_TAG state, the string ">" is recognized as a token which
	 | is associated with the transition to the original state.
	 |______________________________________________________________________*/

/* transition to ELEMENT_CONTENT */
/* ----------------------------- */
case 448:
YY_RULE_SETUP
#line 2680 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_ELEMENT_CONTENT;
	return token::TAG_END;
}
	YY_BREAK
/* transition to QUOT_ATTRIBUTE_CONTENT */
/* ------------------------------------ */
case 449:
YY_RULE_SETUP
#line 2687 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_QUOTE_ATTRIBUTE_CONTENT;
	return token::QUOTE;
}
	YY_BREAK
/* transition to APOS_ATTRIBUTE_CONTENT */
/* ------------------------------------ */
case 450:
YY_RULE_SETUP
#line 2694 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_APOS_ATTRIBUTE_CONTENT;
	return token::APOS;
}
	YY_BREAK
/* transition to START_TAG */
/* ----------------------- */
case 451:
YY_RULE_SETUP
#line 2701 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_START_TAG;
	return token::EQUALS;
}
	YY_BREAK
/* pop previous state on exit */
/* -------------------------- */
case 452:
YY_RULE_SETUP
#line 2708 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
	return token::EMPTY_TAG_END;
}
	YY_BREAK
/* maintain START_TAG */
/* ------------------ */
case 453:
/* rule 453 can match eol */
YY_RULE_SETUP
#line 2715 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	/* continue lexing */
}
	YY_BREAK
case 454:
YY_RULE_SETUP
#line 2719 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = driver.symtab.put_qname(yytext, yyleng);
	return token::QNAME;
}
	YY_BREAK
case 455:
YY_RULE_SETUP
#line 2724 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* <MODE_START_TAG> */
/*______________________________________________________________________  
	 |
	 | ELEMENT_CONTENT State
	 |
	 | This state allows XML-like content, without these characters being
	 | misinterpreted as expressions. The character "{" marks a transition
	 | to the INITIAL state, i.e. the start of an embedded expression, and
	 | the "}" character pops back to the ELEMENT_CONTENT state. To allow
	 | curly braces to be used as character content, a double left or right
	 | curly brace is interpreted as a single curly brace character. The
	 | string "</" is interpreted as the beginning of an end tag, which is
	 | associated with a transition to the END_TAG state.
	 |______________________________________________________________________*/

/* transition to END_TAG */
/* --------------------- */
case 456:
YY_RULE_SETUP
#line 2751 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_END_TAG;
	return token::START_TAG_END;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 457:
YY_RULE_SETUP
#line 2758 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::LBRACE;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 458:
YY_RULE_SETUP
#line 2765 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_XML_COMMENT, yyscanner);
	return token::XML_COMMENT_BEGIN;
}
	YY_BREAK
/* transition to PROCESSING_INSTRUCTION */
/* ------------------------------------ */
case 459:
YY_RULE_SETUP
#line 2772 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_PROCESSING_INSTRUCTION, yyscanner);
	return token::PI_BEGIN;
}
	YY_BREAK
/* transition to CDATA_SECTION */
/* --------------------------- */
case 460:
YY_RULE_SETUP
#line 2779 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_CDATA_SECTION, yyscanner);
	return token::CDATA_BEGIN;
}
	YY_BREAK
/* transition to START_TAG */
/* ----------------------- */
case 461:
YY_RULE_SETUP
#line 2786 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_START_TAG, yyscanner);
	return token::START_TAG;
}
	YY_BREAK
/* maintain ELEMENT_CONTENT */
/* ------------------------ */
case 462:
/* rule 462 can match eol */
YY_RULE_SETUP
#line 2793 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put(yytext, yyleng);
	return token::ELEMENT_CONTENT;
}
	YY_BREAK
case 463:
YY_RULE_SETUP
#line 2798 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_entityref(yytext, yyleng);
	return token::ENTITY_REF;
}
	YY_BREAK
case 464:
YY_RULE_SETUP
#line 2803 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_charref(yytext, yyleng);
	return token::CHAR_REF_LITERAL;
}
	YY_BREAK
case 465:
YY_RULE_SETUP
#line 2808 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DOUBLE_LBRACE;
}
	YY_BREAK
case 466:
YY_RULE_SETUP
#line 2812 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DOUBLE_RBRACE;
}
	YY_BREAK
/* catch all else */
/* -------------- */
case 467:
YY_RULE_SETUP
#line 2818 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* MODE_ELEMENT_CONTENT> */
/*______________________________________________________________________  
	 |
	 | END_TAG State
	 |
	 | When the end tag is terminated, the state is popped to the state
	 | that was pushed at the start of the corresponding start tag.
	 |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 468:
YY_RULE_SETUP
#line 2839 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
	return token::TAG_END;
}
	YY_BREAK
/* maintain END_TAG */
/* ---------------- */
case 469:
/* rule 469 can match eol */
YY_RULE_SETUP
#line 2846 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
   yylval->sval = driver.symtab.put_qname(yytext, yyleng, false, true);
	return token::QNAME;
}
	YY_BREAK
/* catch all else */
/* -------------- */
case 470:
YY_RULE_SETUP
#line 2853 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* <MODE_END_TAG> */
/*______________________________________________________________________  
	 |
	 | XML_COMMENT State
	 | The "<--" token marks the beginning of an XML Comment, and the "-->"
	 | token marks the end. This allows no special interpretation of other
	 | characters in this state.
	 |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 471:
YY_RULE_SETUP
#line 2874 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
	return token::XML_COMMENT_END;
}
	YY_BREAK
/* maintain XML_COMMENT */
/* -------------------- */
case 472:
/* rule 472 can match eol */
YY_RULE_SETUP
#line 2881 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put(yytext, yyleng);
	return token::XML_COMMENT_LITERAL;
}
	YY_BREAK
case 473:
YY_RULE_SETUP
#line 2886 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
   return token::UNRECOGNIZED;
 }
	YY_BREAK
/* <MODE_XML_COMMENT> */
/*______________________________________________________________________  
	 |
	 | EXPR_COMMENT State
	 |
	 | The "(:" token marks the beginning of an expression Comment, and
	 | the ":)" token marks the end. This allows no special interpretation
	 | of other characters in this state.
	 |______________________________________________________________________*/

/* pop previous state */
/* ------------------ */
case 474:
YY_RULE_SETUP
#line 2907 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
}
	YY_BREAK
/* maintain EXPR_COMMENT */
/* --------------------- */
case 475:
YY_RULE_SETUP
#line 2913 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ MODE_EXPR_COMMENT, yyscanner);
}
	YY_BREAK
case 476:
YY_RULE_SETUP
#line 2917 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	/* do nothing */
}
	YY_BREAK
/* <MODE_EXPR_COMMENT> */
/*______________________________________________________________________  
	 |
	 | PROCESSING_INSTRUCTION State
	 |
	 | In this state, only patterns that are legal in a processing
	 | instruction name are recognized.
	 |______________________________________________________________________*/

/* transition to PROCESSING_INSTRUCTION_CONTENT */
/* -------------------------------------------- */
case 477:
/* rule 477 can match eol */
YY_RULE_SETUP
#line 2938 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_PROCESSING_INSTRUCTION_CONTENT; 
	/* continue lexing */
}
	YY_BREAK
/* pop previous state on exit */
/* -------------------------- */
case 478:
YY_RULE_SETUP
#line 2945 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
	return token::PI_END;
}
	YY_BREAK
/* maintain PROCESSING_INSTRUCTION */
/* ------------------------------- */
case 479:
YY_RULE_SETUP
#line 2952 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put(yytext, yyleng);
	BEGIN MODE_PROCESSING_INSTRUCTION;
	return token::PI_TARGET_LITERAL;
}
	YY_BREAK
/* <MODE_PROCESSING_INSTRUCTION> */
/*______________________________________________________________________  
	 |
	 | PROCESSING_INSTRUCTION_CONTENT State
	 |
	 | In this state, only characters are that are legal in processing
	 | instruction content are recognized.
	 |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 480:
/* rule 480 can match eol */
YY_RULE_SETUP
#line 2975 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
  yylval->sval = driver.symtab.put(yytext, yyleng-2);
  return token::CHAR_LITERAL_AND_PI_END;
}
	YY_BREAK
/* <MODE_PROCESSING_INSTRUCTION_CONTENT> */
/*______________________________________________________________________  
	 |
	 | CDATA_SECTION State
	 |
	 | In this state, only lexemes that are legal in a CDATA section are
	 | recognized.
	 |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 481:
YY_RULE_SETUP
#line 2998 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_pop_state(yyscanner);
  yylval->sval = driver.symtab.put(yytext, yyleng-3);
  return token::CHAR_LITERAL_AND_CDATA_END;
}
	YY_BREAK
/* maintain CDATA_SECTION */
/* ---------------------- */
case 482:
/* rule 482 can match eol */
YY_RULE_SETUP
#line 3006 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
  yymore();
}
	YY_BREAK
/* <MODE_CDATA_SECTION> */
/*______________________________________________________________________  
	 |
	 | QUOTE_ATTRIBUTE_CONTENT State
	 |
	 | This state allows content legal for attributes. The character "{"
	 | marks a transition to the INITIAL state, i.e. the start of an
	 | embedded expression, and the "}" character pops back to the original
	 | state.  To allow curly braces to be used as character content, a
	 | double left or right curly brace is interpreted as a single curly
	 | brace character. This state is the same as APOS_ATTRIBUTE_CONTENT,
	 | except that apostrophes are allowed without escaping, and an
	 | unescaped quote marks the end of the state.
	 |______________________________________________________________________*/

/* transition to START_TAG */
/* ----------------------- */
case 483:
YY_RULE_SETUP
#line 3033 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_START_TAG;
	return token::QUOTE;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 484:
YY_RULE_SETUP
#line 3040 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::LBRACE;
}
	YY_BREAK
/* maintain QUOTE_ATTRIBUTE_CONTENT */
/* -------------------------------- */
case 485:
YY_RULE_SETUP
#line 3047 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ESCAPE_QUOTE;
}
	YY_BREAK
case 486:
/* rule 486 can match eol */
YY_RULE_SETUP
#line 3051 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put(yytext, yyleng);
	return token::QUOTE_ATTR_CONTENT;
}
	YY_BREAK
case 487:
YY_RULE_SETUP
#line 3056 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ENTITY_REF;
}
	YY_BREAK
case 488:
YY_RULE_SETUP
#line 3060 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_charref(yytext, yyleng);
	return token::CHAR_REF_LITERAL;
}
	YY_BREAK
case 489:
YY_RULE_SETUP
#line 3065 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DOUBLE_LBRACE;
}
	YY_BREAK
case 490:
YY_RULE_SETUP
#line 3069 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DOUBLE_RBRACE;
}
	YY_BREAK
/* <MODE_QUOTE_ATTRIBUTE_CONTENT> */
/*______________________________________________________________________  
	 |
	 | APOS_ATTRIBUTE_CONTENT State
	 |
	 | This state is the same as QUOT_ATTRIBUTE_CONTENT, except that
	 | quotes are allowed, and an unescaped apostrophe marks the end of
	 | the state.
	 |______________________________________________________________________*/

/* transition to START_TAG */
/* ----------------------- */
case 491:
YY_RULE_SETUP
#line 3091 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_START_TAG;
	return token::APOS;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 492:
YY_RULE_SETUP
#line 3098 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	BEGIN MODE_APOS_ATTRIBUTE_CONTENT;
	yy_push_state( /*and goto*/ INITIAL, yyscanner);
	return token::LBRACE;
}
	YY_BREAK
/* maintain APOS_ATTRIBUTE_CONTENT */
/* ------------------------------- */
case 493:
YY_RULE_SETUP
#line 3106 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ESCAPE_APOS;
}
	YY_BREAK
case 494:
/* rule 494 can match eol */
YY_RULE_SETUP
#line 3110 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put(yytext, yyleng);
	return token::APOS_ATTR_CONTENT;
}
	YY_BREAK
case 495:
YY_RULE_SETUP
#line 3115 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::ENTITY_REF;
}
	YY_BREAK
case 496:
YY_RULE_SETUP
#line 3119 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	yylval->sval = driver.symtab.put_charref(yytext, yyleng);
	return token::CHAR_REF_LITERAL;
}
	YY_BREAK
case 497:
YY_RULE_SETUP
#line 3124 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DOUBLE_LBRACE;
}
	YY_BREAK
case 498:
YY_RULE_SETUP
#line 3128 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
{
	return token::DOUBLE_RBRACE;
}
	YY_BREAK
/* <MODE_APOS_ATTRIBUTE_CONTENT> */
case 499:
YY_RULE_SETUP
#line 3135 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
return token::UNRECOGNIZED;
	YY_BREAK
case 500:
YY_RULE_SETUP
#line 3137 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"
ECHO;
	YY_BREAK
#line 13561 "xquery_scanner.yy.cpp"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(MODE_APOS_ATTRIBUTE_CONTENT):
case YY_STATE_EOF(MODE_CDATA_SECTION):
case YY_STATE_EOF(MODE_CLOSE_KINDTEST):
case YY_STATE_EOF(MODE_DECLAREORDERING):
case YY_STATE_EOF(MODE_ELEMENT_CONTENT):
case YY_STATE_EOF(MODE_END_TAG):
case YY_STATE_EOF(MODE_EXPR_COMMENT):
case YY_STATE_EOF(MODE_ITEMTYPE):
case YY_STATE_EOF(MODE_KINDTEST):
case YY_STATE_EOF(MODE_KINDTESTFORPI):
case YY_STATE_EOF(MODE_NAMESPACEDECL):
case YY_STATE_EOF(MODE_NAMESPACEKEYWORD):
case YY_STATE_EOF(MODE_OCCURRENCE_INDICATOR):
case YY_STATE_EOF(MODE_OPERATOR):
case YY_STATE_EOF(MODE_OPTION):
case YY_STATE_EOF(MODE_PRAGMA):
case YY_STATE_EOF(MODE_PRAGMACONTENTS):
case YY_STATE_EOF(MODE_PROCESSING_INSTRUCTION_CTOR):
case YY_STATE_EOF(MODE_PROCESSING_INSTRUCTION):
case YY_STATE_EOF(MODE_PROCESSING_INSTRUCTION_CONTENT):
case YY_STATE_EOF(MODE_QUOTE_ATTRIBUTE_CONTENT):
case YY_STATE_EOF(MODE_SINGLETYPE):
case YY_STATE_EOF(MODE_START_TAG):
case YY_STATE_EOF(MODE_URITOOPERATOR):
case YY_STATE_EOF(MODE_VARNAME):
case YY_STATE_EOF(MODE_XMLSPACE_DECL):
case YY_STATE_EOF(MODE_XML_COMMENT):
case YY_STATE_EOF(MODE_XQUERY_VERSION):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yyg->yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yyg->yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yyg->yy_c_buf_p = yyg->yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state( yyscanner );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state , yyscanner);

			yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yyg->yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = yyg->yy_last_accepting_cpos;
				yy_current_state = yyg->yy_last_accepting_state;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer( yyscanner ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yyg->yy_did_buffer_switch_on_eof = 0;

				if ( yywrap(yyscanner ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yyg->yy_c_buf_p = yyg->yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yyg->yy_c_buf_p =
					yyg->yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yyg->yy_c_buf_p =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars];

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of yylex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
static int yy_get_next_buffer (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = yyg->yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yyg->yy_c_buf_p - yyg->yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) (yyg->yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2 ,yyscanner );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yyg->yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			yyg->yy_n_chars, (size_t) num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	if ( yyg->yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart(yyin  ,yyscanner);
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yyg->yy_n_chars += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yyg->yytext_ptr = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = yyg->yy_start;

	for ( yy_cp = yyg->yytext_ptr + YY_MORE_ADJ; yy_cp < yyg->yy_c_buf_p; ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yyg->yy_last_accepting_state = yy_current_state;
			yyg->yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 3664 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	register int yy_is_jam;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner; /* This var may be unused depending upon options. */
/* %% [17.0] code to find the next state, and perhaps do backing up, goes here */
	register char *yy_cp = yyg->yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yyg->yy_last_accepting_state = yy_current_state;
		yyg->yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 3664 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 3663);

	return yy_is_jam ? 0 : yy_current_state;
}

/* %if-c-only */

    static void yyunput (int c, register char * yy_bp , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	register char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    yy_cp = yyg->yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yyg->yy_hold_char;

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yyg->yy_n_chars + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

    if ( c == '\n' ){
        --yylineno;
    }

	yyg->yytext_ptr = yy_bp;
	yyg->yy_hold_char = *yy_cp;
	yyg->yy_c_buf_p = yy_cp;
}
/* %if-c-only */

/* %endif */

/* %if-c-only */
#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (yyscan_t yyscanner)
#else
    static int input  (yyscan_t yyscanner)
#endif

/* %endif */
/* %if-c++-only */
/* %endif */
{
	int c;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	*yyg->yy_c_buf_p = yyg->yy_hold_char;

	if ( *yyg->yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yyg->yy_c_buf_p < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			/* This was really a NUL. */
			*yyg->yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yyg->yy_c_buf_p - yyg->yytext_ptr;
			++yyg->yy_c_buf_p;

			switch ( yy_get_next_buffer( yyscanner ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart(yyin ,yyscanner);

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(yyscanner ) )
						return EOF;

					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput(yyscanner);
#else
					return input(yyscanner);
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yyg->yy_c_buf_p = yyg->yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yyg->yy_c_buf_p;	/* cast for 8-bit char's */
	*yyg->yy_c_buf_p = '\0';	/* preserve yytext */
	yyg->yy_hold_char = *++yyg->yy_c_buf_p;

/* %% [19.0] update BOL and yylineno */
	if ( c == '\n' )
		   
    do{ yylineno++;
        yycolumn=0;
    }while(0)
;

	return c;
}
/* %if-c-only */
#endif	/* ifndef YY_NO_INPUT */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * @param yyscanner The scanner object.
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
    void yyrestart  (FILE * input_file , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack (yyscanner);
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer(yyin,YY_BUF_SIZE ,yyscanner);
	}

	yy_init_buffer(YY_CURRENT_BUFFER,input_file ,yyscanner);
	yy_load_buffer_state(yyscanner );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * @param yyscanner The scanner object.
 */
/* %if-c-only */
    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack (yyscanner);
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(yyscanner );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yyg->yy_did_buffer_switch_on_eof = 1;
}

/* %if-c-only */
static void yy_load_buffer_state  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	yyg->yytext_ptr = yyg->yy_c_buf_p = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	yyg->yy_hold_char = *yyg->yy_c_buf_p;
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * @param yyscanner The scanner object.
 * @return the allocated buffer state.
 */
/* %if-c-only */
    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2 ,yyscanner );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer(b,file ,yyscanner);

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * @param yyscanner The scanner object.
 */
/* %if-c-only */
    void yy_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree((void *) b->yy_ch_buf ,yyscanner );

	yyfree((void *) b ,yyscanner );
}

/* %if-c-only */

#ifndef __cplusplus
extern int isatty (int );
#endif /* __cplusplus */
    
/* %endif */

/* %if-c++-only */
/* %endif */

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
/* %if-c-only */
    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */

{
	int oerrno = errno;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	yy_flush_buffer(b ,yyscanner);

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */

        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
    
/* %endif */
/* %if-c++-only */
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * @param yyscanner The scanner object.
 */
/* %if-c-only */
    void yy_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(yyscanner );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  @param yyscanner The scanner object.
 */
/* %if-c-only */
void yypush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack(yyscanner);

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		yyg->yy_buffer_stack_top++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(yyscanner );
	yyg->yy_did_buffer_switch_on_eof = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  @param yyscanner The scanner object.
 */
/* %if-c-only */
void yypop_buffer_state (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER ,yyscanner);
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if (yyg->yy_buffer_stack_top > 0)
		--yyg->yy_buffer_stack_top;

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(yyscanner );
		yyg->yy_did_buffer_switch_on_eof = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
static void yyensure_buffer_stack (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
	int num_to_alloc;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if (!yyg->yy_buffer_stack) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		
		memset(yyg->yy_buffer_stack, 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		yyg->yy_buffer_stack_max = num_to_alloc;
		yyg->yy_buffer_stack_top = 0;
		return;
	}

	if (yyg->yy_buffer_stack_top >= (yyg->yy_buffer_stack_max) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = yyg->yy_buffer_stack_max + grow_size;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)yyrealloc
								(yyg->yy_buffer_stack,
								num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);

		/* zero only the new slots.*/
		memset(yyg->yy_buffer_stack + yyg->yy_buffer_stack_max, 0, grow_size * sizeof(struct yy_buffer_state*));
		yyg->yy_buffer_stack_max = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object. 
 */
YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state ) ,yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer(b ,yyscanner );

	return b;
}
/* %endif */

/* %if-c-only */
/** Setup the input buffer state to scan a string. The next call to yylex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       yy_scan_bytes() instead.
 */
YY_BUFFER_STATE yy_scan_string (yyconst char * yystr , yyscan_t yyscanner)
{
    
	return yy_scan_bytes(yystr,strlen(yystr) ,yyscanner);
}
/* %endif */

/* %if-c-only */
/** Setup the input buffer state to scan the given bytes. The next call to yylex() will
 * scan from a @e copy of @a bytes.
 * @param bytes the byte buffer to scan
 * @param len the number of bytes in the buffer pointed to by @a bytes.
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = _yybytes_len + 2;
	buf = (char *) yyalloc(n ,yyscanner );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer(buf,n ,yyscanner);
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}
/* %endif */

/* %if-c-only */
    static void yy_push_state (int  new_state , yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( yyg->yy_start_stack_ptr >= yyg->yy_start_stack_depth )
		{
		yy_size_t new_size;

		yyg->yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yyg->yy_start_stack_depth * sizeof( int );

		if ( ! yyg->yy_start_stack )
			yyg->yy_start_stack = (int *) yyalloc(new_size ,yyscanner );

		else
			yyg->yy_start_stack = (int *) yyrealloc((void *) yyg->yy_start_stack,new_size ,yyscanner );

		if ( ! yyg->yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yyg->yy_start_stack[yyg->yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
}

/* %if-c-only */
    static void yy_pop_state  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( --yyg->yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yyg->yy_start_stack[yyg->yy_start_stack_ptr]);
}

/* %if-c-only */
    static int yy_top_state  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	return yyg->yy_start_stack[yyg->yy_start_stack_ptr - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
static void yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)
{
    	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}
/* %endif */
/* %if-c++-only */
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = yyg->yy_hold_char; \
		yyg->yy_c_buf_p = yytext + yyless_macro_arg; \
		yyg->yy_hold_char = *yyg->yy_c_buf_p; \
		*yyg->yy_c_buf_p = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */

/** Get the user-defined data for this scanner.
 * @param yyscanner The scanner object.
 */
YY_EXTRA_TYPE yyget_extra  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyextra;
}

/* %endif */

/** Get the current line number.
 * @param yyscanner The scanner object.
 */
int yyget_lineno  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    
        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yylineno;
}

/** Get the current column number.
 * @param yyscanner The scanner object.
 */
int yyget_column  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    
        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yycolumn;
}

/** Get the input stream.
 * @param yyscanner The scanner object.
 */
FILE *yyget_in  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyin;
}

/** Get the output stream.
 * @param yyscanner The scanner object.
 */
FILE *yyget_out  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyout;
}

/** Get the length of the current token.
 * @param yyscanner The scanner object.
 */
int yyget_leng  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyleng;
}

/** Get the current token.
 * @param yyscanner The scanner object.
 */

char *yyget_text  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yytext;
}

/* %if-reentrant */

/** Set the user-defined data. This data is never touched by the scanner.
 * @param user_defined The data to be associated with this scanner.
 * @param yyscanner The scanner object.
 */
void yyset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyextra = user_defined ;
}

/* %endif */

/** Set the current line number.
 * @param line_number
 * @param yyscanner The scanner object.
 */
void yyset_lineno (int  line_number , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* lineno is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           yy_fatal_error( "yyset_lineno called with no buffer" , yyscanner); 
    
    yylineno = line_number;
}

/** Set the current column.
 * @param line_number
 * @param yyscanner The scanner object.
 */
void yyset_column (int  column_no , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* column is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           yy_fatal_error( "yyset_column called with no buffer" , yyscanner); 
    
    yycolumn = column_no;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param in_str A readable stream.
 * @param yyscanner The scanner object.
 * @see yy_switch_to_buffer
 */
void yyset_in (FILE *  in_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyin = in_str ;
}

void yyset_out (FILE *  out_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyout = out_str ;
}

int yyget_debug  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yy_flex_debug;
}

void yyset_debug (int  bdebug , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yy_flex_debug = bdebug ;
}

/* %endif */

/* %if-reentrant */
/* Accessor methods for yylval and yylloc */

/* %if-bison-bridge */
/* %endif */

/* User-visible API */

/* yylex_init is special because it creates the scanner itself, so it is
 * the ONLY reentrant function that doesn't take the scanner as the last argument.
 * That's why we explicitly handle the declaration, instead of using our macros.
 */

int yylex_init(yyscan_t* ptr_yy_globals)

{
    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) yyalloc ( sizeof( struct yyguts_t ), NULL );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    return yy_init_globals ( *ptr_yy_globals );
}

/* %endif */

/* %if-c-only */
static int yy_init_globals (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from yylex_destroy(), so don't allocate here.
     */

    yyg->yy_buffer_stack = 0;
    yyg->yy_buffer_stack_top = 0;
    yyg->yy_buffer_stack_max = 0;
    yyg->yy_c_buf_p = (char *) 0;
    yyg->yy_init = 0;
    yyg->yy_start = 0;

    yyg->yy_start_stack_ptr = 0;
    yyg->yy_start_stack_depth = 0;
    yyg->yy_start_stack =  NULL;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = (FILE *) 0;
    yyout = (FILE *) 0;
#endif

    /* For future reference: Set errno on error, since we are called by
     * yylex_init()
     */
    return 0;
}
/* %endif */

/* %if-c-or-c++ */
/* %if-c-only */
/* yylex_destroy is for both reentrant and non-reentrant scanners. */
int yylex_destroy  (yyscan_t yyscanner)
/* %endif */
/* %if-c++-only */
/* %endif */
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		yy_delete_buffer(YY_CURRENT_BUFFER ,yyscanner );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		yypop_buffer_state(yyscanner);
	}

	/* Destroy the stack itself. */
	yyfree(yyg->yy_buffer_stack ,yyscanner);
	yyg->yy_buffer_stack = NULL;

    /* Destroy the start condition stack. */
        yyfree(yyg->yy_start_stack ,yyscanner );
        yyg->yy_start_stack = NULL;

/* %if-c++-only */
/* %endif */

/* %if-c-only */

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * yylex() is called, initialization will occur. */
    yy_init_globals( yyscanner);

/* %if-reentrant */
    /* Destroy the main struct (reentrant only). */
    yyfree ( yyscanner , yyscanner );
    yyscanner = NULL;
/* %endif */
    return 0;
/* %endif */
}
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n , yyscan_t yyscanner)
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s , yyscan_t yyscanner)
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size , yyscan_t yyscanner)
{
	return (void *) malloc( size );
}

void *yyrealloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void yyfree (void * ptr , yyscan_t yyscanner)
{
	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 3137 "/usr/local/src/zorba/src/compiler/parser/xquery_scanner.l"




/*
	Finally, because the scanner related driver's member function depend 
	on the scanner's data, it is simpler to implement them in this file. 
*/
namespace xqp {
  
void xquery_driver::parse_string( const char *query_string)
{  
  yyscan_t scanner;
  yylex_init(&scanner);
  struct yyguts_t * yyg = (struct yyguts_t*)scanner;

  YY_BUFFER_STATE str_buffer = yy_scan_string(query_string,scanner);

  yy_flex_debug = Properties::instance()->traceScanning();
  yy::xquery_parser parser(*this, scanner);
  parser.set_debug_level(Properties::instance()->traceParsing());
  parser.parse();

  yy_delete_buffer(str_buffer,scanner); /* free up memory */
  yylex_destroy(scanner);
}

void xquery_driver::parse(xqp_string const fname)
{    
  yyscan_t scanner;
  yylex_init(&scanner);
  struct yyguts_t * yyg = (struct yyguts_t*)scanner;
  
  filename = fname;
  
  if (!(yyin = fopen(((std::string)fname).c_str (), "r"))) {
    error (std::string("cannot open ") + (std::string)fname);
  }

  yy_flex_debug = Properties::instance()->traceScanning();
  yy::xquery_parser parser(*this, scanner);
  parser.set_debug_level(Properties::instance()->traceParsing());
  parser.parse();
  
  fclose(yyin);  
  yylex_destroy(&scanner);
}

}


std::string start_state(yyscan_t* yyscanner)
{  
  struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
  
	switch (YY_START) {
	case INITIAL: return "INITIAL";
	case MODE_APOS_ATTRIBUTE_CONTENT: return "MODE_APOS_ATTRIBUTE_CONTENT";
	case MODE_CDATA_SECTION: return "MODE_CDATA_SECTION";
	case MODE_CLOSE_KINDTEST: return "MODE_CLOSE_KINDTEST";
	case MODE_DECLAREORDERING: return "MODE_DECLAREORDERING";
	case MODE_ELEMENT_CONTENT: return "MODE_ELEMENT_CONTENT";
	case MODE_END_TAG: return "MODE_END_TAG";
	case MODE_EXPR_COMMENT: return "MODE_EXPR_COMMENT";
	case MODE_ITEMTYPE: return "MODE_ITEMTYPE";
	case MODE_KINDTEST: return "MODE_KINDTEST";
	case MODE_KINDTESTFORPI: return "MODE_KINDTESTFORPI";
	case MODE_NAMESPACEDECL: return "MODE_NAMESPACEDECL";
	case MODE_NAMESPACEKEYWORD: return "MODE_NAMESPACEKEYWORD";
	case MODE_OCCURRENCE_INDICATOR: return "MODE_OCCURRENCE_INDICATOR";
	case MODE_OPERATOR: return "MODE_OPERATOR";
	case MODE_OPTION: return "MODE_OPTION";
	case MODE_PRAGMA: return "MODE_PRAGMA";
	case MODE_PRAGMACONTENTS: return "MODE_PRAGMACONTENTS";
	case MODE_PROCESSING_INSTRUCTION: return "MODE_PROCESSING_INSTRUCTION";
	case MODE_PROCESSING_INSTRUCTION_CONTENT: return "MODE_PROCESSING_INSTRUCTION_CONTENT";
	case MODE_QUOTE_ATTRIBUTE_CONTENT: return "MODE_QUOTE_ATTRIBUTE_CONTENT";
	case MODE_SINGLETYPE: return "MODE_SINGLETYPE";
	case MODE_START_TAG: return "MODE_START_TAG";
	case MODE_URITOOPERATOR: return "MODE_URITOOPERATOR";
	case MODE_VARNAME: return "MODE_VARNAME";
	case MODE_XMLSPACE_DECL: return "MODE_XMLSPACE_DECL";
	case MODE_XML_COMMENT: return "MODE_XML_COMMENT";
	case MODE_XQUERY_VERSION: return "MODE_XQUERY_VERSION";
	default: return "Something's drastically wrong here, unrecognized start state!\n";
	}  
}

/*
#define YY_USER_ACTION \
	{ \
		std::cout<<'<'<<start_state()<<"> "<<yytext<<""<<std::endl; \
		yylloc->columns(yyleng); \
	}
*/

