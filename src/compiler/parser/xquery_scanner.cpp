#line 2 "xquery_scanner.yy.cpp"

#line 4 "xquery_scanner.yy.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 33
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer ZorbaFlexLexer
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;
#endif /* ! C99 */

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! FLEXINT_H */

/* %endif */

/* %if-c++-only */
/* begin standard C++ headers. */
#include <iostream> 
#include <errno.h>
#include <cstdlib>
#include <cstring>
/* end standard C++ headers. */
/* %endif */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* %not-for-header */

/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
/* %ok-for-header */

/* %if-reentrant */
/* %endif */

/* %if-not-reentrant */

/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#define YY_BUF_SIZE 16384
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

/* %if-not-reentrant */
extern int yyleng;
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    /* Note: We specifically omit the test for yy_rule_can_match_eol because it requires
     *       access to the local variable yy_act. Since yyless() is a macro, it would break
     *       existing scanners that call yyless() from OUTSIDE yylex. 
     *       One obvious solution it to make yy_act a global. I tried that, and saw
     *       a 5% performance hit in a non-yylineno scanner, because yy_act is
     *       normally declared as a register variable-- so it is not worth it.
     */
    #define  YY_LESS_LINENO(n) \
            do { \
                int yyl;\
                for ( yyl = n; yyl < yyleng; ++yyl )\
                    if ( yytext[yyl] == '\n' )\
                        --yylineno;\
            }while(0)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef unsigned int yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
/* %endif */

/* %if-c++-only */
	std::istream* yy_input_file;
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* %if-c-only Standard (non-C++) definition */
/* %if-not-reentrant */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
/* %endif */

void *Zorbaalloc (yy_size_t  );
void *Zorbarealloc (void *,yy_size_t  );
void Zorbafree (void *  );

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */

#define yywrap() 1
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

typedef unsigned char YY_CHAR;

#define yytext_ptr yytext

#include "compiler/parser/FlexLexer.h"

/* %if-c-only Standard (non-C++) definition */
/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	(yytext_ptr) -= (yy_more_len); \
	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	(yy_c_buf_p) = yy_cp;

/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 497
#define YY_END_OF_BUFFER 498
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[3609] =
    {   0,
      166,  166,    0,    0,    0,    0,  425,  425,    0,    0,
        0,    0,    0,    0,    0,    0,  403,  403,  412,  412,
      418,  418,  314,  314,  326,  326,  431,  431,  301,  301,
      434,  434,  437,  437,    0,    0,  170,  170,    0,    0,
        0,    0,    0,    0,  335,  335,  450,  450,    0,    0,
      444,  444,  331,  331,  469,  469,    0,    0,    0,    0,
        0,    0,  498,  167,    1,    2,  166,  166,  117,  167,
       75,  167,  167,   21,   58,   60,   33,   20,   32,   65,
       34,   51,   19,   85,   49,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,

       57,   57,   57,   57,   57,   16,  167,   93,  496,  491,
      491,  496,  488,  489,  496,  479,  479,  479,  424,  425,
      425,  424,  424,  419,  420,  423,  421,  497,  496,  496,
      464,  459,  459,  459,  464,  458,  454,  464,  467,  465,
      466,  473,  473,  473,  402,  403,  403,  402,  402,  338,
      378,  399,  360,  382,  402,  352,  381,  362,  372,  401,
      377,  401,  401,  401,  401,  401,  401,  401,  401,  401,
      401,  401,  401,  401,  401,  401,  401,  401,  392,  411,
      412,  412,  411,  411,  408,  405,  406,  406,  406,  404,
      417,  418,  418,  417,  417,  417,  417,  413,  415,  313,

      314,  314,  313,  313,  313,  313,  309,  307,  311,  312,
      312,  325,  326,  326,  325,  325,  325,  325,  324,  325,
      325,  325,  325,  430,  431,  431,  430,  430,  427,  428,
      426,  300,  301,  301,  300,  250,  300,  232,  300,  300,
      177,  239,  209,  214,  186,  207,  217,  300,  178,  206,
      188,  198,  240,  203,  246,  300,  300,  300,  300,  300,
      300,  300,  300,  300,  300,  300,  300,  300,  300,  300,
      300,  300,  300,  176,  222,  238,  433,  434,  434,  433,
      432,  438,  437,  437,  437,  438,  440,  496,  497,  440,
      440,  439,  170,  170,  169,  168,  474,  474,  496,  476,

      496,  496,  497,  496,  483,  483,  480,  496,  481,  496,
      334,  335,  335,  334,  334,  332,  452,  450,  450,  450,
      446,  447,  452,  448,  445,  451,  496,  497,  496,  496,
      443,  444,  444,  443,  443,  441,  330,  331,  331,  330,
      330,  330,  330,  470,  469,  469,  469,  470,  305,  305,
      496,  496,  496,  302,  496,  496,  496,  111,  113,  112,
        1,  166,    2,    0,   61,    0,  116,    0,    0,   61,
       90,   87,    0,   64,   53,   35,   36,   53,   51,   50,
       50,   84,    0,    0,   82,   57,    0,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,

       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,  118,  491,    0,    0,    0,    0,
        0,    0,  490,  494,  495,    0,  425,  422,    0,    0,
      459,    0,    0,    0,    0,    0,    0,    0,  453,  456,
      462,  463,  466,  466,    0,  472,  471,  403,  384,  351,
      340,  359,  380,  379,  370,  371,  401,    0,  401,  401,
      401,  401,  401,  401,  401,  401,  401,  401,  401,  401,
      401,  401,  401,  401,  401,  401,  401,  401,  401,  401,

      401,  401,  401,  401,  401,  401,  401,  401,  401,  401,
      401,  401,  401,  401,  412,  407,  406,    0,  406,  406,
      418,    0,  416,    0,    0,    0,  416,  414,  415,  314,
        0,  308,    0,    0,    0,  308,  306,  312,  312,  326,
        0,  316,    0,    0,    0,  316,  320,    0,    0,    0,
        0,    0,  431,  429,  301,  210,    0,  247,    0,  249,
        0,    0,  247,  299,  236,  218,  219,  185,  205,  204,
      196,  197,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  251,  434,  432,    0,  437,  435,    0,    0,
        0,    0,    0,  439,    0,  439,  170,  169,  474,    0,
        0,  476,  475,    0,    0,  477,  483,  482,    0,    0,
        0,    0,    0,    0,  486,  487,  335,  333,  332,    0,
      450,  449,  451,    0,    0,    0,    0,    0,  315,    0,
        0,    0,  315,  444,  442,  441,    0,  331,  329,    0,
        0,  469,    0,  469,    0,  305,    0,    0,  303,    0,
        0,    0,  303,    0,    0,    0,    0,    0,    0,  112,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   59,   52,   52,   53,    0,   55,    0,
        0,    0,   56,   57,   57,   57,   57,   57,  108,   57,
      108,    0,    0,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,    0,   22,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,    0,    0,    0,    0,    0,    0,    0,  478,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  466,  401,  401,  400,  400,  400,  358,  358,  358,
      358,  358,  401,  401,  401,  401,  401,  401,  401,  401,
      364,  364,  364,  401,  401,  401,  365,  365,  365,  366,
      366,  366,  401,  375,  375,  375,  401,  401,  376,  376,
      376,  401,  401,  367,  367,  367,  368,  368,  368,  401,
      369,  369,  369,  401,  387,  387,  387,  401,  401,  401,
      401,  401,  401,  401,  401,  390,  390,  390,  401,  401,
      401,  406,  406,  406,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,  310,  310,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  231,    0,  183,  183,  183,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  190,    0,    0,    0,    0,    0,
        0,  191,  192,    0,  201,    0,    0,  202,    0,  193,
        0,    0,    0,  194,    0,  195,    0,    0,  213,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,  220,    0,    0,    0,    0,
        0,    0,    0,    0,  432,  436,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  332,  451,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  441,    0,    0,  469,  468,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  115,  114,  112,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   59,   54,   81,    0,    0,    0,   57,   57,  120,
      120,  120,   57,  120,   57,  122,  122,  122,   57,  122,

        0,    0,    0,    0,    0,    0,    0,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,    0,    0,   57,    0,   57,
       57,   57,   57,    0,    0,   57,   57,   57,   57,   57,
        0,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,  109,
       57,  109,   57,   57,   57,   57,   57,   57,   57,   57,
       57,  493,    0,    0,  492,    0,    0,    0,    0,  461,
        0,    0,  460,    0,    0,  455,    0,  466,  401,  357,
      357,  357,    0,    0,    0,    0,    0,  401,  401,  401,

      401,  361,  361,  361,  401,  401,  401,  401,  401,  401,
      401,  401,  401,  401,  401,  401,  383,  383,  383,  401,
      401,  401,  401,  401,  401,  401,  401,  401,  401,  401,
      401,  406,  406,  406,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  260,  260,  260,

      182,  262,  262,  262,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  187,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  208,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  432,    0,    0,  485,    0,    0,
      484,    0,    0,  332,  451,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  441,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  174,    0,
        0,  115,  112,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   57,    0,    0,    0,    0,   57,    0,
        0,    0,    0,    0,   92,    0,    0,    0,   92,    0,
        0,    0,    0,    0,    0,   57,   57,    0,    0,   57,
       57,    0,    0,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   76,    0,  137,   57,  137,
        0,    0,   57,   57,  103,   57,  103,   57,   77,    0,
       57,   57,   57,   57,    0,   29,    0,   57,   57,   57,

       57,   57,   57,   57,   57,   57,   57,  145,   57,  145,
       57,   57,    0,   57,    0,    0,    0,   28,   11,   57,
       57,   57,   57,   57,   57,   57,  106,  106,  106,   57,
      106,   57,   57,   57,    0,    0,    0,    0,    0,    0,
      355,    0,    0,    0,  355,    0,    0,  401,  398,  398,
      398,    0,    0,  401,  401,  401,  401,  354,  354,  354,
      401,  401,  401,  401,  373,  373,  373,  401,  401,    0,
        0,    0,    0,    0,  347,  401,  401,  401,  401,  401,
      401,    0,  346,  353,  353,  353,  401,  401,  401,  406,
      406,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  230,  230,  230,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  180,    0,    0,    0,    0,    0,  233,    0,  257,
        0,  199,    0,    0,    0,    0,  234,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  279,    0,    0,    0,    0,    0,  179,    0,

        0,    0,    0,    0,    0,    0,  106,  106,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      175,    0,    0,  104,   57,  104,    0,    0,    0,   57,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       57,   57,    0,    0,    0,    0,   57,  102,    0,   57,
       57,   57,   57,   57,   57,   57,   57,   57,    0,    0,
       57,   57,    0,    0,    0,   57,   57,   57,    0,    0,
       57,   57,   57,   57,    0,   57,   57,   57,   57,   57,

       57,   57,   57,   57,   57,   57,  146,   57,  146,   48,
       57,   78,    0,  149,   57,  149,   57,   57,   57,   57,
       57,   57,    0,    0,    0,    0,    0,    0,    0,   57,
      165,   57,  165,   57,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      401,    0,    0,  401,  401,  401,  401,  401,  401,  401,
        0,    0,  401,  401,    0,    0,  350,    0,    0,    0,
        0,  401,  401,  401,  401,  401,    0,    0,  391,  391,
      391,  393,  393,  393,  406,  406,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  110,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  184,    0,    0,  225,  283,    0,
        0,  221,    0,    0,  223,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  298,    0,  328,    0,    0,    0,
        0,    0,   57,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  124,

        0,    0,    0,   57,  105,   57,  105,    0,    0,    0,
        0,   40,   57,    0,    0,   57,    0,    0,   57,   57,
       57,   57,   57,   57,    0,    0,   79,    0,   57,   57,
        0,    0,    0,    0,    0,   57,    0,  139,   57,  139,
       57,  107,   57,  107,    0,    0,    0,  141,   57,  141,
       57,   57,    0,  143,   57,  143,   57,   57,   57,    0,
        0,   57,   57,   57,    0,    0,   57,   57,   57,   57,
      151,   57,  151,  152,   57,  152,    0,    0,    0,    0,
        0,    0,    0,   57,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,  401,    0,    0,    0,  401,  401,  401,
      401,  401,  363,  363,  363,  401,    0,    0,  401,  401,
        0,    0,    0,    0,    0,    0,  401,  388,  388,  388,
      401,  401,    0,    0,    0,    0,  406,  406,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  264,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  189,    0,    0,    0,    0,    0,
        0,    0,    0,  274,    0,    0,  258,    0,    0,    0,
      277,    0,    0,    0,  215,    0,    0,    0,    0,    0,

        0,    0,  285,  259,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  173,    0,    0,   57,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  126,    0,
       57,    0,    0,    0,    0,   27,   13,    0,    0,    0,
        0,    0,   57,   57,   57,   57,   57,    0,   23,    6,
        0,    0,    0,    0,  136,   57,  136,   57,    0,    0,
        0,    0,    0,   57,   57,    0,    0,    0,    0,   17,
       57,   45,   57,   57,   57,    0,    0,    0,    0,   57,
       57,   57,    0,   57,   57,   57,   57,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  171,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,  401,
      395,    0,  401,    0,  345,  401,    0,  341,  401,  401,
        0,    0,    0,  401,  401,    0,    0,    0,    0,    0,
        0,    0,  401,  401,  401,  401,    0,    0,    0,    0,
        0,    0,  409,  406,    0,    0,  318,    0,    0,    0,
        0,    0,    0,    0,    0,  254,    0,    0,    0,    0,
      227,    0,    0,    0,    0,    0,  245,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  256,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   83,    0,   57,    0,  123,  125,  127,   57,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   57,   57,   57,  134,   57,  134,
        0,   57,   10,    0,    0,    0,    0,    0,    0,   57,
        0,    0,    0,    0,    0,    0,    0,  138,   57,  138,
       57,    0,    0,    0,    0,   57,   57,   57,   57,    0,
        0,    0,    0,    0,    0,   57,   57,  147,   57,  147,
       57,   57,   57,   57,    0,    0,    3,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,  457,  401,    0,    0,  401,  401,  356,
      356,  356,    0,    0,    0,    0,  401,    0,    0,  385,
        0,  401,  401,  401,  401,    0,    0,    0,  397,    0,
      406,    0,    0,    0,    0,    0,  322,    0,  263,    0,
      253,  265,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  255,    0,    0,    0,    0,    0,    0,  181,
        0,    0,    0,    0,  273,    0,    0,    0,  211,    0,
        0,  224,    0,    0,  281,    0,    0,    0,    0,  229,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  327,  304,  121,   57,   38,    0,

       24,    0,    7,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   57,    0,    0,   57,  133,   57,  133,   57,    0,
        0,    0,    9,    0,    0,    0,    0,   57,    0,    0,
        0,    0,    0,    0,  140,   57,  140,    0,    0,  119,
      142,   57,  142,   57,    0,   57,   57,    0,    0,    0,
        0,    0,    0,   57,   57,  148,   57,  148,   57,    0,
       18,  150,   57,  150,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  172,    0,  342,    0,    0,  401,  401,

        0,    0,    0,  374,  374,  374,  337,  401,  389,  389,
      389,  401,  401,    0,    0,  406,    0,    0,    0,  317,
        0,    0,  261,  243,    0,    0,    0,    0,  237,    0,
        0,    0,    0,    0,  271,    0,    0,    0,    0,    0,
        0,    0,  200,    0,    0,  275,  252,  276,    0,  216,
      282,    0,    0,  284,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   57,    0,
        0,   39,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   57,
        0,    0,    0,    0,    0,   57,    0,    0,    0,    0,

       57,   44,    0,    0,    0,    0,   57,   47,   57,   57,
        0,    0,    0,    0,   57,   57,    0,    5,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  401,  401,  336,    0,    0,    0,  401,  401,  401,
        0,  406,    0,    0,  319,    0,    0,    0,    0,    0,
        0,    0,    0,  244,    0,    0,    0,    0,    0,  248,
        0,    0,    0,  235,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   57,    0,    0,    0,    8,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   97,    0,   57,   42,    0,    0,    0,
        0,    0,   57,    0,    0,    0,   57,    0,    0,   95,
        0,    0,   57,   57,   57,  101,    0,    0,   57,   57,
        4,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      394,    0,  401,  401,  396,    0,  401,  401,  401,    0,
      406,    0,  323,    0,    0,  226,    0,    0,    0,    0,
        0,    0,  242,    0,  228,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,   57,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   98,   57,    0,    0,    0,    0,    0,
       57,    0,   57,    0,    0,   96,    0,   57,   57,  144,
       57,  144,   99,    0,   57,   57,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  401,  401,  401,  401,  401,    0,    0,
      406,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  278,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

       57,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   57,    0,
        0,    0,    0,   30,    0,   57,   73,   72,    0,   57,
       57,    0,    0,   57,   57,    0,    0,    0,    0,  161,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  348,  401,  401,  401,  401,    0,    0,  406,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  294,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   57,    0,  129,    0,    0,
        0,    0,    0,    0,    0,    0,   91,    0,    0,    0,

        0,    0,   57,    0,    0,  135,   57,    0,   57,   57,
        0,    0,   57,    0,   25,    0,    0,    0,    0,    0,
      163,  164,    0,    0,    0,    0,    0,    0,    0,    0,
       89,    0,    0,  401,  401,    0,  343,    0,    0,    0,
        0,  410,    0,    0,  267,    0,    0,    0,  241,  272,
        0,    0,    0,    0,    0,    0,    0,    0,  296,  297,
        0,    0,    0,    0,    0,    0,    0,    0,   57,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   57,    0,    0,   57,    0,   57,
       57,    0,    0,    0,   57,    0,    0,  160,  162,  153,

        0,    0,    0,    0,    0,    0,    0,    0,  339,  401,
      401,  386,    0,  321,    0,    0,    0,    0,  212,    0,
        0,    0,  293,  295,  286,    0,    0,    0,    0,    0,
        0,    0,  128,   69,    0,    0,    0,    0,    0,    0,
        0,    0,  130,   14,    0,    0,    0,    0,   88,    0,
        0,    0,    0,    0,    0,   57,    0,    0,   57,   68,
       57,   57,    0,    0,    0,    0,   26,    0,    0,  155,
        0,    0,    0,    0,  401,    0,  344,  266,  268,    0,
        0,    0,    0,  288,    0,    0,    0,   37,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   67,    0,

        0,    0,    0,    0,    0,   80,    0,   57,    0,    0,
        0,    0,   57,    0,    0,    0,    0,    0,    0,  157,
      158,    0,    0,  401,    0,    0,    0,    0,    0,    0,
      290,  291,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   43,   46,   57,    0,    0,    0,
        0,    0,  154,  156,    0,  401,    0,    0,    0,    0,
      287,  289,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   41,  132,    0,
       57,    0,    0,    0,    0,    0,  401,    0,    0,    0,

        0,    0,    0,   62,    0,    0,    0,    0,    0,    0,
        0,   94,    0,    0,    0,   57,    0,    0,    0,  401,
        0,  270,    0,    0,    0,    0,    0,    0,    0,    0,
       63,    0,    0,    0,    0,   12,  100,    0,  401,    0,
        0,   86,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  131,    0,   31,    0,    0,  349,  269,
        0,    0,    0,   74,    0,    0,   70,    0,    0,    0,
        0,    0,    0,  159,  292,    0,    0,    0,    0,    0,
       71,    0,    0,    0,    0,    0,    0,   66,    0,    0,
        0,    0,   15,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0
    } ;

static yyconst flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    4,    5,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   18,   19,   20,   21,   22,   22,   22,
       22,   22,   22,   22,   22,   22,   22,   23,   24,   25,
       26,   27,   28,   29,   30,   31,   32,   33,   34,   31,
       35,   35,   35,   35,   35,   35,   35,   35,   35,   36,
       35,   35,   37,   38,   35,   35,   35,   35,   35,   35,
       39,   40,   41,   40,   42,   40,   43,   44,   45,   46,

       47,   48,   49,   50,   51,   35,   52,   53,   54,   55,
       56,   57,   58,   59,   60,   61,   62,   63,   64,   65,
       66,   35,   67,   68,   69,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,

       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   70,   70
    } ;

static yyconst flex_int32_t yy_meta[71] =
    {   0,
        1,    2,    2,    3,    2,    2,    4,    5,    6,    4,
        4,    7,    8,    9,   10,   11,    4,    4,   12,   13,
        4,   14,   15,   16,    7,    4,    4,    4,    4,   17,
       17,   17,   17,   17,   18,   18,   18,   18,   19,   19,
       19,   18,   17,   17,   20,   21,   17,   17,   18,   18,
       22,   18,   18,   18,   18,   23,   18,   18,   18,   24,
       25,   18,   26,   18,   18,   18,   27,   19,   28,   29
    } ;

static yyconst flex_int16_t yy_base[4193] =
    {   0,
        0,    0,   70,   74,   87,   93,   98,  103,   73,   76,
      170,  240,  310,    0,  119,  122,  380,    0,  450,    0,
      520,    0,  590,    0,  659,  715,  150,  182,  772,    0,
      842,    0,  912,    0,  188,  203,  982,    0, 1052, 1081,
      210,  219,  223,  667, 1110,    0, 1180,    0,  251,  264,
     1250,    0,  681,  694, 1320, 1326, 1338, 1351,  108,  176,
     1398,    0,12659,22725,  144,  279,  292,  297,22725,   72,
    22725,12644,   80,  101,22725,12631,22725,22725,22725,  138,
      109,  229,22725,  741,22725,12600,  704,  104,  178,  655,
     1313,  160,  708,  666,   58,  146,  667, 1324,  227, 1326,

     1446,  646,  157,  702,   62,22725,12538,22725,22725,    0,
        0, 1461,12590,12535,12522,22725,22725,12547,22725, 1389,
     1469, 1474,12564,22725,22725,22725,22725,22725,12517,12518,
    22725,    0,    0,    0, 1472, 1351,12505,12497,22725,22725,
     1480,22725,12542,12547,22725, 1485, 1496, 1529,12515,22725,
      252,22725,22725,22725,12498,22725,  207,22725,  252,12498,
    22725, 1483,  248,  684, 1488,  237, 1490, 1494, 1505,  659,
     1314,  100,  158,  239, 1513, 1522,  716,  643,22725,22725,
     1557, 1580, 1585,12497,22725,22725,12493,   66, 1315,22725,
    22725, 1590, 1595, 1600,  668,  293,12492,22725,    0,22725,

     1605, 1610, 1615, 1369,  755,12491,22725,22725,22725,    0,
    12452,22725, 1620, 1625, 1630, 1372, 1321,12489,22725,12463,
    12454,  638,12440,22725, 1635, 1640, 1645,12473,22725,22725,
    22725,22725, 1650, 1655, 1660,12469, 1484,22725,12476, 1374,
      665,22725,22725,22725,22725,22725,  156,12461,22725, 1363,
    22725, 1468,22725,22725,22725, 1619,12439,  648, 1471, 1623,
     1509, 1462, 1627, 1628,12428, 1473, 1505, 1640,12436, 1648,
     1646,  675, 1656,22725,12414,22725,22725, 1711, 1716, 1721,
    12457,22725, 1726, 1731, 1736, 1741,22725, 1558, 1562, 1677,
     1685, 1689, 1749, 1754,    0,22725, 1763, 1768,12456,    0,

    12449,12446,12431, 1480,    0,    0,12450, 1740,12390,12387,
    22725, 1782, 1797, 1802,12432,12431,22725, 1807, 1812, 1817,
    22725,22725,12426,22725,22725,12428, 1822, 1834, 1567, 1656,
    22725, 1846, 1851, 1856,12427,12424,22725, 1861, 1866, 1871,
    12422,12371,12368,22725,12409,12408,12407,12406, 1876, 1881,
     1568, 1698,12401,22725,12367,12378, 1729,22725,12395,12393,
     1894, 1899, 1904, 1767,12393, 1879,22725, 1749, 1880,12387,
    22725,22725,    0,22725, 1892,22725,22725, 1893, 1896,22725,
     1775, 1942, 1757,12376,22725,12375,12381, 1647, 1725, 1896,
     1962, 1990, 1869, 1871, 1312, 1897, 1961, 1974, 1868, 1889,

     1768, 1902, 1938, 1982, 1501, 2005, 1898, 1976, 1989, 1937,
     1888, 1992, 1993, 1995, 1997,  701, 2000, 2001, 2003, 1870,
     2019, 2010, 2022, 2002, 2023, 2004, 2024, 2026, 2027, 2030,
     2029, 2032, 2038, 2039,22725,    0, 2042, 1777,12335,12334,
    12349,12330,22725,22725,22725,12362, 2086,22725,12341,12316,
        0, 2044, 1787,12310,12309,12325,12306, 2055,22725,22725,
    22725,22725, 2100, 2108,    0,22725,22725, 2113,22725,22725,
    22725,22725,22725,22725,22725,22725,12344,    0, 2049, 2131,
     2201, 2048, 2045, 2062, 2055, 2103, 2063, 2271, 2130, 2105,
     2341, 2411, 2073, 2481, 2551, 2075, 2106, 2621, 2691, 2138,

     2761, 2139, 2831, 2164, 2104, 2107, 2144, 2146, 2056, 2150,
     2901, 2200, 2208, 2209, 2174,22725,12343,    0, 2210, 2211,
     2233, 1945,12356, 2923, 1820, 2924,12350,22725,    0, 2246,
     2174,12352, 2937, 1833, 2944,12345,22725,    0, 3002, 2261,
     2180,12335, 2991, 1946, 3024,12329,22725,12293,12290,12285,
    12319,12290, 2299,22725, 2311,22725, 2246,12327, 3038,22725,
     2183, 3045,12321,22725,22725,22725,22725,22725,22725,22725,
    22725,22725,12270,12276, 2260,12269, 2316,12265, 2183, 2270,
     2326, 2329,12252,12254,12249,    0, 2264,12250,12252,12261,
        0,    0,12254, 2185,    0,12247, 1287,12236,    0,12239,

        0,12223,12238,12236,12222,12221,12232, 2276, 2120,12221,
    12221, 1642,12226,12217,    0,12176,12169,12151,12154,12157,
     2273,12047,22725, 2391,12073,    0, 2396, 2401,12078, 2439,
        0, 2369, 2376, 2438, 2440,22725, 2454,    0, 2461,12058,
    12055,    0,22725,12049, 2308,22725,    0,22725, 2310, 2136,
    12005,12002,12018,11996,22725,22725, 2466,22725,12034,    0,
     2579,22725,12033,    0, 2591, 2375, 2461, 2590,12047, 3046,
     2464, 3059,12041, 2603,22725,12030,    0, 2608,22725,12005,
    11992,12027,    0,12026,12015, 2649,12015, 2656,12029, 3066,
     2574, 3067,12021,11886,11861,11840,11853,11844,    0,11879,

    11877, 2368, 2236,11829,11817,11831,11812, 2551, 2306,11773,
    11770,11786,11757,    0,22725, 2648, 2635,11794,11793,11785,
    11769,11777,22725,    0, 2407, 3125, 2633, 3195,22725,11770,
    11776, 3264,11768, 2617, 2547, 2636, 2620, 2656, 2592, 2690,
     2698, 2699, 2701, 2700, 2664, 2718, 2703, 2566, 2724, 2704,
     2768, 2790, 2796, 2803,11767, 2797, 2705, 2838,   49, 2860,
     2706, 2775, 2869, 2776, 2230, 2861, 2780, 2844, 2643, 2710,
     2711, 2845, 2846, 2911, 2850, 2912, 2915, 2913, 2914, 2916,
     2922, 2937, 3324, 2942, 2926, 2998, 2774, 2939, 2978, 3009,
     3012, 3013, 2650,    0,11732,11732,11763,11725,11728,22725,

    11734,11720, 2653,    0,11656,11648,11677,11640,11633,11667,
    11653, 2733,    0, 3394,22725,11651,    0,22725, 3154,11648,
    11647,    0, 2932, 3100, 3029, 3464, 2934, 3030, 3014, 2933,
    22725,11589,    0, 3015, 3016, 3025,22725,11580,    0,22725,
    11577,    0, 2935,22725,11576,    0, 3057, 3027,22725,11572,
        0, 3043, 3083,22725,11571,    0,22725,11570,    0, 3534,
    22725,11569,    0, 3132,22725,11568,    0, 3140, 3033, 3028,
     3041, 3167,  264, 3165, 3162,22725,11566,    0, 2852, 3202,
     3168,    0, 3205, 3206, 3167, 2319,11527,11517,11531,11512,
     3208, 2624,11506,11505,11521,11502, 3209, 2697,11501,11500,

    11515,11496, 3211, 2757,11494,11492,11494,11475,22725,    0,
     3215, 2758,11475,11474,11490,11468, 3216, 2822,11463,11448,
    11464,11445,11463,11458,11454, 2759,11435, 3217, 2824,11419,
    11418,11434,11415, 3218, 2828,11415,11411,11422,11389,11403,
     3167,    0, 3172,22725,11402,22725, 3240,11425,11391, 2624,
    11398,11384,11352,11362,11371,11356,11355,11343,11337,11323,
        0,11326,11302,11309,22725,11303,11298,11297, 3246,11279,
    11274,22725,22725,11266,22725, 3194, 2896,22725,11274,22725,
     3293,11275,11273,22725,11268,22725,11283,11243,22725,11257,
    11260,11259,11241,11249,11246,11224,11212,11226,11182,11171,

    11168,11176,11166,11161,11160,22725,11161,11147,11145,11140,
    11129,11141,11136,11139,    0,22725, 3299, 2809,11153,  727,
     2718,    0,11116,11105,11022,10968,10963,    0,    0, 3225,
     2836,10931,10922,10929,10908, 3249, 2890,10839,10829,10843,
    10813,    0,10805,10811,10819,22725, 3257, 2894,10775,10773,
    10763,10730, 3290, 3126,10690,10687,10703,10656,10668, 1524,
    10626,    0,10615,10618,    0,22725,    0, 3083,    0,10605,
    10605,10634,10587,10581, 3089,    0,10577,10570,10601,10564,
    10567,    0,22725,22725,10589,10595, 1927,    0, 3233,22725,
     3492,10589,10574,10580, 3261,22725, 3505,10570,10566,10569,

     2942, 2588,10528,10521,10511,10505,10542, 3234, 3287, 3354,
     3263, 3266, 3367, 3300, 3293, 3268, 3463, 3338, 3339, 3252,
     3476, 3494, 3460, 3504, 3541, 3510,10541, 3604,10537, 3507,
     3564, 3674, 3505, 3574,10531, 3545, 3567, 3477, 3547, 3632,
    10502, 3634, 3637, 3616, 3265, 3644, 3548, 3549, 3645, 3682,
     3343, 3744, 3684, 3617,10515, 3619, 3647, 3714, 3703,22725,
    10514,10520, 3706, 3685, 3716, 3686, 3479, 3751, 3814, 3717,
     3774,10523,10507,10465,22725,10451,10446,10447,10456,10484,
    10457,10420,22725,10422,10417,22725,10444, 3719,    0,22725,
    10450,    0, 3785, 3366, 3363,10444,10429, 3618, 3884, 3912,

     3687,22725,10426,    0, 3755, 3688, 3955, 3710, 3779, 3785,
     3787, 4025, 3344, 3844, 3854, 3925,22725,10425,    0, 3983,
     3883, 3756, 3915, 3917, 3822, 3826, 3996, 4095, 3986, 3823,
     3757,    0, 3759, 3896, 3160,    0,10387,10382,10399,10362,
    10365, 3559,    0,10363,10363,10391,10349,10338, 3567,    0,
    10336,10336,10367,10330,10330, 3570,    0,10323,10309,10340,
    10303,10306, 3632,    0,10304,10301,10327,10276,10279, 3770,
        0,10277,10277,10308,10268,10266,10245,10245,10243,10243,
    10236,10246, 3828,    0,10101,10099,10130,10025,10026, 3839,
        0,10024, 9956, 9978, 9939, 9931, 9918,22725, 4053, 9951,

    22725,22725, 4066, 9939, 9897, 4123, 9926, 9887, 9894, 9883,
     9877, 9892, 9852, 4071, 4136, 9841, 9847, 4141, 9843, 9815,
     9813, 9826, 9813, 9824, 9827,22725,    0, 9795, 9799, 9785,
     9786, 9783, 4182, 9809,    0, 9774,    0, 9769, 9776, 9692,
        0, 9686, 4195, 9637, 9580, 9565,22725, 9573, 9514, 9489,
     9477, 9484, 9449, 9460, 9444, 9424, 9420, 9392,    0, 9388,
     9400, 9371, 9356, 9349,    0, 9339, 9337, 9340, 9325, 9331,
     9206, 9194, 4154, 9189,    0, 4009, 9157, 9165, 9152, 9047,
    22725, 9047, 9031,    0,    0, 3840,    0, 9032, 9021, 9050,
     9007, 9010, 3847,    0, 9007, 9007, 9016, 8976, 8960,    0,

     8968, 8954, 3850,    0, 8945, 8943, 8963, 8924, 8927, 3851,
        0, 8458, 8458, 8466, 8429, 8432, 8464, 8422,22725,    0,
     8422,    0,    0, 8442, 8404,  158,  164,  206, 1015, 1047,
     1336, 1496, 1740, 4255, 4324, 1757, 1787, 2050, 4021, 4329,
     2100, 2127, 2237, 3371, 2300, 4163, 3376, 4164, 2311, 2342,
     2403, 2401, 2545, 2661, 3042, 3897, 3898, 4343, 2727, 2803,
     4125, 4221, 2857, 4055, 3899, 4126, 3969, 4108, 4138, 3970,
     4148, 4037, 4348, 3968, 3926,22725, 2863,22725, 2873, 3070,
     3238, 3570, 4128, 4129,22725, 3296, 3364, 3478,22725, 3361,
     4109, 4038, 4067, 4039, 4234,22725, 3482, 4131, 4040, 4143,

     4159, 4181, 4188, 4155, 4191, 4185, 4130,22725, 3559, 3570,
     4151, 4403, 3920, 4313, 4370, 3576, 4431,22725,22725, 4498,
     4314, 4206, 4207, 4316, 4172, 4317,22725, 4482, 3624, 3625,
     3642, 4321, 4568, 4319, 3650, 3615, 3616, 3703, 3697, 3788,
     3722, 4590, 3853, 4591, 3773, 3772, 3993, 4333,22725, 3778,
        0, 4446, 3782, 4335, 4332, 4318, 4337,22725, 3824,    0,
     3914, 4338, 4340, 4451,22725, 3828,    0, 4341, 4378, 4476,
     4530, 4547, 3857, 4599,22725, 4618, 4379, 4343, 4374, 4346,
     4344, 4612,22725,22725, 3909,    0, 4648, 4671, 4741, 4436,
     4347, 3910, 3884, 3890, 3942, 3980, 3945, 3950, 4018, 4057,

     4028, 4032, 4030, 4217, 4183, 4187, 4184, 4222, 4187, 4192,
     4189, 4227, 4194, 4325, 4325, 4347, 4374, 4383, 4391, 4399,
     4388, 4434, 4401, 4405, 4402, 4440, 4406, 4410, 4407,    0,
     4653, 4446, 4419, 4453, 4699, 4454, 4427, 4469, 4447, 4448,
     4452, 4437, 4474, 4497, 4525, 4482,22725, 4723, 4507, 4717,
     4508, 4497, 4773, 4486, 4495, 4502, 4509, 4502, 4507, 4500,
     4505,22725, 4786, 4515, 4510, 4503, 4532,22725, 4567,22725,
     4545,22725, 4549, 4556, 4552, 4576,22725, 4580, 4604, 4568,
     4584, 4564, 4595, 4582, 4791, 4588, 4613, 4602, 4612, 4617,
     4620, 4611,22725, 4620,    0, 4614, 4623,    0,22725,    0,

     4810,    0, 4645, 4632,    0, 4642, 4815, 4684, 4646,    0,
     4700, 4690, 4655, 4659, 4657, 4700, 4670, 4675, 4672, 4675,
        0, 4711, 4676, 4714, 4711, 4749, 4724, 4728, 4725, 4747,
    22725, 4738, 4763,22725, 4779, 4787, 4745, 4783, 4807, 4784,
     4764, 4802, 4811, 4805, 4774, 4771, 4772, 4791, 4774, 4815,
     4784, 4778, 4781, 4799, 4782,    0, 4785, 4785, 4788, 4825,
     4826, 4888, 4795, 4804, 4829, 4837, 4846,22725, 4831, 4834,
     4860, 4832, 4849, 4835, 4895, 4864, 4861, 4928, 4933, 4833,
     4854, 4898, 4836, 4929, 4844, 4957, 4962, 4901, 4845, 4930,
     4985, 4903, 5055, 5013, 4844, 5125, 4902, 4931, 4850, 5195,

     4918, 4863, 4981, 5026, 4960, 4954,22725, 4862, 4954,22725,
     4997,22725, 4949,22725, 4952, 4962, 4999, 5015, 4998, 5016,
     5265, 5335, 5098, 4956, 4996, 4920, 4932, 4933, 5000, 5025,
    22725, 5010, 5018, 5085, 4989, 4985, 5007, 5091, 5052, 4985,
     4990, 5041, 5030, 5092, 5053, 5032, 5036, 5054, 5043, 5088,
     5093, 5055, 5094, 5124, 5153, 5162, 5164, 5166, 5405, 5137,
     5236, 5095, 5138, 5144, 5167, 5096,22725, 5065, 5098, 5310,
     5140, 5167, 5475, 5205, 5155, 5294, 5241, 5145,22725, 5152,
        0,22725, 5156,    0, 5234, 5165, 5125, 5168, 5187, 5184,
     5172, 5170, 5178, 5225, 5236, 5190, 5229, 5238, 5203,    0,

     5198, 5199, 5242, 5279,    0, 5317, 5280, 5252, 5262, 5287,
     5251, 5295, 5272, 5367,22725, 5275, 5280, 5267, 5380, 5283,
     5269, 5310, 5320, 5386, 5343, 5445, 5301,    0, 5335, 5356,
     5372, 5337, 5450, 5348, 5349, 5348, 5342, 5376, 5442,    0,
     5358,    0, 5397,    0, 5503, 5404, 5393,    0, 5374, 5382,
     5516, 5393,    0, 5390,22725, 5397, 5521,22725,22725, 5534,
     5420,22725, 5415,    0,22725,    0, 5547, 5437, 5415, 5400,
     5413, 5416, 5445, 5408,22725, 5407,22725, 5416,    0, 5464,
     5451, 5487, 5505, 5465, 5489, 5507,    0, 5456, 5476, 5509,
     5474, 5485, 5532,    0, 5489, 5499, 5533, 5498, 5503,22725,

     5499,    0, 5501, 5540,22725, 5542, 5550, 5507, 5513, 5546,
     5555,22725, 5569, 5553, 5564, 5592, 5614, 5557, 5559, 5558,
     5566, 5563, 5561, 5621, 5627, 5562,22725, 5565, 5688, 5582,
     5567, 5671, 5568, 5652, 5576, 5591, 5577,22725, 5580, 5588,
     5589,22725, 5590, 5618, 5716, 5616, 5589,22725, 5619, 5627,
     5657, 5622, 5630,22725, 5624, 5632, 5627, 5687, 5628, 5730,
     5629, 5737, 5703, 5700, 5641, 5655, 5714, 5722, 5726, 5725,
    22725, 5642, 5651,22725, 5645, 5655, 5633, 5641, 5705, 5639,
     5634, 5730, 5739, 5774, 5787, 5736,    0, 5716, 5734, 5743,
        0, 5709, 5712, 5746, 5713, 5718, 5759,    0, 5725, 5728,

     5763, 5734, 5739, 5773,    0, 5775, 5784, 5777, 5800, 5785,
     5807, 5792,22725, 5793,    0, 5794, 5763, 5796, 5797, 5803,
     5799, 5764, 5804, 5813, 5763, 5808, 5809,22725, 5810,    0,
     5812, 5814, 5849, 5815, 5780, 5818, 5862, 5867, 5889,    0,
     5797, 5784, 5798, 5802, 5810, 5835, 5816, 5851, 5820,22725,
     5816,    0, 5817, 5819, 5825, 5859, 5873,    0, 5860, 5874,
     5837, 5830, 5896,    0, 5836, 5853, 5851, 5860, 5849, 5862,
     5888, 5913, 5889,    0,22725, 5860, 5897, 5870, 5875, 5878,
     5877, 5866, 5903,22725, 5868, 5878,22725, 5864, 5908, 5875,
    22725, 5886, 5879, 5933,22725, 5893, 5894, 5940, 5925, 5889,

     5927, 5891,22725,22725, 5904, 5910, 5908, 5909, 5904, 5936,
     5945, 5967, 5914, 5913,22725, 5924, 5905, 5955,    0, 5942,
     5907, 5918, 5915, 5953, 5919, 5923, 5921,    0,22725,    0,
     5960, 5937, 5925, 5963, 5985,22725,22725, 5969, 6051, 5970,
     5938, 5972, 5974, 5975, 5977, 6114, 5999, 6007, 5983,22725,
     5952, 5991, 5992, 6001,22725, 5994, 6003, 6000, 5969, 5981,
     6004, 5972, 6007, 6184, 6011, 5988, 6009, 5978, 6037,22725,
     6012,22725, 6014, 6013, 6021, 5989, 6023, 6159, 6024, 6025,
     6027, 6254, 6028, 6037, 6038, 6036, 6154, 6021, 6022, 6015,
     6013, 6011, 6026, 6050, 6323, 6052, 6029, 6054,22725, 6032,

     6040, 6061, 6027, 6031, 6028, 6066, 6031, 6035, 6032, 6086,
    22725, 6071, 6213, 6226,22725, 6079, 6282,22725, 6078, 6387,
     6039, 6080, 6129, 6295, 6085, 6082, 6151, 6055, 6089,    0,
     6122, 6152, 6124, 6146, 6180, 6125, 6090, 6127,    0, 6128,
     6157, 6301,22725, 6197, 6328, 6147,22725, 6124, 6125, 6167,
        0, 6173,    0, 6185,    0,22725,    0, 6188, 6177, 6215,
    22725, 6216, 6341, 6187, 6358, 6220,22725, 6189, 6200, 6185,
        0, 6200, 6205, 6226, 6287, 6217, 6253,22725,    0, 6234,
     6415, 6229,    0, 6244, 6245, 6253,    0, 6288, 6297, 6263,
        0, 6256, 6257, 6259, 6276, 6313,    0, 6315, 6325, 6292,

     6298, 6304, 6296, 6294, 6292, 6307, 6331, 6456, 6333,    0,
        0,22725,    0, 6353, 6342,22725,22725,22725, 6428, 6302,
     6308, 6323, 6311, 6323, 6312, 6328, 6321, 6330, 6324, 6339,
     6362, 6340, 6399, 6420, 6402, 6462, 6522,22725, 6400, 6421,
     6443, 6416,22725, 6477, 6401, 6381, 6415, 6454, 6417, 6455,
     6395, 6400, 6429, 6469, 6407, 6449, 6471,22725, 6450, 6473,
     6592, 6421, 6464, 6475,    0, 6662, 6474, 6465, 6468, 6453,
     6480, 6489, 6449, 6463, 6484, 6492, 6518,22725, 6485, 6536,
     6732, 6531, 6632, 6802, 6640, 6486,22725, 6449, 6454, 6465,
     6564, 6478, 6510, 6500, 6506, 6497, 6510, 6513, 6548, 6513,

     6550, 6559,    0,22725, 6692, 6708, 6552, 6830, 6521,22725,
     6522,    0, 6523, 6557, 6714, 6561, 6885, 6562,    0,22725,
     6563, 6573, 6955, 6568, 6592, 6541, 6565, 6625,22725, 6588,
     6602, 6561, 6601,    0, 6565, 6564,22725,    0,22725,    0,
    22725,22725, 6575, 6590, 6778, 6627,    0, 6590, 6629, 6604,
     6596,    0,22725, 6614, 6598, 6658, 6629, 6669, 6739,22725,
     6644, 6783, 6682,    0,22725, 6761,    0,    0,22725, 6685,
        0,22725, 6659,    0,22725,    0, 6675, 6700, 6753,22725,
     6701,    0, 6663, 6667, 6673, 6843, 6726, 6729, 6721, 6727,
     6718, 6740, 6740, 6770,22725,22725,22725, 6801,22725, 6860,

     6771, 6835,22725, 6735, 6735, 6738, 6775, 6783, 6802, 6796,
     6799, 6801, 6795, 6813, 6798, 6821, 6809, 6850, 6860, 6829,
     6854, 6859, 6914, 6856, 6927,22725, 6857, 6899, 6881, 6940,
     6983,    0,22725, 6858, 6924, 6823, 6884, 6917, 6974, 6859,
     6876, 6911, 6888, 6913,22725, 6915, 6975, 6901, 6926,22725,
    22725, 6928, 6976, 6970, 6985, 6981, 6980, 6955, 6982, 6963,
     6957, 6988, 6997, 6990, 6991,22725, 6992, 7003, 7030, 7035,
    22725,22725, 6993, 7005, 6974, 6966, 7006, 6989, 6992, 6995,
     7052, 7024, 6986, 7008, 6997, 7016, 7013, 7014, 7009, 7040,
     7049, 7005, 7044,22725, 7071,22725, 7008, 7047, 7048, 7056,

        0, 7030, 7057,22725, 7058,    0,22725, 7063,22725, 7060,
        0, 7061, 7064, 7041, 7066, 7067, 7044, 7069, 7078,22725,
        0, 7047,22725,22725, 7035, 7035, 7037, 7075,22725, 7043,
     7077, 7090,    0, 7105,22725, 7045, 7051, 7053, 7092,    0,
     7069, 7099,22725, 7121, 7105,22725,22725,22725, 7078,22725,
    22725, 7083, 7109,22725, 7080, 7083, 7085, 7135, 7119, 7081,
     7101, 7090, 7103, 7100, 7101, 7097, 7128, 7137, 7134, 7159,
     7131,22725, 7104, 7107, 7112, 7111, 7107, 7102, 7126, 7113,
     7126, 7125, 7122, 7127, 7132, 7133, 7126, 7155, 7119, 7157,
     7165, 7136, 7161, 7187, 7162, 7163, 7192, 7200, 7164, 7153,

     7184,22725, 7155, 7156, 7151, 7152, 7192,22725, 7193, 7194,
        0, 7171, 7157, 7197, 7198, 7199, 7225,22725, 7158, 7173,
     7166, 7209, 7218, 7173, 7175, 7182, 7184, 7219, 7186, 7188,
     7187, 7205, 7198, 7196, 7194, 7209, 7233, 7206,    0, 7235,
     7245, 7238, 7239,22725,    0, 7240, 7249, 7242, 7244, 7243,
     7210, 7250, 7216, 7248,22725,    0, 7223, 7224,    0, 7253,
     7262, 7221, 7256,22725, 7296, 7257, 7234,    0, 7235,22725,
        0, 7260, 7273,22725, 7263, 7230, 7230, 7230, 7231, 7248,
     7248, 7282, 7247, 7248, 7247, 7264, 7257, 7255, 7253, 7268,
     7292, 7293, 7315, 7320,    0,22725, 7304, 7313, 7268, 7267,

     7312, 7286, 7272, 7315, 7273, 7276, 7277, 7279, 7284, 7282,
     7289, 7283, 7302,22725,    0, 7325,22725, 7291, 7326, 7335,
     7296, 7329, 7331, 7357, 7332, 7302, 7341, 7318, 7323,22725,
        0, 7310, 7345, 7346, 7424,22725,    0, 7323, 7348, 7349,
    22725, 7316, 7323, 7406, 7352, 7391, 7325, 7328, 7320, 7357,
     7368, 7319, 7340, 7341, 7331, 7344, 7465, 7356, 7355, 7346,
    22725, 7380, 7396, 7431,22725, 7391, 7400, 7433, 7423, 7481,
     7434, 7360,22725, 7352, 7352,22725, 7457, 7355, 7362, 7371,
     7398, 7362,22725, 7403,22725, 7458, 7437, 7459,    0, 7494,
     7499, 7410, 7413, 7416, 7465, 7491, 7428, 7461, 7462, 7451,

     7457, 7513, 7469, 7475, 7498, 7520, 7526, 7518, 7483, 7488,
     7474, 7494, 7479, 7484, 7489, 7492, 7493, 7489, 7492, 7497,
     7498, 7499, 7507,22725, 7533, 7493, 7539, 7495, 7534, 7543,
     7565, 7498, 7537,    0,    0,22725, 7518, 7540, 7541,22725,
     7542, 7556,22725, 7571, 7555, 7557, 7536, 7592, 7559, 7538,
        0, 7538, 7576, 7526, 7529, 7537, 7549, 7551, 7605, 7580,
     7542, 7562, 7557, 7618, 7590, 7591, 7592, 7602, 7624, 7593,
     7610, 7576, 7583, 7588, 7585, 7579, 7585, 7619, 7630, 7582,
     7583, 7632,22725, 7656, 7623, 7670, 7625, 7604,    0, 7604,
     7641, 7597, 7605, 7611, 7616, 7626, 7676, 7660, 7623, 7643,

     7664, 7689, 7665, 7626,    0, 7637, 7638, 7636, 7656, 7640,
     7646, 7647, 7661, 7704, 7650, 7665, 7657, 7660, 7691, 7664,
     7669, 7704, 7718,22725,    0, 7702,22725,22725, 7681, 7706,
     7705, 7731, 7708, 7715, 7744, 7678, 7680, 7719, 7683,22725,
     7684,    0,    0, 7691, 7693, 7700, 7703, 7737, 7702, 7703,
        0, 7766,22725, 7779, 7740, 7742, 7786, 7698, 7750, 7792,
     7713, 7712,    0, 7721, 7731, 7719, 7784,    0,    0, 7720,
     7781, 7744, 7785, 7750,22725, 7751,    0,    0, 7751, 7752,
     7759, 7760, 7794, 7759, 7760, 7797, 7774,22725, 7771, 7757,
     7779, 7771, 7824, 7776, 7777, 7788, 7837, 7811, 7786, 7793,

     7788, 7797, 7823, 7786, 7793,22725, 7826, 7803, 7829, 7830,
     7806, 7832, 7833, 7855,22725, 7806, 7840, 7849,    0,    0,
    22725,22725,    0, 7814, 7817, 7808, 7845, 7856, 7811, 7828,
    22725, 7888, 7893, 7852, 7853, 7910,22725,    0, 7854, 7863,
     7915,22725,    0, 7835,22725, 7828, 7830, 7836,22725,22725,
        0, 7865, 7886, 7847, 7881, 7907,    0,    0,22725,22725,
        0, 7854, 7857, 7851, 7900, 7910, 7864, 7881, 7905,    0,
        0, 7912, 7871, 7887, 7933, 7917,    0, 7939, 7899, 7925,
     7952, 7888, 7957, 7970, 7929, 7899, 7891, 7941,    0, 7942,
     7944, 7990, 7945, 7954, 7995, 7913, 7964,22725,22725,22725,

     7938,    0, 7939, 7987, 7926, 7928, 8009, 7980,22725, 7982,
     8023,22725, 7993,22725,    0,    0, 7947, 7956,22725, 8007,
     7962, 8016,22725,22725,22725, 7975,    0, 7975, 8017, 7973,
     7974, 8019,22725,22725, 7976, 7987, 7981, 7987, 7992, 7985,
     7989, 8026,22725, 8048, 8032, 8054, 8038, 8048, 8070, 8041,
     8014, 8075, 8043, 8088, 8044, 8047, 8006, 8031, 8060,22725,
     8062, 8063, 8101, 8064, 8073, 8107,22725, 8114, 8037,22725,
     8039,    0,    0, 8077, 8091, 8127,22725,22725,22725, 8050,
     8071, 8140, 8064,22725, 8065,    0,    0,22725, 8069, 8071,
     8077, 8082, 8090, 8083, 8093, 8117, 8132, 8125, 8147, 8134,

     8143, 8136, 8104, 8100, 8140,22725, 8141, 8142, 8120, 8107,
     8153, 8154, 8148, 8116, 8150, 8176, 8151,    0,    0,22725,
    22725, 8152, 8168, 8161, 8124, 8123, 8190, 8164,    0,    0,
    22725,22725, 8145, 8134, 8154, 8145, 8145, 8155, 8154, 8187,
     8180, 8190, 8183, 8184, 8193, 8156, 8157, 8191, 8200, 8194,
     8203, 8204,    0, 8168,22725,22725, 8198, 8178, 8202, 8213,
     8173, 8207,22725,22725, 8216, 8209, 8182, 8187, 8179, 8214,
    22725,22725, 8193, 8239, 8201, 8204, 8201, 8189, 8192, 8240,
     8229, 8241, 8242, 8264, 8213, 8256, 8257,22725,22725, 8196,
     8238, 8215, 8258, 8215, 8252, 8261, 8254, 8219,    0, 8224,

     8262, 8272, 8239, 8286, 8270, 8249, 8236, 8243, 8248, 8299,
     8291, 8313, 8284, 8247, 8262, 8288,    0, 8266, 8305, 8298,
     8275,22725, 8277, 8309, 8331, 8302, 8266, 8278, 8269, 8275,
     8336, 8321, 8323, 8296,    0, 8352,22725, 8288, 8357,    0,
     8289, 8379, 8328, 8329, 8349, 8384, 8309, 8397, 8312, 8345,
     8346, 8355, 8317,22725, 8402,22725,    0, 8415,22725,22725,
        0, 8351, 8399, 8421, 8353, 8322, 8428, 8356, 8434, 8368,
     8426, 8428, 8337,22725,22725, 8371, 8429, 8372, 8451, 8373,
     8456, 8374, 8448, 8470, 8454, 8386, 8463, 8477, 8387, 8389,
     8470, 8390, 8492, 8392, 8477, 8405, 8484, 8422, 8486, 8423,

     8424, 8487, 8488, 8427, 8489, 8490, 8493,22725, 8516, 8545,
     8574, 8603, 8632, 8661, 8690, 8719, 8748, 8777, 8806, 8835,
     8864, 8893, 8922, 8951, 8968, 8983, 9008, 9033, 9058, 9073,
     9088, 9114, 9143, 9161, 9187, 9216, 9234, 9260, 9289, 9318,
     9347, 9365, 9390, 9415, 9432, 9447, 9475, 9502, 9517, 9532,
     9558, 9587, 9605, 9630, 9657, 9685, 9714, 9732, 9758, 9787,
     9800, 9813, 9827, 9842, 9858, 9883, 9908, 9933, 9943, 9958,
     9968, 9983, 9993,10019,10048,10066,10092,10121,10139,10165,
    10194,10223,10252,10281,10310,10339,10368,10397,10426,10455,
    10484,10513,10542,10571,10600,10618,10628,10653,10663,10688,

    10715,10732,10758,10776,10804,10831,10846,10856,10871,10881,
    10907,10936,10954,10964,10989,11016,11043,11071,11100,11129,
    11142,11157,11173,11188,11201,11214,11240,11258,11273,11289,
     9048, 9380,11314,11329,11344,11354,11369,11384,11399,11425,
    11454,11483,11512,11541,11559,11584,11609,11637, 9923,11655,
    11670,11685,11710,11738,11767,11785,11800,10285,10310,11815,
    11841,11859,11874,11890,11916,11945,11974,12003,12019,12027,
    12047,12062,12077,12087,12113,12142,12171,12189,12204,10339,
    10368,10397,10426,10455,10484,10513,10542,12230,12259,12288,
    12317,12346,12375,12404,12433,12462,12480,12505,12531,12547,

    12557,12572,10574,10600,12587,10643,11304,12613,12642,12660,
    12675,12688,12696,12717,12746,12764,12790,12819,12848,12877,
    12906,12925,12951,12980,13009,13038,13067,13085,13095,13110,
    13123,13131,13139,13147,13155,13163,13171,13179,13200,13229,
    13258,13287,13316,13345,13374,13403,13432,13461,13490,13519,
    13535,13543,13564,13580,13588,13598,13614,13640,13669,13698,
    13727,13756,13785,13814,13843,13872,13901,13930,13959,13977,
    14003,14032,14045,14060,14086,14115,14144,14173,14202,14231,
    14260,14289,14318,14347,14376,14405,14434,14463,14492,14521,
    14550,14579,14608,14637,14655,14681,11425,11454,14710,14729,

    14755,14784,14813,14842,14871,14900,14929,14958,11483,11512,
    14976,15002,15031,15044,15070,15099,15128,15157,15186,15214,
    15240,15269,15298,15327,15356,15385,15414,15443,15472,15501,
    15530,15559,15588,15617,15646,15664,15690,15706,15714,15735,
    15764,15793,15822,15851,15879,15906,15935,15954,15980,16009,
    16038,16067,16096,16125,16154,16170,16178,16188,16214,16243,
    16272,16301,16330,16359,16388,16417,16446,16464,16490,16519,
    16548,16577,16606,16635,16664,16693,16722,16751,16780,16809,
    16838,16867,16896,16925,16954,16983,17012,17041,17070,17099,
    17117,17133,17159,17188,17216,17243,17272,17301,17330,17359,

    17388,17417,17446,17475,17504,17533,17562,17590,17600,17626,
    17655,17684,17713,17742,17771,17789,17815,17844,17873,17902,
    17931,17960,17989,18018,18047,18076,18105,18134,18163,18192,
    18221,18250,18279,18308,18337,18366,18384,18409,18426,18452,
    18481,18509,18520,18546,18575,18604,18633,18662,18691,18720,
    18749,18778,18807,18836,18854,18880,18909,18922,18948,18966,
    18992,19021,19050,19079,19108,19137,19166,19195,19224,19253,
    19281,19308,19337,19366,19395,19423,19449,19475,19504,19533,
    19562,19591,19620,19649,19678,19707,19725,19751,19780,19798,
    19824,19853,19882,19911,19940,19969,19998,20027,20056,20085,

    20114,20142,20153,20179,20208,20237,20266,20294,20321,20350,
    20379,20408,20437,20466,20495,20523,20549,20575,20604,20623,
    20649,20678,20707,20736,20765,20794,20823,20852,20881,20910,
    20939,20968,20997,21026,21055,21084,21113,21142,21171,21200,
    21229,21258,21287,21316,21345,21374,21403,21432,21461,21490,
    21519,21548,21577,21606,21635,21664,21693,21712,21738,21767,
    21796,21825,21854,21883,21912,21941,21970,21999,22028,22057,
    22086,22115,22144,22173,22202,22231,22260,22289,22318,22347,
    22376,22405,22434,22463,22492,22521,22550,22579,22608,22637,
    22666,22695

    } ;

static yyconst flex_int16_t yy_def[4193] =
    {   0,
     3608,    1, 3609, 3609, 3610, 3610, 3611, 3611, 3612, 3612,
     3613, 3613, 3608,   13, 3614, 3614, 3608,   17, 3608,   19,
     3608,   21, 3608,   23, 3615, 3615, 3616, 3616, 3608,   29,
     3608,   31, 3608,   33, 3617, 3617, 3608,   37, 3618, 3618,
     3619, 3619, 3620, 3620, 3608,   45, 3608,   47, 3612, 3612,
     3608,   51, 3621, 3621, 3622, 3622, 3612, 3612, 3612, 3612,
     3608,   61, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3623,
     3608, 3608, 3624, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3625, 3608, 3608, 3608, 3626, 3626, 3626, 3626, 3626,
     3626, 3626, 3626, 3626, 3626, 3626, 3626, 3626, 3626, 3626,

     3626, 3626, 3626, 3626, 3626, 3608, 3608, 3608, 3608, 3627,
     3627, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3628, 3628, 3628, 3608, 3608, 3608, 3608, 3608, 3608,
     3629, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3630,
     3608, 3630, 3630, 3630, 3630, 3630, 3630, 3630, 3630, 3630,
     3630, 3630, 3630, 3630, 3630, 3630, 3630, 3630, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3631, 3631, 3631, 3608,
     3608, 3608, 3608, 3608, 3632, 3633, 3608, 3608, 3634, 3608,

     3608, 3608, 3608, 3635, 3636, 3608, 3608, 3608, 3608, 3637,
     3637, 3608, 3608, 3608, 3608, 3638, 3639, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3640, 3608, 3608, 3641,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3642, 3608, 3608, 3608, 3608, 3643, 3608, 3644, 3644, 3644,
     3644, 3644, 3608, 3608, 3645, 3608, 3608, 3608, 3608, 3646,

     3608, 3647, 3647, 3647, 3648, 3648, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3649, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3650, 3608, 3608, 3651, 3652,
     3608, 3608, 3608, 3608, 3608, 3653, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3654, 3654, 3654, 3655, 3608, 3608,
     3656, 3657, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3658,
     3608, 3608, 3608, 3659, 3608, 3608, 3608, 3660, 3608, 3608,
     3608, 3608, 3661, 3608, 3662, 3608, 3608, 3662, 3663, 3608,
     3608, 3608, 3608, 3608, 3608, 3664, 3665, 3664, 3664, 3664,
     3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664,

     3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664,
     3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664,
     3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3664,
     3664, 3664, 3664, 3664, 3608, 3666, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3667, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3668, 3669, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3670, 3671, 3670, 3670,
     3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670,
     3670, 3670, 3670, 3608, 3670, 3670, 3670, 3670, 3670, 3670,

     3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670, 3670,
     3670, 3670, 3670, 3670, 3608, 3608, 3672, 3673, 3672, 3672,
     3608, 3674, 3608, 3608, 3675, 3608, 3608, 3608, 3676, 3608,
     3677, 3608, 3608, 3678, 3608, 3608, 3608, 3679, 3679, 3608,
     3680, 3608, 3608, 3681, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3682, 3608, 3608, 3608,
     3683, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3684, 3685, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3686, 3608, 3608, 3608, 3608,
     3687, 3688, 3608, 3689, 3690, 3608, 3691, 3608, 3692, 3608,

     3693, 3608, 3608, 3694, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3695, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3696, 3697, 3608, 3608, 3608, 3698,
     3699, 3700, 3700, 3700, 3701, 3608, 3608, 3702, 3608, 3608,
     3703, 3704, 3608, 3705, 3705, 3608, 3706, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3707, 3708,
     3608, 3608, 3709, 3710, 3608, 3711, 3712, 3711, 3608, 3608,
     3712, 3608, 3608, 3608, 3608, 3713, 3714, 3608, 3608, 3608,
     3608, 3715, 3716, 3717, 3608, 3608, 3608, 3718, 3608, 3608,
     3719, 3608, 3608, 3720, 3608, 3608, 3608, 3608, 3721, 3722,

     3723, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3724, 3608, 3608, 3725, 3608, 3726, 3608,
     3608, 3727, 3608, 3728, 3729, 3729, 3729, 3729, 3608, 3729,
     3730, 3608, 3608, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3729, 3608, 3608, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3608, 3731, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3732, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3733, 3734, 3608, 3608, 3735, 3736, 3608, 3608, 3608,
     3735, 3736, 3735, 3735, 3735, 3735, 3735, 3735, 3735, 3735,
     3608, 3735, 3736, 3735, 3735, 3735, 3608, 3735, 3736, 3608,
     3735, 3736, 3735, 3608, 3735, 3736, 3735, 3735, 3608, 3735,
     3736, 3735, 3735, 3608, 3735, 3736, 3608, 3735, 3736, 3735,
     3608, 3735, 3736, 3735, 3608, 3735, 3736, 3735, 3735, 3735,
     3735, 3735, 3735, 3735, 3735, 3608, 3735, 3736, 3735, 3735,
     3735, 3737, 3738, 3738, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3739,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3740, 3741, 3742, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3743, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3744, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3745, 3608, 3746, 3747, 3748, 3748,
     3608, 3749, 3608, 3608, 3608, 3608, 3608, 3750, 3751, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3752, 3608, 3608, 3753, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3754, 3754,
     3608, 3755, 3608, 3608, 3756, 3608, 3757, 3608, 3758, 3608,
     3608, 3608, 3608, 3608, 3608, 3759, 3608, 3608, 3608, 3608,
     3608, 3760, 3608, 3608, 3608, 3761, 3761, 3762, 3763, 3608,
     3608, 3608, 3763, 3764, 3763, 3608, 3608, 3608, 3763, 3764,

     3765, 3766, 3608, 3608, 3608, 3608, 3767, 3763, 3763, 3763,
     3763, 3763, 3763, 3763, 3763, 3763, 3763, 3763, 3763, 3763,
     3763, 3763, 3763, 3763, 3763, 3608, 3608, 3763, 3768, 3763,
     3763, 3763, 3763, 3608, 3608, 3763, 3763, 3763, 3763, 3763,
     3608, 3763, 3763, 3763, 3763, 3763, 3763, 3763, 3763, 3763,
     3763, 3763, 3763, 3763, 3763, 3763, 3763, 3763, 3763, 3608,
     3763, 3764, 3763, 3763, 3763, 3763, 3763, 3763, 3763, 3763,
     3763, 3608, 3769, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3770, 3608, 3608, 3608, 3608, 3608, 3608, 3771, 3772, 3608,
     3773, 3774, 3608, 3775, 3776, 3608, 3777, 3773, 3773, 3773,

     3773, 3608, 3773, 3774, 3773, 3773, 3773, 3773, 3773, 3773,
     3773, 3773, 3773, 3773, 3773, 3773, 3608, 3773, 3774, 3773,
     3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773, 3773,
     3773, 3778, 3779, 3779, 3608, 3780, 3608, 3608, 3608, 3608,
     3608, 3608, 3781, 3608, 3608, 3608, 3608, 3608, 3608, 3782,
     3608, 3608, 3608, 3608, 3608, 3608, 3783, 3608, 3608, 3608,
     3608, 3608, 3608, 3784, 3608, 3608, 3608, 3608, 3608, 3608,
     3785, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3786, 3608, 3608, 3608, 3608, 3608, 3608,
     3787, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3788, 3608, 3789, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3790, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3791, 3608, 3792, 3608, 3608, 3608,
     3793, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3794, 3608,
     3608, 3608, 3608, 3608, 3795, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3796, 3608, 3797, 3798, 3799, 3608, 3800, 3608,
     3608, 3608, 3608, 3801, 3802, 3608, 3803, 3608, 3608, 3608,
     3608, 3608, 3608, 3804, 3608, 3608, 3608, 3608, 3608, 3805,

     3608, 3608, 3608, 3806, 3608, 3608, 3608, 3608, 3608, 3608,
     3807, 3608, 3608, 3608, 3608, 3608, 3808, 3608, 3608, 3809,
     3608, 3810, 3811, 3812, 3608, 3608, 3608, 3813, 3608, 3608,
     3608, 3608, 3814, 3608, 3608, 3608, 3608, 3815, 3816, 3608,
     3608, 3608, 3817, 3818, 3608, 3608, 3819, 3608, 3608, 3608,
     3608, 3608, 3608, 3820, 3820, 3816, 3816, 3608, 3608, 3816,
     3816, 3608, 3608, 3816, 3816, 3816, 3816, 3816, 3816, 3816,
     3816, 3816, 3816, 3816, 3816, 3608, 3821, 3608, 3816, 3822,
     3823, 3823, 3816, 3816, 3608, 3816, 3822, 3816, 3608, 3824,
     3816, 3816, 3816, 3816, 3608, 3608, 3608, 3816, 3816, 3816,

     3816, 3816, 3816, 3816, 3816, 3816, 3816, 3608, 3816, 3822,
     3816, 3816, 3822, 3816, 3608, 3608, 3608, 3608, 3608, 3816,
     3816, 3816, 3816, 3816, 3816, 3816, 3608, 3608, 3608, 3816,
     3822, 3816, 3816, 3816, 3608, 3608, 3608, 3608, 3608, 3825,
     3608, 3608, 3826, 3608, 3608, 3827, 3827, 3828, 3608, 3828,
     3829, 3608, 3608, 3828, 3828, 3828, 3828, 3608, 3828, 3829,
     3828, 3828, 3828, 3828, 3608, 3828, 3829, 3828, 3828, 3608,
     3608, 3608, 3608, 3608, 3608, 3828, 3828, 3828, 3828, 3828,
     3828, 3608, 3608, 3608, 3828, 3829, 3828, 3828, 3828, 3830,
     3830, 3831, 3608, 3608, 3608, 3832, 3608, 3608, 3608, 3833,

     3608, 3608, 3608, 3834, 3608, 3608, 3608, 3835, 3608, 3608,
     3608, 3836, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3837, 3608, 3608, 3608, 3838, 3608, 3608, 3608, 3839,
     3608, 3608, 3608, 3840, 3608, 3608, 3608, 3841, 3608, 3608,
     3608, 3608, 3608, 3842, 3842, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3843, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3844, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3845, 3608, 3608, 3846, 3608, 3847,

     3608, 3848, 3608, 3608, 3849, 3608, 3608, 3608, 3608, 3850,
     3608, 3851, 3608, 3608, 3608, 3852, 3608, 3608, 3608, 3608,
     3853, 3854, 3608, 3608, 3608, 3855, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3856, 3857, 3608, 3858, 3858, 3856,
     3608, 3859, 3859, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3860, 3608, 3608, 3608, 3861,
     3856, 3856, 3608, 3608, 3862, 3857, 3856, 3608, 3863, 3856,
     3856, 3856, 3856, 3856, 3856, 3856, 3856, 3856, 3608, 3608,
     3856, 3856, 3864, 3864, 3865, 3856, 3856, 3856, 3866, 3866,
     3856, 3856, 3856, 3856, 3608, 3856, 3856, 3856, 3856, 3856,

     3856, 3856, 3856, 3856, 3856, 3856, 3608, 3856, 3857, 3608,
     3856, 3608, 3867, 3608, 3856, 3857, 3856, 3856, 3856, 3856,
     3856, 3856, 3608, 3608, 3608, 3608, 3608, 3608, 3868, 3856,
     3608, 3856, 3857, 3856, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3869,
     3870, 3608, 3871, 3870, 3870, 3870, 3870, 3870, 3870, 3870,
     3608, 3608, 3870, 3870, 3608, 3608, 3608, 3608, 3872, 3608,
     3608, 3870, 3870, 3870, 3870, 3870, 3608, 3608, 3608, 3870,
     3873, 3608, 3870, 3873, 3874, 3874, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3875, 3875, 3608, 3876, 3876, 3608, 3877,

     3608, 3608, 3608, 3878, 3879, 3608, 3608, 3608, 3608, 3880,
     3608, 3881, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3882, 3608, 3883,
     3883, 3608, 3608, 3608, 3608, 3608, 3608, 3884, 3884, 3885,
     3608, 3886, 3608, 3887, 3608, 3608, 3608, 3888, 3608, 3608,
     3608, 3608, 3889, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3890, 3608, 3891, 3608, 3608, 3608, 3608,
     3608, 3608, 3892, 3608, 3608, 3608, 3608, 3608, 3893, 3608,
     3608, 3894, 3895, 3608, 3896, 3608, 3897, 3608, 3608, 3608,
     3608, 3608, 3608, 3898, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3899, 3608, 3895, 3608, 3895, 3900, 3608, 3608, 3901,
     3901, 3608, 3895, 3902, 3902, 3895, 3608, 3608, 3895, 3895,
     3895, 3895, 3895, 3895, 3608, 3608, 3608, 3903, 3895, 3895,
     3904, 3608, 3608, 3608, 3608, 3895, 3905, 3608, 3895, 3900,
     3895, 3608, 3895, 3900, 3608, 3608, 3608, 3608, 3895, 3900,
     3895, 3895, 3900, 3608, 3895, 3900, 3895, 3895, 3895, 3608,
     3608, 3895, 3895, 3895, 3906, 3906, 3895, 3895, 3895, 3895,
     3608, 3895, 3900, 3608, 3895, 3900, 3608, 3608, 3608, 3608,
     3608, 3907, 3907, 3895, 3608, 3608, 3908, 3608, 3608, 3608,
     3909, 3608, 3608, 3608, 3608, 3608, 3608, 3910, 3608, 3608,

     3608, 3608, 3608, 3911, 3912, 3913, 3913, 3911, 3911, 3911,
     3911, 3911, 3608, 3911, 3914, 3911, 3608, 3915, 3911, 3911,
     3916, 3608, 3917, 3917, 3608, 3918, 3911, 3608, 3911, 3914,
     3911, 3911, 3608, 3608, 3608, 3919, 3920, 3920, 3608, 3921,
     3608, 3608, 3608, 3608, 3608, 3922, 3608, 3923, 3608, 3608,
     3608, 3924, 3608, 3608, 3608, 3925, 3925, 3926, 3927, 3927,
     3608, 3608, 3608, 3928, 3608, 3608, 3608, 3608, 3608, 3608,
     3929, 3608, 3608, 3930, 3608, 3608, 3931, 3608, 3608, 3608,
     3608, 3608, 3932, 3608, 3608, 3608, 3608, 3608, 3933, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3934, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3935,
     3935, 3608, 3608, 3608, 3608, 3608, 3608, 3936, 3937, 3938,
     3608, 3608, 3608, 3939, 3608, 3608, 3608, 3940, 3608, 3941,
     3936, 3608, 3608, 3942, 3608, 3608, 3608, 3943, 3608, 3608,
     3608, 3944, 3936, 3936, 3936, 3936, 3936, 3945, 3608, 3608,
     3608, 3946, 3947, 3947, 3608, 3936, 3948, 3936, 3608, 3608,
     3949, 3608, 3950, 3936, 3936, 3608, 3951, 3608, 3608, 3608,
     3936, 3608, 3936, 3936, 3936, 3608, 3952, 3608, 3608, 3936,
     3936, 3936, 3953, 3936, 3936, 3936, 3936, 3608, 3608, 3608,
     3608, 3608, 3608, 3954, 3608, 3608, 3608, 3955, 3608, 3608,

     3608, 3956, 3608, 3608, 3608, 3957, 3608, 3608, 3608, 3958,
     3608, 3959, 3958, 3608, 3608, 3958, 3608, 3608, 3958, 3958,
     3608, 3960, 3960, 3958, 3958, 3961, 3961, 3608, 3962, 3963,
     3964, 3964, 3958, 3958, 3958, 3958, 3608, 3965, 3966, 3967,
     3967, 3608, 3608, 3968, 3608, 3608, 3608, 3608, 3608, 3608,
     3969, 3608, 3970, 3608, 3971, 3608, 3972, 3608, 3608, 3973,
     3608, 3974, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3975, 3608, 3608, 3976, 3976, 3608, 3977, 3608, 3978, 3608,
     3608, 3608, 3979, 3608, 3608, 3608, 3980, 3981, 3981, 3608,
     3982, 3608, 3608, 3983, 3608, 3984, 3985, 3986, 3986, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3987, 3608, 3608, 3988,
     3989, 3608, 3990, 3991, 3992, 3608, 3608, 3608, 3991, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3993, 3608, 3994, 3994, 3991, 3991, 3991, 3608, 3991, 3992,
     3608, 3991, 3608, 3995, 3996, 3608, 3997, 3997, 3998, 3991,
     3608, 3608, 3999, 3999, 3608, 4000, 4000, 3608, 3991, 3992,
     3991, 3608, 4001, 4001, 4002, 3991, 3991, 3991, 3991, 3608,
     4003, 4003, 3608, 3608, 4004, 3991, 3991, 3608, 3991, 3992,
     3991, 3991, 3991, 3991, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 4005, 3608,

     4006, 4006, 4007, 3608, 4008, 3608, 3608, 4008, 2508, 3608,
     2508, 4009, 3608, 4010, 3608, 3608, 4008, 4011, 4012, 3608,
     4013, 2508, 4008, 2508, 2508, 3608, 4014, 4014, 3608, 4015,
     4016, 3608, 4017, 4018, 3608, 3608, 3608, 4019, 3608, 4020,
     3608, 3608, 3608, 3608, 3608, 3608, 4021, 3608, 4022, 3608,
     3608, 4023, 3608, 3608, 3608, 4024, 3608, 4025, 4025, 3608,
     3608, 3608, 3608, 4026, 3608, 3608, 4027, 4028, 3608, 4029,
     4030, 3608, 3608, 4031, 3608, 4032, 3608, 4033, 4033, 3608,
     4034, 4035, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 4036, 3608, 3608, 3608, 4037, 3608, 4038,

     3608, 4039, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 4040, 4040, 3608,
     4041, 4037, 3608, 3608, 4037, 3608, 4037, 4039, 4037, 3608,
     4042, 4043, 3608, 4044, 4044, 3608, 4045, 4037, 4039, 3608,
     3608, 4046, 3608, 4047, 3608, 4037, 4039, 3608, 4048, 3608,
     3608, 4037, 4039, 4037, 4039, 4037, 4037, 3608, 4049, 3608,
     3608, 4050, 4050, 4037, 4037, 3608, 4037, 4039, 4037, 3608,
     3608, 3608, 4037, 4039, 3608, 3608, 4051, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 4052,
     4052, 3608, 4053, 3608, 3608, 3608, 3608, 4054, 4055, 4055,

     4056, 3608, 4057, 3608, 4055, 4058, 3608, 4055, 3608, 4055,
     4058, 4055, 4055, 3608, 4059, 4060, 3608, 4061, 4061, 3608,
     4062, 3608, 3608, 3608, 3608, 3608, 3608, 4063, 3608, 3608,
     4064, 4064, 4065, 3608, 3608, 3608, 3608, 3608, 4066, 4067,
     3608, 4068, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 4069, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 4070, 4070, 4037, 4071,
     4072, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 4073, 4074, 4037,
     4039, 3608, 4075, 3608, 3608, 4037, 4076, 4077, 4078, 3608,

     4037, 3608, 3608, 3608, 4079, 3608, 4037, 3608, 4037, 4037,
     4080, 3608, 3608, 4081, 4037, 4037, 3608, 3608, 3608, 3608,
     3608, 4082, 4082, 3608, 3608, 3608, 3608, 4083, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 4084, 3608, 4085, 4086,
     4086, 4087, 4087, 3608, 4088, 4089, 4089, 4087, 4087, 4087,
     3608, 4090, 3608, 4091, 3608, 4092, 3608, 3608, 4093, 4094,
     4094, 3608, 4095, 3608, 3608, 3608, 3608, 4096, 3608, 3608,
     4097, 4098, 4098, 3608, 4099, 3608, 3608, 3608, 3608, 3608,
     3608, 4100, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     4101, 4037, 3608, 4102, 4103, 3608, 4104, 4104, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 4105, 4037, 3608, 3608, 4106, 4106,
     3608, 4107, 4037, 4108, 3608, 3608, 4037, 3608, 3608, 3608,
     4109, 3608, 4037, 4037, 4037, 3608, 4110, 3608, 4037, 4037,
     3608, 3608, 3608, 3608, 4111, 3608, 3608, 3608, 3608, 4112,
     4112, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 4113, 4087, 4087, 3608, 4089, 4087, 4087, 4087, 3608,
     4090, 3608, 3608, 3608, 3608, 3608, 4094, 3608, 3608, 3608,
     4114, 3608, 3608, 3608, 3608, 4098, 4099, 4099, 4115, 3608,
     3608, 3608, 3608, 3608, 4100, 4100, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 4037, 4116, 4117, 4104, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 4037, 3608, 4106, 3608, 4107, 4107,
     4037, 3608, 4037, 4118, 4119, 3608, 3608, 4037, 4037, 3608,
     4037, 4120, 3608, 3608, 4037, 4037, 3608, 3608, 3608, 3608,
     4121, 3608, 4112, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 4087, 4087, 4087, 4087, 4087, 3608, 3608,
     4090, 3608, 3608, 3608, 3608, 3608, 3608, 4114, 4114, 3608,
     3608, 4099, 3608, 3608, 3608, 3608, 3608, 3608, 4122, 3608,
     4100, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     4037, 4116, 3608, 3608, 4123, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 4037, 3608,
     3608, 4107, 3608, 3608, 4124, 4037, 3608, 3608, 3608, 4037,
     4037, 3608, 3608, 4037, 4037, 3608, 3608, 4125, 3608, 3608,
     3608, 4126, 4127, 3608, 3608, 3608, 3608, 4128, 3608, 3608,
     4129, 3608, 3608, 4087, 4087, 4087, 4087, 3608, 4130, 4090,
     3608, 3608, 4131, 3608, 3608, 3608, 4114, 4132, 4133, 3608,
     4134, 3608, 4135, 3608, 3608, 3608, 4136, 4137, 3608, 3608,
     3608, 3608, 4138, 3608, 3608, 4037, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 4037, 3608, 3608, 3608, 4037, 3608, 4037, 4037,
     3608, 4139, 4037, 3608, 3608, 3608, 4125, 4125, 4140, 4141,
     3608, 3608, 4142, 3608, 3608, 3608, 4128, 4128, 3608, 3608,
     3608, 3608, 3608, 4087, 4087, 3608, 3608, 4143, 4130, 4130,
     3608, 3608, 4144, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     4145, 4134, 4134, 3608, 4135, 4135, 4146, 4147, 3608, 3608,
     4148, 3608, 3608, 3608, 4138, 4138, 3608, 3608, 4037, 4149,
     4150, 3608, 3608, 3608, 3608, 3608, 4151, 3608, 3608, 4152,
     3608, 3608, 3608, 3608, 4037, 3608, 3608, 4037, 4153, 4037,
     4037, 3608, 4139, 4139, 4037, 3608, 4125, 3608, 3608, 3608,

     3608, 4154, 3608, 4128, 3608, 3608, 3608, 3608, 3608, 4087,
     4087, 3608, 4130, 3608, 4155, 4156, 3608, 3608, 3608, 4134,
     3608, 4135, 3608, 3608, 3608, 3608, 4157, 3608, 4138, 3608,
     3608, 4158, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 4159, 3608, 3608, 3608, 3608, 4152, 4152, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 4037, 3608, 3608, 4037, 3608,
     4037, 4037, 3608, 3608, 4139, 3608, 3608, 3608, 3608, 3608,
     3608, 4160, 4161, 4162, 4087, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 4163, 4164, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 4159, 4159, 4165, 3608, 3608,

     4152, 4166, 3608, 3608, 4167, 3608, 4168, 4037, 3608, 3608,
     4158, 4158, 4037, 3608, 4169, 3608, 3608, 4170, 4171, 3608,
     3608, 4162, 4162, 4087, 3608, 3608, 3608, 3608, 4172, 4173,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 4159,
     4165, 4165, 4174, 4166, 4166, 3608, 3608, 4167, 4167, 4168,
     4168, 4158, 4175, 3608, 3608, 3608, 4037, 3608, 4169, 4169,
     3608, 4176, 3608, 3608, 4162, 4087, 3608, 3608, 3608, 4177,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 4165,
     4174, 4174, 4166, 3608, 3608, 4167, 4168, 3608, 3608, 3608,
     4037, 3608, 4169, 3608, 4176, 4176, 4087, 3608, 4178, 3608,

     4177, 4177, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     4174, 3608, 3608, 3608, 3608, 4037, 4179, 3608, 4176, 4087,
     3608, 3608, 3608, 4177, 3608, 4180, 3608, 3608, 3608, 3608,
     3608, 3608, 4181, 3608, 4182, 4037, 3608, 3608, 4087, 4183,
     3608, 3608, 3608, 4180, 4180, 3608, 3608, 3608, 3608, 4184,
     4181, 4181, 3608, 3608, 3608, 3608, 4185, 3608, 3608, 3608,
     4186, 4187, 4180, 3608, 3608, 3608, 3608, 3608, 3608, 4184,
     4184, 4181, 3608, 3608, 3608, 4187, 4187, 4188, 3608, 4189,
     3608, 3608, 4184, 3608, 4187, 4188, 4188, 3608, 3608, 4189,
     4189, 4190, 3608, 3608, 4188, 4191, 4189, 4190, 4190, 4192,

     4191, 4191, 4190, 4192, 4192, 4191, 4192,    0, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608

    } ;

static yyconst flex_int16_t yy_nxt[22796] =
    {   0,
       64,   65,   66,   67,   68,   65,   69,   70,   64,   71,
       64,   72,   73,   74,   75,   76,   77,   78,   79,   80,
       81,   82,   64,   83,   84,   64,   64,   64,   85,   86,
       86,   86,   86,   86,   86,   86,   86,   86,   64,   64,
       64,   86,   87,   88,   89,   90,   91,   92,   86,   86,
       93,   86,   94,   95,   96,   97,   98,   86,   99,  100,
      101,  102,  103,  104,  105,   86,  106,  107,  108,   64,
      109,  387,  111,  109,  109,  128,  111,  109,  128,  365,
      387,  112,  113,  366,  387,  112,  113,  109,  518,  117,
      109,  369,  370,  109,  109,  117,  109, 1133,  109,  120,

      121,  122,  120,  120,  120,  121,  122,  120,  120,  371,
      128,  123,  124,  412,  376,  125,  123,  124,  519,  434,
      125,  128,  478,  372,  128,  126,  387,  118,  129,  377,
      126,  129,  143,  118,  130,  143,  114,  130,  115,  109,
      114,  144,  115,  109,  144,  361,  362,  362,  362,  361,
      393,  225,  226,  227,  225,  225,  109,  374,  503,  375,
      356,  566,  109,  228,  127,  229,  230,  357,  387,  127,
      131,  132,  133,  131,  132,  132,  567,  231,  128,  387,
      478,  135,  387,  225,  226,  227,  225,  225,  287,  288,
      289,  287,  288,  288,  136,  228,  291,  229,  230,  430,

      387,  413,  292,  287,  288,  289,  287,  288,  288,  231,
      109,  291,  303,  109, 1072,  404,  504,  292,  405,  109,
      394,  303,  109,  109, 1072,  306,  109,  395,  356,  368,
      307,  473,  474,  396,  308,  357,  137,  304,  138,  131,
      131,  132,  133,  131,  132,  132,  304,  109,  378,  387,
      379,  135,  327,  328,  327,  327,  327,  287,  329,  478,
      470,  478,  381,  330,  136,  327,  328,  327,  327,  327,
      478,  329,  287,  419,  471,  381,  330,  475,  476,  109,
      362,  363,  362,  362,  362,  505,  478,  490,  109,  309,
      482,  310,  109,  362,  362,  362,  362,  362,  362,  362,

      362,  362,  362,  483,  526,  527,  137, 1226,  138,  131,
      139,  109,  128,  139,  109,  109,  139,  139,  139,  139,
      139,  139,  139,  139,  139,  139,  139,  139,  139,  139,
      139,  139,  139,  139,  139,  139,  140,  139,  139,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  139,  139,
      139,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  141,  141,  141,  141,  139,  139,  139,  139,
      145,  146,  147,  148,  146,  146,  149,  145,  145,  150,
      145,  145,  145,  151,  152,  145,  145,  153,  154,  145,

      145,  145,  155,  156,  157,  158,  159,  145,  145,  160,
      160,  160,  160,  160,  160,  160,  160,  160,  161,  145,
      145,  160,  162,  160,  163,  164,  165,  166,  167,  160,
      168,  160,  169,  170,  171,  172,  173,  160,  174,  175,
      176,  177,  160,  178,  160,  160,  145,  179,  145,  145,
      180,  181,  182,  183,  181,  181,  180,  180,  180,  180,
      180,  180,  180,  184,  185,  186,  180,  180,  180,  180,
      180,  180,  180,  180,  180,  180,  180,  180,  180,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  180,  180,
      180,  187,  187,  187,  187,  187,  188,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  189,
      187,  187,  187,  187,  187,  187,  190,  180,  180,  180,
      191,  192,  193,  194,  192,  192,  191,  195,  191,  191,
      191,  191,  196,  197,  198,  191,  191,  191,  191,  191,
      191,  191,  191,  191,  191,  191,  191,  191,  191,  199,
      199,  199,  199,  199,  199,  199,  199,  199,  191,  191,
      191,  199,  199,  199,  199,  199,  199,  199,  199,  199,
      199,  199,  199,  199,  199,  199,  199,  199,  199,  199,
      199,  199,  199,  199,  199,  199,  191,  191,  191,  191,
      200,  201,  202,  203,  201,  201,  200,  204,  200,  200,

      200,  200,  205,  206,  200,  200,  200,  207,  200,  200,
      200,  200,  200,  208,  200,  209,  200,  200,  200,  210,
      210,  210,  210,  210,  210,  210,  210,  210,  200,  200,
      200,  210,  211,  210,  210,  210,  210,  210,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210,  210,  210,
      210,  210,  210,  210,  210,  210,  200,  200,  200,  200,
      213,  214,  215,  213,  213,  478,  216,  109,  387,  306,
      109,  217,  218,  564,  307,  523,  219,  387,  308,  524,
      550,  478,  338,  339,  340,  338,  338,  565,  387,  387,
      579,  109,  514,  551,  341,  338,  339,  340,  338,  338,

      428,  397,  429,  580,  220,  398,  478,  341,  409,  221,
      399,  414,  410,  222,  500,  223,  213,  214,  215,  213,
      213,  411,  216,  387,  387,  415,  387,  217,  218,  617,
      387,  618,  219,  309,  484,  310,  109,  342,  478,  485,
      343,  639,  382,  382,  382,  382,  382,  383,  431, 1377,
      342,  388,  432,  343,  384,  406,  389,  433,  390,  768,
      220,  407,  408,  391,  392,  221,  535,  536,  385,  222,
      513,  223,  232,  233,  234,  235,  233,  233,  236,  237,
      232,  238,  232,  239,  240,  241,  242,  243,  244,  245,
      246,  232,  247,  232,  248,  249,  250,  251,  252,  253,

      232,  232,  232,  232,  232,  232,  232,  232,  232,  232,
      254,  232,  255,  232,  256,  257,  258,  259,  260,  261,
      262,  232,  263,  232,  264,  265,  266,  267,  268,  232,
      269,  270,  271,  272,  232,  273,  232,  232,  274,  275,
      276,  232,  277,  278,  279,  280,  278,  278,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  281,  281,  281,  281,  281,  281,  281,  281,  281,
      277,  277,  277,  281,  281,  281,  281,  281,  281,  281,
      281,  281,  281,  281,  281,  281,  281,  281,  281,  281,

      281,  281,  281,  281,  281,  281,  281,  281,  277,  277,
      277,  277,  282,  283,  284,  285,  283,  283,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  282,  282,  282,
      282,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      282,  282,  282,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,  282,  282,
      282,  282,  109,  293,  294,  293,  293,  293,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,

      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      109,  109,  109,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  296,  109,
      109,  109,  109,  297,  298,  297,  297,  297,  109,  109,
      109,  109,  109,  109,  109,  299,  109,  109,  109,  109,
      109,  109,  109,  109, 1079,  109,  109,  109,  109,  301,
      109,  109,  297,  298,  297,  297,  297,  109,  109,  109,
      109,  109,  109,  109,  299,  109,  109,  109,  109,  109,

      109,  109,  109, 1079,  109,  109,  109,  109,  301,  109,
      311,  312,  313,  314,  312,  312,  311,  311,  311,  311,
      311,  311,  311,  315,  311,  311,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  311,  311,  311,  311,  316,
      316,  316,  316,  316,  316,  316,  316,  316,  311,  311,
      311,  316,  316,  316,  316,  316,  316,  316,  316,  316,
      316,  316,  316,  316,  316,  316,  316,  316,  316,  316,
      316,  316,  316,  316,  316,  316,  311,  311,  311,  311,
      317,  318,  319,  320,  318,  318,  317,  321,  317,  317,
      317,  317,  322,  317,  317,  317,  317,  317,  317,  317,

      323,  317,  317,  317,  317,  324,  325,  317,  317,  326,
      326,  326,  326,  326,  326,  326,  326,  326,  317,  317,
      317,  326,  326,  326,  326,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  317,  317,  317,  317,
      331,  332,  333,  334,  332,  332,  331,  331,  331,  331,
      331,  331,  331,  335,  331,  331,  331,  331,  331,  331,
      331,  331,  331,  331,  331,  331,  331,  331,  331,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  331,  331,
      331,  336,  336,  336,  336,  336,  336,  336,  336,  336,

      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  331,  331,  331,  331,
      344,  345,  346,  344,  345,  345,  344,  345,  346,  344,
      345,  345,  545,  546,  387,  387,  478,  518,  348,  349,
      350,  349,  349,  349,  348,  351,  387,  981,  387,  982,
      352,  353,  349,  350,  349,  349,  349,  458,  351,  520,
      501,  354,  737,  352,  353,  400,  416,  401,  420,  502,
      421,  459,  422,  417,  354,  402,  532,  403,  460,  542,
      533,  423,  418,  543,  355,  562,  563,  569,  570,  344,
      447,  447,  447,  447,  447,  344, 1079,  355,  109,  109,

      128,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  358,  359,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  360,  360,  360,
      360,  360,  360,  360,  360,  360,  109,  109,  109,  360,
      360,  360,  360,  360,  360,  360,  360,  360,  360,  360,
      360,  360,  360,  360,  360,  360,  360,  360,  360,  360,
      360,  360,  360,  360,  109,  109,  109,  109,  387,  437,
      447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
      452,  463,  463,  463,  463,  463,  468,  468,  468,  468,
      468,  558,  424,  571,  572,  559,  425,  468,  468,  468,

      468,  468,  465,  438,  426,  478,  646,  645,  591,  439,
      478,  427,  478,  440,  453,  441,  478,  581,  442,  601,
      454,  582,  592,  387,  455, 1733,  456,  478,  602,  457,
      468,  468,  468,  468,  468,  478,  491,  479,  686,  493,
      486,  487,  480,  481,  478,  488, 1417,  497,  494,  603,
      492,  498,  489,  495,  496,  506,  753,  507,  515,  515,
      515,  515,  515,  604,  588,  499,  633,  589,  509,  590,
      633,  510,  634,  508,  669,  689,  634,  511,  670,  690,
      512,  515,  515,  515,  515,  515,  515,  515,  515,  515,
      515,  521,  521,  521,  521,  521,  521,  521,  521,  521,

      521,  521,  521,  521,  521,  521,  530,  530,  530,  530,
      530,  530,  530,  530,  530,  530,  530,  530,  530,  530,
      530,  540,  540,  540,  540,  540,  540,  540,  540,  540,
      540,  540,  540,  540,  540,  540,  553,  553,  553,  553,
      553,  553,  553,  553,  553,  553,  553,  553,  553,  553,
      553,  555,  555,  555,  555,  555,  555,  555,  555,  555,
      555,  555,  555,  555,  555,  555,  573,  672,  673,  387,
      596,  574,  593,  575,  597,  583,  584,  585,  576,  577,
      586,  594,  605,  598, 1002,  633,  595,  587,  599,  606,
      609,  634,  610,  635,  611,  613,  614,  633,  607,  636,

     1003,  615,  619,  634,  616,  620,  621,  725,  612,  692,
      693,  622,  624,  624,  624,  624,  624,  624,  624,  624,
      624,  624,  624,  624,  624,  624,  624,  627,  627,  627,
      627,  627,  627,  627,  627,  627,  627,  627,  627,  627,
      627,  627,  628,  628,  628,  628,  628,  387,  649,  629,
      637,  637,  637,  637,  637,  637,  637,  637,  637,  637,
      369,  370, 1433,  631,  639,  639,  639,  639,  639,  639,
      639,  639,  639,  639,  365,  720,  640,  726,  366, 1438,
      697,  640,  650,  657,  657,  657,  657,  657,  651,  698,
      387,  718,  652,  718,  653,  721,  719,  654,  657,  657,

      657,  657,  657,  657,  657,  657,  657,  657,  661,  661,
      661,  661,  661,  661,  661,  661,  661,  661,  661,  661,
      661,  661,  661,  665,  665,  665,  665,  665,  748,  666,
      795,  526,  527,  796,  667,  665,  665,  665,  665,  665,
      805,  666, 1737,  806,  535,  536,  667,  674,  674,  674,
      674,  674,  674,  674,  674,  674,  674,  674,  674,  674,
      674,  674,  678,  678,  678,  678,  678,  678,  678,  678,
      678,  678,  678,  678,  678,  678,  678,  686,  686,  686,
      686,  686,  686,  686,  686,  686,  686,  702,  708,  687,
      387,  387,  387,  387,  687,  361,  362,  362,  362,  361,

      362,  362,  362,  362,  362,  362,  363,  362,  362,  362,
      387,  387,  746,  375,  717,  378,  735,  379,  387,  387,
      387,  703,  709,  775,  387,  716,  716,  704,  710,  381,
      736,  705,  711,  706,  712,  747,  707,  713,  716,  716,
      727,  382,  381,  382,  382,  382,  382,  382,  749, 1433,
      738,  762,  523,  739,  756,  384,  524,  545,  546,  387,
      387,  728,  729,  729,  729,  729,  729,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  729,  729,  729,  729,
      750,  730,  729,  387,  731,  729,  729,  729,  729,  729,
      729,  732,  732,  732,  732,  732,  387,  760,  387,  761,

      729,  729,  729,  733,  387,  740,  754,  754,  754,  754,
      754,  387,  387,  741,  387,  387,  743,  387,  755,  387,
      742,  744,  387,  387,  387,  387,  387,  387,  729,  729,
      729,  729,  387,  745,  751,  757,  758,  763,  764,  766,
      752,  387,  767,  759,  387,  387,  387,  770,  387,  387,
      734,  387,  387,  765,  387,  772,  771,  773,  769,  774,
      387,  387,  778,  793,  779,  803,  781,  478,  776,  783,
      478,  478, 1739,  810,  777,  780,  782,  478,  478,  788,
      784,  785,  787,  786,  478,  478,  789,  447,  447,  447,
      447,  447,  790,  811,  814,  478,  791,  478,  825,  827,

      792,  463,  463,  463,  463,  463,  794,  824,  804,  463,
      463,  463,  463,  463,  468,  468,  468,  468,  468,  830,
      874,  852, 1443,  843,  826,  478,  478,  478,  478,  478,
      465,  815,  815,  815,  815,  815,  815,  815,  815,  815,
      815,  815,  815,  815,  815,  815,  815,  815,  815,  828,
      816,  815,  478,  817,  815,  815,  815,  815,  815,  815,
      478,  478,  829,  836,  870,  853,  478,  871,  478,  815,
      815,  815,  478,  998,  834,  515,  515,  515,  515,  515,
      999,  532, 1741,  860,  864,  533,  478,  542,  873, 1023,
      835,  543, 1024,  872,  562,  563,  875,  815,  815,  815,

      815,  818,  819,  819,  819,  819,  819,  818,  818,  818,
      818,  818,  818,  818,  820,  818,  818,  818,  818,  869,
      821,  818,  478,  822,  818,  818,  818,  818,  818,  818,
      478,  478,  518,  518,  521,  521,  521,  521,  521,  818,
      818,  818,  950,  951,  976,  977,  879,  530,  530,  530,
      530,  530,  387,  558, 1141,  881,  883,  559,  880, 1743,
      884,  823,  540,  540,  540,  540,  540,  818,  818,  818,
      818,  831,  831,  831,  831,  831,  831,  831,  831,  831,
      831,  831,  831,  831,  831,  831,  831,  831,  831, 1070,
      832,  831, 1071,  833,  831,  831,  831,  831,  831,  831,

      553,  553,  553,  553,  553,  942,  966, 1444,  967,  831,
      831,  831,  555,  555,  555,  555,  555,  947,  947,  947,
      947,  947,  952, 1447,  968,  943,  953, 1012,  994,  948,
      995, 1021,  996, 1013,  646,  645,  997,  831,  831,  831,
      831,  837,  837,  837,  837,  837,  837,  837,  837,  837,
      837,  837,  837,  837,  837,  837,  837,  837,  837, 1077,
      838,  837, 1078,  839,  837,  837,  837,  837,  837,  837,
      954,  958, 1237,  955, 1022, 1238,  959,  633,  956,  837,
      837,  837,  669,  634,  635,  957,  670, 1756,  960, 1068,
      636,  961,  624,  624,  624,  624,  624,  627,  627,  627,

      627,  627,  628,  628,  628,  628,  628,  837,  837,  837,
      837,  840,  840,  840,  840,  840,  840,  840,  840,  840,
      840,  840,  840,  840,  840,  840,  840,  840,  840,  387,
      841,  840, 1069,  842,  840,  840,  840,  840,  840,  840,
      628,  628,  628,  628,  628, 1757,  633,  629,  635,  840,
      840,  840,  634, 1089,  634,  637,  637,  637,  637,  637,
     1758,  631,  639,  639,  639,  639,  639,  657,  657,  657,
      657,  657,  672,  673,  640,  672,  673,  840,  840,  840,
      840,  844,  844,  844,  844,  844,  844,  844,  844,  844,
      844,  844,  844,  844,  844,  844,  844,  844,  844,  477,

      845,  844,  477,  846,  844,  844,  844,  844,  844,  844,
      477,  477,  477,  477,  477,  477,  477,  477,  477,  844,
      844,  844,  477,  477,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
      847,  848,  477,  477,  477,  477,  477,  844,  844,  844,
      844,  849,  849,  849,  849,  849,  849,  849,  849,  849,
      849,  849,  849,  849,  849,  849,  849,  849,  849,  387,
      850,  849, 1075,  851,  849,  849,  849,  849,  849,  849,
      661,  661,  661,  661,  661,  692,  693, 1759,  387,  849,
      849,  849,  665,  665,  665,  665,  665,  669,  666, 1448,

     1449,  670, 1109,  667,  674,  674,  674,  674,  674,  678,
      678,  678,  678,  678,  387, 1076, 1122,  849,  849,  849,
      849,  854,  854,  854,  854,  854,  854,  854,  854,  854,
      854,  854,  854,  854,  854,  854,  854,  854,  854,  387,
      855,  854,  387,  856,  854,  854,  854,  854,  854,  854,
      686,  686,  686,  686,  686,  387,  717, 1113,  387,  854,
      854,  854,  687,  689,  718,  387,  718,  690,  716,  719,
     1314,  793, 1111, 1172,  803, 1108, 1180, 1244,  387, 1095,
     1245,  716, 1110, 1455, 1315, 1146,  387,  854,  854,  854,
      854,  857,  857,  857,  857,  857,  857,  857,  857,  857,

      857,  857,  857,  857,  857,  857,  857,  857,  857, 1112,
      858,  857,  387,  859,  857,  857,  857,  857,  857,  857,
      387,  387,  387,  387, 1119,  387,  387,  387,  387,  857,
      857,  857,  387,  387,  463,  463,  463,  463,  463, 1021,
      387, 1378, 1114, 1116, 1115, 1117,  387, 1118, 1124, 1765,
     1251, 1131, 1136, 1252, 1147, 1148, 1121,  857,  857,  857,
      857,  861,  861,  861,  861,  861,  861,  861,  861,  861,
      861,  861,  861,  861,  861,  861,  861,  861,  861, 1120,
      862,  861, 1123,  863,  861,  861,  861,  861,  861,  861,
      387, 1126, 1126, 1126, 1126, 1126,  387,  387,  387,  861,

      861,  861,  387, 1127,  754,  754,  754,  754,  754, 1280,
     1258, 1265,  387, 1259, 1266, 1281,  755,  633,  387,  387,
     1125, 1137, 1140,  634, 1166, 1766, 1143,  861,  861,  861,
      861,  865,  865,  865,  865,  865,  865,  865,  865,  865,
      865,  865,  865,  865,  865,  865,  865,  865,  865, 1128,
      866,  865, 1130,  867,  865,  865,  865,  865,  865,  865,
      387, 1134, 1134, 1134, 1134, 1134,  387,  387,  387,  865,
      865,  865,  387, 1135,  478, 1272,  868, 1285, 1273, 1769,
     1286, 1292,  387,  387, 1293, 1784, 1144, 1149, 1150, 1388,
     1145,  387, 1389, 1132, 1229,  387, 1152,  865,  865,  865,

      865,  876,  876,  876,  876,  876,  876,  876,  876,  876,
      876,  876,  876,  876,  876,  876,  876,  876,  876, 1138,
      877,  876, 1142,  878,  876,  876,  876,  876,  876,  876,
     1139,  885,  891,  387,  387,  387,  387,  387,  387,  876,
      876,  876, 1340, 1395,  387,  897, 1396, 1405,  387, 1445,
     1406, 1341,  903, 1446,  478,  478,  478,  478, 1153,  387,
     1155,  387, 1157, 1151,  387,  886,  892,  876,  876,  876,
      876,  887,  893, 1154, 1156,  888,  894,  889,  895,  898,
      890,  896, 1158, 1159, 1164,  899,  904, 1167, 1163,  900,
     1198,  901,  905, 1208,  902, 1205,  906, 1212,  907,  911,

      387,  908,  909,  909,  909,  909,  909,  909,  909,  909,
      909,  909,  909,  909,  909,  909,  909,  909,  909,  909,
      387,  910,  909, 1168,  909,  909,  909,  909,  909,  909,
      909,  387,  917,  912,  387,  387,  478,  478,  478,  913,
      909,  909,  909,  914, 1165,  915,  928,  478,  916,  478,
      478,  478,  478,  934, 1030,  478,  732, 1170, 1169, 1171,
     1207, 1209, 1210,  478, 1760,  478,  918, 1036,  909,  909,
      909,  909,  919, 1214, 1047, 1053,  920, 1222,  921,  478,
      929,  922, 1201, 1206, 1211,  723,  930,  935, 1031, 1223,
      931, 1224,  932,  936, 1032,  933, 1215,  937, 1033,  938,

     1034, 1037,  939, 1035, 1068,  478,  364, 1038, 1048, 1054,
     1075, 1039,  368, 1040, 1049, 1055, 1041, 1213, 1050, 1056,
     1051, 1057,  478, 1052, 1058, 1090, 1091, 1091, 1091, 1091,
     1091, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1092, 1090,
     1090, 1090, 1090, 1216, 1093, 1090, 1199, 1094, 1090, 1090,
     1090, 1090, 1090, 1090,  478, 1193, 1193, 1193, 1193, 1193,
     1200, 1194,  478, 1090, 1090, 1090, 1195, 1196, 1299, 1299,
     1299, 1299, 1299, 1303, 1303, 1303, 1303, 1303, 1220, 1412,
     1300, 1235, 1413,  522,  478, 1304, 1221,  478, 1235,  478,
      478, 1090, 1090, 1090, 1090, 1096, 1097, 1097, 1097, 1097,

     1097, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1098, 1096,
     1096, 1096, 1096, 1225, 1099, 1096, 1228, 1100, 1096, 1096,
     1096, 1096, 1096, 1096,  478, 1227, 1231,  518,  518, 1242,
     1249, 1236, 1256, 1096, 1096, 1096, 1263, 1270, 1283, 1290,
     1338, 1306, 1306, 1306, 1306, 1306, 1386, 1333, 1333, 1333,
     1333, 1333, 1234, 1307, 1339,  387,  387, 1230, 1233, 1334,
     1482, 1096, 1096, 1096, 1096,  732,  732,  732,  732,  732,
     1393, 1101, 1243, 1250,  387, 1257, 1102,  733, 1403, 1264,
     1271, 1284, 1291,  387, 1456,  387, 1308,  387,  387, 1387,
      387, 1434, 1309, 1310, 1343, 1343, 1343, 1343, 1343, 1311,

      628,  628,  628,  628,  628, 1470, 1344,  629, 1460,  387,
     1103, 1410, 1461, 1394, 1466,  387, 1104, 1105,  387, 1501,
     1439, 1404,  387, 1106, 1160, 1160, 1160, 1160, 1160, 1160,
     1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160, 1160,
     1160, 1160, 1464, 1161, 1160, 1457, 1162, 1160, 1160, 1160,
     1160, 1160, 1160, 1465, 1411, 1458, 1458, 1458, 1458, 1458,
      387,  387, 1160, 1160, 1160,  387,  478, 1459, 1462, 1462,
     1462, 1462, 1462, 1541, 1544, 1545,  387, 1542, 1445,  723,
     1463, 1469, 1446, 1790, 1468, 1507, 1568, 1448, 1449,  387,
     1160, 1160, 1160, 1160, 1190, 1190, 1190, 1190, 1190, 1190,

     1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190,
     1190, 1190,  477, 1191, 1190,  477, 1192, 1190, 1190, 1190,
     1190, 1190, 1190,  477,  477,  477,  477,  477,  477,  477,
      477,  477, 1190, 1190, 1190,  477,  477,  477,  477,  477,
      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
     1190, 1190, 1190, 1190, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202,  387, 1203, 1202,  387, 1204, 1202, 1202, 1202,
     1202, 1202, 1202, 1435, 1435, 1435, 1435, 1435,  387,  387,

      387,  387, 1202, 1202, 1202, 1436, 1440, 1440, 1440, 1440,
     1440, 1126, 1126, 1126, 1126, 1126,  387, 1795, 1441, 1476,
     1788, 1467, 1471, 1127, 1493, 1473,  387,  387, 1525,  387,
     1202, 1202, 1202, 1202, 1217, 1217, 1217, 1217, 1217, 1217,
     1217, 1217, 1217, 1217, 1217, 1217, 1217, 1217, 1217, 1217,
     1217, 1217, 1472, 1218, 1217, 1437, 1219, 1217, 1217, 1217,
     1217, 1217, 1217,  387, 1474, 1483, 1488,  387, 1442,  387,
      387,  387, 1217, 1217, 1217, 1134, 1134, 1134, 1134, 1134,
     1242,  387,  525, 1489,  754,  723,  387, 1135, 1249,  387,
      531, 1256, 1785,  534, 1503, 1504, 1475, 1491, 1813, 1494,

     1217, 1217, 1217, 1217, 1478, 1478, 1478, 1478, 1478, 1478,
     1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
     1478, 1478, 1484, 1479, 1478, 1492, 1480, 1478, 1478, 1478,
     1478, 1478, 1478, 1495, 1495, 1495, 1495, 1495,  387,  387,
      478,  387, 1478, 1478, 1478, 1496, 1829,  387, 1515, 1515,
     1515, 1515, 1515, 1263,  387,  541,  387,  723,  437,  387,
     1516, 1835, 1836, 1512, 1500, 1514,  387,  387, 1548,  387,
     1478, 1478, 1478, 1478, 1485, 1485, 1485, 1485, 1485, 1485,
     1485, 1485, 1485, 1485, 1485, 1485, 1485, 1485, 1485, 1485,
     1485, 1485, 1498, 1486, 1485, 1499, 1487, 1485, 1485, 1485,

     1485, 1485, 1485, 1502,  387, 1505,  387,  387,  387,  478,
      478,  452, 1485, 1485, 1485, 1517, 1517, 1517, 1517, 1517,
      463,  463,  463,  463,  463,  387, 1837, 1518,  387, 1540,
     1522, 1524,  478, 1555, 1557, 1506,  387, 1511,  387,  387,
     1485, 1485, 1485, 1485, 1508, 1508, 1508, 1508, 1508, 1508,
     1508, 1508, 1508, 1508, 1508, 1508, 1508, 1508, 1508, 1508,
     1508, 1508, 1520, 1509, 1508, 1521, 1510, 1508, 1508, 1508,
     1508, 1508, 1508,  387, 1523, 1561, 1533,  478,  478,  478,
     1519,  518, 1508, 1508, 1508, 1543, 1193, 1193, 1193, 1193,
     1193, 1270, 1194,  544, 1547, 1541,  387, 1195, 1196, 1542,

      478,  478, 1577, 1589, 1853, 1590, 1526,  478, 1556,  478,
     1508, 1508, 1508, 1508, 1527, 1528, 1528, 1528, 1528, 1528,
     1527, 1527, 1527, 1527, 1527, 1527, 1527, 1529, 1527, 1527,
     1527, 1527, 1534, 1530, 1527, 1562, 1531, 1527, 1527, 1527,
     1527, 1527, 1527, 1563,  478,  478,  478, 1564,  478, 1283,
      478,  557, 1527, 1527, 1527, 1570, 1570, 1570, 1570, 1570,
     1290, 1386,  561,  668, 1544, 1545,  478, 1571, 1393, 1532,
      671, 1403, 1410,  688,  691, 1580,  478, 1588, 1581, 1869,
     1527, 1527, 1527, 1527, 1549, 1549, 1549, 1549, 1549, 1549,
     1549, 1549, 1549, 1549, 1549, 1549, 1549, 1549, 1549, 1549,

     1549, 1549, 1569, 1550, 1549,  478, 1551, 1549, 1549, 1549,
     1549, 1549, 1549, 1552, 1552, 1552, 1552, 1552,  518,  387,
      387,  387, 1549, 1549, 1549, 1553, 1572, 1572, 1572, 1572,
     1572,  478, 1858,  522,  478,  723,  478,  478, 1573,  478,
     1761, 1576, 1810, 1239, 1762, 1771, 1239,  478,  387, 1591,
     1549, 1549, 1549, 1549, 1554, 1558, 1558, 1558, 1558, 1558,
     1558, 1558, 1558, 1558, 1558, 1558, 1558, 1558, 1558, 1558,
     1558, 1558, 1558, 1578, 1559, 1558, 1579, 1560, 1558, 1558,
     1558, 1558, 1558, 1558, 1574, 1574, 1574, 1574, 1574, 1782,
      387,  387,  387, 1558, 1558, 1558, 1575, 1582, 1582, 1582,

     1582, 1582, 1239,  525, 1246,  478, 1246, 1193,  478, 1583,
      628,  628,  628,  628,  628, 1850, 1776,  629,  478, 1773,
     1781, 1558, 1558, 1558, 1558, 1565, 1565, 1565, 1565, 1565,
     1565, 1565, 1565, 1565, 1565, 1565, 1565, 1565, 1565, 1565,
     1565, 1565, 1565,  387, 1566, 1565, 1587, 1567, 1565, 1565,
     1565, 1565, 1565, 1565, 1631, 1631, 1631, 1631, 1631,  387,
      387,  387,  387, 1565, 1565, 1565, 1632, 1635, 1635, 1635,
     1635, 1635, 1648, 1648, 1648, 1648, 1648,  387, 1246, 1636,
      531, 1740, 1792, 1778, 1649, 1794, 1797, 1253, 1253,  387,
     1253, 1565, 1565, 1565, 1565, 1584, 1584, 1584, 1584, 1584,

     1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584, 1584,
     1584, 1584, 1584, 1770, 1585, 1584, 1633, 1586, 1584, 1584,
     1584, 1584, 1584, 1584, 1306, 1306, 1306, 1306, 1306, 1637,
      387,  387, 1793, 1584, 1584, 1584, 1307, 1650, 1650, 1650,
     1650, 1650, 1462, 1462, 1462, 1462, 1462,  387,  387, 1651,
      387,  387,  387,  387, 1463, 1707, 1707, 1707, 1707, 1707,
      387, 1584, 1584, 1584, 1584,  387, 1774, 1708, 1791, 1308,
      387, 1744, 1750,  387, 1805, 1309, 1310,  387, 1652, 1767,
     1772,  387, 1311, 1333, 1333, 1333, 1333, 1333, 1786, 1787,
     1796, 1668, 1775, 1806,  387, 1334, 1343, 1343, 1343, 1343,

     1343, 1798, 1777,  387, 1677, 1745, 1751,  387, 1344, 1709,
      387, 1746, 1752,  387, 1802, 1747, 1753, 1748, 1754, 1799,
     1749, 1755, 1462, 1462, 1462, 1462, 1462, 1800,  387,  387,
     1768, 1804, 1821, 1801, 1463, 1495, 1495, 1495, 1495, 1495,
      534, 1803, 1260, 1260, 1260,  541, 1267, 1496, 1267, 1267,
      544, 1819, 1818, 1274, 1678, 1734, 1734, 1734, 1734, 1734,
     1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
     1734, 1734, 1734,  386, 1735, 1734,  386, 1736, 1734, 1734,
     1734, 1734, 1734, 1734,  386,  386,  386,  386,  386,  386,
      386,  386,  386, 1734, 1734, 1734,  386,  386,  386,  386,

      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386, 1734, 1734, 1734, 1734, 1435, 1435, 1435, 1435, 1435,
     1440, 1440, 1440, 1440, 1440,  387,  387, 1436,  387,  387,
      478,  387, 1441,  387, 1458, 1458, 1458, 1458, 1458, 1779,
     1779, 1779, 1779, 1779,  478,  478, 1459,  478, 1820,  478,
      478, 1780,  478,  478, 1856,  478,  478, 1811,  478,  518,
      387, 1515, 1515, 1515, 1515, 1515, 1851, 1817, 1854, 1812,
     1822, 1274, 1830, 1516, 1834, 1274, 1855, 1437, 1875, 1886,
     1876, 1857, 1442, 1763, 1860, 1863,  478, 1873, 1859, 1887,

      478,  478, 1764, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
     1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807, 1807,
     1807, 1874, 1808, 1807, 1888, 1809, 1807, 1807, 1807, 1807,
     1807, 1807, 1517, 1517, 1517, 1517, 1517, 1864, 1872, 1889,
     1890, 1807, 1807, 1807, 1518, 1891, 1892, 1552, 1552, 1552,
     1552, 1552, 1861, 1861, 1861, 1861, 1861,  557,  518, 1553,
     1287, 1287, 1287,  561, 1862, 1294, 1294, 1294, 1634, 1807,
     1807, 1807, 1807,  478, 1893, 1895, 1638, 1570, 1570, 1570,
     1570, 1570, 1896, 1823, 1823, 1823, 1823, 1823, 1852, 1571,
     1885, 1898, 1899, 1900, 1901, 1824, 1902, 1519, 1814, 1814,

     1814, 1814, 1814, 1814, 1814, 1814, 1814, 1814, 1814, 1814,
     1814, 1814, 1814, 1814, 1814, 1814, 1903, 1815, 1814, 1645,
     1816, 1814, 1814, 1814, 1814, 1814, 1814, 1825, 1905, 1910,
     1912, 1865, 1865, 1865, 1865, 1865, 1814, 1814, 1814, 1306,
     1913, 1826, 1827, 1866, 1867, 1828, 1916, 1904, 1572, 1572,
     1572, 1572, 1572, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
     1573, 1926, 1927, 1928, 1814, 1814, 1814, 1814, 1831, 1831,
     1831, 1831, 1831, 1831, 1831, 1831, 1831, 1831, 1831, 1831,
     1831, 1831, 1831, 1831, 1831, 1831, 1929, 1832, 1831, 1931,
     1833, 1831, 1831, 1831, 1831, 1831, 1831, 1868, 1838, 1844,

     1574, 1574, 1574, 1574, 1574, 1932, 1831, 1831, 1831, 1933,
     1934, 1935, 1575, 1582, 1582, 1582, 1582, 1582, 1936, 1870,
     1870, 1870, 1870, 1870, 1937, 1583, 1939, 1940, 1941, 1942,
     1943, 1871, 1839, 1845, 1831, 1831, 1831, 1831, 1840, 1846,
      478, 1944, 1841, 1847, 1842, 1848, 1947, 1843, 1849, 1877,
     1877, 1877, 1877, 1877, 1631, 1631, 1631, 1631, 1631, 1948,
     1949, 1878, 1950, 1951, 1952, 1953, 1632, 1954, 1956, 1957,
      478, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879,
     1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1963,
     1880, 1879, 1964, 1881, 1879, 1879, 1879, 1879, 1879, 1879,

     1635, 1635, 1635, 1635, 1635, 1966, 1973, 1974,  649, 1879,
     1879, 1879, 1636,  668, 1390, 1390, 1633, 1390, 1650, 1650,
     1650, 1650, 1650,  671, 1906, 1906, 1906, 1906, 1906, 1397,
     1651, 1397, 1397, 1976,  688, 1407, 1907, 1879, 1879, 1879,
     1879, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882,
     1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1911,
     1883, 1882, 1637, 1884, 1882, 1882, 1882, 1882, 1882, 1882,
     1407, 1407,  691, 1908, 1914, 1914, 1914, 1914, 1914, 1882,
     1882, 1882, 1909, 1414, 1414, 1414, 1915, 1924, 1924, 1924,
     1924, 1924, 1945, 1945, 1945, 1945, 1945, 1978, 1979, 1925,

     1980,  387,  723, 1981, 1946, 1739,  387, 1882, 1882, 1882,
     1882, 1960, 1960, 1960, 1960, 1960, 1967, 1967, 1967, 1967,
     1967, 1435, 1984, 1961, 1743, 1440, 1986, 1988, 1968, 1982,
     1989, 1990, 1990, 1985, 1991, 1992, 1993, 1995, 1997, 1983,
     1996, 1997, 1998, 1999, 2001, 2002, 2003, 1760,  387, 2008,
     2009, 2011,  723, 2015,  387, 2028,  387,  387, 1784, 2012,
     1969, 2017, 2017, 2017, 2017, 2017, 1785, 1790,  387, 1987,
     2047,  387, 2053, 2018, 1970, 1971,  387, 2019, 1972, 1994,
     2016, 2021,  387,  387,  387,  387,  387, 2004, 2005, 2005,
     2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,

     2005, 2005, 2005, 2005, 2005, 2005, 2013, 2006, 2005, 2020,
     2007, 2005, 2005, 2005, 2005, 2005, 2005,  387, 2023, 2029,
      387, 2024, 2058,  387,  387,  387, 2005, 2005, 2005, 2025,
     2025, 2025, 2025, 2025, 1779, 1779, 1779, 1779, 1779, 2022,
      387, 2026, 2027, 1126, 1134, 2041, 1780, 2051, 2030, 2036,
      387, 2031, 2037,  387, 2005, 2005, 2005, 2005, 2032, 2032,
     2032, 2032, 2032, 2034, 2034, 2034, 2034, 2034, 2057,  723,
     2033, 2066, 2063, 2052,  387, 2035,  387,  723, 1829,  387,
     2079, 2080,  387, 2081,  387, 2038, 2038, 2038, 2038, 2038,
     2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038, 2038,

     2038, 2038, 2038,  387, 2039, 2038, 2062, 2040, 2038, 2038,
     2038, 2038, 2038, 2038, 2045, 2045, 2045, 2045, 2045,  387,
      387,  387, 2083, 2038, 2038, 2038, 2046, 2060, 2060, 2060,
     2060, 2060,  387,  723, 2087,  387, 2059,  387,  387, 2061,
     2069, 2064, 2077, 2088, 2089, 2094, 2078,  387,  387, 2067,
     2094, 2038, 2038, 2038, 2038, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2068, 2043, 2042, 2070, 2044, 2042, 2042,
     2042, 2042, 2042, 2042, 2095, 2084, 2085, 2085, 2085, 2085,
     2085, 2096, 2101, 2042, 2042, 2042, 2101, 2102, 2086, 1823,

     1823, 1823, 1823, 1823, 2103, 2092, 2099,  387, 2093, 2100,
     1850, 1824, 2090, 2097, 2105,  478, 2107, 2118, 2121, 2122,
     2124, 2042, 2042, 2042, 2042, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048, 2048,
     2048, 2048, 2048, 1825, 2049, 2048,  478, 2050, 2048, 2048,
     2048, 2048, 2048, 2048, 2104, 2091, 2098, 1826, 1827,  478,
      478, 1828, 2126, 2048, 2048, 2048,  478, 2136, 1865, 1865,
     1865, 1865, 1865, 2132,  478,  478, 2108,  478,  478, 2116,
     1866, 1867, 2119, 2138,  478, 2139,  478,  518,  478,  478,
     2120, 2048, 2048, 2048, 2048, 2054, 2054, 2054, 2054, 2054,

     2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054, 2054,
     2054, 2054, 2054, 2109, 2055, 2054, 2110, 2056, 2054, 2054,
     2054, 2054, 2054, 2054, 2111, 2112, 2127,  478, 2140, 2141,
     2142, 2143, 2144, 2054, 2054, 2054, 2145, 1861, 1861, 1861,
     1861, 1861, 1877, 1877, 1877, 1877, 1877, 1895, 2147, 1862,
     1631, 1898, 1635, 2149, 1878, 2131,  518, 2151, 2146, 2152,
     2148, 2054, 2054, 2054, 2054, 2071, 2071, 2071, 2071, 2071,
     2071, 2071, 2071, 2071, 2071, 2071, 2071, 2071, 2071, 2071,
     2071, 2071, 2071, 2135, 2072, 2071, 2117, 2073, 2071, 2071,
     2071, 2071, 2071, 2071, 2137, 2133, 2133, 2133, 2133, 2133,

     2153, 1904, 1910, 2071, 2071, 2071, 2154, 2134, 2155, 2157,
     2158, 1870, 1870, 1870, 1870, 1870,  478, 2160, 1906, 1906,
     1906, 1906, 1906, 1871, 2161, 2162, 2163, 2164, 2165, 2166,
     1907, 2071, 2071, 2071, 2071, 2074, 2074, 2074, 2074, 2074,
     2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074, 2074,
     2074, 2074, 2074, 2125, 2075, 2074, 2167, 2076, 2074, 2074,
     2074, 2074, 2074, 2074, 2168, 2171, 2174, 1908, 1914, 1914,
     1914, 1914, 1914, 2074, 2074, 2074, 1909, 2176, 1931, 2178,
     1915, 2017, 2017, 2017, 2017, 2017, 1333, 1924, 1924, 1924,
     1924, 1924, 2179, 2018, 2177, 2180, 2181, 2182, 1939, 1925,

     2185, 2074, 2074, 2074, 2074, 2113, 2113, 2113, 2113, 2113,
     2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113,
     2113, 2113, 2113, 2186, 2114, 2113, 2189, 2115, 2113, 2113,
     2113, 2113, 2113, 2113, 2169, 2190, 2192, 2193, 2170, 2194,
     2196, 2197, 2201, 2113, 2113, 2113, 2172, 2172, 2172, 2172,
     2172, 2034, 2034, 2034, 2034, 2034, 1343, 2202, 2173, 1973,
     2207, 2205, 2208, 2035, 2183, 2206, 2209, 2211, 2212, 2213,
     2214, 2113, 2113, 2113, 2113, 2128, 2128, 2128, 2128, 2128,
     2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128, 2128,
     2128, 2128, 2128, 2216, 2129, 2128, 2217, 2130, 2128, 2128,

     2128, 2128, 2128, 2128, 1945, 1945, 1945, 1945, 1945, 1982,
     2219, 1985, 1990, 2128, 2128, 2128, 1946, 2060, 2060, 2060,
     2060, 2060, 2198, 2198, 2198, 2198, 2198,  387, 1986, 2061,
     1444, 2221, 1444, 2222, 2199, 1960, 1960, 1960, 1960, 1960,
     2223, 2128, 2128, 2128, 2128, 1997, 2188, 1961, 1967, 1967,
     1967, 1967, 1967, 1993, 2225, 1447, 1447, 2226, 2227, 2228,
     1968, 2230,  387, 2218,  387,  723, 2232, 2233, 2011, 1458,
     2235, 2235, 2235, 2235, 2235, 2015, 2200, 2234, 1462, 2242,
      387,  387, 2236,  387, 2252,  387, 2238, 2254,  387, 2031,
     2261,  387, 1969, 2239, 2239, 2239, 2239, 2239, 2263, 2037,

     2231, 2243,  387,  723,  387, 2240, 1970, 1971, 2244, 2246,
     1972,  387,  387,  387,  387, 2017, 2017, 2017, 2017, 2017,
     2245, 2247, 2248, 2248, 2248, 2248, 2248, 2018, 2025, 2025,
     2025, 2025, 2025,  723, 2249, 2237, 2258, 2264, 2267, 2268,
     2026,  387,  723,  387,  387,  723,  387,  723, 2265,  387,
      387, 2277, 2272, 2034, 2034, 2034, 2034, 2034, 2269, 2269,
     2269, 2269, 2269, 2066,  387, 2035,  723,  387, 2241, 1515,
      723, 2251, 2032, 2032, 2032, 2032, 2032, 2283, 2271,  387,
     2288, 2273, 2275, 2289, 2033, 2292, 2293, 2250, 2255, 2255,
     2255, 2255, 2255, 2255, 2255, 2255, 2255, 2255, 2255, 2255,

     2255, 2255, 2255, 2255, 2255, 2255, 2262, 2256, 2255,  387,
     2257, 2255, 2255, 2255, 2255, 2255, 2255, 2045, 2045, 2045,
     2045, 2045,  387, 2270, 2259,  387, 2255, 2255, 2255, 2046,
     2260, 2060, 2060, 2060, 2060, 2060,  387, 2274, 2278, 2278,
     2278, 2278, 2278, 2061,  387, 2280, 2282,  387,  387, 2281,
     2279, 2290, 2083, 1823, 2255, 2255, 2255, 2255, 2298,  387,
     2291, 2294, 2300, 2301, 2090, 2094, 1540, 2303, 2285, 1540,
     2266, 2287, 2304, 2305, 2284, 2295, 2295, 2295, 2295, 2295,
     2097, 2101, 1543, 2307, 2276, 2286, 1543, 2296, 2085, 2085,
     2085, 2085, 2085, 2308, 2309,  478,  387, 2107, 1552,  478,

     2086, 2314, 2314, 2314, 2314, 2314, 2312,  478, 2317, 2317,
     2317, 2317, 2317, 2315,  478,  478,  478, 2321, 2323,  478,
     2318, 2327,  478, 2313, 2328,  478, 2124, 1572, 2330,  478,
     2332,  478,  478, 2310,  478, 2329,  478, 2338, 2319, 2339,
     2341, 2348, 2349, 2324, 2350, 2316, 2320, 2325, 2351, 2297,
     2133, 2133, 2133, 2133, 2133, 2352, 2335, 2146, 2334, 2333,
     2336, 2353, 2134, 2342, 2342, 2342, 2342, 2342, 3608, 3608,
     3608, 3608, 3608, 2148, 2354, 2343, 2355, 2357, 2358, 2359,
     3608, 2157, 2160, 2363,  518, 2364, 2368, 1906, 1650,  518,
     2345, 2345, 2345, 2345, 2345, 2360, 2362, 2365, 2365, 2365,

     2365, 2365, 2346, 2369, 2337, 2370, 2371, 2372, 2373, 2366,
     2375, 2377, 2379, 2344, 2172, 2172, 2172, 2172, 2172, 2177,
     2380, 2381, 2382, 2383, 2384, 2183, 2173, 2385, 2386, 2387,
     2389, 2390, 2391, 2392, 2278, 2278, 2278, 2278, 2278, 2393,
     2394, 2198, 2198, 2198, 2198, 2198, 2279, 2396, 2397, 2399,
     2400, 2401, 2402, 2199, 2403, 2405, 2406, 2376, 2211, 1967,
     2410, 2411, 2412, 2404, 2413, 1444, 1990, 2407, 2408, 2408,
     2408, 2408, 2408, 2414, 1990, 1990, 1447, 2415, 1997, 1997,
     2409, 1997,  387, 2420, 2421, 2234, 2235, 2235, 2235, 2235,
     2235, 2238, 2431, 2432, 2434, 2395,  387,  387, 2236,  387,

     2441, 2441, 2441, 2441, 2441, 2445, 2419, 2446, 2248, 2248,
     2248, 2248, 2248, 2448, 2254, 1779,  387, 2442,  723, 2436,
     2249,  387,  387, 2449, 2451, 2452, 2454, 2455, 2435, 2457,
     2462, 2464, 2465,  387,  387,  387,  387, 2437, 2269, 2269,
     2269, 2269, 2269,  387, 2470, 2472, 2475,  387, 2450,  387,
     2283, 2237, 2239, 2239, 2239, 2239, 2239, 2461,  387,  387,
      387, 2466, 2467, 2488, 2240, 2443, 2489, 2468, 2490, 2491,
     2492, 2493, 2294, 2250, 2499, 2500, 2502, 2503, 2504, 2477,
     2469, 2482, 2484, 2483, 1540, 2476, 2094, 2094, 2094, 1543,
     2101, 2101, 2101, 2312, 2422, 2423, 2424, 2508, 2425, 2513,

      478,  478, 2323, 2270, 2327, 2426, 2427,  478,  478, 2428,
     2519, 2329, 2429, 2430, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438, 2438,
     2438, 2438, 2505, 2439, 2438, 2509, 2440, 2438, 2438, 2438,
     2438, 2438, 2438, 1861, 2332, 2517,  478,  478, 2526, 2528,
     2341, 2514, 2438, 2438, 2438, 2485, 2485, 2485, 2485, 2485,
     2278, 2278, 2278, 2278, 2278, 1865, 1870, 2486,  478, 2533,
     2534, 1877, 2279, 2518, 2521, 2535,  387, 2525, 2522, 2530,
     2438, 2438, 2438, 2438, 2458, 2458, 2458, 2458, 2458, 2458,
     2458, 2458, 2458, 2458, 2458, 2458, 2458, 2458, 2458, 2458,

     2458, 2458,  478, 2459, 2458, 2523, 2460, 2458, 2458, 2458,
     2458, 2458, 2458, 2473, 2506, 2506, 2506, 2506, 2506,  518,
     2487, 2474, 2458, 2458, 2458, 2536, 2507, 2314, 2314, 2314,
     2314, 2314, 2538, 2540, 2543,  478, 2544, 2360, 2362, 2315,
     2524, 2547, 2549, 2550, 2551, 2552, 2554, 2555, 2375, 2531,
     2458, 2458, 2458, 2458, 2478, 2478, 2478, 2478, 2478, 2478,
     2478, 2478, 2478, 2478, 2478, 2478, 2478, 2478, 2478, 2478,
     2478, 2478, 2557, 2479, 2478, 2559, 2480, 2478, 2478, 2478,
     2478, 2478, 2478, 2317, 2317, 2317, 2317, 2317, 2561, 2564,
     2566, 2567, 2478, 2478, 2478, 2318, 2515, 2515, 2515, 2515,

     2515, 1924, 2342, 2342, 2342, 2342, 2342, 2568, 2516, 2556,
     2389, 1945, 2571, 2481, 2343, 2573, 2574,  478, 2576, 2570,
     2478, 2478, 2478, 2478, 2295, 2295, 2295, 2295, 2295, 2345,
     2345, 2345, 2345, 2345, 2577, 2579, 2296, 2399, 2582, 1960,
     2583, 2346, 2545, 2545, 2545, 2545, 2545, 2581, 2584, 2585,
     2586, 2587, 2588, 2407, 2546, 2594, 2604,  723, 2605, 2365,
     2365, 2365, 2365, 2365, 2599, 2606, 2608, 2494, 2495, 2609,
     2612, 2366, 2610, 2611, 2532,  387, 2615, 2613, 2607, 2614,
     2616, 2617, 2496, 2497, 2619, 2620, 2498, 2510, 2510, 2510,
     2510, 2510, 2510, 2510, 2510, 2510, 2510, 2510, 2510, 2510,

     2510, 2510, 2510, 2510, 2510, 2548, 2511, 2510, 2598, 2512,
     2510, 2510, 2510, 2510, 2510, 2510, 2562, 2562, 2562, 2562,
     2562, 2434,  387, 2635,  387, 2510, 2510, 2510, 2563, 2600,
     2600, 2600, 2600, 2600, 2017, 2636,  723, 2448,  387, 2449,
     2640, 2601, 2621, 3608, 2441, 2441, 2441, 2441, 2441, 2641,
     2602, 2454, 2643, 2510, 2510, 2510, 2510, 2408, 2408, 2408,
     2408, 2408, 2622, 2623, 2623, 2623, 2623, 2623, 2025, 2409,
     2629, 2457,  387, 2638, 2648, 2624, 2637, 2639, 2630, 2630,
     2630, 2630, 2630, 2032,  387, 2034, 2464,  387,  723, 2045,
      387, 2642, 2654, 2644, 2603, 3608, 2655, 2649, 2658, 2632,

     2589, 2590, 2472, 2060, 2660, 2661, 2663,  387, 2677, 2443,
     2678, 2659, 2679, 2656,  387, 2591, 2592, 2657, 2680, 2593,
     2683, 2625, 2626, 2626, 2626, 2626, 2626, 2626, 2626, 2626,
     2626, 2626, 2626, 2626, 2626, 2626, 2626, 2626, 2626, 2626,
      387, 2627, 2626, 2633, 2628, 2626, 2626, 2626, 2626, 2626,
     2626,  723, 2664,  387, 2684, 2685, 2686, 2687, 3608, 2688,
     2626, 2626, 2626, 2689, 2665, 2681, 2681, 2681, 2681, 2681,
     2691, 2692, 2502, 2085, 2698,  477,  477, 2682, 2701, 2514,
     2669, 2693, 2700, 2703, 2518, 2521, 2714, 2528, 2626, 2626,
     2626, 2626, 2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645,

     2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645, 2645,
     2530, 2646, 2645, 2717, 2647, 2645, 2645, 2645, 2645, 2645,
     2645, 2708,  477, 2719,  518, 2721, 2722,  477, 2712, 2725,
     2645, 2645, 2645, 2670, 2670, 2670, 2670, 2670, 2713, 2133,
     2726, 2485, 2485, 2485, 2485, 2485,  477, 2715, 2716, 2728,
     2730, 2732, 2733, 2486,  387, 2734, 2736, 2737, 2645, 2645,
     2645, 2645, 2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651,
     2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651, 2651,
     2556, 2652, 2651, 2738, 2653, 2651, 2651, 2651, 2651, 2651,
     2651, 2559, 2675, 2695, 2695, 2695, 2695, 2695, 2671, 2676,

     2651, 2651, 2651, 2740, 2742, 2696, 2487, 2570, 2749, 2506,
     2506, 2506, 2506, 2506,  478, 2515, 2515, 2515, 2515, 2515,
     2752, 2507, 2579, 2581, 2755, 2756, 2757, 2516, 2651, 2651,
     2651, 2651, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666,
     2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666,
     2697, 2667, 2666, 2172, 2668, 2666, 2666, 2666, 2666, 2666,
     2666, 2739, 2744, 2744, 2744, 2744, 2744, 2198, 2760, 2702,
     2666, 2666, 2666, 2761, 2745, 2753, 2762, 2763, 2764, 2545,
     2545, 2545, 2545, 2545, 2562, 2562, 2562, 2562, 2562, 2765,
     2766, 2546, 2768, 2771, 2773, 2774, 2563, 2775, 2666, 2666,

     2666, 2666, 2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672,
     2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672,
     2727, 2673, 2672,  387, 2674, 2672, 2672, 2672, 2672, 2672,
     2672, 3608, 3608, 3608, 3608, 3608, 2776, 2777, 2741, 2778,
     2672, 2672, 2672, 3608, 2758, 2758, 2758, 2758, 2758, 2779,
      723, 2780,  478, 2781, 2782, 2783, 2759, 2772, 2784, 2769,
     2785, 2600, 2600, 2600, 2600, 2600, 2786, 2787, 2672, 2672,
     2672, 2672, 2619, 2601, 2239, 2789, 2621, 2790, 2793,  387,
     2635, 2791, 2788, 2800, 2699, 2704, 2704, 2704, 2704, 2704,
     2704, 2704, 2704, 2704, 2704, 2704, 2704, 2704, 2704, 2704,

     2704, 2704, 2704,  387, 2705, 2704, 2637, 2706, 2704, 2704,
     2704, 2704, 2704, 2704,  723, 2623, 2623, 2623, 2623, 2623,
     2803, 3608, 2804, 2704, 2704, 2704, 2603, 2624, 2794, 2794,
     2794, 2794, 2794, 2642, 2805, 2644, 2796,  387, 2798,  387,
     2795, 2630, 2630, 2630, 2630, 2630, 2799, 2806, 2649,  387,
      387, 2704, 2704, 2704, 2704, 2709, 2709, 2709, 2709, 2709,
     2709, 2709, 2709, 2709, 2709, 2709, 2709, 2709, 2709, 2709,
     2709, 2709, 2709, 2792, 2710, 2709, 2801, 2711, 2709, 2709,
     2709, 2709, 2709, 2709, 2630, 2630, 2630, 2630, 2630,  723,
      723,  723,  387, 2709, 2709, 2709, 2802, 3608, 3608, 2809,

      723, 2811,  387,  387, 2659, 2632, 2633, 2808, 2812, 2813,
     2663, 2278,  387,  387,  387,  387, 2819, 2820,  723, 2814,
      723, 2709, 2709, 2709, 2709, 3608, 2821, 3608, 2823, 2807,
     2810, 2817, 2817, 2817, 2817, 2817, 2670, 2670, 2670, 2670,
     2670, 2824, 2825, 2818, 2816, 2826, 2828, 2829, 2815, 2633,
     2830, 2831,  387, 2681, 2681, 2681, 2681, 2681, 2832, 2833,
     2835, 2836, 2691, 2295, 2838, 2682, 2693, 2839, 2834, 2841,
      478, 2837, 2695, 2695, 2695, 2695, 2695, 2845,  478, 2847,
      478, 2848,  478,  478, 2696,  478,  478, 2851, 2715,  518,
     2853, 2719, 2345, 2856, 2857, 2858, 2859, 2861, 2862, 2732,

     2854, 2671, 2843, 2842, 2365, 2867, 2865, 2865, 2865, 2865,
     2865, 2868, 2863, 2869, 2739, 2827, 2871, 2850, 2866, 2849,
     2852, 2873, 2744, 2744, 2744, 2744, 2744, 2875, 2876, 2877,
     2874, 2753, 2878, 2879, 2745, 2880, 2758, 2758, 2758, 2758,
     2758, 2882, 2883, 2884, 2885, 2886, 2887, 2889, 2759, 2890,
     2768, 2408, 2892, 2898, 2899, 2888,  387, 2900, 2901, 2891,
     2893, 2893, 2893, 2893, 2893, 2902, 2903, 2904, 2905, 2906,
     2907, 2908, 2909, 2910, 2911, 2912, 2913, 2788, 2915,  387,
      723, 2895, 2918, 2920, 2922,  387, 2799, 2917, 2794, 2794,
     2794, 2794, 2794, 2630, 2630, 2630, 2630, 2630, 2881, 2926,

     2795, 2798, 2798, 2798, 2798, 2798,  387, 2928, 2923, 2929,
     2931, 2932, 2916, 2925,  387,  387,  387, 2937, 2938, 2814,
      387,  387, 2941, 2942, 2943, 2896, 2817, 2817, 2817, 2817,
     2817, 2823, 2944, 2946, 2927, 2947, 2948, 2921, 2818, 2949,
     2945, 2951, 2933, 2934, 2952, 2940, 2953, 2954, 2939, 2955,
     2935, 2956, 2957, 2958, 2959, 2837, 2960, 2841, 2633, 2506,
      478,  478, 2847, 2515,  478,  478,  478, 2962, 2970, 2972,
     2854, 2966,  518, 2974, 2975, 2861, 2545, 2978, 2863, 2981,
     2982, 2984, 2873, 2963, 2977, 2988, 2989, 2562, 2990, 2969,
     2991, 2992, 2967, 2964, 2968, 2986, 2971, 2865, 2865, 2865,

     2865, 2865, 2993, 2994, 2996, 2997, 2998, 2999, 3000, 2866,
     3001, 3002, 3003, 3004, 2891,  387, 2893, 2893, 2893, 2893,
     2893, 2893, 2893, 2893, 2893, 2893, 2898, 3007, 3009, 3010,
     3011, 3012, 3013, 3014, 3015, 3008, 3016, 3017, 3018, 3019,
     3020, 3021, 2895, 3022, 3023, 3026, 2979,  387, 2920, 2623,
     3028, 3030, 3005,  387, 2445, 2980, 3032, 3027, 2630, 2630,
     2630, 2630, 2630,  387, 3034, 3035, 3037,  387,  387, 3044,
      387,  387, 2941, 3047, 2945, 3050, 3051, 3031, 3052, 2951,
     3054, 2896, 2681, 3025, 3033, 3055, 2896, 3056, 3038, 3057,
     3053, 3045, 3048, 3048, 3048, 3048, 3048, 3058, 3061, 3062,

     3039, 3063, 2962, 3046, 3049, 3608, 3072, 2944, 2944, 2944,
     2944, 2944, 3073, 2966, 3074, 3075, 3076, 3077,  478, 2486,
     3079, 3080,  478, 2633, 3040, 3040, 3040, 3040, 3040, 3040,
     3040, 3040, 3040, 3040, 3040, 3040, 3040, 3040, 3040, 3040,
     3040, 3040, 3064, 3041, 3040,  478, 3042, 3040, 3040, 3040,
     3040, 3040, 3040,  478, 3066,  478,  518, 3081, 2675, 2988,
     3088, 3089, 3040, 3040, 3040, 2676, 3059, 3059, 3059, 3059,
     3059, 3608, 3608, 2744, 3090, 3065, 3067, 3068, 3060, 2977,
     2986, 3082, 3069, 3069, 3069, 3069, 3069, 2996, 3071, 3092,
     3040, 3040, 3040, 3040, 3070, 3084, 3084, 3084, 3084, 3084,

     3086, 3086, 3086, 3086, 3086, 2758, 3093, 3085, 3094, 3095,
     3096, 3099, 3087, 3091, 3097, 3097, 3097, 3097, 3097, 3100,
      387, 2893, 2893, 2893, 2893, 2893, 3098, 3007, 3007, 3007,
     3007, 3007, 3608, 3104, 3105, 3106, 3107, 3108, 3109, 3103,
     3008, 3110, 3111, 3112, 3101, 3113, 3114, 3115, 3116, 3117,
     3118, 3119, 3120, 3608, 3121,  387, 3030, 2794, 3125,  387,
     3129, 3027,  387,  387,  387, 3122, 3123, 3123, 3123, 3123,
     3123,  723, 3132, 3132, 3132, 3132, 3132,  387, 3124,  387,
     3136, 3138, 3139, 3141, 3133, 3142, 2896,  387, 3143, 3126,
     3608, 3144, 3130, 3048, 3048, 3048, 3048, 3048, 3053, 3145,

     3131, 3146, 3148, 3149, 3150, 3049, 3059, 3059, 3059, 3059,
     3059, 3151,  478,  478,  478, 3159, 3134, 3135, 3060, 3152,
     3152, 3152, 3152, 3152,  478, 3069, 3069, 3069, 3069, 3069,
     3161, 3153,  518, 3162, 3163, 3164, 3154, 3070, 3165, 3166,
      478, 3079, 3168, 3169, 2865, 3171, 3608, 3173, 3174, 3176,
     3155, 3137, 3167, 3156, 3082, 3608, 3177, 3084, 3084, 3084,
     3084, 3084, 3157, 3091, 3178, 3179, 3180, 3158, 3147, 3085,
     3160, 3086, 3086, 3086, 3086, 3086, 3181, 3097, 3097, 3097,
     3097, 3097, 3183, 3087, 3184, 3185,  387, 2771, 3187, 3098,
     2893, 2893, 2893, 2893, 2893, 3189, 3190, 3191, 3192, 3170,

     3193, 3194, 3195, 3196, 3199, 3197, 3197, 3197, 3197, 3197,
     3200, 3201, 3202,  387, 3204, 3205, 3186, 3198, 3608, 3123,
     3123, 3123, 3123, 3123,  387, 3208, 3122,  387,  387, 3172,
     3212, 3124, 3132, 3132, 3132, 3132, 3132,  387, 2941, 3182,
     3216, 3218, 3219, 3220, 3133, 3214, 3214, 3214, 3214, 3214,
     3203, 3223, 3207, 3224, 3225, 2896, 3209, 3215, 3226, 3228,
     3229, 3230,  478, 3238,  478, 3210,  387, 3152, 3152, 3152,
     3152, 3152, 3240, 3243, 3244, 3213, 3246, 3247, 3248, 3153,
     3232, 3232, 3232, 3232, 3232, 3251, 3211, 3236, 3236, 3236,
     3236, 3236, 3233, 3241, 3241, 3241, 3241, 3241, 3608, 3237,

     3234,  478, 3235, 3253, 3254, 3242, 3167, 3256,  478, 3257,
     3258, 3261, 3262, 3263,  518, 3264, 3266, 3267, 3268,  387,
     3270, 3271, 3272, 3273, 3274, 3275, 3275, 3275, 3275, 3275,
     3277, 3278, 3279, 3280, 3281, 3282, 3283, 3276, 3197, 3197,
     3197, 3197, 3197, 3284, 3269,  387, 3286, 3287,  387, 3289,
     3198,  387,  387, 3292, 3294,  387, 3214, 3214, 3214, 3214,
     3214, 3296, 3218, 3048, 3301, 3302, 3303, 3228, 3215, 3285,
     3059, 3297, 3305, 3306,  478,  478, 3240, 3069, 3304, 3295,
     3288, 3315, 3316, 3290, 3317, 3313, 3318, 3253, 3291, 3232,
     3232, 3232, 3232, 3232, 3307, 3307, 3307, 3307, 3307, 3311,

     3084, 3233, 3321, 3256, 3326, 3327, 3308, 3309, 3320, 3328,
     3310, 3236, 3236, 3236, 3236, 3236, 3241, 3241, 3241, 3241,
     3241, 3086, 3266, 3237, 3097, 3330, 3331, 3332, 3242, 3322,
     3335, 3336, 3329, 3337, 3275, 3275, 3275, 3275, 3275, 3342,
     3344, 3344, 3344, 3344, 3344, 3346, 3276, 3348, 3351, 3357,
     3358,  387, 3345, 3349, 3349, 3349, 3349, 3349, 3352, 3352,
     3352, 3352, 3352,  387,  387, 3350,  387, 3294, 3132, 3368,
     3353, 3354, 3354, 3354, 3354, 3354, 3365, 3338, 3608, 3339,
     3340, 3356, 3369, 3355, 3371, 3372, 3297, 3373, 3341, 3359,
     3361, 3363, 3363, 3363, 3363, 3363, 3366, 3366, 3366, 3366,

     3366, 3608, 3374, 3364,  478, 3362, 3380, 3608, 3367, 3304,
     3307, 3307, 3307, 3307, 3307, 3313, 3381,  387, 3382, 3383,
     3385, 3608, 3308, 3309, 3376, 3376, 3376, 3376, 3376, 3320,
     3608, 3608, 3386, 3387,  723, 3389, 3377, 3390, 3322, 3329,
     3391, 3388, 3392, 3375, 3393,  478, 3394, 3395, 3397, 3344,
     3344, 3344, 3344, 3344, 3398, 3399, 3399, 3399, 3399, 3399,
     3348, 3345, 3197, 3402, 3403, 3405, 3407, 3400, 3409,  387,
     3401, 3349, 3349, 3349, 3349, 3349, 3352, 3352, 3352, 3352,
     3352, 3410, 3411, 3350, 3412,  387, 3415, 3608, 3353, 3354,
     3354, 3354, 3354, 3354, 3408, 3365, 3418, 3406, 3419, 3423,

     3425, 3355, 3363, 3363, 3363, 3363, 3363, 3413, 3366, 3366,
     3366, 3366, 3366,  478, 3364, 3416, 3416, 3416, 3416, 3416,
     3367, 3426, 3404, 3429, 3430, 3433, 3434, 3417, 3376, 3376,
     3376, 3376, 3376, 3435, 3436, 3424, 3437, 3438, 3439, 3397,
     3377, 3427, 3427, 3427, 3427, 3427, 3275, 3442, 3399, 3399,
     3399, 3399, 3399, 3428, 3440, 3414, 3443, 3608, 3445, 3446,
     3400, 3447, 3449, 3451, 3452, 3401, 3453, 3454,  723,  723,
      387, 3458, 3460, 3462, 3423, 3455, 3456, 3416, 3416, 3416,
     3416, 3416, 3307,  478, 3467, 3468, 3470, 3473, 3474, 3417,
     3465, 3427, 3427, 3427, 3427, 3427, 3475, 3476, 3477, 3478,

     3479, 3608, 3442, 3428, 3344, 3482, 3445, 3349, 3457, 3440,
     3484, 3485, 3480, 3449, 3352, 3483, 3451, 3354, 3490,  723,
      387, 3466, 3486, 3492, 3460, 3487, 3488, 3363, 3494, 3496,
     3608,  478, 3498, 3499, 3500, 3493, 3502, 3503, 3465, 3461,
     3504, 3504, 3504, 3504, 3504, 3506, 3507, 3508, 3491, 3509,
     3510, 3482, 3505, 3469, 3608, 3399, 3608, 3514, 3515, 3497,
      387, 3517, 3480, 3511, 3483, 3512, 3512, 3512, 3512, 3512,
     3608, 3608, 3608, 3518, 3496, 3416,  478, 3513, 3486, 3487,
     3493, 3521, 3523, 3519, 3502, 3525, 3427, 3504, 3504, 3504,
     3504, 3504, 3526, 3516, 3524, 3527, 3528, 3529, 3530, 3505,

     3531, 3531, 3531, 3531, 3531, 3608, 3533, 3534, 3535, 3520,
      387, 3538, 3532, 3511, 3512, 3512, 3512, 3512, 3512, 3608,
      478, 3540, 3541, 3608, 3545, 3546, 3513, 3519, 3547, 3548,
     3549, 3524, 3542, 3542, 3542, 3542, 3542, 3531, 3531, 3531,
     3531, 3531, 3536, 3550, 3543, 3552, 3553, 3557, 3561, 3532,
     3562, 3545, 3539, 3555, 3555, 3555, 3555, 3555, 3558, 3558,
     3558, 3558, 3558, 3504, 3566, 3556, 3569, 3571, 3552, 3512,
     3559, 3563, 3573, 3577,  387, 3578, 3579, 3572, 3580,  478,
     3542, 3542, 3542, 3542, 3542, 3564, 3564, 3564, 3564, 3564,
     3571, 3584, 3543, 3577, 3587, 3591, 3592, 3565, 3567, 3567,

     3567, 3567, 3567, 3555, 3555, 3555, 3555, 3555, 3587, 3596,
     3568, 3591, 3599, 3608, 3600, 3556, 3558, 3558, 3558, 3558,
     3558, 3563, 3564, 3564, 3564, 3564, 3564, 3602, 3559, 3567,
     3567, 3567, 3567, 3567, 3565, 3581, 3581, 3581, 3581, 3581,
     3531, 3568, 3608, 3542, 3599, 3605, 3602, 3582, 3583, 3605,
     3572, 3585, 3588, 3588, 3588, 3588, 3588, 3581, 3581, 3581,
     3581, 3581, 3608, 1072, 3589,  364, 1732, 1730, 3608, 3582,
     3583, 3593, 3593, 3593, 3593, 3593, 3585, 3564, 3588, 3588,
     3588, 3588, 3588, 3594, 3567, 3595, 1417, 1729, 1728,  691,
     3589, 3608, 3597, 3593, 3593, 3593, 3593, 3593, 3608, 3595,

     3581, 3588, 3608, 3593, 3608, 3594, 3597, 3608, 3603, 3606,
     3603, 3607, 3606, 1727, 1414, 3607,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  116,  116,  116,  116,  116,
      116,  116,  116,  116,  116,  116,  116,  116,  116,  116,
      116,  116,  116,  116,  116,  116,  116,  116,  116,  116,
      116,  116,  116,  116,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,
      119,  119,  119,  119,  119,  119,  119,  119,  119,  119,

      119,  119,  119,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      142,  142,  142,  142,  142,  142,  142,  142,  142,  142,
      212,  212,  212,  212,  212,  212,  212,  212,  212,  212,

      212,  212,  212,  212,  212,  212,  212,  212,  212,  212,
      212,  212,  212,  212,  212,  212,  212,  212,  212,  224,
      224,  224,  224,  224,  224,  224,  224,  224,  224,  224,
      224,  224,  224,  224,  224,  224,  224,  224,  224,  224,
      224,  224,  224,  224,  224,  224,  224,  224,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  300,  300,  300,
      300,  300,  300,  300,  300,  300,  300,  300,  300,  300,
      300,  300,  300,  300,  300,  300,  300,  300,  300,  300,

      300,  300,  300,  300,  300,  300,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  337,  337,  337,  337,  337,  337,
      337,  337,  337,  337,  337,  337,  337,  337,  337,  337,
      337,  337,  337,  337,  337,  337,  337,  337,  337,  337,
      337,  337,  337,  347,  347,  347,  347,  347,  347,  347,

      347,  347,  347,  347,  347,  347,  347,  347,  347,  347,
      347,  347,  347,  347,  347,  347,  347,  347,  347,  347,
      347,  347,  364,  364,  364,  364,  364,  364,  364,  364,
      364,  364,  364,  364,  364,  364,  364,  364,  364,  364,
      364,  364,  364,  364,  364,  364,  364,  364,  364,  364,
      364,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      380,  380, 1725, 1724,  380,  380,  688,  380,  380,  380,
      380,  380,  380,  380,  386,  386,  386,  386, 1723,  386,

      386, 1407,  386,  386,  386,  386,  386,  386,  386,  436,
     1721,  436,  436,  436, 1720, 1719,  436,  436,  436,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  436,  451, 1718,  451,  451,  451,  671,
      451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
      451,  451,  451,  451,  451,  451,  451,  451,  451,  464,
      464, 1173, 1717, 1397, 1173, 1715, 1714, 1173, 1173,  464,
      464,  464,  464,  668,  464,  464, 1713,  464,  464,  464,
      464,  464,  464,  464,  477,  477,  477,  477, 1390,  477,
      477, 1025,  477,  477,  477,  477,  477,  477,  477,  517,

      517,  517,  517, 1025,  517,  517, 1025,  517,  517,  517,
      517,  517,  517,  517,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  525,  525,  525,  525,  525,  525,  525,
      525,  525,  525,  525,  525,  525,  525,  525,  525,  525,
      525,  525,  525,  525,  525,  525,  525,  525,  525,  525,
      525,  525,  529,  529,  529, 1378, 1711,  529,  529, 1377,
      529,  529,  529,  529,  529,  529,  529,  531,  531,  531,
      531,  531,  531,  531,  531,  531,  531,  531,  531,  531,

      531,  531,  531,  531,  531,  531,  531,  531,  531,  531,
      531,  531,  531,  531,  531,  531,  534,  534,  534,  534,
      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,
      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,
      534,  534,  534,  534,  534,  538,  538,  538, 1710, 1706,
      538,  538, 1705,  538,  538,  538,  538,  538,  538,  538,
      541,  541,  541,  541,  541,  541,  541,  541,  541,  541,
      541,  541,  541,  541,  541,  541,  541,  541,  541,  541,
      541,  541,  541,  541,  541,  541,  541,  541,  541,  544,
      544,  544,  544,  544,  544,  544,  544,  544,  544,  544,

      544,  544,  544,  544,  544,  544,  544,  544,  544,  544,
      544,  544,  544,  544,  544,  544,  544,  544,  557,  557,
      557,  557,  557,  557,  557,  557,  557,  557,  557,  557,
      557,  557,  557,  557,  557,  557,  557,  557,  557,  557,
      557,  557,  557,  557,  557,  557,  557,  561,  561,  561,
      561,  561,  561,  561,  561,  561,  561,  561,  561,  561,
      561,  561,  561,  561,  561,  561,  561,  561,  561,  561,
      561,  561,  561,  561,  561,  561,  625,  625,  625,  625,
     1704,  625,  625, 1703,  625,  625,  625,  625,  625,  625,
      625,  630,  630, 1181, 1702,  630, 1181, 1701, 1700, 1181,

     1181,  630,  630,  630,  630, 1698,  630,  630, 1697,  630,
      630,  630,  630,  630,  630,  630,  632, 1696,  632,  632,
      632,  632,  632,  632,  632,  632,  632,  632,  632,  632,
      632,  632,  632,  632,  632,  632,  632,  632,  632,  632,
      632,  632,  632,  638,  638,  638, 1695, 1694,  638,  638,
     1692,  638,  638,  638,  638,  638,  638,  638,  642,  642,
      642,  642, 1691,  642,  642,  642,  642,  642,  642,  642,
      642,  642,  642,  642,  642,  642,  644, 1690,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,

      644,  644,  644,  647, 1689,  647, 1688,  647, 1687,  647,
      647,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  647,  647,  659,  659,
      659,  659, 1686,  659,  659, 1685,  659,  659,  659,  659,
      659,  659,  659,  663,  663,  663,  663, 1684,  663,  663,
     1683,  663,  663,  663,  663,  663,  663,  663,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  671,  671,  671,
      671,  671,  671,  671,  671,  671,  671,  671,  671,  671,

      671,  671,  671,  671,  671,  671,  671,  671,  671,  671,
      671,  671,  671,  671,  671,  671,  676,  676,  676,  676,
     1682,  676,  676, 1681,  676,  676,  676,  676,  676,  676,
      676,  682, 1680,  682,  682,  682,  682,  682,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  682,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  682,  684, 1679,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684,  684,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,

      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  691,  691,  691,  691,  691,  691,
      691,  691,  691,  691,  691,  691,  691,  691,  691,  691,
      691,  691,  691,  691,  691,  691,  691,  691,  691,  691,
      691,  691,  691,  700,  700,  700,  700, 1676,  700,  700,
     1675,  700,  700,  700,  700,  700,  700,  700,  364,  364,
      364,  364,  364,  364,  364,  364,  364,  364,  364,  364,
      364,  364,  364,  364,  364,  364,  364,  364,  364,  364,
      364,  364,  364,  364,  364,  364,  364,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,

      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  714,  714, 1674,  714,
      714,  714,  714,  714,  714,  714,  715, 1673, 1671,  715,
      715, 1669,  715,  715,  715,  715,  715,  715,  715,  380,
      380, 1667, 1666,  380,  380, 1665,  380,  380,  380,  380,
      380,  380,  380,  386,  386,  386,  386, 1664,  386,  386,
     1663,  386,  386,  386,  386,  386,  386,  386,  724, 1661,
     1660, 1659, 1658, 1657,  724,  724, 1656,  724,  724,  724,
      724,  724,  724,  724,  436, 1655,  436,  436,  436, 1654,
     1653,  436,  436,  436,  436,  436,  436,  436,  436,  436,

      436,  436,  436,  436,  436,  436,  436,  436,  436,  451,
     1646,  451,  451,  451, 1645,  451,  451,  451,  451,  451,
      451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
      451,  451,  451,  451,  464,  464, 1379, 1643, 1642, 1379,
     1641, 1640, 1379, 1379,  464,  464,  464,  464, 1312,  464,
      464, 1639,  464,  464,  464,  464,  464,  464,  464,  812,
      812, 1638,  812,  812,  812,  812,  812,  812,  812,  477,
      477,  477,  477, 1634,  477,  477, 1630,  477,  477,  477,
      477,  477,  477,  477,  813,  813, 1629,  813,  813,  813,
      813,  813,  813,  813,  517,  517,  517,  517, 1628,  517,

      517,  561,  517,  517,  517,  517,  517,  517,  517,  882,
      882, 1627,  882,  882,  882,  882,  882,  882,  882,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  525,  525,
      525,  525,  525,  525,  525,  525,  525,  525,  525,  525,
      525,  525,  525,  525,  525,  525,  525,  525,  525,  525,
      525,  525,  525,  525,  525,  525,  525,  529,  529,  529,
     1294, 1625,  529,  529, 1624,  529,  529,  529,  529,  529,
      529,  529,  531,  531,  531,  531,  531,  531,  531,  531,

      531,  531,  531,  531,  531,  531,  531,  531,  531,  531,
      531,  531,  531,  531,  531,  531,  531,  531,  531,  531,
      531,  534,  534,  534,  534,  534,  534,  534,  534,  534,
      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,
      534,  534,  534,  534,  534,  534,  534,  534,  534,  534,
      538,  538,  538,  557, 1623,  538,  538, 1287,  538,  538,
      538,  538,  538,  538,  538,  541,  541,  541,  541,  541,
      541,  541,  541,  541,  541,  541,  541,  541,  541,  541,
      541,  541,  541,  541,  541,  541,  541,  541,  541,  541,
      541,  541,  541,  541,  544,  544,  544,  544,  544,  544,

      544,  544,  544,  544,  544,  544,  544,  544,  544,  544,
      544,  544,  544,  544,  544,  544,  544,  544,  544,  544,
      544,  544,  544,  557,  557,  557,  557,  557,  557,  557,
      557,  557,  557,  557,  557,  557,  557,  557,  557,  557,
      557,  557,  557,  557,  557,  557,  557,  557,  557,  557,
      557,  557,  561,  561,  561,  561,  561,  561,  561,  561,
      561,  561,  561,  561,  561,  561,  561,  561,  561,  561,
      561,  561,  561,  561,  561,  561,  561,  561,  561,  561,
      561,  944,  944,  944,  944,  944,  944,  944,  944,  944,
      944,  944, 1621,  944, 1620,  944,  944, 1619, 1424,  944,

      944, 1424, 1618, 1617, 1424, 1424, 1616,  944,  944,  944,
      946,  946,  946,  946,  946,  946,  946,  946,  946,  946,
      946, 1615,  946, 1428,  946,  946, 1428, 1614,  946, 1428,
     1428,  544, 1613, 1274, 1611, 1610,  946,  946,  946,  965,
      965,  965,  965,  965,  965,  965,  965,  965,  965,  965,
      541,  965, 1592,  965,  965, 1592, 1609,  965, 1592, 1592,
     1267, 1607, 1606,  534, 1605,  965,  965,  965,  972,  972,
      972,  972,  972,  972,  972,  972,  972,  972,  972, 1260,
      972, 1596,  972,  972, 1596, 1603,  972, 1596, 1596, 1602,
      531, 1601, 1253, 1599,  972,  972,  972,  973,  973,  973,

      973,  973,  973,  973,  973,  973,  973,  973, 1598,  973,
     1600,  973,  973, 1600,  525,  973, 1600, 1600, 1597, 1246,
     1595, 1594,  522,  973,  973,  973,  975,  975,  975,  975,
      975,  975,  975,  975,  975,  975,  975, 1593,  975, 1604,
      975,  975, 1604, 1239,  975, 1604, 1604,  478,  478,  975,
      975, 1547,  975,  975,  975,  978,  978,  978,  978,  978,
      978,  978,  978,  978,  978,  978, 1197,  978, 1608,  978,
      978, 1608,  478,  978, 1608, 1608, 1539,  807,  807,  807,
     1180,  978,  978,  978,  980,  980,  980,  980,  980,  980,
      980,  980,  980,  980,  980, 1538,  980, 1612,  980,  980,

     1612, 1537,  980, 1612, 1612, 1536,  797,  797,  980,  980,
      980,  980,  980,  984,  984,  984,  984,  984,  984,  984,
      984,  984,  984,  984,  797,  984, 1622,  984,  984, 1622,
     1172,  984, 1622, 1622, 1535,  723,  387, 1513, 1497,  984,
      984,  984,  986,  986,  986,  986,  986,  986,  986,  986,
      986,  986,  986, 1490,  986, 1626,  986,  986, 1626, 1482,
      986, 1626, 1626, 1477, 1455, 1453, 1452, 1451,  986,  986,
      986,  989,  989,  989,  989,  989,  989,  989,  989,  989,
      989,  989, 1450,  989,  723,  989,  989, 1712,  387,  989,
     1712,  989, 1443, 1712, 1712,  723,  387,  989,  989,  989,

     1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006,
     1006, 1438, 1006, 1716, 1006, 1006, 1716, 1087, 1006, 1716,
     1716, 1432, 1431, 1430,  368, 1429, 1006, 1006, 1006,  625,
      625,  625,  625, 1079,  625,  625, 1427,  625,  625,  625,
      625,  625,  625,  625, 1015, 1015, 1426, 1015, 1015, 1015,
     1015, 1015, 1015, 1015,  630,  630, 1722,  364,  630, 1722,
     1425, 1072, 1722, 1722,  630,  630,  630,  630, 1421,  630,
      630, 1420,  630,  630,  630,  630,  630,  630,  630, 1017,
     1017, 1418, 1017, 1017, 1017, 1017, 1017, 1017, 1017,  632,
     1060,  632,  632,  632,  632,  632,  632,  632,  632,  632,

      632,  632,  632,  632,  632,  632,  632,  632,  632,  632,
      632,  632,  632,  632,  632,  632, 1018, 1416, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018,  638,  638,  638, 1415, 1414,  638,  638,
     1414,  638,  638,  638,  638,  638,  638,  638, 1019, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1019,  642,  642,  642,
      642, 1409,  642,  642,  642,  642,  642,  642,  642,  642,

      642,  642,  642,  642,  642,  644, 1408,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,
      644,  644,  647, 1407,  647, 1407,  647,  683,  647,  647,
      647,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  647,  659,  659,  659,
      659, 1402,  659,  659, 1401,  659,  659,  659,  659,  659,
      659,  659, 1028, 1028, 1399, 1028, 1028, 1028, 1028, 1028,
     1028, 1028,  663,  663,  663,  663, 1398,  663,  663, 1397,
      663,  663,  663,  663,  663,  663,  663, 1029, 1029, 1397,

     1029, 1029, 1029, 1029, 1029, 1029, 1029,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  671,  671,  671,  671,
      671,  671,  671,  671,  671,  671,  671,  671,  671,  671,
      671,  671,  671,  671,  671,  671,  671,  671,  671,  671,
      671,  671,  671,  671,  671,  676,  676,  676,  676, 1392,
      676,  676, 1391,  676,  676,  676,  676,  676,  676,  676,
     1042, 1042, 1390, 1042, 1042, 1042, 1042, 1042, 1042, 1042,
      682, 1390,  682,  682,  682,  682,  682,  682,  682,  682,

      682,  682,  682,  682,  682,  682,  682,  682,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  684, 1383,  684,
      684,  684,  684,  684,  684,  684,  684, 1382,  684,  684,
      684,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684, 1045, 1381, 1045, 1045, 1045, 1045,
     1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
     1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
     1045,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,

      691,  691,  691,  691,  691,  691,  691,  691,  691,  691,
      691,  691,  691,  691,  691,  691,  691,  691,  691,  691,
      691,  691,  691,  691,  691,  691,  691,  691,  691, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1065, 1065,
     1380, 1065, 1065, 1065, 1065, 1065, 1065, 1065,  700,  700,
      700,  700, 1025,  700,  700, 1020,  700,  700,  700,  700,
      700,  700,  700, 1067, 1374, 1373, 1372, 1371, 1370, 1067,
     1067, 1369, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1082,

     1082, 1082, 1368, 1367, 1082, 1082, 1366, 1082, 1082, 1082,
     1082, 1082, 1082, 1082,  715, 1365, 1364,  715,  715, 1363,
      715,  715,  715,  715,  715,  715,  715, 1083, 1362, 1361,
     1083, 1083, 1360, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
     1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086,
     1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086,
     1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1088,
     1088, 1088, 1359, 1358, 1088, 1088, 1357, 1088, 1088, 1088,
     1088, 1088, 1088, 1088,  386,  386,  386,  386, 1356,  386,
      386, 1355,  386,  386,  386,  386,  386,  386,  386,  724,

     1354, 1353, 1352, 1351, 1350,  724,  724, 1349,  724,  724,
      724,  724,  724,  724,  724, 1188, 1188, 1726, 1348, 1346,
     1726, 1345, 1342, 1726, 1726, 1188, 1188, 1188, 1337, 1336,
     1188, 1188, 1335, 1188, 1188, 1188, 1188, 1188, 1188, 1188,
     1189, 1189, 1189, 1332, 1331, 1189, 1189, 1330, 1189, 1189,
     1189, 1189, 1189, 1189, 1189,  477,  477,  477,  477, 1329,
      477,  477, 1328,  477,  477,  477,  477,  477,  477,  477,
      813,  813, 1327,  813,  813,  813,  813,  813,  813,  813,
     1232, 1232, 1232, 1325, 1324, 1232, 1232, 1323, 1232, 1232,
     1232, 1232, 1232, 1232, 1232,  517,  517,  517,  517, 1322,

      517,  517, 1321,  517,  517,  517,  517,  517,  517,  517,
      538,  538,  538, 1320, 1319,  538,  538, 1318,  538,  538,
      538,  538,  538,  538,  538, 1298, 1298, 1298, 1298, 1298,
     1298, 1298, 1298, 1298, 1298, 1298, 1317, 1298, 2220, 1298,
     1298, 2220, 1316, 1298, 2220, 2220, 1313, 1312, 1305, 1297,
     1296, 1298, 1298, 1298, 1301, 1301, 1301, 1301, 1301, 1301,
     1301, 1301, 1301, 1301, 1301, 1295, 1301, 2224, 1301, 1301,
     2224, 1294, 1301, 2224, 2224, 1294, 1289, 1288, 1287, 1287,
     1301, 1301, 1301, 1302, 1302, 1302, 1302, 1302, 1302, 1302,
     1302, 1302, 1302, 1302, 1282, 1302, 2302, 1302, 1302, 2302,

     1279, 1302, 2302, 2302, 1278, 1277, 1276, 1275, 1274, 1302,
     1302, 1302, 1326, 1326, 1326, 1326, 1326, 1326, 1326, 1326,
     1326, 1326, 1326, 1274, 1326, 2306, 1326, 1326, 2306, 1269,
     1326, 2306, 2306, 1268, 1267, 1267, 1262, 1261, 1326, 1326,
     1326, 1347, 1347, 1347, 1347, 1347, 1347, 1347, 1347, 1347,
     1347, 1347, 1260, 1347, 1260, 1347, 1347, 1255, 1254, 1347,
     1253, 1253, 1347, 1248, 1247, 1246, 1246, 1347, 1347, 1347,
     1375, 1375, 1375, 1241, 1240, 1375, 1375, 1239, 1375, 1375,
     1375, 1375, 1375, 1375, 1375, 1376, 1376, 1239,  478, 1376,
      478,  478,  478,  478,  478, 1376, 1376, 1376,  478,  478,

     1376, 1376,  478, 1376, 1376, 1376, 1376, 1376, 1376, 1376,
      632,  478,  632,  632,  632,  632,  632,  632,  632,  632,
      632,  632,  632,  632,  632,  632,  632,  632,  632,  632,
      632,  632,  632,  632,  632,  632,  632, 1019, 1019, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1384, 1384, 1384,  478,
     1197, 1384, 1384,  478, 1384, 1384, 1384, 1384, 1384, 1384,
     1384, 1385, 1385, 1385, 1187, 1186, 1385, 1385, 1185, 1385,
     1385, 1385, 1385, 1385, 1385, 1385, 1400, 1400, 1400, 1184,

     1183, 1400, 1400, 1182, 1400, 1400, 1400, 1400, 1400, 1400,
     1400, 1045,  807, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
     1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
     1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1419, 1419, 1419,
     1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1179, 1419,
     1178, 1419, 1419, 1177, 1176, 1419, 1175, 1174,  797, 1129,
     1107,  723,  387, 1419, 1419, 1419, 1422, 1422, 1422, 1087,

     1085, 1422, 1422, 1084, 1422, 1422, 1422, 1422, 1422, 1422,
     1422, 1423, 1423, 1423,  719,  719, 1423, 1423, 1081, 1423,
     1423, 1423, 1423, 1423, 1423, 1423, 1082, 1082, 1082, 1080,
     1079, 1082, 1082, 1079, 1082, 1082, 1082, 1082, 1082, 1082,
     1082, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086,
     1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086,
     1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086,
     1088, 1088, 1088, 1074, 1073, 1088, 1088, 1072, 1088, 1088,
     1088, 1088, 1088, 1088, 1088,  386,  386,  386,  386, 1072,
      386,  386, 1066,  386,  386,  386,  386,  386,  386,  386,

      724,  701, 1064, 1063, 1062, 1061,  724,  724, 1060,  724,
      724,  724,  724,  724,  724,  724, 1444, 1444, 1444, 1444,
     1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444,
     1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444,
     1444, 1444, 1444, 1444, 1444, 1447, 1447, 1447, 1447, 1447,
     1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447,
     1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447,
     1447, 1447, 1447, 1447, 1454, 1454, 1454, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,

     1454, 1454, 1454, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1173,  691, 1173, 1173,  688,  694, 1173, 1173,
     1181, 1046, 1181, 1181,  683,  683, 1181, 1181, 1188, 1188,
     1044, 1043,  677,  671,  668,  664,  660, 1027, 1188, 1188,
     1188, 1026, 1025, 1188, 1188, 1025, 1188, 1188, 1188, 1188,
     1188, 1188, 1188, 1189, 1189, 1189,  645, 1020, 1189, 1189,
      641, 1189, 1189, 1189, 1189, 1189, 1189, 1189,  477,  477,
      477,  477, 1016,  477,  477,  626,  477,  477,  477,  477,

      477,  477,  477,  813,  813, 1014,  813,  813,  813,  813,
      813,  813,  813, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
     1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
     1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
     1540, 1540, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546,
     1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546,
     1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546,

     1232, 1232, 1232, 1011, 1010, 1232, 1232, 1009, 1232, 1232,
     1232, 1232, 1232, 1232, 1232,  517,  517,  517,  517, 1008,
      517,  517, 1007,  517,  517,  517,  517,  517,  517,  517,
     1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
     1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
     1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1647,
     1647, 1647, 1647, 1647, 1647, 1647, 1647, 1647, 1647, 1647,
     1005, 1647, 1004, 1647, 1647, 1001, 1000, 1647,  993,  992,
      991,  990,  988,  987,  985, 1647, 1647, 1647, 1662, 1662,
     1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662,  983,

     1662,  979, 1662, 1662,  974,  971, 1662,  970,  969,  964,
      963,  962,  949,  945, 1662, 1662, 1662, 1670, 1670, 1670,
     1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670,  941, 1670,
      940, 1670, 1670,  561,  557, 1670,  927,  926,  925,  924,
      923,  544,  541, 1670, 1670, 1670, 1672, 1672, 1672, 1672,
     1672, 1672, 1672, 1672, 1672, 1672, 1672,  534, 1672,  531,
     1672, 1672,  525,  522, 1672,  518,  478,  809,  808,  807,
      807,  802, 1672, 1672, 1672, 1485, 1485, 1485, 1485, 1485,
     1485, 1485, 1485, 1485, 1485, 1485,  801, 1485,  800, 1485,
     1485,  799,  798, 1485,  797,  797,  723,  387,  722,  368,

      364, 1485, 1485, 1485, 1693, 1693, 1693, 1693, 1693, 1693,
     1693, 1693, 1693, 1693, 1693,  701, 1693,  699, 1693, 1693,
      696,  695, 1693,  694,  685,  683,  683,  683,  681,  680,
     1693, 1693, 1693, 1699, 1699, 1699, 1699, 1699, 1699, 1699,
     1699, 1699, 1699, 1699,  679, 1699,  677, 1699, 1699,  675,
      664, 1699,  662,  660,  658,  656,  655,  648,  645, 1699,
     1699, 1699, 1527, 1527, 1527, 1527, 1527, 1527, 1527, 1527,
     1527, 1527, 1527,  645, 1527,  643, 1527, 1527,  641,  626,
     1527,  623,  608,  600, 1527,  578,  568,  560, 1527, 1527,
     1527, 1375, 1375, 1375,  556,  554, 1375, 1375,  552, 1375,

     1375, 1375, 1375, 1375, 1375, 1375, 1376, 1376,  549,  548,
     1376,  547,  539,  537,  528,  518, 1376, 1376, 1376,  516,
      478, 1376, 1376,  472, 1376, 1376, 1376, 1376, 1376, 1376,
     1376, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
      469, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
     1379,  467, 1379, 1379,  466,  462, 1379, 1379, 1384, 1384,
     1384,  461,  450, 1384, 1384,  449, 1384, 1384, 1384, 1384,
     1384, 1384, 1384, 1385, 1385, 1385,  448,  446, 1385, 1385,
      445, 1385, 1385, 1385, 1385, 1385, 1385, 1385, 1400, 1400,

     1400,  444,  443, 1400, 1400,  435, 1400, 1400, 1400, 1400,
     1400, 1400, 1400, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059,  387, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1731, 1731, 1731, 1731, 1731, 1731, 1731, 1731,
     1731, 1731, 1731,  373, 1731,  367, 1731, 1731, 3608, 3608,
     1731, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 1731, 1731,
     1731, 1422, 1422, 1422, 3608, 3608, 1422, 1422, 3608, 1422,
     1422, 1422, 1422, 1422, 1422, 1422, 1423, 1423, 1423, 3608,
     3608, 1423, 1423, 3608, 1423, 1423, 1423, 1423, 1423, 1423,

     1423, 1424, 3608, 1424, 1424, 3608, 3608, 1424, 1424, 1428,
     3608, 1428, 1428, 3608, 3608, 1428, 1428, 1086, 1086, 1086,
     1086, 1086, 1086, 1086, 1086, 1086, 3608, 1086, 1086, 1086,
     1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086, 1086,
     1086, 1086, 1086, 1086, 1086, 1086, 1738, 1738, 1738, 1738,
     1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738,
     1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738,
     1738, 1738, 1738, 1738, 1738,  386,  386,  386,  386, 3608,
      386,  386, 3608,  386,  386,  386,  386,  386,  386,  386,
     1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,

     1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
     1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1444,
     1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444,
     1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444,
     1444, 1444, 1444, 1444, 1444, 1444, 1444, 1444, 1447, 1447,
     1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447,
     1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447, 1447,
     1447, 1447, 1447, 1447, 1447, 1447, 1447, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,

     1454, 1454, 1454, 1454, 1454, 1454, 1783, 1783, 1783, 1783,
     1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1783, 1783, 1783, 1783,  724, 3608, 3608, 3608, 3608,
     3608,  724,  724, 3608,  724,  724,  724,  724,  724,  724,
      724, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
     1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,

     1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1540,
     1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
     1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
     1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1543, 1543, 1543, 1546, 1546, 1546,
     1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546,
     1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546,
     1546, 1546, 1546, 1546, 1546, 1546,  477,  477,  477,  477,

     3608,  477,  477, 3608,  477,  477,  477,  477,  477,  477,
      477,  813,  813, 3608,  813,  813,  813,  813,  813,  813,
      813,  517,  517,  517,  517, 3608,  517,  517, 3608,  517,
      517,  517,  517,  517,  517,  517, 1592, 3608, 1592, 1592,
     3608, 3608, 1592, 1592, 1596, 3608, 1596, 1596, 3608, 3608,
     1596, 1596, 1600, 3608, 1600, 1600, 3608, 3608, 1600, 1600,
     1604, 3608, 1604, 1604, 3608, 3608, 1604, 1604, 1608, 3608,
     1608, 1608, 3608, 3608, 1608, 1608, 1612, 3608, 1612, 1612,
     3608, 3608, 1612, 1612, 1622, 3608, 1622, 1622, 3608, 3608,
     1622, 1622, 1626, 3608, 1626, 1626, 3608, 3608, 1626, 1626,

     1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
     1734, 3608, 1734, 3608, 1734, 1734, 3608, 3608, 1734, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 1734, 1734, 1734, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1644, 1644, 1644,
     1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,

     1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
     1644, 1644, 1644, 1644, 1644, 1644, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1955, 1955, 1955, 1955, 1955, 1955,
     1955, 1955, 1955, 1955, 1955, 3608, 1955, 3608, 1955, 1955,
     3608, 3608, 1955, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     1955, 1955, 1955, 1958, 1958, 1958, 1958, 1958, 1958, 1958,
     1958, 1958, 1958, 1958, 3608, 1958, 3608, 1958, 1958, 3608,
     3608, 1958, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 1958,
     1958, 1958, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
     1959, 1959, 1959, 3608, 1959, 3608, 1959, 1959, 3608, 3608,
     1959, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 1959, 1959,
     1959, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962, 1962,
     1962, 1962, 3608, 1962, 3608, 1962, 1962, 3608, 3608, 1962,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 1962, 1962, 1962,
     1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965,

     1965, 3608, 1965, 3608, 1965, 1965, 3608, 3608, 1965, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 1965, 1965, 1965, 1975,
     1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975, 1975,
     3608, 1975, 3608, 1975, 1975, 3608, 3608, 1975, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 1975, 1975, 1975, 1712, 3608,
     1712, 1712, 3608, 3608, 1712, 1712, 1716, 3608, 1716, 1716,
     3608, 3608, 1716, 1716, 1977, 1977, 1977, 1977, 1977, 1977,
     1977, 1977, 1977, 1977, 1977, 3608, 1977, 3608, 1977, 1977,
     3608, 3608, 1977, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     1977, 1977, 1977, 1722, 3608, 1722, 1722, 3608, 3608, 1722,

     1722, 1726, 3608, 1726, 1726, 3608, 3608, 1726, 1726,  386,
      386,  386,  386, 3608,  386,  386, 3608,  386,  386,  386,
      386,  386,  386,  386,  724, 3608, 3608, 3608, 3608, 3608,
      724,  724, 3608,  724,  724,  724,  724,  724,  724,  724,
     1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738,
     1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738,
     1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1742,
     1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
     1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
     1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 2000, 2000,

     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 3608,
     2000, 3608, 2000, 2000, 3608, 3608, 2000, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 2000, 2000, 2000, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454, 1454, 3608, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454, 1454,
     1454, 1454, 1454, 1454, 1454, 1454, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,

     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1783, 1783, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 3608, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
     1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
     1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,

     1789, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065,
     2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065,
     2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065,
     2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082,
     2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082,
     2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 1546,
     1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 3608, 1546,
     1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546,
     1546, 1546, 1546, 1546, 1546, 1546, 1546, 1546,  477,  477,
      477,  477, 3608,  477,  477, 3608,  477,  477,  477,  477,

      477,  477,  477, 2106, 2106, 2106, 2106, 2106, 2106, 2106,
     2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106,
     2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106,
     2106, 2106, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123,
     2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123,
     2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123,
     2123,  813,  813, 3608,  813,  813,  813,  813,  813,  813,
      813,  517,  517,  517,  517, 3608,  517,  517, 3608,  517,
      517,  517,  517,  517,  517,  517, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,

     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 2150, 2150, 2150, 2150, 2150, 2150,
     2150, 2150, 2150, 2150, 2150, 3608, 2150, 3608, 2150, 2150,
     3608, 3608, 2150, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     2150, 2150, 2150, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
     1644, 1644, 3608, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
     1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,

     1644, 1644, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
     2005, 2005, 2005, 3608, 2005, 3608, 2005, 2005, 3608, 3608,
     2005, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2005, 2005,
     2005, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2175,
     2175, 2175, 2175, 2175, 2175, 2175, 2175, 2175, 2175, 2175,

     3608, 2175, 3608, 2175, 2175, 3608, 3608, 2175, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2175, 2175, 2175, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 2184, 2184, 2184, 2184,
     2184, 2184, 2184, 2184, 2184, 2184, 2184, 3608, 2184, 3608,
     2184, 2184, 3608, 3608, 2184, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 2184, 2184, 2184, 2042, 2042, 2042, 2042, 2042,
     2042, 2042, 2042, 2042, 2042, 2042, 3608, 2042, 3608, 2042,
     2042, 3608, 3608, 2042, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 2042, 2042, 2042, 2187, 2187, 2187, 2187, 2187, 2187,
     2187, 2187, 2187, 2187, 2187, 3608, 2187, 3608, 2187, 2187,
     3608, 3608, 2187, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     2187, 2187, 2187, 2191, 2191, 2191, 2191, 2191, 2191, 2191,
     2191, 2191, 2191, 2191, 3608, 2191, 3608, 2191, 2191, 3608,
     3608, 2191, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2191,
     2191, 2191, 2195, 2195, 2195, 2195, 2195, 2195, 2195, 2195,

     2195, 2195, 2195, 3608, 2195, 3608, 2195, 2195, 3608, 3608,
     2195, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2195, 2195,
     2195, 2203, 2203, 2203, 2203, 2203, 2203, 2203, 2203, 2203,
     2203, 2203, 3608, 2203, 3608, 2203, 2203, 3608, 3608, 2203,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 2203, 2203, 2203,
     2204, 2204, 2204, 2204, 2204, 2204, 2204, 2204, 2204, 2204,
     2204, 3608, 2204, 3608, 2204, 2204, 3608, 3608, 2204, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 2204, 2204, 2204, 2210,
     2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
     2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,

     2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2215, 2215,
     2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 2215, 3608,
     2215, 3608, 2215, 2215, 3608, 3608, 2215, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 2215, 2215, 2215, 1738, 1738, 1738,
     1738, 1738, 1738, 1738, 1738, 1738, 3608, 1738, 1738, 1738,
     1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738, 1738,
     1738, 1738, 1738, 1738, 1738, 1738,  386,  386,  386,  386,
     3608,  386,  386, 3608,  386,  386,  386,  386,  386,  386,
      386, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
     3608, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,

     1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
     2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229,
     2229, 3608, 2229, 3608, 2229, 2229, 3608, 3608, 2229, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 2229, 2229, 2229,  724,
     3608, 3608, 3608, 3608, 3608,  724,  724, 3608,  724,  724,
      724,  724,  724,  724,  724, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,

     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     2253, 2253, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 3608, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
     3608, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,
     1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789, 1789,

     2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065,
     2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065,
     2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2082,
     2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082,
     2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082,
     2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2299, 2299,
     2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 3608,
     2299, 3608, 2299, 2299, 3608, 3608, 2299, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 2299, 2299, 2299,  477,  477,  477,
      477, 3608,  477,  477, 3608,  477,  477,  477,  477,  477,

      477,  477, 2311, 2311, 2311, 2311, 2311, 2311, 2311, 2311,
     2311, 2311, 2311, 3608, 2311, 3608, 2311, 2311, 3608, 3608,
     2311, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2311, 2311,
     2311, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106,
     2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106,
     2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106,
      813,  813, 3608,  813,  813,  813,  813,  813,  813,  813,
     2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322,
     2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322,
     2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2326,

     2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326,
     2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326,
     2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2123, 2123,
     2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123,
     2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123,
     2123, 2123, 2123, 2123, 2123, 2123, 2123, 2331, 2331, 2331,
     2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331,
     2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331,
     2331, 2331, 2331, 2331, 2331, 2331, 2340, 2340, 2340, 2340,
     2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340,

     2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340,
     2340, 2340, 2340, 2340, 2340,  517,  517, 3608, 3608, 3608,
     3608, 3608,  517, 3608, 3608,  517,  517,  517,  517, 3608,
      517,  517, 3608,  517,  517,  517,  517,  517,  517,  517,
     2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347,
     2347, 3608, 2347, 3608, 2347, 2347, 3608, 3608, 2347, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 2347, 2347, 2347, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 3608, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,
     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1897, 1897,

     1897, 1897, 1897, 1897, 1897, 1897, 1897, 3608, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897, 1897,
     1897, 1897, 1897, 1897, 1897, 1897, 1897, 2356, 2356, 2356,
     2356, 2356, 2356, 2356, 2356, 2356, 2356, 2356, 3608, 2356,
     3608, 2356, 2356, 3608, 3608, 2356, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 2356, 2356, 2356, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2361, 2361, 2361, 2361, 2361,
     2361, 2361, 2361, 2361, 2361, 2361, 3608, 2361, 3608, 2361,

     2361, 3608, 3608, 2361, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 2361, 2361, 2361, 2159, 2159, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2367, 2367, 2367, 2367, 2367, 2367, 2367,
     2367, 2367, 2367, 2367, 3608, 2367, 3608, 2367, 2367, 3608,
     3608, 2367, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2367,
     2367, 2367, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374,
     2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374,
     2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374,

     2374, 2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378, 2378,
     2378, 2378, 3608, 2378, 3608, 2378, 2378, 3608, 3608, 2378,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 2378, 2378, 2378,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 3608,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 3608, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938,
     1938, 1938, 1938, 1938, 1938, 1938, 1938, 1938, 2388, 2388,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,

     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2398, 2398, 2398,
     2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398,
     2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398,
     2398, 2398, 2398, 2398, 2398, 2398, 2210, 2210, 2210, 2210,
     2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
     2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
     2210, 2210, 2210, 2210, 2210,  386,  386,  386,  386, 3608,
      386,  386, 3608,  386,  386,  386,  386,  386,  386,  386,
     2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416,

     2416, 3608, 2416, 3608, 2416, 2416, 3608, 3608, 2416, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 2416, 2416, 2416, 2220,
     3608, 2220, 2220, 3608, 3608, 2220, 2220, 2224, 3608, 2224,
     2224, 3608, 3608, 2224, 2224, 2417, 2417, 2417, 2417, 2417,
     2417, 2417, 2417, 2417, 2417, 2417, 3608, 2417, 3608, 2417,
     2417, 3608, 3608, 2417, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 2417, 2417, 2417, 2418, 2418, 2418, 2418, 2418, 2418,
     2418, 2418, 2418, 2418, 2418, 3608, 2418, 3608, 2418, 2418,
     3608, 3608, 2418, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     2418, 2418, 2418, 2010, 2010, 2010, 2010, 2010, 2010, 2010,

     2010, 2010, 3608, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,
     2010, 2010, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 3608, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014, 2014,
     2014, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2444, 2444, 3608, 3608, 3608, 3608, 3608, 2444, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2444, 2444, 3608, 2444, 2444,

     2444, 2444, 2444, 2444, 2444, 2444, 2447, 2447, 2447, 2447,
     2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447,
     2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447,
     2447, 2447, 2447, 2447, 2447, 2253, 2253, 2253, 2253, 2253,
     2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     2253, 2253, 2253, 2253,  724, 3608, 3608, 3608, 3608, 3608,
      724,  724, 3608,  724,  724,  724,  724,  724,  724,  724,
     2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453,
     2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453,

     2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2456,
     2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
     2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
     2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2463, 2463,
     2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463,
     2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463,
     2463, 2463, 2463, 2463, 2463, 2463, 2463, 2471, 2471, 2471,
     2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,
     2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,
     2471, 2471, 2471, 2471, 2471, 2471, 2065, 2065, 2065, 2065,

     2065, 2065, 2065, 2065, 2065, 3608, 2065, 2065, 2065, 2065,
     2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065, 2065,
     2065, 2065, 2065, 2065, 2065, 2082, 2082, 2082, 2082, 2082,
     2082, 2082, 2082, 2082, 3608, 2082, 2082, 2082, 2082, 2082,
     2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082, 2082,
     2082, 2082, 2082, 2082, 2501, 2501, 2501, 2501, 2501, 2501,
     2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501,
     2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501,
     2501, 2501, 2501, 2302, 3608, 2302, 2302, 3608, 3608, 2302,
     2302, 2306, 3608, 2306, 2306, 3608, 3608, 2306, 2306,  477,

      477,  477,  477, 3608,  477,  477, 3608,  477,  477,  477,
      477,  477,  477,  477, 2106, 2106, 2106, 2106, 2106, 2106,
     2106, 2106, 2106, 3608, 2106, 2106, 2106, 2106, 2106, 2106,
     2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106, 2106,
     2106, 2106, 2106, 2322, 2322, 2322, 2322, 2322, 2322, 2322,
     2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322,
     2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322,
     2322, 2322, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326,
     2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326,
     2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326,

     2326, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123,
     3608, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123,
     2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123,
     2520, 2520, 2520, 2520, 2520, 2520, 2520, 2520, 2520, 2520,
     2520, 3608, 2520, 3608, 2520, 2520, 3608, 3608, 2520, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 2520, 2520, 2520, 2331,
     2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331,
     2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331,
     2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527,

     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2529, 2529, 2529,
     2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529, 3608, 2529,
     3608, 2529, 2529, 3608, 3608, 2529, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 2529, 2529, 2529, 2340, 2340, 2340, 2340,
     2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340,
     2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340,
     2340, 2340, 2340, 2340, 2340,  517,  517,  517,  517, 3608,
      517,  517, 3608,  517,  517,  517,  517,  517,  517,  517,
     2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537, 2537,

     2537, 3608, 2537, 3608, 2537, 2537, 3608, 3608, 2537, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 2537, 2537, 2537, 2539,
     2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539,
     3608, 2539, 3608, 2539, 2539, 3608, 3608, 2539, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2539, 2539, 2539, 2541, 2541,
     2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 2541, 3608,
     2541, 3608, 2541, 2541, 3608, 3608, 2541, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 2541, 2541, 2541, 2542, 2542, 2542,
     2542, 2542, 2542, 2542, 2542, 2542, 2542, 2542, 3608, 2542,
     3608, 2542, 2542, 3608, 3608, 2542, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 2542, 2542, 2542, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 3608, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2159, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2159, 3608, 2159, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2159, 2553, 2553, 2553, 2553, 2553, 2553,
     2553, 2553, 2553, 2553, 2553, 3608, 2553, 3608, 2553, 2553,
     3608, 3608, 2553, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     2553, 2553, 2553, 2374, 2374, 2374, 2374, 2374, 2374, 2374,

     2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374,
     2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374,
     2374, 2374, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558,
     2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558,
     2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558,
     2558, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560,
     2560, 2560, 3608, 2560, 3608, 2560, 2560, 3608, 3608, 2560,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 2560, 2560, 2560,
     2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565,
     2565, 3608, 2565, 3608, 2565, 2565, 3608, 3608, 2565, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 2565, 2565, 2565, 2569,
     2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569, 2569,
     3608, 2569, 3608, 2569, 2569, 3608, 3608, 2569, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2569, 2569, 2569, 2388, 2388,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2572, 2572, 2572,
     2572, 2572, 2572, 2572, 2572, 2572, 2572, 2572, 3608, 2572,
     3608, 2572, 2572, 3608, 3608, 2572, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 2572, 2572, 2572, 2575, 2575, 2575, 2575,

     2575, 2575, 2575, 2575, 2575, 2575, 2575, 3608, 2575, 3608,
     2575, 2575, 3608, 3608, 2575, 3608, 3608, 3608, 3608, 2575,
     3608, 3608, 2575, 2575, 2575, 2578, 2578, 2578, 2578, 2578,
     2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578,
     2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578,
     2578, 2578, 2578, 2578, 2580, 2580, 2580, 2580, 2580, 2580,
     2580, 2580, 2580, 2580, 2580, 3608, 2580, 3608, 2580, 2580,
     3608, 3608, 2580, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     2580, 2580, 2580, 2398, 2398, 2398, 2398, 2398, 2398, 2398,
     2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398,

     2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398,
     2398, 2398, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
     2210, 3608, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
     2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210, 2210,
     2210, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595, 2595,
     2595, 2595, 3608, 2595, 3608, 2595, 2595, 3608, 3608, 2595,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 2595, 2595, 2595,
     2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596, 2596,
     2596, 3608, 2596, 3608, 2596, 2596, 3608, 3608, 2596, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 2596, 2596, 2596, 2597,

     2597, 2597, 2597, 2597, 2597, 2597, 2597, 2597, 2597, 2597,
     3608, 2597, 3608, 2597, 2597, 3608, 3608, 2597, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2597, 2597, 2597,  386,  386,
      386,  386, 3608,  386,  386, 3608,  386,  386,  386,  386,
      386,  386,  386,  724, 3608, 3608, 3608,  724, 3608,  724,
      724, 3608,  724,  724,  724,  724,  724,  724,  724, 2618,
     2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618,
     2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618,
     2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,

     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2631, 2631, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 2631, 2631, 2631,
     2631, 3608, 2631, 2631, 3608, 2631, 2631, 2631, 2631, 2631,
     2631, 2631, 2631, 2634, 2634, 2634, 2634, 2634, 2634, 2634,
     2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634,
     2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634,
     2634, 2634, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447,
     2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447,
     2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447,

     2447, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     3608, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453,
     2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453,
     2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2456,
     2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
     2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
     2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2463, 2463,
     2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463,

     2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463,
     2463, 2463, 2463, 2463, 2463, 2463, 2463, 2650, 2650, 2650,
     2650, 2650, 2650, 2650, 2650, 2650, 2650, 2650, 3608, 2650,
     3608, 2650, 2650, 3608, 3608, 2650, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 2650, 2650, 2650, 2471, 2471, 2471, 2471,
     2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,
     2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,
     2471, 2471, 2471, 2471, 2471, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,

     2662, 2662, 2662, 2662, 2690, 2690, 2690, 2690, 2690, 2690,
     2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690,
     2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690,
     2690, 2690, 2690, 2501, 2501, 2501, 2501, 2501, 2501, 2501,
     2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501,
     2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501,
     2501, 2501, 2694, 2694, 2694, 2694, 2694, 2694, 2694, 2694,
     2694, 2694, 2694, 3608, 2694, 3608, 2694, 2694, 3608, 3608,
     2694, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2694, 2694,
     2694,  477,  477, 3608, 3608, 3608, 3608, 3608,  477, 3608,

     3608,  477,  477,  477,  477, 3608,  477,  477, 3608,  477,
      477,  477,  477,  477,  477,  477,  813,  813, 3608,  813,
      813,  813,  813,  813,  813,  813, 2322, 2322, 2322, 2322,
     2322, 2322, 2322, 2322, 2322, 3608, 2322, 2322, 2322, 2322,
     2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322, 2322,
     2322, 2322, 2322, 2322, 2322, 2326, 2326, 2326, 2326, 2326,
     2326, 2326, 2326, 2326, 3608, 2326, 2326, 2326, 2326, 2326,
     2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326, 2326,
     2326, 2326, 2326, 2326, 2707, 2707, 2707, 2707, 2707, 2707,
     2707, 2707, 2707, 2707, 2707, 3608, 2707, 3608, 2707, 2707,

     3608, 3608, 2707, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     2707, 2707, 2707, 2331, 2331, 2331, 2331, 2331, 2331, 2331,
     2331, 2331, 3608, 2331, 2331, 2331, 2331, 2331, 2331, 2331,
     2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331, 2331,
     2331, 2331, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527,
     2527, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340,
     3608, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340,
     2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340, 2340,

      517,  517,  517,  517, 3608,  517,  517, 3608,  517,  517,
      517,  517,  517,  517,  517, 2718, 2718, 2718, 2718, 2718,
     2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718,
     2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718,
     2718, 2718, 2718, 2718, 2720, 2720, 2720, 2720, 2720, 2720,
     2720, 2720, 2720, 2720, 2720, 3608, 2720, 3608, 2720, 2720,
     3608, 3608, 2720, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     2720, 2720, 2720, 2723, 2723, 2723, 2723, 2723, 2723, 2723,
     2723, 2723, 2723, 2723, 3608, 2723, 3608, 2723, 2723, 3608,
     3608, 2723, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2723,

     2723, 2723, 2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724,
     2724, 2724, 2724, 3608, 2724, 3608, 2724, 2724, 3608, 3608,
     2724, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2724, 2724,
     2724, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
     2729, 2729, 3608, 2729, 3608, 2729, 2729, 3608, 3608, 2729,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 2729, 2729, 2729,
     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731,
     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731,
     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2735,
     2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735, 2735,

     3608, 2735, 3608, 2735, 2735, 3608, 3608, 2735, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2735, 2735, 2735, 2374, 2374,
     2374, 2374, 2374, 2374, 2374, 2374, 2374, 3608, 2374, 2374,
     2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374, 2374,
     2374, 2374, 2374, 2374, 2374, 2374, 2374, 2558, 2558, 2558,
     2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558,
     2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558,
     2558, 2558, 2558, 2558, 2558, 2558, 2743, 2743, 2743, 2743,
     2743, 2743, 2743, 2743, 2743, 2743, 2743, 3608, 2743, 3608,
     2743, 2743, 3608, 3608, 2743, 3608, 3608, 3608, 3608, 3608,

     3608, 3608, 2743, 2743, 2743, 2746, 2746, 2746, 2746, 2746,
     2746, 2746, 2746, 2746, 2746, 2746, 3608, 2746, 3608, 2746,
     2746, 3608, 3608, 2746, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 2746, 2746, 2746, 2747, 2747, 2747, 2747, 2747, 2747,
     2747, 2747, 2747, 2747, 2747, 3608, 2747, 3608, 2747, 2747,
     3608, 3608, 2747, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     2747, 2747, 2747, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 3608, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388, 2388,
     2388, 2388, 2748, 2748, 2748, 2748, 2748, 2748, 2748, 2748,

     2748, 2748, 2748, 3608, 2748, 3608, 2748, 2748, 3608, 3608,
     2748, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2748, 2748,
     2748, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750, 2750,
     2750, 2750, 3608, 2750, 3608, 2750, 2750, 3608, 3608, 2750,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 2750, 2750, 2750,
     2751, 2751, 2751, 2751, 2751, 2751, 2751, 2751, 2751, 2751,
     2751, 3608, 2751, 3608, 2751, 2751, 3608, 3608, 2751, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 2751, 2751, 2751, 2578,
     2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578,
     2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578,

     2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2398, 2398,
     2398, 2398, 2398, 2398, 2398, 2398, 2398, 3608, 2398, 2398,
     2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398, 2398,
     2398, 2398, 2398, 2398, 2398, 2398, 2398, 2754, 2754, 2754,
     2754, 2754, 2754, 2754, 2754, 2754, 2754, 2754, 3608, 2754,
     3608, 2754, 2754, 3608, 3608, 2754, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 2754, 2754, 2754, 2767, 2767, 2767, 2767,
     2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767,
     2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767,
     2767, 2767, 2767, 2767, 2767,  386,  386,  386,  386, 3608,

      386,  386, 3608,  386,  386,  386,  386,  386,  386,  386,
     2770, 2770, 3608, 3608, 3608, 3608, 3608, 2770, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2770, 2770, 3608, 2770, 2770,
     2770, 2770, 2770, 2770, 2770, 2770,  724, 3608, 3608, 3608,
      724, 3608,  724,  724, 3608,  724,  724,  724,  724,  724,
      724,  724, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618,
     2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618,
     2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618,
     2618, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     3608, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,

     2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433, 2433,
     2631, 2631, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     2631, 2631, 2631, 2631, 3608, 2631, 2631, 3608, 2631, 2631,
     2631, 2631, 2631, 2631, 2631, 2631, 2797, 2797, 3608, 2797,
     2797, 2797, 2797, 2797, 2797, 2797, 2634, 2634, 2634, 2634,
     2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634,
     2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634,
     2634, 2634, 2634, 2634, 2634, 2447, 2447, 2447, 2447, 2447,
     2447, 2447, 2447, 2447, 3608, 2447, 2447, 2447, 2447, 2447,
     2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447, 2447,

     2447, 2447, 2447, 2447, 2453, 2453, 2453, 2453, 2453, 2453,
     2453, 2453, 2453, 3608, 2453, 2453, 2453, 2453, 2453, 2453,
     2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453, 2453,
     2453, 2453, 2453, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
     2456, 2456, 3608, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
     2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456, 2456,
     2456, 2456, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463,
     2463, 3608, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463,
     2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463,
     2463, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,

     3608, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,
     2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471, 2471,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2822,
     2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822,
     2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822,
     2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2690, 2690,
     2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690,
     2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690,

     2690, 2690, 2690, 2690, 2690, 2690, 2690, 2501, 2501, 2501,
     2501, 2501, 2501, 2501, 2501, 2501, 3608, 2501, 2501, 2501,
     2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501, 2501,
     2501, 2501, 2501, 2501, 2501, 2501, 2840, 2840, 2840, 2840,
     2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840,
     2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840,
     2840, 2840, 2840, 2840, 2840,  477,  477,  477,  477, 3608,
      477,  477, 3608,  477,  477,  477,  477,  477,  477,  477,
     2844, 2844, 2844, 2844, 2844, 2844, 2844, 2844, 2844, 2844,
     2844, 3608, 2844, 3608, 2844, 2844, 3608, 3608, 2844, 3608,

     3608, 3608, 3608, 3608, 3608, 3608, 2844, 2844, 2844, 2846,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,  813,  813,
     3608,  813,  813,  813,  813,  813,  813,  813, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 3608, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527,  517,  517,  517,
      517, 3608,  517,  517, 3608,  517,  517,  517,  517,  517,
      517,  517, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718,

     2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718,
     2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718,
     2718, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855, 2855,
     2855, 2855, 3608, 2855, 3608, 2855, 2855, 3608, 3608, 2855,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 2855, 2855, 2855,
     2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860,
     2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860,
     2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2731,
     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731,
     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731,

     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2864, 2864,
     2864, 2864, 2864, 2864, 2864, 2864, 2864, 2864, 2864, 3608,
     2864, 3608, 2864, 2864, 3608, 3608, 2864, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 2864, 2864, 2864, 2558, 2558, 2558,
     2558, 2558, 2558, 2558, 2558, 2558, 3608, 2558, 2558, 2558,
     2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558, 2558,
     2558, 2558, 2558, 2558, 2558, 2558, 2870, 2870, 2870, 2870,
     2870, 2870, 2870, 2870, 2870, 2870, 2870, 3608, 2870, 3608,
     2870, 2870, 3608, 3608, 2870, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 2870, 2870, 2870, 2872, 2872, 2872, 2872, 2872,

     2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872,
     2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872,
     2872, 2872, 2872, 2872, 2578, 2578, 2578, 2578, 2578, 2578,
     2578, 2578, 2578, 3608, 2578, 2578, 2578, 2578, 2578, 2578,
     2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578, 2578,
     2578, 2578, 2578, 2767, 2767, 2767, 2767, 2767, 2767, 2767,
     2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767,
     2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767,
     2767, 2767, 2894, 2894, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 2894, 2894, 2894, 2894, 3608, 2894, 2894, 3608,

     2894, 2894, 2894, 2894, 2894, 2894, 2894, 2894, 2897, 2897,
     2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897,
     2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897,
     2897, 2897, 2897, 2897, 2897, 2897, 2897, 2618, 2618, 2618,
     2618, 2618, 2618, 2618, 2618, 2618, 3608, 2618, 2618, 2618,
     2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618,
     2618, 2618, 2618, 2618, 2618, 2618, 2914, 2914, 2914, 2914,
     2914, 2914, 2914, 2914, 2914, 2914, 2914, 3608, 2914, 3608,
     2914, 2914, 3608, 3608, 2914, 3608, 3608, 3608, 3608, 2914,
     3608, 3608, 2914, 2914, 2914, 2919, 2919, 2919, 2919, 2919,

     2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919,
     2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919,
     2919, 2919, 2919, 2919, 2924, 2924, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 2924, 2924, 2924, 3608, 3608, 2924,
     2924, 3608, 2924, 2924, 2924, 2924, 2924, 2924, 2924, 2924,
     2444, 2444, 3608, 3608, 3608, 3608, 3608, 2444, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2444, 2444, 3608, 2444, 2444,
     2444, 2444, 2444, 2444, 2444, 2634, 2634, 2634, 2634, 2634,
     2634, 2634, 2634, 2634, 3608, 2634, 2634, 2634, 2634, 2634,
     2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634, 2634,

     2634, 2634, 2634, 2634, 2930, 2930, 2930, 2930, 2930, 2930,
     2930, 2930, 2930, 2930, 2930, 3608, 2930, 3608, 2930, 2930,
     3608, 3608, 2930, 3608, 3608, 3608, 3608, 2930, 3608, 3608,
     2930, 2930, 2930, 2936, 2936, 2936, 2936, 2936, 2936, 2936,
     2936, 2936, 2936, 2936, 3608, 2936, 3608, 2936, 2936, 3608,
     3608, 2936, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2936,
     2936, 2936, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 3608, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822,

     2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822,
     2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822,
     2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950,
     2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950,
     2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2690,
     2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 3608, 2690,
     2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690,
     2690, 2690, 2690, 2690, 2690, 2690, 2690, 2690, 2961, 2961,
     2961, 2961, 2961, 2961, 2961, 2961, 2961, 2961, 2961, 3608,
     2961, 3608, 2961, 2961, 3608, 3608, 2961, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 2961, 2961, 2961, 2840, 2840, 2840,
     2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840,
     2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840,
     2840, 2840, 2840, 2840, 2840, 2840,  477,  477,  477,  477,
     3608,  477,  477, 3608,  477,  477,  477,  477,  477,  477,
      477, 2965, 2965, 2965, 2965, 2965, 2965, 2965, 2965, 2965,
     2965, 2965, 3608, 2965, 3608, 2965, 2965, 3608, 3608, 2965,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 2965, 2965, 2965,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,

     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,  517,
      517,  517,  517, 3608,  517,  517, 3608,  517,  517,  517,
      517,  517,  517,  517, 2718, 2718, 2718, 2718, 2718, 2718,
     2718, 2718, 2718, 3608, 2718, 2718, 2718, 2718, 2718, 2718,
     2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718, 2718,
     2718, 2718, 2718, 2973, 2973, 2973, 2973, 2973, 2973, 2973,
     2973, 2973, 2973, 2973, 3608, 2973, 3608, 2973, 2973, 3608,
     3608, 2973, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2973,
     2973, 2973, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976,
     2976, 2976, 2976, 3608, 2976, 3608, 2976, 2976, 3608, 3608,

     2976, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 2976, 2976,
     2976, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860,
     2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860,
     2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860, 2860,
     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 3608,
     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731,
     2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2731, 2983,
     2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983,
     3608, 2983, 3608, 2983, 2983, 3608, 3608, 2983, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2983, 2983, 2983, 2985, 2985,

     2985, 2985, 2985, 2985, 2985, 2985, 2985, 2985, 2985, 3608,
     2985, 3608, 2985, 2985, 3608, 3608, 2985, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 2985, 2985, 2985, 2872, 2872, 2872,
     2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872,
     2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872, 2872,
     2872, 2872, 2872, 2872, 2872, 2872, 2987, 2987, 2987, 2987,
     2987, 2987, 2987, 2987, 2987, 2987, 2987, 2987, 2987, 2987,
     2987, 2987, 2987, 2987, 2987, 2987, 2987, 2987, 2987, 2987,
     2987, 2987, 2987, 2987, 2987, 2995, 2995, 2995, 2995, 2995,
     2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995,

     2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995,
     2995, 2995, 2995, 2995, 2767, 2767, 2767, 2767, 2767, 2767,
     2767, 2767, 2767, 3608, 2767, 2767, 2767, 2767, 2767, 2767,
     2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767, 2767,
     2767, 2767, 2767, 2894, 2894, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 2894, 2894, 2894, 2894, 3608, 2894, 2894,
     3608, 2894, 2894, 2894, 2894, 2894, 2894, 2894, 2894, 3006,
     3006, 3608, 3006, 3006, 3006, 3006, 3006, 3006, 3006, 2897,
     2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897,
     2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897,

     2897, 2897, 2897, 2897, 2897, 2897, 2897, 2897, 3024, 3024,
     3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3024, 3608,
     3024, 3608, 3024, 3024, 3608, 3608, 3024, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3024, 3024, 3024, 2919, 2919, 2919,
     2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919,
     2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919, 2919,
     2919, 2919, 2919, 2919, 2919, 2919, 3029, 3029, 3029, 3029,
     3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029,
     3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029, 3029,
     3029, 3029, 3029, 3029, 3029, 2924, 2924, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3608, 2924, 2924, 2924, 3608, 3608,
     2924, 2924, 3608, 2924, 2924, 2924, 2924, 2924, 2924, 2924,
     2924, 3036, 3036, 3036, 3036, 3036, 3036, 3036, 3036, 3036,
     3036, 3036, 3608, 3036, 3608, 3036, 3036, 3608, 3608, 3036,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3036, 3036, 3036,
     3043, 3043, 3043, 3043, 3043, 3043, 3043, 3043, 3043, 3043,
     3043, 3608, 3043, 3608, 3043, 3043, 3608, 3608, 3043, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3043, 3043, 3043, 2822,
     2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 3608, 2822,
     2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822,

     2822, 2822, 2822, 2822, 2822, 2822, 2822, 2822, 2950, 2950,
     2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950,
     2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950, 2950,
     2950, 2950, 2950, 2950, 2950, 2950, 2950, 2840, 2840, 2840,
     2840, 2840, 2840, 2840, 2840, 2840, 3608, 2840, 2840, 2840,
     2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840, 2840,
     2840, 2840, 2840, 2840, 2840, 2840, 3078, 3078, 3078, 3078,
     3078, 3078, 3078, 3078, 3078, 3078, 3078, 3078, 3078, 3078,
     3078, 3078, 3078, 3078, 3078, 3078, 3078, 3078, 3078, 3078,
     3078, 3078, 3078, 3078, 3078, 3083, 3083, 3083, 3083, 3083,

     3083, 3083, 3083, 3083, 3083, 3083, 3608, 3083, 3608, 3083,
     3083, 3608, 3608, 3083, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3083, 3083, 3083, 3102, 3102, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3102, 3102, 3102, 3608, 3608, 3102,
     3102, 3608, 3102, 3102, 3102, 3102, 3102, 3102, 3102, 3102,
     2770, 2770, 3608, 3608, 3608, 3608, 3608, 2770, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 2770, 2770, 3608, 2770, 2770,
     2770, 2770, 2770, 2770, 2770, 3127, 3127, 3127, 3127, 3127,
     3127, 3127, 3127, 3127, 3127, 3127, 3608, 3127, 3608, 3127,
     3127, 3608, 3608, 3127, 3608, 3608, 3608, 3608, 3608, 3608,

     3608, 3127, 3127, 3127, 3128, 3128, 3128, 3128, 3128, 3128,
     3128, 3128, 3128, 3128, 3128, 3608, 3128, 3608, 3128, 3128,
     3608, 3608, 3128, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3128, 3128, 3128,  724, 3608, 3608, 3608, 3608, 3608,  724,
      724, 3608,  724,  724,  724,  724,  724,  724,  724, 3140,
     3140, 3140, 3140, 3140, 3140, 3140, 3140, 3140, 3140, 3140,
     3608, 3140, 3608, 3140, 3140, 3608, 3608, 3140, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3140, 3140, 3140, 3175, 3175,
     3175, 3175, 3175, 3175, 3175, 3175, 3175, 3175, 3175, 3608,
     3175, 3608, 3175, 3175, 3608, 3608, 3175, 3608, 3608, 3608,

     3608, 3608, 3608, 3608, 3175, 3175, 3175, 3188, 3188, 3188,
     3188, 3188, 3188, 3188, 3188, 3188, 3188, 3188, 3608, 3188,
     3608, 3188, 3188, 3608, 3608, 3188, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3188, 3188, 3188, 3206, 3206, 3206, 3206,
     3206, 3206, 3206, 3206, 3206, 3206, 3206, 3608, 3206, 3608,
     3206, 3206, 3608, 3608, 3206, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3206, 3206, 3206, 3217, 3217, 3217, 3217, 3217,
     3217, 3217, 3217, 3217, 3217, 3217, 3217, 3217, 3217, 3217,
     3217, 3217, 3217, 3217, 3217, 3217, 3217, 3217, 3217, 3217,
     3217, 3217, 3217, 3217, 3221, 3221, 3221, 3221, 3221, 3221,

     3221, 3221, 3221, 3221, 3221, 3608, 3221, 3608, 3221, 3221,
     3608, 3608, 3221, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3221, 3221, 3221, 3222, 3222, 3222, 3222, 3222, 3222, 3222,
     3222, 3222, 3222, 3222, 3608, 3222, 3608, 3222, 3222, 3608,
     3608, 3222, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3222,
     3222, 3222, 3227, 3227, 3227, 3227, 3227, 3227, 3227, 3227,
     3227, 3227, 3227, 3227, 3227, 3227, 3227, 3227, 3227, 3227,
     3227, 3227, 3227, 3227, 3227, 3227, 3227, 3227, 3227, 3227,
     3227, 3231, 3231, 3231, 3231, 3231, 3231, 3231, 3231, 3231,
     3231, 3231, 3608, 3231, 3608, 3231, 3231, 3608, 3608, 3231,

     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3231, 3231, 3231,
     3239, 3239, 3239, 3239, 3239, 3239, 3239, 3239, 3239, 3239,
     3239, 3239, 3239, 3239, 3239, 3239, 3239, 3239, 3239, 3239,
     3239, 3239, 3239, 3239, 3239, 3239, 3239, 3239, 3239, 3245,
     3245, 3245, 3245, 3245, 3245, 3245, 3245, 3245, 3245, 3245,
     3608, 3245, 3608, 3245, 3245, 3608, 3608, 3245, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3245, 3245, 3245, 3249, 3249,
     3249, 3249, 3249, 3249, 3249, 3249, 3249, 3249, 3249, 3608,
     3249, 3608, 3249, 3249, 3608, 3608, 3249, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3249, 3249, 3249, 3250, 3250, 3250,

     3250, 3250, 3250, 3250, 3250, 3250, 3250, 3250, 3608, 3250,
     3608, 3250, 3250, 3608, 3608, 3250, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3250, 3250, 3250, 3252, 3252, 3252, 3252,
     3252, 3252, 3252, 3252, 3252, 3252, 3252, 3252, 3252, 3252,
     3252, 3252, 3252, 3252, 3252, 3252, 3252, 3252, 3252, 3252,
     3252, 3252, 3252, 3252, 3252, 3255, 3255, 3255, 3255, 3255,
     3255, 3255, 3255, 3255, 3255, 3255, 3255, 3255, 3255, 3255,
     3255, 3255, 3255, 3255, 3255, 3255, 3255, 3255, 3255, 3255,
     3255, 3255, 3255, 3255, 3259, 3259, 3259, 3259, 3259, 3259,
     3259, 3259, 3259, 3259, 3259, 3608, 3259, 3608, 3259, 3259,

     3608, 3608, 3259, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3259, 3259, 3259, 3260, 3260, 3260, 3260, 3260, 3260, 3260,
     3260, 3260, 3260, 3260, 3608, 3260, 3608, 3260, 3260, 3608,
     3608, 3260, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3260,
     3260, 3260, 3265, 3265, 3265, 3265, 3265, 3265, 3265, 3265,
     3265, 3265, 3265, 3265, 3265, 3265, 3265, 3265, 3265, 3265,
     3265, 3265, 3265, 3265, 3265, 3265, 3265, 3265, 3265, 3265,
     3265, 3293, 3293, 3293, 3293, 3293, 3293, 3293, 3293, 3293,
     3293, 3293, 3293, 3293, 3293, 3293, 3293, 3293, 3293, 3293,
     3293, 3293, 3293, 3293, 3293, 3293, 3293, 3293, 3293, 3293,

     3298, 3298, 3298, 3298, 3298, 3298, 3298, 3298, 3298, 3298,
     3298, 3608, 3298, 3608, 3298, 3298, 3608, 3608, 3298, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3298, 3298, 3298, 3299,
     3299, 3299, 3299, 3299, 3299, 3299, 3299, 3299, 3299, 3299,
     3608, 3299, 3608, 3299, 3299, 3608, 3608, 3299, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3299, 3299, 3299, 3300, 3300,
     3300, 3300, 3300, 3300, 3300, 3300, 3300, 3300, 3300, 3608,
     3300, 3608, 3300, 3300, 3608, 3608, 3300, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3300, 3300, 3300, 3312, 3312, 3312,
     3312, 3312, 3312, 3312, 3312, 3312, 3312, 3312, 3608, 3312,

     3608, 3312, 3312, 3608, 3608, 3312, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3312, 3312, 3312, 3314, 3314, 3314, 3314,
     3314, 3314, 3314, 3314, 3314, 3314, 3314, 3608, 3314, 3608,
     3314, 3314, 3608, 3608, 3314, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3314, 3314, 3314, 3319, 3319, 3319, 3319, 3319,
     3319, 3319, 3319, 3319, 3319, 3319, 3608, 3319, 3608, 3319,
     3319, 3608, 3608, 3319, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3319, 3319, 3319, 3323, 3323, 3323, 3323, 3323, 3323,
     3323, 3323, 3323, 3323, 3323, 3608, 3323, 3608, 3323, 3323,
     3608, 3608, 3323, 3608, 3608, 3608, 3608, 3608, 3608, 3608,

     3323, 3323, 3323, 3324, 3324, 3324, 3324, 3324, 3324, 3324,
     3324, 3324, 3324, 3324, 3608, 3324, 3608, 3324, 3324, 3608,
     3608, 3324, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3324,
     3324, 3324, 3325, 3325, 3325, 3325, 3325, 3325, 3325, 3325,
     3325, 3325, 3325, 3608, 3325, 3608, 3325, 3325, 3608, 3608,
     3325, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3325, 3325,
     3325, 3333, 3333, 3333, 3333, 3333, 3333, 3333, 3333, 3333,
     3333, 3333, 3608, 3333, 3608, 3333, 3333, 3608, 3608, 3333,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3333, 3333, 3333,
     3334, 3334, 3334, 3334, 3334, 3334, 3334, 3334, 3334, 3334,

     3334, 3608, 3334, 3608, 3334, 3334, 3608, 3608, 3334, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3334, 3334, 3334, 3343,
     3343, 3343, 3343, 3343, 3343, 3343, 3343, 3343, 3343, 3343,
     3608, 3343, 3608, 3343, 3343, 3608, 3608, 3343, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3343, 3343, 3343, 3347, 3347,
     3347, 3347, 3347, 3347, 3347, 3347, 3347, 3347, 3347, 3347,
     3347, 3347, 3347, 3347, 3347, 3347, 3347, 3347, 3347, 3347,
     3347, 3347, 3347, 3347, 3347, 3347, 3347, 3360, 3360, 3360,
     3360, 3360, 3360, 3360, 3360, 3360, 3360, 3360, 3608, 3360,
     3608, 3360, 3360, 3608, 3608, 3360, 3608, 3608, 3608, 3608,

     3608, 3608, 3608, 3360, 3360, 3360, 3370, 3370, 3370, 3370,
     3370, 3370, 3370, 3370, 3370, 3370, 3370, 3608, 3370, 3608,
     3370, 3370, 3608, 3608, 3370, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3370, 3370, 3370, 3378, 3378, 3378, 3378, 3378,
     3378, 3378, 3378, 3378, 3378, 3378, 3608, 3378, 3608, 3378,
     3378, 3608, 3608, 3378, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3378, 3378, 3378, 3379, 3379, 3379, 3379, 3379, 3379,
     3379, 3379, 3379, 3379, 3379, 3608, 3379, 3608, 3379, 3379,
     3608, 3608, 3379, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3379, 3379, 3379, 3384, 3384, 3384, 3384, 3384, 3384, 3384,

     3384, 3384, 3384, 3384, 3608, 3384, 3608, 3384, 3384, 3608,
     3608, 3384, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3384,
     3384, 3384,  724, 3608, 3608, 3608,  724, 3608,  724,  724,
     3608,  724,  724,  724,  724,  724,  724,  724, 3396, 3396,
     3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396,
     3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396,
     3396, 3396, 3396, 3396, 3396, 3396, 3396, 3420, 3420, 3420,
     3420, 3420, 3420, 3420, 3420, 3420, 3420, 3420, 3608, 3420,
     3608, 3420, 3420, 3608, 3608, 3420, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3420, 3420, 3420, 3421, 3421, 3421, 3421,

     3421, 3421, 3421, 3421, 3421, 3421, 3421, 3608, 3421, 3608,
     3421, 3421, 3608, 3608, 3421, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3421, 3421, 3421, 3422, 3422, 3422, 3422, 3422,
     3422, 3422, 3422, 3422, 3422, 3422, 3422, 3422, 3422, 3422,
     3422, 3422, 3422, 3422, 3422, 3422, 3422, 3422, 3422, 3422,
     3422, 3422, 3422, 3422, 3431, 3431, 3431, 3431, 3431, 3431,
     3431, 3431, 3431, 3431, 3431, 3608, 3431, 3608, 3431, 3431,
     3608, 3608, 3431, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3431, 3431, 3431, 3432, 3432, 3432, 3432, 3432, 3432, 3432,
     3432, 3432, 3432, 3432, 3608, 3432, 3608, 3432, 3432, 3608,

     3608, 3432, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3432,
     3432, 3432, 3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441,
     3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441,
     3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441, 3441,
     3441, 3444, 3444, 3444, 3444, 3444, 3444, 3444, 3444, 3444,
     3444, 3444, 3444, 3444, 3444, 3444, 3444, 3444, 3444, 3444,
     3444, 3444, 3444, 3444, 3444, 3444, 3444, 3444, 3444, 3444,
     3448, 3448, 3448, 3448, 3448, 3448, 3448, 3448, 3448, 3448,
     3448, 3448, 3448, 3448, 3448, 3448, 3448, 3448, 3448, 3448,
     3448, 3448, 3448, 3448, 3448, 3448, 3448, 3448, 3448, 3450,

     3450, 3450, 3450, 3450, 3450, 3450, 3450, 3450, 3450, 3450,
     3450, 3450, 3450, 3450, 3450, 3450, 3450, 3450, 3450, 3450,
     3450, 3450, 3450, 3450, 3450, 3450, 3450, 3450, 3459, 3459,
     3459, 3459, 3459, 3459, 3459, 3459, 3459, 3459, 3459, 3459,
     3459, 3459, 3459, 3459, 3459, 3459, 3459, 3459, 3459, 3459,
     3459, 3459, 3459, 3459, 3459, 3459, 3459, 3463, 3463, 3463,
     3463, 3463, 3463, 3463, 3463, 3463, 3463, 3463, 3608, 3463,
     3608, 3463, 3463, 3608, 3608, 3463, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3463, 3463, 3463, 3464, 3464, 3464, 3464,
     3464, 3464, 3464, 3464, 3464, 3464, 3464, 3608, 3464, 3608,

     3464, 3464, 3608, 3608, 3464, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3464, 3464, 3464, 3471, 3471, 3471, 3471, 3471,
     3471, 3471, 3471, 3471, 3471, 3471, 3608, 3471, 3608, 3471,
     3471, 3608, 3608, 3471, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3471, 3471, 3471, 3472, 3472, 3472, 3472, 3472, 3472,
     3472, 3472, 3472, 3472, 3472, 3608, 3472, 3608, 3472, 3472,
     3608, 3608, 3472, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3472, 3472, 3472, 3481, 3481, 3481, 3481, 3481, 3481, 3481,
     3481, 3481, 3481, 3481, 3481, 3481, 3481, 3481, 3481, 3481,
     3481, 3481, 3481, 3481, 3481, 3481, 3481, 3481, 3481, 3481,

     3481, 3481, 3489, 3489, 3489, 3489, 3489, 3489, 3489, 3489,
     3489, 3489, 3489, 3608, 3489, 3608, 3489, 3489, 3608, 3608,
     3489, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3489, 3489,
     3489, 3495, 3495, 3495, 3495, 3495, 3495, 3495, 3495, 3495,
     3495, 3495, 3495, 3495, 3495, 3495, 3495, 3495, 3495, 3495,
     3495, 3495, 3495, 3495, 3495, 3495, 3495, 3495, 3495, 3495,
     3501, 3501, 3501, 3501, 3501, 3501, 3501, 3501, 3501, 3501,
     3501, 3501, 3501, 3501, 3501, 3501, 3501, 3501, 3501, 3501,
     3501, 3501, 3501, 3501, 3501, 3501, 3501, 3501, 3501, 3522,
     3522, 3522, 3522, 3522, 3522, 3522, 3522, 3522, 3522, 3522,

     3608, 3522, 3608, 3522, 3522, 3608, 3608, 3522, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3522, 3522, 3522, 3537, 3537,
     3537, 3537, 3537, 3537, 3537, 3537, 3537, 3537, 3537, 3608,
     3537, 3608, 3537, 3537, 3608, 3608, 3537, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3537, 3537, 3537, 3544, 3544, 3544,
     3544, 3544, 3544, 3544, 3544, 3544, 3544, 3544, 3544, 3544,
     3544, 3544, 3544, 3544, 3544, 3544, 3544, 3544, 3544, 3544,
     3544, 3544, 3544, 3544, 3544, 3544, 3551, 3551, 3551, 3551,
     3551, 3551, 3551, 3551, 3551, 3551, 3551, 3551, 3551, 3551,
     3551, 3551, 3551, 3551, 3551, 3551, 3551, 3551, 3551, 3551,

     3551, 3551, 3551, 3551, 3551, 3554, 3554, 3554, 3554, 3554,
     3554, 3554, 3554, 3554, 3554, 3554, 3608, 3554, 3608, 3554,
     3554, 3608, 3608, 3554, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3554, 3554, 3554, 3560, 3560, 3560, 3560, 3560, 3560,
     3560, 3560, 3560, 3560, 3560, 3608, 3560, 3608, 3560, 3560,
     3608, 3608, 3560, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3560, 3560, 3560, 3570, 3570, 3570, 3570, 3570, 3570, 3570,
     3570, 3570, 3570, 3570, 3570, 3570, 3570, 3570, 3570, 3570,
     3570, 3570, 3570, 3570, 3570, 3570, 3570, 3570, 3570, 3570,
     3570, 3570, 3574, 3574, 3574, 3574, 3574, 3574, 3574, 3574,

     3574, 3574, 3574, 3608, 3574, 3608, 3574, 3574, 3608, 3608,
     3574, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3574, 3574,
     3574, 3575, 3575, 3575, 3575, 3575, 3575, 3575, 3575, 3575,
     3575, 3575, 3608, 3575, 3608, 3575, 3575, 3608, 3608, 3575,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3575, 3575, 3575,
     3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576,
     3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576,
     3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3576, 3586,
     3586, 3586, 3586, 3586, 3586, 3586, 3586, 3586, 3586, 3586,
     3586, 3586, 3586, 3586, 3586, 3586, 3586, 3586, 3586, 3586,

     3586, 3586, 3586, 3586, 3586, 3586, 3586, 3586, 3590, 3590,
     3590, 3590, 3590, 3590, 3590, 3590, 3590, 3590, 3590, 3590,
     3590, 3590, 3590, 3590, 3590, 3590, 3590, 3590, 3590, 3590,
     3590, 3590, 3590, 3590, 3590, 3590, 3590, 3598, 3598, 3598,
     3598, 3598, 3598, 3598, 3598, 3598, 3598, 3598, 3598, 3598,
     3598, 3598, 3598, 3598, 3598, 3598, 3598, 3598, 3598, 3598,
     3598, 3598, 3598, 3598, 3598, 3598, 3601, 3601, 3601, 3601,
     3601, 3601, 3601, 3601, 3601, 3601, 3601, 3601, 3601, 3601,
     3601, 3601, 3601, 3601, 3601, 3601, 3601, 3601, 3601, 3601,
     3601, 3601, 3601, 3601, 3601, 3604, 3604, 3604, 3604, 3604,

     3604, 3604, 3604, 3604, 3604, 3604, 3604, 3604, 3604, 3604,
     3604, 3604, 3604, 3604, 3604, 3604, 3604, 3604, 3604, 3604,
     3604, 3604, 3604, 3604,   63, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608

    } ;

static yyconst flex_int16_t yy_chk[22796] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        3,  759,    3,    3,    4,    9,    4,    4,   10,   70,
       95,    3,    3,   70,  105,    4,    4,    5,  188,    5,
        5,   73,   73,    6,    3,    6,    6,  759,    4,    7,

        7,    7,    7,    7,    8,    8,    8,    8,    8,   74,
       59,    7,    7,   95,   81,    7,    8,    8,  188,  105,
        8,   15,  172,   74,   16,    7,   88,    5,    9,   81,
        8,   10,   15,    6,    9,   16,    3,   10,    3,    3,
        4,   15,    4,    4,   16,   65,   65,   65,   65,   65,
       88,   27,   27,   27,   27,   27,    5,   80,  172,   80,
       59,  247,    6,   27,    7,   27,   27,   59,   96,    8,
       11,   11,   11,   11,   11,   11,  247,   27,   60,  103,
      173,   11,   92,   28,   28,   28,   28,   28,   35,   35,
       35,   35,   35,   35,   11,   28,   35,   28,   28,  103,

       89,   96,   35,   36,   36,   36,   36,   36,   36,   28,
       41,   36,   41,   41, 1426,   92,  173,   36,   92,   42,
       89,   42,   42,   43, 1427,   43,   43,   89,   60, 1428,
       43,  157,  157,   89,   43,   60,   11,   41,   11,   11,
       12,   12,   12,   12,   12,   12,   42,   43,   82,   99,
       82,   12,   49,   49,   49,   49,   49,   35,   49,  166,
      151,  174,   82,   49,   12,   50,   50,   50,   50,   50,
      163,   50,   36,   99,  151,   82,   50,  159,  159,   41,
       66,   66,   66,   66,   66,  174,  873,  166,   42,   43,
      163,   43,   43,   67,   67,   67,   67,   67,   68,   68,

       68,   68,   68,  163,  196,  196,   12,  873,   12,   12,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,

       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,

       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,

       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       25,   25,   25,   25,   25,  178,   25,   44,  102,   44,
       44,   25,   25,  241,   44,  195,   25,   90,   44,  195,
      222,  170,   53,   53,   53,   53,   53,  241,   94,   97,
      258,   44,  178,  222,   53,   54,   54,   54,   54,   54,

      102,   90,  102,  258,   25,   90,  164,   54,   94,   25,
       90,   97,   94,   25,  170,   25,   26,   26,   26,   26,
       26,   94,   26,  416,  104,   97,   87,   26,   26,  272,
       93,  272,   26,   44,  164,   44,   44,   53,  177,  164,
       53, 1020,   84,   84,   84,   84,   84,   84,  104, 1020,
       54,   87,  104,   54,   84,   93,   87,  104,   87,  416,
       26,   93,   93,   87,   87,   26,  205,  205,   84,   26,
      177,   26,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,

       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,

       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,

       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39, 1429,   39,   39,   39,   39,   39,
       39,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,

       40,   40,   40, 1430,   40,   40,   40,   40,   40,   40,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,

       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       55,   55,   55,   55,   55,   55,   56,   56,   56,   56,
       56,   56,  217,  217,  395,   91,  171,  189,   55,   57,
       57,   57,   57,   57,   56,   57,   98,  597,  100,  597,
       57,   57,   58,   58,   58,   58,   58,  136,   58,  189,
      171,   57,  395,   58,   58,   91,   98,   91,  100,  171,
      100,  136,  100,   98,   58,   91,  204,   91,  136,  216,
      204,  100,   98,  216,   57,  240,  240,  250,  250,   55,
      120,  120,  120,  120,  120,   56, 1431,   58,   61,   61,

       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,  101,  112,
      121,  121,  121,  121,  121,  122,  122,  122,  122,  122,
      135,  141,  141,  141,  141,  141,  146,  146,  146,  146,
      146,  237,  101,  252,  252,  237,  101,  147,  147,  147,

      147,  147,  141,  112,  101,  162,  304,  304,  262,  112,
      165,  101,  167,  112,  135,  112,  168,  259,  112,  266,
      135,  259,  262,  405,  135, 1432,  135,  169,  266,  135,
      148,  148,  148,  148,  148,  175,  167,  162, 1060,  168,
      165,  165,  162,  162,  176,  165, 1060,  169,  168,  267,
      167,  169,  165,  168,  168,  175,  405,  175,  181,  181,
      181,  181,  181,  267,  261,  169,  288,  261,  176,  261,
      289,  176,  288,  175,  329,  351,  289,  176,  329,  351,
      176,  182,  182,  182,  182,  182,  183,  183,  183,  183,
      183,  192,  192,  192,  192,  192,  193,  193,  193,  193,

      193,  194,  194,  194,  194,  194,  201,  201,  201,  201,
      201,  202,  202,  202,  202,  202,  203,  203,  203,  203,
      203,  213,  213,  213,  213,  213,  214,  214,  214,  214,
      214,  215,  215,  215,  215,  215,  225,  225,  225,  225,
      225,  226,  226,  226,  226,  226,  227,  227,  227,  227,
      227,  233,  233,  233,  233,  233,  234,  234,  234,  234,
      234,  235,  235,  235,  235,  235,  256,  330,  330,  388,
      264,  256,  263,  256,  264,  260,  260,  260,  256,  256,
      260,  263,  268,  264,  612,  290,  263,  260,  264,  268,
      270,  290,  270,  291,  270,  271,  271,  292,  268,  291,

      612,  271,  273,  292,  271,  273,  273,  388,  270,  352,
      352,  273,  278,  278,  278,  278,  278,  279,  279,  279,
      279,  279,  280,  280,  280,  280,  280,  283,  283,  283,
      283,  283,  284,  284,  284,  284,  284,  285,  285,  285,
      285,  285,  286,  286,  286,  286,  286,  389,  308,  286,
      293,  293,  293,  293,  293,  294,  294,  294,  294,  294,
      368,  368, 1433,  286,  297,  297,  297,  297,  297,  298,
      298,  298,  298,  298,  364,  383,  297,  389,  364, 1436,
      357,  298,  308,  312,  312,  312,  312,  312,  308,  357,
      401,  381,  308,  381,  308,  383,  381,  308,  313,  313,

      313,  313,  313,  314,  314,  314,  314,  314,  318,  318,
      318,  318,  318,  319,  319,  319,  319,  319,  320,  320,
      320,  320,  320,  327,  327,  327,  327,  327,  401,  327,
      438,  525,  525,  438,  327,  328,  328,  328,  328,  328,
      453,  328, 1437,  453,  534,  534,  328,  332,  332,  332,
      332,  332,  333,  333,  333,  333,  333,  334,  334,  334,
      334,  334,  338,  338,  338,  338,  338,  339,  339,  339,
      339,  339,  340,  340,  340,  340,  340,  349,  349,  349,
      349,  349,  350,  350,  350,  350,  350,  366,  369,  349,
      399,  393,  420,  394,  350,  361,  361,  361,  361,  361,

      362,  362,  362,  362,  362,  363,  363,  363,  363,  363,
      411,  400,  399,  375,  378,  379,  393,  379,  390,  396,
      407,  366,  369,  420,  402,  375,  378,  366,  369,  379,
      394,  366,  369,  366,  369,  400,  366,  369,  375,  378,
      390, 1087,  379,  382,  382,  382,  382,  382,  402, 1087,
      396,  411,  522,  396,  407,  382,  522,  544,  544,  410,
      403,  390,  391,  391,  391,  391,  391,  391,  391,  391,
      391,  391,  391,  391,  391,  391,  391,  391,  391,  391,
      403,  391,  391,  397,  391,  391,  391,  391,  391,  391,
      391,  392,  392,  392,  392,  392,  398,  410,  408,  410,

      391,  391,  391,  392,  404,  397,  406,  406,  406,  406,
      406,  409,  392,  397,  412,  413,  398,  414,  406,  415,
      397,  398,  417,  418,  424,  419,  426,  406,  391,  391,
      391,  391,  422,  398,  404,  408,  408,  412,  413,  414,
      404,  421,  415,  409,  423,  425,  427,  418,  428,  429,
      392,  431,  430,  413,  432,  419,  418,  419,  417,  419,
      433,  434,  422,  437,  422,  452,  424,  483,  421,  426,
      482,  479, 1438,  458,  421,  423,  425,  485,  509,  431,
      427,  428,  430,  429,  484,  487,  432,  447,  447,  447,
      447,  447,  432,  458,  479,  493,  433,  496,  483,  485,

      434,  463,  463,  463,  463,  463,  437,  482,  452,  464,
      464,  464,  464,  464,  468,  468,  468,  468,  468,  487,
      509,  496, 1441,  493,  484,  486,  505,  490,  497,  506,
      464,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  486,
      480,  480,  489,  480,  480,  480,  480,  480,  480,  480,
      500,  502,  486,  490,  505,  497,  507,  506,  508,  480,
      480,  480,  510,  609,  489,  515,  515,  515,  515,  515,
      609,  531, 1442,  500,  502,  531,  504,  541,  508,  650,
      489,  541,  650,  507,  561,  561,  510,  480,  480,  480,

      480,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  504,
      481,  481,  512,  481,  481,  481,  481,  481,  481,  481,
      513,  514,  519,  520,  521,  521,  521,  521,  521,  481,
      481,  481,  579,  579,  594,  594,  512,  530,  530,  530,
      530,  530,  765,  557,  765,  514,  519,  557,  513, 1443,
      520,  481,  540,  540,  540,  540,  540,  481,  481,  481,
      481,  488,  488,  488,  488,  488,  488,  488,  488,  488,
      488,  488,  488,  488,  488,  488,  488,  488,  488,  703,
      488,  488,  703,  488,  488,  488,  488,  488,  488,  488,

      553,  553,  553,  553,  553,  575,  587, 1445,  587,  488,
      488,  488,  555,  555,  555,  555,  555,  577,  577,  577,
      577,  577,  580, 1449,  587,  575,  580,  621,  608,  577,
      608,  649,  608,  621,  645,  645,  608,  488,  488,  488,
      488,  491,  491,  491,  491,  491,  491,  491,  491,  491,
      491,  491,  491,  491,  491,  491,  491,  491,  491,  709,
      491,  491,  709,  491,  491,  491,  491,  491,  491,  491,
      581,  582,  886,  581,  649,  886,  582,  632,  581,  491,
      491,  491,  666,  632,  633,  581,  666, 1450,  582,  702,
      633,  582,  624,  624,  624,  624,  624,  627,  627,  627,

      627,  627,  628,  628,  628,  628,  628,  491,  491,  491,
      491,  492,  492,  492,  492,  492,  492,  492,  492,  492,
      492,  492,  492,  492,  492,  492,  492,  492,  492,  725,
      492,  492,  702,  492,  492,  492,  492,  492,  492,  492,
      630,  630,  630,  630,  630, 1451,  634,  630,  635,  492,
      492,  492,  634,  725,  635,  637,  637,  637,  637,  637,
     1452,  630,  639,  639,  639,  639,  639,  657,  657,  657,
      657,  657,  667,  667,  639,  671,  671,  492,  492,  492,
      492,  494,  494,  494,  494,  494,  494,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  494,  494,  494,

      494,  494,  494,  494,  494,  494,  494,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  494,  494,  494,
      494,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  495,  495,  495,  495,  495,  735,
      495,  495,  708,  495,  495,  495,  495,  495,  495,  495,
      661,  661,  661,  661,  661,  691,  691, 1453,  748,  495,
      495,  495,  665,  665,  665,  665,  665,  668,  665, 1102,

     1102,  668,  735,  665,  674,  674,  674,  674,  674,  678,
      678,  678,  678,  678,  739,  708,  748,  495,  495,  495,
      495,  498,  498,  498,  498,  498,  498,  498,  498,  498,
      498,  498,  498,  498,  498,  498,  498,  498,  498,  734,
      498,  498,  737,  498,  498,  498,  498,  498,  498,  498,
      686,  686,  686,  686,  686,  727,  717,  739,  736,  498,
      498,  498,  686,  688,  716,  769,  716,  688,  717,  716,
      950,  793,  737,  793,  803,  734,  803,  892,  738,  727,
      892,  717,  736, 1454,  950,  769,  745,  498,  498,  498,
      498,  499,  499,  499,  499,  499,  499,  499,  499,  499,

      499,  499,  499,  499,  499,  499,  499,  499,  499,  738,
      499,  499,  740,  499,  499,  499,  499,  499,  499,  499,
      741,  742,  744,  743,  745,  747,  750,  757,  761,  499,
      499,  499,  770,  771,  812,  812,  812,  812,  812, 1021,
      746, 1021,  740,  742,  741,  743,  749,  744,  750, 1459,
      898,  757,  761,  898,  770,  771,  747,  499,  499,  499,
      499,  501,  501,  501,  501,  501,  501,  501,  501,  501,
      501,  501,  501,  501,  501,  501,  501,  501,  501,  746,
      501,  501,  749,  501,  501,  501,  501,  501,  501,  501,
      751,  752,  752,  752,  752,  752,  787,  762,  764,  501,

      501,  501,  767,  752,  754,  754,  754,  754,  754,  926,
      904,  912,  752,  904,  912,  926,  754, 1018,  753,  756,
      751,  762,  764, 1018,  787, 1460,  767,  501,  501,  501,
      501,  503,  503,  503,  503,  503,  503,  503,  503,  503,
      503,  503,  503,  503,  503,  503,  503,  503,  503,  753,
      503,  503,  756,  503,  503,  503,  503,  503,  503,  503,
      758,  760,  760,  760,  760,  760,  768,  772,  773,  503,
      503,  503,  775,  760,  879,  918,  503,  929,  918, 1463,
      929,  935,  760,  766,  935, 1477,  768,  772,  773, 1031,
      768,  763, 1031,  758,  879, 1479,  775,  503,  503,  503,

      503,  511,  511,  511,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  511,  763,
      511,  511,  766,  511,  511,  511,  511,  511,  511,  511,
      763,  524,  526,  774,  776,  778,  779,  777,  780,  511,
      511,  511,  977, 1037,  781,  533, 1037, 1048,  785, 1101,
     1048,  977,  535, 1101,  823,  830,  827,  843,  776,  782,
      778,  788,  780,  774,  784,  524,  526,  511,  511,  511,
      511,  524,  526,  777,  779,  524,  526,  524,  526,  533,
      524,  526,  781,  782,  785,  533,  535,  788,  784,  533,
      823,  533,  535,  830,  533,  827,  535,  843,  535,  543,

      789,  535,  539,  539,  539,  539,  539,  539,  539,  539,
      539,  539,  539,  539,  539,  539,  539,  539,  539,  539,
      786,  539,  539,  789,  539,  539,  539,  539,  539,  539,
      539,  790,  545,  543,  791,  792,  829,  834,  835,  543,
      539,  539,  539,  543,  786,  543,  559,  836,  543,  848,
      870,  825,  828,  562,  670,  869, 1455,  791,  790,  792,
      829,  834,  835,  871, 1455,  852,  545,  672,  539,  539,
      539,  539,  545,  848,  690,  692,  545,  869,  545,  847,
      559,  545,  825,  828,  836, 1480,  559,  562,  670,  870,
      559,  871,  559,  562,  670,  559,  852,  562,  670,  562,

      670,  672,  562,  670, 1068,  853, 1068,  672,  690,  692,
     1075,  672, 1075,  672,  690,  692,  672,  847,  690,  692,
      690,  692,  824,  690,  692,  726,  726,  726,  726,  726,
      726,  726,  726,  726,  726,  726,  726,  726,  726,  726,
      726,  726,  726,  853,  726,  726,  824,  726,  726,  726,
      726,  726,  726,  726,  864,  819,  819,  819,  819,  819,
      824,  819,  868,  726,  726,  726,  819,  819,  941,  941,
      941,  941,  941,  943,  943,  943,  943,  943,  864, 1054,
      941, 1235, 1054, 1235,  875,  943,  868,  874,  885,  872,
      881,  726,  726,  726,  726,  728,  728,  728,  728,  728,

      728,  728,  728,  728,  728,  728,  728,  728,  728,  728,
      728,  728,  728,  872,  728,  728,  875,  728,  728,  728,
      728,  728,  728,  728,  880,  874,  881,  883,  884,  891,
      897,  885,  903,  728,  728,  728,  911,  917,  928,  934,
      976,  947,  947,  947,  947,  947, 1030,  969,  969,  969,
      969,  969,  884,  947,  976, 1089, 1108,  880,  883,  969,
     1481,  728,  728,  728,  728,  732,  732,  732,  732,  732,
     1036,  732,  891,  897, 1120,  903,  732,  732, 1047,  911,
      917,  928,  934, 1095, 1108, 1111,  947, 1145, 1112, 1030,
     1116, 1089,  947,  947,  981,  981,  981,  981,  981,  947,

     1017, 1017, 1017, 1017, 1017, 1120,  981, 1017, 1111, 1109,
      732, 1053, 1112, 1036, 1116, 1115,  732,  732, 1486, 1145,
     1095, 1047, 1114,  732,  783,  783,  783,  783,  783,  783,
      783,  783,  783,  783,  783,  783,  783,  783,  783,  783,
      783,  783, 1114,  783,  783, 1109,  783,  783,  783,  783,
      783,  783,  783, 1115, 1053, 1110, 1110, 1110, 1110, 1110,
     1118, 1119,  783,  783,  783, 1151, 1213, 1110, 1113, 1113,
     1113, 1113, 1113, 1194, 1195, 1195, 1110, 1194, 1444, 1487,
     1113, 1119, 1444, 1490, 1118, 1151, 1213, 1447, 1447, 1113,
      783,  783,  783,  783,  814,  814,  814,  814,  814,  814,

      814,  814,  814,  814,  814,  814,  814,  814,  814,  814,
      814,  814,  814,  814,  814,  814,  814,  814,  814,  814,
      814,  814,  814,  814,  814,  814,  814,  814,  814,  814,
      814,  814,  814,  814,  814,  814,  814,  814,  814,  814,
      814,  814,  814,  814,  814,  814,  814,  814,  814,  814,
      814,  814,  814,  814,  814,  814,  814,  814,  814,  814,
      814,  814,  814,  814,  826,  826,  826,  826,  826,  826,
      826,  826,  826,  826,  826,  826,  826,  826,  826,  826,
      826,  826, 1123,  826,  826, 1117,  826,  826,  826,  826,
      826,  826,  826, 1091, 1091, 1091, 1091, 1091, 1121, 1138,

     1488, 1167,  826,  826,  826, 1091, 1097, 1097, 1097, 1097,
     1097, 1126, 1126, 1126, 1126, 1126, 1122, 1497, 1097, 1126,
     1488, 1117, 1121, 1126, 1138, 1123, 1124, 1133, 1167, 1130,
      826,  826,  826,  826,  860,  860,  860,  860,  860,  860,
      860,  860,  860,  860,  860,  860,  860,  860,  860,  860,
      860,  860, 1122,  860,  860, 1091,  860,  860,  860,  860,
      860,  860,  860, 1125, 1124, 1130, 1133, 1136, 1097, 1139,
     1147, 1148,  860,  860,  860, 1134, 1134, 1134, 1134, 1134,
     1242, 1509, 1242, 1134, 1482, 1510, 1131, 1134, 1249, 1137,
     1249, 1256, 1482, 1256, 1147, 1148, 1125, 1136, 1516, 1139,

      860,  860,  860,  860, 1128, 1128, 1128, 1128, 1128, 1128,
     1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
     1128, 1128, 1131, 1128, 1128, 1137, 1128, 1128, 1128, 1128,
     1128, 1128, 1128, 1140, 1140, 1140, 1140, 1140, 1144, 1154,
     1198, 1156, 1128, 1128, 1128, 1140, 1529, 1530, 1157, 1157,
     1157, 1157, 1157, 1263, 1140, 1263, 1142, 1531, 1535, 1143,
     1157, 1536, 1537, 1154, 1144, 1156, 1146, 1149, 1198, 1157,
     1128, 1128, 1128, 1128, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1142, 1132, 1132, 1143, 1132, 1132, 1132, 1132,

     1132, 1132, 1132, 1146, 1150, 1149, 1153, 1164, 1166, 1201,
     1206, 1538, 1132, 1132, 1132, 1158, 1158, 1158, 1158, 1158,
     1188, 1188, 1188, 1188, 1188, 1159, 1539, 1158, 1163, 1541,
     1164, 1166, 1208, 1201, 1206, 1150, 1158, 1153, 1165, 1170,
     1132, 1132, 1132, 1132, 1152, 1152, 1152, 1152, 1152, 1152,
     1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
     1152, 1152, 1159, 1152, 1152, 1163, 1152, 1152, 1152, 1152,
     1152, 1152, 1152, 1168, 1165, 1208, 1170, 1205, 1222, 1231,
     1158, 1233, 1152, 1152, 1152, 1545, 1193, 1193, 1193, 1193,
     1193, 1270, 1193, 1270, 1546, 1540, 1171, 1193, 1193, 1540,

     1550, 1209, 1222, 1231, 1553, 1233, 1168, 1210, 1205, 1211,
     1152, 1152, 1152, 1152, 1169, 1169, 1169, 1169, 1169, 1169,
     1169, 1169, 1169, 1169, 1169, 1169, 1169, 1169, 1169, 1169,
     1169, 1169, 1171, 1169, 1169, 1209, 1169, 1169, 1169, 1169,
     1169, 1169, 1169, 1210, 1225, 1230, 1559, 1211, 1226, 1283,
     1566, 1283, 1169, 1169, 1169, 1215, 1215, 1215, 1215, 1215,
     1290, 1386, 1290, 1386, 1543, 1543, 1214, 1215, 1393, 1169,
     1393, 1403, 1410, 1403, 1410, 1225, 1215, 1230, 1226, 1573,
     1169, 1169, 1169, 1169, 1199, 1199, 1199, 1199, 1199, 1199,
     1199, 1199, 1199, 1199, 1199, 1199, 1199, 1199, 1199, 1199,

     1199, 1199, 1214, 1199, 1199, 1221, 1199, 1199, 1199, 1199,
     1199, 1199, 1199, 1200, 1200, 1200, 1200, 1200, 1234, 1456,
     1457, 1465, 1199, 1199, 1199, 1200, 1216, 1216, 1216, 1216,
     1216, 1585, 1561, 1592, 1200, 1513, 1561, 1223, 1216, 1224,
     1456, 1221, 1513, 1593, 1457, 1465, 1594, 1216, 1475, 1234,
     1199, 1199, 1199, 1199, 1200, 1207, 1207, 1207, 1207, 1207,
     1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207,
     1207, 1207, 1207, 1223, 1207, 1207, 1224, 1207, 1207, 1207,
     1207, 1207, 1207, 1207, 1220, 1220, 1220, 1220, 1220, 1475,
     1474, 1467, 1470, 1207, 1207, 1207, 1220, 1227, 1227, 1227,

     1227, 1227, 1595, 1596, 1597, 1220, 1598, 1547, 1229, 1227,
     1376, 1376, 1376, 1376, 1376, 1547, 1470, 1376, 1227, 1467,
     1474, 1207, 1207, 1207, 1207, 1212, 1212, 1212, 1212, 1212,
     1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212,
     1212, 1212, 1212, 1439, 1212, 1212, 1229, 1212, 1212, 1212,
     1212, 1212, 1212, 1212, 1299, 1299, 1299, 1299, 1299, 1472,
     1492, 1494, 1499, 1212, 1212, 1212, 1299, 1303, 1303, 1303,
     1303, 1303, 1314, 1314, 1314, 1314, 1314, 1464, 1599, 1303,
     1600, 1439, 1492, 1472, 1314, 1494, 1499, 1601, 1602, 1493,
     1603, 1212, 1212, 1212, 1212, 1228, 1228, 1228, 1228, 1228,

     1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1228, 1228, 1464, 1228, 1228, 1299, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1306, 1306, 1306, 1306, 1306, 1303,
     1468, 1491, 1493, 1228, 1228, 1228, 1306, 1315, 1315, 1315,
     1315, 1315, 1318, 1318, 1318, 1318, 1318, 1461, 1466, 1315,
     1483, 1484, 1507, 1498, 1318, 1373, 1373, 1373, 1373, 1373,
     1469, 1228, 1228, 1228, 1228, 1500, 1468, 1373, 1491, 1306,
     1471, 1446, 1448, 1511, 1507, 1306, 1306, 1504, 1315, 1461,
     1466, 1501, 1306, 1333, 1333, 1333, 1333, 1333, 1483, 1484,
     1498, 1333, 1469, 1511, 1525, 1333, 1343, 1343, 1343, 1343,

     1343, 1500, 1471, 1502, 1343, 1446, 1448, 1506, 1343, 1373,
     1503, 1446, 1448, 1505, 1504, 1446, 1448, 1446, 1448, 1501,
     1446, 1448, 1462, 1462, 1462, 1462, 1462, 1502, 1522, 1523,
     1462, 1506, 1525, 1503, 1462, 1495, 1495, 1495, 1495, 1495,
     1604, 1505, 1605, 1606, 1607, 1608, 1609, 1495, 1610, 1611,
     1612, 1523, 1522, 1613, 1343, 1434, 1434, 1434, 1434, 1434,
     1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
     1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
     1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
     1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,

     1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
     1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
     1434, 1434, 1434, 1434, 1434, 1435, 1435, 1435, 1435, 1435,
     1440, 1440, 1440, 1440, 1440, 1514, 1521, 1435, 1524, 1526,
     1556, 1534, 1440, 1532, 1458, 1458, 1458, 1458, 1458, 1473,
     1473, 1473, 1473, 1473, 1555, 1548, 1458, 1554, 1524, 1557,
     1562, 1473, 1563, 1568, 1556, 1578, 1581, 1514, 1580, 1591,
     1473, 1515, 1515, 1515, 1515, 1515, 1548, 1521, 1554, 1515,
     1526, 1614, 1532, 1515, 1534, 1615, 1555, 1435, 1580, 1591,
     1581, 1557, 1440, 1458, 1563, 1568, 1579, 1578, 1562, 1616,

     1569, 1577, 1458, 1512, 1512, 1512, 1512, 1512, 1512, 1512,
     1512, 1512, 1512, 1512, 1512, 1512, 1512, 1512, 1512, 1512,
     1512, 1579, 1512, 1512, 1617, 1512, 1512, 1512, 1512, 1512,
     1512, 1512, 1517, 1517, 1517, 1517, 1517, 1569, 1577, 1618,
     1619, 1512, 1512, 1512, 1517, 1620, 1621, 1552, 1552, 1552,
     1552, 1552, 1564, 1564, 1564, 1564, 1564, 1622, 1590, 1552,
     1623, 1624, 1625, 1626, 1564, 1627, 1628, 1629, 1632, 1512,
     1512, 1512, 1512, 1564, 1633, 1634, 1636, 1570, 1570, 1570,
     1570, 1570, 1637, 1528, 1528, 1528, 1528, 1528, 1552, 1570,
     1590, 1638, 1639, 1640, 1641, 1528, 1642, 1517, 1520, 1520,

     1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
     1520, 1520, 1520, 1520, 1520, 1520, 1643, 1520, 1520, 1644,
     1520, 1520, 1520, 1520, 1520, 1520, 1520, 1528, 1646, 1649,
     1651, 1571, 1571, 1571, 1571, 1571, 1520, 1520, 1520, 1645,
     1652, 1528, 1528, 1571, 1571, 1528, 1654, 1645, 1572, 1572,
     1572, 1572, 1572, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
     1572, 1664, 1665, 1666, 1520, 1520, 1520, 1520, 1533, 1533,
     1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533,
     1533, 1533, 1533, 1533, 1533, 1533, 1667, 1533, 1533, 1669,
     1533, 1533, 1533, 1533, 1533, 1533, 1533, 1572, 1542, 1544,

     1574, 1574, 1574, 1574, 1574, 1671, 1533, 1533, 1533, 1673,
     1674, 1675, 1574, 1582, 1582, 1582, 1582, 1582, 1676, 1576,
     1576, 1576, 1576, 1576, 1678, 1582, 1679, 1680, 1681, 1682,
     1683, 1576, 1542, 1544, 1533, 1533, 1533, 1533, 1542, 1544,
     1576, 1684, 1542, 1544, 1542, 1544, 1686, 1542, 1544, 1587,
     1587, 1587, 1587, 1587, 1631, 1631, 1631, 1631, 1631, 1687,
     1688, 1587, 1689, 1690, 1691, 1692, 1631, 1694, 1696, 1697,
     1587, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588,
     1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1703,
     1588, 1588, 1704, 1588, 1588, 1588, 1588, 1588, 1588, 1588,

     1635, 1635, 1635, 1635, 1635, 1706, 1708, 1709, 1711, 1588,
     1588, 1588, 1635, 1712, 1713, 1714, 1631, 1715, 1650, 1650,
     1650, 1650, 1650, 1716, 1648, 1648, 1648, 1648, 1648, 1717,
     1650, 1718, 1719, 1720, 1722, 1723, 1648, 1588, 1588, 1588,
     1588, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
     1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1589, 1650,
     1589, 1589, 1635, 1589, 1589, 1589, 1589, 1589, 1589, 1589,
     1724, 1725, 1726, 1648, 1653, 1653, 1653, 1653, 1653, 1589,
     1589, 1589, 1648, 1727, 1728, 1729, 1653, 1663, 1663, 1663,
     1663, 1663, 1685, 1685, 1685, 1685, 1685, 1730, 1732, 1663,

     1733, 1735, 1736, 1737, 1685, 1738, 1740, 1589, 1589, 1589,
     1589, 1701, 1701, 1701, 1701, 1701, 1707, 1707, 1707, 1707,
     1707, 1739, 1741, 1701, 1742, 1743, 1744, 1745, 1707, 1739,
     1745, 1746, 1747, 1743, 1748, 1749, 1750, 1751, 1752, 1740,
     1751, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1763,
     1764, 1765, 1766, 1769, 1772, 1780, 1770, 1774, 1783, 1766,
     1707, 1771, 1771, 1771, 1771, 1771, 1785, 1789, 1767, 1744,
     1795, 1773, 1799, 1771, 1707, 1707, 1781, 1772, 1707, 1750,
     1770, 1774, 1771, 1777, 1808, 1802, 1776, 1761, 1762, 1762,
     1762, 1762, 1762, 1762, 1762, 1762, 1762, 1762, 1762, 1762,

     1762, 1762, 1762, 1762, 1762, 1762, 1767, 1762, 1762, 1773,
     1762, 1762, 1762, 1762, 1762, 1762, 1762, 1775, 1776, 1781,
     1782, 1777, 1802, 1788, 1797, 1792, 1762, 1762, 1762, 1778,
     1778, 1778, 1778, 1778, 1779, 1779, 1779, 1779, 1779, 1775,
     1801, 1778, 1779, 1784, 1790, 1792, 1779, 1797, 1782, 1788,
     1778, 1784, 1790, 1798, 1762, 1762, 1762, 1762, 1786, 1786,
     1786, 1786, 1786, 1787, 1787, 1787, 1787, 1787, 1801, 1809,
     1786, 1813, 1806, 1798, 1815, 1787, 1806, 1816, 1824, 1786,
     1826, 1827, 1805, 1828, 1787, 1791, 1791, 1791, 1791, 1791,
     1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791, 1791,

     1791, 1791, 1791, 1803, 1791, 1791, 1805, 1791, 1791, 1791,
     1791, 1791, 1791, 1791, 1794, 1794, 1794, 1794, 1794, 1811,
     1819, 1817, 1829, 1791, 1791, 1791, 1794, 1804, 1804, 1804,
     1804, 1804, 1832, 1833, 1835, 1794, 1803, 1818, 1820, 1804,
     1819, 1811, 1825, 1836, 1837, 1840, 1825, 1830, 1804, 1817,
     1841, 1791, 1791, 1791, 1791, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1818, 1793, 1793, 1820, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1842, 1830, 1834, 1834, 1834, 1834,
     1834, 1843, 1846, 1793, 1793, 1793, 1847, 1848, 1834, 1823,

     1823, 1823, 1823, 1823, 1849, 1839, 1845, 1834, 1839, 1845,
     1850, 1823, 1838, 1844, 1852, 1851, 1853, 1862, 1866, 1868,
     1869, 1793, 1793, 1793, 1793, 1796, 1796, 1796, 1796, 1796,
     1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796,
     1796, 1796, 1796, 1823, 1796, 1796, 1854, 1796, 1796, 1796,
     1796, 1796, 1796, 1796, 1851, 1838, 1844, 1823, 1823, 1860,
     1863, 1823, 1871, 1796, 1796, 1796, 1864, 1878, 1865, 1865,
     1865, 1865, 1865, 1875, 1880, 1855, 1854, 1875, 1883, 1860,
     1865, 1865, 1863, 1886, 1856, 1887, 1857, 1886, 1858, 1872,
     1864, 1796, 1796, 1796, 1796, 1800, 1800, 1800, 1800, 1800,

     1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800,
     1800, 1800, 1800, 1855, 1800, 1800, 1856, 1800, 1800, 1800,
     1800, 1800, 1800, 1800, 1857, 1858, 1872, 1874, 1888, 1889,
     1890, 1891, 1892, 1800, 1800, 1800, 1893, 1861, 1861, 1861,
     1861, 1861, 1877, 1877, 1877, 1877, 1877, 1894, 1896, 1861,
     1895, 1897, 1898, 1899, 1877, 1874, 1885, 1901, 1895, 1902,
     1898, 1800, 1800, 1800, 1800, 1821, 1821, 1821, 1821, 1821,
     1821, 1821, 1821, 1821, 1821, 1821, 1821, 1821, 1821, 1821,
     1821, 1821, 1821, 1877, 1821, 1821, 1861, 1821, 1821, 1821,
     1821, 1821, 1821, 1821, 1885, 1876, 1876, 1876, 1876, 1876,

     1903, 1904, 1907, 1821, 1821, 1821, 1908, 1876, 1909, 1910,
     1911, 1870, 1870, 1870, 1870, 1870, 1876, 1912, 1906, 1906,
     1906, 1906, 1906, 1870, 1913, 1916, 1917, 1918, 1920, 1921,
     1906, 1821, 1821, 1821, 1821, 1822, 1822, 1822, 1822, 1822,
     1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822, 1822,
     1822, 1822, 1822, 1870, 1822, 1822, 1922, 1822, 1822, 1822,
     1822, 1822, 1822, 1822, 1923, 1925, 1927, 1906, 1914, 1914,
     1914, 1914, 1914, 1822, 1822, 1822, 1906, 1929, 1930, 1932,
     1914, 1919, 1919, 1919, 1919, 1919, 1931, 1924, 1924, 1924,
     1924, 1924, 1934, 1919, 1931, 1935, 1936, 1937, 1938, 1924,

     1941, 1822, 1822, 1822, 1822, 1859, 1859, 1859, 1859, 1859,
     1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859, 1859,
     1859, 1859, 1859, 1943, 1859, 1859, 1946, 1859, 1859, 1859,
     1859, 1859, 1859, 1859, 1924, 1947, 1949, 1950, 1924, 1952,
     1954, 1956, 1961, 1859, 1859, 1859, 1926, 1926, 1926, 1926,
     1926, 1933, 1933, 1933, 1933, 1933, 1939, 1963, 1926, 1968,
     1970, 1969, 1971, 1933, 1939, 1969, 1972, 1973, 1974, 1976,
     1978, 1859, 1859, 1859, 1859, 1873, 1873, 1873, 1873, 1873,
     1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
     1873, 1873, 1873, 1980, 1873, 1873, 1981, 1873, 1873, 1873,

     1873, 1873, 1873, 1873, 1945, 1945, 1945, 1945, 1945, 1982,
     1984, 1985, 1988, 1873, 1873, 1873, 1945, 1951, 1951, 1951,
     1951, 1951, 1957, 1957, 1957, 1957, 1957, 1983, 1986, 1951,
     1986, 1989, 1990, 1991, 1957, 1960, 1960, 1960, 1960, 1960,
     1992, 1873, 1873, 1873, 1873, 1995, 1945, 1960, 1967, 1967,
     1967, 1967, 1967, 1993, 1996, 1993, 1997, 1998, 1999, 2001,
     1967, 2003, 2004, 1983, 2006, 2007, 2008, 2009, 2010, 2011,
     2013, 2013, 2013, 2013, 2013, 2014, 1960, 2011, 2015, 2018,
     2020, 2019, 2013, 2023, 2026, 2022, 2015, 2028, 2021, 2031,
     2033, 2013, 1967, 2016, 2016, 2016, 2016, 2016, 2035, 2037,

     2004, 2019, 2039, 2040, 2030, 2016, 1967, 1967, 2020, 2022,
     1967, 2041, 2043, 2036, 2016, 2017, 2017, 2017, 2017, 2017,
     2021, 2023, 2024, 2024, 2024, 2024, 2024, 2017, 2025, 2025,
     2025, 2025, 2025, 2044, 2024, 2013, 2030, 2036, 2046, 2047,
     2025, 2049, 2050, 2024, 2052, 2053, 2055, 2056, 2041, 2057,
     2059, 2061, 2053, 2034, 2034, 2034, 2034, 2034, 2051, 2051,
     2051, 2051, 2051, 2065, 2072, 2034, 2073, 2075, 2017, 2066,
     2076, 2025, 2032, 2032, 2032, 2032, 2032, 2066, 2052, 2051,
     2077, 2057, 2059, 2078, 2032, 2080, 2081, 2024, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029,

     2029, 2029, 2029, 2029, 2029, 2029, 2034, 2029, 2029, 2058,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2045, 2045, 2045,
     2045, 2045, 2064, 2051, 2032, 2063, 2029, 2029, 2029, 2045,
     2032, 2060, 2060, 2060, 2060, 2060, 2067, 2058, 2062, 2062,
     2062, 2062, 2062, 2060, 2068, 2063, 2064, 2070, 2069, 2063,
     2062, 2079, 2082, 2083, 2029, 2029, 2029, 2029, 2086, 2062,
     2079, 2083, 2088, 2089, 2090, 2092, 2090, 2093, 2068, 2094,
     2045, 2070, 2095, 2096, 2067, 2084, 2084, 2084, 2084, 2084,
     2097, 2099, 2097, 2100, 2060, 2069, 2101, 2084, 2085, 2085,
     2085, 2085, 2085, 2102, 2103, 2104, 2084, 2106, 2107, 2108,

     2085, 2109, 2109, 2109, 2109, 2109, 2107, 2110, 2111, 2111,
     2111, 2111, 2111, 2109, 2112, 2114, 2116, 2117, 2118, 2119,
     2111, 2121, 2109, 2108, 2122, 2120, 2123, 2124, 2125, 2111,
     2126, 2127, 2129, 2104, 2131, 2124, 2132, 2134, 2112, 2135,
     2136, 2141, 2142, 2119, 2143, 2110, 2116, 2120, 2144, 2085,
     2133, 2133, 2133, 2133, 2133, 2145, 2132, 2146, 2131, 2127,
     2132, 2147, 2133, 2137, 2137, 2137, 2137, 2137, 2138, 2138,
     2138, 2138, 2138, 2148, 2149, 2137, 2151, 2153, 2154, 2155,
     2138, 2156, 2159, 2161, 2137, 2162, 2165, 2157, 2160, 2138,
     2139, 2139, 2139, 2139, 2139, 2157, 2160, 2163, 2163, 2163,

     2163, 2163, 2139, 2166, 2133, 2167, 2168, 2169, 2170, 2163,
     2171, 2173, 2176, 2138, 2172, 2172, 2172, 2172, 2172, 2177,
     2178, 2179, 2180, 2181, 2182, 2183, 2172, 2185, 2186, 2188,
     2189, 2190, 2192, 2193, 2194, 2194, 2194, 2194, 2194, 2196,
     2197, 2198, 2198, 2198, 2198, 2198, 2194, 2199, 2200, 2201,
     2202, 2205, 2206, 2198, 2207, 2208, 2209, 2172, 2210, 2211,
     2213, 2214, 2216, 2207, 2217, 2220, 2221, 2211, 2212, 2212,
     2212, 2212, 2212, 2218, 2222, 2223, 2224, 2218, 2225, 2226,
     2212, 2227, 2231, 2232, 2233, 2234, 2235, 2235, 2235, 2235,
     2235, 2238, 2240, 2241, 2242, 2198, 2243, 2244, 2235, 2245,

     2247, 2247, 2247, 2247, 2247, 2249, 2231, 2251, 2248, 2248,
     2248, 2248, 2248, 2252, 2253, 2254, 2256, 2247, 2257, 2244,
     2248, 2247, 2258, 2254, 2259, 2260, 2261, 2262, 2243, 2263,
     2266, 2267, 2268, 2265, 2271, 2274, 2273, 2245, 2269, 2269,
     2269, 2269, 2269, 2275, 2276, 2277, 2279, 2280, 2258, 2281,
     2283, 2235, 2239, 2239, 2239, 2239, 2239, 2265, 2286, 2284,
     2285, 2271, 2273, 2288, 2239, 2247, 2289, 2274, 2290, 2291,
     2292, 2293, 2294, 2248, 2296, 2297, 2298, 2300, 2301, 2281,
     2275, 2284, 2286, 2285, 2302, 2280, 2303, 2304, 2305, 2306,
     2307, 2308, 2309, 2312, 2239, 2239, 2239, 2316, 2239, 2321,

     2319, 2316, 2322, 2269, 2326, 2239, 2239, 2325, 2310, 2239,
     2328, 2329, 2239, 2239, 2246, 2246, 2246, 2246, 2246, 2246,
     2246, 2246, 2246, 2246, 2246, 2246, 2246, 2246, 2246, 2246,
     2246, 2246, 2310, 2246, 2246, 2319, 2246, 2246, 2246, 2246,
     2246, 2246, 2246, 2323, 2331, 2325, 2333, 2336, 2337, 2338,
     2340, 2323, 2246, 2246, 2246, 2287, 2287, 2287, 2287, 2287,
     2278, 2278, 2278, 2278, 2278, 2327, 2332, 2287, 2334, 2346,
     2348, 2341, 2278, 2327, 2332, 2349, 2287, 2336, 2333, 2341,
     2246, 2246, 2246, 2246, 2264, 2264, 2264, 2264, 2264, 2264,
     2264, 2264, 2264, 2264, 2264, 2264, 2264, 2264, 2264, 2264,

     2264, 2264, 2335, 2264, 2264, 2334, 2264, 2264, 2264, 2264,
     2264, 2264, 2264, 2278, 2313, 2313, 2313, 2313, 2313, 2344,
     2287, 2278, 2264, 2264, 2264, 2350, 2313, 2314, 2314, 2314,
     2314, 2314, 2352, 2354, 2358, 2313, 2359, 2360, 2362, 2314,
     2335, 2364, 2366, 2368, 2369, 2370, 2372, 2373, 2374, 2344,
     2264, 2264, 2264, 2264, 2282, 2282, 2282, 2282, 2282, 2282,
     2282, 2282, 2282, 2282, 2282, 2282, 2282, 2282, 2282, 2282,
     2282, 2282, 2376, 2282, 2282, 2377, 2282, 2282, 2282, 2282,
     2282, 2282, 2282, 2317, 2317, 2317, 2317, 2317, 2380, 2382,
     2384, 2385, 2282, 2282, 2282, 2317, 2324, 2324, 2324, 2324,

     2324, 2375, 2342, 2342, 2342, 2342, 2342, 2386, 2324, 2375,
     2388, 2389, 2390, 2282, 2342, 2392, 2393, 2324, 2394, 2389,
     2282, 2282, 2282, 2282, 2295, 2295, 2295, 2295, 2295, 2345,
     2345, 2345, 2345, 2345, 2395, 2396, 2295, 2398, 2400, 2399,
     2401, 2345, 2363, 2363, 2363, 2363, 2363, 2399, 2402, 2403,
     2404, 2405, 2406, 2407, 2363, 2409, 2420, 2415, 2421, 2365,
     2365, 2365, 2365, 2365, 2415, 2422, 2423, 2295, 2295, 2424,
     2426, 2365, 2425, 2425, 2345, 2414, 2428, 2427, 2422, 2427,
     2429, 2430, 2295, 2295, 2431, 2432, 2295, 2320, 2320, 2320,
     2320, 2320, 2320, 2320, 2320, 2320, 2320, 2320, 2320, 2320,

     2320, 2320, 2320, 2320, 2320, 2365, 2320, 2320, 2414, 2320,
     2320, 2320, 2320, 2320, 2320, 2320, 2381, 2381, 2381, 2381,
     2381, 2433, 2439, 2445, 2435, 2320, 2320, 2320, 2381, 2419,
     2419, 2419, 2419, 2419, 2434, 2446, 2440, 2447, 2442, 2449,
     2451, 2419, 2434, 2440, 2441, 2441, 2441, 2441, 2441, 2452,
     2419, 2453, 2455, 2320, 2320, 2320, 2320, 2408, 2408, 2408,
     2408, 2408, 2435, 2436, 2436, 2436, 2436, 2436, 2448, 2408,
     2442, 2456, 2459, 2450, 2462, 2436, 2448, 2450, 2444, 2444,
     2444, 2444, 2444, 2454, 2436, 2457, 2463, 2468, 2460, 2464,
     2469, 2454, 2467, 2457, 2419, 2460, 2467, 2464, 2470, 2444,

     2408, 2408, 2471, 2472, 2473, 2474, 2475, 2479, 2486, 2441,
     2488, 2472, 2489, 2468, 2476, 2408, 2408, 2469, 2490, 2408,
     2492, 2436, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437,
     2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437, 2437,
     2477, 2437, 2437, 2444, 2437, 2437, 2437, 2437, 2437, 2437,
     2437, 2480, 2476, 2482, 2493, 2494, 2495, 2496, 2480, 2497,
     2437, 2437, 2437, 2498, 2477, 2491, 2491, 2491, 2491, 2491,
     2499, 2500, 2501, 2502, 2507, 2509, 2511, 2491, 2513, 2514,
     2482, 2502, 2509, 2516, 2518, 2521, 2526, 2527, 2437, 2437,
     2437, 2437, 2461, 2461, 2461, 2461, 2461, 2461, 2461, 2461,

     2461, 2461, 2461, 2461, 2461, 2461, 2461, 2461, 2461, 2461,
     2530, 2461, 2461, 2532, 2461, 2461, 2461, 2461, 2461, 2461,
     2461, 2522, 2524, 2533, 2531, 2535, 2536, 2522, 2524, 2543,
     2461, 2461, 2461, 2483, 2483, 2483, 2483, 2483, 2525, 2528,
     2544, 2485, 2485, 2485, 2485, 2485, 2525, 2528, 2531, 2546,
     2548, 2549, 2550, 2485, 2483, 2551, 2554, 2555, 2461, 2461,
     2461, 2461, 2466, 2466, 2466, 2466, 2466, 2466, 2466, 2466,
     2466, 2466, 2466, 2466, 2466, 2466, 2466, 2466, 2466, 2466,
     2556, 2466, 2466, 2557, 2466, 2466, 2466, 2466, 2466, 2466,
     2466, 2558, 2485, 2505, 2505, 2505, 2505, 2505, 2483, 2485,

     2466, 2466, 2466, 2561, 2563, 2505, 2485, 2570, 2573, 2506,
     2506, 2506, 2506, 2506, 2505, 2515, 2515, 2515, 2515, 2515,
     2577, 2506, 2578, 2581, 2583, 2584, 2585, 2515, 2466, 2466,
     2466, 2466, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481,
     2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481, 2481,
     2506, 2481, 2481, 2559, 2481, 2481, 2481, 2481, 2481, 2481,
     2481, 2559, 2566, 2566, 2566, 2566, 2566, 2579, 2587, 2515,
     2481, 2481, 2481, 2588, 2566, 2579, 2589, 2590, 2591, 2545,
     2545, 2545, 2545, 2545, 2562, 2562, 2562, 2562, 2562, 2592,
     2593, 2545, 2594, 2601, 2604, 2605, 2562, 2606, 2481, 2481,

     2481, 2481, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484,
     2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484, 2484,
     2545, 2484, 2484, 2598, 2484, 2484, 2484, 2484, 2484, 2484,
     2484, 2508, 2508, 2508, 2508, 2508, 2607, 2608, 2562, 2608,
     2484, 2484, 2484, 2508, 2586, 2586, 2586, 2586, 2586, 2609,
     2602, 2610, 2508, 2611, 2612, 2613, 2586, 2602, 2614, 2598,
     2615, 2600, 2600, 2600, 2600, 2600, 2616, 2617, 2484, 2484,
     2484, 2484, 2618, 2600, 2619, 2620, 2621, 2622, 2624, 2627,
     2634, 2622, 2619, 2636, 2508, 2517, 2517, 2517, 2517, 2517,
     2517, 2517, 2517, 2517, 2517, 2517, 2517, 2517, 2517, 2517,

     2517, 2517, 2517, 2629, 2517, 2517, 2637, 2517, 2517, 2517,
     2517, 2517, 2517, 2517, 2628, 2623, 2623, 2623, 2623, 2623,
     2640, 2628, 2641, 2517, 2517, 2517, 2600, 2623, 2625, 2625,
     2625, 2625, 2625, 2642, 2643, 2644, 2629, 2646, 2635, 2638,
     2625, 2630, 2630, 2630, 2630, 2630, 2635, 2648, 2649, 2625,
     2652, 2517, 2517, 2517, 2517, 2523, 2523, 2523, 2523, 2523,
     2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523, 2523,
     2523, 2523, 2523, 2623, 2523, 2523, 2638, 2523, 2523, 2523,
     2523, 2523, 2523, 2523, 2631, 2631, 2631, 2631, 2631, 2639,
     2647, 2653, 2654, 2523, 2523, 2523, 2639, 2647, 2653, 2656,

     2655, 2658, 2657, 2656, 2659, 2631, 2630, 2655, 2660, 2661,
     2662, 2663, 2664, 2665, 2667, 2673, 2675, 2676, 2668, 2663,
     2674, 2523, 2523, 2523, 2523, 2668, 2676, 2674, 2677, 2654,
     2657, 2669, 2669, 2669, 2669, 2669, 2670, 2670, 2670, 2670,
     2670, 2678, 2679, 2669, 2665, 2680, 2682, 2683, 2664, 2631,
     2684, 2685, 2669, 2681, 2681, 2681, 2681, 2681, 2686, 2687,
     2688, 2689, 2690, 2691, 2692, 2681, 2693, 2697, 2687, 2698,
     2699, 2691, 2695, 2695, 2695, 2695, 2695, 2702, 2700, 2703,
     2705, 2708, 2710, 2712, 2695, 2708, 2713, 2714, 2715, 2716,
     2717, 2718, 2719, 2722, 2725, 2726, 2727, 2728, 2730, 2731,

     2719, 2670, 2700, 2699, 2732, 2736, 2734, 2734, 2734, 2734,
     2734, 2737, 2732, 2738, 2739, 2681, 2741, 2713, 2734, 2712,
     2716, 2742, 2744, 2744, 2744, 2744, 2744, 2745, 2749, 2752,
     2744, 2753, 2755, 2756, 2744, 2757, 2758, 2758, 2758, 2758,
     2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2758, 2766,
     2767, 2768, 2769, 2771, 2773, 2764, 2769, 2774, 2775, 2768,
     2770, 2770, 2770, 2770, 2770, 2776, 2777, 2778, 2779, 2780,
     2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790,
     2791, 2770, 2792, 2793, 2795, 2796, 2799, 2791, 2794, 2794,
     2794, 2794, 2794, 2797, 2797, 2797, 2797, 2797, 2758, 2800,

     2794, 2798, 2798, 2798, 2798, 2798, 2801, 2803, 2796, 2804,
     2805, 2806, 2790, 2798, 2807, 2809, 2810, 2812, 2813, 2814,
     2815, 2816, 2819, 2820, 2821, 2770, 2817, 2817, 2817, 2817,
     2817, 2822, 2823, 2824, 2801, 2825, 2826, 2794, 2817, 2827,
     2823, 2828, 2807, 2809, 2829, 2816, 2830, 2831, 2815, 2832,
     2810, 2833, 2834, 2835, 2836, 2837, 2838, 2840, 2797, 2841,
     2842, 2843, 2846, 2847, 2848, 2850, 2849, 2841, 2851, 2853,
     2854, 2847, 2852, 2857, 2858, 2860, 2861, 2862, 2863, 2866,
     2867, 2869, 2872, 2842, 2861, 2875, 2876, 2873, 2877, 2850,
     2878, 2879, 2848, 2843, 2849, 2873, 2852, 2865, 2865, 2865,

     2865, 2865, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2865,
     2887, 2888, 2889, 2890, 2891, 2892, 2893, 2893, 2893, 2893,
     2893, 2894, 2894, 2894, 2894, 2894, 2897, 2898, 2899, 2900,
     2901, 2902, 2903, 2904, 2905, 2898, 2906, 2907, 2908, 2909,
     2910, 2911, 2894, 2912, 2913, 2918, 2865, 2916, 2919, 2920,
     2921, 2922, 2892, 2923, 2925, 2865, 2926, 2920, 2924, 2924,
     2924, 2924, 2924, 2927, 2928, 2929, 2932, 2933, 2934, 2938,
     2939, 2940, 2942, 2943, 2945, 2947, 2948, 2923, 2949, 2950,
     2952, 2893, 2951, 2916, 2927, 2953, 2894, 2954, 2933, 2955,
     2951, 2939, 2946, 2946, 2946, 2946, 2946, 2956, 2958, 2959,

     2934, 2960, 2962, 2940, 2946, 2966, 2972, 2944, 2944, 2944,
     2944, 2944, 2974, 2966, 2975, 2978, 2979, 2980, 2963, 2944,
     2981, 2982, 2967, 2924, 2935, 2935, 2935, 2935, 2935, 2935,
     2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935, 2935,
     2935, 2935, 2963, 2935, 2935, 2969, 2935, 2935, 2935, 2935,
     2935, 2935, 2935, 2964, 2967, 2968, 2971, 2984, 2944, 2987,
     2992, 2993, 2935, 2935, 2935, 2944, 2957, 2957, 2957, 2957,
     2957, 2977, 2986, 2988, 2994, 2964, 2968, 2969, 2957, 2977,
     2986, 2988, 2970, 2970, 2970, 2970, 2970, 2995, 2971, 2997,
     2935, 2935, 2935, 2935, 2970, 2990, 2990, 2990, 2990, 2990,

     2991, 2991, 2991, 2991, 2991, 2996, 2998, 2990, 2999, 3000,
     3001, 3003, 2991, 2996, 3002, 3002, 3002, 3002, 3002, 3004,
     3005, 3006, 3006, 3006, 3006, 3006, 3002, 3007, 3007, 3007,
     3007, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3007,
     3008, 3015, 3016, 3017, 3005, 3018, 3019, 3020, 3021, 3022,
     3023, 3025, 3026, 3027, 3028, 3025, 3029, 3030, 3032, 3033,
     3037, 3027, 3038, 3039, 3041, 3030, 3031, 3031, 3031, 3031,
     3031, 3042, 3044, 3044, 3044, 3044, 3044, 3045, 3031, 3046,
     3047, 3049, 3050, 3052, 3044, 3054, 3006, 3031, 3055, 3033,
     3053, 3056, 3038, 3048, 3048, 3048, 3048, 3048, 3053, 3057,

     3039, 3058, 3060, 3061, 3062, 3048, 3059, 3059, 3059, 3059,
     3059, 3063, 3065, 3066, 3067, 3070, 3045, 3046, 3059, 3064,
     3064, 3064, 3064, 3064, 3068, 3069, 3069, 3069, 3069, 3069,
     3072, 3064, 3071, 3073, 3074, 3075, 3065, 3069, 3076, 3077,
     3064, 3078, 3080, 3081, 3079, 3085, 3082, 3087, 3088, 3090,
     3066, 3048, 3079, 3067, 3082, 3091, 3092, 3084, 3084, 3084,
     3084, 3084, 3068, 3091, 3093, 3094, 3095, 3069, 3059, 3084,
     3071, 3086, 3086, 3086, 3086, 3086, 3096, 3097, 3097, 3097,
     3097, 3097, 3098, 3086, 3099, 3100, 3101, 3103, 3104, 3097,
     3102, 3102, 3102, 3102, 3102, 3106, 3107, 3108, 3109, 3084,

     3110, 3111, 3112, 3113, 3115, 3114, 3114, 3114, 3114, 3114,
     3116, 3117, 3118, 3119, 3120, 3121, 3101, 3114, 3122, 3123,
     3123, 3123, 3123, 3123, 3126, 3129, 3122, 3131, 3130, 3086,
     3133, 3123, 3132, 3132, 3132, 3132, 3132, 3134, 3136, 3097,
     3137, 3138, 3139, 3141, 3132, 3135, 3135, 3135, 3135, 3135,
     3119, 3144, 3126, 3145, 3146, 3102, 3130, 3135, 3147, 3148,
     3149, 3150, 3155, 3158, 3156, 3131, 3135, 3152, 3152, 3152,
     3152, 3152, 3159, 3161, 3162, 3134, 3164, 3165, 3166, 3152,
     3154, 3154, 3154, 3154, 3154, 3170, 3132, 3157, 3157, 3157,
     3157, 3157, 3154, 3160, 3160, 3160, 3160, 3160, 3167, 3157,

     3155, 3154, 3156, 3171, 3172, 3160, 3167, 3173, 3157, 3174,
     3176, 3179, 3180, 3181, 3160, 3182, 3183, 3184, 3185, 3186,
     3187, 3189, 3190, 3191, 3192, 3193, 3193, 3193, 3193, 3193,
     3194, 3195, 3196, 3198, 3199, 3200, 3201, 3193, 3197, 3197,
     3197, 3197, 3197, 3202, 3186, 3203, 3204, 3205, 3207, 3208,
     3197, 3209, 3210, 3211, 3212, 3213, 3214, 3214, 3214, 3214,
     3214, 3216, 3217, 3218, 3224, 3225, 3226, 3227, 3214, 3203,
     3228, 3218, 3229, 3230, 3234, 3235, 3239, 3240, 3228, 3213,
     3207, 3244, 3246, 3209, 3247, 3240, 3248, 3252, 3210, 3232,
     3232, 3232, 3232, 3232, 3233, 3233, 3233, 3233, 3233, 3235,

     3253, 3232, 3254, 3255, 3262, 3263, 3233, 3233, 3253, 3264,
     3234, 3236, 3236, 3236, 3236, 3236, 3241, 3241, 3241, 3241,
     3241, 3256, 3265, 3236, 3266, 3267, 3268, 3269, 3241, 3256,
     3272, 3273, 3266, 3274, 3275, 3275, 3275, 3275, 3275, 3276,
     3278, 3278, 3278, 3278, 3278, 3279, 3275, 3280, 3282, 3286,
     3287, 3285, 3278, 3281, 3281, 3281, 3281, 3281, 3283, 3283,
     3283, 3283, 3283, 3288, 3290, 3281, 3291, 3293, 3294, 3296,
     3283, 3284, 3284, 3284, 3284, 3284, 3294, 3275, 3297, 3275,
     3275, 3285, 3301, 3284, 3303, 3305, 3297, 3306, 3275, 3288,
     3290, 3292, 3292, 3292, 3292, 3292, 3295, 3295, 3295, 3295,

     3295, 3304, 3308, 3292, 3310, 3291, 3317, 3313, 3295, 3304,
     3307, 3307, 3307, 3307, 3307, 3313, 3318, 3295, 3321, 3326,
     3328, 3320, 3307, 3307, 3311, 3311, 3311, 3311, 3311, 3320,
     3322, 3329, 3330, 3331, 3332, 3335, 3311, 3336, 3322, 3329,
     3337, 3332, 3338, 3310, 3339, 3311, 3340, 3341, 3342, 3344,
     3344, 3344, 3344, 3344, 3345, 3346, 3346, 3346, 3346, 3346,
     3347, 3344, 3348, 3350, 3351, 3353, 3355, 3346, 3357, 3356,
     3348, 3349, 3349, 3349, 3349, 3349, 3352, 3352, 3352, 3352,
     3352, 3358, 3359, 3349, 3361, 3362, 3364, 3365, 3352, 3354,
     3354, 3354, 3354, 3354, 3356, 3365, 3369, 3354, 3371, 3374,

     3380, 3354, 3363, 3363, 3363, 3363, 3363, 3362, 3366, 3366,
     3366, 3366, 3366, 3375, 3363, 3368, 3368, 3368, 3368, 3368,
     3366, 3381, 3352, 3383, 3385, 3389, 3390, 3368, 3376, 3376,
     3376, 3376, 3376, 3391, 3392, 3375, 3393, 3394, 3395, 3396,
     3376, 3382, 3382, 3382, 3382, 3382, 3397, 3398, 3399, 3399,
     3399, 3399, 3399, 3382, 3397, 3363, 3400, 3401, 3402, 3403,
     3399, 3404, 3405, 3407, 3408, 3401, 3409, 3410, 3411, 3412,
     3413, 3414, 3415, 3417, 3422, 3411, 3412, 3416, 3416, 3416,
     3416, 3416, 3423, 3424, 3425, 3426, 3428, 3433, 3434, 3416,
     3423, 3427, 3427, 3427, 3427, 3427, 3435, 3436, 3437, 3438,

     3439, 3440, 3441, 3427, 3442, 3443, 3444, 3445, 3413, 3440,
     3446, 3447, 3442, 3448, 3449, 3445, 3450, 3451, 3454, 3452,
     3457, 3424, 3449, 3458, 3459, 3451, 3452, 3460, 3461, 3462,
     3465, 3466, 3467, 3468, 3469, 3460, 3470, 3473, 3465, 3416,
     3474, 3474, 3474, 3474, 3474, 3475, 3476, 3477, 3457, 3478,
     3479, 3481, 3474, 3427, 3480, 3482, 3483, 3485, 3490, 3466,
     3491, 3492, 3480, 3482, 3483, 3484, 3484, 3484, 3484, 3484,
     3486, 3487, 3493, 3494, 3495, 3496, 3497, 3484, 3486, 3487,
     3493, 3498, 3500, 3496, 3501, 3503, 3502, 3504, 3504, 3504,
     3504, 3504, 3505, 3491, 3502, 3506, 3507, 3508, 3509, 3504,

     3510, 3510, 3510, 3510, 3510, 3511, 3513, 3514, 3515, 3497,
     3516, 3518, 3510, 3511, 3512, 3512, 3512, 3512, 3512, 3519,
     3520, 3521, 3523, 3524, 3526, 3527, 3512, 3519, 3528, 3529,
     3530, 3524, 3525, 3525, 3525, 3525, 3525, 3531, 3531, 3531,
     3531, 3531, 3516, 3532, 3525, 3533, 3534, 3538, 3541, 3531,
     3543, 3544, 3520, 3536, 3536, 3536, 3536, 3536, 3539, 3539,
     3539, 3539, 3539, 3545, 3547, 3536, 3549, 3550, 3551, 3552,
     3539, 3545, 3553, 3562, 3536, 3565, 3566, 3552, 3568, 3539,
     3542, 3542, 3542, 3542, 3542, 3546, 3546, 3546, 3546, 3546,
     3570, 3573, 3542, 3576, 3578, 3580, 3582, 3546, 3548, 3548,

     3548, 3548, 3548, 3555, 3555, 3555, 3555, 3555, 3586, 3589,
     3548, 3590, 3592, 3563, 3594, 3555, 3558, 3558, 3558, 3558,
     3558, 3563, 3564, 3564, 3564, 3564, 3564, 3596, 3558, 3567,
     3567, 3567, 3567, 3567, 3564, 3569, 3569, 3569, 3569, 3569,
     3571, 3567, 3572, 3577, 3598, 3600, 3601, 3569, 3571, 3604,
     3572, 3577, 3579, 3579, 3579, 3579, 3579, 3581, 3581, 3581,
     3581, 3581, 3583, 1425, 3579, 1424, 1421, 1418, 3585, 3581,
     3583, 3584, 3584, 3584, 3584, 3584, 3585, 3587, 3588, 3588,
     3588, 3588, 3588, 3584, 3591, 3587, 1417, 1416, 1415, 1414,
     3588, 3595, 3591, 3593, 3593, 3593, 3593, 3593, 3597, 3595,

     3599, 3602, 3603, 3605, 3606, 3593, 3597, 3607, 3599, 3602,
     3603, 3605, 3606, 1413, 1412, 3607, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609, 3609,
     3609, 3609, 3609, 3609, 3609, 3610, 3610, 3610, 3610, 3610,
     3610, 3610, 3610, 3610, 3610, 3610, 3610, 3610, 3610, 3610,
     3610, 3610, 3610, 3610, 3610, 3610, 3610, 3610, 3610, 3610,
     3610, 3610, 3610, 3610, 3611, 3611, 3611, 3611, 3611, 3611,
     3611, 3611, 3611, 3611, 3611, 3611, 3611, 3611, 3611, 3611,
     3611, 3611, 3611, 3611, 3611, 3611, 3611, 3611, 3611, 3611,

     3611, 3611, 3611, 3612, 3612, 3612, 3612, 3612, 3612, 3612,
     3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612,
     3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612, 3612,
     3612, 3612, 3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613,
     3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613,
     3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613,
     3613, 3614, 3614, 3614, 3614, 3614, 3614, 3614, 3614, 3614,
     3614, 3614, 3614, 3614, 3614, 3614, 3614, 3614, 3614, 3614,
     3614, 3614, 3614, 3614, 3614, 3614, 3614, 3614, 3614, 3614,
     3615, 3615, 3615, 3615, 3615, 3615, 3615, 3615, 3615, 3615,

     3615, 3615, 3615, 3615, 3615, 3615, 3615, 3615, 3615, 3615,
     3615, 3615, 3615, 3615, 3615, 3615, 3615, 3615, 3615, 3616,
     3616, 3616, 3616, 3616, 3616, 3616, 3616, 3616, 3616, 3616,
     3616, 3616, 3616, 3616, 3616, 3616, 3616, 3616, 3616, 3616,
     3616, 3616, 3616, 3616, 3616, 3616, 3616, 3616, 3617, 3617,
     3617, 3617, 3617, 3617, 3617, 3617, 3617, 3617, 3617, 3617,
     3617, 3617, 3617, 3617, 3617, 3617, 3617, 3617, 3617, 3617,
     3617, 3617, 3617, 3617, 3617, 3617, 3617, 3618, 3618, 3618,
     3618, 3618, 3618, 3618, 3618, 3618, 3618, 3618, 3618, 3618,
     3618, 3618, 3618, 3618, 3618, 3618, 3618, 3618, 3618, 3618,

     3618, 3618, 3618, 3618, 3618, 3618, 3619, 3619, 3619, 3619,
     3619, 3619, 3619, 3619, 3619, 3619, 3619, 3619, 3619, 3619,
     3619, 3619, 3619, 3619, 3619, 3619, 3619, 3619, 3619, 3619,
     3619, 3619, 3619, 3619, 3619, 3620, 3620, 3620, 3620, 3620,
     3620, 3620, 3620, 3620, 3620, 3620, 3620, 3620, 3620, 3620,
     3620, 3620, 3620, 3620, 3620, 3620, 3620, 3620, 3620, 3620,
     3620, 3620, 3620, 3620, 3621, 3621, 3621, 3621, 3621, 3621,
     3621, 3621, 3621, 3621, 3621, 3621, 3621, 3621, 3621, 3621,
     3621, 3621, 3621, 3621, 3621, 3621, 3621, 3621, 3621, 3621,
     3621, 3621, 3621, 3622, 3622, 3622, 3622, 3622, 3622, 3622,

     3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622,
     3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622,
     3622, 3622, 3623, 3623, 3623, 3623, 3623, 3623, 3623, 3623,
     3623, 3623, 3623, 3623, 3623, 3623, 3623, 3623, 3623, 3623,
     3623, 3623, 3623, 3623, 3623, 3623, 3623, 3623, 3623, 3623,
     3623, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624,
     3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624,
     3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624, 3624,
     3625, 3625, 1409, 1408, 3625, 3625, 1407, 3625, 3625, 3625,
     3625, 3625, 3625, 3625, 3626, 3626, 3626, 3626, 1406, 3626,

     3626, 1405, 3626, 3626, 3626, 3626, 3626, 3626, 3626, 3627,
     1402, 3627, 3627, 3627, 1401, 1399, 3627, 3627, 3627, 3627,
     3627, 3627, 3627, 3627, 3627, 3627, 3627, 3627, 3627, 3627,
     3627, 3627, 3627, 3627, 3628, 1398, 3628, 3628, 3628, 1397,
     3628, 3628, 3628, 3628, 3628, 3628, 3628, 3628, 3628, 3628,
     3628, 3628, 3628, 3628, 3628, 3628, 3628, 3628, 3628, 3629,
     3629, 3731, 1396, 1395, 3731, 1392, 1391, 3731, 3731, 3629,
     3629, 3629, 3629, 1390, 3629, 3629, 1389, 3629, 3629, 3629,
     3629, 3629, 3629, 3629, 3630, 3630, 3630, 3630, 1388, 3630,
     3630, 1383, 3630, 3630, 3630, 3630, 3630, 3630, 3630, 3631,

     3631, 3631, 3631, 1382, 3631, 3631, 1380, 3631, 3631, 3631,
     3631, 3631, 3631, 3631, 3632, 3632, 3632, 3632, 3632, 3632,
     3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632,
     3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632,
     3632, 3632, 3632, 3633, 3633, 3633, 3633, 3633, 3633, 3633,
     3633, 3633, 3633, 3633, 3633, 3633, 3633, 3633, 3633, 3633,
     3633, 3633, 3633, 3633, 3633, 3633, 3633, 3633, 3633, 3633,
     3633, 3633, 3634, 3634, 3634, 1379, 1378, 3634, 3634, 1377,
     3634, 3634, 3634, 3634, 3634, 3634, 3634, 3635, 3635, 3635,
     3635, 3635, 3635, 3635, 3635, 3635, 3635, 3635, 3635, 3635,

     3635, 3635, 3635, 3635, 3635, 3635, 3635, 3635, 3635, 3635,
     3635, 3635, 3635, 3635, 3635, 3635, 3636, 3636, 3636, 3636,
     3636, 3636, 3636, 3636, 3636, 3636, 3636, 3636, 3636, 3636,
     3636, 3636, 3636, 3636, 3636, 3636, 3636, 3636, 3636, 3636,
     3636, 3636, 3636, 3636, 3636, 3637, 3637, 3637, 1374, 1372,
     3637, 3637, 1371, 3637, 3637, 3637, 3637, 3637, 3637, 3637,
     3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638,
     3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638,
     3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3639,
     3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639,

     3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639,
     3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639, 3640, 3640,
     3640, 3640, 3640, 3640, 3640, 3640, 3640, 3640, 3640, 3640,
     3640, 3640, 3640, 3640, 3640, 3640, 3640, 3640, 3640, 3640,
     3640, 3640, 3640, 3640, 3640, 3640, 3640, 3641, 3641, 3641,
     3641, 3641, 3641, 3641, 3641, 3641, 3641, 3641, 3641, 3641,
     3641, 3641, 3641, 3641, 3641, 3641, 3641, 3641, 3641, 3641,
     3641, 3641, 3641, 3641, 3641, 3641, 3642, 3642, 3642, 3642,
     1370, 3642, 3642, 1369, 3642, 3642, 3642, 3642, 3642, 3642,
     3642, 3643, 3643, 3732, 1368, 3643, 3732, 1367, 1366, 3732,

     3732, 3643, 3643, 3643, 3643, 1364, 3643, 3643, 1363, 3643,
     3643, 3643, 3643, 3643, 3643, 3643, 3644, 1362, 3644, 3644,
     3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644,
     3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644,
     3644, 3644, 3644, 3645, 3645, 3645, 1361, 1360, 3645, 3645,
     1358, 3645, 3645, 3645, 3645, 3645, 3645, 3645, 3646, 3646,
     3646, 3646, 1357, 3646, 3646, 3646, 3646, 3646, 3646, 3646,
     3646, 3646, 3646, 3646, 3646, 3646, 3647, 1356, 3647, 3647,
     3647, 3647, 3647, 3647, 3647, 3647, 3647, 3647, 3647, 3647,
     3647, 3647, 3647, 3647, 3647, 3647, 3647, 3647, 3647, 3647,

     3647, 3647, 3647, 3648, 1355, 3648, 1354, 3648, 1353, 3648,
     3648, 3648, 3648, 3648, 3648, 3648, 3648, 3648, 3648, 3648,
     3648, 3648, 3648, 3648, 3648, 3648, 3648, 3648, 3649, 3649,
     3649, 3649, 1352, 3649, 3649, 1351, 3649, 3649, 3649, 3649,
     3649, 3649, 3649, 3650, 3650, 3650, 3650, 1350, 3650, 3650,
     1349, 3650, 3650, 3650, 3650, 3650, 3650, 3650, 3651, 3651,
     3651, 3651, 3651, 3651, 3651, 3651, 3651, 3651, 3651, 3651,
     3651, 3651, 3651, 3651, 3651, 3651, 3651, 3651, 3651, 3651,
     3651, 3651, 3651, 3651, 3651, 3651, 3651, 3652, 3652, 3652,
     3652, 3652, 3652, 3652, 3652, 3652, 3652, 3652, 3652, 3652,

     3652, 3652, 3652, 3652, 3652, 3652, 3652, 3652, 3652, 3652,
     3652, 3652, 3652, 3652, 3652, 3652, 3653, 3653, 3653, 3653,
     1348, 3653, 3653, 1346, 3653, 3653, 3653, 3653, 3653, 3653,
     3653, 3654, 1345, 3654, 3654, 3654, 3654, 3654, 3654, 3654,
     3654, 3654, 3654, 3654, 3654, 3654, 3654, 3654, 3654, 3654,
     3654, 3654, 3654, 3654, 3654, 3654, 3654, 3654, 3655, 1344,
     3655, 3655, 3655, 3655, 3655, 3655, 3655, 3655, 3655, 3655,
     3655, 3655, 3655, 3655, 3655, 3655, 3655, 3655, 3655, 3655,
     3655, 3655, 3655, 3655, 3655, 3656, 3656, 3656, 3656, 3656,
     3656, 3656, 3656, 3656, 3656, 3656, 3656, 3656, 3656, 3656,

     3656, 3656, 3656, 3656, 3656, 3656, 3656, 3656, 3656, 3656,
     3656, 3656, 3656, 3656, 3657, 3657, 3657, 3657, 3657, 3657,
     3657, 3657, 3657, 3657, 3657, 3657, 3657, 3657, 3657, 3657,
     3657, 3657, 3657, 3657, 3657, 3657, 3657, 3657, 3657, 3657,
     3657, 3657, 3657, 3658, 3658, 3658, 3658, 1342, 3658, 3658,
     1340, 3658, 3658, 3658, 3658, 3658, 3658, 3658, 3659, 3659,
     3659, 3659, 3659, 3659, 3659, 3659, 3659, 3659, 3659, 3659,
     3659, 3659, 3659, 3659, 3659, 3659, 3659, 3659, 3659, 3659,
     3659, 3659, 3659, 3659, 3659, 3659, 3659, 3660, 3660, 3660,
     3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660,

     3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660, 3660,
     3660, 3660, 3660, 3660, 3660, 3660, 3661, 3661, 1339, 3661,
     3661, 3661, 3661, 3661, 3661, 3661, 3662, 1338, 1336, 3662,
     3662, 1334, 3662, 3662, 3662, 3662, 3662, 3662, 3662, 3663,
     3663, 1332, 1331, 3663, 3663, 1330, 3663, 3663, 3663, 3663,
     3663, 3663, 3663, 3664, 3664, 3664, 3664, 1329, 3664, 3664,
     1328, 3664, 3664, 3664, 3664, 3664, 3664, 3664, 3665, 1325,
     1324, 1323, 1322, 1321, 3665, 3665, 1320, 3665, 3665, 3665,
     3665, 3665, 3665, 3665, 3666, 1319, 3666, 3666, 3666, 1317,
     1316, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666,

     3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3666, 3667,
     1313, 3667, 3667, 3667, 1312, 3667, 3667, 3667, 3667, 3667,
     3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667, 3667,
     3667, 3667, 3667, 3667, 3668, 3668, 3749, 1311, 1310, 3749,
     1309, 1308, 3749, 3749, 3668, 3668, 3668, 3668, 1307, 3668,
     3668, 1305, 3668, 3668, 3668, 3668, 3668, 3668, 3668, 3669,
     3669, 1304, 3669, 3669, 3669, 3669, 3669, 3669, 3669, 3670,
     3670, 3670, 3670, 1300, 3670, 3670, 1297, 3670, 3670, 3670,
     3670, 3670, 3670, 3670, 3671, 3671, 1296, 3671, 3671, 3671,
     3671, 3671, 3671, 3671, 3672, 3672, 3672, 3672, 1295, 3672,

     3672, 1294, 3672, 3672, 3672, 3672, 3672, 3672, 3672, 3673,
     3673, 1293, 3673, 3673, 3673, 3673, 3673, 3673, 3673, 3674,
     3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674,
     3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674,
     3674, 3674, 3674, 3674, 3674, 3674, 3674, 3674, 3675, 3675,
     3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675,
     3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675, 3675,
     3675, 3675, 3675, 3675, 3675, 3675, 3675, 3676, 3676, 3676,
     1292, 1289, 3676, 3676, 1288, 3676, 3676, 3676, 3676, 3676,
     3676, 3676, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677,

     3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677,
     3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677, 3677,
     3677, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678,
     3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678,
     3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678, 3678,
     3679, 3679, 3679, 1287, 1286, 3679, 3679, 1285, 3679, 3679,
     3679, 3679, 3679, 3679, 3679, 3680, 3680, 3680, 3680, 3680,
     3680, 3680, 3680, 3680, 3680, 3680, 3680, 3680, 3680, 3680,
     3680, 3680, 3680, 3680, 3680, 3680, 3680, 3680, 3680, 3680,
     3680, 3680, 3680, 3680, 3681, 3681, 3681, 3681, 3681, 3681,

     3681, 3681, 3681, 3681, 3681, 3681, 3681, 3681, 3681, 3681,
     3681, 3681, 3681, 3681, 3681, 3681, 3681, 3681, 3681, 3681,
     3681, 3681, 3681, 3682, 3682, 3682, 3682, 3682, 3682, 3682,
     3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682,
     3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682, 3682,
     3682, 3682, 3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683,
     3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683,
     3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683, 3683,
     3683, 3684, 3684, 3684, 3684, 3684, 3684, 3684, 3684, 3684,
     3684, 3684, 1282, 3684, 1281, 3684, 3684, 1280, 3758, 3684,

     3684, 3758, 1279, 1278, 3758, 3758, 1277, 3684, 3684, 3684,
     3685, 3685, 3685, 3685, 3685, 3685, 3685, 3685, 3685, 3685,
     3685, 1276, 3685, 3759, 3685, 3685, 3759, 1275, 3685, 3759,
     3759, 1274, 1273, 1272, 1269, 1268, 3685, 3685, 3685, 3686,
     3686, 3686, 3686, 3686, 3686, 3686, 3686, 3686, 3686, 3686,
     1267, 3686, 3780, 3686, 3686, 3780, 1266, 3686, 3780, 3780,
     1265, 1262, 1261, 1260, 1259, 3686, 3686, 3686, 3687, 3687,
     3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687, 3687, 1258,
     3687, 3781, 3687, 3687, 3781, 1255, 3687, 3781, 3781, 1254,
     1253, 1252, 1251, 1248, 3687, 3687, 3687, 3688, 3688, 3688,

     3688, 3688, 3688, 3688, 3688, 3688, 3688, 3688, 1247, 3688,
     3782, 3688, 3688, 3782, 1246, 3688, 3782, 3782, 1245, 1244,
     1241, 1240, 1239, 3688, 3688, 3688, 3689, 3689, 3689, 3689,
     3689, 3689, 3689, 3689, 3689, 3689, 3689, 1238, 3689, 3783,
     3689, 3689, 3783, 1237, 3689, 3783, 3783, 1218, 1203, 3689,
     3689, 1197, 3689, 3689, 3689, 3690, 3690, 3690, 3690, 3690,
     3690, 3690, 3690, 3690, 3690, 3690, 1196, 3690, 3784, 3690,
     3690, 3784, 1191, 3690, 3784, 3784, 1187, 1185, 1184, 1182,
     1181, 3690, 3690, 3690, 3691, 3691, 3691, 3691, 3691, 3691,
     3691, 3691, 3691, 3691, 3691, 1180, 3691, 3785, 3691, 3691,

     3785, 1179, 3691, 3785, 3785, 1178, 1177, 1176, 3691, 3691,
     3691, 3691, 3691, 3692, 3692, 3692, 3692, 3692, 3692, 3692,
     3692, 3692, 3692, 3692, 1174, 3692, 3786, 3692, 3692, 3786,
     1173, 3692, 3786, 3786, 1172, 1162, 1161, 1155, 1141, 3692,
     3692, 3692, 3693, 3693, 3693, 3693, 3693, 3693, 3693, 3693,
     3693, 3693, 3693, 1135, 3693, 3787, 3693, 3693, 3787, 1129,
     3693, 3787, 3787, 1127, 1107, 1106, 1105, 1104, 3693, 3693,
     3693, 3694, 3694, 3694, 3694, 3694, 3694, 3694, 3694, 3694,
     3694, 3694, 1103, 3694, 1100, 3694, 3694, 3803, 1099, 3694,
     3803, 3694, 1098, 3803, 3803, 1094, 1093, 3694, 3694, 3694,

     3695, 3695, 3695, 3695, 3695, 3695, 3695, 3695, 3695, 3695,
     3695, 1092, 3695, 3804, 3695, 3695, 3804, 1086, 3695, 3804,
     3804, 1085, 1081, 1080, 1079, 1078, 3695, 3695, 3695, 3696,
     3696, 3696, 3696, 1077, 3696, 3696, 1074, 3696, 3696, 3696,
     3696, 3696, 3696, 3696, 3697, 3697, 1073, 3697, 3697, 3697,
     3697, 3697, 3697, 3697, 3698, 3698, 3806, 1072, 3698, 3806,
     1071, 1070, 3806, 3806, 3698, 3698, 3698, 3698, 1064, 3698,
     3698, 1063, 3698, 3698, 3698, 3698, 3698, 3698, 3698, 3699,
     3699, 1061, 3699, 3699, 3699, 3699, 3699, 3699, 3699, 3700,
     1059, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700,

     3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700,
     3700, 3700, 3700, 3700, 3700, 3700, 3701, 1058, 3701, 3701,
     3701, 3701, 3701, 3701, 3701, 3701, 3701, 3701, 3701, 3701,
     3701, 3701, 3701, 3701, 3701, 3701, 3701, 3701, 3701, 3701,
     3701, 3701, 3701, 3702, 3702, 3702, 1057, 1056, 3702, 3702,
     1055, 3702, 3702, 3702, 3702, 3702, 3702, 3702, 3703, 3703,
     3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703,
     3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703,
     3703, 3703, 3703, 3703, 3703, 3703, 3703, 3704, 3704, 3704,
     3704, 1052, 3704, 3704, 3704, 3704, 3704, 3704, 3704, 3704,

     3704, 3704, 3704, 3704, 3704, 3705, 1051, 3705, 3705, 3705,
     3705, 3705, 3705, 3705, 3705, 3705, 3705, 3705, 3705, 3705,
     3705, 3705, 3705, 3705, 3705, 3705, 3705, 3705, 3705, 3705,
     3705, 3705, 3706, 1050, 3706, 1049, 3706, 1045, 3706, 3706,
     3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706,
     3706, 3706, 3706, 3706, 3706, 3706, 3706, 3707, 3707, 3707,
     3707, 1044, 3707, 3707, 1043, 3707, 3707, 3707, 3707, 3707,
     3707, 3707, 3708, 3708, 1041, 3708, 3708, 3708, 3708, 3708,
     3708, 3708, 3709, 3709, 3709, 3709, 1040, 3709, 3709, 1039,
     3709, 3709, 3709, 3709, 3709, 3709, 3709, 3710, 3710, 1038,

     3710, 3710, 3710, 3710, 3710, 3710, 3710, 3711, 3711, 3711,
     3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711,
     3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711, 3711,
     3711, 3711, 3711, 3711, 3711, 3711, 3712, 3712, 3712, 3712,
     3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712,
     3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712, 3712,
     3712, 3712, 3712, 3712, 3712, 3713, 3713, 3713, 3713, 1035,
     3713, 3713, 1034, 3713, 3713, 3713, 3713, 3713, 3713, 3713,
     3714, 3714, 1033, 3714, 3714, 3714, 3714, 3714, 3714, 3714,
     3715, 1032, 3715, 3715, 3715, 3715, 3715, 3715, 3715, 3715,

     3715, 3715, 3715, 3715, 3715, 3715, 3715, 3715, 3715, 3715,
     3715, 3715, 3715, 3715, 3715, 3715, 3715, 3716, 1027, 3716,
     3716, 3716, 3716, 3716, 3716, 3716, 3716, 1026, 3716, 3716,
     3716, 3716, 3716, 3716, 3716, 3716, 3716, 3716, 3716, 3716,
     3716, 3716, 3716, 3716, 3717, 1025, 3717, 3717, 3717, 3717,
     3717, 3717, 3717, 3717, 3717, 3717, 3717, 3717, 3717, 3717,
     3717, 3717, 3717, 3717, 3717, 3717, 3717, 3717, 3717, 3717,
     3717, 3718, 3718, 3718, 3718, 3718, 3718, 3718, 3718, 3718,
     3718, 3718, 3718, 3718, 3718, 3718, 3718, 3718, 3718, 3718,
     3718, 3718, 3718, 3718, 3718, 3718, 3718, 3718, 3718, 3718,

     3719, 3719, 3719, 3719, 3719, 3719, 3719, 3719, 3719, 3719,
     3719, 3719, 3719, 3719, 3719, 3719, 3719, 3719, 3719, 3719,
     3719, 3719, 3719, 3719, 3719, 3719, 3719, 3719, 3719, 3720,
     3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720,
     3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720,
     3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3721, 3721,
     1024, 3721, 3721, 3721, 3721, 3721, 3721, 3721, 3722, 3722,
     3722, 3722, 1023, 3722, 3722, 1019, 3722, 3722, 3722, 3722,
     3722, 3722, 3722, 3723, 1014, 1013, 1012, 1011, 1010, 3723,
     3723, 1009, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3724,

     3724, 3724, 1008, 1007, 3724, 3724, 1005, 3724, 3724, 3724,
     3724, 3724, 3724, 3724, 3725, 1004, 1003, 3725, 3725, 1002,
     3725, 3725, 3725, 3725, 3725, 3725, 3725, 3726, 1001, 1000,
     3726, 3726,  999, 3726, 3726, 3726, 3726, 3726, 3726, 3726,
     3727, 3727, 3727, 3727, 3727, 3727, 3727, 3727, 3727, 3727,
     3727, 3727, 3727, 3727, 3727, 3727, 3727, 3727, 3727, 3727,
     3727, 3727, 3727, 3727, 3727, 3727, 3727, 3727, 3727, 3728,
     3728, 3728,  998,  997, 3728, 3728,  996, 3728, 3728, 3728,
     3728, 3728, 3728, 3728, 3729, 3729, 3729, 3729,  995, 3729,
     3729,  994, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3730,

      993,  992,  991,  990,  988, 3730, 3730,  987, 3730, 3730,
     3730, 3730, 3730, 3730, 3730, 3733, 3733, 3807,  985,  983,
     3807,  982,  979, 3807, 3807, 3733, 3733, 3733,  974,  971,
     3733, 3733,  970, 3733, 3733, 3733, 3733, 3733, 3733, 3733,
     3734, 3734, 3734,  968,  967, 3734, 3734,  966, 3734, 3734,
     3734, 3734, 3734, 3734, 3734, 3735, 3735, 3735, 3735,  964,
     3735, 3735,  963, 3735, 3735, 3735, 3735, 3735, 3735, 3735,
     3736, 3736,  962, 3736, 3736, 3736, 3736, 3736, 3736, 3736,
     3737, 3737, 3737,  960,  959, 3737, 3737,  958, 3737, 3737,
     3737, 3737, 3737, 3737, 3737, 3738, 3738, 3738, 3738,  957,

     3738, 3738,  956, 3738, 3738, 3738, 3738, 3738, 3738, 3738,
     3739, 3739, 3739,  955,  954, 3739, 3739,  953, 3739, 3739,
     3739, 3739, 3739, 3739, 3739, 3740, 3740, 3740, 3740, 3740,
     3740, 3740, 3740, 3740, 3740, 3740,  952, 3740, 3897, 3740,
     3740, 3897,  951, 3740, 3897, 3897,  949,  948,  945,  940,
      939, 3740, 3740, 3740, 3741, 3741, 3741, 3741, 3741, 3741,
     3741, 3741, 3741, 3741, 3741,  938, 3741, 3898, 3741, 3741,
     3898,  937, 3741, 3898, 3898,  936,  933,  932,  931,  930,
     3741, 3741, 3741, 3742, 3742, 3742, 3742, 3742, 3742, 3742,
     3742, 3742, 3742, 3742,  927, 3742, 3909, 3742, 3742, 3909,

      925, 3742, 3909, 3909,  924,  923,  922,  921,  920, 3742,
     3742, 3742, 3743, 3743, 3743, 3743, 3743, 3743, 3743, 3743,
     3743, 3743, 3743,  919, 3743, 3910, 3743, 3743, 3910,  916,
     3743, 3910, 3910,  915,  914,  913,  908,  907, 3743, 3743,
     3743, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744, 3744,
     3744, 3744,  906, 3744,  905, 3744, 3744,  902,  901, 3744,
      900,  899, 3744,  896,  895,  894,  893, 3744, 3744, 3744,
     3745, 3745, 3745,  890,  889, 3745, 3745,  888, 3745, 3745,
     3745, 3745, 3745, 3745, 3745, 3746, 3746,  887,  877, 3746,
      866,  862,  858,  855,  850, 3746, 3746, 3746,  845,  841,

     3746, 3746,  838, 3746, 3746, 3746, 3746, 3746, 3746, 3746,
     3747,  832, 3747, 3747, 3747, 3747, 3747, 3747, 3747, 3747,
     3747, 3747, 3747, 3747, 3747, 3747, 3747, 3747, 3747, 3747,
     3747, 3747, 3747, 3747, 3747, 3747, 3747, 3748, 3748, 3748,
     3748, 3748, 3748, 3748, 3748, 3748, 3748, 3748, 3748, 3748,
     3748, 3748, 3748, 3748, 3748, 3748, 3748, 3748, 3748, 3748,
     3748, 3748, 3748, 3748, 3748, 3748, 3750, 3750, 3750,  821,
      820, 3750, 3750,  816, 3750, 3750, 3750, 3750, 3750, 3750,
     3750, 3751, 3751, 3751,  811,  810, 3751, 3751,  809, 3751,
     3751, 3751, 3751, 3751, 3751, 3751, 3752, 3752, 3752,  808,

      807, 3752, 3752,  806, 3752, 3752, 3752, 3752, 3752, 3752,
     3752, 3753,  805, 3753, 3753, 3753, 3753, 3753, 3753, 3753,
     3753, 3753, 3753, 3753, 3753, 3753, 3753, 3753, 3753, 3753,
     3753, 3753, 3753, 3753, 3753, 3753, 3753, 3753, 3754, 3754,
     3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754,
     3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754, 3754,
     3754, 3754, 3754, 3754, 3754, 3754, 3754, 3755, 3755, 3755,
     3755, 3755, 3755, 3755, 3755, 3755, 3755, 3755,  802, 3755,
      801, 3755, 3755,  799,  798, 3755,  797,  796,  795,  755,
      733,  731,  730, 3755, 3755, 3755, 3756, 3756, 3756,  722,

      721, 3756, 3756,  720, 3756, 3756, 3756, 3756, 3756, 3756,
     3756, 3757, 3757, 3757,  719,  718, 3757, 3757,  713, 3757,
     3757, 3757, 3757, 3757, 3757, 3757, 3760, 3760, 3760,  712,
      711, 3760, 3760,  710, 3760, 3760, 3760, 3760, 3760, 3760,
     3760, 3761, 3761, 3761, 3761, 3761, 3761, 3761, 3761, 3761,
     3761, 3761, 3761, 3761, 3761, 3761, 3761, 3761, 3761, 3761,
     3761, 3761, 3761, 3761, 3761, 3761, 3761, 3761, 3761, 3761,
     3762, 3762, 3762,  707,  706, 3762, 3762,  705, 3762, 3762,
     3762, 3762, 3762, 3762, 3762, 3763, 3763, 3763, 3763,  704,
     3763, 3763,  701, 3763, 3763, 3763, 3763, 3763, 3763, 3763,

     3764,  700,  698,  697,  696,  695, 3764, 3764,  694, 3764,
     3764, 3764, 3764, 3764, 3764, 3764, 3765, 3765, 3765, 3765,
     3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765,
     3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765, 3765,
     3765, 3765, 3765, 3765, 3765, 3766, 3766, 3766, 3766, 3766,
     3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766,
     3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766, 3766,
     3766, 3766, 3766, 3766, 3767, 3767, 3767, 3767, 3767, 3767,
     3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767,
     3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767,

     3767, 3767, 3767, 3768, 3768, 3768, 3768, 3768, 3768, 3768,
     3768, 3768, 3768, 3768, 3768, 3768, 3768, 3768, 3768, 3768,
     3768, 3768, 3768, 3768, 3768, 3768, 3768, 3768, 3768, 3768,
     3768, 3768, 3769,  693, 3769, 3769,  689,  687, 3769, 3769,
     3770,  685, 3770, 3770,  684,  682, 3770, 3770, 3771, 3771,
      681,  680,  676,  673,  669,  663,  659,  654, 3771, 3771,
     3771,  653,  652, 3771, 3771,  651, 3771, 3771, 3771, 3771,
     3771, 3771, 3771, 3772, 3772, 3772,  644,  641, 3772, 3772,
      640, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3773, 3773,
     3773, 3773,  629, 3773, 3773,  625, 3773, 3773, 3773, 3773,

     3773, 3773, 3773, 3774, 3774,  622, 3774, 3774, 3774, 3774,
     3774, 3774, 3774, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776,
     3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776,
     3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776,
     3776, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777,
     3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777,
     3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777,

     3778, 3778, 3778,  620,  619, 3778, 3778,  618, 3778, 3778,
     3778, 3778, 3778, 3778, 3778, 3779, 3779, 3779, 3779,  617,
     3779, 3779,  616, 3779, 3779, 3779, 3779, 3779, 3779, 3779,
     3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788,
     3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788,
     3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3789,
     3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789,
      614, 3789,  613, 3789, 3789,  611,  610, 3789,  607,  606,
      605,  604,  603,  602,  600, 3789, 3789, 3789, 3790, 3790,
     3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790,  598,

     3790,  596, 3790, 3790,  593,  590, 3790,  589,  588,  585,
      584,  583,  578,  576, 3790, 3790, 3790, 3791, 3791, 3791,
     3791, 3791, 3791, 3791, 3791, 3791, 3791, 3791,  574, 3791,
      573, 3791, 3791,  563,  558, 3791,  552,  551,  550,  549,
      548,  546,  542, 3791, 3791, 3791, 3792, 3792, 3792, 3792,
     3792, 3792, 3792, 3792, 3792, 3792, 3792,  536, 3792,  532,
     3792, 3792,  527,  523, 3792,  517,  477,  457,  456,  455,
      454,  450, 3792, 3792, 3792, 3793, 3793, 3793, 3793, 3793,
     3793, 3793, 3793, 3793, 3793, 3793,  449, 3793,  446, 3793,
     3793,  442,  441, 3793,  440,  439,  387,  386,  384,  370,

      365, 3793, 3793, 3793, 3794, 3794, 3794, 3794, 3794, 3794,
     3794, 3794, 3794, 3794, 3794,  360, 3794,  359, 3794, 3794,
      356,  355, 3794,  353,  348,  347,  346,  345,  343,  342,
     3794, 3794, 3794, 3795, 3795, 3795, 3795, 3795, 3795, 3795,
     3795, 3795, 3795, 3795,  341, 3795,  336, 3795, 3795,  335,
      326, 3795,  323,  316,  315,  310,  309,  307,  303, 3795,
     3795, 3795, 3796, 3796, 3796, 3796, 3796, 3796, 3796, 3796,
     3796, 3796, 3796,  302, 3796,  301, 3796, 3796,  299,  281,
     3796,  275,  269,  265, 3796,  257,  248,  239, 3796, 3796,
     3796, 3797, 3797, 3797,  236,  228, 3797, 3797,  223, 3797,

     3797, 3797, 3797, 3797, 3797, 3797, 3798, 3798,  221,  220,
     3798,  218,  211,  206,  197,  187, 3798, 3798, 3798,  184,
      160, 3798, 3798,  155, 3798, 3798, 3798, 3798, 3798, 3798,
     3798, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799,
      149, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799,
     3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799,
     3800,  144, 3800, 3800,  143,  138, 3800, 3800, 3801, 3801,
     3801,  137,  130, 3801, 3801,  129, 3801, 3801, 3801, 3801,
     3801, 3801, 3801, 3802, 3802, 3802,  123,  118, 3802, 3802,
      115, 3802, 3802, 3802, 3802, 3802, 3802, 3802, 3805, 3805,

     3805,  114,  113, 3805, 3805,  107, 3805, 3805, 3805, 3805,
     3805, 3805, 3805, 3808, 3808, 3808, 3808, 3808, 3808, 3808,
     3808, 3808,   86, 3808, 3808, 3808, 3808, 3808, 3808, 3808,
     3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808,
     3808, 3808, 3809, 3809, 3809, 3809, 3809, 3809, 3809, 3809,
     3809, 3809, 3809,   76, 3809,   72, 3809, 3809,   63,    0,
     3809,    0,    0,    0,    0,    0,    0,    0, 3809, 3809,
     3809, 3810, 3810, 3810,    0,    0, 3810, 3810,    0, 3810,
     3810, 3810, 3810, 3810, 3810, 3810, 3811, 3811, 3811,    0,
        0, 3811, 3811,    0, 3811, 3811, 3811, 3811, 3811, 3811,

     3811, 3812,    0, 3812, 3812,    0,    0, 3812, 3812, 3813,
        0, 3813, 3813,    0,    0, 3813, 3813, 3814, 3814, 3814,
     3814, 3814, 3814, 3814, 3814, 3814,    0, 3814, 3814, 3814,
     3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814,
     3814, 3814, 3814, 3814, 3814, 3814, 3815, 3815, 3815, 3815,
     3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815,
     3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815,
     3815, 3815, 3815, 3815, 3815, 3816, 3816, 3816, 3816,    0,
     3816, 3816,    0, 3816, 3816, 3816, 3816, 3816, 3816, 3816,
     3817, 3817, 3817, 3817, 3817, 3817, 3817, 3817, 3817, 3817,

     3817, 3817, 3817, 3817, 3817, 3817, 3817, 3817, 3817, 3817,
     3817, 3817, 3817, 3817, 3817, 3817, 3817, 3817, 3817, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3819, 3819,
     3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819,
     3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819,
     3819, 3819, 3819, 3819, 3819, 3819, 3819, 3820, 3820, 3820,
     3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,
     3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820, 3820,

     3820, 3820, 3820, 3820, 3820, 3820, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3821, 3822,    0,    0,    0,    0,
        0, 3822, 3822,    0, 3822, 3822, 3822, 3822, 3822, 3822,
     3822, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823,
     3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823,
     3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823,
     3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824,
     3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824,

     3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3825,
     3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825,
     3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825,
     3825, 3825, 3825, 3825, 3825, 3825, 3825, 3825, 3826, 3826,
     3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826,
     3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826, 3826,
     3826, 3826, 3826, 3826, 3826, 3826, 3826, 3827, 3827, 3827,
     3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827,
     3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827,
     3827, 3827, 3827, 3827, 3827, 3827, 3828, 3828, 3828, 3828,

        0, 3828, 3828,    0, 3828, 3828, 3828, 3828, 3828, 3828,
     3828, 3829, 3829,    0, 3829, 3829, 3829, 3829, 3829, 3829,
     3829, 3830, 3830, 3830, 3830,    0, 3830, 3830,    0, 3830,
     3830, 3830, 3830, 3830, 3830, 3830, 3831,    0, 3831, 3831,
        0,    0, 3831, 3831, 3832,    0, 3832, 3832,    0,    0,
     3832, 3832, 3833,    0, 3833, 3833,    0,    0, 3833, 3833,
     3834,    0, 3834, 3834,    0,    0, 3834, 3834, 3835,    0,
     3835, 3835,    0,    0, 3835, 3835, 3836,    0, 3836, 3836,
        0,    0, 3836, 3836, 3837,    0, 3837, 3837,    0,    0,
     3837, 3837, 3838,    0, 3838, 3838,    0,    0, 3838, 3838,

     3839, 3839, 3839, 3839, 3839, 3839, 3839, 3839, 3839, 3839,
     3839,    0, 3839,    0, 3839, 3839,    0,    0, 3839,    0,
        0,    0,    0,    0,    0,    0, 3839, 3839, 3839, 3840,
     3840, 3840, 3840, 3840, 3840, 3840, 3840, 3840, 3840, 3840,
     3840, 3840, 3840, 3840, 3840, 3840, 3840, 3840, 3840, 3840,
     3840, 3840, 3840, 3840, 3840, 3840, 3840, 3840, 3841, 3841,
     3841, 3841, 3841, 3841, 3841, 3841, 3841, 3841, 3841, 3841,
     3841, 3841, 3841, 3841, 3841, 3841, 3841, 3841, 3841, 3841,
     3841, 3841, 3841, 3841, 3841, 3841, 3841, 3842, 3842, 3842,
     3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842,

     3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842,
     3842, 3842, 3842, 3842, 3842, 3842, 3843, 3843, 3843, 3843,
     3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843,
     3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843,
     3843, 3843, 3843, 3843, 3843, 3844, 3844, 3844, 3844, 3844,
     3844, 3844, 3844, 3844, 3844, 3844, 3844, 3844, 3844, 3844,
     3844, 3844, 3844, 3844, 3844, 3844, 3844, 3844, 3844, 3844,
     3844, 3844, 3844, 3844, 3845, 3845, 3845, 3845, 3845, 3845,
     3845, 3845, 3845, 3845, 3845,    0, 3845,    0, 3845, 3845,
        0,    0, 3845,    0,    0,    0,    0,    0,    0,    0,

     3845, 3845, 3845, 3846, 3846, 3846, 3846, 3846, 3846, 3846,
     3846, 3846, 3846, 3846,    0, 3846,    0, 3846, 3846,    0,
        0, 3846,    0,    0,    0,    0,    0,    0,    0, 3846,
     3846, 3846, 3847, 3847, 3847, 3847, 3847, 3847, 3847, 3847,
     3847, 3847, 3847,    0, 3847,    0, 3847, 3847,    0,    0,
     3847,    0,    0,    0,    0,    0,    0,    0, 3847, 3847,
     3847, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848,
     3848, 3848,    0, 3848,    0, 3848, 3848,    0,    0, 3848,
        0,    0,    0,    0,    0,    0,    0, 3848, 3848, 3848,
     3849, 3849, 3849, 3849, 3849, 3849, 3849, 3849, 3849, 3849,

     3849,    0, 3849,    0, 3849, 3849,    0,    0, 3849,    0,
        0,    0,    0,    0,    0,    0, 3849, 3849, 3849, 3850,
     3850, 3850, 3850, 3850, 3850, 3850, 3850, 3850, 3850, 3850,
        0, 3850,    0, 3850, 3850,    0,    0, 3850,    0,    0,
        0,    0,    0,    0,    0, 3850, 3850, 3850, 3851,    0,
     3851, 3851,    0,    0, 3851, 3851, 3852,    0, 3852, 3852,
        0,    0, 3852, 3852, 3853, 3853, 3853, 3853, 3853, 3853,
     3853, 3853, 3853, 3853, 3853,    0, 3853,    0, 3853, 3853,
        0,    0, 3853,    0,    0,    0,    0,    0,    0,    0,
     3853, 3853, 3853, 3854,    0, 3854, 3854,    0,    0, 3854,

     3854, 3855,    0, 3855, 3855,    0,    0, 3855, 3855, 3856,
     3856, 3856, 3856,    0, 3856, 3856,    0, 3856, 3856, 3856,
     3856, 3856, 3856, 3856, 3857,    0,    0,    0,    0,    0,
     3857, 3857,    0, 3857, 3857, 3857, 3857, 3857, 3857, 3857,
     3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858,
     3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858,
     3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858, 3859,
     3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859,
     3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859,
     3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 3860, 3860,

     3860, 3860, 3860, 3860, 3860, 3860, 3860, 3860, 3860,    0,
     3860,    0, 3860, 3860,    0,    0, 3860,    0,    0,    0,
        0,    0,    0,    0, 3860, 3860, 3860, 3861, 3861, 3861,
     3861, 3861, 3861, 3861, 3861, 3861,    0, 3861, 3861, 3861,
     3861, 3861, 3861, 3861, 3861, 3861, 3861, 3861, 3861, 3861,
     3861, 3861, 3861, 3861, 3861, 3861, 3862, 3862, 3862, 3862,
     3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862,
     3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862, 3862,
     3862, 3862, 3862, 3862, 3862, 3863, 3863, 3863, 3863, 3863,
     3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863,

     3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863, 3863,
     3863, 3863, 3863, 3863, 3864, 3864, 3864, 3864, 3864, 3864,
     3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864,
     3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3864,
     3864, 3864, 3864, 3865, 3865, 3865, 3865, 3865, 3865, 3865,
     3865, 3865,    0, 3865, 3865, 3865, 3865, 3865, 3865, 3865,
     3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865, 3865,
     3865, 3865, 3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866,
     3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866,
     3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866, 3866,

     3866, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867,
     3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867,
     3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867, 3867,
     3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868,
     3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868,
     3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3869,
     3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869,    0, 3869,
     3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869,
     3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3870, 3870,
     3870, 3870,    0, 3870, 3870,    0, 3870, 3870, 3870, 3870,

     3870, 3870, 3870, 3871, 3871, 3871, 3871, 3871, 3871, 3871,
     3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871,
     3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871,
     3871, 3871, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872,
     3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872,
     3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872,
     3872, 3873, 3873,    0, 3873, 3873, 3873, 3873, 3873, 3873,
     3873, 3874, 3874, 3874, 3874,    0, 3874, 3874,    0, 3874,
     3874, 3874, 3874, 3874, 3874, 3874, 3875, 3875, 3875, 3875,
     3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875,

     3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875,
     3875, 3875, 3875, 3875, 3875, 3876, 3876, 3876, 3876, 3876,
     3876, 3876, 3876, 3876, 3876, 3876, 3876, 3876, 3876, 3876,
     3876, 3876, 3876, 3876, 3876, 3876, 3876, 3876, 3876, 3876,
     3876, 3876, 3876, 3876, 3877, 3877, 3877, 3877, 3877, 3877,
     3877, 3877, 3877, 3877, 3877,    0, 3877,    0, 3877, 3877,
        0,    0, 3877,    0,    0,    0,    0,    0,    0,    0,
     3877, 3877, 3877, 3878, 3878, 3878, 3878, 3878, 3878, 3878,
     3878, 3878,    0, 3878, 3878, 3878, 3878, 3878, 3878, 3878,
     3878, 3878, 3878, 3878, 3878, 3878, 3878, 3878, 3878, 3878,

     3878, 3878, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879,
     3879, 3879, 3879,    0, 3879,    0, 3879, 3879,    0,    0,
     3879,    0,    0,    0,    0,    0,    0,    0, 3879, 3879,
     3879, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880,
     3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880,
     3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880,
     3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881,
     3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881,
     3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881, 3881, 3882,
     3882, 3882, 3882, 3882, 3882, 3882, 3882, 3882, 3882, 3882,

        0, 3882,    0, 3882, 3882,    0,    0, 3882,    0,    0,
        0,    0,    0,    0,    0, 3882, 3882, 3882, 3883, 3883,
     3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883,
     3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883,
     3883, 3883, 3883, 3883, 3883, 3883, 3883, 3884, 3884, 3884,
     3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884,
     3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884,
     3884, 3884, 3884, 3884, 3884, 3884, 3885, 3885, 3885, 3885,
     3885, 3885, 3885, 3885, 3885, 3885, 3885,    0, 3885,    0,
     3885, 3885,    0,    0, 3885,    0,    0,    0,    0,    0,

        0,    0, 3885, 3885, 3885, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886,    0, 3886,    0, 3886,
     3886,    0,    0, 3886,    0,    0,    0,    0,    0,    0,
        0, 3886, 3886, 3886, 3887, 3887, 3887, 3887, 3887, 3887,
     3887, 3887, 3887, 3887, 3887,    0, 3887,    0, 3887, 3887,
        0,    0, 3887,    0,    0,    0,    0,    0,    0,    0,
     3887, 3887, 3887, 3888, 3888, 3888, 3888, 3888, 3888, 3888,
     3888, 3888, 3888, 3888,    0, 3888,    0, 3888, 3888,    0,
        0, 3888,    0,    0,    0,    0,    0,    0,    0, 3888,
     3888, 3888, 3889, 3889, 3889, 3889, 3889, 3889, 3889, 3889,

     3889, 3889, 3889,    0, 3889,    0, 3889, 3889,    0,    0,
     3889,    0,    0,    0,    0,    0,    0,    0, 3889, 3889,
     3889, 3890, 3890, 3890, 3890, 3890, 3890, 3890, 3890, 3890,
     3890, 3890,    0, 3890,    0, 3890, 3890,    0,    0, 3890,
        0,    0,    0,    0,    0,    0,    0, 3890, 3890, 3890,
     3891, 3891, 3891, 3891, 3891, 3891, 3891, 3891, 3891, 3891,
     3891,    0, 3891,    0, 3891, 3891,    0,    0, 3891,    0,
        0,    0,    0,    0,    0,    0, 3891, 3891, 3891, 3892,
     3892, 3892, 3892, 3892, 3892, 3892, 3892, 3892, 3892, 3892,
     3892, 3892, 3892, 3892, 3892, 3892, 3892, 3892, 3892, 3892,

     3892, 3892, 3892, 3892, 3892, 3892, 3892, 3892, 3893, 3893,
     3893, 3893, 3893, 3893, 3893, 3893, 3893, 3893, 3893,    0,
     3893,    0, 3893, 3893,    0,    0, 3893,    0,    0,    0,
        0,    0,    0,    0, 3893, 3893, 3893, 3894, 3894, 3894,
     3894, 3894, 3894, 3894, 3894, 3894,    0, 3894, 3894, 3894,
     3894, 3894, 3894, 3894, 3894, 3894, 3894, 3894, 3894, 3894,
     3894, 3894, 3894, 3894, 3894, 3894, 3895, 3895, 3895, 3895,
        0, 3895, 3895,    0, 3895, 3895, 3895, 3895, 3895, 3895,
     3895, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896,
        0, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896,

     3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896,
     3899, 3899, 3899, 3899, 3899, 3899, 3899, 3899, 3899, 3899,
     3899,    0, 3899,    0, 3899, 3899,    0,    0, 3899,    0,
        0,    0,    0,    0,    0,    0, 3899, 3899, 3899, 3900,
        0,    0,    0,    0,    0, 3900, 3900,    0, 3900, 3900,
     3900, 3900, 3900, 3900, 3900, 3901, 3901, 3901, 3901, 3901,
     3901, 3901, 3901, 3901, 3901, 3901, 3901, 3901, 3901, 3901,
     3901, 3901, 3901, 3901, 3901, 3901, 3901, 3901, 3901, 3901,
     3901, 3901, 3901, 3901, 3902, 3902, 3902, 3902, 3902, 3902,
     3902, 3902, 3902, 3902, 3902, 3902, 3902, 3902, 3902, 3902,

     3902, 3902, 3902, 3902, 3902, 3902, 3902, 3902, 3902, 3902,
     3902, 3902, 3902, 3903, 3903, 3903, 3903, 3903, 3903, 3903,
     3903, 3903, 3903, 3903, 3903, 3903, 3903, 3903, 3903, 3903,
     3903, 3903, 3903, 3903, 3903, 3903, 3903, 3903, 3903, 3903,
     3903, 3903, 3904, 3904, 3904, 3904, 3904, 3904, 3904, 3904,
     3904,    0, 3904, 3904, 3904, 3904, 3904, 3904, 3904, 3904,
     3904, 3904, 3904, 3904, 3904, 3904, 3904, 3904, 3904, 3904,
     3904, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905,
        0, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905,
     3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3905,

     3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906,
     3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906,
     3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3906, 3907,
     3907, 3907, 3907, 3907, 3907, 3907, 3907, 3907, 3907, 3907,
     3907, 3907, 3907, 3907, 3907, 3907, 3907, 3907, 3907, 3907,
     3907, 3907, 3907, 3907, 3907, 3907, 3907, 3907, 3908, 3908,
     3908, 3908, 3908, 3908, 3908, 3908, 3908, 3908, 3908,    0,
     3908,    0, 3908, 3908,    0,    0, 3908,    0,    0,    0,
        0,    0,    0,    0, 3908, 3908, 3908, 3911, 3911, 3911,
     3911,    0, 3911, 3911,    0, 3911, 3911, 3911, 3911, 3911,

     3911, 3911, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912, 3912,    0, 3912,    0, 3912, 3912,    0,    0,
     3912,    0,    0,    0,    0,    0,    0,    0, 3912, 3912,
     3912, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913,
     3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913,
     3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913,
     3914, 3914,    0, 3914, 3914, 3914, 3914, 3914, 3914, 3914,
     3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915,
     3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915,
     3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3916,

     3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916,
     3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916,
     3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3917, 3917,
     3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917,
     3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917,
     3917, 3917, 3917, 3917, 3917, 3917, 3917, 3918, 3918, 3918,
     3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918,
     3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918, 3918,
     3918, 3918, 3918, 3918, 3918, 3918, 3919, 3919, 3919, 3919,
     3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919,

     3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919, 3919,
     3919, 3919, 3919, 3919, 3919, 3920, 3920,    0,    0,    0,
        0,    0, 3920,    0,    0, 3920, 3920, 3920, 3920,    0,
     3920, 3920,    0, 3920, 3920, 3920, 3920, 3920, 3920, 3920,
     3921, 3921, 3921, 3921, 3921, 3921, 3921, 3921, 3921, 3921,
     3921,    0, 3921,    0, 3921, 3921,    0,    0, 3921,    0,
        0,    0,    0,    0,    0,    0, 3921, 3921, 3921, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,    0, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3923, 3923,

     3923, 3923, 3923, 3923, 3923, 3923, 3923,    0, 3923, 3923,
     3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923,
     3923, 3923, 3923, 3923, 3923, 3923, 3923, 3924, 3924, 3924,
     3924, 3924, 3924, 3924, 3924, 3924, 3924, 3924,    0, 3924,
        0, 3924, 3924,    0,    0, 3924,    0,    0,    0,    0,
        0,    0,    0, 3924, 3924, 3924, 3925, 3925, 3925, 3925,
     3925, 3925, 3925, 3925, 3925, 3925, 3925, 3925, 3925, 3925,
     3925, 3925, 3925, 3925, 3925, 3925, 3925, 3925, 3925, 3925,
     3925, 3925, 3925, 3925, 3925, 3926, 3926, 3926, 3926, 3926,
     3926, 3926, 3926, 3926, 3926, 3926,    0, 3926,    0, 3926,

     3926,    0,    0, 3926,    0,    0,    0,    0,    0,    0,
        0, 3926, 3926, 3926, 3927, 3927, 3927, 3927, 3927, 3927,
     3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927,
     3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927, 3927,
     3927, 3927, 3927, 3928, 3928, 3928, 3928, 3928, 3928, 3928,
     3928, 3928, 3928, 3928,    0, 3928,    0, 3928, 3928,    0,
        0, 3928,    0,    0,    0,    0,    0,    0,    0, 3928,
     3928, 3928, 3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929,
     3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929,
     3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929, 3929,

     3929, 3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930,
     3930, 3930,    0, 3930,    0, 3930, 3930,    0,    0, 3930,
        0,    0,    0,    0,    0,    0,    0, 3930, 3930, 3930,
     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,    0,
     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3931, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,    0, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3933, 3933,
     3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933,

     3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933, 3933,
     3933, 3933, 3933, 3933, 3933, 3933, 3933, 3934, 3934, 3934,
     3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934,
     3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934,
     3934, 3934, 3934, 3934, 3934, 3934, 3935, 3935, 3935, 3935,
     3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935,
     3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935,
     3935, 3935, 3935, 3935, 3935, 3936, 3936, 3936, 3936,    0,
     3936, 3936,    0, 3936, 3936, 3936, 3936, 3936, 3936, 3936,
     3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937,

     3937,    0, 3937,    0, 3937, 3937,    0,    0, 3937,    0,
        0,    0,    0,    0,    0,    0, 3937, 3937, 3937, 3938,
        0, 3938, 3938,    0,    0, 3938, 3938, 3939,    0, 3939,
     3939,    0,    0, 3939, 3939, 3940, 3940, 3940, 3940, 3940,
     3940, 3940, 3940, 3940, 3940, 3940,    0, 3940,    0, 3940,
     3940,    0,    0, 3940,    0,    0,    0,    0,    0,    0,
        0, 3940, 3940, 3940, 3941, 3941, 3941, 3941, 3941, 3941,
     3941, 3941, 3941, 3941, 3941,    0, 3941,    0, 3941, 3941,
        0,    0, 3941,    0,    0,    0,    0,    0,    0,    0,
     3941, 3941, 3941, 3942, 3942, 3942, 3942, 3942, 3942, 3942,

     3942, 3942,    0, 3942, 3942, 3942, 3942, 3942, 3942, 3942,
     3942, 3942, 3942, 3942, 3942, 3942, 3942, 3942, 3942, 3942,
     3942, 3942, 3943, 3943, 3943, 3943, 3943, 3943, 3943, 3943,
     3943,    0, 3943, 3943, 3943, 3943, 3943, 3943, 3943, 3943,
     3943, 3943, 3943, 3943, 3943, 3943, 3943, 3943, 3943, 3943,
     3943, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944,
     3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944,
     3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944,
     3945, 3945,    0,    0,    0,    0,    0, 3945,    0,    0,
        0,    0,    0,    0,    0, 3945, 3945,    0, 3945, 3945,

     3945, 3945, 3945, 3945, 3945, 3945, 3946, 3946, 3946, 3946,
     3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946,
     3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946,
     3946, 3946, 3946, 3946, 3946, 3947, 3947, 3947, 3947, 3947,
     3947, 3947, 3947, 3947, 3947, 3947, 3947, 3947, 3947, 3947,
     3947, 3947, 3947, 3947, 3947, 3947, 3947, 3947, 3947, 3947,
     3947, 3947, 3947, 3947, 3948,    0,    0,    0,    0,    0,
     3948, 3948,    0, 3948, 3948, 3948, 3948, 3948, 3948, 3948,
     3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949,
     3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949,

     3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3949, 3950,
     3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950,
     3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950,
     3950, 3950, 3950, 3950, 3950, 3950, 3950, 3950, 3951, 3951,
     3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951,
     3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951, 3951,
     3951, 3951, 3951, 3951, 3951, 3951, 3951, 3952, 3952, 3952,
     3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952,
     3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952, 3952,
     3952, 3952, 3952, 3952, 3952, 3952, 3953, 3953, 3953, 3953,

     3953, 3953, 3953, 3953, 3953,    0, 3953, 3953, 3953, 3953,
     3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953, 3953,
     3953, 3953, 3953, 3953, 3953, 3954, 3954, 3954, 3954, 3954,
     3954, 3954, 3954, 3954,    0, 3954, 3954, 3954, 3954, 3954,
     3954, 3954, 3954, 3954, 3954, 3954, 3954, 3954, 3954, 3954,
     3954, 3954, 3954, 3954, 3955, 3955, 3955, 3955, 3955, 3955,
     3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955,
     3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955, 3955,
     3955, 3955, 3955, 3956,    0, 3956, 3956,    0,    0, 3956,
     3956, 3957,    0, 3957, 3957,    0,    0, 3957, 3957, 3958,

     3958, 3958, 3958,    0, 3958, 3958,    0, 3958, 3958, 3958,
     3958, 3958, 3958, 3958, 3959, 3959, 3959, 3959, 3959, 3959,
     3959, 3959, 3959,    0, 3959, 3959, 3959, 3959, 3959, 3959,
     3959, 3959, 3959, 3959, 3959, 3959, 3959, 3959, 3959, 3959,
     3959, 3959, 3959, 3960, 3960, 3960, 3960, 3960, 3960, 3960,
     3960, 3960, 3960, 3960, 3960, 3960, 3960, 3960, 3960, 3960,
     3960, 3960, 3960, 3960, 3960, 3960, 3960, 3960, 3960, 3960,
     3960, 3960, 3961, 3961, 3961, 3961, 3961, 3961, 3961, 3961,
     3961, 3961, 3961, 3961, 3961, 3961, 3961, 3961, 3961, 3961,
     3961, 3961, 3961, 3961, 3961, 3961, 3961, 3961, 3961, 3961,

     3961, 3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962,
        0, 3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962,
     3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962, 3962,
     3963, 3963, 3963, 3963, 3963, 3963, 3963, 3963, 3963, 3963,
     3963,    0, 3963,    0, 3963, 3963,    0,    0, 3963,    0,
        0,    0,    0,    0,    0,    0, 3963, 3963, 3963, 3964,
     3964, 3964, 3964, 3964, 3964, 3964, 3964, 3964, 3964, 3964,
     3964, 3964, 3964, 3964, 3964, 3964, 3964, 3964, 3964, 3964,
     3964, 3964, 3964, 3964, 3964, 3964, 3964, 3964, 3965, 3965,
     3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965,

     3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965,
     3965, 3965, 3965, 3965, 3965, 3965, 3965, 3966, 3966, 3966,
     3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966,    0, 3966,
        0, 3966, 3966,    0,    0, 3966,    0,    0,    0,    0,
        0,    0,    0, 3966, 3966, 3966, 3967, 3967, 3967, 3967,
     3967, 3967, 3967, 3967, 3967, 3967, 3967, 3967, 3967, 3967,
     3967, 3967, 3967, 3967, 3967, 3967, 3967, 3967, 3967, 3967,
     3967, 3967, 3967, 3967, 3967, 3968, 3968, 3968, 3968,    0,
     3968, 3968,    0, 3968, 3968, 3968, 3968, 3968, 3968, 3968,
     3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969,

     3969,    0, 3969,    0, 3969, 3969,    0,    0, 3969,    0,
        0,    0,    0,    0,    0,    0, 3969, 3969, 3969, 3970,
     3970, 3970, 3970, 3970, 3970, 3970, 3970, 3970, 3970, 3970,
        0, 3970,    0, 3970, 3970,    0,    0, 3970,    0,    0,
        0,    0,    0,    0,    0, 3970, 3970, 3970, 3971, 3971,
     3971, 3971, 3971, 3971, 3971, 3971, 3971, 3971, 3971,    0,
     3971,    0, 3971, 3971,    0,    0, 3971,    0,    0,    0,
        0,    0,    0,    0, 3971, 3971, 3971, 3972, 3972, 3972,
     3972, 3972, 3972, 3972, 3972, 3972, 3972, 3972,    0, 3972,
        0, 3972, 3972,    0,    0, 3972,    0,    0,    0,    0,

        0,    0,    0, 3972, 3972, 3972, 3973, 3973, 3973, 3973,
     3973, 3973, 3973, 3973, 3973,    0, 3973, 3973, 3973, 3973,
     3973, 3973, 3973, 3973, 3973, 3973, 3973, 3973, 3973, 3973,
     3973, 3973, 3973, 3973, 3973, 3974, 3974, 3974, 3974, 3974,
     3974, 3974, 3974, 3974,    0, 3974, 3974, 3974, 3974, 3974,
     3974, 3974, 3974, 3974, 3974, 3974, 3974, 3974, 3974, 3974,
     3974, 3974, 3974, 3974, 3975, 3975, 3975, 3975, 3975, 3975,
     3975, 3975, 3975, 3975, 3975,    0, 3975,    0, 3975, 3975,
        0,    0, 3975,    0,    0,    0,    0,    0,    0,    0,
     3975, 3975, 3975, 3976, 3976, 3976, 3976, 3976, 3976, 3976,

     3976, 3976, 3976, 3976, 3976, 3976, 3976, 3976, 3976, 3976,
     3976, 3976, 3976, 3976, 3976, 3976, 3976, 3976, 3976, 3976,
     3976, 3976, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977,
     3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977,
     3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977, 3977,
     3977, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978,
     3978, 3978,    0, 3978,    0, 3978, 3978,    0,    0, 3978,
        0,    0,    0,    0,    0,    0,    0, 3978, 3978, 3978,
     3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979,
     3979,    0, 3979,    0, 3979, 3979,    0,    0, 3979,    0,

        0,    0,    0,    0,    0,    0, 3979, 3979, 3979, 3980,
     3980, 3980, 3980, 3980, 3980, 3980, 3980, 3980, 3980, 3980,
        0, 3980,    0, 3980, 3980,    0,    0, 3980,    0,    0,
        0,    0,    0,    0,    0, 3980, 3980, 3980, 3981, 3981,
     3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981,
     3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981, 3981,
     3981, 3981, 3981, 3981, 3981, 3981, 3981, 3982, 3982, 3982,
     3982, 3982, 3982, 3982, 3982, 3982, 3982, 3982,    0, 3982,
        0, 3982, 3982,    0,    0, 3982,    0,    0,    0,    0,
        0,    0,    0, 3982, 3982, 3982, 3983, 3983, 3983, 3983,

     3983, 3983, 3983, 3983, 3983, 3983, 3983,    0, 3983,    0,
     3983, 3983,    0,    0, 3983,    0,    0,    0,    0, 3983,
        0,    0, 3983, 3983, 3983, 3984, 3984, 3984, 3984, 3984,
     3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984,
     3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984,
     3984, 3984, 3984, 3984, 3985, 3985, 3985, 3985, 3985, 3985,
     3985, 3985, 3985, 3985, 3985,    0, 3985,    0, 3985, 3985,
        0,    0, 3985,    0,    0,    0,    0,    0,    0,    0,
     3985, 3985, 3985, 3986, 3986, 3986, 3986, 3986, 3986, 3986,
     3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986,

     3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986,
     3986, 3986, 3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987,
     3987,    0, 3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987,
     3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987,
     3987, 3988, 3988, 3988, 3988, 3988, 3988, 3988, 3988, 3988,
     3988, 3988,    0, 3988,    0, 3988, 3988,    0,    0, 3988,
        0,    0,    0,    0,    0,    0,    0, 3988, 3988, 3988,
     3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989,
     3989,    0, 3989,    0, 3989, 3989,    0,    0, 3989,    0,
        0,    0,    0,    0,    0,    0, 3989, 3989, 3989, 3990,

     3990, 3990, 3990, 3990, 3990, 3990, 3990, 3990, 3990, 3990,
        0, 3990,    0, 3990, 3990,    0,    0, 3990,    0,    0,
        0,    0,    0,    0,    0, 3990, 3990, 3990, 3991, 3991,
     3991, 3991,    0, 3991, 3991,    0, 3991, 3991, 3991, 3991,
     3991, 3991, 3991, 3992,    0,    0,    0, 3992,    0, 3992,
     3992,    0, 3992, 3992, 3992, 3992, 3992, 3992, 3992, 3993,
     3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993,
     3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993,
     3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3994, 3994,
     3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994,

     3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994,
     3994, 3994, 3994, 3994, 3994, 3994, 3994, 3995, 3995,    0,
        0,    0,    0,    0,    0,    0,    0, 3995, 3995, 3995,
     3995,    0, 3995, 3995,    0, 3995, 3995, 3995, 3995, 3995,
     3995, 3995, 3995, 3996, 3996, 3996, 3996, 3996, 3996, 3996,
     3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996,
     3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996,
     3996, 3996, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997,
     3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997,
     3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997,

     3997, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998,
        0, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998,
     3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3998,
     3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999,
     3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999,
     3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 4000,
     4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000,
     4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000,
     4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4001, 4001,
     4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001,

     4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001, 4001,
     4001, 4001, 4001, 4001, 4001, 4001, 4001, 4002, 4002, 4002,
     4002, 4002, 4002, 4002, 4002, 4002, 4002, 4002,    0, 4002,
        0, 4002, 4002,    0,    0, 4002,    0,    0,    0,    0,
        0,    0,    0, 4002, 4002, 4002, 4003, 4003, 4003, 4003,
     4003, 4003, 4003, 4003, 4003, 4003, 4003, 4003, 4003, 4003,
     4003, 4003, 4003, 4003, 4003, 4003, 4003, 4003, 4003, 4003,
     4003, 4003, 4003, 4003, 4003, 4004, 4004, 4004, 4004, 4004,
     4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004,
     4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004, 4004,

     4004, 4004, 4004, 4004, 4005, 4005, 4005, 4005, 4005, 4005,
     4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005,
     4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005, 4005,
     4005, 4005, 4005, 4006, 4006, 4006, 4006, 4006, 4006, 4006,
     4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006,
     4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006, 4006,
     4006, 4006, 4007, 4007, 4007, 4007, 4007, 4007, 4007, 4007,
     4007, 4007, 4007,    0, 4007,    0, 4007, 4007,    0,    0,
     4007,    0,    0,    0,    0,    0,    0,    0, 4007, 4007,
     4007, 4008, 4008,    0,    0,    0,    0,    0, 4008,    0,

        0, 4008, 4008, 4008, 4008,    0, 4008, 4008,    0, 4008,
     4008, 4008, 4008, 4008, 4008, 4008, 4009, 4009,    0, 4009,
     4009, 4009, 4009, 4009, 4009, 4009, 4010, 4010, 4010, 4010,
     4010, 4010, 4010, 4010, 4010,    0, 4010, 4010, 4010, 4010,
     4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010,
     4010, 4010, 4010, 4010, 4010, 4011, 4011, 4011, 4011, 4011,
     4011, 4011, 4011, 4011,    0, 4011, 4011, 4011, 4011, 4011,
     4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011,
     4011, 4011, 4011, 4011, 4012, 4012, 4012, 4012, 4012, 4012,
     4012, 4012, 4012, 4012, 4012,    0, 4012,    0, 4012, 4012,

        0,    0, 4012,    0,    0,    0,    0,    0,    0,    0,
     4012, 4012, 4012, 4013, 4013, 4013, 4013, 4013, 4013, 4013,
     4013, 4013,    0, 4013, 4013, 4013, 4013, 4013, 4013, 4013,
     4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013,
     4013, 4013, 4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014,
     4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014,
     4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014,
     4014, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
        0, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,

     4016, 4016, 4016, 4016,    0, 4016, 4016,    0, 4016, 4016,
     4016, 4016, 4016, 4016, 4016, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017, 4017, 4017, 4017, 4018, 4018, 4018, 4018, 4018, 4018,
     4018, 4018, 4018, 4018, 4018,    0, 4018,    0, 4018, 4018,
        0,    0, 4018,    0,    0,    0,    0,    0,    0,    0,
     4018, 4018, 4018, 4019, 4019, 4019, 4019, 4019, 4019, 4019,
     4019, 4019, 4019, 4019,    0, 4019,    0, 4019, 4019,    0,
        0, 4019,    0,    0,    0,    0,    0,    0,    0, 4019,

     4019, 4019, 4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,
     4020, 4020, 4020,    0, 4020,    0, 4020, 4020,    0,    0,
     4020,    0,    0,    0,    0,    0,    0,    0, 4020, 4020,
     4020, 4021, 4021, 4021, 4021, 4021, 4021, 4021, 4021, 4021,
     4021, 4021,    0, 4021,    0, 4021, 4021,    0,    0, 4021,
        0,    0,    0,    0,    0,    0,    0, 4021, 4021, 4021,
     4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022,
     4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022,
     4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022, 4022, 4023,
     4023, 4023, 4023, 4023, 4023, 4023, 4023, 4023, 4023, 4023,

        0, 4023,    0, 4023, 4023,    0,    0, 4023,    0,    0,
        0,    0,    0,    0,    0, 4023, 4023, 4023, 4024, 4024,
     4024, 4024, 4024, 4024, 4024, 4024, 4024,    0, 4024, 4024,
     4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024,
     4024, 4024, 4024, 4024, 4024, 4024, 4024, 4025, 4025, 4025,
     4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025,
     4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025, 4025,
     4025, 4025, 4025, 4025, 4025, 4025, 4026, 4026, 4026, 4026,
     4026, 4026, 4026, 4026, 4026, 4026, 4026,    0, 4026,    0,
     4026, 4026,    0,    0, 4026,    0,    0,    0,    0,    0,

        0,    0, 4026, 4026, 4026, 4027, 4027, 4027, 4027, 4027,
     4027, 4027, 4027, 4027, 4027, 4027,    0, 4027,    0, 4027,
     4027,    0,    0, 4027,    0,    0,    0,    0,    0,    0,
        0, 4027, 4027, 4027, 4028, 4028, 4028, 4028, 4028, 4028,
     4028, 4028, 4028, 4028, 4028,    0, 4028,    0, 4028, 4028,
        0,    0, 4028,    0,    0,    0,    0,    0,    0,    0,
     4028, 4028, 4028, 4029, 4029, 4029, 4029, 4029, 4029, 4029,
     4029, 4029,    0, 4029, 4029, 4029, 4029, 4029, 4029, 4029,
     4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029,
     4029, 4029, 4030, 4030, 4030, 4030, 4030, 4030, 4030, 4030,

     4030, 4030, 4030,    0, 4030,    0, 4030, 4030,    0,    0,
     4030,    0,    0,    0,    0,    0,    0,    0, 4030, 4030,
     4030, 4031, 4031, 4031, 4031, 4031, 4031, 4031, 4031, 4031,
     4031, 4031,    0, 4031,    0, 4031, 4031,    0,    0, 4031,
        0,    0,    0,    0,    0,    0,    0, 4031, 4031, 4031,
     4032, 4032, 4032, 4032, 4032, 4032, 4032, 4032, 4032, 4032,
     4032,    0, 4032,    0, 4032, 4032,    0,    0, 4032,    0,
        0,    0,    0,    0,    0,    0, 4032, 4032, 4032, 4033,
     4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033,
     4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033,

     4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033, 4034, 4034,
     4034, 4034, 4034, 4034, 4034, 4034, 4034,    0, 4034, 4034,
     4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034,
     4034, 4034, 4034, 4034, 4034, 4034, 4034, 4035, 4035, 4035,
     4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035,    0, 4035,
        0, 4035, 4035,    0,    0, 4035,    0,    0,    0,    0,
        0,    0,    0, 4035, 4035, 4035, 4036, 4036, 4036, 4036,
     4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036,
     4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036,
     4036, 4036, 4036, 4036, 4036, 4037, 4037, 4037, 4037,    0,

     4037, 4037,    0, 4037, 4037, 4037, 4037, 4037, 4037, 4037,
     4038, 4038,    0,    0,    0,    0,    0, 4038,    0,    0,
        0,    0,    0,    0,    0, 4038, 4038,    0, 4038, 4038,
     4038, 4038, 4038, 4038, 4038, 4038, 4039,    0,    0,    0,
     4039,    0, 4039, 4039,    0, 4039, 4039, 4039, 4039, 4039,
     4039, 4039, 4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040,
     4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040,
     4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040,
     4040, 4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041,
        0, 4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041,

     4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041,
     4042, 4042,    0,    0,    0,    0,    0,    0,    0,    0,
     4042, 4042, 4042, 4042,    0, 4042, 4042,    0, 4042, 4042,
     4042, 4042, 4042, 4042, 4042, 4042, 4043, 4043,    0, 4043,
     4043, 4043, 4043, 4043, 4043, 4043, 4044, 4044, 4044, 4044,
     4044, 4044, 4044, 4044, 4044, 4044, 4044, 4044, 4044, 4044,
     4044, 4044, 4044, 4044, 4044, 4044, 4044, 4044, 4044, 4044,
     4044, 4044, 4044, 4044, 4044, 4045, 4045, 4045, 4045, 4045,
     4045, 4045, 4045, 4045,    0, 4045, 4045, 4045, 4045, 4045,
     4045, 4045, 4045, 4045, 4045, 4045, 4045, 4045, 4045, 4045,

     4045, 4045, 4045, 4045, 4046, 4046, 4046, 4046, 4046, 4046,
     4046, 4046, 4046,    0, 4046, 4046, 4046, 4046, 4046, 4046,
     4046, 4046, 4046, 4046, 4046, 4046, 4046, 4046, 4046, 4046,
     4046, 4046, 4046, 4047, 4047, 4047, 4047, 4047, 4047, 4047,
     4047, 4047,    0, 4047, 4047, 4047, 4047, 4047, 4047, 4047,
     4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047,
     4047, 4047, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048,
     4048,    0, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048,
     4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048,
     4048, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049,

        0, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049,
     4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049,
     4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050,
     4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050,
     4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4051,
     4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051,
     4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051,
     4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051, 4052, 4052,
     4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052,
     4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052,

     4052, 4052, 4052, 4052, 4052, 4052, 4052, 4053, 4053, 4053,
     4053, 4053, 4053, 4053, 4053, 4053,    0, 4053, 4053, 4053,
     4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053,
     4053, 4053, 4053, 4053, 4053, 4053, 4054, 4054, 4054, 4054,
     4054, 4054, 4054, 4054, 4054, 4054, 4054, 4054, 4054, 4054,
     4054, 4054, 4054, 4054, 4054, 4054, 4054, 4054, 4054, 4054,
     4054, 4054, 4054, 4054, 4054, 4055, 4055, 4055, 4055,    0,
     4055, 4055,    0, 4055, 4055, 4055, 4055, 4055, 4055, 4055,
     4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056,
     4056,    0, 4056,    0, 4056, 4056,    0,    0, 4056,    0,

        0,    0,    0,    0,    0,    0, 4056, 4056, 4056, 4057,
     4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057,
     4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057,
     4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057, 4058, 4058,
        0, 4058, 4058, 4058, 4058, 4058, 4058, 4058, 4059, 4059,
     4059, 4059, 4059, 4059, 4059, 4059, 4059,    0, 4059, 4059,
     4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059,
     4059, 4059, 4059, 4059, 4059, 4059, 4059, 4060, 4060, 4060,
     4060,    0, 4060, 4060,    0, 4060, 4060, 4060, 4060, 4060,
     4060, 4060, 4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061,

     4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061,
     4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061,
     4061, 4062, 4062, 4062, 4062, 4062, 4062, 4062, 4062, 4062,
     4062, 4062,    0, 4062,    0, 4062, 4062,    0,    0, 4062,
        0,    0,    0,    0,    0,    0,    0, 4062, 4062, 4062,
     4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063,
     4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063,
     4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4063, 4064,
     4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064,
     4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064,

     4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4065, 4065,
     4065, 4065, 4065, 4065, 4065, 4065, 4065, 4065, 4065,    0,
     4065,    0, 4065, 4065,    0,    0, 4065,    0,    0,    0,
        0,    0,    0,    0, 4065, 4065, 4065, 4066, 4066, 4066,
     4066, 4066, 4066, 4066, 4066, 4066,    0, 4066, 4066, 4066,
     4066, 4066, 4066, 4066, 4066, 4066, 4066, 4066, 4066, 4066,
     4066, 4066, 4066, 4066, 4066, 4066, 4067, 4067, 4067, 4067,
     4067, 4067, 4067, 4067, 4067, 4067, 4067,    0, 4067,    0,
     4067, 4067,    0,    0, 4067,    0,    0,    0,    0,    0,
        0,    0, 4067, 4067, 4067, 4068, 4068, 4068, 4068, 4068,

     4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068,
     4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068,
     4068, 4068, 4068, 4068, 4069, 4069, 4069, 4069, 4069, 4069,
     4069, 4069, 4069,    0, 4069, 4069, 4069, 4069, 4069, 4069,
     4069, 4069, 4069, 4069, 4069, 4069, 4069, 4069, 4069, 4069,
     4069, 4069, 4069, 4070, 4070, 4070, 4070, 4070, 4070, 4070,
     4070, 4070, 4070, 4070, 4070, 4070, 4070, 4070, 4070, 4070,
     4070, 4070, 4070, 4070, 4070, 4070, 4070, 4070, 4070, 4070,
     4070, 4070, 4071, 4071,    0,    0,    0,    0,    0,    0,
        0,    0, 4071, 4071, 4071, 4071,    0, 4071, 4071,    0,

     4071, 4071, 4071, 4071, 4071, 4071, 4071, 4071, 4072, 4072,
     4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072,
     4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072, 4072,
     4072, 4072, 4072, 4072, 4072, 4072, 4072, 4073, 4073, 4073,
     4073, 4073, 4073, 4073, 4073, 4073,    0, 4073, 4073, 4073,
     4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073,
     4073, 4073, 4073, 4073, 4073, 4073, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074, 4074,    0, 4074,    0,
     4074, 4074,    0,    0, 4074,    0,    0,    0,    0, 4074,
        0,    0, 4074, 4074, 4074, 4075, 4075, 4075, 4075, 4075,

     4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075,
     4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075,
     4075, 4075, 4075, 4075, 4076, 4076,    0,    0,    0,    0,
        0,    0,    0,    0, 4076, 4076, 4076,    0,    0, 4076,
     4076,    0, 4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076,
     4077, 4077,    0,    0,    0,    0,    0, 4077,    0,    0,
        0,    0,    0,    0,    0, 4077, 4077,    0, 4077, 4077,
     4077, 4077, 4077, 4077, 4077, 4078, 4078, 4078, 4078, 4078,
     4078, 4078, 4078, 4078,    0, 4078, 4078, 4078, 4078, 4078,
     4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078,

     4078, 4078, 4078, 4078, 4079, 4079, 4079, 4079, 4079, 4079,
     4079, 4079, 4079, 4079, 4079,    0, 4079,    0, 4079, 4079,
        0,    0, 4079,    0,    0,    0,    0, 4079,    0,    0,
     4079, 4079, 4079, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080,    0, 4080,    0, 4080, 4080,    0,
        0, 4080,    0,    0,    0,    0,    0,    0,    0, 4080,
     4080, 4080, 4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081,
     4081,    0, 4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081,
     4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081,
     4081, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,

     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083,
     4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083,
     4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4084,
     4084, 4084, 4084, 4084, 4084, 4084, 4084, 4084,    0, 4084,
     4084, 4084, 4084, 4084, 4084, 4084, 4084, 4084, 4084, 4084,
     4084, 4084, 4084, 4084, 4084, 4084, 4084, 4084, 4085, 4085,
     4085, 4085, 4085, 4085, 4085, 4085, 4085, 4085, 4085,    0,
     4085,    0, 4085, 4085,    0,    0, 4085,    0,    0,    0,

        0,    0,    0,    0, 4085, 4085, 4085, 4086, 4086, 4086,
     4086, 4086, 4086, 4086, 4086, 4086, 4086, 4086, 4086, 4086,
     4086, 4086, 4086, 4086, 4086, 4086, 4086, 4086, 4086, 4086,
     4086, 4086, 4086, 4086, 4086, 4086, 4087, 4087, 4087, 4087,
        0, 4087, 4087,    0, 4087, 4087, 4087, 4087, 4087, 4087,
     4087, 4088, 4088, 4088, 4088, 4088, 4088, 4088, 4088, 4088,
     4088, 4088,    0, 4088,    0, 4088, 4088,    0,    0, 4088,
        0,    0,    0,    0,    0,    0,    0, 4088, 4088, 4088,
     4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089,
     4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089,

     4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4090,
     4090, 4090, 4090,    0, 4090, 4090,    0, 4090, 4090, 4090,
     4090, 4090, 4090, 4090, 4091, 4091, 4091, 4091, 4091, 4091,
     4091, 4091, 4091,    0, 4091, 4091, 4091, 4091, 4091, 4091,
     4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091,
     4091, 4091, 4091, 4092, 4092, 4092, 4092, 4092, 4092, 4092,
     4092, 4092, 4092, 4092,    0, 4092,    0, 4092, 4092,    0,
        0, 4092,    0,    0,    0,    0,    0,    0,    0, 4092,
     4092, 4092, 4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093,
     4093, 4093, 4093,    0, 4093,    0, 4093, 4093,    0,    0,

     4093,    0,    0,    0,    0,    0,    0,    0, 4093, 4093,
     4093, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094,
     4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094,
     4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094,
     4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095,    0,
     4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095,
     4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4095, 4096,
     4096, 4096, 4096, 4096, 4096, 4096, 4096, 4096, 4096, 4096,
        0, 4096,    0, 4096, 4096,    0,    0, 4096,    0,    0,
        0,    0,    0,    0,    0, 4096, 4096, 4096, 4097, 4097,

     4097, 4097, 4097, 4097, 4097, 4097, 4097, 4097, 4097,    0,
     4097,    0, 4097, 4097,    0,    0, 4097,    0,    0,    0,
        0,    0,    0,    0, 4097, 4097, 4097, 4098, 4098, 4098,
     4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098,
     4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098,
     4098, 4098, 4098, 4098, 4098, 4098, 4099, 4099, 4099, 4099,
     4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099,
     4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099,
     4099, 4099, 4099, 4099, 4099, 4100, 4100, 4100, 4100, 4100,
     4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100,

     4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100,
     4100, 4100, 4100, 4100, 4101, 4101, 4101, 4101, 4101, 4101,
     4101, 4101, 4101,    0, 4101, 4101, 4101, 4101, 4101, 4101,
     4101, 4101, 4101, 4101, 4101, 4101, 4101, 4101, 4101, 4101,
     4101, 4101, 4101, 4102, 4102,    0,    0,    0,    0,    0,
        0,    0,    0, 4102, 4102, 4102, 4102,    0, 4102, 4102,
        0, 4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102, 4103,
     4103,    0, 4103, 4103, 4103, 4103, 4103, 4103, 4103, 4104,
     4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104,
     4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104,

     4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4105, 4105,
     4105, 4105, 4105, 4105, 4105, 4105, 4105, 4105, 4105,    0,
     4105,    0, 4105, 4105,    0,    0, 4105,    0,    0,    0,
        0,    0,    0,    0, 4105, 4105, 4105, 4106, 4106, 4106,
     4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106,
     4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106,
     4106, 4106, 4106, 4106, 4106, 4106, 4107, 4107, 4107, 4107,
     4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107,
     4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107,
     4107, 4107, 4107, 4107, 4107, 4108, 4108,    0,    0,    0,

        0,    0,    0,    0,    0, 4108, 4108, 4108,    0,    0,
     4108, 4108,    0, 4108, 4108, 4108, 4108, 4108, 4108, 4108,
     4108, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109,
     4109, 4109,    0, 4109,    0, 4109, 4109,    0,    0, 4109,
        0,    0,    0,    0,    0,    0,    0, 4109, 4109, 4109,
     4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110,
     4110,    0, 4110,    0, 4110, 4110,    0,    0, 4110,    0,
        0,    0,    0,    0,    0,    0, 4110, 4110, 4110, 4111,
     4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111,    0, 4111,
     4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111,

     4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111, 4112, 4112,
     4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112,
     4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112,
     4112, 4112, 4112, 4112, 4112, 4112, 4112, 4113, 4113, 4113,
     4113, 4113, 4113, 4113, 4113, 4113,    0, 4113, 4113, 4113,
     4113, 4113, 4113, 4113, 4113, 4113, 4113, 4113, 4113, 4113,
     4113, 4113, 4113, 4113, 4113, 4113, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4114, 4114, 4114, 4114, 4114, 4115, 4115, 4115, 4115, 4115,

     4115, 4115, 4115, 4115, 4115, 4115,    0, 4115,    0, 4115,
     4115,    0,    0, 4115,    0,    0,    0,    0,    0,    0,
        0, 4115, 4115, 4115, 4116, 4116,    0,    0,    0,    0,
        0,    0,    0,    0, 4116, 4116, 4116,    0,    0, 4116,
     4116,    0, 4116, 4116, 4116, 4116, 4116, 4116, 4116, 4116,
     4117, 4117,    0,    0,    0,    0,    0, 4117,    0,    0,
        0,    0,    0,    0,    0, 4117, 4117,    0, 4117, 4117,
     4117, 4117, 4117, 4117, 4117, 4118, 4118, 4118, 4118, 4118,
     4118, 4118, 4118, 4118, 4118, 4118,    0, 4118,    0, 4118,
     4118,    0,    0, 4118,    0,    0,    0,    0,    0,    0,

        0, 4118, 4118, 4118, 4119, 4119, 4119, 4119, 4119, 4119,
     4119, 4119, 4119, 4119, 4119,    0, 4119,    0, 4119, 4119,
        0,    0, 4119,    0,    0,    0,    0,    0,    0,    0,
     4119, 4119, 4119, 4120,    0,    0,    0,    0,    0, 4120,
     4120,    0, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4121,
     4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121,
        0, 4121,    0, 4121, 4121,    0,    0, 4121,    0,    0,
        0,    0,    0,    0,    0, 4121, 4121, 4121, 4122, 4122,
     4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122,    0,
     4122,    0, 4122, 4122,    0,    0, 4122,    0,    0,    0,

        0,    0,    0,    0, 4122, 4122, 4122, 4123, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4123, 4123,    0, 4123,
        0, 4123, 4123,    0,    0, 4123,    0,    0,    0,    0,
        0,    0,    0, 4123, 4123, 4123, 4124, 4124, 4124, 4124,
     4124, 4124, 4124, 4124, 4124, 4124, 4124,    0, 4124,    0,
     4124, 4124,    0,    0, 4124,    0,    0,    0,    0,    0,
        0,    0, 4124, 4124, 4124, 4125, 4125, 4125, 4125, 4125,
     4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125,
     4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125,
     4125, 4125, 4125, 4125, 4126, 4126, 4126, 4126, 4126, 4126,

     4126, 4126, 4126, 4126, 4126,    0, 4126,    0, 4126, 4126,
        0,    0, 4126,    0,    0,    0,    0,    0,    0,    0,
     4126, 4126, 4126, 4127, 4127, 4127, 4127, 4127, 4127, 4127,
     4127, 4127, 4127, 4127,    0, 4127,    0, 4127, 4127,    0,
        0, 4127,    0,    0,    0,    0,    0,    0,    0, 4127,
     4127, 4127, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128,
     4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128,
     4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128,
     4128, 4129, 4129, 4129, 4129, 4129, 4129, 4129, 4129, 4129,
     4129, 4129,    0, 4129,    0, 4129, 4129,    0,    0, 4129,

        0,    0,    0,    0,    0,    0,    0, 4129, 4129, 4129,
     4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130,
     4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130,
     4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4131,
     4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131,
        0, 4131,    0, 4131, 4131,    0,    0, 4131,    0,    0,
        0,    0,    0,    0,    0, 4131, 4131, 4131, 4132, 4132,
     4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132,    0,
     4132,    0, 4132, 4132,    0,    0, 4132,    0,    0,    0,
        0,    0,    0,    0, 4132, 4132, 4132, 4133, 4133, 4133,

     4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133,    0, 4133,
        0, 4133, 4133,    0,    0, 4133,    0,    0,    0,    0,
        0,    0,    0, 4133, 4133, 4133, 4134, 4134, 4134, 4134,
     4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134,
     4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134,
     4134, 4134, 4134, 4134, 4134, 4135, 4135, 4135, 4135, 4135,
     4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135,
     4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135,
     4135, 4135, 4135, 4135, 4136, 4136, 4136, 4136, 4136, 4136,
     4136, 4136, 4136, 4136, 4136,    0, 4136,    0, 4136, 4136,

        0,    0, 4136,    0,    0,    0,    0,    0,    0,    0,
     4136, 4136, 4136, 4137, 4137, 4137, 4137, 4137, 4137, 4137,
     4137, 4137, 4137, 4137,    0, 4137,    0, 4137, 4137,    0,
        0, 4137,    0,    0,    0,    0,    0,    0,    0, 4137,
     4137, 4137, 4138, 4138, 4138, 4138, 4138, 4138, 4138, 4138,
     4138, 4138, 4138, 4138, 4138, 4138, 4138, 4138, 4138, 4138,
     4138, 4138, 4138, 4138, 4138, 4138, 4138, 4138, 4138, 4138,
     4138, 4139, 4139, 4139, 4139, 4139, 4139, 4139, 4139, 4139,
     4139, 4139, 4139, 4139, 4139, 4139, 4139, 4139, 4139, 4139,
     4139, 4139, 4139, 4139, 4139, 4139, 4139, 4139, 4139, 4139,

     4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140,
     4140,    0, 4140,    0, 4140, 4140,    0,    0, 4140,    0,
        0,    0,    0,    0,    0,    0, 4140, 4140, 4140, 4141,
     4141, 4141, 4141, 4141, 4141, 4141, 4141, 4141, 4141, 4141,
        0, 4141,    0, 4141, 4141,    0,    0, 4141,    0,    0,
        0,    0,    0,    0,    0, 4141, 4141, 4141, 4142, 4142,
     4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142,    0,
     4142,    0, 4142, 4142,    0,    0, 4142,    0,    0,    0,
        0,    0,    0,    0, 4142, 4142, 4142, 4143, 4143, 4143,
     4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143,    0, 4143,

        0, 4143, 4143,    0,    0, 4143,    0,    0,    0,    0,
        0,    0,    0, 4143, 4143, 4143, 4144, 4144, 4144, 4144,
     4144, 4144, 4144, 4144, 4144, 4144, 4144,    0, 4144,    0,
     4144, 4144,    0,    0, 4144,    0,    0,    0,    0,    0,
        0,    0, 4144, 4144, 4144, 4145, 4145, 4145, 4145, 4145,
     4145, 4145, 4145, 4145, 4145, 4145,    0, 4145,    0, 4145,
     4145,    0,    0, 4145,    0,    0,    0,    0,    0,    0,
        0, 4145, 4145, 4145, 4146, 4146, 4146, 4146, 4146, 4146,
     4146, 4146, 4146, 4146, 4146,    0, 4146,    0, 4146, 4146,
        0,    0, 4146,    0,    0,    0,    0,    0,    0,    0,

     4146, 4146, 4146, 4147, 4147, 4147, 4147, 4147, 4147, 4147,
     4147, 4147, 4147, 4147,    0, 4147,    0, 4147, 4147,    0,
        0, 4147,    0,    0,    0,    0,    0,    0,    0, 4147,
     4147, 4147, 4148, 4148, 4148, 4148, 4148, 4148, 4148, 4148,
     4148, 4148, 4148,    0, 4148,    0, 4148, 4148,    0,    0,
     4148,    0,    0,    0,    0,    0,    0,    0, 4148, 4148,
     4148, 4149, 4149, 4149, 4149, 4149, 4149, 4149, 4149, 4149,
     4149, 4149,    0, 4149,    0, 4149, 4149,    0,    0, 4149,
        0,    0,    0,    0,    0,    0,    0, 4149, 4149, 4149,
     4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150,

     4150,    0, 4150,    0, 4150, 4150,    0,    0, 4150,    0,
        0,    0,    0,    0,    0,    0, 4150, 4150, 4150, 4151,
     4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151, 4151,
        0, 4151,    0, 4151, 4151,    0,    0, 4151,    0,    0,
        0,    0,    0,    0,    0, 4151, 4151, 4151, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152, 4152,
     4152, 4152, 4152, 4152, 4152, 4152, 4152, 4153, 4153, 4153,
     4153, 4153, 4153, 4153, 4153, 4153, 4153, 4153,    0, 4153,
        0, 4153, 4153,    0,    0, 4153,    0,    0,    0,    0,

        0,    0,    0, 4153, 4153, 4153, 4154, 4154, 4154, 4154,
     4154, 4154, 4154, 4154, 4154, 4154, 4154,    0, 4154,    0,
     4154, 4154,    0,    0, 4154,    0,    0,    0,    0,    0,
        0,    0, 4154, 4154, 4154, 4155, 4155, 4155, 4155, 4155,
     4155, 4155, 4155, 4155, 4155, 4155,    0, 4155,    0, 4155,
     4155,    0,    0, 4155,    0,    0,    0,    0,    0,    0,
        0, 4155, 4155, 4155, 4156, 4156, 4156, 4156, 4156, 4156,
     4156, 4156, 4156, 4156, 4156,    0, 4156,    0, 4156, 4156,
        0,    0, 4156,    0,    0,    0,    0,    0,    0,    0,
     4156, 4156, 4156, 4157, 4157, 4157, 4157, 4157, 4157, 4157,

     4157, 4157, 4157, 4157,    0, 4157,    0, 4157, 4157,    0,
        0, 4157,    0,    0,    0,    0,    0,    0,    0, 4157,
     4157, 4157, 4158,    0,    0,    0, 4158,    0, 4158, 4158,
        0, 4158, 4158, 4158, 4158, 4158, 4158, 4158, 4159, 4159,
     4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159,
     4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159,
     4159, 4159, 4159, 4159, 4159, 4159, 4159, 4160, 4160, 4160,
     4160, 4160, 4160, 4160, 4160, 4160, 4160, 4160,    0, 4160,
        0, 4160, 4160,    0,    0, 4160,    0,    0,    0,    0,
        0,    0,    0, 4160, 4160, 4160, 4161, 4161, 4161, 4161,

     4161, 4161, 4161, 4161, 4161, 4161, 4161,    0, 4161,    0,
     4161, 4161,    0,    0, 4161,    0,    0,    0,    0,    0,
        0,    0, 4161, 4161, 4161, 4162, 4162, 4162, 4162, 4162,
     4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162,
     4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162, 4162,
     4162, 4162, 4162, 4162, 4163, 4163, 4163, 4163, 4163, 4163,
     4163, 4163, 4163, 4163, 4163,    0, 4163,    0, 4163, 4163,
        0,    0, 4163,    0,    0,    0,    0,    0,    0,    0,
     4163, 4163, 4163, 4164, 4164, 4164, 4164, 4164, 4164, 4164,
     4164, 4164, 4164, 4164,    0, 4164,    0, 4164, 4164,    0,

        0, 4164,    0,    0,    0,    0,    0,    0,    0, 4164,
     4164, 4164, 4165, 4165, 4165, 4165, 4165, 4165, 4165, 4165,
     4165, 4165, 4165, 4165, 4165, 4165, 4165, 4165, 4165, 4165,
     4165, 4165, 4165, 4165, 4165, 4165, 4165, 4165, 4165, 4165,
     4165, 4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166,
     4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166,
     4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166,
     4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167,
     4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167,
     4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4168,

     4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168,
     4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168,
     4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4169, 4169,
     4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169,
     4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169,
     4169, 4169, 4169, 4169, 4169, 4169, 4169, 4170, 4170, 4170,
     4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170,    0, 4170,
        0, 4170, 4170,    0,    0, 4170,    0,    0,    0,    0,
        0,    0,    0, 4170, 4170, 4170, 4171, 4171, 4171, 4171,
     4171, 4171, 4171, 4171, 4171, 4171, 4171,    0, 4171,    0,

     4171, 4171,    0,    0, 4171,    0,    0,    0,    0,    0,
        0,    0, 4171, 4171, 4171, 4172, 4172, 4172, 4172, 4172,
     4172, 4172, 4172, 4172, 4172, 4172,    0, 4172,    0, 4172,
     4172,    0,    0, 4172,    0,    0,    0,    0,    0,    0,
        0, 4172, 4172, 4172, 4173, 4173, 4173, 4173, 4173, 4173,
     4173, 4173, 4173, 4173, 4173,    0, 4173,    0, 4173, 4173,
        0,    0, 4173,    0,    0,    0,    0,    0,    0,    0,
     4173, 4173, 4173, 4174, 4174, 4174, 4174, 4174, 4174, 4174,
     4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174,
     4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174, 4174,

     4174, 4174, 4175, 4175, 4175, 4175, 4175, 4175, 4175, 4175,
     4175, 4175, 4175,    0, 4175,    0, 4175, 4175,    0,    0,
     4175,    0,    0,    0,    0,    0,    0,    0, 4175, 4175,
     4175, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
     4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
     4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
     4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177,
     4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177,
     4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4178,
     4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178,

        0, 4178,    0, 4178, 4178,    0,    0, 4178,    0,    0,
        0,    0,    0,    0,    0, 4178, 4178, 4178, 4179, 4179,
     4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179,    0,
     4179,    0, 4179, 4179,    0,    0, 4179,    0,    0,    0,
        0,    0,    0,    0, 4179, 4179, 4179, 4180, 4180, 4180,
     4180, 4180, 4180, 4180, 4180, 4180, 4180, 4180, 4180, 4180,
     4180, 4180, 4180, 4180, 4180, 4180, 4180, 4180, 4180, 4180,
     4180, 4180, 4180, 4180, 4180, 4180, 4181, 4181, 4181, 4181,
     4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181,
     4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181,

     4181, 4181, 4181, 4181, 4181, 4182, 4182, 4182, 4182, 4182,
     4182, 4182, 4182, 4182, 4182, 4182,    0, 4182,    0, 4182,
     4182,    0,    0, 4182,    0,    0,    0,    0,    0,    0,
        0, 4182, 4182, 4182, 4183, 4183, 4183, 4183, 4183, 4183,
     4183, 4183, 4183, 4183, 4183,    0, 4183,    0, 4183, 4183,
        0,    0, 4183,    0,    0,    0,    0,    0,    0,    0,
     4183, 4183, 4183, 4184, 4184, 4184, 4184, 4184, 4184, 4184,
     4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184,
     4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184, 4184,
     4184, 4184, 4185, 4185, 4185, 4185, 4185, 4185, 4185, 4185,

     4185, 4185, 4185,    0, 4185,    0, 4185, 4185,    0,    0,
     4185,    0,    0,    0,    0,    0,    0,    0, 4185, 4185,
     4185, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186,
     4186, 4186,    0, 4186,    0, 4186, 4186,    0,    0, 4186,
        0,    0,    0,    0,    0,    0,    0, 4186, 4186, 4186,
     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187,
     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187,
     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4188,
     4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188,
     4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188,

     4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188, 4189, 4189,
     4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189,
     4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189,
     4189, 4189, 4189, 4189, 4189, 4189, 4189, 4190, 4190, 4190,
     4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190,
     4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190,
     4190, 4190, 4190, 4190, 4190, 4190, 4191, 4191, 4191, 4191,
     4191, 4191, 4191, 4191, 4191, 4191, 4191, 4191, 4191, 4191,
     4191, 4191, 4191, 4191, 4191, 4191, 4191, 4191, 4191, 4191,
     4191, 4191, 4191, 4191, 4191, 4192, 4192, 4192, 4192, 4192,

     4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192,
     4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192,
     4192, 4192, 4192, 4192, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608, 3608,
     3608, 3608, 3608, 3608, 3608

    } ;

/* Table of booleans, true if rule could match eol. */
static yyconst flex_int32_t yy_rule_can_match_eol[498] =
    {   0,
0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 
    0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 
    1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 
    1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 
    1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 
    1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 
    0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
    0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 
    0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 
    0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 
    0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 
    0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 
    1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 
    0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 
    0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
    0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 
    0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,     };

static yyconst flex_int16_t yy_rule_linenum[497] =
    {   0,
      295,  296,  315,  320,  325,  329,  334,  339,  344,  349,
      354,  361,  367,  372,  376,  380,  385,  390,  395,  398,
      401,  404,  411,  416,  421,  426,  431,  436,  441,  446,
      454,  465,  468,  471,  474,  477,  480,  483,  486,  489,
      492,  495,  498,  501,  504,  507,  510,  513,  516,  524,
      527,  533,  536,  542,  545,  551,  556,  561,  566,  571,
      576,  581,  586,  591,  596,  604,  609,  614,  619,  627,
      632,  637,  642,  647,  655,  660,  665,  670,  675,  680,
      689,  697,  705,  711,  716,  724,  732,  739,  747,  755,
      763,  771,  781,  792,  800,  804,  808,  812,  816,  820,

      824,  830,  834,  838,  842,  846,  850,  857,  867,  872,
      880,  885,  890,  895,  900,  913,  916,  919,  922,  925,
      928,  931,  934,  937,  940,  943,  946,  949,  952,  955,
      958,  961,  964,  967,  970,  973,  976,  979,  982,  985,
      988,  991,  994,  997, 1000, 1003, 1006, 1009, 1012, 1015,
     1018, 1021, 1024, 1027, 1030, 1033, 1036, 1039, 1042, 1045,
     1048, 1051, 1054, 1057, 1060, 1064, 1069, 1085, 1090, 1094,
     1112, 1117, 1137, 1142, 1147, 1166, 1170, 1175, 1179, 1183,
     1187, 1191, 1195, 1204, 1210, 1214, 1218, 1222, 1226, 1230,
     1234, 1238, 1242, 1246, 1250, 1254, 1258, 1262, 1266, 1270,

     1277, 1281, 1285, 1289, 1293, 1297, 1301, 1305, 1309, 1313,
     1317, 1321, 1325, 1329, 1333, 1337, 1341, 1345, 1349, 1353,
     1357, 1361, 1365, 1369, 1373, 1383, 1387, 1395, 1399, 1403,
     1407, 1423, 1427, 1431, 1435, 1443, 1450, 1458, 1466, 1469,
     1472, 1475, 1478, 1481, 1484, 1487, 1490, 1503, 1508, 1512,
     1516, 1520, 1524, 1528, 1532, 1536, 1540, 1544, 1548, 1556,
     1559, 1562, 1565, 1568, 1571, 1574, 1577, 1580, 1583, 1586,
     1589, 1592, 1595, 1598, 1601, 1604, 1607, 1610, 1613, 1616,
     1619, 1622, 1625, 1628, 1631, 1634, 1637, 1640, 1643, 1646,
     1649, 1652, 1655, 1658, 1661, 1664, 1667, 1670, 1673, 1678,

     1682, 1701, 1708, 1712, 1716, 1737, 1741, 1748, 1752, 1756,
     1760, 1764, 1768, 1772, 1789, 1810, 1815, 1822, 1827, 1834,
     1841, 1845, 1849, 1853, 1857, 1861, 1883, 1888, 1895, 1899,
     1903, 1924, 1931, 1935, 1939, 1958, 1962, 1970, 1975, 1982,
     1988, 1993, 1998, 2003, 2008, 2013, 2018, 2023, 2030, 2035,
     2042, 2049, 2054, 2059, 2066, 2075, 2080, 2085, 2090, 2095,
     2100, 2105, 2110, 2115, 2120, 2125, 2130, 2135, 2140, 2145,
     2150, 2155, 2160, 2165, 2170, 2175, 2180, 2185, 2190, 2195,
     2200, 2205, 2210, 2215, 2220, 2225, 2230, 2235, 2240, 2245,
     2250, 2255, 2260, 2267, 2272, 2279, 2283, 2287, 2291, 2295,

     2300, 2306, 2310, 2330, 2337, 2342, 2349, 2355, 2362, 2367,
     2374, 2378, 2398, 2406, 2412, 2416, 2420, 2424, 2444, 2451,
     2458, 2465, 2471, 2475, 2479, 2507, 2512, 2517, 2524, 2530,
     2535, 2557, 2562, 2566, 2588, 2593, 2598, 2602, 2623, 2628,
     2650, 2657, 2661, 2665, 2689, 2696, 2703, 2710, 2717, 2724,
     2728, 2732, 2759, 2766, 2773, 2780, 2787, 2794, 2801, 2805,
     2809, 2813, 2817, 2823, 2844, 2851, 2857, 2878, 2885, 2889,
     2910, 2916, 2920, 2945, 2952, 2959, 2981, 3003, 3010, 3037,
     3044, 3051, 3055, 3059, 3063, 3067, 3071, 3093, 3100, 3107,
     3111, 3115, 3119, 3123, 3127, 3134

    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() ((yy_more_flag) = 1)
#define YY_MORE_ADJ (yy_more_len)
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
/* -*- mode: c++; indent-tabs-mode: nil; tab-width: 2 -*-
 *
 *  $Id: xquery.l,v 1.4 2006/11/14 05:24:43 Paul Pedersen Exp $
 *
 */
/*______________________________________________________________________
 |
 |  An implementation of the w3c proposal:
 |
 |  "Building a Tokenizer for XPath or XQuery,
 |   W3C Working Draft 4 April 2005"
 |
 |  [http://www.w3.org/TR/xquery-xpath-parsing/]
 |
 |  Extensions including update, search, and XQueryP:
 |
 |  [http://www.w3.org/TR/xqupdate/]
 |  [http://www.w3.org/TR/xquery-full-text/]
 |  [http://www.ximep-2006.org/papers/Paper-Chamberlin-Carey.pdf]
 |
 |_______________________________________________________________________*/
#line 26 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"

#if defined (WIN32)
#pragma warning(disable: 4786)
#endif

#include "zorbatypes/representations.h"

#include "common/common.h"
#include "util/properties.h"

#include <cstdlib>
#include <errno.h>
#include <limits.h>
#include <iostream>
#include <string>

#include "compiler/parser/xquery_parser.hpp"
#include "compiler/parser/xquery_scanner.h"
#include "compiler/parser/xquery_driver.h"

typedef zorba::xquery_parser::token token;
typedef zorba::xquery_parser::token_type token_type;

#define PUSH_BEGIN( pushed, new ) BEGIN new; yy_push_state (pushed);

#define TRY_SVAL_TOKEN( ttype, put )                                    \
  do {                                                                  \
    off_t res = getDriver()->symtab.put;                                \
    if (res < 0) return token::UNRECOGNIZED;                            \
    else {                                                              \
      yylval->sval = res;                                               \
      return token::ttype;                                              \
    }                                                                   \
  } while (0)

#define TRY_STR_LIT( ttype, put, yytext, yyleng ) \
  TRY_SVAL_TOKEN (ttype, put (yytext, yyleng))

#define TRY_STRINGLIT( ttype, yytext, yyleng ) \
  TRY_STR_LIT (ttype, put_stringlit, yytext, yyleng)

#define TRY_URILIT( ttype, yytext, yyleng ) \
  TRY_STR_LIT (ttype, put_uri, yytext, yyleng)

/*
  Work around an incompatibility in flex (at least versions
  2.5.31 through 2.5.33): it generates code that does
  not conform to C89.  See Debian bug 333231
  <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=333231>.
*/
#undef yywrap
#define yywrap() 1

/*
  By default yylex returns int, we use token_type.
  Unfortunately yyterminate by default returns 0, which is
  not of token_type.
*/
#define yyterminate() return token::END

std::string start_state(int);

#define YY_USER_ACTION \
{ \
  if (yy_flex_debug) { \
    std::cout<<'<'<<start_state(YY_START)<<">" /* << " "<<yytext<<"" */ << std::endl; \
    yylloc->columns(yyleng); \
  } \
}


/*______________________________________________________________________
*                                                                      *
*  Scanner options                                                     *
*______________________________________________________________________*/
/* %option case-insensitive */
/* %option nostdinit */
/* %option reentrant */
#define YY_NO_UNISTD_H 1
/* known expensive option */
/*_____________________________________________________________________
|
|  Whitespace definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Basic character classes
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  XQuery allows '' to escape ', and "" to escape ".
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  NCName definition
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  QName definition
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  VarName definition
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Entity definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Numeric literal definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  String literal definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Content character definitions
|______________________________________________________________________*/
/*
NonXChar  [\x09\x0A\x0D\x20A-WY-Za-wy-z\x7B-\xFD]
NonMChar  [\x09\x0A\x0D\x20A-LN-Za-ln-z\x7B-\xFD]
NonLChar  [\x09\x0A\x0D\x20A-KM-Za-km-z\x7B-\xFD]
PITarget  (({NonXChar}{Char}*)|((X|x){NonMChar}{Char}*)|((X|x)(M|m){NonLChar}*)|({Char}{Char}{Char}{Char}+))
*/
/*______________________________________________________________________
|
|  Exclusive start states
|______________________________________________________________________*/




























/* Update Modes */

/* Try-Catch Modes */

/*
  The macro YY_USER_ACTION can be defined to provide an action which is
  always executed prior to the matched rule's action.

  The following paragraph suffices to track locations accurately. Each
  time yylex is invoked, the begin position is moved onto the end
  position. Then when a pattern is matched, the end position is advanced
  of its width. In case it matched ends of lines, the end cursor is
  adjusted, and each time blanks are matched, the begin cursor is moved
  onto the end cursor to effectively ignore the blanks preceding tokens.
  Comments would be treated equally.
*/
#line 7114 "xquery_scanner.yy.cpp"

#define INITIAL 0
#define MODE_APOS_ATTRIBUTE_CONTENT 1
#define MODE_CDATA_SECTION 2
#define MODE_CLOSE_KINDTEST 3
#define MODE_DECLAREORDERING 4
#define MODE_ELEMENT_CONTENT 5
#define MODE_END_TAG 6
#define MODE_EXPR_COMMENT 7
#define MODE_ITEMTYPE 8
#define MODE_KINDTEST 9
#define MODE_KINDTESTFORPI 10
#define MODE_NAMESPACEDECL 11
#define MODE_NAMESPACEKEYWORD 12
#define MODE_OCCURRENCE_INDICATOR 13
#define MODE_OPERATOR 14
#define MODE_OPTION 15
#define MODE_PRAGMA 16
#define MODE_PRAGMACONTENTS 17
#define MODE_PROCESSING_INSTRUCTION_CTOR 18
#define MODE_PROCESSING_INSTRUCTION 19
#define MODE_PROCESSING_INSTRUCTION_CONTENT 20
#define MODE_QUOTE_ATTRIBUTE_CONTENT 21
#define MODE_SINGLETYPE 22
#define MODE_START_TAG 23
#define MODE_URITOOPERATOR 24
#define MODE_VARNAME 25
#define MODE_XMLSPACE_DECL 26
#define MODE_XML_COMMENT 27
#define MODE_XQUERY_VERSION 28
#define MODE_DECLAREREVALIDATION 29
#define MODE_CATCH 30

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#include <unistd.h>
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */
/* %if-c-only */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %if-bison-bridge */
/* %endif */
/* %endif End reentrant structures and macros. */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define ECHO LexerOutput( yytext, yyleng )
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
\
/* %if-c++-only C++ definition \ */\
	if ( (result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#define YY_FATAL_ERROR(msg) LexerError( msg )
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %ok-for-header */

/* %not-for-header */

/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define YY_DECL int yyFlexLexer::yylex()
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    
/* %% [7.0] user's declarations go here */
#line 290 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"


 yylloc->step ();


#line 7307 "xquery_scanner.yy.cpp"

	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyin = & std::cin;
/* %endif */

		if ( ! yyout )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyout = & std::cout;
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		(yy_more_len) = 0;
		if ( (yy_more_flag) )
			{
			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
			(yy_more_flag) = 0;
			}
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = (yy_start);
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 3609 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_current_state != 3608 );
		yy_cp = (yy_last_accepting_cpos);
		yy_current_state = (yy_last_accepting_state);

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

		if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
			{
			int yyl;
			for ( yyl = (yy_more_len); yyl < yyleng; ++yyl )
				if ( yytext[yyl] == '\n' )
					   
    yylineno++;
;
			}

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				std::cerr << "--scanner backing up\n";
			else if ( yy_act < 497 )
				std::cerr << "--accepting rule at line " << yy_rule_linenum[yy_act] <<
				         "(\"" << yytext << "\")\n";
			else if ( yy_act == 497 )
				std::cerr << "--accepting default rule (\"" << yytext << "\")\n";
			else if ( yy_act == 498 )
				std::cerr << "--(end of buffer or a NUL)\n";
			else
				std::cerr << "--EOF (start condition " << YY_START << ")\n";
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 295 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{ yylloc->step(); }
	YY_BREAK
case 2:
/* rule 2 can match eol */
YY_RULE_SETUP
#line 296 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{ yylloc->lines(yyleng); yylloc->step (); }
	YY_BREAK

typedef zorba::xquery_parser::token token;

/*______________________________________________________________________
   |
   |  INITIAL State
   |
   |  This state is for patterns that occur at the beginning  of an
   |  expression or subexpression.
   |______________________________________________________________________*/
/* maintain INITIAL */
/* ---------------- */
case 3:
/* rule 3 can match eol */
YY_RULE_SETUP
#line 315 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::VALIDATE_LBRACE;
}
	YY_BREAK
case 4:
/* rule 4 can match eol */
YY_RULE_SETUP
#line 320 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  TRY_SVAL_TOKEN (VALIDATE_MODE, put(yytext+9, yyleng-9));
}
	YY_BREAK
case 5:
/* rule 5 can match eol */
YY_RULE_SETUP
#line 325 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::TYPESWITCH_LPAR;
}
	YY_BREAK
case 6:
/* rule 6 can match eol */
YY_RULE_SETUP
#line 329 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::ELEMENT_LBRACE;
}
	YY_BREAK
case 7:
/* rule 7 can match eol */
YY_RULE_SETUP
#line 334 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::ATTRIBUTE_LBRACE;
}
	YY_BREAK
case 8:
/* rule 8 can match eol */
YY_RULE_SETUP
#line 339 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  TRY_SVAL_TOKEN (ATTRIBUTE_QNAME_LBRACE, put_qname(yytext+10, yyleng-11, true, true));
}
	YY_BREAK
case 9:
/* rule 9 can match eol */
YY_RULE_SETUP
#line 344 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  TRY_SVAL_TOKEN (ELEMENT_QNAME_LBRACE, put_qname(yytext+8, yyleng-9, true, true));
}
	YY_BREAK
case 10:
/* rule 10 can match eol */
YY_RULE_SETUP
#line 349 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::DOCUMENT_LBRACE;
}
	YY_BREAK
case 11:
/* rule 11 can match eol */
YY_RULE_SETUP
#line 354 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::TEXT_LBRACE;
}
	YY_BREAK
/* transition to MODE_PROCESSING_INSTRUCTION_CTOR */
/* ---------------------------------------------- */
case 12:
YY_RULE_SETUP
#line 361 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PROCESSING_INSTRUCTION_CTOR;
  return token::PROCESSING_INSTRUCTION;
}
	YY_BREAK
case 13:
/* rule 13 can match eol */
YY_RULE_SETUP
#line 367 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::COMMENT_LBRACE;
}
	YY_BREAK
case 14:
/* rule 14 can match eol */
YY_RULE_SETUP
#line 372 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DECLARE_FUNCTION;
}
	YY_BREAK
case 15:
/* rule 15 can match eol */
YY_RULE_SETUP
#line 376 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DECLARE_UPDATING_FUNCTION;
}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 380 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::LBRACE;
}
	YY_BREAK
case 17:
/* rule 17 can match eol */
YY_RULE_SETUP
#line 385 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::ORDERED_LBRACE;
}
	YY_BREAK
case 18:
/* rule 18 can match eol */
YY_RULE_SETUP
#line 390 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::UNORDERED_LBRACE;
}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 395 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SEMI;
}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 398 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::COMMA;
}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 401 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::LPAR;
}
	YY_BREAK
case 22:
/* rule 22 can match eol */
YY_RULE_SETUP
#line 404 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::IF_LPAR;
}
	YY_BREAK
/* transition to KINDTEST */
/* ---------------------- */
case 23:
/* rule 23 can match eol */
YY_RULE_SETUP
#line 411 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::ELEMENT_LPAR;
}
	YY_BREAK
case 24:
/* rule 24 can match eol */
YY_RULE_SETUP
#line 416 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::ATTRIBUTE_LPAR;
}
	YY_BREAK
case 25:
/* rule 25 can match eol */
YY_RULE_SETUP
#line 421 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::SCHEMA_ELEMENT_LPAR;
}
	YY_BREAK
case 26:
/* rule 26 can match eol */
YY_RULE_SETUP
#line 426 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::SCHEMA_ATTRIBUTE_LPAR;
}
	YY_BREAK
case 27:
/* rule 27 can match eol */
YY_RULE_SETUP
#line 431 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::COMMENT_LPAR;
}
	YY_BREAK
case 28:
/* rule 28 can match eol */
YY_RULE_SETUP
#line 436 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::TEXT_LPAR;
}
	YY_BREAK
case 29:
/* rule 29 can match eol */
YY_RULE_SETUP
#line 441 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::NODE_LPAR;
}
	YY_BREAK
case 30:
/* rule 30 can match eol */
YY_RULE_SETUP
#line 446 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::DOCUMENT_NODE_LPAR;
}
	YY_BREAK
/* transition to KINDTESTFORPI */
/* --------------------------- */
case 31:
/* rule 31 can match eol */
YY_RULE_SETUP
#line 454 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTESTFORPI, MODE_OPERATOR);
  return token::PI_LPAR;
}
	YY_BREAK
/* order dependence: this must follow the rules: xxx{S}"(" */
/* {QName}{S}"(" {
   yylval->sval = getDriver()->symtab.put_qname(yytext, yyleng-1, false, true);
   return token::QNAME_LPAR;
  }*/
case 32:
YY_RULE_SETUP
#line 465 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::MINUS;
}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 468 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::PLUS;
}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 471 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SLASH;
}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 474 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::LEADING_LONE_SLASH;
}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 477 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SLASH_SLASH;
}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 480 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ANCESTOR_OR_SELF_AXIS;
}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 483 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ANCESTOR_AXIS;
}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 486 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ATTRIBUTE_AXIS;
}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 489 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::CHILD_AXIS;
}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 492 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DESCENDANT_OR_SELF_AXIS;
}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 495 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DESCENDANT_AXIS;
}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 498 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::FOLLOWING_SIBLING_AXIS;
}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 501 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::FOLLOWING_AXIS;
}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 504 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::PARENT_AXIS;
}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 507 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::PRECEDING_SIBLING_AXIS;
}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 510 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::PRECEDING_AXIS;
}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 513 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SELF_AXIS;
}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 516 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_SIGN;
}
	YY_BREAK
/* transition to OPERATOR */
/* ---------------------- */
case 50:
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 524 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 527 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yylval->ival = getDriver()->symtab.integerval(yytext, yyleng);
  BEGIN MODE_OPERATOR;
  return token::INTEGER_LITERAL;
}
	YY_BREAK
case 52:
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 533 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 536 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yylval->decval = getDriver()->symtab.decimalval(yytext, yyleng);
  BEGIN MODE_OPERATOR;
  return token::DECIMAL_LITERAL;
}
	YY_BREAK
case 54:
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 542 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 545 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yylval->dval = getDriver()->symtab.doubleval(yytext, yyleng);
  BEGIN MODE_OPERATOR;
  return token::DOUBLE_LITERAL;
}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 551 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (ELEM_WILDCARD, put_ncname(yytext, yyleng-2));
}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 556 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 561 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::RPAR;
}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 566 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (PREFIX_WILDCARD, put_ncname(yytext+2, yyleng-2));
}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 571 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::STAR;
}
	YY_BREAK
case 61:
/* rule 61 can match eol */
YY_RULE_SETUP
#line 576 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 62:
/* rule 62 can match eol */
YY_RULE_SETUP
#line 581 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::DECLARE_CONSTRUCTION;
}
	YY_BREAK
case 63:
/* rule 63 can match eol */
YY_RULE_SETUP
#line 586 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::DECLARE_DEFAULT_ORDER;
}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 591 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::DOT_DOT;
}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 596 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::DOT;
}
	YY_BREAK
/* transition to NAMESPACEDECL */
/* --------------------------- */
case 66:
/* rule 66 can match eol */
YY_RULE_SETUP
#line 604 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::DECLARE_DEFAULT_COLLATION;
}
	YY_BREAK
case 67:
/* rule 67 can match eol */
YY_RULE_SETUP
#line 609 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::DECLARE_NAMESPACE;
}
	YY_BREAK
case 68:
/* rule 68 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 614 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::MODULE_NAMESPACE;
}
	YY_BREAK
case 69:
/* rule 69 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 619 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::DECLARE_BASE_URI;
}
	YY_BREAK
/* transition to NAMESPACEKEYWORD */
/* ------------------------------ */
case 70:
/* rule 70 can match eol */
YY_RULE_SETUP
#line 627 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::DECLARE_DEFAULT_ELEMENT;
}
	YY_BREAK
case 71:
/* rule 71 can match eol */
YY_RULE_SETUP
#line 632 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::DECLARE_DEFAULT_FUNCTION;
}
	YY_BREAK
case 72:
/* rule 72 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 637 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::IMPORT_SCHEMA;
}
	YY_BREAK
case 73:
/* rule 73 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 642 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::IMPORT_MODULE;
}
	YY_BREAK
case 74:
/* rule 74 can match eol */
YY_RULE_SETUP
#line 647 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::DECLARE_COPY_NAMESPACES;
}
	YY_BREAK
/* transition to VARNAME */
/* --------------------- */
case 75:
YY_RULE_SETUP
#line 655 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::DOLLAR;
}
	YY_BREAK
case 76:
/* rule 76 can match eol */
YY_RULE_SETUP
#line 660 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::FOR_DOLLAR;
}
	YY_BREAK
case 77:
/* rule 77 can match eol */
YY_RULE_SETUP
#line 665 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::LET_DOLLAR;
}
	YY_BREAK
case 78:
/* rule 78 can match eol */
YY_RULE_SETUP
#line 670 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::SOME_DOLLAR;
}
	YY_BREAK
case 79:
/* rule 79 can match eol */
YY_RULE_SETUP
#line 675 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::EVERY_DOLLAR;
}
	YY_BREAK
case 80:
/* rule 80 can match eol */
YY_RULE_SETUP
#line 680 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::DECLARE_VARIABLE_DOLLAR;
}
	YY_BREAK
/* transition to XML_COMMENT */
/* ------------------------- */
case 81:
YY_RULE_SETUP
#line 689 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_XML_COMMENT, MODE_OPERATOR);
  return token::XML_COMMENT_BEGIN;
}
	YY_BREAK
/* transition to PROCESSING_INSTRUCTION */
/* ------------------------------------ */
case 82:
YY_RULE_SETUP
#line 697 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_PROCESSING_INSTRUCTION, MODE_OPERATOR);
  return token::PI_BEGIN;
}
	YY_BREAK
/* transition to CDATA_SECTION */
/* --------------------------- */
case 83:
YY_RULE_SETUP
#line 705 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_CDATA_SECTION, MODE_OPERATOR);
  return token::CDATA_BEGIN;
}
	YY_BREAK
case 84:
/* rule 84 can match eol */
YY_RULE_SETUP
#line 711 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* transition to START_TAG */
/* ----------------------- */
case 85:
YY_RULE_SETUP
#line 716 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_START_TAG, MODE_OPERATOR);
  return token::START_TAG;
}
	YY_BREAK
/* transition to XMLSPACE_DECL */
/* --------------------------- */
case 86:
/* rule 86 can match eol */
YY_RULE_SETUP
#line 724 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_XMLSPACE_DECL;
  return token::DECLARE_BOUNDARY_SPACE;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 87:
YY_RULE_SETUP
#line 732 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* transition to DECLAREORDERING */
/* ----------------------------- */
case 88:
/* rule 88 can match eol */
YY_RULE_SETUP
#line 739 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_DECLAREORDERING;
  return token::DECLARE_ORDERING;
}
	YY_BREAK
/* transition to XQUERY_VERSION */
/* ---------------------------- */
case 89:
/* rule 89 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 747 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_XQUERY_VERSION;
  return token::XQUERY_VERSION;
}
	YY_BREAK
/* transition to PRAGMA */
/* -------------------- */
case 90:
YY_RULE_SETUP
#line 755 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PRAGMA;
  return token::PRAGMA_BEGIN;
}
	YY_BREAK
/* transition to OPTION */
/* -------------------- */
case 91:
/* rule 91 can match eol */
YY_RULE_SETUP
#line 763 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPTION;
  return token::DECLARE_OPTION;
}
	YY_BREAK
/* transition to NAMESPACEDECL */
/* --------------------------- */
case 92:
/* rule 92 can match eol */
YY_RULE_SETUP
#line 771 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  const char *p = yytext + 2;
  for (; *p != '\'' && *p != '"'; p++);
  BEGIN MODE_NAMESPACEDECL;
  TRY_URILIT (AT_URI_LITERAL, p, yyleng + (p - yytext));
}
	YY_BREAK
/* pop previous state */
/* ------------------ */
case 93:
YY_RULE_SETUP
#line 781 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::RBRACE;
}
	YY_BREAK
/*______________________________________________________________________
   |
   | Update rules <INITIAL,MODE_OPERATOR>
   |______________________________________________________________________*/
case 94:
/* rule 94 can match eol */
YY_RULE_SETUP
#line 792 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_DECLAREREVALIDATION;
  return token::DECLARE_REVALIDATION;
}
	YY_BREAK

case 95:
/* rule 95 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 800 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INSERT_NODE;
}
	YY_BREAK
case 96:
/* rule 96 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 804 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INSERT_NODES;
}
	YY_BREAK
case 97:
/* rule 97 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 808 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DELETE_NODE;
}
	YY_BREAK
case 98:
/* rule 98 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 812 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DELETE_NODES;
}
	YY_BREAK
case 99:
/* rule 99 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 816 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REPLACE;
}
	YY_BREAK
case 100:
/* rule 100 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 820 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REPLACE_VALUE_OF;
}
	YY_BREAK
case 101:
/* rule 101 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 824 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  getDriver()->set_rename(true);
  return token::RENAME;
}
	YY_BREAK
case 102:
/* rule 102 can match eol */
YY_RULE_SETUP
#line 830 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::COPY_DOLLAR;
}
	YY_BREAK
case 103:
/* rule 103 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 834 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INTO;
}
	YY_BREAK
case 104:
/* rule 104 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 838 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AFTER;
}
	YY_BREAK
case 105:
/* rule 105 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 842 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::BEFORE;
}
	YY_BREAK
case 106:
/* rule 106 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 846 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::WITH;
}
	YY_BREAK
case 107:
/* rule 107 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 850 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MODIFY;
}
	YY_BREAK

case 108:
/* rule 108 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 857 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AS;
}
	YY_BREAK
/*______________________________________________________________________
   |
   | TRY-CATCH rules <INITIAL>
   |______________________________________________________________________*/
case 109:
/* rule 109 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 867 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::TRY;
}
	YY_BREAK

case 110:
/* rule 110 can match eol */
YY_RULE_SETUP
#line 872 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_CATCH);
  return token::CATCH_LPAR;
}
	YY_BREAK


case 111:
YY_RULE_SETUP
#line 880 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::RPAR;
}
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 885 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 890 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STAR;
}
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 895 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (ELEM_WILDCARD, put_ncname(yytext, yyleng-2));
}
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 900 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (PREFIX_WILDCARD, put_ncname(yytext+2, yyleng-2));
}
	YY_BREAK

/*______________________________________________________________________
   |
   | FT rules <INITIAL>
   |______________________________________________________________________*/
case 116:
YY_RULE_SETUP
#line 913 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::FTAND;
}
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 916 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::FTNOT;
}
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 919 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::FTOR;
}
	YY_BREAK
case 119:
/* rule 119 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 922 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::FTNOT_IN;
}
	YY_BREAK
case 120:
/* rule 120 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 925 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ALL;
}
	YY_BREAK
case 121:
/* rule 121 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 928 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ALL_WORDS;
}
	YY_BREAK
case 122:
/* rule 122 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 931 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ANY;
}
	YY_BREAK
case 123:
/* rule 123 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 934 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ANY_WORD;
}
	YY_BREAK
case 124:
/* rule 124 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 937 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_END;
}
	YY_BREAK
case 125:
/* rule 125 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 940 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_LEAST;
}
	YY_BREAK
case 126:
/* rule 126 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 943 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_MOST;
}
	YY_BREAK
case 127:
/* rule 127 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 946 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_START;
}
	YY_BREAK
case 128:
/* rule 128 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 949 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE_INSENSITIVE;
}
	YY_BREAK
case 129:
/* rule 129 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 952 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE_SENSITIVE;
}
	YY_BREAK
case 130:
/* rule 130 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 955 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DECLARE_FTOPTION;
}
	YY_BREAK
case 131:
/* rule 131 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 958 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DIACRITICS_INSENSITIVE;
}
	YY_BREAK
case 132:
/* rule 132 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 961 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DIACRITICS_SENSITIVE;
}
	YY_BREAK
case 133:
/* rule 133 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 964 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DIFFERENT;
}
	YY_BREAK
case 134:
/* rule 134 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 967 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DISTANCE;
}
	YY_BREAK
case 135:
/* rule 135 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 970 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ENTIRE_CONTENT;
}
	YY_BREAK
case 136:
/* rule 136 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 973 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::EXACTLY;
}
	YY_BREAK
case 137:
/* rule 137 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 976 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::FROM;
}
	YY_BREAK
case 138:
/* rule 138 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 979 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::LANGUAGE;
}
	YY_BREAK
case 139:
/* rule 139 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 982 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::LEVELS;
}
	YY_BREAK
case 140:
/* rule 140 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 985 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::LOWERCASE;
}
	YY_BREAK
case 141:
/* rule 141 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 988 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::OCCURS;
}
	YY_BREAK
case 142:
/* rule 142 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 991 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::PARAGRAPH;
}
	YY_BREAK
case 143:
/* rule 143 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 994 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::PHRASE;
}
	YY_BREAK
case 144:
/* rule 144 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 12;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 997 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::RELATIONSHIP;
}
	YY_BREAK
case 145:
/* rule 145 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1000 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SAME;
}
	YY_BREAK
case 146:
/* rule 146 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1003 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SCORE;
}
	YY_BREAK
case 147:
/* rule 147 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1006 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SENTENCE;
}
	YY_BREAK
case 148:
/* rule 148 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1009 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SENTENCES;
}
	YY_BREAK
case 149:
/* rule 149 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1012 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::TIMES;
}
	YY_BREAK
case 150:
/* rule 150 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1015 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UPPERCASE;
}
	YY_BREAK
case 151:
/* rule 151 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1018 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WEIGHT;
}
	YY_BREAK
case 152:
/* rule 152 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1021 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WINDOW;
}
	YY_BREAK
case 153:
/* rule 153 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1024 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_CONTENT;
}
	YY_BREAK
case 154:
/* rule 154 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1027 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_DIACRITICS;
}
	YY_BREAK
case 155:
/* rule 155 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1030 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_STEMMING;
}
	YY_BREAK
case 156:
/* rule 156 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1033 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_STOP_WORDS;
}
	YY_BREAK
case 157:
/* rule 157 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1036 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_THESAURUS;
}
	YY_BREAK
case 158:
/* rule 158 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1039 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_WILDCARDS;
}
	YY_BREAK
case 159:
/* rule 159 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1042 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_DEFAULT_STOP_WORDS;
}
	YY_BREAK
case 160:
/* rule 160 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1045 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_DIACRITICS;
}
	YY_BREAK
case 161:
/* rule 161 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1048 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_STEMMING;
}
	YY_BREAK
case 162:
/* rule 162 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1051 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_STOP_WORDS;
}
	YY_BREAK
case 163:
/* rule 163 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1054 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_THESAURUS;
}
	YY_BREAK
case 164:
/* rule 164 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1057 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_WILDCARDS;
}
	YY_BREAK
case 165:
/* rule 165 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1060 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WORDS;
}
	YY_BREAK
case 166:
/* rule 166 can match eol */
YY_RULE_SETUP
#line 1064 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* catch all */
case 167:
YY_RULE_SETUP
#line 1069 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* END MODE INITIAL */
/*______________________________________________________________________
   |
   |  The PROCESSING_INSTRUCTION_CTOR State
   |
   |  transition to MODE_OPERATOR
   |______________________________________________________________________*/

case 168:
YY_RULE_SETUP
#line 1085 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::LBRACE;
}
	YY_BREAK
case 169:
YY_RULE_SETUP
#line 1090 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (NCNAME, put_ncname(yytext, yyleng));
}
	YY_BREAK
case 170:
/* rule 170 can match eol */
YY_RULE_SETUP
#line 1094 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK

/*______________________________________________________________________
   |
   |  The DECLAREORDERING State
   |
   |  Special state to recognize declare ordering specific keywords.
   |  transition to INITIAL
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 171:
/* rule 171 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1112 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ORDERED;
}
	YY_BREAK
case 172:
/* rule 172 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1117 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::UNORDERED;
}
	YY_BREAK
/* <MODE_DECLAREORDERING> */
/*______________________________________________________________________
   |
   |  The DECLAREREVALIDATION State
   |
   |  Special state to recognize declare revalidation specific keywords.
   |  transition to INITIAL
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 173:
/* rule 173 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1137 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REVAL_STRICT;
}
	YY_BREAK
case 174:
/* rule 174 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1142 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REVAL_LAX;
}
	YY_BREAK
case 175:
/* rule 175 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1147 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REVAL_SKIP;
}
	YY_BREAK
/* <MODE_DECLAREORDERING> */
/*______________________________________________________________________
   |
   |  OPERATOR State
   |
   |  This state is for patterns that are defined for operators.
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 176:
YY_RULE_SETUP
#line 1166 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(INITIAL);
  return token::LBRACE;
}
	YY_BREAK
case 177:
YY_RULE_SETUP
#line 1170 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  /* yy_push_state(INITIAL); */
  return token::LPAR;
}
	YY_BREAK
case 178:
YY_RULE_SETUP
#line 1175 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SEMI;
}
	YY_BREAK
case 179:
/* rule 179 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1179 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::THEN;
}
	YY_BREAK
case 180:
/* rule 180 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1183 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ELSE;
}
	YY_BREAK
case 181:
/* rule 181 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1187 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXTERNAL;
}
	YY_BREAK
case 182:
/* rule 182 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1191 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AND;
}
	YY_BREAK
case 183:
/* rule 183 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1195 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  if (!getDriver()->ftcontains()) {
    BEGIN INITIAL;
  }
  return token::AT;
}
	YY_BREAK
/* full-text rule */
case 184:
/* rule 184 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1204 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SCORE;
}
	YY_BREAK
case 185:
YY_RULE_SETUP
#line 1210 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GETS;
}
	YY_BREAK
case 186:
YY_RULE_SETUP
#line 1214 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::COMMA;
}
	YY_BREAK
case 187:
/* rule 187 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1218 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DIV;
}
	YY_BREAK
case 188:
YY_RULE_SETUP
#line 1222 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EQUALS;
}
	YY_BREAK
case 189:
/* rule 189 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1226 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXCEPT;
}
	YY_BREAK
case 190:
/* rule 190 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1230 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_EQ;
}
	YY_BREAK
case 191:
/* rule 191 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1234 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_GE;
}
	YY_BREAK
case 192:
/* rule 192 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1238 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_GT;
}
	YY_BREAK
case 193:
/* rule 193 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1242 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_LE;
}
	YY_BREAK
case 194:
/* rule 194 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1246 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_LT;
}
	YY_BREAK
case 195:
/* rule 195 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1250 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_NE;
}
	YY_BREAK
case 196:
YY_RULE_SETUP
#line 1254 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GE;
}
	YY_BREAK
case 197:
YY_RULE_SETUP
#line 1258 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FOLLOWS;
}
	YY_BREAK
case 198:
YY_RULE_SETUP
#line 1262 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GT;
}
	YY_BREAK
case 199:
/* rule 199 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1266 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::IDIV;
}
	YY_BREAK
case 200:
/* rule 200 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1270 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INTERSECT;
}
	YY_BREAK
case 201:
/* rule 201 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1277 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::_IN_;
}
	YY_BREAK
case 202:
/* rule 202 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1281 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::IS;
}
	YY_BREAK
case 203:
YY_RULE_SETUP
#line 1285 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LBRACK;
}
	YY_BREAK
case 204:
YY_RULE_SETUP
#line 1289 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LE;
}
	YY_BREAK
case 205:
YY_RULE_SETUP
#line 1293 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PRECEDES;
}
	YY_BREAK
case 206:
YY_RULE_SETUP
#line 1297 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LT;
}
	YY_BREAK
case 207:
YY_RULE_SETUP
#line 1301 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MINUS;
}
	YY_BREAK
case 208:
/* rule 208 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1305 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MOD;
}
	YY_BREAK
case 209:
YY_RULE_SETUP
#line 1309 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STAR;
}
	YY_BREAK
case 210:
YY_RULE_SETUP
#line 1313 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::NE;
}
	YY_BREAK
case 211:
/* rule 211 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1317 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ORDER_BY;
}
	YY_BREAK
case 212:
/* rule 212 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1321 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STABLE_ORDER_BY;
}
	YY_BREAK
case 213:
/* rule 213 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1325 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::OR;
}
	YY_BREAK
case 214:
YY_RULE_SETUP
#line 1329 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PLUS;
}
	YY_BREAK
case 215:
/* rule 215 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1333 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::RETURN;
}
	YY_BREAK
case 216:
/* rule 216 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1337 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SATISFIES;
}
	YY_BREAK
case 217:
YY_RULE_SETUP
#line 1341 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SLASH;
}
	YY_BREAK
case 218:
YY_RULE_SETUP
#line 1345 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LEADING_LONE_SLASH;
}
	YY_BREAK
case 219:
YY_RULE_SETUP
#line 1349 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SLASH_SLASH;
}
	YY_BREAK
case 220:
/* rule 220 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1353 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::TO;
}
	YY_BREAK
case 221:
/* rule 221 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1357 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::UNION;
}
	YY_BREAK
case 222:
YY_RULE_SETUP
#line 1361 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VBAR;
}
	YY_BREAK
case 223:
/* rule 223 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1365 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::WHERE;
}
	YY_BREAK
case 224:
/* rule 224 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1369 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PRESERVE;
}
	YY_BREAK
case 225:
/* rule 225 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1373 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STRIP;
}
	YY_BREAK
/* transition to SINGLETYPE */
/* ------------------------ */
case 226:
/* rule 226 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1383 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_SINGLETYPE;
  return token::CASTABLE_AS;
}
	YY_BREAK
case 227:
/* rule 227 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1387 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_SINGLETYPE;
  return token::CAST_AS;
}
	YY_BREAK
/* transition to ITEMTYPE */
/* ---------------------- */
case 228:
/* rule 228 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1395 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_ITEMTYPE;
  return token::INSTANCE_OF;
}
	YY_BREAK
case 229:
/* rule 229 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1399 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_ITEMTYPE;
  return token::TREAT_AS;
}
	YY_BREAK
case 230:
/* rule 230 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1403 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_ITEMTYPE;
  return token::CASE;
}
	YY_BREAK
case 231:
/* rule 231 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1407 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  if (getDriver()->rename()) {
    getDriver()->set_rename(false);
    BEGIN INITIAL;
  }
  else if (getDriver()->ftcontains()) {
    getDriver()->set_ftcontains(false);
  }
  else {
    BEGIN MODE_ITEMTYPE;
  }
  return token::AS;
}
	YY_BREAK
/* transition to VARNAME */
/* --------------------- */
case 232:
YY_RULE_SETUP
#line 1423 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::DOLLAR;
}
	YY_BREAK
case 233:
/* rule 233 can match eol */
YY_RULE_SETUP
#line 1427 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::FOR_DOLLAR;
}
	YY_BREAK
case 234:
/* rule 234 can match eol */
YY_RULE_SETUP
#line 1431 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::LET_DOLLAR;
}
	YY_BREAK
case 235:
/* rule 235 can match eol */
YY_RULE_SETUP
#line 1435 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::LET_SCORE_DOLLAR;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 236:
YY_RULE_SETUP
#line 1443 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* transition to URITOOPERATOR */
/* --------------------------- */
case 237:
/* rule 237 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1450 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_URITOOPERATOR;
  return token::COLLATION;
}
	YY_BREAK
/* restore previous state on closing brace */
/* --------------------------------------- */
case 238:
YY_RULE_SETUP
#line 1458 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::RBRACE;
}
	YY_BREAK
/* maintain OPERATOR state */
/* ----------------------- */
case 239:
YY_RULE_SETUP
#line 1466 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::RPAR;
}
	YY_BREAK
case 240:
YY_RULE_SETUP
#line 1469 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::HOOK;
}
	YY_BREAK
case 241:
/* rule 241 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1472 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::EMPTY_GREATEST;
}
	YY_BREAK
case 242:
/* rule 242 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1475 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::EMPTY_LEAST;
}
	YY_BREAK
case 243:
/* rule 243 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1478 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ASCENDING;
}
	YY_BREAK
case 244:
/* rule 244 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 10;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1481 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DESCENDING;
}
	YY_BREAK
case 245:
/* rule 245 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1484 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DEFAULT;
}
	YY_BREAK
case 246:
YY_RULE_SETUP
#line 1487 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::RBRACK;
}
	YY_BREAK
case 247:
/* rule 247 can match eol */
YY_RULE_SETUP
#line 1490 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
/*______________________________________________________________________
   |
   | FT rules <OPERATOR>
   |______________________________________________________________________*/
/* transition to INITIAL state */
/* --------------------------- */
case 248:
/* rule 248 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 10;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1503 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  getDriver()->set_ftcontains(true);
  return token::FTCONTAINS;
}
	YY_BREAK
case 249:
YY_RULE_SETUP
#line 1508 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FTAND;
}
	YY_BREAK
case 250:
YY_RULE_SETUP
#line 1512 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FTNOT;
}
	YY_BREAK
case 251:
YY_RULE_SETUP
#line 1516 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FTOR;
}
	YY_BREAK
case 252:
/* rule 252 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1520 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FTNOT_IN;
}
	YY_BREAK
case 253:
/* rule 253 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1524 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AT_LEAST;
}
	YY_BREAK
case 254:
/* rule 254 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1528 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AT_MOST;
}
	YY_BREAK
case 255:
/* rule 255 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1532 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DISTANCE;
}
	YY_BREAK
case 256:
/* rule 256 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1536 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXACTLY;
}
	YY_BREAK
case 257:
/* rule 257 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1540 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FROM;
}
	YY_BREAK
case 258:
/* rule 258 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1544 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::OCCURS;
}
	YY_BREAK
case 259:
/* rule 259 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1548 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::WINDOW;
}
	YY_BREAK
/* maintain OPERATOR state */
/* ----------------------- */
case 260:
/* rule 260 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1556 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ALL;
}
	YY_BREAK
case 261:
/* rule 261 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1559 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ALL_WORDS;
}
	YY_BREAK
case 262:
/* rule 262 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1562 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ANY;
}
	YY_BREAK
case 263:
/* rule 263 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1565 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ANY_WORD;
}
	YY_BREAK
case 264:
/* rule 264 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1568 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_END;
}
	YY_BREAK
case 265:
/* rule 265 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1571 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_START;
}
	YY_BREAK
case 266:
/* rule 266 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1574 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE_INSENSITIVE;
}
	YY_BREAK
case 267:
/* rule 267 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1577 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE_SENSITIVE;
}
	YY_BREAK
case 268:
/* rule 268 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1580 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DECLARE_FTOPTION;
}
	YY_BREAK
case 269:
/* rule 269 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1583 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DIACRITICS_INSENSITIVE;
}
	YY_BREAK
case 270:
/* rule 270 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1586 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DIACRITICS_SENSITIVE;
}
	YY_BREAK
case 271:
/* rule 271 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1589 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DIFFERENT;
}
	YY_BREAK
case 272:
/* rule 272 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1592 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ENTIRE_CONTENT;
}
	YY_BREAK
case 273:
/* rule 273 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1595 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::LANGUAGE;
}
	YY_BREAK
case 274:
/* rule 274 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1598 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::LEVELS;
}
	YY_BREAK
case 275:
/* rule 275 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1601 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::LOWERCASE;
}
	YY_BREAK
case 276:
/* rule 276 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1604 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::PARAGRAPH;
}
	YY_BREAK
case 277:
/* rule 277 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1607 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::PHRASE;
}
	YY_BREAK
case 278:
/* rule 278 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 12;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1610 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::RELATIONSHIP;
}
	YY_BREAK
case 279:
/* rule 279 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1613 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SAME;
}
	YY_BREAK
case 280:
/* rule 280 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1616 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SCORE;
}
	YY_BREAK
case 281:
/* rule 281 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1619 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SENTENCE;
}
	YY_BREAK
case 282:
/* rule 282 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1622 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::SENTENCES;
}
	YY_BREAK
case 283:
/* rule 283 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1625 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::TIMES;
}
	YY_BREAK
case 284:
/* rule 284 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1628 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UPPERCASE;
}
	YY_BREAK
case 285:
/* rule 285 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1631 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WEIGHT;
}
	YY_BREAK
case 286:
/* rule 286 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1634 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_CONTENT;
}
	YY_BREAK
case 287:
/* rule 287 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1637 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_DIACRITICS;
}
	YY_BREAK
case 288:
/* rule 288 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1640 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_STEMMING;
}
	YY_BREAK
case 289:
/* rule 289 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1643 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_STOP_WORDS;
}
	YY_BREAK
case 290:
/* rule 290 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1646 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_THESAURUS;
}
	YY_BREAK
case 291:
/* rule 291 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1649 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_WILDCARDS;
}
	YY_BREAK
case 292:
/* rule 292 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1652 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_DEFAULT_STOP_WORDS;
}
	YY_BREAK
case 293:
/* rule 293 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1655 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_DIACRITICS;
}
	YY_BREAK
case 294:
/* rule 294 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1658 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_STEMMING;
}
	YY_BREAK
case 295:
/* rule 295 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1661 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_STOP_WORDS;
}
	YY_BREAK
case 296:
/* rule 296 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1664 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_THESAURUS;
}
	YY_BREAK
case 297:
/* rule 297 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1667 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_WILDCARDS;
}
	YY_BREAK
case 298:
/* rule 298 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1670 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::WORDS;
}
	YY_BREAK
case 299:
YY_RULE_SETUP
#line 1673 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PRAGMA;
  return token::PRAGMA_BEGIN;
}
	YY_BREAK
case 300:
YY_RULE_SETUP
#line 1678 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 301:
/* rule 301 can match eol */
YY_RULE_SETUP
#line 1682 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_OPERATOR> */
/*______________________________________________________________________
   |
   | XQUERY_VERSION State
   |
   | This state is for recognition of XQuery version specific keywords.
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 302:
YY_RULE_SETUP
#line 1701 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SEMI;
}
	YY_BREAK
/* maintain XQUERYVERSION */
/* ---------------------- */
case 303:
/* rule 303 can match eol */
YY_RULE_SETUP
#line 1708 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 304:
/* rule 304 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1712 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ENCODING;
}
	YY_BREAK
case 305:
/* rule 305 can match eol */
YY_RULE_SETUP
#line 1716 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_XQUERY_VERSION> */
/*______________________________________________________________________
   |
   | NAMESPACEDECL State
   |
   | This state occurs inside of a namespace declaration, and is needed
   | to recognize a NCName that is to be used as the prefix, as opposed
   | to allowing a QName to occur. (Otherwise, the difference between
   | NCName and QName becomes ambiguous.)
   |______________________________________________________________________*/

case 306:
YY_RULE_SETUP
#line 1737 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 307:
YY_RULE_SETUP
#line 1741 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SEMI;
}
	YY_BREAK
/* maintain NAMESPACEDECL */
/* ---------------------- */
case 308:
/* rule 308 can match eol */
YY_RULE_SETUP
#line 1748 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_URILIT (URI_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 309:
YY_RULE_SETUP
#line 1752 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::COMMA;
}
	YY_BREAK
case 310:
/* rule 310 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1756 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::AT;
}
	YY_BREAK
case 311:
YY_RULE_SETUP
#line 1760 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::EQUALS;
}
	YY_BREAK
case 312:
YY_RULE_SETUP
#line 1764 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (NCNAME, put_ncname(yytext, yyleng));
}
	YY_BREAK
case 313:
YY_RULE_SETUP
#line 1768 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 314:
/* rule 314 can match eol */
YY_RULE_SETUP
#line 1772 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_NAMESPACEDECL> */
/*______________________________________________________________________
   |
   | URITOOPERATOR State
   |
   | This state is to recognize a URILiteral that transitions to the
   | OPERATOR state.
   |______________________________________________________________________*/
case 315:
/* rule 315 can match eol */
YY_RULE_SETUP
#line 1789 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_URILIT (URI_LITERAL, yytext, yyleng);
}
	YY_BREAK
/*______________________________________________________________________
   |
   | NAMESPACEKEYWORD State
   |
   | This state occurs at places where the keyword "namespace" is
   | expected, which would otherwise be ambiguous compared to a QName.
   | QNames can not occur in this state.
   |______________________________________________________________________*/

/* transition to NAMESPACEDECL */
/* --------------------------- */
case 316:
/* rule 316 can match eol */
YY_RULE_SETUP
#line 1810 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  TRY_URILIT (URI_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 317:
/* rule 317 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1815 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::NAMESPACE;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 318:
/* rule 318 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1822 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INHERIT;
}
	YY_BREAK
case 319:
/* rule 319 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 10;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1827 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::NO_INHERIT;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 320:
YY_RULE_SETUP
#line 1834 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* maintain NAMESPACEKEYWORD */
/* ------------------------- */
case 321:
/* rule 321 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1841 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DEFAULT_ELEMENT;
}
	YY_BREAK
case 322:
/* rule 322 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1845 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::PRESERVE;
}
	YY_BREAK
case 323:
/* rule 323 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 11;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1849 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::NO_PRESERVE;
}
	YY_BREAK
case 324:
YY_RULE_SETUP
#line 1853 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::COMMA;
}
	YY_BREAK
case 325:
YY_RULE_SETUP
#line 1857 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 326:
/* rule 326 can match eol */
YY_RULE_SETUP
#line 1861 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_NAMESPACEKEYWORD> */
/*______________________________________________________________________
    |
    | XMLSPACE_DECL State
    |
    | This state occurs at places where the keywords "preserve" and
    | "strip" is expected to support "declare xmlspace". QNames cannot
    | occur in this state.
    |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 327:
/* rule 327 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1883 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PRESERVE;
}
	YY_BREAK
case 328:
/* rule 328 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1888 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STRIP;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 329:
YY_RULE_SETUP
#line 1895 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 330:
YY_RULE_SETUP
#line 1899 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 331:
/* rule 331 can match eol */
YY_RULE_SETUP
#line 1903 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_XMLSPACE_DECL> */
/*______________________________________________________________________
   |
   | SINGLETYPE State
   |
   | This state distinguishes tokens that can occur only inside the
   | SingleType production.
   |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 332:
YY_RULE_SETUP
#line 1924 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 333:
YY_RULE_SETUP
#line 1931 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 334:
YY_RULE_SETUP
#line 1935 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 335:
/* rule 335 can match eol */
YY_RULE_SETUP
#line 1939 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_SINGLETYPE> */
/*______________________________________________________________________
   |
   | ITEMTYPE State
   |
   | This state distinguishes tokens that can occur only inside the
   | ItemType production.
   |______________________________________________________________________*/

case 336:
/* rule 336 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1958 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FIRST_INTO;
}
	YY_BREAK
case 337:
/* rule 337 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1962 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LAST_INTO;
}
	YY_BREAK
/* transition to VARNAME */
/* --------------------- */
case 338:
YY_RULE_SETUP
#line 1970 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::DOLLAR;
}
	YY_BREAK
case 339:
/* rule 339 can match eol */
YY_RULE_SETUP
#line 1975 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::VOID_TEST;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 340:
YY_RULE_SETUP
#line 1982 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* transition to KINDTEST */
/* ---------------------- */
case 341:
/* rule 341 can match eol */
YY_RULE_SETUP
#line 1988 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::ELEMENT_LPAR;
}
	YY_BREAK
case 342:
/* rule 342 can match eol */
YY_RULE_SETUP
#line 1993 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::ATTRIBUTE_LPAR;
}
	YY_BREAK
case 343:
/* rule 343 can match eol */
YY_RULE_SETUP
#line 1998 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::SCHEMA_ELEMENT_LPAR;
}
	YY_BREAK
case 344:
/* rule 344 can match eol */
YY_RULE_SETUP
#line 2003 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::SCHEMA_ATTRIBUTE_LPAR;
}
	YY_BREAK
case 345:
/* rule 345 can match eol */
YY_RULE_SETUP
#line 2008 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::COMMENT_LPAR;
}
	YY_BREAK
case 346:
/* rule 346 can match eol */
YY_RULE_SETUP
#line 2013 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::TEXT_LPAR;
}
	YY_BREAK
case 347:
/* rule 347 can match eol */
YY_RULE_SETUP
#line 2018 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::NODE_LPAR;
}
	YY_BREAK
case 348:
/* rule 348 can match eol */
YY_RULE_SETUP
#line 2023 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::DOCUMENT_NODE_LPAR;
}
	YY_BREAK
/* transition to KINDTESTFORPI */
/* --------------------------- */
case 349:
/* rule 349 can match eol */
YY_RULE_SETUP
#line 2030 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTESTFORPI, MODE_OCCURRENCE_INDICATOR);
  return token::PI_LPAR;
}
	YY_BREAK
case 350:
/* rule 350 can match eol */
YY_RULE_SETUP
#line 2035 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OCCURRENCE_INDICATOR;
  return token::ITEM_TEST;
}
	YY_BREAK
/* transition to PRAGMA */
/* -------------------- */
case 351:
YY_RULE_SETUP
#line 2042 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PRAGMA;
  return token::PRAGMA_BEGIN;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 352:
YY_RULE_SETUP
#line 2049 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SEMI;
}
	YY_BREAK
case 353:
/* rule 353 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2054 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::THEN;
}
	YY_BREAK
case 354:
/* rule 354 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2059 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ELSE;
}
	YY_BREAK
/* transition to NAMESPACEDECL */
/* --------------------------- */
case 355:
/* rule 355 can match eol */
YY_RULE_SETUP
#line 2066 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  const char *p = yytext + 2;
  for (; *p != '\'' && *p != '"'; p++);
  BEGIN MODE_NAMESPACEDECL;
  TRY_URILIT (AT_URI_LITERAL, p, yyleng + (p - yytext));
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 356:
/* rule 356 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2075 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXTERNAL;
}
	YY_BREAK
case 357:
/* rule 357 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2080 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AND;
}
	YY_BREAK
case 358:
/* rule 358 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2085 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AT;
}
	YY_BREAK
case 359:
YY_RULE_SETUP
#line 2090 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GETS;
}
	YY_BREAK
case 360:
YY_RULE_SETUP
#line 2095 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::COMMA;
}
	YY_BREAK
case 361:
/* rule 361 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2100 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DIV;
}
	YY_BREAK
case 362:
YY_RULE_SETUP
#line 2105 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EQUALS;
}
	YY_BREAK
case 363:
/* rule 363 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2110 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXCEPT;
}
	YY_BREAK
case 364:
/* rule 364 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2115 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_EQ;
}
	YY_BREAK
case 365:
/* rule 365 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2120 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_GE;
}
	YY_BREAK
case 366:
/* rule 366 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2125 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_GT;
}
	YY_BREAK
case 367:
/* rule 367 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2130 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_LE;
}
	YY_BREAK
case 368:
/* rule 368 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2135 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_LT;
}
	YY_BREAK
case 369:
/* rule 369 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2140 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_NE;
}
	YY_BREAK
case 370:
YY_RULE_SETUP
#line 2145 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GE;
}
	YY_BREAK
case 371:
YY_RULE_SETUP
#line 2150 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FOLLOWS;
}
	YY_BREAK
case 372:
YY_RULE_SETUP
#line 2155 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GT;
}
	YY_BREAK
case 373:
/* rule 373 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2160 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::IDIV;
}
	YY_BREAK
case 374:
/* rule 374 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2165 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INTERSECT;
}
	YY_BREAK
case 375:
/* rule 375 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2170 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::_IN_;
}
	YY_BREAK
case 376:
/* rule 376 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2175 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::IS;
}
	YY_BREAK
case 377:
YY_RULE_SETUP
#line 2180 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LBRACK;
}
	YY_BREAK
case 378:
YY_RULE_SETUP
#line 2185 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LPAR;
}
	YY_BREAK
case 379:
YY_RULE_SETUP
#line 2190 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LE;
}
	YY_BREAK
case 380:
YY_RULE_SETUP
#line 2195 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PRECEDES;
}
	YY_BREAK
case 381:
YY_RULE_SETUP
#line 2200 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LT;
}
	YY_BREAK
case 382:
YY_RULE_SETUP
#line 2205 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MINUS;
}
	YY_BREAK
case 383:
/* rule 383 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2210 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MOD;
}
	YY_BREAK
case 384:
YY_RULE_SETUP
#line 2215 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::NE;
}
	YY_BREAK
case 385:
/* rule 385 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2220 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ORDER_BY;
}
	YY_BREAK
case 386:
/* rule 386 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2225 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STABLE_ORDER_BY;
}
	YY_BREAK
case 387:
/* rule 387 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2230 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::OR;
}
	YY_BREAK
case 388:
/* rule 388 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2235 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::RETURN;
}
	YY_BREAK
case 389:
/* rule 389 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2240 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SATISFIES;
}
	YY_BREAK
case 390:
/* rule 390 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2245 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::TO;
}
	YY_BREAK
case 391:
/* rule 391 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2250 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::UNION;
}
	YY_BREAK
case 392:
YY_RULE_SETUP
#line 2255 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VBAR;
}
	YY_BREAK
case 393:
/* rule 393 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2260 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::WHERE;
}
	YY_BREAK
/* transition to SINGLETYPE */
/* ------------------------ */
case 394:
/* rule 394 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2267 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_SINGLETYPE;
  return token::CASTABLE_AS;
}
	YY_BREAK
case 395:
/* rule 395 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2272 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_SINGLETYPE;
  return token::CAST_AS;
}
	YY_BREAK
/* maintain ITEMTYPE */
/* ----------------- */
case 396:
/* rule 396 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2279 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::INSTANCE_OF;
}
	YY_BREAK
case 397:
/* rule 397 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2283 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::TREAT_AS;
}
	YY_BREAK
case 398:
/* rule 398 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2287 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE;
}
	YY_BREAK
case 399:
YY_RULE_SETUP
#line 2291 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::RPAR;
}
	YY_BREAK
case 400:
/* rule 400 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2295 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::AS;
}
	YY_BREAK
case 401:
YY_RULE_SETUP
#line 2300 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = getDriver()->symtab.put_qname(yytext, yyleng);
  BEGIN MODE_OCCURRENCE_INDICATOR;
  return token::QNAME;
}
	YY_BREAK
case 402:
YY_RULE_SETUP
#line 2306 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 403:
/* rule 403 can match eol */
YY_RULE_SETUP
#line 2310 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_ITEMTYPE> */
/*______________________________________________________________________
   |
   | KINDTEST State
   |
   | This state is for the psuedo-parameters for the KindTest productions
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 404:
YY_RULE_SETUP
#line 2330 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::LBRACE;
}
	YY_BREAK
/* transition to CLOSE_KINDTEST */
/* --------------------------- */
case 405:
YY_RULE_SETUP
#line 2337 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_CLOSE_KINDTEST;
  return token::STAR;
}
	YY_BREAK
case 406:
YY_RULE_SETUP
#line 2342 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_CLOSE_KINDTEST;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 407:
YY_RULE_SETUP
#line 2349 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* pop previous state on close paren */
/* --------------------------------- */
case 408:
YY_RULE_SETUP
#line 2355 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::RPAR;
}
	YY_BREAK
/* maintain KINDTEST */
/* ----------------- */
case 409:
/* rule 409 can match eol */
YY_RULE_SETUP
#line 2362 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_KINDTEST);
  return token::ELEMENT_LPAR;
}
	YY_BREAK
case 410:
/* rule 410 can match eol */
YY_RULE_SETUP
#line 2367 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (MODE_KINDTEST, MODE_KINDTEST);
  return token::SCHEMA_ELEMENT_LPAR;
}
	YY_BREAK
/* catch-all */
/* --------- */
case 411:
YY_RULE_SETUP
#line 2374 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 412:
/* rule 412 can match eol */
YY_RULE_SETUP
#line 2378 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_KINDTEST> */
/*______________________________________________________________________
   |
   | KINDTESTFORPI
   |
   | This state is similar to KINDTEST, but recognizes NCNames instead of
   | QNames.
   |______________________________________________________________________*/

/* pop previous state on close paren */
/* --------------------------------- */
case 413:
YY_RULE_SETUP
#line 2398 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::RPAR;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 414:
YY_RULE_SETUP
#line 2406 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* maintain KINDTESTFORPI */
/* ---------------------- */
case 415:
YY_RULE_SETUP
#line 2412 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (NCNAME, put_ncname(yytext, yyleng));
}
	YY_BREAK
case 416:
/* rule 416 can match eol */
YY_RULE_SETUP
#line 2416 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 417:
YY_RULE_SETUP
#line 2420 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 418:
/* rule 418 can match eol */
YY_RULE_SETUP
#line 2424 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_KINDTESTFORPI> */
/*______________________________________________________________________
   |
   | CLOSE_KINDTEST State
   |
   | This state is expecting to close a KINDTEST sequence.
   |______________________________________________________________________*/

/* pop previous state */
/* ------------------ */
case 419:
YY_RULE_SETUP
#line 2444 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::RPAR;
}
	YY_BREAK
/* transition to KINDTEST */
/* ---------------------- */
case 420:
YY_RULE_SETUP
#line 2451 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_KINDTEST;
  return token::COMMA;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 421:
YY_RULE_SETUP
#line 2458 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_OPERATOR);
  return token::LBRACE;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 422:
YY_RULE_SETUP
#line 2465 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* maintain CLOSE_KINDTEST */
/* ---------------------- */
case 423:
YY_RULE_SETUP
#line 2471 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::HOOK;
}
	YY_BREAK
case 424:
YY_RULE_SETUP
#line 2475 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 425:
/* rule 425 can match eol */
YY_RULE_SETUP
#line 2479 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_CLOSE_KINDTEST> */
/*______________________________________________________________________
   |
   | OCCURRENCE_INDICATOR State
   |
   | This special state is needed to distinguish occurrence indicators
   | that appear in the SequenceType production. For instance, compare
   | "foo instance of baz*" to "baz*foo". In the first case, the "*" is
   | interpreted as an occurrence indicator, and in the second case, it
   | must be interpreted as a multiplication operator. But, when in the
   | OCCURRENCEINDICATOR state, if anything else other than "?", "*",
   | "+", those symbols must be interpreted in the OPERATOR state. For
   | instance, this would occur with the expression "foo instance of baz
   | and $x", with the operator "and".
   |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 426:
YY_RULE_SETUP
#line 2507 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::OCCURS_HOOK;
}
	YY_BREAK
case 427:
YY_RULE_SETUP
#line 2512 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::OCCURS_STAR;
}
	YY_BREAK
case 428:
YY_RULE_SETUP
#line 2517 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::OCCURS_PLUS;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 429:
YY_RULE_SETUP
#line 2524 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* anything else: push back, goto OPERATOR */
/* --------------------------------------- */
case 430:
YY_RULE_SETUP
#line 2530 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yyless(0);
  BEGIN MODE_OPERATOR;
}
	YY_BREAK
case 431:
/* rule 431 can match eol */
YY_RULE_SETUP
#line 2535 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* MODE_OCCURRENCE_INDICATOR> */
/*______________________________________________________________________
   |
   | OPTION State
   |
   | This state is entered in the prolog for an option declaration, and
   | recognizes a QName that transits to a INITIAL state rather than a
   | OPERATOR state.
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 432:
YY_RULE_SETUP
#line 2557 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
case 433:
YY_RULE_SETUP
#line 2562 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 434:
/* rule 434 can match eol */
YY_RULE_SETUP
#line 2566 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_OPTION> */
/*______________________________________________________________________
   |
   | PRAGMA State
   |
   | This state is entered in a a pragma expression, and recognizes
   | a QName that transits to a PRAGMACONTENTS state rather than an
   | OPERATOR state.
   |______________________________________________________________________*/

/* transition to PRAGMACONTENTS */
/* ---------------------------- */
case 435:
/* rule 435 can match eol */
YY_RULE_SETUP
#line 2588 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PRAGMACONTENTS;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng,true,true));
}
	YY_BREAK
case 436:
YY_RULE_SETUP
#line 2593 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (QNAME_AND_END_PRAGMA, put(yytext, yyleng-2));
}
	YY_BREAK
case 437:
/* rule 437 can match eol */
YY_RULE_SETUP
#line 2598 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
case 438:
YY_RULE_SETUP
#line 2602 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* <MODE_PRAGMA> */
/*______________________________________________________________________
   |
   | PRAGMACONTENTS State
   |
   | This state recognizes characters in pragma content and transitions
   | out of this state when a '#)' pattern is recognized.
   |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 439:
/* rule 439 can match eol */
YY_RULE_SETUP
#line 2623 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (PRAGMA_LITERAL_AND_END, put(yytext, yyleng-2));
}
	YY_BREAK
case 440:
YY_RULE_SETUP
#line 2628 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* <MODE_PRAGMACONTENTS> */
/*______________________________________________________________________
   |
   | VARNAME State
   |
   | This state differentiates variable names from qualified names. This
   | allows only the pattern of a QName to be recognized when otherwise
   | ambiguities could occur.
   |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 441:
YY_RULE_SETUP
#line 2650 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (VARNAME, put_varname(yytext, yyleng));
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 442:
YY_RULE_SETUP
#line 2657 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 443:
YY_RULE_SETUP
#line 2661 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 444:
/* rule 444 can match eol */
YY_RULE_SETUP
#line 2665 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* <MODE_VARNAME> */
/*______________________________________________________________________
   |
   | START_TAG State
   |
   | This state allows attributes in the native XML syntax, and marks the
   | beginning of an element construction. Element constructors also push
   | the current state, popping it at the conclusion of an end tag. In
   | the START_TAG state, the string ">" is recognized as a token which
   | is associated with the transition to the original state.
   |______________________________________________________________________*/

/* transition to ELEMENT_CONTENT */
/* ----------------------------- */
case 445:
YY_RULE_SETUP
#line 2689 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_ELEMENT_CONTENT;
  return token::TAG_END;
}
	YY_BREAK
/* transition to QUOT_ATTRIBUTE_CONTENT */
/* ------------------------------------ */
case 446:
YY_RULE_SETUP
#line 2696 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_QUOTE_ATTRIBUTE_CONTENT;
  return token::QUOTE;
}
	YY_BREAK
/* transition to APOS_ATTRIBUTE_CONTENT */
/* ------------------------------------ */
case 447:
YY_RULE_SETUP
#line 2703 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_APOS_ATTRIBUTE_CONTENT;
  return token::APOS;
}
	YY_BREAK
/* transition to START_TAG */
/* ----------------------- */
case 448:
YY_RULE_SETUP
#line 2710 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_START_TAG;
  return token::EQUALS;
}
	YY_BREAK
/* pop previous state on exit */
/* -------------------------- */
case 449:
YY_RULE_SETUP
#line 2717 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::EMPTY_TAG_END;
}
	YY_BREAK
/* maintain START_TAG */
/* ------------------ */
case 450:
/* rule 450 can match eol */
YY_RULE_SETUP
#line 2724 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* continue lexing */
}
	YY_BREAK
case 451:
YY_RULE_SETUP
#line 2728 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
case 452:
YY_RULE_SETUP
#line 2732 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* <MODE_START_TAG> */
/*______________________________________________________________________
   |
   | ELEMENT_CONTENT State
   |
   | This state allows XML-like content, without these characters being
   | misinterpreted as expressions. The character "{" marks a transition
   | to the INITIAL state, i.e. the start of an embedded expression, and
   | the "}" character pops back to the ELEMENT_CONTENT state. To allow
   | curly braces to be used as character content, a double left or right
   | curly brace is interpreted as a single curly brace character. The
   | string "</" is interpreted as the beginning of an end tag, which is
   | associated with a transition to the END_TAG state.
   |______________________________________________________________________*/

/* transition to END_TAG */
/* --------------------- */
case 453:
YY_RULE_SETUP
#line 2759 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_END_TAG;
  return token::START_TAG_END;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 454:
YY_RULE_SETUP
#line 2766 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(INITIAL);
  return token::LBRACE;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 455:
YY_RULE_SETUP
#line 2773 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_XML_COMMENT);
  return token::XML_COMMENT_BEGIN;
}
	YY_BREAK
/* transition to PROCESSING_INSTRUCTION */
/* ------------------------------------ */
case 456:
YY_RULE_SETUP
#line 2780 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_PROCESSING_INSTRUCTION);
  return token::PI_BEGIN;
}
	YY_BREAK
/* transition to CDATA_SECTION */
/* --------------------------- */
case 457:
YY_RULE_SETUP
#line 2787 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_CDATA_SECTION);
  return token::CDATA_BEGIN;
}
	YY_BREAK
/* transition to START_TAG */
/* ----------------------- */
case 458:
YY_RULE_SETUP
#line 2794 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_START_TAG);
  return token::START_TAG;
}
	YY_BREAK
/* maintain ELEMENT_CONTENT */
/* ------------------------ */
case 459:
/* rule 459 can match eol */
YY_RULE_SETUP
#line 2801 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (ELEMENT_CONTENT, put(yytext, yyleng, true));
}
	YY_BREAK
case 460:
YY_RULE_SETUP
#line 2805 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (ELEMENT_CONTENT, put_entityref(yytext, yyleng));
}
	YY_BREAK
case 461:
YY_RULE_SETUP
#line 2809 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_STR_LIT (CHAR_REF_LITERAL, put_charref, yytext, yyleng);
}
	YY_BREAK
case 462:
YY_RULE_SETUP
#line 2813 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_LBRACE;
}
	YY_BREAK
case 463:
YY_RULE_SETUP
#line 2817 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_RBRACE;
}
	YY_BREAK
/* catch all else */
/* -------------- */
case 464:
YY_RULE_SETUP
#line 2823 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* MODE_ELEMENT_CONTENT> */
/*______________________________________________________________________
   |
   | END_TAG State
   |
   | When the end tag is terminated, the state is popped to the state
   | that was pushed at the start of the corresponding start tag.
   |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 465:
YY_RULE_SETUP
#line 2844 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::TAG_END;
}
	YY_BREAK
/* maintain END_TAG */
/* ---------------- */
case 466:
/* rule 466 can match eol */
YY_RULE_SETUP
#line 2851 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
   TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng, false, true));
}
	YY_BREAK
/* catch all else */
/* -------------- */
case 467:
YY_RULE_SETUP
#line 2857 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* <MODE_END_TAG> */
/*______________________________________________________________________
   |
   | XML_COMMENT State
   | The "<--" token marks the beginning of an XML Comment, and the "-->"
   | token marks the end. This allows no special interpretation of other
   | characters in this state.
   |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 468:
YY_RULE_SETUP
#line 2878 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::XML_COMMENT_END;
}
	YY_BREAK
/* maintain XML_COMMENT */
/* -------------------- */
case 469:
/* rule 469 can match eol */
YY_RULE_SETUP
#line 2885 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (XML_COMMENT_LITERAL, put(yytext, yyleng));
}
	YY_BREAK
case 470:
YY_RULE_SETUP
#line 2889 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
   return token::UNRECOGNIZED;
 }
	YY_BREAK
/* <MODE_XML_COMMENT> */
/*______________________________________________________________________
   |
   | EXPR_COMMENT State
   |
   | The "(:" token marks the beginning of an expression Comment, and
   | the ":)" token marks the end. This allows no special interpretation
   | of other characters in this state.
   |______________________________________________________________________*/

/* pop previous state */
/* ------------------ */
case 471:
YY_RULE_SETUP
#line 2910 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
}
	YY_BREAK
/* maintain EXPR_COMMENT */
/* --------------------- */
case 472:
YY_RULE_SETUP
#line 2916 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 473:
YY_RULE_SETUP
#line 2920 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  /* do nothing */
}
	YY_BREAK
case YY_STATE_EOF(MODE_EXPR_COMMENT):
#line 2924 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* <MODE_EXPR_COMMENT> */
/*______________________________________________________________________
   |
   | PROCESSING_INSTRUCTION State
   |
   | In this state, only patterns that are legal in a processing
   | instruction name are recognized.
   |______________________________________________________________________*/

/* transition to PROCESSING_INSTRUCTION_CONTENT */
/* -------------------------------------------- */
case 474:
/* rule 474 can match eol */
YY_RULE_SETUP
#line 2945 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PROCESSING_INSTRUCTION_CONTENT;
  /* continue lexing */
}
	YY_BREAK
/* pop previous state on exit */
/* -------------------------- */
case 475:
YY_RULE_SETUP
#line 2952 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  return token::PI_END;
}
	YY_BREAK
/* maintain PROCESSING_INSTRUCTION */
/* ------------------------------- */
case 476:
YY_RULE_SETUP
#line 2959 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PROCESSING_INSTRUCTION;
  TRY_SVAL_TOKEN (PI_TARGET_LITERAL, put(yytext, yyleng));
}
	YY_BREAK
/* <MODE_PROCESSING_INSTRUCTION> */
/*______________________________________________________________________
   |
   | PROCESSING_INSTRUCTION_CONTENT State
   |
   | In this state, only characters are that are legal in processing
   | instruction content are recognized.
   |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 477:
/* rule 477 can match eol */
YY_RULE_SETUP
#line 2981 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  TRY_SVAL_TOKEN (CHAR_LITERAL_AND_PI_END, put(yytext, yyleng-2));
}
	YY_BREAK
/* <MODE_PROCESSING_INSTRUCTION_CONTENT> */
/*______________________________________________________________________
   |
   | CDATA_SECTION State
   |
   | In this state, only lexemes that are legal in a CDATA section are
   | recognized.
   |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 478:
YY_RULE_SETUP
#line 3003 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_pop_state();
  TRY_SVAL_TOKEN (CHAR_LITERAL_AND_CDATA_END, put(yytext, yyleng-3));
}
	YY_BREAK
/* maintain CDATA_SECTION */
/* ---------------------- */
case 479:
/* rule 479 can match eol */
YY_RULE_SETUP
#line 3010 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yymore();
}
	YY_BREAK
/* <MODE_CDATA_SECTION> */
/*______________________________________________________________________
   |
   | QUOTE_ATTRIBUTE_CONTENT State
   |
   | This state allows content legal for attributes. The character "{"
   | marks a transition to the INITIAL state, i.e. the start of an
   | embedded expression, and the "}" character pops back to the original
   | state.  To allow curly braces to be used as character content, a
   | double left or right curly brace is interpreted as a single curly
   | brace character. This state is the same as APOS_ATTRIBUTE_CONTENT,
   | except that apostrophes are allowed without escaping, and an
   | unescaped quote marks the end of the state.
   |______________________________________________________________________*/

/* transition to START_TAG */
/* ----------------------- */
case 480:
YY_RULE_SETUP
#line 3037 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_START_TAG;
  return token::QUOTE;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 481:
YY_RULE_SETUP
#line 3044 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  yy_push_state(INITIAL);
  return token::LBRACE;
}
	YY_BREAK
/* maintain QUOTE_ATTRIBUTE_CONTENT */
/* -------------------------------- */
case 482:
YY_RULE_SETUP
#line 3051 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ESCAPE_QUOTE;
}
	YY_BREAK
case 483:
/* rule 483 can match eol */
YY_RULE_SETUP
#line 3055 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (QUOTE_ATTR_CONTENT, put(yytext, yyleng, true));
}
	YY_BREAK
case 484:
YY_RULE_SETUP
#line 3059 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (QUOTE_ATTR_CONTENT, put_entityref(yytext, yyleng));
}
	YY_BREAK
case 485:
YY_RULE_SETUP
#line 3063 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_STR_LIT (CHAR_REF_LITERAL, put_charref, yytext, yyleng);
}
	YY_BREAK
case 486:
YY_RULE_SETUP
#line 3067 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_LBRACE;
}
	YY_BREAK
case 487:
YY_RULE_SETUP
#line 3071 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_RBRACE;
}
	YY_BREAK
/* <MODE_QUOTE_ATTRIBUTE_CONTENT> */
/*______________________________________________________________________
   |
   | APOS_ATTRIBUTE_CONTENT State
   |
   | This state is the same as QUOT_ATTRIBUTE_CONTENT, except that
   | quotes are allowed, and an unescaped apostrophe marks the end of
   | the state.
   |______________________________________________________________________*/

/* transition to START_TAG */
/* ----------------------- */
case 488:
YY_RULE_SETUP
#line 3093 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_START_TAG;
  return token::APOS;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 489:
YY_RULE_SETUP
#line 3100 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  PUSH_BEGIN (INITIAL, MODE_APOS_ATTRIBUTE_CONTENT);
  return token::LBRACE;
}
	YY_BREAK
/* maintain APOS_ATTRIBUTE_CONTENT */
/* ------------------------------- */
case 490:
YY_RULE_SETUP
#line 3107 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::ESCAPE_APOS;
}
	YY_BREAK
case 491:
/* rule 491 can match eol */
YY_RULE_SETUP
#line 3111 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (APOS_ATTR_CONTENT, put(yytext, yyleng, true));
}
	YY_BREAK
case 492:
YY_RULE_SETUP
#line 3115 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (APOS_ATTR_CONTENT, put_entityref(yytext, yyleng));
}
	YY_BREAK
case 493:
YY_RULE_SETUP
#line 3119 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  TRY_STR_LIT (CHAR_REF_LITERAL, put_charref, yytext, yyleng);
}
	YY_BREAK
case 494:
YY_RULE_SETUP
#line 3123 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_LBRACE;
}
	YY_BREAK
case 495:
YY_RULE_SETUP
#line 3127 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_RBRACE;
}
	YY_BREAK
/* <MODE_APOS_ATTRIBUTE_CONTENT> */
case 496:
YY_RULE_SETUP
#line 3134 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
return token::UNRECOGNIZED;
	YY_BREAK
case 497:
YY_RULE_SETUP
#line 3136 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"
ECHO;
	YY_BREAK
#line 12667 "xquery_scanner.yy.cpp"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(MODE_APOS_ATTRIBUTE_CONTENT):
case YY_STATE_EOF(MODE_CDATA_SECTION):
case YY_STATE_EOF(MODE_CLOSE_KINDTEST):
case YY_STATE_EOF(MODE_DECLAREORDERING):
case YY_STATE_EOF(MODE_ELEMENT_CONTENT):
case YY_STATE_EOF(MODE_END_TAG):
case YY_STATE_EOF(MODE_ITEMTYPE):
case YY_STATE_EOF(MODE_KINDTEST):
case YY_STATE_EOF(MODE_KINDTESTFORPI):
case YY_STATE_EOF(MODE_NAMESPACEDECL):
case YY_STATE_EOF(MODE_NAMESPACEKEYWORD):
case YY_STATE_EOF(MODE_OCCURRENCE_INDICATOR):
case YY_STATE_EOF(MODE_OPERATOR):
case YY_STATE_EOF(MODE_OPTION):
case YY_STATE_EOF(MODE_PRAGMA):
case YY_STATE_EOF(MODE_PRAGMACONTENTS):
case YY_STATE_EOF(MODE_PROCESSING_INSTRUCTION_CTOR):
case YY_STATE_EOF(MODE_PROCESSING_INSTRUCTION):
case YY_STATE_EOF(MODE_PROCESSING_INSTRUCTION_CONTENT):
case YY_STATE_EOF(MODE_QUOTE_ATTRIBUTE_CONTENT):
case YY_STATE_EOF(MODE_SINGLETYPE):
case YY_STATE_EOF(MODE_START_TAG):
case YY_STATE_EOF(MODE_URITOOPERATOR):
case YY_STATE_EOF(MODE_VARNAME):
case YY_STATE_EOF(MODE_XMLSPACE_DECL):
case YY_STATE_EOF(MODE_XML_COMMENT):
case YY_STATE_EOF(MODE_XQUERY_VERSION):
case YY_STATE_EOF(MODE_DECLAREREVALIDATION):
case YY_STATE_EOF(MODE_CATCH):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = (yy_last_accepting_cpos);
				yy_current_state = (yy_last_accepting_state);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of yylex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */

yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout )
{
	yyin = arg_yyin;
	yyout = arg_yyout;
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

    (yy_buffer_stack) = 0;
    (yy_buffer_stack_top) = 0;
    (yy_buffer_stack_max) = 0;

	yy_state_buf = 0;

}

void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if ( new_in )
		{
		yy_delete_buffer( YY_CURRENT_BUFFER );
		yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );
		}

	if ( new_out )
		yyout = new_out;
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin->eof() || yyin->fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin->get( buf[0] );

	if ( yyin->eof() )
		return 0;

	if ( yyin->bad() )
		return -1;

	return 1;

#else
	(void) yyin->read( buf, max_size );

	if ( yyin->bad() )
		return -1;
	else
		return yyin->gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout->write( buf, size );
}
/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
int yyFlexLexer::yy_get_next_buffer()
/* %endif */
{
    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = (yytext_ptr);
	register int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					Zorbarealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), (size_t) num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_get_previous_state()
/* %endif */
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    
/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 3609 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
/* %endif */
{
	register int yy_is_jam;
    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */
	register char *yy_cp = (yy_c_buf_p);

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 3609 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 3608);

	return yy_is_jam ? 0 : yy_current_state;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyunput( int c, register char* yy_bp)
/* %endif */
{
	register char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = (yy_n_chars) + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

    if ( c == '\n' ){
        --yylineno;
    }

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yyinput()
/* %endif */
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return EOF;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

/* %% [19.0] update BOL and yylineno */
	if ( c == '\n' )
		   
    yylineno++;
;

	return c;
}
/* %if-c-only */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyrestart( std::istream* input_file )
/* %endif */
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
/* %endif */
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_load_buffer_state()
/* %endif */
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) Zorbaalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) Zorbaalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		Zorbafree((void *) b->yy_ch_buf  );

	Zorbafree((void *) b  );
}

/* %if-c-only */
/* %endif */

/* %if-c++-only */

extern "C" int isatty (int );

/* %endif */

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream* file )
/* %endif */

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_is_interactive = 0;
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
/* %endif */
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypop_buffer_state (void)
/* %endif */
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yyensure_buffer_stack(void)
/* %endif */
{
	int num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (struct yy_buffer_state**)Zorbaalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)Zorbarealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_push_state( int new_state )
/* %endif */
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) Zorbaalloc(new_size  );

		else
			(yy_start_stack) = (int *) Zorbarealloc((void *) (yy_start_stack),new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(new_state);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_pop_state()
/* %endif */
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yy_top_state()
/* %endif */
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::LexerError( yyconst char msg[] )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif */

/* %if-reentrant */
/* %if-bison-bridge */
/* %endif */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-or-c++ */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
yyFlexLexer::~yyFlexLexer()
/* %endif */
{
    
    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		yy_delete_buffer( YY_CURRENT_BUFFER  );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		yypop_buffer_state();
	}

	/* Destroy the stack itself. */
	Zorbafree((yy_buffer_stack) );
	(yy_buffer_stack) = NULL;

    /* Destroy the start condition stack. */
        Zorbafree((yy_start_stack)  );
        (yy_start_stack) = NULL;

/* %if-c++-only */
	delete [] (yy_state_buf);
	Zorbafree((yy_start_stack)  );
/* %endif */

/* %if-c-only */
/* %if-reentrant */
/* %endif */
/* %endif */
}
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *Zorbaalloc (yy_size_t  size )
{
	return (void *) malloc( size );
}

void *Zorbarealloc  (void * ptr, yy_size_t  size )
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void Zorbafree (void * ptr )
{
	free( (char *) ptr );	/* see Zorbarealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 3136 "/home/dagraf/Work/28msec/zorba3/xquery/src/compiler/parser/xquery_scanner.l"




/*
  Finally, because the scanner related driver's member function depend
  on the scanner's data, it is simpler to implement them in this file.
*/

std::string start_state(int state)
{
  switch (state) {
    case INITIAL: return "INITIAL";
    case MODE_APOS_ATTRIBUTE_CONTENT: return "MODE_APOS_ATTRIBUTE_CONTENT";
    case MODE_CDATA_SECTION: return "MODE_CDATA_SECTION";
    case MODE_CLOSE_KINDTEST: return "MODE_CLOSE_KINDTEST";
    case MODE_DECLAREORDERING: return "MODE_DECLAREORDERING";
    case MODE_ELEMENT_CONTENT: return "MODE_ELEMENT_CONTENT";
    case MODE_END_TAG: return "MODE_END_TAG";
    case MODE_EXPR_COMMENT: return "MODE_EXPR_COMMENT";
    case MODE_ITEMTYPE: return "MODE_ITEMTYPE";
    case MODE_KINDTEST: return "MODE_KINDTEST";
    case MODE_KINDTESTFORPI: return "MODE_KINDTESTFORPI";
    case MODE_NAMESPACEDECL: return "MODE_NAMESPACEDECL";
    case MODE_NAMESPACEKEYWORD: return "MODE_NAMESPACEKEYWORD";
    case MODE_OCCURRENCE_INDICATOR: return "MODE_OCCURRENCE_INDICATOR";
    case MODE_OPERATOR: return "MODE_OPERATOR";
    case MODE_OPTION: return "MODE_OPTION";
    case MODE_PRAGMA: return "MODE_PRAGMA";
    case MODE_PRAGMACONTENTS: return "MODE_PRAGMACONTENTS";
    case MODE_PROCESSING_INSTRUCTION: return "MODE_PROCESSING_INSTRUCTION";
    case MODE_PROCESSING_INSTRUCTION_CONTENT: return "MODE_PROCESSING_INSTRUCTION_CONTENT";
    case MODE_QUOTE_ATTRIBUTE_CONTENT: return "MODE_QUOTE_ATTRIBUTE_CONTENT";
    case MODE_SINGLETYPE: return "MODE_SINGLETYPE";
    case MODE_START_TAG: return "MODE_START_TAG";
    case MODE_URITOOPERATOR: return "MODE_URITOOPERATOR";
    case MODE_VARNAME: return "MODE_VARNAME";
    case MODE_XMLSPACE_DECL: return "MODE_XMLSPACE_DECL";
    case MODE_XML_COMMENT: return "MODE_XML_COMMENT";
    case MODE_XQUERY_VERSION: return "MODE_XQUERY_VERSION";
    default: return "Something's drastically wrong here, unrecognized start state!\n";
  }
}


namespace zorba {

xquery_scanner::xquery_scanner(
  xquery_driver* aDriver,
  std::istream* i,
  std::ostream* o)
: ZorbaFlexLexer(i, o), theDriver(aDriver)
{}

xquery_scanner::~xquery_scanner() {}


void xquery_scanner::set_yy_flex_debug(bool aBool)
{
  yy_flex_debug = aBool;
}
}

#ifdef yylex
#undef yylex
#endif

int ZorbaFlexLexer::yylex()
{
  std::cerr << "in ZorbaFlexLexer::yylex() !" << std::endl;
  return 0;
}

