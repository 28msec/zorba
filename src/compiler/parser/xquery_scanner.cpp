#line 2 "xquery_scanner.yy.cpp"

#line 4 "xquery_scanner.yy.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */
/* %ok-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 34
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer ZorbaFlexLexer
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;
#endif /* ! C99 */

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! FLEXINT_H */

/* %endif */

/* %if-c++-only */
/* begin standard C++ headers. */
#include <iostream> 
#include <errno.h>
#include <cstdlib>
#include <cstring>
/* end standard C++ headers. */
/* %endif */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* %not-for-header */

/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
/* %ok-for-header */

/* %if-reentrant */
/* %endif */

/* %if-not-reentrant */

/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#define YY_BUF_SIZE 16384
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

/* %if-not-reentrant */
extern int yyleng;
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 * Given that the standard has decreed that size_t exists since 1989,
 * I guess we can afford to depend on it. Manoj.
 */

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
/* %endif */

/* %if-c++-only */
	std::istream* yy_input_file;
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* %if-c-only Standard (non-C++) definition */
/* %if-not-reentrant */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
/* %endif */

void *Zorbaalloc (yy_size_t  );
void *Zorbarealloc (void *,yy_size_t  );
void Zorbafree (void *  );

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

typedef unsigned char YY_CHAR;

#define yytext_ptr yytext

#include "compiler/parser/FlexLexer.h"

int yyFlexLexer::yywrap() { return 1; }

/* %if-c-only Standard (non-C++) definition */
/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	(yytext_ptr) -= (yy_more_len); \
	yyleng = (size_t) (yy_cp - (yytext_ptr)); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	(yy_c_buf_p) = yy_cp;

/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 508
#define YY_END_OF_BUFFER 509
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_acclist[2283] =
    {   0,
      153,  153,  436,  436,  414,  414,  423,  423,  429,  429,
      325,  325,  337,  337,  442,  442,  312,  312,  445,  445,
      448,  448,  175,  175,  346,  346,  461,  461,  455,  455,
      342,  342,  480,  480,  509,  154,  507,  508,  153,  507,
      508,  153,  508,  153,  154,  507,  508,  104,  154,  507,
      508,  154,  507,  508,   80,  154,  507,  508,  154,  507,
      508,  154,  507,  508,   26,  154,  507,  508,   63,  154,
      507,  508,   65,  154,  507,  508,   38,  154,  507,  508,
       25,  154,  507,  508,   37,  154,  507,  508,   70,  154,
      507,  508,   39,  154,  507,  508,   56,   58,   60,  154,

      507,  508,   24,  154,  507,  508,   91,  154,  507,  508,
       54,  154,  507,  508,   62,  154,  507,  508,   62,  154,
      507,  508,   62,  154,  507,  508,   62,  154,  507,  508,
       62,  154,  507,  508,   62,  154,  507,  508,   62,  154,
      507,  508,   62,  154,  507,  508,   62,  154,  507,  508,
       62,  154,  507,  508,   62,  154,  507,  508,   62,  154,
      507,  508,   62,  154,  507,  508,   62,  154,  507,  508,
       62,  154,  507,  508,   62,  154,  507,  508,   62,  154,
      507,  508,   62,  154,  507,  508,   62,  154,  507,  508,
       62,  154,  507,  508,   21,  154,  507,  508,  154,  507,

      508,   99,  154,  507,  508,  507,  508,  502,  507,  508,
      502,  508,  507,  508,  499,  507,  508,  500,  507,  508,
      507,  508,  490,  507,  508,  490,  508,  490,  507,  508,
      435,  507,  508,  436,  507,  508,  436,  508,  435,  436,
      507,  508,  435,  507,  508,  430,  435,  507,  508,  431,
      435,  507,  508,  434,  435,  507,  508,  432,  435,  507,
      508,  508,  507,  508,  507,  508,  475,  507,  508,  470,
      507,  508,  470,  508,  470,  475,  507,  508,  475,  507,
      508,  469,  475,  507,  508,  465,  475,  507,  508,  475,
      507,  508,  478,  507,  508,  476,  478,  507,  508,  477,

      478,  507,  508,  484,  507,  508,  484,  508,  484,  507,
      508,  484,  507,  508,  413,  507,  508,  414,  507,  508,
      414,  508,  413,  414,  507,  508,  413,  507,  508,  347,
      413,  507,  508,  387,  413,  507,  508,  410,  413,  507,
      508,  369,  413,  507,  508,  391,  413,  507,  508,  413,
      507,  508,  361,  413,  507,  508,  390,  413,  507,  508,
      371,  413,  507,  508,  381,  413,  507,  508,  412,  413,
      507,  508,  386,  413,  507,  508,  412,  413,  507,  508,
      412,  413,  507,  508,  412,  413,  507,  508,  412,  413,
      507,  508,  412,  413,  507,  508,  412,  413,  507,  508,

      412,  413,  507,  508,  412,  413,  507,  508,  412,  413,
      507,  508,  412,  413,  507,  508,  412,  413,  507,  508,
      412,  413,  507,  508,  412,  413,  507,  508,  412,  413,
      507,  508,  412,  413,  507,  508,  412,  413,  507,  508,
      403,  413,  507,  508,  422,  507,  508,  423,  507,  508,
      423,  508,  422,  423,  507,  508,  422,  507,  508,  419,
      422,  507,  508,  416,  422,  507,  508,  417,  422,  507,
      508,  417,  422,  507,  508,  417,  422,  507,  508,  415,
      422,  507,  508,  428,  507,  508,  429,  507,  508,  429,
      508,  428,  429,  507,  508,  428,  507,  508,  428,  507,

      508,  428,  507,  508,  424,  428,  507,  508,  426,  428,
      507,  508,  324,  507,  508,  325,  507,  508,  325,  508,
      324,  325,  507,  508,  324,  507,  508,  324,  507,  508,
      324,  507,  508,  320,  324,  507,  508,  318,  324,  507,
      508,  322,  324,  507,  508,  323,  324,  507,  508,  323,
      324,  507,  508,  336,  507,  508,  337,  507,  508,  337,
      508,  336,  337,  507,  508,  336,  507,  508,  336,  507,
      508,  336,  507,  508,  335,  336,  507,  508,  336,  507,
      508,  336,  507,  508,  336,  507,  508,  336,  507,  508,
      441,  507,  508,  442,  507,  508,  442,  508,  441,  442,

      507,  508,  441,  507,  508,  438,  441,  507,  508,  439,
      441,  507,  508,  437,  441,  507,  508,  311,  507,  508,
      312,  507,  508,  312,  508,  311,  312,  507,  508,  261,
      311,  507,  508,  311,  507,  508,  241,  311,  507,  508,
      311,  507,  508,  311,  507,  508,  182,  311,  507,  508,
      250,  311,  507,  508,  214,  311,  507,  508,  220,  311,
      507,  508,  191,  311,  507,  508,  212,  311,  507,  508,
      224,  311,  507,  508,  311,  507,  508,  183,  311,  507,
      508,  211,  311,  507,  508,  193,  311,  507,  508,  203,
      311,  507,  508,  251,  311,  507,  508,  208,  311,  507,

      508,  257,  311,  507,  508,  311,  507,  508,  311,  507,
      508,  311,  507,  508,  311,  507,  508,  311,  507,  508,
      311,  507,  508,  311,  507,  508,  311,  507,  508,  311,
      507,  508,  311,  507,  508,  311,  507,  508,  311,  507,
      508,  311,  507,  508,  311,  507,  508,  311,  507,  508,
      311,  507,  508,  311,  507,  508,  311,  507,  508,  181,
      311,  507,  508,  229,  311,  507,  508,  249,  311,  507,
      508,  444,  507,  508,  445,  507,  508,  445,  508,  444,
      445,  507,  508,  443,  444,  507,  508,  449,  507,  508,
      448,  507,  508,  448,  508,  448,  449,  507,  508,  449,

      507,  508,  451,  507,  508,  507,  508,  508,  451,  507,
      508,  451,  507,  508,  450,  451,  507,  508,  175,  507,
      508,  175,  508,  174,  507,  508,  173,  507,  508,  485,
      507,  508,  485,  508,  507,  508,  487,  507,  508,  507,
      508,  507,  508,  508,  507,  508,  494,  507,  508,  494,
      508,  491,  507,  508,  507,  508,  492,  507,  508,  507,
      508,  345,  507,  508,  346,  507,  508,  346,  508,  345,
      346,  507,  508,  345,  507,  508,  343,  345,  507,  508,
      463,  507,  508,  461,  507,  508,  461,  508,  461,  463,
      507,  508,  457,  463,  507,  508,  458,  463,  507,  508,

      463,  507,  508,  459,  463,  507,  508,  456,  463,  507,
      508,  462,  463,  507,  508,  507,  508,  508,  507,  508,
      507,  508,  454,  507,  508,  455,  507,  508,  455,  508,
      454,  455,  507,  508,  454,  507,  508,  452,  454,  507,
      508,  341,  507,  508,  342,  507,  508,  342,  508,  341,
      342,  507,  508,  341,  507,  508,  341,  507,  508,  341,
      507,  508,  481,  507,  508,  480,  507,  508,  480,  508,
      480,  481,  507,  508,  481,  507,  508,  316,  507,  508,
      316,  508,  507,  508,  507,  508,  507,  508,  313,  507,
      508,  507,  508,  507,  508,  507,  508,  507,  508,  508,

      168,  507,  508,  170,  507,  508,  169,  507,  508,  153,
       66,  103,   66,   96,   93,   69,   58,   60,   40,   41,
       58,   60,   56,   58,   60,   55,   57,   59,   55,   57,
       59,   90,   88,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,  105,  502,  501,  505,  506,  436,
      433,  470,  464,  467,  473,  474,  477,  477,  483,  482,

      414,  393,  360,  349,  368,  389,  388,  379,  380,  412,
      412,  412,  412,  412,  412,  412,  412,  412,  412,  412,
      412,  412,  412,  412,  412,  412,  412,  412,  412,  412,
      412,  412,  412,  412,  412,  412,  412,  412,  412,  412,
      412,  412,  412,  412,  412,  412,  423,  418,  417,  417,
      417,  429,  427,  427,  425,  426,  325,  319,  319,  317,
      323,  323,  337,  327,  327,  331,  442,  440,  312,  215,
      258,  260,  258,  310,  246,  225,  226,  190,  210,  209,
      201,  202,  262,  445,  443,  448,  446,  450,  450,  175,
      174,  485,  487,  486,  488,  494,  493,  497,  498,  346,

      344,  343,  461,  460,  462,  326,  326,  455,  453,  452,
      342,  340,  480,  480,  316,  314,  314,  168,  170,  169,
      169,   64,   57,   59,   57,   59,   58,   60,   60,   61,
       62,   62,   62,   62,   62,  101,   62,  101,  101,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   27,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,

       62,   62,   62,  489,  477,  412,  412,  411,  411,  412,
      411,  367,  367,  367,  367,  412,  367,  412,  412,  412,
      412,  412,  412,  412,  412,  373,  373,  412,  373,  412,
      412,  412,  374,  374,  412,  374,  412,  375,  375,  412,
      375,  412,  384,  384,  412,  384,  412,  412,  385,  385,
      412,  385,  412,  376,  376,  412,  376,  377,  377,  412,
      377,  412,  378,  378,  412,  378,  412,  397,  397,  412,
      397,  412,  412,  412,  412,  412,  412,  412,  412,  401,
      401,  412,  401,  412,  412,  412,  417,  417,  417,  321,
      321,  323,  240,  240,  240,  188,  188,  188,  195,  196,

      197,  206,  207,  198,  199,  200,  219,  227,  443,  447,
      343,  462,  452,  480,  479,  172,  171,  169,   64,   59,
       87,   62,   62,  107,  107,  107,   62,  107,  107,   62,
      109,  109,  109,   62,  109,  109,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,  102,   62,  102,  102,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,

       62,  504,  503,  472,  471,  466,  477,  412,  366,  366,
      412,  366,  412,  412,  412,  412,  370,  370,  412,  370,
      412,  412,  412,  412,  412,  412,  412,  412,  412,  412,
      412,  412,  392,  392,  412,  392,  412,  412,  412,  412,
      412,  412,  412,  412,  412,  412,  412,  412,  417,  417,
      417,  271,  271,  271,  187,  273,  273,  273,  192,  213,
      443,  496,  495,  343,  462,  452,  179,  172,  169,   62,
       62,   98,   98,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,    8,   62,
       62,   62,   81,  124,   62,  124,  124,   62,   62,  163,

       62,  163,  163,   62,   82,   62,   62,   62,   62,   34,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
      132,   62,  132,  132,   62,   62,   62,   33,   14,   62,
       62,   62,   62,   62,   62,   62,   62,   62,  166,  166,
      166,   62,  166,  166,   62,   62,   62,  364,  364,  412,
      409,  409,  412,  409,  412,  412,  412,  412,  363,  363,
      412,  363,  412,  399,  412,  412,  412,  382,  382,  412,
      382,  412,  412,  356,  412,  412,  412,  412,  412,  412,
      355,  362,  362,  412,  362,  412,  412,  412,  417,  417,
      237,  237,  237,  185,  222,  242,  268,  204,  243,  290,

      184,  166,  166,  180,  164,   62,  164,  164,   62,   62,
       62,   62,   62,  162,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62,   62,   62,  133,   62,  133,  133,   53,   62,   84,
      136,   62,  136,  136,   62,   62,   62,   62,   62,   62,
       62,  152,   62,  152,  152,   62,  412,  412,  412,  412,
      412,  412,  412,  412,  412,  412,  359,  412,  412,  412,
      412,  412,  402,  402,  412,  402,  404,  404,  412,  404,
      417,  417,  247,  189,  291,  232,  294,  228,  230,  309,

      339,   62,  111,   62,  165,   62,  165,  165,   45,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   85,   62,
       62,   62,  126,   62,  126,  126,   62,  167,   62,  167,
      167,  128,   62,  128,  128,   62,   62,  130,   62,  130,
      130,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       83,   62,  138,   62,  138,  138,    4,  139,   62,  139,
      139,   62,  412,  412,  412,  412,  412,  412,  372,  372,
      412,  372,  412,  412,  412,  412,  398,  398,  412,  398,
      412,  412,  417,  417,  275,  194,  285,  269,  288,  221,
      244,  296,  270,  178,   62,  113,   62,   32,   17,   62,

       62,   62,   62,   62,   62,   28,    9,  123,   62,  123,
      123,   62,   62,   62,   22,   62,   50,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,  176,  412,  406,
      412,  354,  412,  350,  412,  412,  412,  412,  412,  412,
      412,  412,  420,  417,  329,  265,  234,  256,  267,   89,
       62,  110,  112,  114,   62,   62,   62,   62,  121,   62,
      121,  121,   62,   13,   62,  125,   62,  125,  125,   62,
       62,   62,   62,   62,   62,   62,  134,   62,  134,  134,
       62,   62,   62,   62,    5,  468,  412,  412,  412,  365,
      365,  412,  365,  394,  412,  395,  412,  412,  412,  412,

      408,  417,  333,  274,  264,  276,  266,  186,  216,  284,
      217,  231,  292,  236,  338,  315,  108,   62,   43,   29,
       10,    2,   62,   62,  120,   62,  120,  120,   62,   12,
        1,   62,  127,   62,  127,  127,  106,  129,   62,  129,
      129,   62,   62,   62,   62,   62,  135,   62,  135,  135,
       62,   23,  137,   62,  137,  137,  177,  351,  412,  412,
      383,  383,  412,  383,  412,  400,  400,  412,  400,  412,
      412,  417,  328,  272,  254,  248,  282,  205,  286,  263,
      287,  223,  293,  295,   62,   44,   62,   62,   62,   49,
       62,   52,   62,   62,   62,   62,    7,  412,  412,  412,

      412,  412,  417,  330,  255,  259,  245,   62,   11,  157,
       62,   47,   62,   62,  155,   62,   62,   62,  161,   62,
       62,    6,  405,  412,  412,  407,  412,  412,  412,  417,
      334,  233,  253,  235,   62,    3,  158,   62,   62,   62,
      156,   62,   62,  131,   62,  131,  131,  159,   62,   62,
      412,  412,  412,  412,  412,  417,  239,  289,   62,   62,
       35,   62,   78,   77,   62,   62,   62,   62,  148,  357,
      412,  412,  412,  412,  417,  238,  305,   62,  116,   97,
       62,  122,   62,   62,   62,   62,   30,  150,  151,   95,
      412,  412,  352,  421,  278,  252,  283,  307,  308,   62,

       62,   62,   62,   62,   62,  147,  149,  140,  348,  412,
      412,  396,  332,  218,  304,  306,  297,  115,   74,  117,
       18,   94,   62,   62,   73,   62,   62,   31,  142,  412,
      353,  277,  279,  299,   42,   72,   86,   62,   62,  144,
      145,  412,  301,  302,   48,   51,   62,  141,  143,  412,
      298,  300,   46,  119,   62,  412,   67,  100,   62,  412,
      281,   68,   62,  160,  412,   92,  118,16399,   36,   16,
      358,  280,   79,   75, 8207,  146,  303,   76,   71,   19,
    16399,   20
    } ;

static yyconst flex_int16_t yy_accept[3777] =
    {   0,
        1,    2,    3,    3,    3,    3,    3,    4,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    6,    7,    8,
        9,   10,   11,   12,   13,   14,   15,   16,   17,   18,
       19,   20,   21,   22,   23,   23,   23,   24,   25,   25,
       25,   25,   25,   25,   25,   26,   27,   28,   29,   29,
       29,   30,   31,   32,   33,   34,   35,   35,   35,   35,
       35,   35,   35,   36,   39,   42,   44,   48,   52,   55,
       59,   62,   65,   69,   73,   77,   81,   85,   89,   93,
       97,  103,  107,  111,  115,  119,  123,  127,  131,  135,
      139,  143,  147,  151,  155,  159,  163,  167,  171,  175,

      179,  183,  187,  191,  195,  199,  202,  206,  208,  211,
      213,  215,  218,  221,  223,  226,  228,  231,  234,  237,
      239,  243,  246,  250,  254,  258,  262,  263,  265,  267,
      270,  273,  275,  279,  282,  286,  290,  293,  296,  300,
      304,  307,  309,  312,  315,  318,  321,  323,  327,  330,
      334,  338,  342,  346,  350,  353,  357,  361,  365,  369,
      373,  377,  381,  385,  389,  393,  397,  401,  405,  409,
      413,  417,  421,  425,  429,  433,  437,  441,  445,  448,
      451,  453,  457,  460,  464,  468,  472,  476,  480,  484,
      487,  490,  492,  496,  499,  502,  505,  509,  513,  516,

      519,  521,  525,  528,  531,  534,  538,  542,  546,  550,
      554,  557,  560,  562,  566,  569,  572,  575,  579,  582,
      585,  588,  591,  594,  597,  599,  603,  606,  610,  614,
      618,  621,  624,  626,  630,  634,  637,  641,  644,  647,
      651,  655,  659,  663,  667,  671,  675,  678,  682,  686,
      690,  694,  698,  702,  706,  709,  712,  715,  718,  721,
      724,  727,  730,  733,  736,  739,  742,  745,  748,  751,
      754,  757,  760,  764,  768,  772,  775,  778,  780,  784,
      788,  791,  794,  796,  800,  803,  806,  808,  809,  812,
      815,  819,  822,  824,  827,  830,  833,  835,  837,  840,

      842,  844,  845,  847,  850,  852,  855,  857,  860,  862,
      865,  868,  870,  874,  877,  881,  884,  887,  889,  893,
      897,  901,  904,  908,  912,  916,  918,  919,  921,  923,
      926,  929,  931,  935,  938,  942,  945,  948,  950,  954,
      957,  960,  963,  966,  969,  971,  975,  978,  981,  983,
      985,  987,  989,  992,  994,  996,  998, 1000, 1001, 1004,
     1007, 1010, 1011, 1011, 1012, 1012, 1013, 1013, 1013, 1014,
     1015, 1016, 1016, 1017, 1019, 1020, 1021, 1023, 1026, 1029,
     1032, 1033, 1033, 1033, 1034, 1035, 1035, 1036, 1037, 1038,
     1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,

     1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
     1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
     1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
     1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1087,
     1087, 1087, 1087, 1087, 1087, 1088, 1089, 1090, 1090, 1091,
     1092, 1092, 1092, 1093, 1093, 1093, 1093, 1093, 1093, 1093,
     1093, 1094, 1095, 1096, 1097, 1098, 1099, 1099, 1100, 1101,
     1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
     1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
     1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,

     1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
     1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
     1150, 1151, 1152, 1153, 1153, 1154, 1154, 1154, 1154, 1155,
     1156, 1157, 1158, 1158, 1159, 1159, 1159, 1159, 1160, 1161,
     1162, 1163, 1164, 1164, 1165, 1165, 1165, 1165, 1166, 1167,
     1167, 1167, 1167, 1167, 1167, 1168, 1169, 1170, 1171, 1171,
     1172, 1172, 1173, 1173, 1173, 1174, 1175, 1176, 1177, 1178,
     1179, 1180, 1181, 1182, 1183, 1183, 1183, 1183, 1183, 1183,
     1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183,
     1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183,

     1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183,
     1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183,
     1183, 1183, 1183, 1183, 1183, 1183, 1183, 1183, 1184, 1185,
     1186, 1186, 1187, 1188, 1188, 1188, 1188, 1188, 1188, 1189,
     1189, 1190, 1191, 1192, 1193, 1193, 1193, 1194, 1195, 1195,
     1195, 1196, 1197, 1198, 1198, 1198, 1198, 1198, 1198, 1198,
     1199, 1200, 1201, 1202, 1203, 1203, 1204, 1205, 1206, 1206,
     1206, 1206, 1206, 1206, 1207, 1207, 1207, 1207, 1208, 1209,
     1210, 1211, 1211, 1212, 1213, 1213, 1213, 1214, 1214, 1215,
     1215, 1216, 1216, 1216, 1217, 1217, 1217, 1217, 1218, 1218,

     1218, 1218, 1218, 1218, 1218, 1219, 1220, 1221, 1221, 1222,
     1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1222, 1222, 1223, 1225, 1227, 1229, 1229, 1230, 1230,
     1230, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239,
     1240, 1240, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
     1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
     1258, 1259, 1260, 1261, 1262, 1263, 1264, 1264, 1265, 1266,
     1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
     1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
     1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,

     1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1304, 1304,
     1304, 1304, 1304, 1304, 1304, 1305, 1305, 1305, 1305, 1305,
     1305, 1305, 1305, 1305, 1305, 1305, 1305, 1306, 1307, 1308,
     1309, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320,
     1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331,
     1332, 1333, 1334, 1336, 1337, 1338, 1339, 1341, 1342, 1343,
     1344, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355,
     1357, 1358, 1359, 1361, 1362, 1363, 1364, 1366, 1367, 1368,
     1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
     1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,

     1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390,
     1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390, 1390,
     1390, 1390, 1390, 1390, 1391, 1393, 1393, 1393, 1393, 1393,
     1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393,
     1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393,
     1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393, 1393, 1394,
     1395, 1396, 1396, 1397, 1398, 1399, 1399, 1399, 1399, 1399,
     1399, 1399, 1399, 1399, 1399, 1399, 1399, 1399, 1399, 1399,
     1399, 1399, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400,
     1401, 1401, 1402, 1402, 1403, 1403, 1403, 1404, 1404, 1405,

     1405, 1405, 1405, 1406, 1406, 1407, 1407, 1407, 1408, 1408,
     1408, 1408, 1408, 1408, 1408, 1408, 1408, 1408, 1408, 1408,
     1408, 1408, 1408, 1408, 1408, 1409, 1409, 1409, 1409, 1409,
     1409, 1409, 1409, 1409, 1409, 1410, 1411, 1411, 1411, 1411,
     1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1412, 1413,
     1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413, 1413,
     1413, 1413, 1414, 1414, 1414, 1415, 1416, 1416, 1416, 1416,
     1416, 1416, 1416, 1416, 1416, 1416, 1416, 1416, 1416, 1416,
     1416, 1416, 1416, 1416, 1416, 1417, 1418, 1419, 1419, 1419,
     1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,

     1419, 1419, 1420, 1421, 1422, 1422, 1422, 1422, 1423, 1424,
     1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1436,
     1437, 1437, 1437, 1437, 1437, 1437, 1437, 1437, 1438, 1439,
     1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
     1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
     1459, 1459, 1460, 1460, 1461, 1462, 1463, 1464, 1464, 1464,
     1465, 1466, 1467, 1468, 1469, 1469, 1470, 1471, 1472, 1473,
     1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
     1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494,
     1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1503,

     1503, 1504, 1504, 1504, 1504, 1504, 1505, 1505, 1505, 1506,
     1506, 1506, 1507, 1507, 1508, 1509, 1510, 1512, 1513, 1513,
     1513, 1513, 1513, 1513, 1514, 1515, 1516, 1517, 1518, 1520,
     1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
     1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541,
     1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
     1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
     1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
     1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
     1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,

     1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
     1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
     1552, 1552, 1552, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
     1559, 1559, 1559, 1559, 1559, 1559, 1559, 1559, 1559, 1559,
     1559, 1559, 1559, 1559, 1559, 1559, 1559, 1559, 1559, 1559,
     1559, 1559, 1559, 1559, 1559, 1559, 1559, 1560, 1560, 1560,
     1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560,
     1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560,
     1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
     1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,

     1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1562,
     1562, 1562, 1563, 1563, 1563, 1564, 1564, 1564, 1565, 1566,
     1566, 1566, 1566, 1566, 1566, 1566, 1566, 1566, 1566, 1566,
     1566, 1566, 1566, 1566, 1567, 1567, 1567, 1567, 1567, 1567,
     1567, 1567, 1567, 1567, 1567, 1567, 1567, 1567, 1567, 1567,
     1567, 1567, 1567, 1568, 1568, 1568, 1569, 1570, 1570, 1570,
     1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570, 1571, 1571,
     1571, 1571, 1571, 1572, 1572, 1572, 1572, 1572, 1572, 1573,
     1573, 1573, 1573, 1574, 1574, 1574, 1574, 1574, 1574, 1574,
     1575, 1576, 1577, 1577, 1577, 1578, 1579, 1580, 1580, 1580,

     1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1589,
     1590, 1591, 1592, 1592, 1592, 1593, 1594, 1594, 1595, 1597,
     1598, 1598, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1606,
     1606, 1607, 1608, 1609, 1610, 1610, 1611, 1611, 1612, 1613,
     1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624,
     1625, 1626, 1627, 1627, 1628, 1628, 1628, 1628, 1629, 1630,
     1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
     1641, 1642, 1644, 1645, 1646, 1647, 1648, 1648, 1648, 1648,
     1648, 1648, 1648, 1649, 1649, 1649, 1649, 1650, 1650, 1650,
     1651, 1652, 1654, 1655, 1655, 1655, 1656, 1657, 1658, 1659,

     1660, 1662, 1663, 1664, 1664, 1665, 1666, 1667, 1668, 1669,
     1671, 1672, 1673, 1674, 1674, 1674, 1674, 1675, 1676, 1677,
     1678, 1679, 1680, 1681, 1681, 1682, 1683, 1685, 1686, 1687,
     1688, 1689, 1690, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
     1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
     1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
     1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
     1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
     1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691, 1691,
     1691, 1691, 1691, 1692, 1693, 1694, 1694, 1694, 1694, 1694,

     1694, 1694, 1694, 1694, 1694, 1694, 1694, 1694, 1695, 1695,
     1695, 1695, 1696, 1696, 1696, 1696, 1697, 1697, 1698, 1698,
     1698, 1699, 1699, 1699, 1699, 1699, 1700, 1700, 1700, 1700,
     1700, 1700, 1700, 1700, 1700, 1700, 1700, 1700, 1700, 1700,
     1700, 1700, 1701, 1701, 1701, 1701, 1701, 1701, 1702, 1702,
     1702, 1702, 1702, 1702, 1702, 1702, 1702, 1703, 1704, 1704,
     1704, 1704, 1704, 1704, 1704, 1704, 1704, 1704, 1704, 1704,
     1704, 1704, 1704, 1704, 1704, 1704, 1704, 1704, 1704, 1704,
     1704, 1705, 1705, 1705, 1706, 1708, 1709, 1709, 1709, 1709,
     1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710,

     1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710, 1710,
     1710, 1711, 1712, 1712, 1712, 1712, 1712, 1712, 1712, 1713,
     1714, 1715, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
     1723, 1724, 1724, 1724, 1725, 1725, 1725, 1726, 1726, 1726,
     1726, 1727, 1728, 1729, 1729, 1729, 1730, 1731, 1732, 1733,
     1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
     1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1751, 1752,
     1754, 1755, 1756, 1757, 1758, 1758, 1758, 1759, 1760, 1760,
     1760, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1762,
     1763, 1765, 1766, 1767, 1767, 1767, 1767, 1767, 1767, 1767,

     1767, 1767, 1767, 1767, 1767, 1767, 1767, 1767, 1767, 1767,
     1768, 1768, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
     1775, 1775, 1776, 1777, 1777, 1777, 1778, 1778, 1778, 1779,
     1780, 1781, 1782, 1783, 1783, 1783, 1784, 1786, 1787, 1788,
     1790, 1791, 1792, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793, 1793,
     1793, 1793, 1793, 1793, 1793, 1794, 1794, 1794, 1794, 1794,
     1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794,
     1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794,

     1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794,
     1794, 1794, 1794, 1794, 1794, 1794, 1794, 1796, 1796, 1796,
     1797, 1798, 1798, 1798, 1799, 1799, 1799, 1799, 1799, 1800,
     1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1800, 1801,
     1801, 1802, 1802, 1802, 1802, 1802, 1802, 1803, 1803, 1803,
     1803, 1803, 1803, 1803, 1803, 1803, 1803, 1803, 1803, 1803,
     1803, 1803, 1803, 1803, 1804, 1804, 1804, 1804, 1805, 1806,
     1808, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1810, 1811,
     1812, 1812, 1812, 1813, 1813, 1813, 1814, 1815, 1816, 1817,
     1818, 1819, 1819, 1819, 1820, 1820, 1821, 1821, 1821, 1821,

     1822, 1822, 1822, 1822, 1822, 1822, 1823, 1823, 1824, 1826,
     1827, 1828, 1829, 1831, 1832, 1832, 1832, 1832, 1833, 1835,
     1836, 1837, 1838, 1838, 1839, 1841, 1842, 1843, 1844, 1845,
     1845, 1845, 1846, 1847, 1848, 1848, 1848, 1849, 1850, 1851,
     1852, 1852, 1853, 1854, 1856, 1857, 1858, 1858, 1859, 1861,
     1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1863, 1863,
     1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863,
     1863, 1863, 1863, 1863, 1863, 1863, 1863, 1863, 1864, 1864,
     1864, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1872, 1873,
     1874, 1874, 1874, 1875, 1876, 1876, 1876, 1876, 1877, 1878,

     1880, 1881, 1882, 1883, 1883, 1883, 1883, 1883, 1884, 1885,
     1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885,
     1885, 1885, 1885, 1886, 1886, 1886, 1886, 1886, 1886, 1886,
     1886, 1886, 1886, 1886, 1886, 1886, 1886, 1886, 1886, 1886,
     1886, 1886, 1886, 1886, 1886, 1886, 1886, 1886, 1887, 1887,
     1887, 1887, 1887, 1887, 1887, 1887, 1887, 1887, 1887, 1888,
     1888, 1888, 1889, 1889, 1889, 1889, 1890, 1890, 1890, 1890,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1892, 1892,
     1893, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894,
     1894, 1894, 1895, 1895, 1895, 1896, 1896, 1896, 1896, 1896,

     1896, 1896, 1896, 1896, 1896, 1896, 1897, 1897, 1898, 1898,
     1898, 1898, 1898, 1898, 1898, 1898, 1899, 1900, 1901, 1901,
     1901, 1901, 1901, 1901, 1902, 1903, 1904, 1905, 1906, 1906,
     1907, 1908, 1908, 1908, 1908, 1908, 1909, 1911, 1912, 1912,
     1912, 1913, 1913, 1913, 1913, 1913, 1913, 1914, 1915, 1915,
     1915, 1915, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1921,
     1921, 1921, 1921, 1922, 1923, 1924, 1924, 1925, 1926, 1927,
     1927, 1927, 1928, 1928, 1928, 1928, 1928, 1928, 1928, 1928,
     1928, 1928, 1928, 1928, 1928, 1928, 1929, 1929, 1929, 1929,
     1929, 1929, 1929, 1929, 1929, 1929, 1929, 1930, 1931, 1931,

     1932, 1932, 1933, 1934, 1934, 1935, 1936, 1937, 1937, 1937,
     1937, 1938, 1939, 1939, 1939, 1939, 1939, 1939, 1940, 1941,
     1942, 1943, 1943, 1943, 1943, 1943, 1943, 1943, 1944, 1945,
     1945, 1945, 1946, 1946, 1946, 1946, 1946, 1946, 1946, 1946,
     1946, 1946, 1946, 1946, 1947, 1947, 1947, 1947, 1947, 1948,
     1948, 1948, 1948, 1948, 1948, 1949, 1949, 1949, 1949, 1949,
     1949, 1949, 1949, 1949, 1949, 1949, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,
     1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950,

     1950, 1950, 1950, 1950, 1950, 1951, 1951, 1952, 1952, 1953,
     1954, 1955, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956, 1956,
     1956, 1956, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1963,
     1964, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1965, 1966,
     1966, 1966, 1966, 1966, 1966, 1966, 1966, 1967, 1969, 1970,
     1971, 1971, 1971, 1971, 1971, 1972, 1973, 1974, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 1976, 1977, 1978, 1980, 1981,
     1982, 1983, 1984, 1985, 1985, 1985, 1985, 1986, 1986, 1986,
     1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,

     1986, 1986, 1986, 1986, 1986, 1987, 1988, 1988, 1988, 1989,
     1990, 1991, 1993, 1994, 1995, 1995, 1995, 1995, 1996, 1996,
     1997, 1997, 1998, 1999, 2000, 2001, 2001, 2001, 2001, 2002,
     2002, 2003, 2003, 2003, 2003, 2003, 2003, 2004, 2004, 2005,
     2005, 2005, 2005, 2005, 2005, 2006, 2007, 2007, 2007, 2007,
     2007, 2007, 2007, 2007, 2007, 2007, 2007, 2008, 2008, 2008,
     2008, 2008, 2008, 2008, 2009, 2009, 2010, 2010, 2010, 2010,
     2010, 2011, 2011, 2011, 2011, 2012, 2012, 2012, 2013, 2013,
     2013, 2014, 2014, 2014, 2014, 2014, 2015, 2015, 2015, 2015,
     2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015,

     2015, 2015, 2016, 2017, 2018, 2019, 2020, 2020, 2021, 2021,
     2022, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2024, 2024, 2024, 2025, 2026, 2028, 2029,
     2030, 2030, 2030, 2030, 2031, 2031, 2031, 2031, 2031, 2032,
     2033, 2033, 2033, 2033, 2033, 2033, 2033, 2034, 2036, 2037,
     2037, 2037, 2038, 2039, 2041, 2042, 2043, 2043, 2044, 2045,
     2045, 2045, 2045, 2045, 2045, 2045, 2046, 2047, 2048, 2050,
     2051, 2052, 2052, 2053, 2054, 2056, 2057, 2057, 2057, 2057,
     2057, 2057, 2057, 2057, 2057, 2057, 2057, 2057, 2057, 2057,

     2057, 2057, 2057, 2057, 2057, 2057, 2058, 2058, 2059, 2059,
     2059, 2060, 2061, 2061, 2061, 2062, 2064, 2065, 2066, 2067,
     2069, 2070, 2071, 2072, 2072, 2072, 2073, 2073, 2073, 2073,
     2074, 2074, 2074, 2075, 2075, 2075, 2075, 2075, 2075, 2076,
     2076, 2076, 2076, 2076, 2077, 2077, 2077, 2077, 2077, 2077,
     2078, 2078, 2078, 2078, 2078, 2078, 2078, 2078, 2079, 2079,
     2079, 2080, 2081, 2082, 2082, 2083, 2084, 2084, 2084, 2085,
     2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085, 2085,
     2085, 2085, 2085, 2085, 2086, 2086, 2086, 2087, 2087, 2087,
     2087, 2087, 2087, 2087, 2087, 2087, 2087, 2087, 2087, 2087,

     2087, 2087, 2087, 2087, 2087, 2087, 2087, 2087, 2087, 2088,
     2088, 2088, 2088, 2088, 2088, 2089, 2089, 2089, 2089, 2089,
     2090, 2091, 2091, 2091, 2091, 2091, 2092, 2093, 2094, 2095,
     2095, 2095, 2095, 2095, 2096, 2097, 2097, 2098, 2098, 2098,
     2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098,
     2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098,
     2098, 2099, 2100, 2100, 2100, 2100, 2101, 2102, 2103, 2103,
     2104, 2104, 2104, 2105, 2105, 2105, 2105, 2105, 2105, 2105,
     2105, 2105, 2105, 2105, 2105, 2105, 2105, 2106, 2106, 2106,
     2106, 2106, 2106, 2107, 2107, 2107, 2107, 2108, 2108, 2108,

     2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
     2108, 2108, 2108, 2108, 2108, 2109, 2109, 2109, 2109, 2110,
     2110, 2110, 2110, 2110, 2110, 2110, 2110, 2110, 2110, 2110,
     2110, 2110, 2110, 2110, 2110, 2110, 2110, 2110, 2110, 2110,
     2111, 2111, 2112, 2113, 2113, 2113, 2113, 2113, 2113, 2114,
     2114, 2114, 2114, 2115, 2115, 2115, 2116, 2116, 2116, 2117,
     2118, 2119, 2120, 2120, 2120, 2121, 2122, 2123, 2123, 2123,
     2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123, 2123,
     2123, 2123, 2123, 2123, 2123, 2123, 2123, 2124, 2124, 2125,
     2126, 2127, 2127, 2128, 2129, 2130, 2130, 2131, 2131, 2132,

     2132, 2132, 2132, 2132, 2132, 2133, 2133, 2133, 2133, 2133,
     2133, 2133, 2134, 2134, 2135, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2136, 2136, 2136, 2136, 2136, 2136,
     2137, 2137, 2137, 2137, 2137, 2137, 2137, 2137, 2137, 2137,
     2137, 2137, 2137, 2137, 2137, 2138, 2139, 2139, 2139, 2139,
     2139, 2139, 2140, 2140, 2141, 2141, 2141, 2142, 2142, 2143,
     2144, 2145, 2147, 2148, 2149, 2149, 2150, 2151, 2151, 2151,
     2151, 2151, 2151, 2151, 2151, 2151, 2151, 2151, 2151, 2151,
     2151, 2151, 2151, 2151, 2151, 2152, 2153, 2154, 2155, 2156,

     2156, 2156, 2157, 2157, 2157, 2158, 2158, 2158, 2158, 2158,
     2158, 2158, 2158, 2158, 2158, 2158, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159, 2159,
     2159, 2159, 2159, 2159, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160, 2160,
     2160, 2160, 2160, 2161, 2161, 2161, 2161, 2161, 2162, 2162,
     2163, 2164, 2165, 2165, 2166, 2167, 2167, 2167, 2168, 2169,
     2169, 2169, 2169, 2169, 2170, 2170, 2170, 2170, 2170, 2170,
     2170, 2170, 2170, 2170, 2170, 2170, 2170, 2171, 2172, 2173,
     2174, 2175, 2175, 2175, 2176, 2176, 2177, 2177, 2177, 2177,

     2177, 2177, 2177, 2177, 2177, 2177, 2177, 2177, 2177, 2177,
     2178, 2178, 2178, 2178, 2178, 2178, 2178, 2178, 2178, 2178,
     2178, 2179, 2179, 2180, 2180, 2180, 2180, 2180, 2180, 2180,
     2180, 2180, 2181, 2181, 2181, 2181, 2181, 2181, 2181, 2182,
     2182, 2182, 2183, 2184, 2184, 2185, 2186, 2186, 2186, 2187,
     2187, 2188, 2188, 2188, 2188, 2188, 2188, 2189, 2190, 2190,
     2190, 2190, 2190, 2190, 2190, 2190, 2190, 2191, 2191, 2191,
     2192, 2193, 2193, 2194, 2194, 2194, 2194, 2194, 2195, 2195,
     2195, 2196, 2196, 2196, 2196, 2197, 2198, 2198, 2198, 2198,
     2198, 2198, 2198, 2198, 2198, 2199, 2200, 2200, 2200, 2200,

     2200, 2200, 2200, 2200, 2200, 2201, 2201, 2201, 2201, 2201,
     2201, 2201, 2201, 2201, 2201, 2201, 2201, 2201, 2201, 2201,
     2201, 2201, 2202, 2202, 2202, 2203, 2203, 2204, 2205, 2205,
     2205, 2205, 2206, 2206, 2206, 2207, 2208, 2209, 2209, 2209,
     2209, 2209, 2209, 2209, 2209, 2209, 2210, 2211, 2212, 2213,
     2213, 2214, 2214, 2214, 2214, 2214, 2215, 2215, 2215, 2215,
     2216, 2217, 2218, 2218, 2218, 2218, 2218, 2218, 2218, 2218,
     2219, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220, 2220,
     2221, 2222, 2222, 2222, 2222, 2222, 2223, 2223, 2223, 2223,
     2223, 2223, 2223, 2223, 2224, 2224, 2224, 2225, 2226, 2227,

     2228, 2228, 2228, 2228, 2228, 2229, 2229, 2229, 2230, 2230,
     2230, 2230, 2230, 2231, 2231, 2232, 2233, 2234, 2234, 2234,
     2234, 2234, 2235, 2235, 2235, 2235, 2236, 2236, 2236, 2236,
     2236, 2236, 2236, 2236, 2236, 2236, 2236, 2237, 2237, 2237,
     2237, 2237, 2237, 2237, 2237, 2238, 2238, 2239, 2239, 2239,
     2239, 2239, 2240, 2240, 2240, 2240, 2240, 2240, 2240, 2241,
     2242, 2242, 2242, 2243, 2243, 2243, 2243, 2243, 2243, 2243,
     2244, 2245, 2245, 2245, 2245, 2245, 2245, 2245, 2245, 2245,
     2245, 2245, 2245, 2245, 2245, 2245, 2245, 2245, 2245, 2245,
     2245, 2245, 2245, 2245, 2245, 2245, 2246, 2247, 2248, 2248,

     2248, 2248, 2248, 2248, 2249, 2250, 2250, 2251, 2251, 2251,
     2251, 2251, 2252, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253, 2253,
     2253, 2254, 2255, 2255, 2256, 2256, 2256, 2256, 2256, 2256,
     2257, 2257, 2257, 2257, 2257, 2257, 2257, 2258, 2258, 2258,
     2258, 2258, 2258, 2258, 2258, 2259, 2259, 2259, 2259, 2259,
     2259, 2259, 2260, 2260, 2260, 2260, 2261, 2261, 2262, 2262,
     2262, 2262, 2262, 2262, 2262, 2262, 2262, 2263, 2263, 2263,
     2263, 2263, 2263, 2263, 2264, 2265, 2265, 2266, 2266, 2266,
     2267, 2267, 2267, 2267, 2267, 2267, 2267, 2267, 2267, 2267,

     2267, 2267, 2267, 2268, 2269, 2270, 2271, 2271, 2271, 2272,
     2273, 2273, 2273, 2273, 2274, 2274, 2274, 2275, 2275, 2275,
     2275, 2275, 2275, 2275, 2275, 2276, 2276, 2277, 2278, 2278,
     2278, 2278, 2278, 2278, 2279, 2279, 2279, 2279, 2279, 2279,
     2279, 2279, 2279, 2279, 2280, 2280, 2280, 2280, 2280, 2280,
     2281, 2281, 2282, 2282, 2282, 2282, 2282, 2282, 2282, 2282,
     2282, 2282, 2282, 2282, 2282, 2283, 2283, 2283, 2283, 2283,
     2283, 2283, 2283, 2283, 2283, 2283
    } ;

static yyconst flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    4,    2,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   30,
       34,   34,   34,   34,   34,   34,   34,   34,   34,   35,
       34,   34,   36,   37,   34,   34,   34,   34,   34,   34,
       38,   39,   40,   39,   41,   39,   42,   43,   44,   45,

       46,   47,   48,   49,   50,   34,   51,   52,   53,   54,
       55,   56,   57,   58,   59,   60,   61,   62,   63,   64,
       65,   34,   66,   67,   68,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,

       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   69,   69
    } ;

static yyconst flex_int32_t yy_meta[70] =
    {   0,
        1,    2,    2,    3,    2,    4,    5,    6,    4,    4,
        7,    8,    9,   10,   11,    4,    4,   12,   13,    4,
       14,   15,   16,    7,    4,    4,    4,    4,   17,   17,
       17,   17,   17,   18,   18,   18,   18,   19,   19,   19,
       18,   17,   17,   20,   21,   17,   17,   18,   18,   22,
       18,   18,   18,   18,   23,   18,   18,   18,   24,   25,
       18,   26,   18,   18,   18,   27,   19,   28,   29
    } ;

static yyconst flex_int16_t yy_base[4399] =
    {   0,
        0,    0,   69,   73,   85,   91,   96,  101,   72,   75,
      142,  147,  216,    0,   99,  104,  285,    0,  354,    0,
      423,    0,  492,    0,  560,  615,  170,  174,  671,    0,
      740,    0,  809,    0,  577,  585,  878,    0,  947,  975,
      565,  594, 1003, 1008, 1077,    0, 1146,    0,  191,  202,
     1215,    0,  599, 1283, 1288, 1296, 1018, 1300,  105,  129,
     1365,    0,12515,23766,  604,  621,  633,23766,   72,23766,
    12503,   79,   74,23766,12490,23766,23766,23766,  101,  114,
      610,23766, 1031,23766,12489,  593,  134,  996,  611,  995,
     1007, 1272, 1006,  147,  589, 1002, 1273,   65, 1286, 1287,

      608,  552, 1294,  102,23766,12443,23766,23766,    0,    0,
     1427,12496,12441,12436,23766,23766,12462,23766,  646, 1051,
     1351,12465,23766,23766,23766,23766,23766,12428,12431,23766,
        0,    0,    0, 1428,  164,12418,12415,23766,23766, 1435,
    23766,23766,12460,12467,23766, 1356, 1439, 1443,12454,23766,
      160,23766,23766,23766,12453,23766,  175,23766,  545,12453,
    23766, 1429, 1296, 1018, 1434, 1432, 1449, 1288, 1020, 1451,
      107,  947,   94, 1471, 1477, 1441,  619,23766,23766, 1456,
     1462, 1514,12451,23766,23766,12436,  561, 1428,23766,23766,
     1525, 1534, 1538,  589,  564,12435,23766,    0,23766, 1542,

     1546, 1550, 1032, 1055,12434,23766,23766,23766,    0,12395,
    23766, 1554, 1558, 1562, 1310, 1324,12432,23766,12407,12398,
      971,12392,23766, 1566, 1570, 1574,12427,23766,23766,23766,
    23766, 1578, 1582, 1586,12421, 1313,23766,12433, 1351, 1342,
    23766,23766,23766,23766,23766, 1448,12404,23766, 1476,23766,
     1479,23766,23766,23766, 1545,12382, 1008, 1461, 1549, 1538,
     1464, 1555, 1566,12372, 1466, 1476, 1573,12380, 1574, 1574,
     1571, 1587,23766,12358,23766,23766, 1636, 1641, 1645,12402,
    23766, 1649, 1653, 1657, 1661,23766,  147, 1441, 1659, 1660,
     1662, 1675, 1682,    0,23766, 1686, 1690,12401,    0,12395,

    12393,12390, 1568,    0,    0,12408, 1663,12334,12331,23766,
     1704, 1719, 1723,12376,12375,23766, 1727, 1731, 1735,23766,
    23766,12370,23766,23766,12373, 1739, 1745, 1689, 1670,23766,
     1751, 1756, 1760,12372,12370,23766, 1764, 1768, 1772,12369,
    12330,12326,23766,12353,12352,12351,12350, 1776, 1780, 1690,
     1701,12345,23766,12312,12323, 1559, 1792, 1796,23766,12341,
    12340, 1800, 1691,12352, 1778,23766, 1707, 1779,12345,23766,
    23766,    0,23766, 1791,23766,23766, 1792, 1795,23766, 1801,
     1840,  621,12320,23766,12319,12325, 1650, 1766, 1807, 1872,
     1844, 1430, 1769, 1801,  620, 1849, 1871, 1884, 1812, 1817,

     1830, 1879, 1885, 1892, 1887, 1915, 1891, 1886, 1786, 1894,
     1653, 1480, 1907, 1911, 1912, 1289, 1900, 1914, 1910, 1692,
     1926, 1931, 1927, 1929, 1937, 1939, 1941, 1943, 1946, 1585,
     1948, 1949, 1951, 1952, 1950, 1954,23766,    0, 1956, 1802,
    12279,12278,12294,12275,23766,23766,23766,12308, 1865,23766,
    12288,12275,    0, 1957, 1806,12268,12253,12269,12250, 1969,
    23766,23766,23766,23766, 2014, 2020,    0,23766,23766, 2024,
    23766,23766,23766,23766,23766,23766,23766,23766,12288,    0,
     1960, 2042, 2111, 1972, 1957, 1452, 1967, 2014, 1974, 2180,
     1991, 2019, 2249, 2016, 2318, 1964, 2387, 2456, 2050, 2525,

     2594, 1987, 2663, 2052, 2732, 2077, 2015, 2017, 2054, 2056,
     1970, 2061, 2801, 2083, 2118, 2119, 2082,23766,12287,    0,
     2120, 2121, 2086, 1843,12301, 2823, 1853, 2824,12295,23766,
        0, 2090, 1977,12298, 2837, 2089, 2844,12292,23766,    0,
     2901, 2142, 1984,12294, 2923, 2141, 2924,12287,23766,12175,
    12170,12154,12186,12157, 2152,23766, 2156,23766, 2095,12098,
     2937,23766, 2151, 2944,12083,23766,23766,23766,23766,23766,
    23766,23766,23766,23766,12032,12028, 2156, 2223, 2209,12030,
     2113, 2177, 2234, 2237,12017,12009,12002,    0,12019, 2238,
    11999,12001,12011,    0,11999,    0,12003, 2115,    0,11998,

     1267,11988,    0,12005,    0,11985,12000,11996,11979,11978,
    11987, 2178, 2116,11853,11851, 2106,11858,11850,    0,11856,
    11851,11836,11839,11827,11828, 2155,11815,23766, 2237,11811,
        0, 2298, 2302,11816, 2345,    0, 2202, 2209, 2223, 2277,
    23766, 2306,    0, 2357,11807,11796,    0,23766,11788, 2217,
    23766,    0,23766, 2249, 2239,11754,11743,11757,11738,23766,
    23766, 2361,23766,11770,    0, 2369,23766,11769,    0, 2485,
     2283, 2340, 2368,11783, 2945, 2343, 2965,11777, 2378,23766,
    11766,    0, 2496,23766,11741,11728,11766,    0,11765,11754,
     2500,11756, 2499,11705, 2966, 2357, 2982,11691,11678,11655,

    11624,11635,11626, 2552,23766,11651,11648,    0,11647,11596,
     2453, 2283,11542,11539,11555,11533, 2456, 2455,11533,11532,
    11548,11529,    0,23766, 2491, 2525,11567,11566,11559,11543,
    11551,23766,    0, 2469, 3039, 2497, 3108,23766,11544,11550,
     3176,11542, 2463, 2557, 2538, 2537, 2464, 2145, 2223, 2496,
     2563, 2540, 2546, 2601, 2602, 2565, 2566, 2604, 2606, 2607,
     2626, 2608, 2621, 2670, 2633, 2671, 2571,11541, 2672, 2673,
     2695, 2675, 2703, 2674, 2682, 2731, 2739, 1768, 2704, 2740,
     2741, 2547, 2609, 2677, 2676, 2742, 2744, 2745, 2747, 2772,
     2775, 2773, 2797, 2813, 2812, 3235, 2814, 2816, 2815, 1981,

     2832, 2835, 2841, 2842, 2873, 2897, 2908, 2291,    0,11505,
    11505,11535,11498,11499,23766,11506,11479, 2355,    0,11480,
    11480,11511,11474,11477,11513,11498, 2637,    0, 3304,23766,
    11506,    0,23766, 2931,11503,11501,    0, 2826, 2966, 2837,
     3373, 2827, 2929, 2915, 2840,23766,11486,    0, 2973, 2937,
     2938,23766,11485,    0, 2942,23766,11484,    0, 3006,23766,
    11483,    0, 2940, 2983,23766,11482,    0, 2982,23766,11481,
        0,23766,11480,    0, 3442,23766,11478,    0, 2987,23766,
    11477,    0, 3035, 2746, 2999, 2988, 3047, 2471, 3010, 3049,
    23766,11474,    0, 2989, 3074, 3015,    0, 3073, 3052, 2835,

     2525,11434,11419,11435,11416, 2942, 2591,11416,11415,11431,
    11412, 3073, 2598,11411,11410,11424,11404, 3076, 2656,11390,
    11389,11405,11386,23766,    0, 3078, 2657,11386,11385,11401,
    11381, 3079, 2658,11381,11378,11393,11356,11372,11367,11356,
     2723,11340, 3080, 2722,11327,11324,11340,11311, 3081, 2791,
    11302,11299,11304,11283,11297, 2944,    0, 3147,23766, 3151,
    11310,11283,23766, 3425,11306,11269, 2728,11279,11270,11256,
    11268,11277,11272,11273,11263,11257,11243,    0,11256,11241,
    11250,23766,11239,11244,11230,11227, 3182,11219,11177,23766,
    11168,23766,11166,23766, 3026, 2734,23766,11171,23766, 3188,

    11170,11169,23766,11156,23766,11179,11141,23766,11145,11146,
    11145,11127,11143,11142,11123,11104,11116,11100,11089,11086,
    11102,11089,11084,11090,23766,11093,10965,10956,10939,10918,
    10899,10902,10895,10829,    0,23766, 3080, 2768,10842,  994,
     2549,    0,10805,10794,10816,10777,10757,    0,    0, 3118,
     2797,10750,10748,10738,10705, 3136, 2902,10665,10662,10678,
    10631,    0,10606,10606,10628,23766, 3138, 3034,10583,10576,
    10592,10571, 3140, 3036,10561,10551,10565,10539,10577, 2636,
    10543,    0,10541,10546,    0,23766,    0, 3142,    0,10536,
    10531,10548,10511,10512, 3145,    0,10507,10504,10534,10483,

    10486,    0,23766,23766,10508,10517, 3148,    0, 3136,23766,
     3203,10516,10512,10513, 3082,23766, 3207,10491,10490,10496,
     2835, 3004,10456,10463,10450,10439,10460, 3147, 3174, 3116,
     3274, 3208, 3177, 3234, 3278, 3191, 3204, 3243, 3209, 3246,
     3192, 3369, 3247, 3402, 3413, 3150, 3372, 3401, 3441, 3484,
    10459, 3511,10458, 3414, 3415, 3580, 3468, 3539,10454, 3452,
     3510, 3250, 3453, 3551,10434, 3518, 3540, 3385, 3380, 3550,
     3249, 3454, 3485, 3548, 3461, 3649, 3588, 3525,10433, 3589,
     3610, 3677, 3608,23766,10432,10438, 3611, 3386, 3620, 3595,
     3524, 3661, 3594, 3664, 3743, 3662, 3669,10441,10428,10388,

    23766,10385,10366,10365,10377,10407,10389,10338,23766,10340,
    10335,23766,10362, 3555,    0,23766,10371,    0, 3624, 2844,
     3064,10367,10361, 3663, 3812, 3690, 3599,23766,10346,    0,
     3675, 3674, 3881, 3676, 3720, 3678, 3679, 3680, 3950, 3602,
     3682, 3771,23766,10345,    0, 3775, 3742, 3683, 3750, 3774,
     3685, 3687, 3840, 4019, 3739, 3819, 3684,    0, 3689, 3808,
     3150,    0,10310,10310,10341,10301,10299, 3196,    0,10283,
    10283,10314,10277,10280, 3204,    0,10275,10270,10287,10250,
    10253, 3265,    0,10251,10251,10279,10237,10226, 3398,    0,
    10222,10222,10249,10210,10212, 3471,    0,10076,10074,10105,

    10000,10001, 9994, 9928, 9917, 9919, 9903, 9905, 3478,    0,
     9892, 9881, 9903, 9864, 9861, 3540,    0, 9859, 9858, 9889,
     9830, 9830, 9807,23766, 3852, 9842,23766,23766, 3864, 9838,
     3932, 9829, 9798, 9805, 9824, 9791, 4002, 9822, 9781, 9786,
     9765, 9757, 9794, 9748, 3909, 3926, 9754, 9760, 3978, 9751,
     9664, 9662, 9664, 9649, 9660, 9663,23766,    0, 9634, 9640,
     3844, 9636, 9639, 9551, 3990, 9560,    0, 9519, 9514,    0,
     9442, 9455, 9427,    0, 9421, 4047, 9436, 9404, 9396,23766,
     9380, 9376, 9342, 9339, 9348, 9308, 9312, 9295, 9295, 9305,
     9286,    0, 9274, 9284, 9156, 9147, 9142,    0, 9070, 9066,

     9071, 8998, 9005, 8992, 8992, 8971, 4060, 8964,    0, 3787,
     8994, 9004, 8990, 8953,23766, 8933, 8925,    0,    0, 3544,
        0, 8909, 8909, 8937, 8892, 8893, 3710,    0, 8880, 8878,
     8909, 8405, 8408,    0, 8411, 8398, 3764,    0, 8390,   16,
      140,  153,  529, 3780,    0,  941, 1015, 1439, 1474, 1562,
     1606, 1659,23766,    0, 1765,    0,    0, 1838, 1865, 1984,
     2044, 2201, 2176, 2241, 2317, 2548, 2560, 4115, 4183, 2678,
     2660, 2875, 3842, 4187, 2928, 2901, 3005, 3283, 3073, 4185,
     3287, 4186, 3079, 3173, 3179, 3165, 3243, 3387, 3484, 3895,
     3853, 4067, 4199, 3388, 3398, 3986, 4044, 4088, 3403, 3979,

     3894, 4045, 3896, 4046, 4053, 3963, 4054, 3964, 3921,23766,
     4203, 3919, 4216, 3404, 3990,23766, 3463,23766, 3469, 3480,
     3480, 3552, 4052, 4175,23766, 3553, 3607, 4060,23766, 3603,
     4055, 4056, 4176, 4057, 4249,23766, 3599, 4173, 4059, 4187,
     4188, 4177, 4191, 4200, 4061, 4209, 4222,23766, 3616, 3624,
     4225, 4279, 3848, 4202, 4307, 3686, 4319,23766,23766, 4385,
     4208, 4251, 4256, 4331, 4235, 4204, 4336, 4250,23766, 4358,
     3692, 3704, 3779, 4247, 4454, 4195, 3794, 3758, 3759, 3798,
     3778, 3865, 3851, 4322, 3848, 4374, 3859, 3852, 4254, 4307,
    23766, 3910,    0, 4364, 3911, 4309, 4303, 4305, 4321,23766,

     3920,    0, 3978, 4430,23766, 4320, 4361, 4482,23766, 3921,
        0, 4392, 4306, 4434, 4486, 4503,23766, 4522, 4450, 4421,
     4062, 4398, 4332, 4526,23766,23766, 3922,    0, 4538, 4560,
     4629, 4461, 4407, 3974, 3939, 3946, 3951, 3990, 3955, 4038,
     4035, 4073, 4051, 4057, 4151, 4191, 4156, 4205, 4203, 4242,
     4211, 4218, 4215, 4291, 4256, 4270, 4277, 4303, 4306, 4303,
     4323, 4327, 4323, 4361, 4360, 4371, 4370, 4418, 4383, 4388,
     4385,    0, 4543, 4426, 4395, 4475, 4599, 4476, 4446, 4480,
     4445, 4451, 4489, 4535, 4467, 4468, 4472, 4458, 4476, 4497,
     4536, 4486,23766, 4611, 4511, 4605, 4512, 4493, 4592, 4477,

     4480, 4500, 4507, 4500, 4505, 4501, 4524,23766, 4661, 4535,
     4617,23766, 4537, 4530, 4537,23766, 4570,23766, 4533, 4673,
    23766, 4551, 4563, 4564, 4583,23766, 4606, 4636, 4600, 4616,
     4606, 4637, 4614, 4677, 4626, 4639, 4629, 4638, 4643, 4647,
     4638,23766, 4646,    0, 4640, 4653,    0,23766,    0, 4698,
        0, 4660, 4703, 4649,    0, 4647, 4710, 4695, 4657,    0,
     4711, 4697, 4662, 4666, 4664, 4702, 4667, 4671, 4668, 4671,
        0, 4707, 4672, 4676, 4673, 4711, 4676, 4680, 4677, 4688,
    23766, 4679, 4703,23766, 4719, 4727, 4685, 4722, 4731, 4724,
     4689, 4726, 4735, 4729, 4698, 4692, 4696, 4715, 4698, 4739,

     4708, 4702, 4703, 4722, 4705,    0, 4708, 4708, 4713, 4750,
     4752, 4813, 4779, 4753, 4722, 4731, 4756, 4765, 4774, 4782,
    23766, 4763, 4764, 4786, 4820, 4784, 4823, 4824, 4832, 4787,
     4853, 4858, 4772, 4783, 4745, 4775, 4827, 4776, 4850, 4778,
     4885, 4889, 4828, 4779, 4856, 4911, 4861, 4980, 4939, 4776,
     5049, 4851, 4862, 4785, 5118, 4879, 4873, 4918, 4943, 4863,
     4888,23766, 4789, 4797,23766, 4931,23766, 4837,23766, 4852,
     4882, 4948, 4952, 4979, 4955, 4877, 4949, 5187, 5009, 4878,
     5256, 5022, 4883, 4916, 4848, 4905, 4905, 4941, 5010,23766,
     4945, 4954, 5088, 4927, 4918, 4978, 5015, 4975, 4956, 4957,

     4980, 4968, 5016, 4977, 4974, 4978, 4996, 4979, 5019, 5022,
     4983, 5021, 5056, 5076, 5085, 5087, 5089, 5325, 5062, 5162,
     5023, 5127, 5128, 5092, 5064,23766, 5231, 5077, 5092, 5394,
     5130, 5137, 5215, 5301, 5078,23766, 5080,    0,23766, 5081,
        0, 5148, 5150, 5052, 5053, 5111, 5108, 5101, 5099, 5104,
     5141, 5155, 5115, 5154, 5202, 5119, 5119, 5159, 5132,    0,
     5124, 5161, 5164, 5201,    0, 5227, 5216, 5185, 5195, 5220,
     5184, 5223, 5194, 5285,23766, 5197, 5202, 5189, 5297, 5205,
     5191, 5206, 5241, 5375, 5269, 5353, 5227,    0, 5251, 5275,
     5293, 5266, 5369, 5287, 5357, 5267, 5266, 5265, 5261, 5295,

     5332,    0, 5276,    0, 5293,    0, 5426, 5298, 5279,    0,
     5305, 5313, 5433, 5323,    0, 5325,23766, 5332, 5438,23766,
    23766, 5445, 5359,23766, 5341, 5462, 5362,    0,23766,    0,
     5475, 5363, 5340, 5327, 5340, 5365, 5402, 5365,23766, 5364,
    23766, 5390,    0, 5416, 5407, 5431, 5432, 5410, 5434, 5436,
        0, 5412, 5415, 5449, 5414, 5419, 5460,    0, 5420, 5427,
     5461, 5426, 5431,23766, 5429,    0, 5431, 5470,23766, 5471,
     5479, 5440, 5474, 5438, 5444, 5477, 5486,23766, 5499, 5483,
     5484, 5493, 5514, 5520, 5487, 5489, 5491, 5488, 5504, 5492,
     5541, 5553, 5506,23766, 5510, 5607, 5477, 5517, 5526, 5525,

     5527, 5583, 5529, 5587, 5531, 5537, 5538,23766, 5539, 5547,
     5542,23766, 5545, 5553, 5635, 5547, 5520,23766, 5549, 5557,
     5647, 5572, 5558,23766, 5553, 5561, 5571, 5555, 5631, 5652,
     5556, 5657, 5560, 5621, 5559, 5581, 5622, 5641, 5636,23766,
     5562, 5642,23766, 5576, 5584, 5582, 5644,23766, 5646, 5656,
     5625, 5635, 5635, 5632, 5628, 5661, 5670, 5694, 5698, 5664,
        0, 5645, 5664, 5687,    0, 5638, 5649, 5682, 5650, 5657,
     5694,    0, 5658, 5663, 5696, 5661, 5666, 5701,    0, 5700,
     5710, 5703, 5724, 5708, 5731, 5709,23766, 5716,    0, 5717,
     5675, 5719, 5720, 5721, 5723, 5682, 5726, 5728,23766, 5729,

        0, 5730, 5735, 5769, 5732, 5697, 5736, 5781, 5785, 5797,
        0, 5715, 5704, 5717, 5718, 5722, 5748, 5730, 5757, 5720,
     5809, 5737,23766, 5732,    0, 5733, 5736, 5742, 5775, 5794,
        0, 5782, 5795, 5759, 5751, 5816,    0, 5765, 5773, 5771,
     5780, 5769, 5782, 5808, 5830, 5814,    0,23766, 5785, 5816,
     5789, 5775, 5819, 5796, 5800, 5799, 5788, 5825,23766, 5789,
     5799,23766, 5785, 5829, 5796,23766, 5807, 5800, 5853,23766,
     5813, 5814, 5859, 5843, 5808, 5846, 5810,23766, 5848,23766,
    23766, 5824, 5831, 5829, 5830, 5825, 5856, 5865, 5878, 5839,
     5838,23766, 5850, 5830, 5872,    0, 5869, 5834, 5839, 5836,

     5874, 5839, 5843, 5840,    0,23766,    0, 5879, 5847, 5881,
     5890, 5859, 5847, 5885, 5906,23766,23766, 5913, 5891, 5971,
     5898, 5866, 5900, 5901, 5902, 5905, 6033, 5926, 5934, 5910,
    23766, 5878, 5912, 5918, 5927,23766, 5920, 5928, 5896, 5928,
     5929, 5897, 5909, 5932, 5901, 5935, 6102, 5936, 5917, 5938,
     5907, 5965,23766, 5940,23766, 5942, 5941, 5944, 5916, 5956,
     6008, 5957, 5959, 5965, 6171, 5958, 5961, 5963, 5974, 5964,
     5977, 6072, 5966, 5979, 5952, 5953, 5945, 5946, 5945, 5961,
     5985, 6199, 5987, 5976, 6001,23766, 5979, 5989, 6005, 5992,
     5998, 6003, 6041, 6006, 6010, 6007, 6046,23766, 6047, 6076,

     6130,23766, 6064, 6142,23766, 6066, 6262,    0, 6061, 6073,
     6203, 6071, 6062, 6134,    0, 6068, 6135, 6098, 6141, 6129,
     6114, 6033, 6074,    0, 6075, 6136, 6215,23766, 6115, 6247,
     6117,23766, 6107, 6104, 6101,    0, 6101,    0, 6219, 6292,
     6139, 6114,    0,23766,    0, 6118, 6106, 6170,23766, 6191,
     6243, 6160, 6304, 6193,23766, 6172, 6183, 6169,    0, 6185,
     6191, 6212, 6239, 6180, 6214,23766,    0, 6187,    0, 6220,
     6269, 6308, 6194,    0, 6209, 6211, 6226,    0, 6270, 6300,
     6249,    0, 6240, 6244, 6245, 6257, 6294,    0, 6296, 6305,
     6274, 6301, 6310, 6283, 6282, 6280, 6278, 6276, 6291, 6315,

     6336, 6321,    0,    0,23766,    0, 6322, 6330,23766,23766,
    23766, 6351, 6290, 6325, 6294, 6300, 6355, 6339, 6320, 6308,
     6319, 6306, 6327, 6314, 6325, 6328, 6320, 6336, 6357, 6337,
     6361, 6370, 6363, 6384, 6443,23766, 6368, 6376, 6398, 6371,
    23766, 6406, 6372, 6350, 6383, 6398, 6391,    0, 6396, 6370,
     6367, 6397, 6407, 6377, 6402, 6412,23766, 6405, 6415, 6512,
     6378, 6410, 6419,    0, 6581, 6417, 6439, 6451, 6391, 6416,
     6462, 6385, 6400, 6452, 6470, 6453,23766, 6455, 6463, 6650,
     6457, 6544, 6719, 6458, 6559, 6464,23766, 6466, 6428, 6432,
     6438, 6491, 6455, 6454, 6446, 6452, 6443, 6456, 6457, 6486,

     6475, 6519, 6531,    0,23766, 6552, 6626, 6520, 6747, 6610,
    23766, 6678,    0,23766, 6521, 6631, 6522, 6801, 6536,23766,
     6537, 6692, 6870, 6759, 6842, 6515, 6545, 6554,23766, 6547,
     6553, 6518, 6549,    0, 6513, 6515,23766,    0,23766, 6787,
     6580, 6562, 6595,    0,23766,23766, 6568, 6574, 6849, 6604,
        0, 6567, 6615, 6590, 6581,    0,23766, 6599, 6583, 6621,
     6591, 6624, 6665,23766, 6625,23766, 6663, 6699, 6670,    0,
    23766, 6763,    0,    0,23766, 6671,    0,23766, 6649,    0,
    23766,    0, 6654, 6684, 6693,23766, 6686,    0, 6687, 6649,
     6653, 6660, 6829, 6695, 6704, 6698, 6705, 6696, 6721, 6721,

     6751,23766,23766,23766, 6772,23766, 6898, 6752, 6760,23766,
    23766, 6718, 6718, 6724, 6758, 6724, 6723, 6739, 6749, 6742,
     6744, 6746, 6762, 6790, 6774, 6781, 6798, 6790, 6827, 6836,
     6810, 6835, 6841, 6902, 6838, 6918,23766, 6839, 6897, 6844,
     6922, 6930,    0,23766, 6843, 6927, 6853, 6892,23766, 6894,
     6928, 6856, 6872, 6906, 6883, 6908,23766, 6920, 6929, 6899,
     6924,23766,23766, 6925, 6933, 6932, 6941, 6940, 6935, 6913,
     6938, 6920, 6914, 6945, 6954, 6947, 6948,23766, 6949, 6957,
     6990, 6978,23766,23766, 6951, 6962, 6932, 6927, 6953, 6934,
     6939, 6940, 6995, 6980, 6943, 6964, 6953, 6967, 6964, 6965,

     6961, 6992, 7001, 6957, 6995,23766, 7022,23766, 6959, 6998,
     6999, 7000, 6981, 7007,23766, 7008,    0, 7014,23766, 7009,
        0, 7011, 7012, 6991, 7016, 7017, 6994, 7019, 7028,23766,
        0, 6997,23766, 6991, 7025, 6988, 7027, 7037,23766, 6993,
     6993, 6996, 7034,23766, 7002, 7038, 7049,    0, 7070,23766,
     7001, 7002, 7004, 7044,    0, 7020, 7046,23766, 7075, 7054,
    23766,23766,23766, 7031,23766,23766, 7036, 7063,23766, 7034,
     7037, 7039, 7088, 7072, 7034, 7054, 7043, 7056, 7053, 7054,
     7050, 7081, 7090, 7087, 7111, 7084,23766, 7057, 7060, 7056,
     7095, 7104, 7073, 7066, 7062, 7057, 7081, 7068, 7081, 7081,

     7078, 7083, 7088, 7070, 7090, 7084, 7113, 7077, 7115, 7123,
     7093, 7118, 7139, 7124, 7126, 7151, 7155, 7125, 7103, 7128,
    23766, 7109, 7109, 7104, 7105, 7143,23766, 7144, 7145,    0,
     7123, 7111, 7151, 7152, 7153, 7177,23766, 7112, 7133, 7126,
     7163, 7173, 7126, 7128, 7137, 7137, 7174, 7139, 7140, 7140,
     7159, 7151, 7149, 7147, 7162, 7186, 7159,    0, 7188, 7197,
     7190, 7191,    0, 7192, 7201, 7194, 7196, 7202, 7162, 7203,
     7168, 7200,23766,    0, 7166, 7205, 7214, 7174, 7208, 7181,
     7182,    0, 7211, 7220, 7181, 7216,23766, 7248, 7217, 7194,
        0, 7195,23766,    0, 7221, 7233,23766, 7232, 7200, 7199,

     7198, 7199, 7206, 7207, 7241, 7206, 7207, 7206, 7223, 7215,
     7213, 7211, 7226, 7250, 7251, 7272, 7277,    0,23766, 7256,
     7269, 7224, 7223, 7230, 7265, 7270, 7244, 7230, 7274, 7232,
     7234, 7235, 7237, 7242, 7242, 7249, 7256, 7243, 7262,23766,
        0, 7283,23766, 7252, 7286, 7295, 7257, 7290, 7291, 7316,
     7292, 7261, 7301, 7270, 7280,23766,    0, 7268, 7303, 7304,
     7382,23766,    0, 7281, 7306, 7307,23766, 7274, 7281, 7360,
     7310, 7364, 7283, 7286, 7277, 7314, 7325, 7279, 7297, 7299,
     7290, 7297, 7411, 7309, 7308, 7298,23766, 7332, 7333, 7334,
    23766, 7335, 7349, 7337, 7378, 7423, 7389, 7314,23766, 7315,

     7350,    0, 7314, 7313,23766, 7409, 7316, 7327, 7371, 7396,
     7370,23766, 7376,23766, 7419, 7412, 7423,    0, 7450, 7454,
     7385, 7390, 7381, 7418, 7446, 7381, 7399, 7400, 7389, 7408,
     7467, 7420, 7420, 7443, 7471, 7479, 7463, 7416, 7432,23766,
     7418, 7444, 7429, 7434, 7438, 7441, 7443, 7438, 7441, 7446,
     7447, 7444, 7449, 7457,23766, 7483, 7443, 7489, 7445, 7484,
     7493, 7514, 7448, 7487,    0,    0,23766, 7468, 7490, 7491,
    23766, 7492, 7505,23766, 7519, 7503, 7506, 7482, 7541, 7507,
     7486,    0, 7486, 7519, 7475, 7476, 7484, 7490, 7497, 7554,
     7526, 7488, 7509, 7498, 7558, 7531, 7533, 7543, 7546, 7570,

     7547, 7548, 7522,    0,23766, 7528, 7533, 7531, 7523, 7530,
     7563, 7572, 7527, 7528, 7575,23766, 7607, 7568, 7619, 7569,
     7549,    0, 7550, 7585, 7537, 7539, 7547, 7552, 7553, 7623,
     7583, 7553, 7573, 7594, 7635, 7596, 7557,    0, 7571, 7572,
     7570, 7591, 7574, 7580, 7586, 7600, 7649, 7589, 7599, 7585,
     7593, 7596, 7633, 7599, 7610, 7643, 7656,23766,    0, 7641,
    23766,23766, 7620, 7644, 7645, 7668, 7646, 7652, 7680, 7615,
     7616, 7655, 7620,23766, 7621,    0,    0, 7627, 7628, 7635,
     7635, 7673, 7638, 7639,    0, 7704,23766, 7711, 7676, 7677,
     7716, 7635, 7681, 7737, 7644,23766, 7648,    0, 7656, 7676,

     7666, 7712,    0,    0, 7662, 7706, 7670, 7709, 7673,23766,
     7676,    0,    0, 7683, 7684, 7691, 7691, 7725, 7690, 7691,
     7729, 7706,23766, 7703, 7689, 7711, 7703, 7758, 7703, 7704,
     7720, 7764, 7743, 7722, 7730, 7723, 7726, 7729, 7756, 7719,
     7726,23766, 7759, 7736, 7761, 7762, 7738, 7764, 7765, 7786,
    23766, 7737, 7771, 7781,    0,    0,23766,23766,    0, 7744,
     7748, 7739, 7776, 7786, 7740, 7759,23766, 7814, 7819, 7783,
     7784, 7832,23766,    0, 7785, 7817, 7844,23766,    0, 7763,
    23766, 7756, 7758, 7764,23766,23766,    0, 7803, 7828, 7771,
     7806, 7829,    0,    0,23766,23766,    0, 7779, 7790, 7782,

     7822, 7838, 7792, 7809, 7833,    0,    0, 7838, 7798, 7813,
     7859, 7843,    0, 7864, 7824, 7849, 7871, 7818, 7837, 7878,
     7883, 7867, 7840, 7833, 7872,    0, 7873, 7871, 7895, 7879,
     7888, 7913, 7848, 7908,23766,23766,23766, 7863,    0, 7864,
     7909, 7852, 7853, 7934, 7891,23766, 7902, 7938,23766, 7911,
    23766,    0,    0, 7868, 7868,23766, 7930, 7873, 7931,23766,
    23766,23766, 7890,    0, 7901, 7935, 7891, 7895, 7940,23766,
    23766, 7897, 7908, 7900, 7906, 7912, 7904, 7908, 7945,23766,
     7966, 7950, 7971, 7955, 7964, 7978, 7963, 7937, 7936, 7990,
     7967, 7995, 7968, 7974, 7939, 7952, 7983,23766, 7984, 7985,

     8007, 7991, 8000, 8013,23766, 8028, 7960,23766, 7964,    0,
        0, 8002, 8003, 8040,23766,23766,23766, 7977, 7978, 8046,
     7975,23766, 7976,    0,    0,23766, 7980, 7983, 7983, 7988,
     8000, 7998, 8009, 8033, 8042, 8035, 8063, 8036, 8048, 8038,
     8008, 8069, 8008, 8053,23766, 8055, 8056, 8033, 8020, 8066,
     8068, 8062, 8030, 8064, 8089, 8065,    0,    0,23766,23766,
     8067, 8081, 8074, 8037, 8036, 8102, 8077,    0,    0,23766,
    23766, 8058, 8047, 8066, 8057, 8057, 8067, 8066, 8099, 8092,
     8102, 8095, 8096, 8105, 8066, 8126, 8101, 8071, 8104, 8118,
     8111, 8121, 8122,    0, 8086,23766,23766, 8116, 8096, 8120,

     8131, 8091, 8125,23766,23766, 8134, 8127, 8100, 8105, 8099,
     8133,23766,23766, 8113, 8156, 8118, 8121, 8118, 8107, 8110,
     8156, 8149, 8158, 8160, 8181, 8114, 8154, 8135, 8167, 8173,
    23766,23766, 8126, 8168, 8145, 8178, 8135, 8174, 8183, 8176,
     8137,    0, 8143, 8180, 8189, 8158, 8204, 8188, 8166, 8153,
     8160, 8165, 8216, 8202, 8223, 8200, 8176, 8210, 8219, 8174,
     8189, 8215,    0, 8193, 8225, 8218, 8196,23766, 8198, 8230,
     8246, 8223, 8187, 8203, 8194, 8200, 8258, 8234, 8235, 8214,
     8251, 8214,    0, 8272,23766, 8207, 8276,    0, 8208, 8288,
     8246, 8248, 8273, 8300, 8227, 8304, 8229, 8262, 8264, 8274,

     8237, 8244,23766, 8316, 8278,23766,    0, 8320,23766,23766,
        0, 8288, 8312, 8337, 8289, 8258, 8341, 8292, 8353, 8293,
     8313, 8314, 8266, 8276,23766, 8309,23766,23766, 8310, 8337,
     8315, 8358, 8325, 8365, 8326, 8350, 8294, 8371, 8330, 8363,
     8365, 8331, 8366, 8387, 8343, 8359, 8372, 8361, 8339, 8393,
     8377, 8399, 8391, 8393, 8386, 8395, 8388, 8397, 8418, 8392,
     8394, 8396, 8410, 8411, 8424, 8408, 8412, 8421, 8422, 8416,
     8425, 8418, 8427, 8428,23766, 8465, 8494, 8523, 8552, 8581,
     8610, 8639, 8668, 8697, 8726, 8755, 8784, 8813, 8842, 8871,
     8900, 8917, 8932, 8957, 8982, 9007, 9022, 9037, 9063, 9092,

     9110, 9136, 9165, 9183, 9209, 9238, 9267, 9296, 9314, 9339,
     9364, 9381, 9396, 9424, 9451, 9466, 9481, 9507, 9536, 9554,
     9579, 9606, 9634, 9663, 9691, 9706, 9732, 9761, 9774, 9787,
     9801, 9816, 9832, 9857, 9882, 9907, 9917, 9932, 9942, 9957,
     9967, 9993,10022,10040,10066,10095,10113,10139,10168,10197,
    10226,10255,10284,10313,10342,10371,10400,10429,10458,10487,
    10516,10545,10574,10592,10602,10627,10637,10662,10689,10706,
    10732,10750,10778,10805,10820,10830,10845,10855,10881,10910,
    10928,10938,10963,10990,11017,11045,11074,11103,11131,11146,
    11156,11172,11187,11200,11213,11239,11257,11272,11288, 8431,

     8439,11313,11328,11343,11353,11368,11383,11398,11424,11453,
    11482,11511,11540,11558,11583,11608,11636, 8441,11654,11669,
    11684,11709,11737,11766,11784,11799, 8997, 9329,11814,11840,
    11858,11873,11889,11915,11944,11973,12002,12018,12026,12046,
    12061,12076,12086,12112,12141,12170,12188,12203, 9683, 9897,
    10259,10284,10313,10342,10371,10400,12229,12258,12287,12316,
    12345,12374,12403,12432,12461,12490,12508,12533,12559,12575,
    12585,12600,10429,10458,12615,10487,10516,12641,12670,12688,
    12703,12716,12724,12745,12774,12792,12818,12847,12876,12905,
    12934,12953,12979,13008,13037,13066,13095,13113,13123,13138,

    13151,13159,13167,13175,13183,13191,13199,13207,13228,13257,
    13286,13315,13344,13373,13402,13431,13460,13489,13518,13547,
    13576,13592,13600,13621,13637,13645,13655,13671,13697,13726,
    13755,13784,13813,13842,13871,13900,13929,13958,13987,14016,
    14045,14063,14089,14102,14117,14143,14172,14201,14230,14259,
    14288,14317,14346,14375,14404,14433,14462,14491,14520,14549,
    14578,14607,14636,14665,14694,14723,14741,14767,10548,10574,
    14796,14815,14841,14870,14899,14928,14957,14986,15015,15044,
    15073,15102,15131,15160,10617,11123,15178,15204,15233,15246,
    15272,15301,15330,15359,15387,15413,15442,15471,15500,15529,

    15558,15587,15616,15645,15674,15703,15732,15761,15790,15819,
    15848,15877,15895,15921,15937,15945,15966,15995,16024,16053,
    16082,16111,16139,16166,16195,16214,16240,16269,16298,16327,
    16356,16385,16414,16443,16472,16501,16517,16525,16535,16561,
    16590,16619,16648,16677,16706,16735,16764,16793,16811,16837,
    16866,16895,16924,16953,16982,17011,17040,17069,17098,17127,
    17156,17185,17214,17243,17272,17301,17330,17359,17388,17417,
    17446,17475,17504,17533,17551,17567,17593,17622,17651,17679,
    17706,17735,17764,17793,17822,17851,17880,17909,17938,17967,
    17996,18025,18054,18083,18112,18140,18150,18176,18205,18234,

    18263,18292,18310,18336,18365,18394,18423,18452,18481,18510,
    18539,18568,18597,18626,18655,18684,18713,18742,18771,18800,
    18829,18858,18887,18916,18945,18974,18992,19017,19034,19060,
    19089,19118,19146,19157,19183,19212,19241,19270,19299,19328,
    19357,19386,19415,19444,19473,19491,19517,19530,19556,19574,
    19600,19629,19658,19687,19716,19745,19774,19803,19832,19861,
    19890,19919,19947,19974,20003,20032,20061,20090,20118,20144,
    20170,20199,20228,20257,20286,20315,20344,20373,20402,20420,
    20446,20475,20493,20519,20548,20577,20606,20635,20664,20693,
    20722,20751,20780,20809,20838,20867,20895,20906,20932,20961,

    20990,21019,21048,21076,21103,21132,21161,21190,21219,21237,
    21263,21281,21307,21336,21365,21394,21422,21448,21474,21503,
    21522,21548,21577,21606,21635,21664,21693,21722,21751,21780,
    21809,21838,21867,21896,21925,21954,21983,22012,22041,22070,
    22099,22128,22157,22186,22215,22244,22273,22302,22331,22360,
    22389,22418,22447,22476,22505,22534,22563,22592,22621,22640,
    22666,22695,22724,22753,22782,22811,22840,22869,22898,22927,
    22956,22985,23014,23043,23072,23101,23130,23159,23188,23217,
    23246,23275,23304,23333,23362,23391,23420,23448,23475,23504,
    23533,23562,23591,23620,23649,23678,23707,23736

    } ;

static yyconst flex_int16_t yy_def[4399] =
    {   0,
     3775,    1, 3776, 3776, 3777, 3777, 3778, 3778, 3779, 3779,
     3780, 3780, 3775,   13, 3781, 3781, 3775,   17, 3775,   19,
     3775,   21, 3775,   23, 3782, 3782, 3783, 3783, 3775,   29,
     3775,   31, 3775,   33, 3784, 3784, 3775,   37, 3785, 3785,
     3786, 3786, 3787, 3787, 3775,   45, 3775,   47, 3779, 3779,
     3775,   51, 3788, 3788, 3789, 3789, 3779, 3779, 3779, 3779,
     3775,   61, 3775, 3775, 3775, 3775, 3775, 3775, 3790, 3775,
     3775, 3791, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3792, 3775, 3775, 3775, 3793, 3793, 3793, 3793, 3793, 3793,
     3793, 3793, 3793, 3793, 3793, 3793, 3793, 3793, 3793, 3793,

     3793, 3793, 3793, 3793, 3775, 3775, 3775, 3775, 3794, 3794,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3795, 3795, 3795, 3775, 3775, 3775, 3775, 3775, 3775, 3796,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3797,
     3775, 3797, 3797, 3797, 3797, 3797, 3797, 3797, 3797, 3797,
     3797, 3797, 3797, 3797, 3797, 3797, 3797, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3798, 3798, 3798, 3775, 3775,
     3775, 3775, 3775, 3799, 3800, 3775, 3775, 3801, 3775, 3775,

     3775, 3775, 3802, 3803, 3775, 3775, 3775, 3775, 3804, 3804,
     3775, 3775, 3775, 3775, 3805, 3806, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3807, 3775, 3775, 3808, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3809,
     3775, 3775, 3775, 3775, 3810, 3775, 3811, 3811, 3811, 3811,
     3811, 3775, 3775, 3812, 3775, 3775, 3775, 3775, 3813, 3775,

     3814, 3814, 3814, 3815, 3815, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3816, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3817, 3775, 3775, 3818, 3819, 3775,
     3775, 3775, 3775, 3775, 3820, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3821, 3821, 3821, 3822, 3775, 3775, 3823,
     3824, 3775, 3775, 3775, 3775, 3775, 3825, 3825, 3775, 3775,
     3826, 3775, 3827, 3775, 3775, 3775, 3828, 3775, 3775, 3775,
     3775, 3829, 3775, 3830, 3775, 3775, 3830, 3831, 3775, 3775,
     3775, 3775, 3775, 3775, 3832, 3833, 3832, 3832, 3832, 3832,
     3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832,

     3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832,
     3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832,
     3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832, 3832,
     3832, 3832, 3832, 3832, 3832, 3832, 3775, 3834, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3835, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3836, 3837, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3838, 3839,
     3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838,
     3838, 3838, 3838, 3838, 3838, 3838, 3775, 3838, 3838, 3838,

     3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3838,
     3838, 3838, 3838, 3838, 3838, 3838, 3775, 3775, 3840, 3841,
     3840, 3840, 3775, 3842, 3775, 3775, 3843, 3775, 3775, 3775,
     3844, 3775, 3845, 3775, 3775, 3846, 3775, 3775, 3775, 3847,
     3847, 3775, 3848, 3775, 3775, 3849, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3850, 3775,
     3775, 3775, 3851, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3852, 3853, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3854, 3775, 3775,
     3775, 3775, 3775, 3855, 3775, 3856, 3775, 3857, 3858, 3775,

     3859, 3775, 3860, 3775, 3861, 3775, 3775, 3862, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3863, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3864,
     3865, 3775, 3775, 3775, 3866, 3867, 3868, 3868, 3868, 3869,
     3775, 3775, 3870, 3775, 3775, 3871, 3872, 3775, 3873, 3873,
     3775, 3874, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3875, 3876, 3775, 3775, 3877, 3878, 3775,
     3879, 3880, 3879, 3775, 3775, 3880, 3775, 3775, 3775, 3775,
     3881, 3882, 3775, 3775, 3775, 3775, 3883, 3884, 3885, 3775,
     3775, 3775, 3886, 3775, 3775, 3887, 3775, 3775, 3888, 3775,

     3775, 3775, 3775, 3889, 3775, 3775, 3890, 3891, 3890, 3892,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3893, 3775, 3775, 3894, 3775, 3895, 3775, 3775,
     3896, 3775, 3897, 3898, 3898, 3898, 3898, 3775, 3898, 3899,
     3775, 3775, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898,
     3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898,
     3898, 3898, 3898, 3898, 3898, 3898, 3775, 3775, 3898, 3898,
     3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898,
     3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898,
     3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3898,

     3898, 3898, 3898, 3898, 3898, 3898, 3898, 3775, 3900, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3901, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3902, 3903, 3775, 3775,
     3904, 3905, 3775, 3775, 3775, 3904, 3905, 3904, 3904, 3904,
     3904, 3904, 3904, 3904, 3904, 3775, 3904, 3905, 3904, 3904,
     3904, 3775, 3904, 3905, 3904, 3775, 3904, 3905, 3904, 3775,
     3904, 3905, 3904, 3904, 3775, 3904, 3905, 3904, 3775, 3904,
     3905, 3775, 3904, 3905, 3904, 3775, 3904, 3905, 3904, 3775,
     3904, 3905, 3904, 3904, 3904, 3904, 3904, 3904, 3904, 3904,
     3775, 3904, 3905, 3904, 3904, 3904, 3906, 3907, 3907, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3908, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3909, 3910, 3911, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3912, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3913, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3914, 3775, 3915, 3916, 3917, 3917,
     3775, 3918, 3775, 3775, 3775, 3775, 3775, 3919, 3920, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3921, 3775, 3775, 3922, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3923, 3923,
     3775, 3924, 3775, 3775, 3925, 3775, 3926, 3775, 3927, 3775,
     3775, 3775, 3775, 3775, 3775, 3928, 3775, 3775, 3775, 3775,

     3775, 3929, 3775, 3775, 3775, 3930, 3930, 3931, 3932, 3775,
     3775, 3775, 3932, 3933, 3932, 3775, 3775, 3775, 3932, 3933,
     3934, 3935, 3775, 3775, 3775, 3775, 3936, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3775,
     3775, 3932, 3937, 3932, 3932, 3932, 3932, 3775, 3775, 3932,
     3932, 3932, 3932, 3932, 3775, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3775, 3932, 3933, 3932, 3932, 3932, 3932,
     3932, 3932, 3932, 3932, 3932, 3932, 3932, 3775, 3938, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3939, 3775, 3775, 3775,
     3775, 3775, 3775, 3940, 3941, 3775, 3942, 3943, 3775, 3944,
     3945, 3775, 3946, 3942, 3942, 3942, 3942, 3775, 3942, 3943,
     3942, 3942, 3942, 3942, 3942, 3942, 3942, 3942, 3942, 3942,
     3942, 3942, 3775, 3942, 3943, 3942, 3942, 3942, 3942, 3942,
     3942, 3942, 3942, 3942, 3942, 3942, 3942, 3947, 3948, 3948,
     3775, 3949, 3775, 3775, 3775, 3775, 3775, 3775, 3950, 3775,
     3775, 3775, 3775, 3775, 3775, 3951, 3775, 3775, 3775, 3775,
     3775, 3775, 3952, 3775, 3775, 3775, 3775, 3775, 3775, 3953,
     3775, 3775, 3775, 3775, 3775, 3775, 3954, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3955,
     3775, 3775, 3775, 3775, 3775, 3775, 3956, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3957, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3958, 3775, 3959, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3960, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3961, 3775, 3775, 3962,
     3775, 3775, 3775, 3963, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3964, 3775, 3775, 3775, 3775, 3775, 3965, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3966, 3775, 3967, 3968,
     3969, 3775, 3970, 3775, 3775, 3775, 3775, 3971, 3972, 3775,
     3973, 3775, 3775, 3775, 3775, 3775, 3775, 3974, 3775, 3775,
     3775, 3775, 3775, 3975, 3775, 3775, 3775, 3976, 3775, 3775,
     3775, 3775, 3775, 3775, 3977, 3775, 3775, 3775, 3775, 3775,
     3978, 3775, 3775, 3979, 3775, 3980, 3981, 3982, 3775, 3775,
     3775, 3983, 3775, 3775, 3775, 3775, 3984, 3775, 3775, 3775,
     3775, 3985, 3986, 3775, 3775, 3775, 3987, 3988, 3775, 3775,
     3989, 3775, 3775, 3775, 3775, 3775, 3775, 3990, 3990, 3986,
     3986, 3986, 3775, 3775, 3986, 3986, 3986, 3775, 3775, 3986,

     3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3775, 3775,
     3986, 3986, 3775, 3775, 3986, 3775, 3991, 3775, 3986, 3992,
     3993, 3993, 3986, 3986, 3775, 3986, 3992, 3986, 3775, 3994,
     3986, 3986, 3986, 3986, 3775, 3775, 3775, 3986, 3986, 3986,
     3986, 3986, 3986, 3986, 3986, 3986, 3986, 3775, 3986, 3992,
     3986, 3986, 3992, 3986, 3775, 3775, 3775, 3775, 3775, 3986,
     3986, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3775, 3775,
     3775, 3986, 3992, 3986, 3986, 3986, 3775, 3775, 3775, 3775,
     3775, 3995, 3775, 3775, 3996, 3775, 3775, 3997, 3997, 3998,
     3775, 3998, 3999, 3775, 3775, 3998, 3998, 3998, 3998, 3775,

     3998, 3999, 3998, 3775, 3775, 3998, 3998, 3998, 3775, 3998,
     3999, 3998, 3998, 3775, 3775, 3775, 3775, 3998, 3998, 3998,
     3998, 3998, 3998, 3775, 3775, 3775, 3998, 3999, 3998, 3998,
     3998, 4000, 4000, 4001, 3775, 3775, 3775, 4002, 3775, 3775,
     3775, 4003, 3775, 3775, 3775, 4004, 3775, 3775, 3775, 4005,
     3775, 3775, 3775, 4006, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 4007, 3775, 3775, 3775, 4008, 3775, 3775,
     3775, 4009, 3775, 3775, 3775, 4010, 3775, 3775, 3775, 4011,
     3775, 3775, 4012, 4012, 3775, 3775, 3775, 3775, 3775, 4013,
     4013, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 4014, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 4015, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 4016, 3775, 3775, 4017, 3775, 4018, 3775,
     4019, 3775, 3775, 3775, 4020, 3775, 3775, 3775, 3775, 4021,
     3775, 4022, 3775, 3775, 3775, 4023, 3775, 3775, 3775, 3775,
     4024, 4025, 3775, 3775, 3775, 4026, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 4027, 4028, 3775, 4029, 4029, 4027,
     3775, 4030, 4030, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 4031, 3775, 3775, 3775, 4032,
     4027, 4027, 3775, 3775, 3775, 3775, 4033, 4028, 4027, 4027,
     3775, 4034, 4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027,
     4027, 3775, 3775, 4027, 3775, 4035, 4027, 4036, 4036, 4037,
     4027, 4027, 4027, 4038, 4038, 4027, 4027, 4027, 4027, 3775,
     4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027, 4027,
     4027, 3775, 4027, 4028, 3775, 4027, 3775, 4039, 3775, 4027,
     4028, 4027, 4027, 4027, 3775, 3775, 4027, 4027, 3775, 3775,
     4027, 3775, 3775, 3775, 3775, 3775, 3775, 4040, 4027, 3775,
     4027, 4028, 4027, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 4041, 4042,
     3775, 4043, 4042, 4042, 4042, 4042, 4042, 4042, 4042, 3775,
     3775, 4042, 4042, 3775, 3775, 3775, 3775, 3775, 4042, 4042,
     4042, 4042, 4042, 3775, 3775, 3775, 4042, 4044, 3775, 4042,
     4044, 4045, 4045, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     4046, 4046, 3775, 4047, 4047, 3775, 3775, 4048, 3775, 4049,
     3775, 3775, 3775, 4050, 4051, 3775, 3775, 3775, 3775, 4052,
     3775, 4053, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 4054, 3775, 4055,
     4055, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 4056,

     4056, 4057, 3775, 4058, 3775, 4059, 3775, 3775, 3775, 4060,
     3775, 3775, 3775, 3775, 4061, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 4062, 3775, 4063,
     3775, 3775, 3775, 3775, 3775, 3775, 4064, 3775, 3775, 3775,
     3775, 3775, 4065, 3775, 3775, 4066, 4067, 3775, 4068, 3775,
     4069, 3775, 3775, 3775, 3775, 3775, 3775, 4070, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 4071, 3775, 4067, 3775, 4067,
     4072, 3775, 4073, 3775, 3775, 4074, 4074, 3775, 4067, 4067,
     4075, 4075, 4067, 3775, 3775, 4067, 4067, 4067, 4067, 4067,
     4067, 3775, 3775, 3775, 4076, 4067, 3775, 4077, 4077, 4067,

     4078, 3775, 3775, 3775, 3775, 4067, 4079, 3775, 4067, 4072,
     4067, 3775, 4067, 4072, 3775, 3775, 3775, 3775, 4067, 4072,
     4067, 4067, 4072, 3775, 4067, 4072, 4067, 4067, 4067, 3775,
     3775, 4067, 4067, 4067, 4080, 4080, 4067, 4067, 4067, 3775,
     4081, 4067, 3775, 4067, 4072, 3775, 4082, 3775, 4067, 4072,
     3775, 3775, 3775, 3775, 3775, 4083, 4083, 4067, 3775, 3775,
     4084, 3775, 3775, 3775, 4085, 3775, 3775, 3775, 3775, 3775,
     3775, 4086, 3775, 3775, 3775, 3775, 3775, 4087, 4088, 4089,
     4089, 4087, 4087, 4087, 4087, 4087, 3775, 4087, 4090, 4087,
     3775, 4091, 4087, 4087, 4092, 3775, 4093, 4087, 3775, 4087,

     4090, 4087, 4087, 3775, 3775, 3775, 4094, 4095, 4095, 3775,
     4096, 3775, 3775, 3775, 3775, 3775, 4097, 3775, 4098, 3775,
     3775, 3775, 3775, 3775, 4099, 3775, 3775, 3775, 4100, 4100,
     4101, 4102, 4102, 3775, 3775, 3775, 4103, 3775, 3775, 3775,
     3775, 3775, 3775, 4104, 3775, 3775, 4105, 3775, 3775, 4106,
     3775, 3775, 4107, 3775, 3775, 3775, 3775, 4108, 3775, 3775,
     3775, 3775, 3775, 4109, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 4110, 3775, 3775, 4111, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 4112, 4112, 3775, 3775,
     3775, 3775, 3775, 3775, 4113, 4114, 4115, 3775, 3775, 3775,

     4116, 3775, 3775, 3775, 4117, 3775, 4118, 4113, 3775, 4119,
     4119, 3775, 3775, 4120, 3775, 3775, 3775, 4113, 4121, 3775,
     3775, 3775, 4122, 4113, 4113, 4113, 4113, 4113, 4123, 3775,
     3775, 3775, 4124, 4125, 4125, 3775, 4113, 4126, 3775, 4127,
     4113, 3775, 3775, 4128, 3775, 4129, 4113, 4113, 3775, 4130,
     3775, 3775, 3775, 4113, 3775, 4113, 4113, 4113, 3775, 4131,
     3775, 3775, 4113, 4113, 4113, 4132, 4113, 4113, 4113, 4133,
     4133, 4113, 4134, 4134, 3775, 3775, 3775, 3775, 3775, 3775,
     4135, 3775, 3775, 3775, 4136, 3775, 3775, 3775, 4137, 3775,
     3775, 3775, 4138, 3775, 3775, 3775, 4139, 3775, 4140, 4139,

     3775, 3775, 4139, 3775, 3775, 4139, 4139, 4141, 4142, 4142,
     4139, 4139, 4143, 4143, 4144, 4145, 4145, 4139, 4139, 4139,
     4139, 3775, 4146, 4147, 4148, 4148, 3775, 3775, 4149, 3775,
     3775, 3775, 3775, 3775, 3775, 4150, 3775, 4151, 3775, 3775,
     3775, 3775, 4152, 3775, 4153, 3775, 3775, 4154, 3775, 4155,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 4156, 3775,
     3775, 4157, 4157, 3775, 4158, 3775, 4159, 3775, 4160, 4161,
     4161, 3775, 3775, 4162, 3775, 3775, 3775, 4163, 4164, 4164,
     3775, 4165, 3775, 3775, 4166, 3775, 4167, 4168, 4169, 4169,
     3775, 4170, 4170, 3775, 3775, 3775, 3775, 3775, 3775, 4171,

     3775, 3775, 4172, 4173, 3775, 4174, 4175, 4176, 3775, 3775,
     3775, 4175, 3775, 4177, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 4178, 3775,
     4179, 4179, 4175, 4175, 4175, 3775, 4175, 4176, 3775, 4175,
     3775, 4180, 4181, 3775, 4182, 4182, 4183, 4184, 4175, 3775,
     3775, 4185, 4185, 3775, 4186, 4186, 3775, 4175, 4176, 4175,
     3775, 4187, 4187, 4188, 4175, 4175, 4175, 4175, 3775, 4189,
     4189, 3775, 3775, 4190, 4175, 4175, 3775, 4175, 4176, 4175,
     4175, 4175, 4175, 4191, 3775, 3775, 3775, 4192, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 4193,

     3775, 4194, 4194, 4195, 3775, 4196, 3775, 3775, 4196, 4196,
     3775, 4196, 4197, 3775, 4198, 3775, 3775, 4196, 4199, 3775,
     4200, 4196, 4196, 4196, 4196, 3775, 4201, 4201, 3775, 4202,
     4203, 3775, 4204, 4205, 3775, 3775, 3775, 4206, 3775, 3775,
     3775, 3775, 4207, 4208, 3775, 3775, 3775, 3775, 3775, 3775,
     4209, 3775, 4210, 3775, 3775, 4211, 3775, 3775, 3775, 4212,
     3775, 4213, 4213, 3775, 3775, 3775, 4214, 3775, 3775, 4215,
     3775, 3775, 4216, 4217, 3775, 4218, 4219, 3775, 3775, 4220,
     3775, 4221, 3775, 4222, 4222, 3775, 4223, 4224, 4225, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     4226, 3775, 3775, 3775, 4227, 3775, 4228, 3775, 4229, 3775,
     3775, 3775, 3775, 3775, 4230, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 4231, 4231,
     3775, 4232, 4227, 3775, 3775, 4227, 3775, 4227, 4229, 4227,
     3775, 4233, 4234, 3775, 4235, 4235, 3775, 4236, 3775, 4227,
     4229, 3775, 3775, 4237, 3775, 4238, 3775, 4227, 4229, 3775,
     4239, 3775, 3775, 4227, 4229, 4227, 4229, 4227, 4227, 3775,
     4240, 3775, 3775, 4241, 4241, 4227, 4227, 3775, 4227, 4229,
     4227, 3775, 3775, 3775, 4227, 4229, 3775, 3775, 4242, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 4243, 4243, 3775, 4244, 3775, 3775, 3775, 3775, 4245,
     4246, 4246, 3775, 4247, 3775, 4246, 4248, 4246, 3775, 4246,
     4248, 4246, 4246, 3775, 4249, 4250, 3775, 4251, 4251, 3775,
     4252, 3775, 3775, 3775, 4253, 3775, 4254, 4254, 3775, 3775,
     3775, 3775, 4255, 3775, 3775, 4256, 4256, 4257, 3775, 3775,
     3775, 3775, 3775, 4258, 4259, 3775, 4260, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 4261, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 4262, 4262, 4227, 4263, 4264, 3775, 3775, 3775, 3775,
     4265, 4265, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 4266, 4267, 4227, 4229,
     3775, 4268, 3775, 3775, 4227, 4269, 4270, 4271, 3775, 4227,
     3775, 3775, 3775, 4272, 3775, 4227, 3775, 4227, 4227, 4273,
     3775, 3775, 4274, 4227, 4227, 3775, 3775, 3775, 3775, 3775,
     4275, 4275, 3775, 3775, 3775, 3775, 4276, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 4277, 3775, 4278, 4279, 4279,
     4280, 4280, 4281, 4282, 4282, 4280, 4280, 4280, 3775, 4283,
     3775, 4284, 3775, 4285, 3775, 4286, 4286, 3775, 4287, 3775,
     3775, 4288, 4289, 4289, 3775, 4290, 3775, 3775, 3775, 3775,
     4291, 3775, 3775, 4292, 4293, 4293, 3775, 4294, 3775, 3775,

     3775, 3775, 3775, 3775, 4295, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 4296, 4227, 3775, 4297, 4298, 3775, 4299,
     4299, 3775, 3775, 3775, 4300, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     4301, 4227, 3775, 3775, 4302, 4302, 3775, 4303, 4227, 4304,
     3775, 3775, 4227, 3775, 3775, 3775, 4305, 3775, 4227, 4227,
     4227, 3775, 4306, 3775, 4227, 4227, 3775, 3775, 3775, 3775,
     4307, 3775, 3775, 3775, 3775, 4308, 4308, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 4309, 4310, 4310,
     3775, 4311, 4310, 4310, 4310, 3775, 4312, 3775, 3775, 3775,

     4313, 4314, 3775, 3775, 3775, 4289, 3775, 3775, 3775, 4315,
     3775, 3775, 3775, 3775, 4293, 4294, 4294, 4316, 3775, 3775,
     3775, 3775, 3775, 4295, 4295, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 4227, 4317, 4318, 4299, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 4227, 3775, 4302, 3775, 4303,
     4303, 4227, 3775, 4227, 4319, 4320, 3775, 3775, 4227, 4227,
     3775, 4227, 4321, 3775, 3775, 4227, 4227, 3775, 3775, 3775,
     3775, 4322, 3775, 4308, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 4310, 4310, 4310, 4310, 4310, 3775,

     3775, 4312, 3775, 4323, 3775, 3775, 3775, 3775, 3775, 3775,
     4315, 4315, 3775, 3775, 4294, 3775, 3775, 3775, 3775, 3775,
     3775, 4324, 3775, 4295, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 4227, 4317, 3775, 3775, 4325, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 4227, 3775, 3775, 4303, 3775, 3775, 4326, 4227,
     3775, 3775, 3775, 4227, 4227, 3775, 3775, 4227, 4227, 3775,
     3775, 4327, 3775, 3775, 3775, 4328, 4329, 3775, 3775, 3775,
     3775, 4330, 3775, 3775, 4331, 3775, 3775, 4310, 4310, 4310,
     4310, 3775, 4332, 4312, 3775, 3775, 3775, 4333, 3775, 3775,

     3775, 4315, 4334, 4335, 3775, 4336, 3775, 4337, 3775, 3775,
     3775, 4338, 4339, 3775, 3775, 3775, 3775, 4340, 3775, 3775,
     4227, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 4227, 3775,
     3775, 3775, 4227, 3775, 4227, 4227, 3775, 4341, 4227, 3775,
     3775, 3775, 4327, 4327, 4342, 4343, 3775, 3775, 4344, 3775,
     3775, 3775, 4330, 4330, 3775, 3775, 3775, 3775, 3775, 4310,
     4310, 3775, 3775, 4345, 4332, 4332, 3775, 3775, 4346, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 4347, 4336, 4336, 3775,
     4337, 4337, 4348, 4349, 3775, 3775, 4350, 3775, 3775, 3775,

     4340, 4340, 3775, 3775, 4227, 4351, 4352, 3775, 3775, 3775,
     3775, 3775, 4353, 3775, 3775, 4354, 3775, 3775, 3775, 3775,
     3775, 4227, 3775, 3775, 4227, 4355, 4227, 4227, 3775, 4341,
     4341, 4227, 3775, 4327, 3775, 3775, 3775, 3775, 4356, 3775,
     4330, 3775, 3775, 3775, 3775, 3775, 4310, 4310, 3775, 4332,
     3775, 4357, 4358, 3775, 3775, 3775, 4336, 3775, 4337, 3775,
     3775, 3775, 3775, 4359, 3775, 4340, 3775, 3775, 4360, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 4361, 3775,
     3775, 3775, 3775, 4354, 4354, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 4227, 3775, 3775, 4227, 3775, 4227, 4227,

     3775, 3775, 4341, 3775, 3775, 3775, 3775, 3775, 3775, 4362,
     4363, 4364, 4310, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 4365, 4366, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 4361, 4361, 4367, 3775, 3775, 4354, 4368,
     3775, 3775, 3775, 4369, 3775, 4370, 4227, 3775, 3775, 4360,
     4360, 4227, 3775, 4371, 3775, 3775, 4372, 4373, 3775, 3775,
     4364, 4364, 4310, 3775, 3775, 3775, 3775, 4374, 4375, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 4361, 4367,
     4367, 4376, 4368, 4368, 3775, 3775, 3775, 3775, 4369, 4369,
     4370, 4370, 4360, 4377, 3775, 3775, 3775, 4227, 3775, 4371,

     4371, 3775, 4378, 3775, 3775, 4364, 4310, 3775, 3775, 3775,
     4379, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     4367, 4376, 4376, 4368, 3775, 3775, 4380, 3775, 4369, 4370,
     3775, 3775, 3775, 4227, 3775, 4371, 3775, 4378, 4378, 4310,
     3775, 4381, 3775, 4379, 4379, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 4376, 3775, 3775, 3775, 4380, 4380, 3775,
     3775, 4227, 4382, 3775, 4378, 4310, 3775, 3775, 3775, 4379,
     3775, 4383, 3775, 3775, 3775, 3775, 3775, 3775, 4384, 3775,
     4380, 3775, 4385, 4227, 3775, 3775, 4310, 4386, 3775, 3775,
     3775, 4383, 4383, 3775, 3775, 3775, 3775, 4387, 4384, 4384,

     3775, 3775, 3775, 4388, 3775, 3775, 4389, 3775, 3775, 3775,
     4390, 4391, 4383, 3775, 3775, 3775, 3775, 3775, 3775, 4387,
     4387, 4384, 3775, 3775, 3775, 4392, 3775, 3775, 4391, 4391,
     4393, 3775, 4394, 3775, 3775, 4387, 3775, 3775, 4392, 4392,
     4391, 4393, 4393, 3775, 3775, 4394, 4394, 4395, 3775, 3775,
     3775, 4388, 4392, 4393, 4396, 4394, 4395, 4395, 3775, 4397,
     3775, 4396, 4396, 4395, 3775, 3775, 4397, 4397, 4396, 4398,
     4397, 4398, 4398, 4398,    0, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775

    } ;

static yyconst flex_int16_t yy_nxt[23836] =
    {   0,
       64,   65,   66,   67,   65,   68,   69,   64,   70,   64,
       71,   72,   73,   74,   75,   76,   77,   78,   79,   80,
       81,   64,   82,   83,   64,   64,   64,   84,   85,   85,
       85,   85,   85,   85,   85,   85,   85,   64,   64,   64,
       85,   86,   87,   88,   89,   90,   91,   85,   85,   92,
       85,   93,   94,   95,   96,   97,   85,   98,   99,  100,
      101,  102,  103,  104,   85,  105,  106,  107,   64,  108,
     1773,  110,  108,  108,  127,  110,  108,  127,  364,  111,
      112,  370,  365,  111,  112,  108,  386,  116,  108,  368,
      369,  108,  108,  116,  108,  371,  108,  119,  120,  121,

      119,  142,  119,  120,  121,  119,  142,  127,  122,  123,
      419,  143,  124,  122,  123,  480,  143,  124,  375,  373,
      144,  374,  125,  386,  117,  144,  128,  125,  480,  128,
      117,  127,  129,  376,  113,  129,  114,  108,  113,  507,
      114,  108,  130,  131,  132,  130,  131,  130,  131,  132,
      130,  131,  134,  108,  638,  386,  355,  134,  436,  108,
      639,  126,  693,  356,  505,  135,  126,  472,  386,  460,
      135,  224,  225,  226,  224,  224,  225,  226,  224,  392,
      355,  473,  227,  461,  228,  229,  227,  356,  228,  229,
      462,  393,  326,  327,  326,  326,  230,  328,  475,  476,

      230,  412,  329,  326,  327,  326,  326,  136,  328,  137,
      130, 1774,  136,  329,  137,  130,  138,  108,  127,  138,
      108,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  139,  138,  138,  140,  140,  140,  140,  140,  140,
      140,  140,  140,  138,  138,  138,  140,  140,  140,  140,
      140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
      140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
      140,  138,  138,  138,  138,  145,  146,  147,  148,  146,
      149,  145,  145,  150,  145,  145,  145,  151,  152,  145,

      145,  153,  154,  145,  145,  145,  155,  156,  157,  158,
      159,  145,  145,  160,  160,  160,  160,  160,  160,  160,
      160,  160,  161,  145,  145,  160,  162,  160,  163,  164,
      165,  160,  166,  160,  167,  160,  168,  169,  170,  171,
      172,  160,  173,  174,  175,  176,  160,  177,  160,  160,
      145,  178,  145,  145,  179,  180,  181,  182,  180,  179,
      179,  179,  179,  179,  179,  179,  183,  184,  185,  179,
      179,  179,  179,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  186,  186,  186,  186,  186,  186,  186,  186,
      186,  179,  179,  179,  186,  186,  186,  186,  186,  187,

      186,  186,  186,  186,  186,  186,  186,  186,  186,  186,
      186,  186,  188,  186,  186,  186,  186,  186,  186,  189,
      179,  179,  179,  190,  191,  192,  193,  191,  190,  194,
      190,  190,  190,  190,  195,  196,  197,  190,  190,  190,
      190,  190,  190,  190,  190,  190,  190,  190,  190,  190,
      190,  198,  198,  198,  198,  198,  198,  198,  198,  198,
      190,  190,  190,  198,  198,  198,  198,  198,  198,  198,
      198,  198,  198,  198,  198,  198,  198,  198,  198,  198,
      198,  198,  198,  198,  198,  198,  198,  198,  190,  190,
      190,  190,  199,  200,  201,  202,  200,  199,  203,  199,

      199,  199,  199,  204,  205,  199,  199,  199,  206,  199,
      199,  199,  199,  199,  207,  199,  208,  199,  199,  199,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  199,
      199,  199,  209,  210,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
      209,  209,  209,  209,  209,  209,  209,  199,  199,  199,
      199,  212,  213,  214,  212,  108,  215,  302,  108,  477,
      478,  216,  217,  386,  528,  529,  218,  286,  287,  288,
      286,  287,  520, 1775,  290,  286,  287,  288,  286,  287,
      291,  303,  290,  431,  108,  525,  302,  108,  291,  526,

      337,  338,  339,  337,  219,  362,  362,  362,  362,  220,
      386,  340,  521,  221,  386,  222,  212,  213,  214,  212,
      303,  215,  362,  362,  362,  362,  216,  217,  377,  386,
      378,  218,  386,  108,  362,  362,  362,  362,  729,  387,
      480,  386,  380,  413,  388,  286,  389,  449,  449,  449,
      449,  390,  391,  286,  341,  380,  397,  342,  730,  219,
      398,  428,  108,  429,  220,  399,  430,  516,  221,  747,
      222,  231,  232,  233,  234,  232,  235,  236,  231,  237,
      231,  238,  239,  240,  241,  242,  243,  244,  245,  231,
      246,  231,  247,  248,  249,  250,  251,  252,  231,  231,

      231,  231,  231,  231,  231,  231,  231,  231,  253,  231,
      254,  231,  255,  256,  257,  258,  259,  260,  261,  231,
      262,  231,  263,  264,  265,  266,  267,  231,  268,  269,
      270,  271,  231,  272,  231,  231,  273,  274,  275,  231,
      276,  277,  278,  279,  277,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,  280,  280,
      280,  280,  280,  280,  280,  280,  280,  276,  276,  276,
      280,  280,  280,  280,  280,  280,  280,  280,  280,  280,
      280,  280,  280,  280,  280,  280,  280,  280,  280,  280,

      280,  280,  280,  280,  280,  276,  276,  276,  276,  281,
      282,  283,  284,  282,  281,  281,  281,  281,  281,  281,
      281,  281,  281,  281,  281,  281,  281,  281,  281,  281,
      281,  281,  281,  281,  281,  281,  281,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  281,  281,  281,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
      285,  285,  285,  285,  281,  281,  281,  281,  108,  292,
      293,  292,  292,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,

      108,  108,  108,  108,  108,  108,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  108,  108,  108,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
      294,  294,  294,  295,  108,  108,  108,  108,  296,  297,
      296,  296,  108,  108,  108,  108,  108,  108,  108,  298,
      108,  108,  108,  108,  108,  108,  108,  108,  480,  108,
      108,  108,  108,  300,  108,  108,  296,  297,  296,  296,
      108,  108,  108,  108,  108,  108,  108,  298,  108,  108,
      108,  108,  108,  108,  108,  108, 1448,  108,  108,  108,

      108,  300,  108,  108,  506,  305,  108,  644,  108,  306,
      305,  108,  552,  307,  306, 1411,  386,  386,  307,  348,
      349,  348,  348,  386,  350,  553,  108,  386,  386,  351,
      352,  108,  381,  381,  381,  381,  382,  394,  534,  480,
      353,  480,  535,  383,  395,  414,  400,  409,  401,  581,
      396,  410,  449,  449,  449,  449,  402,  384,  403,  415,
      411,  404,  582,  354,  405,  537,  538,  486,  308, 1777,
      309,  108,  487,  308,  502,  309,  108,  310,  311,  312,
      313,  311,  310,  310,  310,  310,  310,  310,  310,  314,
      310,  310,  310,  310,  310,  310,  310,  310,  310,  310,

      310,  310,  310,  310,  310,  315,  315,  315,  315,  315,
      315,  315,  315,  315,  310,  310,  310,  315,  315,  315,
      315,  315,  315,  315,  315,  315,  315,  315,  315,  315,
      315,  315,  315,  315,  315,  315,  315,  315,  315,  315,
      315,  315,  310,  310,  310,  310,  316,  317,  318,  319,
      317,  316,  320,  316,  316,  316,  316,  321,  316,  316,
      316,  316,  316,  316,  316,  322,  316,  316,  316,  316,
      323,  324,  316,  316,  325,  325,  325,  325,  325,  325,
      325,  325,  325,  316,  316,  316,  325,  325,  325,  325,
      325,  325,  325,  325,  325,  325,  325,  325,  325,  325,

      325,  325,  325,  325,  325,  325,  325,  325,  325,  325,
      325,  316,  316,  316,  316,  330,  331,  332,  333,  331,
      330,  330,  330,  330,  330,  330,  330,  334,  330,  330,
      330,  330,  330,  330,  330,  330,  330,  330,  330,  330,
      330,  330,  330,  335,  335,  335,  335,  335,  335,  335,
      335,  335,  330,  330,  330,  335,  335,  335,  335,  335,
      335,  335,  335,  335,  335,  335,  335,  335,  335,  335,
      335,  335,  335,  335,  335,  335,  335,  335,  335,  335,
      330,  330,  330,  330,  337,  338,  339,  337,  343,  344,
      345,  343,  344,  386,  386,  340,  343,  344,  345,  343,

      344,  348,  349,  348,  348,  347,  350,  386,  386,  480,
      386,  351,  352,  347,  416,  386,  544,  480,  406,  560,
      545,  417,  353,  561,  407,  408, 1000,  420, 1001,  421,
      418,  422,  424,  500,  547,  548,  425,  484,  341,  432,
      423,  342,  433,  434,  426,  354,  781,  501,  435,  566,
      485,  427,  449,  449,  449,  449,  343,  470,  470,  470,
      470,  564,  565,  567,  343,  108,  357,  358,  357,  357,
      108,  108,  108,  108,  108,  108,  108,  108,  359,  360,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  361,  361,  361,  361,  361,  361,  361,

      361,  361,  108,  108,  108,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  361,  361,  361,  361,  361,
      108,  108,  108,  108,  439,  454,  465,  465,  465,  465,
      470,  470,  470,  470,  470,  470,  470,  470,  638,  520,
      480,  386,  568,  480,  639,  480,  467,  517,  517,  517,
      517,  696,  480,  517,  517,  517,  517,  569,  440,  455,
      480,  522,  480,  480,  441,  456,  744,  493,  442,  457,
      443,  458,  481,  444,  459,  488,  489,  482,  483,  494,
      490,  495,  480,  496,  515,  491,  503,  492,  480,  571,

      572,  386,  497,  573,  574,  504,  583,  498,  499,  594,
      584,  605,  508,  841,  509,  517,  517,  517,  517,  607,
      606,  595,  511,  596,  776,  512,  523,  523,  523,  523,
      510,  513, 1778,  608,  514,  523,  523,  523,  523,  523,
      523,  523,  523,  532,  532,  532,  532,  532,  532,  532,
      532,  532,  532,  532,  532,  542,  542,  542,  542,  542,
      542,  542,  542,  542,  542,  542,  542,  555,  555,  555,
      555,  555,  555,  555,  555,  555,  555,  555,  555,  557,
      557,  557,  557,  557,  557,  557,  557,  557,  557,  557,
      557,  575,  591,  651,  650,  592,  576,  593,  577,  597,

      585,  586,  587,  578,  579,  588,  386,  600,  598,  702,
      589,  601,  590,  599,  609,  613, 1779,  614,  703,  615,
      602,  610,  617,  618,  621,  603,  622, 1451,  619,  623,
      611,  620,  624,  616,  800,  625,  626,  629,  629,  629,
      629,  627,  629,  629,  629,  629,  629,  629,  629,  629,
      632,  632,  632,  632,  632,  632,  632,  632,  632,  632,
      632,  632,  633,  633,  633,  633,  638,  640,  634,  638,
      654,  386,  639,  641,  386,  639,  642,  642,  642,  642,
      677,  678,  636,  642,  642,  642,  642,  644,  644,  644,
      644,  644,  644,  644,  644,  674,  694,  364,  645,  675,

      695,  365,  645, 1780,  655,  662,  662,  662,  662,  734,
      656,  697,  698,  386,  657,  775,  658,  368,  369,  659,
      662,  662,  662,  662,  662,  662,  662,  662,  666,  666,
      666,  666,  666,  666,  666,  666,  666,  666,  666,  666,
      670,  670,  670,  670,  788,  671,  670,  670,  670,  670,
      672,  671,  679,  679,  679,  679,  672,  679,  679,  679,
      679,  679,  679,  679,  679,  683,  683,  683,  683,  683,
      683,  683,  683,  683,  683,  683,  683,  691,  691,  691,
      691,  691,  691,  691,  691,  711,  717,  386,  692,  386,
      386, 1165,  692,  704,  704,  704,  704,  704,  704,  704,

      704,  362,  362,  362,  362,  705,  706,  386, 1782,  705,
      706,  374,  726,  377,  745,  378,  727,  735,  727,  712,
      718,  728,  386,  725,  725,  713,  719,  380,  386,  714,
      720,  715,  721,  386,  716,  722,  725,  725,  386,  772,
      380,  381,  381,  381,  381,  741,  741,  741,  741,  525,
      736,  386,  383,  526,  810,  757,  742,  811,  820,  746,
      363,  821,  758,  528,  529,  386,  449,  449,  449,  449,
      386,  737,  738,  738,  738,  738,  738,  738,  738,  738,
      738,  738,  738,  738,  738,  738,  738,  738,  738,  759,
      739,  738,  386,  740,  738,  738,  738,  738,  738,  738,

      386,  748,  749,  743,  750,  386,  386,  386,  386,  738,
      738,  738,  386,  386,  751,  386,  767,  767,  767,  767,
      760,  386,  752, 1092,  761,  754,  762,  768,  386,  753,
      755,  386,  386,  386,  763,  386,  386,  738,  738,  738,
      738,  766,  756,  764,  770,  771,  769,  386,  386,  765,
      386,  777,  386,  773,  779,  774,  780,  782,  386,  783,
      386,  785,  386,  786,  386,  787,  778,  386,  784,  386,
      386,  386,  386,  386,  789,  386,  808,  818,  480,  793,
      790,  480,  791,  534,  792,  480,  825,  535,  480,  795,
      544,  480,  794,  480,  545,  480,  797,  798,  802,  801,

      803,  799,  386,  796,  829,  804,  826,  806,  480,  840,
      842,  805,  480,  859,  807,  465,  465,  465,  465,  809,
      819,  465,  465,  465,  465,  470,  470,  470,  470,  845,
      839,  875,  849,  889, 1190,  480,  480,  480,  480, 1092,
      480,  467,  830,  830,  830,  830,  830,  830,  830,  830,
      830,  830,  830,  830,  830,  830,  830,  830,  830,  843,
      831,  830,  850,  832,  830,  830,  830,  830,  830,  830,
      855,  480,  844,  480,  885,  480,  886,  480,  851,  830,
      830,  830,  480,  517,  517,  517,  517,  523,  523,  523,
      523,  532,  532,  532,  532,  868,  879,  888,  480,  537,

      538,  560,  887, 1092,  480,  561,  890,  830,  830,  830,
      830,  833,  834,  834,  834,  834,  833,  833,  833,  833,
      833,  833,  833,  835,  833,  833,  833,  833,  894,  836,
      833,  884,  837,  833,  833,  833,  833,  833,  833,  480,
      480,  520,  520,  542,  542,  542,  542, 1021,  833,  833,
      833,  547,  548,  555,  555,  555,  555,  557,  557,  557,
      557,  564,  565, 1022,  896,  898,  386,  895, 1017,  899,
      838,  967,  968,  995,  996, 1018,  833,  833,  833,  833,
      846,  846,  846,  846,  846,  846,  846,  846,  846,  846,
      846,  846,  846,  846,  846,  846,  846, 1133,  847,  846,

      957,  848,  846,  846,  846,  846,  846,  846, 1032,  638,
      964,  964,  964,  964, 1033,  639,  640,  846,  846,  846,
      958,  965,  641,  367,  960,  960,  960,  960,  969, 1013,
      638, 1014,  970, 1015, 1099,  961,  639, 1016,  629,  629,
      629,  629,  651,  650,  386,  846,  846,  846,  846,  852,
      852,  852,  852,  852,  852,  852,  852,  852,  852,  852,
      852,  852,  852,  852,  852,  852,  962,  853,  852, 1041,
      854,  852,  852,  852,  852,  852,  852,  971,  975,  984,
      972,  985, 1134,  976,  640,  973,  852,  852,  852,  674,
      639, 1043,  974,  675, 1044,  977, 1099,  986,  978,  632,

      632,  632,  632,  633,  633,  633,  633,  642,  642,  642,
      642,  808, 1042, 1198,  852,  852,  852,  852,  856,  856,
      856,  856,  856,  856,  856,  856,  856,  856,  856,  856,
      856,  856,  856,  856,  856, 1090,  857,  856, 1091,  858,
      856,  856,  856,  856,  856,  856,  633,  633,  633,  633,
      677,  678,  634,  677,  678,  856,  856,  856,  644,  644,
      644,  644,  662,  662,  662,  662,  636,  697,  698,  645,
      666,  666,  666,  666,  674,  818, 1099, 1206,  675,  679,
      679,  679,  679,  856,  856,  856,  856,  860,  860,  860,
      860,  860,  860,  860,  860,  860,  860,  860,  860,  860,

      860,  860,  860,  860,  479,  861,  860,  479,  862,  860,
      860,  860,  860,  860,  860,  479,  479,  479,  479,  479,
      479,  479,  479,  479,  860,  860,  860,  479,  479,  479,
      479,  479,  479,  479,  479,  479,  479,  479,  479,  479,
      479,  479,  479,  479,  479,  863,  864,  479,  479,  479,
      479,  479,  860,  860,  860,  860,  865,  865,  865,  865,
      865,  865,  865,  865,  865,  865,  865,  865,  865,  865,
      865,  865,  865, 1088,  866,  865, 1095,  867,  865,  865,
      865,  865,  865,  865,  386,  386,  670,  670,  670,  670,
      386,  671,  480,  865,  865,  865,  672,  683,  683,  683,

      683,  691,  691,  691,  691,  694,  727, 1097,  727,  695,
     1098,  728,  692, 1252, 1109, 1132, 1089,  386,  386, 1096,
     1128,  865,  865,  865,  865,  869,  869,  869,  869,  869,
      869,  869,  869,  869,  869,  869,  869,  869,  869,  869,
      869,  869, 1115,  870,  869,  726,  871,  869,  869,  869,
      869,  869,  869,  704,  704,  704,  704,  725,  386,  386,
     1135,  386,  869,  869,  869,  705,  706,  386,  386, 1041,
      725, 1412,  767,  767,  767,  767, 1783, 1263,  386, 1130,
     1264, 1467, 1131,  768,  386, 1137,  386,  386, 1170, 1138,
      869,  869,  869,  869,  872,  872,  872,  872,  872,  872,

      872,  872,  872,  872,  872,  872,  872,  872,  872,  872,
      872, 1129,  873,  872, 1136,  874,  872,  872,  872,  872,
      872,  872,  386,  386, 1141,  386, 1142,  386,  386,  386,
      386,  872,  872,  872, 1150, 1150, 1150, 1150,  465,  465,
      465,  465,  386, 1270, 1139, 1151, 1271,  386, 1140,  691,
     1277, 1147, 1171, 1278,  386, 1144, 1143, 1451, 1145,  872,
      872,  872,  872,  876,  876,  876,  876,  876,  876,  876,
      876,  876,  876,  876,  876,  876,  876,  876,  876,  876,
     1148,  877,  876, 1146,  878,  876,  876,  876,  876,  876,
      876,  386,  386,  386,  386,  386,  386,  386,  386, 1472,

      876,  876,  876,  386, 1158, 1158, 1158, 1158, 1284, 1291,
     1298, 1285, 1292, 1299, 1787, 1159,  386, 1173, 1155, 1160,
     1172, 1149, 1157, 1152,  386,  386, 1154, 1161,  876,  876,
      876,  876,  880,  880,  880,  880,  880,  880,  880,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  880, 1156,
      881,  880,  386,  882,  880,  880,  880,  880,  880,  880,
      386,  386,  386,  386, 1166,  386,  386,  480,  386,  880,
      880,  880, 1306, 1345, 1311,  638,  883, 1312, 1307, 1373,
     1162,  639, 1168, 1174, 1164, 1167, 1169, 1346, 1374, 1248,
     1176, 1163, 1177,  386,  386, 1175,  386,  880,  880,  880,

      880,  891,  891,  891,  891,  891,  891,  891,  891,  891,
      891,  891,  891,  891,  891,  891,  891,  891,  386,  892,
      891, 1179,  893,  891,  891,  891,  891,  891,  891, 1178,
      900,  906, 1180,  386,  386,  386,  386,  386,  891,  891,
      891, 1479, 1181, 1318,  912, 1480, 1319,  480,  480, 1422,
     1583,  918, 1423,  386, 1584, 1261,  386, 1183,  480, 1187,
     1189,  480,  386,  386,  901,  907,  891,  891,  891,  891,
      902,  908, 1182, 1188,  903,  909,  904,  910,  913,  905,
      911, 1191, 1192, 1224,  914,  919, 1194, 1231,  915, 1227,
      916,  920, 1193,  917,  386,  921, 1789,  922, 1262, 1234,

      923,  924,  924,  924,  924,  924,  924,  924,  924,  924,
      924,  924,  924,  924,  924,  924,  924,  924,  386,  925,
      924, 1195,  924,  924,  924,  924,  924,  924,  924,  386,
      926,  932, 1219, 1219, 1219, 1219,  480, 1220,  924,  924,
      924, 1196, 1221, 1222,  943, 1325, 1325, 1325, 1325, 1477,
      480,  949, 1050, 1197, 1429, 1791, 1326, 1430,  480,  480,
     1233,  480, 1268,  480,  927,  933,  924,  924,  924,  924,
      928,  934, 1056, 1067,  929,  935,  930,  936,  944,  931,
      937, 1232, 1236, 1237,  945,  950, 1051,  480,  946, 1073,
      947,  951, 1052,  948,  480,  952, 1053,  953, 1054, 1240,

      954, 1055, 1238,  480,  480, 1269, 1057, 1068,  480,  480,
      480, 1225, 1058, 1069, 1482, 1483, 1059, 1070, 1060, 1071,
      480, 1061, 1072, 1074, 1235, 1226, 1793,  480, 1241, 1075,
     1255,  480, 1246, 1076, 1242, 1077,  480, 1250, 1078, 1110,
     1111, 1111, 1111, 1111, 1110, 1110, 1110, 1110, 1110, 1110,
     1110, 1112, 1110, 1110, 1110, 1110,  480, 1113, 1110, 1249,
     1114, 1110, 1110, 1110, 1110, 1110, 1110, 1239,  480, 1253,
      480, 1371, 1257,  520, 1586, 1587, 1110, 1110, 1110, 1478,
     1247,  633,  633,  633,  633, 1372, 1439,  634, 1446, 1440,
     1481, 1447, 1251, 1275,  520,  480, 1282, 1260, 1289, 1296,

     1309, 1316, 1254,  386, 1110, 1110, 1110, 1110, 1116, 1117,
     1117, 1117, 1117, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
     1118, 1116, 1116, 1116, 1116, 1259, 1119, 1116, 1256, 1120,
     1116, 1116, 1116, 1116, 1116, 1116, 1276,  386, 1420, 1283,
     1473, 1290, 1297, 1310, 1317, 1116, 1116, 1116, 1329, 1329,
     1329, 1329, 1331, 1331, 1331, 1331, 1427,  386, 1437, 1330,
     1444,  381, 1088, 1332,  363, 1095, 1492,  367,  386, 1467,
     1261,  386,  524, 1116, 1116, 1116, 1116,  741,  741,  741,
      741, 1421, 1121, 1365, 1365, 1365, 1365, 1122,  742, 1376,
     1376, 1376, 1376, 1468, 1366,  386, 1490, 1333,  386, 1428,

     1377, 1438, 1334, 1445, 1469, 1469, 1469, 1469, 1474, 1474,
     1474, 1474,  386,  386, 1511, 1470, 1268, 1806,  527, 1475,
     1807, 1123, 1496, 1808, 1275,  386,  533, 1124, 1125,  386,
      386, 1491, 1500, 1505, 1126, 1184, 1184, 1184, 1184, 1184,
     1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184,
     1184, 1184, 1495, 1185, 1184,  386, 1186, 1184, 1184, 1184,
     1184, 1184, 1184, 1501,  386, 1471, 1503,  386,  386, 1476,
      386,  386, 1184, 1184, 1184, 1493, 1493, 1493, 1493, 1498,
     1498, 1498, 1498, 1497, 1809, 1282, 1494,  536, 1502, 1479,
     1499, 1504, 1507, 1480, 1543,  386, 1533, 1482, 1483,  386,

     1184, 1184, 1184, 1184, 1216, 1216, 1216, 1216, 1216, 1216,
     1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
     1216,  479, 1217, 1216,  479, 1218, 1216, 1216, 1216, 1216,
     1216, 1216,  479,  479,  479,  479,  479,  479,  479,  479,
      479, 1216, 1216, 1216,  479,  479,  479,  479,  479,  479,
      479,  479,  479,  479,  479,  479,  479,  479,  479,  479,
      479,  479,  479,  479,  479,  479,  479,  479,  479, 1216,
     1216, 1216, 1216, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228, 1228,
      386, 1229, 1228,  386, 1230, 1228, 1228, 1228, 1228, 1228,

     1228,  386, 1513, 1513, 1513, 1513,  386,  386, 1489, 1817,
     1228, 1228, 1228, 1514, 1509, 1509, 1509, 1509, 1289, 1818,
      543, 1506,  386,  386, 1822, 1836, 1337, 1337, 1337, 1337,
     1562, 1512, 1540, 1541,  386,  386,  386, 1338, 1228, 1228,
     1228, 1228, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243,
     1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1508,
     1244, 1243,  386, 1245, 1243, 1243, 1243, 1243, 1243, 1243,
     1339, 1523, 1524,  386,  386,  386, 1340, 1341, 1510, 1243,
     1243, 1243,  386, 1342, 1839, 1150, 1150, 1150, 1150,  386,
      386, 1296, 1516,  546,  732, 1515, 1151,  741, 1309, 1544,

      559, 1522, 1547, 1531, 1534, 1810,  386, 1243, 1243, 1243,
     1243, 1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518,
     1518, 1518, 1518, 1518, 1518, 1518, 1518, 1518, 1528, 1519,
     1518,  386, 1520, 1518, 1518, 1518, 1518, 1518, 1518,  386,
     1158, 1158, 1158, 1158, 1545,  386,  386, 1529, 1518, 1518,
     1518, 1159, 1535, 1535, 1535, 1535,  465,  465,  465,  465,
     1316,  386,  563, 1536, 1420,  767,  673, 1532, 1565,  386,
     1552,  386,  386, 1840,  386, 1538, 1518, 1518, 1518, 1518,
     1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525, 1525,
     1525, 1525, 1525, 1525, 1525, 1525, 1525, 1539, 1526, 1525,

     1546, 1527, 1525, 1525, 1525, 1525, 1525, 1525, 1542,  386,
      386, 1555, 1555, 1555, 1555,  386,  386, 1525, 1525, 1525,
      480,  732, 1556,  480, 1845, 1219, 1219, 1219, 1219,  386,
     1220,  386,  386, 1850, 1554, 1221, 1222,  386,  732, 1567,
     1551,  386, 1564, 1612, 1597, 1525, 1525, 1525, 1525, 1548,
     1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
     1548, 1548, 1548, 1548, 1548, 1548, 1560, 1549, 1548, 1561,
     1550, 1548, 1548, 1548, 1548, 1548, 1548, 1563, 1557, 1557,
     1557, 1557,  386,  386,  480,  386, 1548, 1548, 1548, 1558,
      386, 1594, 1594, 1594, 1594,  480,  480,  480,  386,  480,

      480,  480, 1595,  480,  480,  480,  480, 1868,  480, 1566,
      520,  480, 1590, 1888, 1548, 1548, 1548, 1548, 1568, 1599,
     1575, 1604, 1604, 1604, 1604,  386, 1576, 1598, 1619, 1631,
     1427, 1596,  676, 1606, 1632, 1608, 1607, 1622, 1623, 1613,
     1603,  480, 1559, 1569, 1570, 1570, 1570, 1570, 1569, 1569,
     1569, 1569, 1569, 1569, 1569, 1571, 1569, 1569, 1569, 1569,
      480, 1572, 1569,  480, 1573, 1569, 1569, 1569, 1569, 1569,
     1569,  480, 1614, 1614, 1614, 1614, 1616, 1616, 1616, 1616,
     1569, 1569, 1569, 1615, 1437, 1605,  693, 1617,  633,  633,
      633,  633,  480,  732,  634,  480,  480, 1574, 1629, 1618,

     1444,  439,  696, 1894, 1895,  454, 1896, 1620, 1569, 1569,
     1569, 1569, 1591, 1591, 1591, 1591, 1591, 1591, 1591, 1591,
     1591, 1591, 1591, 1591, 1591, 1591, 1591, 1591, 1591,  520,
     1592, 1591, 1621, 1593, 1591, 1591, 1591, 1591, 1591, 1591,
      480, 1624, 1624, 1624, 1624, 1711, 1711, 1711, 1711, 1591,
     1591, 1591, 1625, 1673, 1673, 1673, 1673, 1582, 1586, 1587,
     1633,  480,  732,  386, 1674, 1677, 1677, 1677, 1677, 1865,
     1585, 1583, 1630, 1589,  386, 1584, 1678, 1591, 1591, 1591,
     1591, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600,
     1600, 1600, 1600, 1600, 1600, 1600, 1600, 1600, 1812, 1601,

     1600, 1790, 1602, 1600, 1600, 1600, 1600, 1600, 1600, 1712,
     1694, 1694, 1694, 1694, 1675,  386,  386,  386, 1600, 1600,
     1600, 1695, 1509, 1509, 1509, 1509, 1679, 1696, 1696, 1696,
     1696,  480, 1912, 1331, 1331, 1331, 1331, 1811, 1697, 1824,
      386,  480,  480,  480, 1332, 1826, 1600, 1600, 1600, 1600,
     1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609, 1609,
     1609, 1609, 1609, 1609, 1609, 1609, 1609, 1698, 1610, 1609,
     1834, 1611, 1609, 1609, 1609, 1609, 1609, 1609, 1333, 1498,
     1498, 1498, 1498, 1334,  386,  386, 1510, 1609, 1609, 1609,
     1499, 1365, 1365, 1365, 1365, 1917,  524, 1265, 1716,  480,

      386, 1265, 1366, 1337, 1337, 1337, 1337,  386, 1829, 1831,
     1265,  386,  527, 1272, 1338, 1609, 1609, 1609, 1609, 1626,
     1626, 1626, 1626, 1626, 1626, 1626, 1626, 1626, 1626, 1626,
     1626, 1626, 1626, 1626, 1626, 1626, 1823, 1627, 1626, 1819,
     1628, 1626, 1626, 1626, 1626, 1626, 1626, 1339, 1376, 1376,
     1376, 1376, 1837, 1340, 1341, 1726, 1626, 1626, 1626, 1377,
     1342, 1757, 1757, 1757, 1757,  386,  386,  386, 1813, 1813,
     1813, 1813, 1758,  386,  386,  386,  386,  386,  386, 1814,
      386,  386,  386,  480, 1626, 1626, 1626, 1626,  386, 1498,
     1498, 1498, 1498, 1272, 1272,  533, 1821, 1820, 1825, 1847,

     1499, 1843, 1849, 1827, 1852, 1727, 1828, 1830, 1931, 1279,
     1858, 1841, 1279, 1846, 1759, 1784, 1784, 1784, 1784, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784,
     1784, 1784,  385, 1785, 1784,  385, 1786, 1784, 1784, 1784,
     1784, 1784, 1784,  385,  385,  385,  385,  385,  385,  385,
      385,  385, 1784, 1784, 1784,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
     1784, 1784, 1784, 1784, 1469, 1469, 1469, 1469, 1474, 1474,
     1474, 1474, 1794, 1800,  386, 1470,  386,  386,  386, 1475,

     1493, 1493, 1493, 1493, 1832, 1832, 1832, 1832,  386,  386,
     1279, 1494,  386,  536, 1286, 1833,  386, 1513, 1513, 1513,
     1513,  386, 1855,  386,  386,  386, 1795, 1801, 1514,  386,
      386, 1851, 1796, 1802, 1842, 1856, 1797, 1803, 1798, 1804,
     1848, 1799, 1805,  386, 1853, 1471,  386, 1854, 1815, 1476,
     1535, 1535, 1535, 1535, 1859, 1866,  386, 1816, 1857, 1893,
     1286, 1536, 1286, 1878,  543, 1860, 1861, 1219,  386, 1293,
     1872,  386,  386, 1293, 1293, 1909, 1877,  386, 1835, 1862,
     1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
     1862, 1862, 1862, 1862, 1862, 1862, 1873, 1863, 1862, 1874,

     1864, 1862, 1862, 1862, 1862, 1862, 1862, 1889, 1555, 1555,
     1555, 1555, 1881,  546, 1300, 1867, 1862, 1862, 1862, 1556,
     1557, 1557, 1557, 1557,  480, 1300,  480,  480,  480, 1897,
      480, 1558, 1875, 1875, 1875, 1875, 1300, 1879, 1879, 1879,
     1879,  480,  480, 1876, 1862, 1862, 1862, 1862, 1880, 1910,
     1915, 1913,  386,  480, 1944, 1945, 1914,  386, 1946, 1882,
     1882, 1882, 1882, 1898, 1923, 1594, 1594, 1594, 1594, 1899,
     1883, 1947, 1948, 1900, 1916, 1901, 1595, 1933, 1902, 1918,
     1949, 1903,  480,  559, 1559, 1869, 1869, 1869, 1869, 1869,
     1869, 1869, 1869, 1869, 1869, 1869, 1869, 1869, 1869, 1869,

     1869, 1869, 1884, 1870, 1869, 1911, 1871, 1869, 1869, 1869,
     1869, 1869, 1869,  480, 1919, 1904, 1885, 1886, 1313,  480,
     1887, 1905, 1869, 1869, 1869, 1906, 1313, 1907,  520, 1313,
     1908, 1604, 1604, 1604, 1604, 1614, 1614, 1614, 1614, 1932,
      563, 1320,  480, 1320, 1320, 1922, 1615, 1676, 1943, 1950,
     1869, 1869, 1869, 1869, 1890, 1890, 1890, 1890, 1890, 1890,
     1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890, 1890,
     1890,  480, 1891, 1890, 1930, 1892, 1890, 1890, 1890, 1890,
     1890, 1890,  520, 1920, 1920, 1920, 1920, 1924, 1924, 1924,
     1924, 1890, 1890, 1890, 1921, 1605, 1952, 1680, 1925, 1926,

     1953, 1955, 1956,  480, 1616, 1616, 1616, 1616, 1929, 1957,
     1684, 1959, 1960, 1961, 1942, 1617, 1962, 1963, 1691, 1890,
     1890, 1890, 1890, 1927, 1927, 1927, 1927, 1624, 1624, 1624,
     1624, 1965, 1970, 1972, 1928, 1973, 1976, 1977, 1625, 1934,
     1934, 1934, 1934,  480, 1673, 1673, 1673, 1673, 1331, 1337,
     1935, 1978, 1979, 1980, 1981, 1674, 1958, 1964, 1982,  480,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
     1936, 1936, 1936, 1936, 1936, 1936, 1936, 1983, 1937, 1936,
     1986, 1938, 1936, 1936, 1936, 1936, 1936, 1936, 1987, 1988,
     1989, 1991, 1992, 1974, 1974, 1974, 1974, 1936, 1936, 1936,

     1677, 1677, 1677, 1677, 1975, 1675, 1696, 1696, 1696, 1696,
     1995, 1678, 1966, 1966, 1966, 1966, 1996, 1697, 1711, 1711,
     1711, 1711, 1997, 1967, 1998, 1936, 1936, 1936, 1936, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1971, 1940, 1939, 1999,
     1941, 1939, 1939, 1939, 1939, 1939, 1939, 2001, 2002, 2003,
     1968, 1679, 1984, 1984, 1984, 1984, 1939, 1939, 1939, 1969,
     2004, 2005, 2006, 1985, 1993, 1993, 1993, 1993, 2007, 2007,
     2007, 2007, 1712, 2009, 2010, 1994, 2011, 2012, 2013, 2008,
     2014, 2015, 2016, 2018, 1939, 1939, 1939, 1939, 2019, 2022,

     2022, 2022, 2022, 2025, 2026, 2026, 2026, 2026, 2028, 2030,
     2023, 2031, 2031, 2031, 2031, 2027, 2037, 2038,  654,  673,
     1424, 1424, 2032, 1424,  676, 1431, 1431, 1431, 2040,  693,
     1441, 1441, 1441,  696, 1448, 1448, 1448, 2042, 2043, 2044,
      386,  732, 2045, 1789, 1469,  386, 2048, 1793, 1474, 2050,
     2052, 2054, 2046, 2053, 2033, 2054, 2049, 2055, 2056, 2057,
     2059, 2061, 2061, 2060, 2062, 2063, 2065, 2066, 2034, 2035,
     2067, 1810, 2036,  386, 2073, 2074, 2075, 2077, 2047,  732,
     1813, 1813, 1813, 1813, 2082,  386, 2078, 2084, 2084, 2084,
     2084, 1814, 2051, 2095, 2097,  386, 2099, 1839, 2085, 1840,

     1845, 2117, 2058,  386,  386,  386, 2123,  386,  386, 2083,
      386,  732, 2068, 2069, 2069, 2069, 2069, 2069, 2069, 2069,
     2069, 2069, 2069, 2069, 2069, 2069, 2069, 2069, 2069, 2069,
     2072, 2070, 2069, 2079, 2071, 2069, 2069, 2069, 2069, 2069,
     2069,  386, 2080, 2087,  386,  386, 2091, 2096,  386,  386,
     2069, 2069, 2069,  386, 2092, 2092, 2092, 2092, 2136, 1832,
     1832, 1832, 1832, 1150, 2086, 2093, 2094, 2089, 2088, 1158,
     1833, 2101,  386,  386,  386, 2106, 2100, 2107, 2069, 2069,
     2069, 2069,  386,  386,  386, 2090, 2102, 2102, 2102, 2102,
     2104, 2104, 2104, 2104,  386, 2121,  732, 2103, 2141, 2147,

      386, 2105, 2111, 2122, 1888, 2133,  386, 2153, 2132,  386,
      386, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108,
     2108, 2108, 2108, 2108, 2108, 2108, 2108, 2108, 2127, 2109,
     2108, 2128, 2110, 2108, 2108, 2108, 2108, 2108, 2108,  386,
     2115, 2115, 2115, 2115, 2130, 2130, 2130, 2130, 2108, 2108,
     2108, 2116,  386, 2154, 2155, 2131, 1875, 1875, 1875, 1875,
      386, 2151, 2157, 2140,  386, 2152,  386, 1876,  732,  386,
      386, 2161, 2129,  386, 2134, 2162, 2108, 2108, 2108, 2108,
     2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112,
     2112, 2112, 2112, 2112, 2112, 2112, 2112, 2137, 2113, 2112,

      386, 2114, 2112, 2112, 2112, 2112, 2112, 2112, 2142, 2138,
     1879, 1879, 1879, 1879, 2163, 2168, 2168, 2112, 2112, 2112,
     2139, 2146, 2169, 1882, 1882, 1882, 1882, 2166, 2170, 2173,
     2167,  386, 2174, 2175, 1883, 2164, 2171, 2175, 2176, 2177,
     1909, 2179, 2181,  480, 2192, 2112, 2112, 2112, 2112, 2118,
     2118, 2118, 2118, 2118, 2118, 2118, 2118, 2118, 2118, 2118,
     2118, 2118, 2118, 2118, 2118, 2118, 1884, 2119, 2118, 2158,
     2120, 2118, 2118, 2118, 2118, 2118, 2118,  480, 2165, 2172,
     1885, 1886, 2178,  480, 1887, 2195, 2118, 2118, 2118, 2159,
     2159, 2159, 2159, 1924, 1924, 1924, 1924,  480, 2197, 2207,

     2160,  480,  480, 2190, 1925, 1926,  480, 2182,  480,  386,
      480, 2210, 2211,  480, 2118, 2118, 2118, 2118, 2124, 2124,
     2124, 2124, 2124, 2124, 2124, 2124, 2124, 2124, 2124, 2124,
     2124, 2124, 2124, 2124, 2124, 2183, 2125, 2124, 2184, 2126,
     2124, 2124, 2124, 2124, 2124, 2124, 2185, 2186,  480,  480,
     2198,  480, 2212, 2213, 2203, 2124, 2124, 2124,  480, 2214,
     2215, 2216, 1952, 1920, 1920, 1920, 1920, 2209, 1673,  520,
     2193,  520, 2218, 2194, 1921, 1955, 2217, 2220, 2221, 2202,
     1958, 2222, 2224, 2124, 2124, 2124, 2124, 2143, 2143, 2143,
     2143, 2143, 2143, 2143, 2143, 2143, 2143, 2143, 2143, 2143,

     2143, 2143, 2143, 2143, 2191, 2144, 2143, 2208, 2145, 2143,
     2143, 2143, 2143, 2143, 2143, 1677, 2204, 2204, 2204, 2204,
     2225, 2226, 1964, 2219, 2143, 2143, 2143, 2205, 1966, 1966,
     1966, 1966, 1927, 1927, 1927, 1927,  480, 1970, 2227, 1967,
     2228, 2230, 2231, 1928, 2233, 2234, 2235, 2236, 2237, 2238,
     2239, 2240, 2143, 2143, 2143, 2143, 2148, 2148, 2148, 2148,
     2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148, 2148,
     2148, 2148, 2148, 2196, 2149, 2148, 1968, 2150, 2148, 2148,
     2148, 2148, 2148, 2148, 2241, 1969, 1974, 1974, 1974, 1974,
     2244, 2247, 2249, 2148, 2148, 2148, 1991, 1975, 2084, 2084,

     2084, 2084, 1934, 1934, 1934, 1934, 1365, 2251, 2253, 2085,
     2254, 2255, 2256, 1935, 2250, 2257, 2001, 2260, 2261, 2264,
     2265, 2148, 2148, 2148, 2148, 2187, 2187, 2187, 2187, 2187,
     2187, 2187, 2187, 2187, 2187, 2187, 2187, 2187, 2187, 2187,
     2187, 2187, 2206, 2188, 2187, 1376, 2189, 2187, 2187, 2187,
     2187, 2187, 2187, 2258, 2245, 2245, 2245, 2245, 2104, 2104,
     2104, 2104, 2187, 2187, 2187, 2246, 2267, 2268, 2269, 2105,
     1993, 1993, 1993, 1993, 2271, 2272, 1984, 1984, 1984, 1984,
     2276, 1994, 2277, 2279, 2037, 2282, 2284, 1985, 2285, 2283,
     2187, 2187, 2187, 2187, 2199, 2199, 2199, 2199, 2199, 2199,

     2199, 2199, 2199, 2199, 2199, 2199, 2199, 2199, 2199, 2199,
     2199, 2252, 2200, 2199, 2286, 2201, 2199, 2199, 2199, 2199,
     2199, 2199, 2242, 2288, 2289, 2290, 2243, 2007, 2007, 2007,
     2007, 2199, 2199, 2199, 2130, 2130, 2130, 2130, 2008, 2273,
     2273, 2273, 2273, 2291, 2293, 2131, 2022, 2022, 2022, 2022,
     2274, 2294, 2046,  386, 2296, 2049, 2050, 2023, 1478, 2199,
     2199, 2199, 2199, 2026, 2026, 2026, 2026, 2054, 2263, 2298,
     2278, 1478, 2299, 2300, 2027, 2061, 2031, 2031, 2031, 2031,
     2057, 2302, 1481, 1481, 2303, 2304, 2275, 2032, 2305, 2295,
     2307,  386,  386,  732, 2309, 2311, 2312, 2313, 2077, 1493,

     2315, 2315, 2315, 2315,  386, 2082, 1498, 2314, 2323,  386,
      386, 2316,  386,  386, 2319, 2320, 2320, 2320, 2320, 2033,
      386, 2084, 2084, 2084, 2084,  386, 2321, 2333, 2318, 2308,
     2324, 2335, 2085, 2034, 2035,  386, 2339, 2036, 2099, 1513,
     2325, 2326, 2329, 2329, 2329, 2329,  386, 2340, 2101, 2327,
     2344, 2328, 2346, 2330, 2092, 2092, 2092, 2092,  386, 2107,
      386,  732,  386,  386, 2317, 2093,  386,  732, 2350, 2351,
      386,  732,  732, 2322,  386,  732,  386, 2360, 2341, 2355,
     2136,  386, 2347, 2371, 2102, 2102, 2102, 2102, 2104, 2104,
     2104, 2104,  386,  386, 1555, 2103, 2332,  386,  732, 2105,

     2348, 2363, 2366, 2147, 2357, 2364, 2331, 2336, 2336, 2336,
     2336, 2336, 2336, 2336, 2336, 2336, 2336, 2336, 2336, 2336,
     2336, 2336, 2336, 2336, 2356, 2337, 2336, 2354, 2338, 2336,
     2336, 2336, 2336, 2336, 2336, 2342, 2115, 2115, 2115, 2115,
     2345, 2343,  386,  386, 2336, 2336, 2336, 2116, 2352, 2352,
     2352, 2352,  386, 2130, 2130, 2130, 2130,  386, 2361, 2361,
     2361, 2361,  386,  386, 2131, 2374, 2365,  386,  386, 2362,
      732, 2375, 2336, 2336, 2336, 2336, 2376, 2379,  386, 2380,
     2377, 2367, 2157, 1882, 2358, 2385, 2368, 2372, 2349, 2378,
     2387, 2381, 2388, 2168, 2369, 2382, 2382, 2382, 2382, 2159,

     2159, 2159, 2159, 2390, 1582, 2359, 2383, 2164, 2391, 1582,
     2160, 2392, 2353, 2175, 2171,  386, 1585, 2394, 1585, 2395,
     2396, 2181,  480, 1594,  480, 2401, 2401, 2401, 2401,  480,
      480, 2399, 2404, 2404, 2404, 2404, 2402,  480,  480, 2408,
     2410,  480,  480, 2405, 2414,  480, 2415, 2417, 2400,  480,
      480,  480,  480, 2423, 2406, 2424,  480, 2426, 2433, 2384,
     2397, 2434, 2435, 2436, 2412, 2411, 2437, 2403, 2407, 2217,
     2204, 2204, 2204, 2204, 2438, 2419, 2420, 2418, 2219, 2439,
     2421, 2205, 2427, 2427, 2427, 2427, 3775, 3775, 3775, 3775,
     2442, 2443, 2445, 2428, 2446, 2447, 2230, 3775, 2430, 2430,

     2430, 2430,  520, 2233, 2451, 2452,  520, 1966, 1696, 2431,
     2440, 2440, 2440, 2440, 2456, 2448, 2450, 2453, 2453, 2453,
     2453, 2441, 2457, 2422, 2458, 2459, 2460, 2461, 2454, 2463,
     2429, 2245, 2245, 2245, 2245, 2465, 2467, 2250, 2468, 2469,
     2471, 2472, 2246, 2473, 2474, 2475, 2258, 2476, 2477, 2478,
     2480, 2481, 2482, 2483, 2361, 2361, 2361, 2361, 2484, 2485,
     2273, 2273, 2273, 2273, 2487, 2362, 2488, 2490, 2491, 2493,
     2494, 2274, 2495, 2464, 2496, 2498, 2499, 2288, 2031, 2501,
     2501, 2501, 2501, 2497, 2503, 2504, 2500, 2505, 2506, 2507,
     2502, 1478, 2054, 2508, 2054, 2054, 1481, 2061, 2061, 2061,

      386, 2513, 2311, 1813, 2515, 2516, 2314, 2315, 2315, 2315,
     2315, 2514, 2319, 2486, 2517, 2517, 2517, 2517, 2316, 2529,
     2530, 2532,  386,  386, 2512, 2518,  386, 2539, 2539, 2539,
     2539, 2543, 2544, 2546,  386, 2329, 2329, 2329, 2329, 2335,
     1832,  386,  732, 2540, 2548, 2534, 2330,  386, 2547, 2340,
      386, 2550, 2551, 2553, 2533, 2554, 2556,  386, 2561, 2563,
     2564,  386,  386,  386, 2535,  386, 2352, 2352, 2352, 2352,
     2569, 2317, 2320, 2320, 2320, 2320, 2549, 2571, 2574, 2366,
      386, 2560,  386, 2321,  386, 2371,  386, 2374, 2565, 2566,
     1875, 2541, 1879, 2589, 2567,  386, 2590, 2591, 2584, 2331,

     2588, 2592, 2568, 2593, 2581, 2594, 2381, 2582, 2600, 2361,
     2361, 2361, 2361, 2519, 2520, 2521, 2576, 2522, 2575, 2583,
     2362, 2601, 2603, 2604, 2523, 2524, 2605, 1582, 2525, 2526,
     2353, 2527, 2528, 2536, 2536, 2536, 2536, 2536, 2536, 2536,
     2536, 2536, 2536, 2536, 2536, 2536, 2536, 2536, 2536, 2536,
     2168, 2537, 2536, 2168, 2538, 2536, 2536, 2536, 2536, 2536,
     2536, 2572, 2168, 1585, 2175, 2175, 2175,  480, 2399, 2573,
     2536, 2536, 2536, 2585, 2585, 2585, 2585, 2607, 2607, 2607,
     2607, 2609, 2410, 2414, 2586,  480, 1920,  480, 2608, 2417,
     2626, 2606,  480,  386, 2615, 2628, 2426,  480, 2536, 2536,

     2536, 2536, 2557, 2557, 2557, 2557, 2557, 2557, 2557, 2557,
     2557, 2557, 2557, 2557, 2557, 2557, 2557, 2557, 2557,  480,
     2558, 2557, 2610, 2559, 2557, 2557, 2557, 2557, 2557, 2557,
     2618, 2401, 2401, 2401, 2401,  480,  520, 2587, 2633, 2557,
     2557, 2557, 2402, 2404, 2404, 2404, 2404, 1924, 1927, 1934,
      480, 2622, 2634, 2635, 2405, 2619, 2621, 2630, 2636, 2638,
     2643, 2644,  480, 2647, 2648, 2625, 2631, 2557, 2557, 2557,
     2557, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577,
     2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 2624, 2578,
     2577, 2448, 2579, 2577, 2577, 2577, 2577, 2577, 2577, 2623,

     2382, 2382, 2382, 2382, 2616, 2616, 2616, 2616, 2577, 2577,
     2577, 2383, 2450, 2651, 2653, 2617, 2427, 2427, 2427, 2427,
     2640, 2640, 2640, 2640,  480, 2654, 2655, 2428, 2656, 2580,
     2658, 2641, 2659, 2463, 2661, 2663, 2577, 2577, 2577, 2577,
     2665, 2471, 2595, 2596, 2649, 2649, 2649, 2649, 2430, 2430,
     2430, 2430, 1984, 2670, 2672, 2650, 2673, 2597, 2598, 2431,
     2660, 2599, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611,
     2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2674,
     2612, 2611, 1993, 2613, 2611, 2611, 2611, 2611, 2611, 2611,
     2667, 2480, 2632, 2440, 2440, 2440, 2440, 2677, 2679, 2611,

     2611, 2611, 2680, 2682, 2441, 2453, 2453, 2453, 2453, 2668,
     2668, 2668, 2668, 2007, 2683, 2685, 2454, 2490, 2022, 2688,
     2669, 2676, 2493, 2026, 2690, 2691, 2687, 2611, 2611, 2611,
     2611, 2689, 2692, 2693, 2694, 2695, 2500, 2501, 2501, 2501,
     2501, 2642, 2701,  386,  732, 2711, 2514, 2712, 2502, 2713,
     2652, 2706, 2707, 2707, 2707, 2707, 2517, 2517, 2517, 2517,
     2715, 2716, 2718, 2708, 2719, 2720, 2721, 2518, 2722, 2723,
     2725, 2724, 2709, 2726, 2717, 2727, 2705, 2728, 2730, 2696,
     2697, 2731, 2532, 2084,  386, 2734, 2734, 2734, 2734,  386,
      732, 2732,  386, 2746, 2698, 2699, 2735, 3775, 2700, 2539,

     2539, 2539, 2539, 2747, 2546,  386, 2714, 2741, 2741, 2741,
     2741, 2092, 2547, 2750, 2752, 2753, 2710, 2751, 2553, 2748,
     2102, 2755, 2733, 2556, 2740, 2104,  386, 2743, 2754,  732,
     2760, 2563, 2115, 2756, 2766, 2770, 3775, 2571, 2767, 2772,
     2761, 2773, 2736, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
      386, 2738, 2737, 2541, 2739, 2737, 2737, 2737, 2737, 2737,
     2737, 2744,  386, 2775,  386, 2130,  386,  732,  386, 2584,
     2737, 2737, 2737, 2771, 3775, 2789, 2768, 2588, 2790, 2791,
     2792,  386, 2793, 2793, 2793, 2793, 2795, 2796, 2777, 2769,

     2797, 2798, 2799, 2794, 2800, 2781, 2801, 2803, 2737, 2737,
     2737, 2737, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
     2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2776,
     2758, 2757, 2804, 2759, 2757, 2757, 2757, 2757, 2757, 2757,
     2603, 2810, 2615, 2814, 2159, 2782, 2782, 2782, 2782, 2757,
     2757, 2757, 2805, 2807, 2807, 2807, 2807, 2619, 2621, 2824,
     2585, 2585, 2585, 2585, 2808,  386, 2628, 2204, 2630, 2827,
     2829, 2586, 2831,  480,  520, 2825, 2832, 2757, 2757, 2757,
     2757, 2763, 2763, 2763, 2763, 2763, 2763, 2763, 2763, 2763,
     2763, 2763, 2763, 2763, 2763, 2763, 2763, 2763, 2826, 2764,

     2763, 2835, 2765, 2763, 2763, 2763, 2763, 2763, 2763, 2783,
     2787, 3775, 3775, 3775, 3775, 2836, 2838, 2788, 2763, 2763,
     2763, 2840, 3775, 2841, 2587, 2843, 2845, 2607, 2607, 2607,
     2607,  480, 2616, 2616, 2616, 2616, 2847, 2848, 2608, 2849,
     2851, 2852, 2660, 2617, 2853, 2663, 2763, 2763, 2763, 2763,
     2778, 2778, 2778, 2778, 2778, 2778, 2778, 2778, 2778, 2778,
     2778, 2778, 2778, 2778, 2778, 2778, 2778, 2809, 2779, 2778,
     2812, 2780, 2778, 2778, 2778, 2778, 2778, 2778, 2245, 3775,
     3775, 3775, 3775, 2855, 2667, 2813, 2854, 2778, 2778, 2778,
     3775, 2857, 2676, 3775, 3775, 3775, 3775, 2864, 2867,  480,

     2668, 2668, 2668, 2668, 3775, 2685, 2273, 2687, 2689, 2870,
     2871, 2669, 2872,  480, 2868, 2778, 2778, 2778, 2778, 2784,
     2784, 2784, 2784, 2784, 2784, 2784, 2784, 2784, 2784, 2784,
     2784, 2784, 2784, 2784, 2784, 2784, 2875, 2785, 2784, 2818,
     2786, 2784, 2784, 2784, 2784, 2784, 2784, 2876, 3775, 3775,
     3775, 3775, 2877, 2856, 2878, 2879, 2784, 2784, 2784, 3775,
     3775, 3775, 3775, 3775, 2859, 2859, 2859, 2859,  480, 2880,
     2881, 3775, 2883, 2886,  732, 2860, 2888, 2889, 2890, 2892,
      480, 2887, 2893, 2894, 2784, 2784, 2784, 2784, 2640, 2640,
     2640, 2640, 2895,  386, 2896, 2897, 2898, 2899, 2900, 2641,

     2811, 2815, 2815, 2815, 2815, 2815, 2815, 2815, 2815, 2815,
     2815, 2815, 2815, 2815, 2815, 2815, 2815, 2815, 2822, 2816,
     2815, 2901, 2817, 2815, 2815, 2815, 2815, 2815, 2815, 2884,
     2873, 2873, 2873, 2873, 2902, 2903, 2834, 2904, 2815, 2815,
     2815, 2874, 2905, 3775, 3775, 3775, 3775, 2906, 2730, 2320,
     2649, 2649, 2649, 2649, 3775, 2908, 2732, 2907, 2909, 2912,
      386, 2650, 2910,  480, 2746,  386, 2815, 2815, 2815, 2815,
     2819, 2819, 2819, 2819, 2819, 2819, 2819, 2819, 2819, 2819,
     2819, 2819, 2819, 2819, 2819, 2819, 2819, 2823, 2820, 2819,
     2842, 2821, 2819, 2819, 2819, 2819, 2819, 2819, 2915, 2707,

     2707, 2707, 2707, 2734, 2734, 2734, 2734, 2819, 2819, 2819,
     2708,  732, 2919, 2748, 2735,  386, 2922, 2923, 3775, 2913,
     2913, 2913, 2913, 2741, 2741, 2741, 2741, 2754, 2924, 2756,
     2914, 2741, 2741, 2741, 2741, 2819, 2819, 2819, 2819,  386,
     2917,  386,  732,  732, 2925, 2761,  386,  732, 2918, 2921,
     3775, 2743, 2920,  386, 3775,  732,  386, 2928, 2930, 2771,
     2911,  386, 2927, 2710, 2931, 2932, 2775, 2361,  386,  386,
      386,  732,  386, 2938, 2942, 2933,  732, 2939, 3775, 2782,
     2782, 2782, 2782, 3775, 2929, 2943, 2940, 2744, 2944, 2945,
     2926, 2936, 2936, 2936, 2936, 2744, 2793, 2793, 2793, 2793,

     2935, 2947, 2937, 2948, 2934, 2949, 2950, 2794, 2951, 2952,
     2954,  386, 2955, 2803, 2382, 2957, 2805, 2958, 2953, 2960,
      480,  480, 2956, 2807, 2807, 2807, 2807, 2963, 2965,  480,
      480, 2966,  480,  480, 2808,  480, 2969, 2825,  520, 2971,
     2829, 2430, 2974, 2783, 2975, 2962, 2977, 2978, 2838, 2972,
     2440, 2980, 2981, 2961, 2982, 2984, 2985, 2946, 2979, 2847,
     2990, 2991, 2453, 2992, 2968, 2854, 2994, 2996, 2967, 2970,
     2986, 2988, 2988, 2988, 2988, 2998, 2859, 2859, 2859, 2859,
     2999, 3000, 2989, 2997, 2868, 3001, 3002, 2860, 3003, 2873,
     2873, 2873, 2873, 3005, 3006, 3007, 3008, 3009, 3010, 3012,

     2874, 3013, 2883, 2501, 3015, 3021, 3022, 3011,  386, 3023,
     3024, 3014, 3016, 3016, 3016, 3016, 2892, 2517, 3026, 3027,
     3028, 3029, 3030, 3031, 3032, 3025, 3033, 3034, 3035, 3036,
     3037, 3038, 3018, 3039, 2907, 3041,  386,  732, 3044, 3046,
     2913, 2913, 2913, 2913, 3043, 3048, 2918,  386, 3052,  386,
     3004, 2914, 2741, 2741, 2741, 2741, 2917, 2917, 2917, 2917,
     3054, 3055, 3057, 3058,  386,  386,  386, 3051, 3063, 3042,
     3049, 3064, 2933,  386,  386, 3067, 3019, 3053, 2936, 2936,
     2936, 2936, 3068, 3069, 2942, 3072, 3070, 3073, 3047, 2937,
     3074, 3075, 3059, 3060, 3071, 3077, 3078, 3079, 3066, 3080,

     3061, 3065, 3081, 3082, 3083, 3084, 3085, 2956, 3086, 2960,
     2607,  480,  480, 2965, 2616,  480, 2744,  480, 3088, 3096,
     3098, 2972, 3092,  480,  520, 3100, 2977, 2640, 3102, 2979,
     3103, 3104, 2984, 2649, 3089, 3101, 3107, 2986, 3110, 3111,
     3113, 3106, 2996, 3093, 3090, 3094, 2668, 3095, 3097, 2988,
     2988, 2988, 2988, 3117, 3115, 3118, 3119, 3120, 3121, 3122,
     2989, 3123, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132,
     3133, 3014,  386, 3016, 3016, 3016, 3016, 3021, 3016, 3016,
     3016, 3016, 3136, 3138, 3139, 3140, 3025, 3141, 3142, 3143,
     3137, 3144, 3145, 3146, 3147, 3148, 3149, 3108, 3018, 3150,

     3151, 3152, 3153, 3154,  386, 3157, 3109, 3046, 2734, 3134,
     3159, 3161,  386, 2543, 3163, 3165, 3158, 2741, 2741, 2741,
     2741, 3166,  386, 3168,  386,  386, 3175,  386,  386, 3067,
     3178, 3071, 3181, 3182, 3183, 3077, 3162, 3019, 2793, 3185,
     3156, 3186, 3019, 3164, 3187, 3169, 3184, 3188, 3176, 3189,
     3192, 3193, 3194, 3088,  480,  480, 3092, 3170,  480, 3203,
     3177, 3070, 3070, 3070, 3070, 3179, 3179, 3179, 3179, 3204,
      480, 3101, 2586, 3206, 3207, 3208, 3180, 3196, 3195, 3198,
     3209, 2744, 3171, 3171, 3171, 3171, 3171, 3171, 3171, 3171,
     3171, 3171, 3171, 3171, 3171, 3171, 3171, 3171, 3171,  480,

     3172, 3171, 3197, 3173, 3171, 3171, 3171, 3171, 3171, 3171,
      520, 2787, 3190, 3190, 3190, 3190, 3210, 3212, 2788, 3171,
     3171, 3171, 3775, 3191, 3200, 3200, 3200, 3200, 3213, 3214,
     3106, 3199, 3775, 3117, 3221, 3201, 2859, 3222, 3223, 3125,
     3115, 3225, 3202, 3226, 3215, 3227, 3228, 3171, 3171, 3171,
     3171, 3217, 3217, 3217, 3217, 3219, 3219, 3219, 3219, 2873,
     3229, 3232, 3218, 3233,  386, 3237, 3220, 3224, 3230, 3230,
     3230, 3230, 3016, 3016, 3016, 3016, 3775, 3238, 3239, 3231,
     3136, 3136, 3136, 3136, 3137, 3240, 3241, 3242, 3234, 3243,
     3244, 3236, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252,

     3253, 3254, 3775, 3255,  386, 3161, 2913, 3259,  386, 3263,
     3158,  386,  386,  386, 3256, 3257, 3257, 3257, 3257,  732,
     3266, 3266, 3266, 3266,  386, 3270, 3258,  386, 3272, 3273,
     3275, 3267, 3775, 3276, 3277,  386, 3019, 3278, 3260, 3279,
     3184, 3264, 3179, 3179, 3179, 3179, 3280, 3282, 3283, 3265,
     3284, 3285,  480, 3180,  480, 3190, 3190, 3190, 3190, 3286,
     3286, 3286, 3286, 3268,  480, 3269, 3191,  480, 3293,  520,
     3287, 3200, 3200, 3200, 3200, 3295, 3288, 3297, 3298,  480,
     3299, 3300, 3201, 3301, 3212, 2988, 3303, 3304, 3775, 3306,
     3308, 3289, 3309, 3302, 3311, 3312, 3215, 3313, 3775, 3271,

     3314, 3315, 3316, 3290, 3318, 3291, 3224, 3294, 3217, 3217,
     3217, 3217, 3292, 3319, 3320,  386, 3281, 2886, 3322, 3218,
     3219, 3219, 3219, 3219, 3230, 3230, 3230, 3230, 3324, 3325,
     3326, 3220, 3327, 3328, 3329, 3231, 3016, 3016, 3016, 3016,
     3330, 3331, 3334, 3335, 3336, 3321, 3337, 3338, 3340, 3305,
     3332, 3332, 3332, 3332,  386, 3341, 3775, 3257, 3257, 3257,
     3257, 3333,  386, 3344, 3256,  386,  386, 3348, 3258, 3266,
     3266, 3266, 3266,  386, 3067, 3352, 3354, 3307, 3355, 3356,
     3267, 3350, 3350, 3350, 3350, 3317, 3359, 3360, 3361, 3362,
     3343, 3339, 3351, 3345, 3364, 3365, 3366,  480,  480, 3374,

     3019,  386, 3376, 3379, 3346, 3286, 3286, 3286, 3286, 3380,
     3382, 3349, 3368, 3368, 3368, 3368, 3287, 3372, 3372, 3372,
     3372, 3383, 3347, 3369, 3384, 3775, 3387, 3389, 3373, 3390,
     3392, 3393,  480, 3302, 3394, 3370, 3371,  480, 3377, 3377,
     3377, 3377, 3397, 3398, 3399, 3400, 3402, 3403, 3404, 3378,
      386, 3406, 3407, 3408, 3409, 3410, 3413, 3414,  520, 3411,
     3411, 3411, 3411, 3415, 3416, 3332, 3332, 3332, 3332, 3417,
     3412, 3418, 3419, 3420, 3421, 3405, 3333,  386, 3423, 3424,
      386, 3426,  386,  386, 3429, 3431,  386, 3350, 3350, 3350,
     3350, 3433, 3354, 3438, 3179, 3439, 3440, 3364, 3351, 3190,

     3442, 3422, 3434, 3443,  480,  480, 3376, 3441, 3452, 3453,
     3432, 3454, 3425, 3455, 3427, 3368, 3368, 3368, 3368, 3428,
     3444, 3444, 3444, 3444, 3389, 3458, 3369, 3392, 3463, 3448,
     3200, 3445, 3446, 3372, 3372, 3372, 3372, 3464, 3450, 3465,
     3447, 3217, 3219, 3402, 3373, 3377, 3377, 3377, 3377, 3457,
     3459, 3230, 3467, 3468, 3469, 3472, 3378, 3473, 3474, 3466,
     3411, 3411, 3411, 3411, 3479, 3481, 3481, 3481, 3481, 3483,
     3485, 3412, 3486, 3486, 3486, 3486, 3482, 3488, 3489, 3490,
     3490, 3490, 3490, 3487, 3492, 3492, 3492, 3492,  386, 3495,
     3491, 3496,  386,  386,  386, 3493, 3501, 3501, 3501, 3501,

     3431, 3266, 3475, 3506, 3476, 3477, 3507, 3502, 3509, 3503,
     3510, 3511, 3512, 3478, 3504, 3504, 3504, 3504, 3494, 3497,
     3499, 3775, 3775,  480, 3775, 3505, 3518, 3519, 3520, 3434,
     3441, 3500, 3450, 3521,  386, 3444, 3444, 3444, 3444, 3514,
     3514, 3514, 3514, 3775, 3775, 3523, 3445, 3446, 3775, 3524,
     3515, 3457, 3459, 3525,  732, 3527, 3466, 3528, 3529,  480,
     3530, 3526, 3513, 3531, 3532, 3533, 3535, 3481, 3481, 3481,
     3481, 3536, 3537, 3537, 3537, 3537, 3485, 3332, 3482, 3486,
     3486, 3486, 3486, 3538, 3540, 3539, 3541, 3542, 3544, 3546,
     3487, 3490, 3490, 3490, 3490,  386, 3492, 3492, 3492, 3492,

     3548, 3549, 3491, 3545, 3550, 3551,  386, 3493, 3501, 3501,
     3501, 3501, 3554, 3775, 3504, 3504, 3504, 3504, 3557, 3502,
     3547, 3503, 3558, 3562,  480, 3505, 3564, 3565, 3552, 3555,
     3555, 3555, 3555, 3568, 3569, 3572, 3543, 3573, 3574, 3575,
     3556, 3514, 3514, 3514, 3514, 3576, 3563, 3566, 3566, 3566,
     3566, 3577, 3515, 3578, 3535, 3411, 3581, 3582, 3567, 3584,
     3553, 3775, 3585, 3579, 3537, 3537, 3537, 3537, 3588, 3539,
     3586, 3586, 3586, 3586, 3590, 3538, 3592, 3593, 3594, 3595,
      732, 3587,  732,  386, 3599, 3601, 3603, 3596, 3562, 3597,
     3555, 3555, 3555, 3555, 3444,  480, 3608, 3609, 3611, 3614,

     3615, 3556, 3606, 3566, 3566, 3566, 3566, 3616, 3617, 3618,
     3619, 3620, 3775, 3581, 3567, 3481, 3623, 3584, 3486, 3625,
     3579, 3598, 3627, 3621, 3628, 3590, 3624, 3586, 3586, 3586,
     3586, 3490, 3592, 3607, 3492, 3633,  732,  386, 3587, 3629,
     3635, 3601, 3630, 3631, 3501, 3637, 3639, 3775,  480, 3641,
     3642, 3602, 3636, 3643, 3645, 3606, 3646, 3647, 3647, 3647,
     3647, 3649, 3650, 3651, 3610, 3634, 3652, 3653, 3648, 3775,
     3623, 3537, 3626, 3775, 3657, 3659, 3640, 3621, 3660, 3654,
     3775, 3624, 3655, 3655, 3655, 3655, 3775, 3661, 3629,  386,
     3663, 3775, 3664, 3656, 3630, 3639, 3555,  480, 3667, 3636,

     3669, 3645, 3566, 3671, 3665, 3647, 3647, 3647, 3647, 3672,
     3670, 3673, 3674, 3675, 3676, 3775, 3648, 3677, 3677, 3677,
     3677, 3679, 3662, 3654, 3655, 3655, 3655, 3655, 3678, 3680,
     3666, 3659, 3586, 3682, 3683, 3656,  386, 3686, 3775,  480,
     3681, 3688, 3689, 3775, 3693, 3694, 3665, 3690, 3690, 3690,
     3690, 3670, 3695, 3696, 3697, 3698, 3700, 3701, 3691, 3677,
     3677, 3677, 3677, 3702, 3775, 3707, 3711, 3712, 3684, 3693,
     3678, 3687, 3681, 3704, 3704, 3704, 3704, 3708, 3708, 3708,
     3708, 3716, 3719, 3721, 3705, 3700, 3647, 3655, 3709, 3690,
     3690, 3690, 3690,  386, 3713, 3722, 3723,  480, 3724, 3726,

     3691, 3714, 3714, 3714, 3714, 3717, 3717, 3717, 3717, 3730,
     3731, 3732, 3715, 3733, 3721, 3737, 3718, 3704, 3704, 3704,
     3704, 3708, 3708, 3708, 3708, 3775, 3677, 3775, 3705, 3738,
     3740, 3730, 3709, 3713, 3736, 3722, 3743, 3706, 3714, 3714,
     3714, 3714, 3717, 3717, 3717, 3717, 3747, 3748, 3749, 3715,
     3690, 3740, 3743, 3718, 3734, 3734, 3734, 3734, 3741, 3744,
     3744, 3744, 3744, 3775, 3755, 3735, 3734, 3734, 3734, 3734,
     3745, 3736, 3750, 3750, 3750, 3750, 3752, 3735, 3775, 3714,
     3747, 3706, 3758, 3751, 3753, 3717, 3741, 3754, 3744, 3744,
     3744, 3744, 3759, 3756, 3750, 3750, 3750, 3750, 3760, 3745,

     3752, 3752, 3752, 3752, 3775, 3751, 3775, 3763, 3775, 3758,
     3734, 3761, 3753, 3768, 3754, 3726, 3756, 3763, 3764, 3765,
     3765, 3765, 3765, 3744, 3775, 3765, 3765, 3765, 3765, 3770,
     3766, 3769, 3764, 3768, 3750, 3775, 3766, 3773, 3775, 3773,
     3765, 3775, 3771, 3769, 1199, 1441, 3771, 1199, 3774, 3774,
     1199, 1199, 1207, 1771, 1413, 1207, 1770, 1413, 1207, 1207,
     1413, 1413, 1769, 1768, 3775,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  115,  115,  115,  115,  115,  115,

      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  115,  115,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,

      133,  133,  133,  133,  133,  133,  133,  133,  133,  133,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
      141,  141,  141,  141,  141,  141,  141,  141,  141,  211,
      211,  211,  211,  211,  211,  211,  211,  211,  211,  211,
      211,  211,  211,  211,  211,  211,  211,  211,  211,  211,
      211,  211,  211,  211,  211,  211,  211,  211,  223,  223,
      223,  223,  223,  223,  223,  223,  223,  223,  223,  223,
      223,  223,  223,  223,  223,  223,  223,  223,  223,  223,
      223,  223,  223,  223,  223,  223,  223,  289,  289,  289,

      289,  289,  289,  289,  289,  289,  289,  289,  289,  289,
      289,  289,  289,  289,  289,  289,  289,  289,  289,  289,
      289,  289,  289,  289,  289,  289,  299,  299,  299,  299,
      299,  299,  299,  299,  299,  299,  299,  299,  299,  299,
      299,  299,  299,  299,  299,  299,  299,  299,  299,  299,
      299,  299,  299,  299,  299,  301,  301,  301,  301,  301,
      301,  301,  301,  301,  301,  301,  301,  301,  301,  301,
      301,  301,  301,  301,  301,  301,  301,  301,  301,  301,
      301,  301,  301,  301,  304,  304,  304,  304,  304,  304,
      304,  304,  304,  304,  304,  304,  304,  304,  304,  304,

      304,  304,  304,  304,  304,  304,  304,  304,  304,  304,
      304,  304,  304,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  346,  346,  346,  346,  346,  346,  346,  346,
      346,  346,  346,  346,  346,  346,  346,  346,  346,  346,
      346,  346,  346,  346,  346,  346,  346,  346,  346,  346,
      346,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  363,  363,  363,  363,  363,

      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  379,
      379,  676, 1767,  379,  379, 1431,  379,  379,  379,  379,
      379,  379,  379,  385,  385,  385,  385, 1765,  385,  385,
     1764,  385,  385,  385,  385,  385,  385,  385,  438,  673,
      438,  438,  438, 1763, 1424,  438,  438,  438,  438,  438,
      438,  438,  438,  438,  438,  438,  438,  438,  438,  438,
      438,  438,  438,  453, 1045,  453,  453,  453, 1045,  453,
      453,  453,  453,  453,  453,  453,  453,  453,  453,  453,

      453,  453,  453,  453,  453,  453,  453,  453,  466,  466,
     1458, 1045, 1412, 1458, 1761, 1411, 1458, 1458,  466,  466,
      466,  466, 1760,  466,  466, 1756,  466,  466,  466,  466,
      466,  466,  466,  479,  479,  479,  479, 1755,  479,  479,
     1754,  479,  479,  479,  479,  479,  479,  479,  519,  519,
      519,  519, 1753,  519,  519, 1752,  519,  519,  519,  519,
      519,  519,  519,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  527,  527,  527,  527,  527,  527,  527,  527,

      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  531,  531,  531, 1751, 1750,  531,  531, 1749,  531,
      531,  531,  531,  531,  531,  531,  533,  533,  533,  533,
      533,  533,  533,  533,  533,  533,  533,  533,  533,  533,
      533,  533,  533,  533,  533,  533,  533,  533,  533,  533,
      533,  533,  533,  533,  533,  536,  536,  536,  536,  536,
      536,  536,  536,  536,  536,  536,  536,  536,  536,  536,
      536,  536,  536,  536,  536,  536,  536,  536,  536,  536,
      536,  536,  536,  536,  540,  540,  540, 1747, 1746,  540,

      540, 1745,  540,  540,  540,  540,  540,  540,  540,  543,
      543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
      543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
      543,  543,  543,  543,  543,  543,  543,  543,  546,  546,
      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
      546,  546,  546,  546,  546,  546,  546,  559,  559,  559,
      559,  559,  559,  559,  559,  559,  559,  559,  559,  559,
      559,  559,  559,  559,  559,  559,  559,  559,  559,  559,
      559,  559,  559,  559,  559,  559,  563,  563,  563,  563,

      563,  563,  563,  563,  563,  563,  563,  563,  563,  563,
      563,  563,  563,  563,  563,  563,  563,  563,  563,  563,
      563,  563,  563,  563,  563,  630,  630,  630,  630, 1744,
      630,  630, 1743,  630,  630,  630,  630,  630,  630,  630,
      635,  635, 1462, 1741,  635, 1462, 1740, 1739, 1462, 1462,
      635,  635,  635,  635, 1738,  635,  635, 1737,  635,  635,
      635,  635,  635,  635,  635,  637, 1736,  637,  637,  637,
      637,  637,  637,  637,  637,  637,  637,  637,  637,  637,
      637,  637,  637,  637,  637,  637,  637,  637,  637,  637,
      637,  637,  643,  643,  643, 1735, 1734,  643,  643, 1733,

      643,  643,  643,  643,  643,  643,  643,  647,  647,  647,
      647, 1732,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  649, 1731,  649,  649,  649,
      649,  649,  649,  649,  649,  649,  649,  649,  649,  649,
      649,  649,  649,  649,  649,  649,  649,  649,  649,  649,
      649,  649,  652, 1730,  652, 1729,  652, 1728,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  652,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  664,  664,  664,
      664, 1725,  664,  664, 1724,  664,  664,  664,  664,  664,
      664,  664,  668,  668,  668,  668, 1723,  668,  668, 1722,

      668,  668,  668,  668,  668,  668,  668,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  676,  676,  676,  676,
      676,  676,  676,  676,  676,  676,  676,  676,  676,  676,
      676,  676,  676,  676,  676,  676,  676,  676,  676,  676,
      676,  676,  676,  676,  676,  681,  681,  681,  681, 1720,
      681,  681, 1719,  681,  681,  681,  681,  681,  681,  681,
      687, 1717,  687,  687,  687,  687,  687,  687,  687,  687,
      687,  687,  687,  687,  687,  687,  687,  687,  687,  687,

      687,  687,  687,  687,  687,  687,  687,  689, 1715,  689,
      689,  689,  689,  689,  689,  689,  689,  689,  689,  689,
      689,  689,  689,  689,  689,  689,  689,  689,  689,  689,
      689,  689,  689,  689,  693,  693,  693,  693,  693,  693,
      693,  693,  693,  693,  693,  693,  693,  693,  693,  693,
      693,  693,  693,  693,  693,  693,  693,  693,  693,  693,
      693,  693,  693,  696,  696,  696,  696,  696,  696,  696,
      696,  696,  696,  696,  696,  696,  696,  696,  696,  696,
      696,  696,  696,  696,  696,  696,  696,  696,  696,  696,
      696,  696,  707,  707, 1714, 1713, 1634, 1710, 1709, 1634,

      707,  707, 1634, 1634, 1707, 1706, 1705,  707,  707, 1704,
      707,  707,  707,  707,  707,  707,  707,  709,  709,  709,
      709, 1703,  709,  709, 1702,  709,  709,  709,  709,  709,
      709,  709,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      723,  723, 1701,  723,  723,  723,  723,  723,  723,  723,

      724, 1700, 1699,  724,  724, 1692,  724,  724,  724,  724,
      724,  724,  724,  379,  379, 1691, 1689,  379,  379, 1688,
      379,  379,  379,  379,  379,  379,  379,  385,  385,  385,
      385, 1687,  385,  385, 1686,  385,  385,  385,  385,  385,
      385,  385,  733, 1343, 1685, 1684, 1682, 1681,  733,  733,
     1335,  733,  733,  733,  733,  733,  733,  733,  438, 1680,
      438,  438,  438, 1676, 1672,  438,  438,  438,  438,  438,
      438,  438,  438,  438,  438,  438,  438,  438,  438,  438,
      438,  438,  438,  453, 1671,  453,  453,  453, 1670,  453,
      453,  453,  453,  453,  453,  453,  453,  453,  453,  453,

      453,  453,  453,  453,  453,  453,  453,  453,  466,  466,
     1638,  563, 1669, 1638, 1320, 1667, 1638, 1638,  466,  466,
      466,  466, 1666,  466,  466,  559,  466,  466,  466,  466,
      466,  466,  466,  827,  827, 1665,  827,  827,  827,  827,
      827,  827,  827,  479,  479,  479,  479, 1313,  479,  479,
     1663,  479,  479,  479,  479,  479,  479,  479,  828,  828,
     1662,  828,  828,  828,  828,  828,  828,  828,  519,  519,
      519,  519, 1661,  519,  519, 1660,  519,  519,  519,  519,
      519,  519,  519,  897,  897, 1659,  897,  897,  897,  897,
      897,  897,  897,  524,  524,  524,  524,  524,  524,  524,

      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  527,  527,  527,  527,  527,  527,  527,  527,  527,
      527,  531,  531,  531, 1658, 1657,  531,  531, 1656,  531,
      531,  531,  531,  531,  531,  531,  533,  533,  533,  533,
      533,  533,  533,  533,  533,  533,  533,  533,  533,  533,
      533,  533,  533,  533,  533,  533,  533,  533,  533,  533,
      533,  533,  533,  533,  533,  536,  536,  536,  536,  536,

      536,  536,  536,  536,  536,  536,  536,  536,  536,  536,
      536,  536,  536,  536,  536,  536,  536,  536,  536,  536,
      536,  536,  536,  536,  540,  540,  540,  546, 1655,  540,
      540, 1300,  540,  540,  540,  540,  540,  540,  540,  543,
      543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
      543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
      543,  543,  543,  543,  543,  543,  543,  543,  546,  546,
      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
      546,  546,  546,  546,  546,  546,  546,  546,  546,  546,
      546,  546,  546,  546,  546,  546,  546,  559,  559,  559,

      559,  559,  559,  559,  559,  559,  559,  559,  559,  559,
      559,  559,  559,  559,  559,  559,  559,  559,  559,  559,
      559,  559,  559,  559,  559,  559,  563,  563,  563,  563,
      563,  563,  563,  563,  563,  563,  563,  563,  563,  563,
      563,  563,  563,  563,  563,  563,  563,  563,  563,  563,
      563,  563,  563,  563,  563,  959,  959,  959,  959,  959,
      959,  959,  959,  959,  959,  959, 1653,  959, 1652,  959,
      959,  543, 1642,  959,  959, 1642, 1651, 1293, 1642, 1642,
     1649,  959,  959,  959,  963,  963,  963,  963,  963,  963,
      963,  963,  963,  963,  963, 1648,  963, 1646,  963,  963,

     1646,  536,  963, 1646, 1646, 1647, 1286, 1645, 1644,  533,
      963,  963,  963,  982,  982,  982,  982,  982,  982,  982,
      982,  982,  982,  982, 1643,  982, 1650,  982,  982, 1650,
     1279,  982, 1650, 1650, 1641, 1640,  527, 1639, 1272,  982,
      982,  982,  990,  990,  990,  990,  990,  990,  990,  990,
      990,  990,  990, 1637,  990, 1654,  990,  990, 1654, 1636,
      990, 1654, 1654,  524, 1635, 1265,  480,  480,  990,  990,
      990,  992,  992,  992,  992,  992,  992,  992,  992,  992,
      992,  992, 1589,  992, 1664,  992,  992, 1664, 1223,  992,
     1664, 1664,  480, 1581,  822,  822,  822,  992,  992,  992,

      994,  994,  994,  994,  994,  994,  994,  994,  994,  994,
      994, 1206,  994, 1668,  994,  994, 1668, 1580,  994, 1668,
     1668, 1579, 1578,  994,  994,  812,  994,  994,  994,  997,
      997,  997,  997,  997,  997,  997,  997,  997,  997,  997,
      812,  997, 1762,  997,  997, 1762,  812,  997, 1762, 1762,
     1198, 1577,  732,  386, 1553,  997,  997,  997,  999,  999,
      999,  999,  999,  999,  999,  999,  999,  999,  999, 1537,
      999, 1766,  999,  999, 1766, 1530,  999, 1766, 1766, 1522,
     1517, 1489,  999,  999,  999,  999,  999, 1003, 1003, 1003,
     1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1487, 1003,

     1772, 1003, 1003, 1772, 1486, 1003, 1772, 1772, 1485, 1484,
      732,  386, 1477, 1003, 1003, 1003, 1005, 1005, 1005, 1005,
     1005, 1005, 1005, 1005, 1005, 1005, 1005,  732, 1005, 1776,
     1005, 1005, 1776,  386, 1005, 1776, 1776, 1472, 1107, 1466,
     1465, 1464, 1005, 1005, 1005, 1008, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1008, 1008,  367, 1008, 1463, 1008,
     1008, 2297, 1099, 1008, 2297, 1008, 1461, 2297, 2297, 1460,
      363, 1008, 1008, 1008, 1025, 1025, 1025, 1025, 1025, 1025,
     1025, 1025, 1025, 1025, 1025, 1459, 1025, 2301, 1025, 1025,
     2301, 1092, 1025, 2301, 2301, 1455, 1454, 1452, 1080, 1450,

     1025, 1025, 1025,  630,  630,  630,  630, 1449,  630,  630,
     1448,  630,  630,  630,  630,  630,  630,  630, 1035, 1035,
     1448, 1035, 1035, 1035, 1035, 1035, 1035, 1035,  635,  635,
     2389, 1443,  635, 2389, 1442, 1441, 2389, 2389,  635,  635,
      635,  635, 1441,  635,  635,  688,  635,  635,  635,  635,
      635,  635,  635, 1037, 1037, 1436, 1037, 1037, 1037, 1037,
     1037, 1037, 1037,  637, 1435,  637,  637,  637,  637,  637,
      637,  637,  637,  637,  637,  637,  637,  637,  637,  637,
      637,  637,  637,  637,  637,  637,  637,  637,  637,  637,
     1038, 1433, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,

     1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,
     1038, 1038, 1038, 1038, 1038, 1038, 1038,  643,  643,  643,
     1432, 1431,  643,  643, 1431,  643,  643,  643,  643,  643,
      643,  643, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039,
     1039,  647,  647,  647,  647, 1426,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  647,  647,  647,  649,
     1425,  649,  649,  649,  649,  649,  649,  649,  649,  649,
      649,  649,  649,  649,  649,  649,  649,  649,  649,  649,

      649,  649,  649,  649,  649,  649,  652, 1424,  652, 1424,
      652, 1417,  652,  652,  652,  652,  652,  652,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  652,  652,  652,
      652,  664,  664,  664,  664, 1416,  664,  664, 1415,  664,
      664,  664,  664,  664,  664,  664, 1048, 1048, 1414, 1048,
     1048, 1048, 1048, 1048, 1048, 1048,  668,  668,  668,  668,
     1045,  668,  668, 1040,  668,  668,  668,  668,  668,  668,
      668, 1049, 1049, 1408, 1049, 1049, 1049, 1049, 1049, 1049,
     1049,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,

      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      676,  676,  676,  676,  676,  676,  676,  676,  676,  676,
      676,  676,  676,  676,  676,  676,  676,  676,  676,  676,
      676,  676,  676,  676,  676,  676,  676,  676,  676,  681,
      681,  681,  681, 1407,  681,  681, 1406,  681,  681,  681,
      681,  681,  681,  681, 1062, 1062, 1405, 1062, 1062, 1062,
     1062, 1062, 1062, 1062,  687, 1404,  687,  687,  687,  687,
      687,  687,  687,  687,  687,  687,  687,  687,  687,  687,
      687,  687,  687,  687,  687,  687,  687,  687,  687,  687,
      687,  689, 1403,  689,  689,  689,  689,  689,  689,  689,

      689, 1402,  689,  689,  689,  689,  689,  689,  689,  689,
      689,  689,  689,  689,  689,  689,  689,  689, 1065, 1401,
     1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
     1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
     1065, 1065, 1065, 1065, 1065,  693,  693,  693,  693,  693,
      693,  693,  693,  693,  693,  693,  693,  693,  693,  693,
      693,  693,  693,  693,  693,  693,  693,  693,  693,  693,
      693,  693,  693,  693,  696,  696,  696,  696,  696,  696,
      696,  696,  696,  696,  696,  696,  696,  696,  696,  696,
      696,  696,  696,  696,  696,  696,  696,  696,  696,  696,

      696,  696,  696, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079,  707,  707, 1400, 1399, 2393, 1398, 1397, 2393,
      707,  707, 2393, 2393, 1396, 1395, 1394,  707,  707, 1393,
      707,  707,  707,  707,  707,  707,  707,  709,  709,  709,
      709, 1392,  709,  709, 1391,  709,  709,  709,  709,  709,
      709,  709, 1085, 1085, 1390, 1085, 1085, 1085, 1085, 1085,
     1085, 1085, 1087, 1389, 1388, 1387, 1386, 1385, 1087, 1087,
     1384, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1102, 1102,

     1102, 1383, 1382, 1102, 1102, 1381, 1102, 1102, 1102, 1102,
     1102, 1102, 1102,  724, 1379, 1378,  724,  724, 1375,  724,
      724,  724,  724,  724,  724,  724, 1103, 1370, 1369, 1103,
     1103, 1368, 1103, 1103, 1103, 1103, 1103, 1103, 1103, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1108, 1108,
     1108, 1367, 1364, 1108, 1108, 1363, 1108, 1108, 1108, 1108,
     1108, 1108, 1108,  385,  385,  385,  385, 1362,  385,  385,
     1361,  385,  385,  385,  385,  385,  385,  385,  733, 1360,

     1359, 1358, 1356, 1355,  733,  733, 1354,  733,  733,  733,
      733,  733,  733,  733, 1214, 1214, 1353, 1352, 1351, 1350,
     1349, 1348, 1347, 1344, 1214, 1214, 1214, 1343, 1336, 1214,
     1214, 1335, 1214, 1214, 1214, 1214, 1214, 1214, 1214, 1215,
     1215, 1215, 1323, 1322, 1215, 1215, 1321, 1215, 1215, 1215,
     1215, 1215, 1215, 1215,  479,  479,  479,  479, 1320,  479,
      479, 1320,  479,  479,  479,  479,  479,  479,  479,  828,
      828, 1315,  828,  828,  828,  828,  828,  828,  828, 1258,
     1258, 1258, 1314, 1313, 1258, 1258, 1313, 1258, 1258, 1258,
     1258, 1258, 1258, 1258,  519,  519,  519,  519, 1308,  519,

      519, 1305,  519,  519,  519,  519,  519,  519,  519,  540,
      540,  540, 1304, 1303,  540,  540, 1302,  540,  540,  540,
      540,  540,  540,  540, 1324, 1324, 1324, 1324, 1324, 1324,
     1324, 1324, 1324, 1324, 1324, 1301, 1324, 1300, 1324, 1324,
     1300, 1295, 1324, 1294, 1293, 1293, 1288, 1287, 1286, 1286,
     1324, 1324, 1324, 1327, 1327, 1327, 1327, 1327, 1327, 1327,
     1327, 1327, 1327, 1327, 1281, 1327, 1280, 1327, 1327, 1279,
     1279, 1327, 1274, 1273, 1272, 1272, 1267, 1266, 1265, 1327,
     1327, 1327, 1328, 1328, 1328, 1328, 1328, 1328, 1328, 1328,
     1328, 1328, 1328, 1265, 1328,  480, 1328, 1328,  480,  480,

     1328,  480,  480,  480,  480,  480,  480,  480, 1328, 1328,
     1328, 1357, 1357, 1357, 1357, 1357, 1357, 1357, 1357, 1357,
     1357, 1357,  480, 1357, 1223, 1357, 1357,  480, 1213, 1357,
     1212, 1211, 1210, 1209, 1208,  822, 1205, 1357, 1357, 1357,
     1380, 1380, 1380, 1380, 1380, 1380, 1380, 1380, 1380, 1380,
     1380, 1204, 1380, 1203, 1380, 1380, 1202, 1201, 1380, 1200,
      812, 1380, 1153, 1127,  732,  386, 1380, 1380, 1380, 1409,
     1409, 1409, 1107, 1105, 1409, 1409, 1104, 1409, 1409, 1409,
     1409, 1409, 1409, 1409, 1410, 1410,  728,  728, 1410, 1101,
     1100, 1099, 1099, 1094, 1410, 1410, 1410, 1093, 1092, 1410,

     1410, 1092, 1410, 1410, 1410, 1410, 1410, 1410, 1410,  637,
     1086,  637,  637,  637,  637,  637,  637,  637,  637,  637,
      637,  637,  637,  637,  637,  637,  637,  637,  637,  637,
      637,  637,  637,  637,  637,  637, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1039, 1418, 1418, 1418,  710,  710,
     1418, 1418,  708, 1418, 1418, 1418, 1418, 1418, 1418, 1418,
     1419, 1419, 1419, 1084, 1083, 1419, 1419, 1082, 1419, 1419,
     1419, 1419, 1419, 1419, 1419, 1434, 1434, 1434, 1081, 1080,

     1434, 1434,  696, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
     1065,  693, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
     1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
     1065, 1065, 1065, 1065, 1065, 1065, 1065, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1079, 1079, 1453, 1453, 1453, 1453,
     1453, 1453, 1453, 1453, 1453, 1453, 1453,  699, 1453, 1066,
     1453, 1453,  688,  688, 1453, 1064, 1063,  682,  676,  673,
      669,  665, 1453, 1453, 1453, 1456, 1456, 1456, 1047, 1046,

     1456, 1456, 1045, 1456, 1456, 1456, 1456, 1456, 1456, 1456,
     1457, 1457, 1457, 1045,  650, 1457, 1457, 1040, 1457, 1457,
     1457, 1457, 1457, 1457, 1457, 1102, 1102, 1102,  646, 1036,
     1102, 1102,  631, 1102, 1102, 1102, 1102, 1102, 1102, 1102,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1108,
     1108, 1108, 1034, 1031, 1108, 1108, 1030, 1108, 1108, 1108,
     1108, 1108, 1108, 1108,  385,  385,  385,  385, 1029,  385,
      385, 1028,  385,  385,  385,  385,  385,  385,  385,  733,

     1027, 1026, 1024, 1023, 1020,  733,  733, 1019,  733,  733,
      733,  733,  733,  733,  733, 1478, 1478, 1478, 1478, 1478,
     1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
     1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
     1478, 1478, 1478, 1478, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1488, 1488, 1488, 1488, 1488, 1488, 1488,
     1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488,
     1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488,

     1488, 1488, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
     1521, 1199, 1012, 1199, 1199, 1011, 1010, 1199, 1199, 1207,
     1009, 1207, 1207, 1007, 1006, 1207, 1207, 1214, 1214, 1004,
     1002,  998,  993,  991,  989,  988,  987, 1214, 1214, 1214,
      983,  981, 1214, 1214,  980, 1214, 1214, 1214, 1214, 1214,
     1214, 1214, 1215, 1215, 1215,  979,  966, 1215, 1215,  956,
     1215, 1215, 1215, 1215, 1215, 1215, 1215,  479,  479,  479,
      479,  955,  479,  479,  563,  479,  479,  479,  479,  479,

      479,  479,  828,  828,  559,  828,  828,  828,  828,  828,
      828,  828, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
     1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
     1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
     1582, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585,
     1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585,
     1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585,
     1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588,
     1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588,
     1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1258,

     1258, 1258,  942,  941, 1258, 1258,  940, 1258, 1258, 1258,
     1258, 1258, 1258, 1258,  519,  519,  519,  519,  939,  519,
      519,  938,  519,  519,  519,  519,  519,  519,  519, 1683,
     1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683,
     1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683,
     1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1690, 1690,
     1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690,
     1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690,
     1690, 1690, 1690, 1690, 1690, 1690, 1690, 1693, 1693, 1693,
     1693, 1693, 1693, 1693, 1693, 1693, 1693, 1693,  546, 1693,

      543, 1693, 1693,  536,  533, 1693,  527,  524,  520,  480,
      824,  823,  822, 1693, 1693, 1693, 1708, 1708, 1708, 1708,
     1708, 1708, 1708, 1708, 1708, 1708, 1708,  822, 1708,  817,
     1708, 1708,  816,  815, 1708,  814,  813,  812,  812,  732,
      386,  731, 1708, 1708, 1708, 1718, 1718, 1718, 1718, 1718,
     1718, 1718, 1718, 1718, 1718, 1718,  367, 1718,  363, 1718,
     1718,  710,  708, 1718,  701,  700,  699,  690,  688,  688,
      688, 1718, 1718, 1718, 1721, 1721, 1721, 1721, 1721, 1721,
     1721, 1721, 1721, 1721, 1721,  686, 1721,  685, 1721, 1721,
      684,  682, 1721,  680,  669,  667,  665,  663,  661,  660,

     1721, 1721, 1721, 1525, 1525, 1525, 1525, 1525, 1525, 1525,
     1525, 1525, 1525, 1525,  653, 1525,  650, 1525, 1525,  650,
      648, 1525,  646,  631,  628,  612,  604,  580,  570, 1525,
     1525, 1525, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
     1742, 1742, 1742,  562, 1742,  558, 1742, 1742,  556,  554,
     1742,  551,  550,  549,  541,  539,  530,  520, 1742, 1742,
     1742, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748, 1748,
     1748, 1748,  518, 1748,  480, 1748, 1748,  474,  471, 1748,
      469,  468,  464,  463,  452,  451,  450, 1748, 1748, 1748,
     1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569, 1569,

     1569,  448, 1569,  447, 1569, 1569,  446,  445, 1569,  437,
      386,  372, 1569,  366, 3775, 3775, 1569, 1569, 1569, 1409,
     1409, 1409, 3775, 3775, 1409, 1409, 3775, 1409, 1409, 1409,
     1409, 1409, 1409, 1409, 1410, 1410, 3775, 3775, 1410, 3775,
     3775, 3775, 3775, 3775, 1410, 1410, 1410, 3775, 3775, 1410,
     1410, 3775, 1410, 1410, 1410, 1410, 1410, 1410, 1410, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 3775, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1413, 3775,
     1413, 1413, 3775, 3775, 1413, 1413, 1418, 1418, 1418, 3775,

     3775, 1418, 1418, 3775, 1418, 1418, 1418, 1418, 1418, 1418,
     1418, 1419, 1419, 1419, 3775, 3775, 1419, 1419, 3775, 1419,
     1419, 1419, 1419, 1419, 1419, 1419, 1434, 1434, 1434, 3775,
     3775, 1434, 1434, 3775, 1434, 1434, 1434, 1434, 1434, 1434,
     1434, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     3775, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781, 1781,
     1781, 3775, 1781, 3775, 1781, 1781, 3775, 3775, 1781, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 1781, 1781, 1781, 1456,

     1456, 1456, 3775, 3775, 1456, 1456, 3775, 1456, 1456, 1456,
     1456, 1456, 1456, 1456, 1457, 1457, 1457, 3775, 3775, 1457,
     1457, 3775, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1458,
     3775, 1458, 1458, 3775, 3775, 1458, 1458, 1462, 3775, 1462,
     1462, 3775, 3775, 1462, 1462, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 3775, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106, 1106,
     1106, 1106, 1106, 1106, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,

     1788, 1788, 1788,  385,  385,  385,  385, 3775,  385,  385,
     3775,  385,  385,  385,  385,  385,  385,  385, 1792, 1792,
     1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792,
     1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792,
     1792, 1792, 1792, 1792, 1792, 1792, 1792, 1478, 1478, 1478,
     1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
     1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
     1478, 1478, 1478, 1478, 1478, 1478, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
     1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,

     1481, 1481, 1481, 1481, 1481, 1488, 1488, 1488, 1488, 1488,
     1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488,
     1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488,
     1488, 1488, 1488, 1488, 1838, 1838, 1838, 1838, 1838, 1838,
     1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838,
     1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838,
     1838, 1838, 1838,  733, 3775, 3775, 3775, 3775, 3775,  733,
      733, 3775,  733,  733,  733,  733,  733,  733,  733, 1521,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,

     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1844, 1844,
     1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844,
     1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844,
     1844, 1844, 1844, 1844, 1844, 1844, 1844, 1582, 1582, 1582,
     1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
     1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
     1582, 1582, 1582, 1582, 1582, 1582, 1585, 1585, 1585, 1585,
     1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585,
     1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585, 1585,
     1585, 1585, 1585, 1585, 1585, 1588, 1588, 1588, 1588, 1588,

     1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588,
     1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588,
     1588, 1588, 1588, 1588,  479,  479,  479,  479, 3775,  479,
      479, 3775,  479,  479,  479,  479,  479,  479,  479,  828,
      828, 3775,  828,  828,  828,  828,  828,  828,  828,  519,
      519,  519,  519, 3775,  519,  519, 3775,  519,  519,  519,
      519,  519,  519,  519, 1634, 3775, 1634, 1634, 3775, 3775,
     1634, 1634, 1638, 3775, 1638, 1638, 3775, 3775, 1638, 1638,
     1642, 3775, 1642, 1642, 3775, 3775, 1642, 1642, 1646, 3775,
     1646, 1646, 3775, 3775, 1646, 1646, 1650, 3775, 1650, 1650,

     3775, 3775, 1650, 1650, 1654, 3775, 1654, 1654, 3775, 3775,
     1654, 1654, 1664, 3775, 1664, 1664, 3775, 3775, 1664, 1664,
     1668, 3775, 1668, 1668, 3775, 3775, 1668, 1668, 1784, 1784,
     1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 1784, 3775,
     1784, 3775, 1784, 1784, 3775, 3775, 1784, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 1784, 1784, 1784, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,

     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1683, 1683, 1683, 1683, 1683,
     1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683,
     1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683,
     1683, 1683, 1683, 1683, 1690, 1690, 1690, 1690, 1690, 1690,
     1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690,
     1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690,
     1690, 1690, 1690, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,

     1990, 1990, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017, 2017,
     2017, 2017, 3775, 2017, 3775, 2017, 2017, 3775, 3775, 2017,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 2017, 2017, 2017,
     2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020, 2020,
     2020, 3775, 2020, 3775, 2020, 2020, 3775, 3775, 2020, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 2020, 2020, 2020, 2021,
     2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,

     3775, 2021, 3775, 2021, 2021, 3775, 3775, 2021, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 2021, 2021, 2021, 2024, 2024,
     2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 3775,
     2024, 3775, 2024, 2024, 3775, 3775, 2024, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 2024, 2024, 2024, 2029, 2029, 2029,
     2029, 2029, 2029, 2029, 2029, 2029, 2029, 2029, 3775, 2029,
     3775, 2029, 2029, 3775, 3775, 2029, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 2029, 2029, 2029, 2039, 2039, 2039, 2039,
     2039, 2039, 2039, 2039, 2039, 2039, 2039, 3775, 2039, 3775,
     2039, 2039, 3775, 3775, 2039, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 2039, 2039, 2039, 1762, 3775, 1762, 1762, 3775,
     3775, 1762, 1762, 1766, 3775, 1766, 1766, 3775, 3775, 1766,
     1766, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041, 2041,
     2041, 2041, 3775, 2041, 3775, 2041, 2041, 3775, 3775, 2041,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 2041, 2041, 2041,
     1772, 3775, 1772, 1772, 3775, 3775, 1772, 1772, 1776, 3775,
     1776, 1776, 3775, 3775, 1776, 1776,  385,  385,  385,  385,
     3775,  385,  385, 3775,  385,  385,  385,  385,  385,  385,
      385,  733, 3775, 3775, 3775, 3775, 3775,  733,  733, 3775,
      733,  733,  733,  733,  733,  733,  733, 1788, 1788, 1788,

     1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1788, 1788, 1788, 1788, 1788, 1792, 1792, 1792, 1792,
     1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792,
     1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792,
     1792, 1792, 1792, 1792, 1792, 2064, 2064, 2064, 2064, 2064,
     2064, 2064, 2064, 2064, 2064, 2064, 3775, 2064, 3775, 2064,
     2064, 3775, 3775, 2064, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 2064, 2064, 2064, 1488, 1488, 1488, 1488, 1488, 1488,
     1488, 1488, 1488, 3775, 1488, 1488, 1488, 1488, 1488, 1488,

     1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488, 1488,
     1488, 1488, 1488, 2076, 2076, 2076, 2076, 2076, 2076, 2076,
     2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076,
     2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076,
     2076, 2076, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081,
     2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081,
     2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081,
     2081, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098,
     2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098,
     2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098,

     1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838,
     1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838,
     1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1521,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 3775, 1521,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521,
     1521, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 1844, 1844,
     1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844,
     1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844,
     1844, 1844, 1844, 1844, 1844, 1844, 1844, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135,

     2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2135, 2135, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 1588, 1588, 1588, 1588, 1588,
     1588, 1588, 1588, 1588, 3775, 1588, 1588, 1588, 1588, 1588,
     1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588, 1588,
     1588, 1588, 1588, 1588,  479,  479,  479,  479, 3775,  479,
      479, 3775,  479,  479,  479,  479,  479,  479,  479, 2180,
     2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180,

     2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180,
     2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180,  828,  828,
     3775,  828,  828,  828,  828,  828,  828,  828,  519,  519,
      519,  519, 3775,  519,  519, 3775,  519,  519,  519,  519,
      519,  519,  519, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,

     1954, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683,
     3775, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683,
     1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683, 1683,
     2223, 2223, 2223, 2223, 2223, 2223, 2223, 2223, 2223, 2223,
     2223, 3775, 2223, 3775, 2223, 2223, 3775, 3775, 2223, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 2223, 2223, 2223, 1690,
     1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 3775, 1690,
     1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690,
     1690, 1690, 1690, 1690, 1690, 1690, 1690, 1690, 2069, 2069,
     2069, 2069, 2069, 2069, 2069, 2069, 2069, 2069, 2069, 3775,

     2069, 3775, 2069, 2069, 3775, 3775, 2069, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 2069, 2069, 2069, 2229, 2229, 2229,
     2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229,
     2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229,
     2229, 2229, 2229, 2229, 2229, 2229, 2232, 2232, 2232, 2232,
     2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232,
     2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232,
     2232, 2232, 2232, 2232, 2232, 2248, 2248, 2248, 2248, 2248,
     2248, 2248, 2248, 2248, 2248, 2248, 3775, 2248, 3775, 2248,
     2248, 3775, 3775, 2248, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 2248, 2248, 2248, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2259, 2259, 2259, 2259, 2259, 2259, 2259, 2259,
     2259, 2259, 2259, 3775, 2259, 3775, 2259, 2259, 3775, 3775,
     2259, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 2259, 2259,
     2259, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112, 2112,

     2112, 2112, 3775, 2112, 3775, 2112, 2112, 3775, 3775, 2112,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 2112, 2112, 2112,
     2262, 2262, 2262, 2262, 2262, 2262, 2262, 2262, 2262, 2262,
     2262, 3775, 2262, 3775, 2262, 2262, 3775, 3775, 2262, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 2262, 2262, 2262, 2266,
     2266, 2266, 2266, 2266, 2266, 2266, 2266, 2266, 2266, 2266,
     3775, 2266, 3775, 2266, 2266, 3775, 3775, 2266, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 2266, 2266, 2266, 2270, 2270,
     2270, 2270, 2270, 2270, 2270, 2270, 2270, 2270, 2270, 3775,
     2270, 3775, 2270, 2270, 3775, 3775, 2270, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 2270, 2270, 2270, 2280, 2280, 2280,
     2280, 2280, 2280, 2280, 2280, 2280, 2280, 2280, 3775, 2280,
     3775, 2280, 2280, 3775, 3775, 2280, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 2280, 2280, 2280, 2281, 2281, 2281, 2281,
     2281, 2281, 2281, 2281, 2281, 2281, 2281, 3775, 2281, 3775,
     2281, 2281, 3775, 3775, 2281, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 2281, 2281, 2281, 2287, 2287, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2292, 2292, 2292, 2292, 2292, 2292,

     2292, 2292, 2292, 2292, 2292, 3775, 2292, 3775, 2292, 2292,
     3775, 3775, 2292, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2292, 2292, 2292, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1788, 3775, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788, 1788,
     1788, 1788,  385,  385,  385,  385, 3775,  385,  385, 3775,
      385,  385,  385,  385,  385,  385,  385, 1792, 1792, 1792,
     1792, 1792, 1792, 1792, 1792, 1792, 3775, 1792, 1792, 1792,
     1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792, 1792,
     1792, 1792, 1792, 1792, 1792, 1792, 2306, 2306, 2306, 2306,

     2306, 2306, 2306, 2306, 2306, 2306, 2306, 3775, 2306, 3775,
     2306, 2306, 3775, 3775, 2306, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 2306, 2306, 2306,  733, 3775, 3775, 3775, 3775,
     3775,  733,  733, 3775,  733,  733,  733,  733,  733,  733,
      733, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310,
     2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310,
     2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310,
     2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076,
     2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076,
     2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2081,

     2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081,
     2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081,
     2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2334, 2334,
     2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334,
     2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334,
     2334, 2334, 2334, 2334, 2334, 2334, 2334, 2098, 2098, 2098,
     2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098,
     2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098,
     2098, 2098, 2098, 2098, 2098, 2098, 1838, 1838, 1838, 1838,
     1838, 1838, 1838, 1838, 1838, 3775, 1838, 1838, 1838, 1838,

     1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838,
     1838, 1838, 1838, 1838, 1838, 1844, 1844, 1844, 1844, 1844,
     1844, 1844, 1844, 1844, 3775, 1844, 1844, 1844, 1844, 1844,
     1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844, 1844,
     1844, 1844, 1844, 1844, 2135, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2370, 2370, 2370, 2370, 2370, 2370, 2370,
     2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370,
     2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370,

     2370, 2370, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373,
     2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373,
     2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373,
     2373, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2386, 2386, 2386, 2386, 2386, 2386, 2386, 2386, 2386, 2386,
     2386, 3775, 2386, 3775, 2386, 2386, 3775, 3775, 2386, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 2386, 2386, 2386,  479,
      479,  479,  479, 3775,  479,  479, 3775,  479,  479,  479,

      479,  479,  479,  479, 2398, 2398, 2398, 2398, 2398, 2398,
     2398, 2398, 2398, 2398, 2398, 3775, 2398, 3775, 2398, 2398,
     3775, 3775, 2398, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2398, 2398, 2398, 2180, 2180, 2180, 2180, 2180, 2180, 2180,
     2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180,
     2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180,
     2180, 2180,  828,  828, 3775,  828,  828,  828,  828,  828,
      828,  828, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409,
     2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409,
     2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409,

     2409, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413,
     2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413,
     2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413,
     2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2425,
     2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,
     2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,
     2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,  519,  519,
     3775, 3775, 3775, 3775, 3775,  519, 3775, 3775,  519,  519,

      519,  519, 3775,  519,  519, 3775,  519,  519,  519,  519,
      519,  519,  519, 2432, 2432, 2432, 2432, 2432, 2432, 2432,
     2432, 2432, 2432, 2432, 3775, 2432, 3775, 2432, 2432, 3775,
     3775, 2432, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 2432,
     2432, 2432, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 3775, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     3775, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,
     1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954, 1954,

     2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444, 2444,
     2444, 3775, 2444, 3775, 2444, 2444, 3775, 3775, 2444, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 2444, 2444, 2444, 2229,
     2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229,
     2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229,
     2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2449, 2449,
     2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 2449, 3775,
     2449, 3775, 2449, 2449, 3775, 3775, 2449, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 2449, 2449, 2449, 2232, 2232, 2232,
     2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232,

     2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232,
     2232, 2232, 2232, 2232, 2232, 2232, 2455, 2455, 2455, 2455,
     2455, 2455, 2455, 2455, 2455, 2455, 2455, 3775, 2455, 3775,
     2455, 2455, 3775, 3775, 2455, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 2455, 2455, 2455, 2462, 2462, 2462, 2462, 2462,
     2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462,
     2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462,
     2462, 2462, 2462, 2462, 2466, 2466, 2466, 2466, 2466, 2466,
     2466, 2466, 2466, 2466, 2466, 3775, 2466, 3775, 2466, 2466,
     3775, 3775, 2466, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     2466, 2466, 2466, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 3775, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
     1990, 1990, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470,
     2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470,
     2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470,
     2470, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     3775, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,

     2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
     2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2489,
     2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489,
     2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489,
     2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2492, 2492,
     2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492,
     2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492,
     2492, 2492, 2492, 2492, 2492, 2492, 2492, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287,

     2287, 2287, 2287, 2287, 2287, 2287,  385,  385,  385,  385,
     3775,  385,  385, 3775,  385,  385,  385,  385,  385,  385,
      385, 2509, 2509, 2509, 2509, 2509, 2509, 2509, 2509, 2509,
     2509, 2509, 3775, 2509, 3775, 2509, 2509, 3775, 3775, 2509,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 2509, 2509, 2509,
     2297, 3775, 2297, 2297, 3775, 3775, 2297, 2297, 2301, 3775,
     2301, 2301, 3775, 3775, 2301, 2301, 2510, 2510, 2510, 2510,
     2510, 2510, 2510, 2510, 2510, 2510, 2510, 3775, 2510, 3775,
     2510, 2510, 3775, 3775, 2510, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 2510, 2510, 2510, 2511, 2511, 2511, 2511, 2511,

     2511, 2511, 2511, 2511, 2511, 2511, 3775, 2511, 3775, 2511,
     2511, 3775, 3775, 2511, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 2511, 2511, 2511, 2310, 2310, 2310, 2310, 2310, 2310,
     2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310,
     2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310,
     2310, 2310, 2310, 2076, 2076, 2076, 2076, 2076, 2076, 2076,
     2076, 2076, 3775, 2076, 2076, 2076, 2076, 2076, 2076, 2076,
     2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076, 2076,
     2076, 2076, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081,
     2081, 3775, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081,

     2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081, 2081,
     2081, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531,
     2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531,
     2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531,
     2542, 2542, 3775, 3775, 3775, 3775, 3775, 2542, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 2542, 2542, 3775, 2542, 2542,
     2542, 2542, 2542, 2542, 2542, 2542, 2545, 2545, 2545, 2545,
     2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545,
     2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545,
     2545, 2545, 2545, 2545, 2545, 2334, 2334, 2334, 2334, 2334,

     2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334,
     2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334,
     2334, 2334, 2334, 2334,  733, 3775, 3775, 3775, 3775, 3775,
      733,  733, 3775,  733,  733,  733,  733,  733,  733,  733,
     2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 3775,
     2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098,
     2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2098, 2552,
     2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552,
     2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552,
     2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2555, 2555,

     2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
     2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
     2555, 2555, 2555, 2555, 2555, 2555, 2555, 2562, 2562, 2562,
     2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562,
     2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562,
     2562, 2562, 2562, 2562, 2562, 2562, 2570, 2570, 2570, 2570,
     2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570,
     2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570,
     2570, 2570, 2570, 2570, 2570, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 3775, 2135, 2135, 2135, 2135, 2135,

     2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135, 2135,
     2135, 2135, 2135, 2135, 2370, 2370, 2370, 2370, 2370, 2370,
     2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370,
     2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370,
     2370, 2370, 2370, 2373, 2373, 2373, 2373, 2373, 2373, 2373,
     2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373,
     2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373,
     2373, 2373, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 3775, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,
     2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156, 2156,

     2156, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602,
     2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602,
     2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602,
     2389, 3775, 2389, 2389, 3775, 3775, 2389, 2389, 2393, 3775,
     2393, 2393, 3775, 3775, 2393, 2393,  479,  479,  479,  479,
     3775,  479,  479, 3775,  479,  479,  479,  479,  479,  479,
      479, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180,
     3775, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180,
     2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180, 2180,
     2614, 2614, 2614, 2614, 2614, 2614, 2614, 2614, 2614, 2614,

     2614, 3775, 2614, 3775, 2614, 2614, 3775, 3775, 2614, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 2614, 2614, 2614, 2409,
     2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409,
     2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409,
     2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2413, 2413,
     2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413,
     2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413,
     2413, 2413, 2413, 2413, 2413, 2413, 2413, 2620, 2620, 2620,
     2620, 2620, 2620, 2620, 2620, 2620, 2620, 2620, 3775, 2620,
     3775, 2620, 2620, 3775, 3775, 2620, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 2620, 2620, 2620, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 2416, 2416, 2627, 2627, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2629, 2629, 2629, 2629, 2629, 2629,
     2629, 2629, 2629, 2629, 2629, 3775, 2629, 3775, 2629, 2629,
     3775, 3775, 2629, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2629, 2629, 2629, 2425, 2425, 2425, 2425, 2425, 2425, 2425,

     2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,
     2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,
     2425, 2425,  519,  519,  519,  519, 3775,  519,  519, 3775,
      519,  519,  519,  519,  519,  519,  519, 2637, 2637, 2637,
     2637, 2637, 2637, 2637, 2637, 2637, 2637, 2637, 3775, 2637,
     3775, 2637, 2637, 3775, 3775, 2637, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 2637, 2637, 2637, 2639, 2639, 2639, 2639,
     2639, 2639, 2639, 2639, 2639, 2639, 2639, 3775, 2639, 3775,
     2639, 2639, 3775, 3775, 2639, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 2639, 2639, 2639, 2645, 2645, 2645, 2645, 2645,

     2645, 2645, 2645, 2645, 2645, 2645, 3775, 2645, 3775, 2645,
     2645, 3775, 3775, 2645, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 2645, 2645, 2645, 2646, 2646, 2646, 2646, 2646, 2646,
     2646, 2646, 2646, 2646, 2646, 3775, 2646, 3775, 2646, 2646,
     3775, 3775, 2646, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2646, 2646, 2646, 2229, 2229, 2229, 2229, 2229, 2229, 2229,
     2229, 2229, 3775, 2229, 2229, 2229, 2229, 2229, 2229, 2229,
     2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229, 2229,
     2229, 2229, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232,
     2232, 3775, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232,

     2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232, 2232,
     2232, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657, 2657,
     2657, 2657, 3775, 2657, 3775, 2657, 2657, 3775, 3775, 2657,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 2657, 2657, 2657,
     2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462,
     2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462,
     2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2664, 2664,

     2664, 2664, 2664, 2664, 2664, 2664, 2664, 2664, 2664, 3775,
     2664, 3775, 2664, 2664, 3775, 3775, 2664, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 2664, 2664, 2664, 2666, 2666, 2666,
     2666, 2666, 2666, 2666, 2666, 2666, 2666, 2666, 3775, 2666,
     3775, 2666, 2666, 3775, 3775, 2666, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 2666, 2666, 2666, 2470, 2470, 2470, 2470,
     2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470,
     2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470,
     2470, 2470, 2470, 2470, 2470, 2671, 2671, 2671, 2671, 2671,
     2671, 2671, 2671, 2671, 2671, 2671, 3775, 2671, 3775, 2671,

     2671, 3775, 3775, 2671, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 2671, 2671, 2671, 2675, 2675, 2675, 2675, 2675, 2675,
     2675, 2675, 2675, 2675, 2675, 3775, 2675, 3775, 2675, 2675,
     3775, 3775, 2675, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2675, 2675, 2675, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
     2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
     2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
     2479, 2479, 2678, 2678, 2678, 2678, 2678, 2678, 2678, 2678,
     2678, 2678, 2678, 3775, 2678, 3775, 2678, 2678, 3775, 3775,
     2678, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 2678, 2678,

     2678, 2681, 2681, 2681, 2681, 2681, 2681, 2681, 2681, 2681,
     2681, 2681, 3775, 2681, 3775, 2681, 2681, 3775, 3775, 2681,
     3775, 3775, 3775, 3775, 2681, 3775, 3775, 2681, 2681, 2681,
     2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
     2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
     2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2686,
     2686, 2686, 2686, 2686, 2686, 2686, 2686, 2686, 2686, 2686,
     3775, 2686, 3775, 2686, 2686, 3775, 3775, 2686, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 2686, 2686, 2686, 2489, 2489,
     2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489,

     2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489,
     2489, 2489, 2489, 2489, 2489, 2489, 2489, 2492, 2492, 2492,
     2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492,
     2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492,
     2492, 2492, 2492, 2492, 2492, 2492, 2287, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2287, 3775, 2287, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2287, 2702, 2702, 2702, 2702, 2702,
     2702, 2702, 2702, 2702, 2702, 2702, 3775, 2702, 3775, 2702,
     2702, 3775, 3775, 2702, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 2702, 2702, 2702, 2703, 2703, 2703, 2703, 2703, 2703,
     2703, 2703, 2703, 2703, 2703, 3775, 2703, 3775, 2703, 2703,
     3775, 3775, 2703, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2703, 2703, 2703, 2704, 2704, 2704, 2704, 2704, 2704, 2704,
     2704, 2704, 2704, 2704, 3775, 2704, 3775, 2704, 2704, 3775,
     3775, 2704, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 2704,
     2704, 2704,  385,  385,  385,  385, 3775,  385,  385, 3775,
      385,  385,  385,  385,  385,  385,  385,  733, 3775, 3775,
     3775,  733, 3775,  733,  733, 3775,  733,  733,  733,  733,
      733,  733,  733, 2310, 2310, 2310, 2310, 2310, 2310, 2310,

     2310, 2310, 3775, 2310, 2310, 2310, 2310, 2310, 2310, 2310,
     2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310, 2310,
     2310, 2310, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
     2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
     2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
     2729, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531,
     2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531,
     2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531,
     2742, 2742, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2742, 2742, 2742, 2742, 3775, 2742, 2742, 3775, 2742, 2742,

     2742, 2742, 2742, 2742, 2742, 2742, 2745, 2745, 2745, 2745,
     2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745,
     2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745,
     2745, 2745, 2745, 2745, 2745, 2545, 2545, 2545, 2545, 2545,
     2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545,
     2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545,
     2545, 2545, 2545, 2545, 2334, 2334, 2334, 2334, 2334, 2334,
     2334, 2334, 2334, 3775, 2334, 2334, 2334, 2334, 2334, 2334,
     2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334, 2334,
     2334, 2334, 2334, 2749, 2749, 2749, 2749, 2749, 2749, 2749,

     2749, 2749, 2749, 2749, 3775, 2749, 3775, 2749, 2749, 3775,
     3775, 2749, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 2749,
     2749, 2749, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552,
     2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552,
     2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552,
     2552, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
     2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
     2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
     2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562,
     2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562,

     2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2762,
     2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762, 2762,
     3775, 2762, 3775, 2762, 2762, 3775, 3775, 2762, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 2762, 2762, 2762, 2570, 2570,
     2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570,
     2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570,
     2570, 2570, 2570, 2570, 2570, 2570, 2570, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2370, 2370, 2370, 2370,

     2370, 2370, 2370, 2370, 2370, 3775, 2370, 2370, 2370, 2370,
     2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370, 2370,
     2370, 2370, 2370, 2370, 2370, 2373, 2373, 2373, 2373, 2373,
     2373, 2373, 2373, 2373, 3775, 2373, 2373, 2373, 2373, 2373,
     2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373, 2373,
     2373, 2373, 2373, 2373, 2802, 2802, 2802, 2802, 2802, 2802,
     2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802,
     2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802,
     2802, 2802, 2802, 2602, 2602, 2602, 2602, 2602, 2602, 2602,
     2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602,

     2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602,
     2602, 2602, 2806, 2806, 2806, 2806, 2806, 2806, 2806, 2806,
     2806, 2806, 2806, 3775, 2806, 3775, 2806, 2806, 3775, 3775,
     2806, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 2806, 2806,
     2806,  479,  479, 3775, 3775, 3775, 3775, 3775,  479, 3775,
     3775,  479,  479,  479,  479, 3775,  479,  479, 3775,  479,
      479,  479,  479,  479,  479,  479,  828,  828, 3775,  828,
      828,  828,  828,  828,  828,  828, 2409, 2409, 2409, 2409,
     2409, 2409, 2409, 2409, 2409, 3775, 2409, 2409, 2409, 2409,
     2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409, 2409,

     2409, 2409, 2409, 2409, 2409, 2413, 2413, 2413, 2413, 2413,
     2413, 2413, 2413, 2413, 3775, 2413, 2413, 2413, 2413, 2413,
     2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413, 2413,
     2413, 2413, 2413, 2413, 2416, 2416, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 3775, 2416, 2416, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416, 2416,
     2416, 2416, 2416, 2627, 2627, 2627, 2627, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627,
     2627, 2627, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,

     2425, 3775, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,
     2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425, 2425,
     2425,  519,  519,  519,  519, 3775,  519,  519, 3775,  519,
      519,  519,  519,  519,  519,  519, 2828, 2828, 2828, 2828,
     2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828,
     2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828,
     2828, 2828, 2828, 2828, 2828, 2830, 2830, 2830, 2830, 2830,
     2830, 2830, 2830, 2830, 2830, 2830, 3775, 2830, 3775, 2830,
     2830, 3775, 3775, 2830, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 2830, 2830, 2830, 2833, 2833, 2833, 2833, 2833, 2833,

     2833, 2833, 2833, 2833, 2833, 3775, 2833, 3775, 2833, 2833,
     3775, 3775, 2833, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2833, 2833, 2833, 2837, 2837, 2837, 2837, 2837, 2837, 2837,
     2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837,
     2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837,
     2837, 2837, 2839, 2839, 2839, 2839, 2839, 2839, 2839, 2839,
     2839, 2839, 2839, 3775, 2839, 3775, 2839, 2839, 3775, 3775,
     2839, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 2839, 2839,
     2839, 2844, 2844, 2844, 2844, 2844, 2844, 2844, 2844, 2844,
     2844, 2844, 3775, 2844, 3775, 2844, 2844, 3775, 3775, 2844,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 2844, 2844, 2844,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2850,
     2850, 2850, 2850, 2850, 2850, 2850, 2850, 2850, 2850, 2850,
     3775, 2850, 3775, 2850, 2850, 3775, 3775, 2850, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 2850, 2850, 2850, 2462, 2462,
     2462, 2462, 2462, 2462, 2462, 2462, 2462, 3775, 2462, 2462,
     2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462, 2462,
     2462, 2462, 2462, 2462, 2462, 2462, 2462, 2662, 2662, 2662,

     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2470, 2470, 2470, 2470,
     2470, 2470, 2470, 2470, 2470, 3775, 2470, 2470, 2470, 2470,
     2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470, 2470,
     2470, 2470, 2470, 2470, 2470, 2858, 2858, 2858, 2858, 2858,
     2858, 2858, 2858, 2858, 2858, 2858, 3775, 2858, 3775, 2858,
     2858, 3775, 3775, 2858, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 2858, 2858, 2858, 2861, 2861, 2861, 2861, 2861, 2861,
     2861, 2861, 2861, 2861, 2861, 3775, 2861, 3775, 2861, 2861,

     3775, 3775, 2861, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2861, 2861, 2861, 2862, 2862, 2862, 2862, 2862, 2862, 2862,
     2862, 2862, 2862, 2862, 3775, 2862, 3775, 2862, 2862, 3775,
     3775, 2862, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 2862,
     2862, 2862, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
     2479, 3775, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
     2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479,
     2479, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863, 2863,
     2863, 2863, 3775, 2863, 3775, 2863, 2863, 3775, 3775, 2863,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 2863, 2863, 2863,

     2865, 2865, 2865, 2865, 2865, 2865, 2865, 2865, 2865, 2865,
     2865, 3775, 2865, 3775, 2865, 2865, 3775, 3775, 2865, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 2865, 2865, 2865, 2866,
     2866, 2866, 2866, 2866, 2866, 2866, 2866, 2866, 2866, 2866,
     3775, 2866, 3775, 2866, 2866, 3775, 3775, 2866, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 2866, 2866, 2866, 2684, 2684,
     2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
     2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
     2684, 2684, 2684, 2684, 2684, 2684, 2684, 2489, 2489, 2489,
     2489, 2489, 2489, 2489, 2489, 2489, 3775, 2489, 2489, 2489,

     2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489, 2489,
     2489, 2489, 2489, 2489, 2489, 2489, 2869, 2869, 2869, 2869,
     2869, 2869, 2869, 2869, 2869, 2869, 2869, 3775, 2869, 3775,
     2869, 2869, 3775, 3775, 2869, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 2869, 2869, 2869, 2492, 2492, 2492, 2492, 2492,
     2492, 2492, 2492, 2492, 3775, 2492, 2492, 2492, 2492, 2492,
     2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492, 2492,
     2492, 2492, 2492, 2492, 2882, 2882, 2882, 2882, 2882, 2882,
     2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882,
     2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882,

     2882, 2882, 2882,  385,  385,  385,  385, 3775,  385,  385,
     3775,  385,  385,  385,  385,  385,  385,  385, 2885, 2885,
     3775, 3775, 3775, 3775, 3775, 2885, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 2885, 2885, 3775, 2885, 2885, 2885, 2885,
     2885, 2885, 2885, 2885,  733, 3775, 3775, 3775,  733, 3775,
      733,  733, 3775,  733,  733,  733,  733,  733,  733,  733,
     2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
     2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
     2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2729,
     2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,

     2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
     2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2531, 2531,
     2531, 2531, 2531, 2531, 2531, 2531, 2531, 3775, 2531, 2531,
     2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531, 2531,
     2531, 2531, 2531, 2531, 2531, 2531, 2531, 2742, 2742, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 2742, 2742, 2742,
     2742, 3775, 2742, 2742, 3775, 2742, 2742, 2742, 2742, 2742,
     2742, 2742, 2742, 2916, 2916, 3775, 2916, 2916, 2916, 2916,
     2916, 2916, 2916, 2745, 2745, 2745, 2745, 2745, 2745, 2745,
     2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745,

     2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745,
     2745, 2745, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545,
     2545, 3775, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545,
     2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545, 2545,
     2545, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552,
     3775, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552,
     2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552, 2552,
     2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 3775,
     2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555,
     2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2555, 2562,

     2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 3775, 2562,
     2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562,
     2562, 2562, 2562, 2562, 2562, 2562, 2562, 2562, 2570, 2570,
     2570, 2570, 2570, 2570, 2570, 2570, 2570, 3775, 2570, 2570,
     2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570, 2570,
     2570, 2570, 2570, 2570, 2570, 2570, 2570, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2941, 2941, 2941, 2941,
     2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941,

     2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941,
     2941, 2941, 2941, 2941, 2941, 2802, 2802, 2802, 2802, 2802,
     2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802,
     2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802,
     2802, 2802, 2802, 2802, 2602, 2602, 2602, 2602, 2602, 2602,
     2602, 2602, 2602, 3775, 2602, 2602, 2602, 2602, 2602, 2602,
     2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602, 2602,
     2602, 2602, 2602, 2959, 2959, 2959, 2959, 2959, 2959, 2959,
     2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959,
     2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959,

     2959, 2959,  479,  479,  479,  479, 3775,  479,  479, 3775,
      479,  479,  479,  479,  479,  479,  479, 2964, 2964, 2964,
     2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964,
     2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964,
     2964, 2964, 2964, 2964, 2964, 2964,  828,  828, 3775,  828,
      828,  828,  828,  828,  828,  828, 2627, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2627, 3775, 2627, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627, 2627,
     2627, 2627, 2627, 2627, 2627,  519,  519,  519,  519, 3775,
      519,  519, 3775,  519,  519,  519,  519,  519,  519,  519,

     2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828,
     2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828,
     2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2973,
     2973, 2973, 2973, 2973, 2973, 2973, 2973, 2973, 2973, 2973,
     3775, 2973, 3775, 2973, 2973, 3775, 3775, 2973, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 2973, 2973, 2973, 2976, 2976,
     2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976,
     2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976,
     2976, 2976, 2976, 2976, 2976, 2976, 2976, 2837, 2837, 2837,
     2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837,

     2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837,
     2837, 2837, 2837, 2837, 2837, 2837, 2983, 2983, 2983, 2983,
     2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983,
     2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983,
     2983, 2983, 2983, 2983, 2983, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 2846, 2846, 2987, 2987, 2987, 2987, 2987, 2987,
     2987, 2987, 2987, 2987, 2987, 3775, 2987, 3775, 2987, 2987,
     3775, 3775, 2987, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     2987, 2987, 2987, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 3775, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662, 2662,
     2662, 2662, 2993, 2993, 2993, 2993, 2993, 2993, 2993, 2993,
     2993, 2993, 2993, 3775, 2993, 3775, 2993, 2993, 3775, 3775,
     2993, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 2993, 2993,
     2993, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995,
     2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995,
     2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995,
     2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 3775,

     2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684,
     2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2684, 2882,
     2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882,
     2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882,
     2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 3017, 3017,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3017, 3017,
     3017, 3017, 3775, 3017, 3017, 3775, 3017, 3017, 3017, 3017,
     3017, 3017, 3017, 3017, 3020, 3020, 3020, 3020, 3020, 3020,
     3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,
     3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,

     3020, 3020, 3020, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
     2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
     2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
     2891, 2891, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
     2729, 3775, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
     2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
     2729, 3040, 3040, 3040, 3040, 3040, 3040, 3040, 3040, 3040,
     3040, 3040, 3775, 3040, 3775, 3040, 3040, 3775, 3775, 3040,
     3775, 3775, 3775, 3775, 3040, 3775, 3775, 3040, 3040, 3040,
     3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045,

     3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045,
     3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3050,
     3050, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3050,
     3050, 3050, 3775, 3775, 3050, 3050, 3775, 3050, 3050, 3050,
     3050, 3050, 3050, 3050, 3050, 2542, 2542, 3775, 3775, 3775,
     3775, 3775, 2542, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     2542, 2542, 3775, 2542, 2542, 2542, 2542, 2542, 2542, 2542,
     2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 3775,
     2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745,
     2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 2745, 3056,

     3056, 3056, 3056, 3056, 3056, 3056, 3056, 3056, 3056, 3056,
     3775, 3056, 3775, 3056, 3056, 3775, 3775, 3056, 3775, 3775,
     3775, 3775, 3056, 3775, 3775, 3056, 3056, 3056, 3062, 3062,
     3062, 3062, 3062, 3062, 3062, 3062, 3062, 3062, 3062, 3775,
     3062, 3775, 3062, 3062, 3775, 3775, 3062, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3062, 3062, 3062, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 3775, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774, 2774,
     2774, 2774, 2774, 2774, 2774, 2774, 2941, 2941, 2941, 2941,
     2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941,

     2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941,
     2941, 2941, 2941, 2941, 2941, 3076, 3076, 3076, 3076, 3076,
     3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076,
     3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076,
     3076, 3076, 3076, 3076, 2802, 2802, 2802, 2802, 2802, 2802,
     2802, 2802, 2802, 3775, 2802, 2802, 2802, 2802, 2802, 2802,
     2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802, 2802,
     2802, 2802, 2802, 3087, 3087, 3087, 3087, 3087, 3087, 3087,
     3087, 3087, 3087, 3087, 3775, 3087, 3775, 3087, 3087, 3775,
     3775, 3087, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3087,

     3087, 3087, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959,
     2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959,
     2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959,
     2959,  479,  479,  479,  479, 3775,  479,  479, 3775,  479,
      479,  479,  479,  479,  479,  479, 3091, 3091, 3091, 3091,
     3091, 3091, 3091, 3091, 3091, 3091, 3091, 3775, 3091, 3775,
     3091, 3091, 3775, 3775, 3091, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3091, 3091, 3091, 2964, 2964, 2964, 2964, 2964,
     2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964,
     2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964,

     2964, 2964, 2964, 2964,  519,  519,  519,  519, 3775,  519,
      519, 3775,  519,  519,  519,  519,  519,  519,  519, 2828,
     2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 3775, 2828,
     2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828,
     2828, 2828, 2828, 2828, 2828, 2828, 2828, 2828, 3099, 3099,
     3099, 3099, 3099, 3099, 3099, 3099, 3099, 3099, 3099, 3775,
     3099, 3775, 3099, 3099, 3775, 3775, 3099, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3099, 3099, 3099, 2976, 2976, 2976,
     2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976,
     2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976,

     2976, 2976, 2976, 2976, 2976, 2976, 2837, 2837, 2837, 2837,
     2837, 2837, 2837, 2837, 2837, 3775, 2837, 2837, 2837, 2837,
     2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837, 2837,
     2837, 2837, 2837, 2837, 2837, 3105, 3105, 3105, 3105, 3105,
     3105, 3105, 3105, 3105, 3105, 3105, 3775, 3105, 3775, 3105,
     3105, 3775, 3775, 3105, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3105, 3105, 3105, 2983, 2983, 2983, 2983, 2983, 2983,
     2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983,
     2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983, 2983,
     2983, 2983, 2983, 2846, 2846, 2846, 2846, 2846, 2846, 2846,

     2846, 2846, 3775, 2846, 2846, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846, 2846,
     2846, 2846, 3112, 3112, 3112, 3112, 3112, 3112, 3112, 3112,
     3112, 3112, 3112, 3775, 3112, 3775, 3112, 3112, 3775, 3775,
     3112, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3112, 3112,
     3112, 3114, 3114, 3114, 3114, 3114, 3114, 3114, 3114, 3114,
     3114, 3114, 3775, 3114, 3775, 3114, 3114, 3775, 3775, 3114,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3114, 3114, 3114,
     2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995,
     2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995,

     2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 2995, 3116,
     3116, 3116, 3116, 3116, 3116, 3116, 3116, 3116, 3116, 3116,
     3116, 3116, 3116, 3116, 3116, 3116, 3116, 3116, 3116, 3116,
     3116, 3116, 3116, 3116, 3116, 3116, 3116, 3116, 3124, 3124,
     3124, 3124, 3124, 3124, 3124, 3124, 3124, 3124, 3124, 3124,
     3124, 3124, 3124, 3124, 3124, 3124, 3124, 3124, 3124, 3124,
     3124, 3124, 3124, 3124, 3124, 3124, 3124, 2882, 2882, 2882,
     2882, 2882, 2882, 2882, 2882, 2882, 3775, 2882, 2882, 2882,
     2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882, 2882,
     2882, 2882, 2882, 2882, 2882, 2882, 3017, 3017, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3017, 3017, 3017, 3017,
     3775, 3017, 3017, 3775, 3017, 3017, 3017, 3017, 3017, 3017,
     3017, 3017, 3135, 3135, 3775, 3135, 3135, 3135, 3135, 3135,
     3135, 3135, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,
     3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,
     3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020, 3020,
     3020, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
     3775, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
     2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891, 2891,
     3155, 3155, 3155, 3155, 3155, 3155, 3155, 3155, 3155, 3155,

     3155, 3775, 3155, 3775, 3155, 3155, 3775, 3775, 3155, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3155, 3155, 3155, 3045,
     3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045,
     3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045,
     3045, 3045, 3045, 3045, 3045, 3045, 3045, 3045, 3160, 3160,
     3160, 3160, 3160, 3160, 3160, 3160, 3160, 3160, 3160, 3160,
     3160, 3160, 3160, 3160, 3160, 3160, 3160, 3160, 3160, 3160,
     3160, 3160, 3160, 3160, 3160, 3160, 3160, 3050, 3050, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3050, 3050, 3050,
     3775, 3775, 3050, 3050, 3775, 3050, 3050, 3050, 3050, 3050,

     3050, 3050, 3050, 3167, 3167, 3167, 3167, 3167, 3167, 3167,
     3167, 3167, 3167, 3167, 3775, 3167, 3775, 3167, 3167, 3775,
     3775, 3167, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3167,
     3167, 3167, 3174, 3174, 3174, 3174, 3174, 3174, 3174, 3174,
     3174, 3174, 3174, 3775, 3174, 3775, 3174, 3174, 3775, 3775,
     3174, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3174, 3174,
     3174, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941,
     3775, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941,
     2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941, 2941,
     3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076,

     3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076,
     3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 3076, 2959,
     2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 3775, 2959,
     2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959,
     2959, 2959, 2959, 2959, 2959, 2959, 2959, 2959,  479,  479,
      479,  479, 3775,  479,  479, 3775,  479,  479,  479,  479,
      479,  479,  479, 2964, 2964, 2964, 2964, 2964, 2964, 2964,
     2964, 2964, 3775, 2964, 2964, 2964, 2964, 2964, 2964, 2964,
     2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964, 2964,
     2964, 2964,  519,  519,  519,  519, 3775,  519,  519, 3775,

      519,  519,  519,  519,  519,  519,  519, 2976, 2976, 2976,
     2976, 2976, 2976, 2976, 2976, 2976, 3775, 2976, 2976, 2976,
     2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976, 2976,
     2976, 2976, 2976, 2976, 2976, 2976, 3205, 3205, 3205, 3205,
     3205, 3205, 3205, 3205, 3205, 3205, 3205, 3775, 3205, 3775,
     3205, 3205, 3775, 3775, 3205, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3205, 3205, 3205, 3211, 3211, 3211, 3211, 3211,
     3211, 3211, 3211, 3211, 3211, 3211, 3211, 3211, 3211, 3211,
     3211, 3211, 3211, 3211, 3211, 3211, 3211, 3211, 3211, 3211,
     3211, 3211, 3211, 3211, 3216, 3216, 3216, 3216, 3216, 3216,

     3216, 3216, 3216, 3216, 3216, 3775, 3216, 3775, 3216, 3216,
     3775, 3775, 3216, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3216, 3216, 3216, 3235, 3235, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3235, 3235, 3235, 3775, 3775, 3235, 3235,
     3775, 3235, 3235, 3235, 3235, 3235, 3235, 3235, 3235, 2885,
     2885, 3775, 3775, 3775, 3775, 3775, 2885, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 2885, 2885, 3775, 2885, 2885, 2885,
     2885, 2885, 2885, 2885, 3261, 3261, 3261, 3261, 3261, 3261,
     3261, 3261, 3261, 3261, 3261, 3775, 3261, 3775, 3261, 3261,
     3775, 3775, 3261, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3261, 3261, 3261, 3262, 3262, 3262, 3262, 3262, 3262, 3262,
     3262, 3262, 3262, 3262, 3775, 3262, 3775, 3262, 3262, 3775,
     3775, 3262, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3262,
     3262, 3262,  733, 3775, 3775, 3775, 3775, 3775,  733,  733,
     3775,  733,  733,  733,  733,  733,  733,  733, 3274, 3274,
     3274, 3274, 3274, 3274, 3274, 3274, 3274, 3274, 3274, 3775,
     3274, 3775, 3274, 3274, 3775, 3775, 3274, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3274, 3274, 3274, 3296, 3296, 3296,
     3296, 3296, 3296, 3296, 3296, 3296, 3296, 3296, 3775, 3296,
     3775, 3296, 3296, 3775, 3775, 3296, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3296, 3296, 3296, 3310, 3310, 3310, 3310,
     3310, 3310, 3310, 3310, 3310, 3310, 3310, 3775, 3310, 3775,
     3310, 3310, 3775, 3775, 3310, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3310, 3310, 3310, 3323, 3323, 3323, 3323, 3323,
     3323, 3323, 3323, 3323, 3323, 3323, 3775, 3323, 3775, 3323,
     3323, 3775, 3775, 3323, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3323, 3323, 3323, 3342, 3342, 3342, 3342, 3342, 3342,
     3342, 3342, 3342, 3342, 3342, 3775, 3342, 3775, 3342, 3342,
     3775, 3775, 3342, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3342, 3342, 3342, 3353, 3353, 3353, 3353, 3353, 3353, 3353,

     3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353,
     3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353, 3353,
     3353, 3353, 3357, 3357, 3357, 3357, 3357, 3357, 3357, 3357,
     3357, 3357, 3357, 3775, 3357, 3775, 3357, 3357, 3775, 3775,
     3357, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3357, 3357,
     3357, 3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358,
     3358, 3358, 3775, 3358, 3775, 3358, 3358, 3775, 3775, 3358,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3358, 3358, 3358,
     3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363,
     3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363,

     3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3367,
     3367, 3367, 3367, 3367, 3367, 3367, 3367, 3367, 3367, 3367,
     3775, 3367, 3775, 3367, 3367, 3775, 3775, 3367, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3367, 3367, 3367, 3375, 3375,
     3375, 3375, 3375, 3375, 3375, 3375, 3375, 3375, 3375, 3375,
     3375, 3375, 3375, 3375, 3375, 3375, 3375, 3375, 3375, 3375,
     3375, 3375, 3375, 3375, 3375, 3375, 3375, 3381, 3381, 3381,
     3381, 3381, 3381, 3381, 3381, 3381, 3381, 3381, 3775, 3381,
     3775, 3381, 3381, 3775, 3775, 3381, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3381, 3381, 3381, 3385, 3385, 3385, 3385,

     3385, 3385, 3385, 3385, 3385, 3385, 3385, 3775, 3385, 3775,
     3385, 3385, 3775, 3775, 3385, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3385, 3385, 3385, 3386, 3386, 3386, 3386, 3386,
     3386, 3386, 3386, 3386, 3386, 3386, 3775, 3386, 3775, 3386,
     3386, 3775, 3775, 3386, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3386, 3386, 3386, 3388, 3388, 3388, 3388, 3388, 3388,
     3388, 3388, 3388, 3388, 3388, 3388, 3388, 3388, 3388, 3388,
     3388, 3388, 3388, 3388, 3388, 3388, 3388, 3388, 3388, 3388,
     3388, 3388, 3388, 3391, 3391, 3391, 3391, 3391, 3391, 3391,
     3391, 3391, 3391, 3391, 3391, 3391, 3391, 3391, 3391, 3391,

     3391, 3391, 3391, 3391, 3391, 3391, 3391, 3391, 3391, 3391,
     3391, 3391, 3395, 3395, 3395, 3395, 3395, 3395, 3395, 3395,
     3395, 3395, 3395, 3775, 3395, 3775, 3395, 3395, 3775, 3775,
     3395, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3395, 3395,
     3395, 3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396, 3396,
     3396, 3396, 3775, 3396, 3775, 3396, 3396, 3775, 3775, 3396,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3396, 3396, 3396,
     3401, 3401, 3401, 3401, 3401, 3401, 3401, 3401, 3401, 3401,
     3401, 3401, 3401, 3401, 3401, 3401, 3401, 3401, 3401, 3401,
     3401, 3401, 3401, 3401, 3401, 3401, 3401, 3401, 3401, 3430,

     3430, 3430, 3430, 3430, 3430, 3430, 3430, 3430, 3430, 3430,
     3430, 3430, 3430, 3430, 3430, 3430, 3430, 3430, 3430, 3430,
     3430, 3430, 3430, 3430, 3430, 3430, 3430, 3430, 3435, 3435,
     3435, 3435, 3435, 3435, 3435, 3435, 3435, 3435, 3435, 3775,
     3435, 3775, 3435, 3435, 3775, 3775, 3435, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3435, 3435, 3435, 3436, 3436, 3436,
     3436, 3436, 3436, 3436, 3436, 3436, 3436, 3436, 3775, 3436,
     3775, 3436, 3436, 3775, 3775, 3436, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3436, 3436, 3436, 3437, 3437, 3437, 3437,
     3437, 3437, 3437, 3437, 3437, 3437, 3437, 3775, 3437, 3775,

     3437, 3437, 3775, 3775, 3437, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3437, 3437, 3437, 3449, 3449, 3449, 3449, 3449,
     3449, 3449, 3449, 3449, 3449, 3449, 3775, 3449, 3775, 3449,
     3449, 3775, 3775, 3449, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3449, 3449, 3449, 3451, 3451, 3451, 3451, 3451, 3451,
     3451, 3451, 3451, 3451, 3451, 3775, 3451, 3775, 3451, 3451,
     3775, 3775, 3451, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3451, 3451, 3451, 3456, 3456, 3456, 3456, 3456, 3456, 3456,
     3456, 3456, 3456, 3456, 3775, 3456, 3775, 3456, 3456, 3775,
     3775, 3456, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3456,

     3456, 3456, 3460, 3460, 3460, 3460, 3460, 3460, 3460, 3460,
     3460, 3460, 3460, 3775, 3460, 3775, 3460, 3460, 3775, 3775,
     3460, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3460, 3460,
     3460, 3461, 3461, 3461, 3461, 3461, 3461, 3461, 3461, 3461,
     3461, 3461, 3775, 3461, 3775, 3461, 3461, 3775, 3775, 3461,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3461, 3461, 3461,
     3462, 3462, 3462, 3462, 3462, 3462, 3462, 3462, 3462, 3462,
     3462, 3775, 3462, 3775, 3462, 3462, 3775, 3775, 3462, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3462, 3462, 3462, 3470,
     3470, 3470, 3470, 3470, 3470, 3470, 3470, 3470, 3470, 3470,

     3775, 3470, 3775, 3470, 3470, 3775, 3775, 3470, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3470, 3470, 3470, 3471, 3471,
     3471, 3471, 3471, 3471, 3471, 3471, 3471, 3471, 3471, 3775,
     3471, 3775, 3471, 3471, 3775, 3775, 3471, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3471, 3471, 3471, 3480, 3480, 3480,
     3480, 3480, 3480, 3480, 3480, 3480, 3480, 3480, 3775, 3480,
     3775, 3480, 3480, 3775, 3775, 3480, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3480, 3480, 3480, 3484, 3484, 3484, 3484,
     3484, 3484, 3484, 3484, 3484, 3484, 3484, 3484, 3484, 3484,
     3484, 3484, 3484, 3484, 3484, 3484, 3484, 3484, 3484, 3484,

     3484, 3484, 3484, 3484, 3484, 3498, 3498, 3498, 3498, 3498,
     3498, 3498, 3498, 3498, 3498, 3498, 3775, 3498, 3775, 3498,
     3498, 3775, 3775, 3498, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3498, 3498, 3498, 3508, 3508, 3508, 3508, 3508, 3508,
     3508, 3508, 3508, 3508, 3508, 3775, 3508, 3775, 3508, 3508,
     3775, 3775, 3508, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3508, 3508, 3508, 3516, 3516, 3516, 3516, 3516, 3516, 3516,
     3516, 3516, 3516, 3516, 3775, 3516, 3775, 3516, 3516, 3775,
     3775, 3516, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3516,
     3516, 3516, 3517, 3517, 3517, 3517, 3517, 3517, 3517, 3517,

     3517, 3517, 3517, 3775, 3517, 3775, 3517, 3517, 3775, 3775,
     3517, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3517, 3517,
     3517, 3522, 3522, 3522, 3522, 3522, 3522, 3522, 3522, 3522,
     3522, 3522, 3775, 3522, 3775, 3522, 3522, 3775, 3775, 3522,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3522, 3522, 3522,
      733, 3775, 3775, 3775,  733, 3775,  733,  733, 3775,  733,
      733,  733,  733,  733,  733,  733, 3534, 3534, 3534, 3534,
     3534, 3534, 3534, 3534, 3534, 3534, 3534, 3534, 3534, 3534,
     3534, 3534, 3534, 3534, 3534, 3534, 3534, 3534, 3534, 3534,
     3534, 3534, 3534, 3534, 3534, 3559, 3559, 3559, 3559, 3559,

     3559, 3559, 3559, 3559, 3559, 3559, 3775, 3559, 3775, 3559,
     3559, 3775, 3775, 3559, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3559, 3559, 3559, 3560, 3560, 3560, 3560, 3560, 3560,
     3560, 3560, 3560, 3560, 3560, 3775, 3560, 3775, 3560, 3560,
     3775, 3775, 3560, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3560, 3560, 3560, 3561, 3561, 3561, 3561, 3561, 3561, 3561,
     3561, 3561, 3561, 3561, 3561, 3561, 3561, 3561, 3561, 3561,
     3561, 3561, 3561, 3561, 3561, 3561, 3561, 3561, 3561, 3561,
     3561, 3561, 3570, 3570, 3570, 3570, 3570, 3570, 3570, 3570,
     3570, 3570, 3570, 3775, 3570, 3775, 3570, 3570, 3775, 3775,

     3570, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3570, 3570,
     3570, 3571, 3571, 3571, 3571, 3571, 3571, 3571, 3571, 3571,
     3571, 3571, 3775, 3571, 3775, 3571, 3571, 3775, 3775, 3571,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3571, 3571, 3571,
     3580, 3580, 3580, 3580, 3580, 3580, 3580, 3580, 3580, 3580,
     3580, 3580, 3580, 3580, 3580, 3580, 3580, 3580, 3580, 3580,
     3580, 3580, 3580, 3580, 3580, 3580, 3580, 3580, 3580, 3583,
     3583, 3583, 3583, 3583, 3583, 3583, 3583, 3583, 3583, 3583,
     3583, 3583, 3583, 3583, 3583, 3583, 3583, 3583, 3583, 3583,
     3583, 3583, 3583, 3583, 3583, 3583, 3583, 3583, 3589, 3589,

     3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589,
     3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589, 3589,
     3589, 3589, 3589, 3589, 3589, 3589, 3589, 3591, 3591, 3591,
     3591, 3591, 3591, 3591, 3591, 3591, 3591, 3591, 3591, 3591,
     3591, 3591, 3591, 3591, 3591, 3591, 3591, 3591, 3591, 3591,
     3591, 3591, 3591, 3591, 3591, 3591, 3600, 3600, 3600, 3600,
     3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600,
     3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600, 3600,
     3600, 3600, 3600, 3600, 3600, 3604, 3604, 3604, 3604, 3604,
     3604, 3604, 3604, 3604, 3604, 3604, 3775, 3604, 3775, 3604,

     3604, 3775, 3775, 3604, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3604, 3604, 3604, 3605, 3605, 3605, 3605, 3605, 3605,
     3605, 3605, 3605, 3605, 3605, 3775, 3605, 3775, 3605, 3605,
     3775, 3775, 3605, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3605, 3605, 3605, 3612, 3612, 3612, 3612, 3612, 3612, 3612,
     3612, 3612, 3612, 3612, 3775, 3612, 3775, 3612, 3612, 3775,
     3775, 3612, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3612,
     3612, 3612, 3613, 3613, 3613, 3613, 3613, 3613, 3613, 3613,
     3613, 3613, 3613, 3775, 3613, 3775, 3613, 3613, 3775, 3775,
     3613, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3613, 3613,

     3613, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622,
     3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622,
     3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622, 3622,
     3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632, 3632,
     3632, 3775, 3632, 3775, 3632, 3632, 3775, 3775, 3632, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3632, 3632, 3632, 3638,
     3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638,
     3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638,
     3638, 3638, 3638, 3638, 3638, 3638, 3638, 3638, 3644, 3644,
     3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644,

     3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644, 3644,
     3644, 3644, 3644, 3644, 3644, 3644, 3644, 3658, 3658, 3658,
     3658, 3658, 3658, 3658, 3658, 3658, 3658, 3658, 3658, 3658,
     3658, 3658, 3658, 3658, 3658, 3658, 3658, 3658, 3658, 3658,
     3658, 3658, 3658, 3658, 3658, 3658, 3668, 3668, 3668, 3668,
     3668, 3668, 3668, 3668, 3668, 3668, 3668, 3775, 3668, 3775,
     3668, 3668, 3775, 3775, 3668, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3668, 3668, 3668, 3685, 3685, 3685, 3685, 3685,
     3685, 3685, 3685, 3685, 3685, 3685, 3775, 3685, 3775, 3685,
     3685, 3775, 3775, 3685, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3685, 3685, 3685, 3692, 3692, 3692, 3692, 3692, 3692,
     3692, 3692, 3692, 3692, 3692, 3692, 3692, 3692, 3692, 3692,
     3692, 3692, 3692, 3692, 3692, 3692, 3692, 3692, 3692, 3692,
     3692, 3692, 3692, 3699, 3699, 3699, 3699, 3699, 3699, 3699,
     3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699,
     3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699, 3699,
     3699, 3699, 3703, 3703, 3703, 3703, 3703, 3703, 3703, 3703,
     3703, 3703, 3703, 3775, 3703, 3775, 3703, 3703, 3775, 3775,
     3703, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3703, 3703,
     3703, 3710, 3710, 3710, 3710, 3710, 3710, 3710, 3710, 3710,

     3710, 3710, 3775, 3710, 3775, 3710, 3710, 3775, 3775, 3710,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3710, 3710, 3710,
     3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720,
     3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720,
     3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3720, 3725,
     3725, 3775, 3775, 3775, 3775, 3775, 3725, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3725, 3725, 3775, 3725, 3725, 3725,
     3725, 3725, 3725, 3725, 3725, 3727, 3727, 3727, 3727, 3727,
     3727, 3727, 3727, 3727, 3727, 3727, 3775, 3727, 3775, 3727,
     3727, 3775, 3775, 3727, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3727, 3727, 3727, 3728, 3728, 3728, 3728, 3728, 3728,
     3728, 3728, 3728, 3728, 3728, 3775, 3728, 3775, 3728, 3728,
     3775, 3775, 3728, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3728, 3728, 3728, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729, 3729,
     3729, 3729, 3739, 3739, 3739, 3739, 3739, 3739, 3739, 3739,
     3739, 3739, 3739, 3739, 3739, 3739, 3739, 3739, 3739, 3739,
     3739, 3739, 3739, 3739, 3739, 3739, 3739, 3739, 3739, 3739,
     3739, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742,

     3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742,
     3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742, 3742,
     3746, 3746, 3746, 3746, 3746, 3746, 3746, 3746, 3746, 3746,
     3746, 3746, 3746, 3746, 3746, 3746, 3746, 3746, 3746, 3746,
     3746, 3746, 3746, 3746, 3746, 3746, 3746, 3746, 3746, 3757,
     3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757,
     3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757,
     3757, 3757, 3757, 3757, 3757, 3757, 3757, 3757, 3762, 3762,
     3762, 3762, 3762, 3762, 3762, 3762, 3762, 3762, 3762, 3762,
     3762, 3762, 3762, 3762, 3762, 3762, 3762, 3762, 3762, 3762,

     3762, 3762, 3762, 3762, 3762, 3762, 3762, 3767, 3767, 3767,
     3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767,
     3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767, 3767,
     3767, 3767, 3767, 3767, 3767, 3767, 3772, 3772, 3772, 3772,
     3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772,
     3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772, 3772,
     3772, 3772, 3772, 3772, 3772,   63, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775
    } ;

static yyconst flex_int16_t yy_chk[23836] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    3,
     1440,    3,    3,    4,    9,    4,    4,   10,   69,    3,
        3,   73,   69,    4,    4,    5,   98,    5,    5,   72,
       72,    6,    3,    6,    6,   73,    4,    7,    7,    7,

        7,   15,    8,    8,    8,    8,   16,   59,    7,    7,
       98,   15,    7,    8,    8,  173,   16,    8,   80,   79,
       15,   79,    7,  104,    5,   16,    9,    8,  171,   10,
        6,   60,    9,   80,    3,   10,    3,    3,    4,  173,
        4,    4,   11,   11,   11,   11,   11,   12,   12,   12,
       12,   12,   11,    5,  287,   87,   59,   12,  104,    6,
      287,    7, 1441,   59,  171,   11,    8,  151,   94,  135,
       12,   27,   27,   27,   27,   28,   28,   28,   28,   87,
       60,  151,   27,  135,   27,   27,   28,   60,   28,   28,
      135,   87,   49,   49,   49,   49,   27,   49,  157,  157,

       28,   94,   49,   50,   50,   50,   50,   11,   50,   11,
       11, 1442,   12,   50,   12,   12,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,

       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
       17,   17,   17,   17,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,

       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
       19,   19,   19,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   23,   23,   23,   23,   23,   23,   23,   23,

       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   25,   25,   25,   25,   41,   25,   41,   41,  159,
      159,   25,   25,  102,  195,  195,   25,   35,   35,   35,
       35,   35,  187, 1443,   35,   36,   36,   36,   36,   36,
       35,   41,   36,  102,   42,  194,   42,   42,   36,  194,

       53,   53,   53,   53,   25,   65,   65,   65,   65,   25,
       95,   53,  187,   25,   86,   25,   26,   26,   26,   26,
       42,   26,   66,   66,   66,   66,   26,   26,   81,  101,
       81,   26,   89,   41,   67,   67,   67,   67,  382,   86,
      177,  395,   81,   95,   86,   35,   86,  119,  119,  119,
      119,   86,   86,   36,   53,   81,   89,   53,  382,   26,
       89,  101,   42,  101,   26,   89,  101,  177,   26,  395,
       26,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,

       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
       31,   31,   31,   31,   31,   31,   31,   31,   31,   31,

       31,   31,   31,   31,   31,   31,   31,   31,   31,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
       33,   33,   33,   33,   33,   33,   33,   33,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,

       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37,   37,   37,   37,   37,   37,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
       39,   39,   39,   39,   39,   39,   39,   39,  172,   39,
       39,   39,   39,   39,   39,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
       40,   40,   40,   40,   40,   40, 1446,   40,   40,   40,

       40,   40,   40,   43,  172,   43,   43, 1040,   44,   43,
       44,   44,  221,   43,   44, 1040,   90,   88,   44,   57,
       57,   57,   57,   96,   57,  221,   43,   93,   91,   57,
       57,   44,   83,   83,   83,   83,   83,   88,  203,  164,
       57,  169,  203,   83,   88,   96,   90,   93,   90,  257,
       88,   93,  120,  120,  120,  120,   90,   83,   90,   96,
       93,   91,  257,   57,   91,  204,  204,  164,   43, 1447,
       43,   43,  164,   44,  169,   44,   44,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,

       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
       45,   45,   45,   45,   45,   45,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,

       47,   47,   47,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   47,   47,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   54,   54,   54,   54,   55,   55,
       55,   55,   55,   92,   97,   54,   56,   56,   56,   56,

       56,   58,   58,   58,   58,   55,   58,   99,  100,  168,
      416,   58,   58,   56,   97,  103,  215,  163,   92,  236,
      215,   97,   58,  236,   92,   92,  601,   99,  601,   99,
       97,   99,  100,  168,  216,  216,  100,  163,   54,  103,
       99,   54,  103,  103,  100,   58,  416,  168,  103,  240,
      163,  100,  121,  121,  121,  121,   55,  146,  146,  146,
      146,  239,  239,  240,   56,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,

       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,   61,   61,   61,   61,   61,   61,
       61,   61,   61,   61,  111,  134,  140,  140,  140,  140,
      147,  147,  147,  147,  148,  148,  148,  148,  288,  188,
      162,  392,  246,  166,  288,  165,  140,  180,  180,  180,
      180, 1448,  176,  181,  181,  181,  181,  246,  111,  134,
      167,  188,  170,  486,  111,  134,  392,  166,  111,  134,
      111,  134,  162,  111,  134,  165,  165,  162,  162,  166,
      165,  166,  174,  167,  176,  165,  170,  165,  175,  249,

      249,  412,  167,  251,  251,  170,  258,  167,  167,  261,
      258,  265,  174,  486,  174,  182,  182,  182,  182,  266,
      265,  261,  175,  261,  412,  175,  191,  191,  191,  191,
      174,  175, 1449,  266,  175,  192,  192,  192,  192,  193,
      193,  193,  193,  200,  200,  200,  200,  201,  201,  201,
      201,  202,  202,  202,  202,  212,  212,  212,  212,  213,
      213,  213,  213,  214,  214,  214,  214,  224,  224,  224,
      224,  225,  225,  225,  225,  226,  226,  226,  226,  232,
      232,  232,  232,  233,  233,  233,  233,  234,  234,  234,
      234,  255,  260,  303,  303,  260,  255,  260,  255,  262,

      259,  259,  259,  255,  255,  259,  430,  263,  262,  356,
      259,  263,  259,  262,  267,  269, 1450,  269,  356,  269,
      263,  267,  270,  270,  271,  263,  271, 1451,  270,  271,
      267,  270,  272,  269,  430,  272,  272,  277,  277,  277,
      277,  272,  278,  278,  278,  278,  279,  279,  279,  279,
      282,  282,  282,  282,  283,  283,  283,  283,  284,  284,
      284,  284,  285,  285,  285,  285,  289,  290,  285,  291,
      307,  387,  289,  290,  411,  291,  292,  292,  292,  292,
      329,  329,  285,  293,  293,  293,  293,  296,  296,  296,
      296,  297,  297,  297,  297,  328,  350,  363,  296,  328,

      350,  363,  297, 1452,  307,  311,  311,  311,  311,  387,
      307,  351,  351,  420,  307,  411,  307,  367,  367,  307,
      312,  312,  312,  312,  313,  313,  313,  313,  317,  317,
      317,  317,  318,  318,  318,  318,  319,  319,  319,  319,
      326,  326,  326,  326,  420,  326,  327,  327,  327,  327,
      326,  327,  331,  331,  331,  331,  327,  332,  332,  332,
      332,  333,  333,  333,  333,  337,  337,  337,  337,  338,
      338,  338,  338,  339,  339,  339,  339,  348,  348,  348,
      348,  349,  349,  349,  349,  365,  368,  388,  348,  778,
      393,  778,  349,  357,  357,  357,  357,  358,  358,  358,

      358,  362,  362,  362,  362,  357,  357,  409, 1455,  358,
      358,  374,  377,  378,  393,  378,  380,  388,  380,  365,
      368,  380,  394,  374,  377,  365,  368,  378,  389,  365,
      368,  365,  368,  399,  365,  368,  374,  377,  400,  409,
      378,  381,  381,  381,  381,  391,  391,  391,  391,  524,
      389,  401,  381,  524,  440,  399,  391,  440,  455,  394,
     1458,  455,  400,  527,  527,  391,  449,  449,  449,  449,
      396,  389,  390,  390,  390,  390,  390,  390,  390,  390,
      390,  390,  390,  390,  390,  390,  390,  390,  390,  401,
      390,  390,  397,  390,  390,  390,  390,  390,  390,  390,

      402,  396,  396,  391,  396,  398,  403,  408,  405,  390,
      390,  390,  407,  404,  397,  410,  406,  406,  406,  406,
      402,  417,  397, 1459,  402,  398,  403,  406,  413,  397,
      398,  419,  414,  415,  403,  418,  406,  390,  390,  390,
      390,  405,  398,  404,  408,  408,  407,  421,  423,  404,
      424,  413,  422,  410,  414,  410,  415,  417,  425,  418,
      426,  419,  427,  419,  428,  419,  413,  429,  418,  431,
      432,  435,  433,  434,  421,  436,  439,  454,  485,  423,
      421,  481,  422,  533,  422,  496,  460,  533,  487,  425,
      543,  511,  424,  484,  543,  489,  427,  428,  432,  431,

      433,  429,  800,  426,  481,  434,  460,  435,  502,  485,
      487,  434,  491,  496,  436,  465,  465,  465,  465,  439,
      454,  466,  466,  466,  466,  470,  470,  470,  470,  489,
      484,  502,  491,  511,  800,  488,  507,  494,  508, 1460,
      492,  466,  482,  482,  482,  482,  482,  482,  482,  482,
      482,  482,  482,  482,  482,  482,  482,  482,  482,  488,
      482,  482,  492,  482,  482,  482,  482,  482,  482,  482,
      494,  499,  488,  504,  507,  509,  508,  510,  492,  482,
      482,  482,  512,  517,  517,  517,  517,  523,  523,  523,
      523,  532,  532,  532,  532,  499,  504,  510,  506,  536,

      536,  559,  509, 1461,  514,  559,  512,  482,  482,  482,
      482,  483,  483,  483,  483,  483,  483,  483,  483,  483,
      483,  483,  483,  483,  483,  483,  483,  483,  514,  483,
      483,  506,  483,  483,  483,  483,  483,  483,  483,  515,
      516,  521,  522,  542,  542,  542,  542,  616,  483,  483,
      483,  546,  546,  555,  555,  555,  555,  557,  557,  557,
      557,  563,  563,  616,  516,  521,  748,  515,  613,  522,
      483,  581,  581,  598,  598,  613,  483,  483,  483,  483,
      490,  490,  490,  490,  490,  490,  490,  490,  490,  490,
      490,  490,  490,  490,  490,  490,  490,  748,  490,  490,

      577,  490,  490,  490,  490,  490,  490,  490,  626,  637,
      579,  579,  579,  579,  626,  637,  638,  490,  490,  490,
      577,  579,  638, 1462,  578,  578,  578,  578,  582,  612,
      639,  612,  582,  612, 1463,  578,  639,  612,  629,  629,
      629,  629,  650,  650,  749,  490,  490,  490,  490,  493,
      493,  493,  493,  493,  493,  493,  493,  493,  493,  493,
      493,  493,  493,  493,  493,  493,  578,  493,  493,  654,
      493,  493,  493,  493,  493,  493,  493,  583,  584,  590,
      583,  590,  749,  584,  640,  583,  493,  493,  493,  671,
      640,  655,  583,  671,  655,  584, 1464,  590,  584,  632,

      632,  632,  632,  633,  633,  633,  633,  642,  642,  642,
      642,  808,  654,  808,  493,  493,  493,  493,  495,  495,
      495,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  495,  712,  495,  495,  712,  495,
      495,  495,  495,  495,  495,  495,  635,  635,  635,  635,
      672,  672,  635,  676,  676,  495,  495,  495,  644,  644,
      644,  644,  662,  662,  662,  662,  635,  696,  696,  644,
      666,  666,  666,  666,  673,  818, 1465,  818,  673,  679,
      679,  679,  679,  495,  495,  495,  495,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  497,  497,  497,  497,

      497,  497,  497,  497,  497,  497,  497,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  497,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  497,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  497,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  497,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  498,  498,  498,  498,
      498,  498,  498,  498,  498,  498,  498,  498,  498,  498,
      498,  498,  498,  711,  498,  498,  717,  498,  498,  498,
      498,  498,  498,  498,  743,  747,  670,  670,  670,  670,
      734,  670,  888,  498,  498,  498,  670,  683,  683,  683,

      683,  691,  691,  691,  691,  693,  725,  718,  725,  693,
      718,  725,  691,  888,  734,  747,  711,  750,  736,  717,
      743,  498,  498,  498,  498,  500,  500,  500,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  500,  500,  500,
      500,  500,  736,  500,  500,  726,  500,  500,  500,  500,
      500,  500,  500,  704,  704,  704,  704,  726,  746,  745,
      750,  752,  500,  500,  500,  704,  704,  753,  782, 1041,
      726, 1041,  767,  767,  767,  767, 1466,  901,  744,  745,
      901, 1467,  746,  767,  751,  752,  756,  757,  782,  753,
      500,  500,  500,  500,  501,  501,  501,  501,  501,  501,

      501,  501,  501,  501,  501,  501,  501,  501,  501,  501,
      501,  744,  501,  501,  751,  501,  501,  501,  501,  501,
      501,  501,  754,  755,  756,  758,  757,  759,  760,  762,
      783,  501,  501,  501,  765,  765,  765,  765,  827,  827,
      827,  827,  763,  907,  754,  765,  907,  761,  755, 1080,
      913,  762,  783,  913,  765,  759,  758, 1080,  760,  501,
      501,  501,  501,  503,  503,  503,  503,  503,  503,  503,
      503,  503,  503,  503,  503,  503,  503,  503,  503,  503,
      763,  503,  503,  761,  503,  503,  503,  503,  503,  503,
      503,  764,  766,  769,  770,  774,  772,  785,  784, 1470,

      503,  503,  503,  775,  773,  773,  773,  773,  919,  927,
      933,  919,  927,  933, 1471,  773,  771,  785,  770,  774,
      784,  764,  772,  766,  773,  779,  769,  775,  503,  503,
      503,  503,  505,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  505,  505,  505,  505,  505,  771,
      505,  505,  776,  505,  505,  505,  505,  505,  505,  505,
      777,  780,  781,  786,  779,  787,  788,  884,  789,  505,
      505,  505,  941,  967,  944, 1038,  505,  944,  941,  996,
      776, 1038,  781,  786,  777,  780,  781,  967,  996,  884,
      788,  776,  789,  790,  792,  787,  791,  505,  505,  505,

      505,  513,  513,  513,  513,  513,  513,  513,  513,  513,
      513,  513,  513,  513,  513,  513,  513,  513,  793,  513,
      513,  791,  513,  513,  513,  513,  513,  513,  513,  790,
      526,  528,  792,  795,  794,  797,  799,  798,  513,  513,
      513, 1121,  793,  950,  535, 1121,  950,  838,  842, 1051,
     1220,  537, 1051,  801, 1220,  900,  802,  795,  840,  797,
      799,  845,  803,  804,  526,  528,  513,  513,  513,  513,
      526,  528,  794,  798,  526,  528,  526,  528,  535,  526,
      528,  801,  802,  838,  535,  537,  804,  842,  535,  840,
      535,  537,  803,  535,  805,  537, 1472,  537,  900,  845,

      537,  541,  541,  541,  541,  541,  541,  541,  541,  541,
      541,  541,  541,  541,  541,  541,  541,  541,  806,  541,
      541,  805,  541,  541,  541,  541,  541,  541,  541,  807,
      545,  547,  834,  834,  834,  834,  844,  834,  541,  541,
      541,  806,  834,  834,  561,  956,  956,  956,  956, 1475,
      843,  564,  675,  807, 1057, 1476,  956, 1057,  850,  851,
      844,  863,  906,  855,  545,  547,  541,  541,  541,  541,
      545,  547,  677,  695,  545,  547,  545,  547,  561,  545,
      547,  843,  850,  851,  561,  564,  675,  839,  561,  697,
      561,  564,  675,  561,  849,  564,  675,  564,  675,  863,

      564,  675,  855,  868,  864,  906,  677,  695,  879,  886,
      894,  839,  677,  695, 1122, 1122,  677,  695,  677,  695,
      885,  677,  695,  697,  849,  839, 1477,  859,  864,  697,
      894,  889,  879,  697,  868,  697,  896,  886,  697,  735,
      735,  735,  735,  735,  735,  735,  735,  735,  735,  735,
      735,  735,  735,  735,  735,  735,  883,  735,  735,  885,
      735,  735,  735,  735,  735,  735,  735,  859,  887,  889,
      890,  995,  896,  899, 1221, 1221,  735,  735,  735, 1479,
      883, 1037, 1037, 1037, 1037,  995, 1068, 1037, 1074, 1068,
     1483, 1074,  887,  912,  898,  895,  918,  899,  926,  932,

      943,  949,  890, 1115,  735,  735,  735,  735,  737,  737,
      737,  737,  737,  737,  737,  737,  737,  737,  737,  737,
      737,  737,  737,  737,  737,  898,  737,  737,  895,  737,
      737,  737,  737,  737,  737,  737,  912, 1130, 1050,  918,
     1115,  926,  932,  943,  949,  737,  737,  737,  958,  958,
      958,  958,  960,  960,  960,  960, 1056, 1109, 1067,  958,
     1073, 1107, 1088,  960, 1088, 1095, 1130, 1095, 1128, 1107,
     1261, 1146, 1261,  737,  737,  737,  737,  741,  741,  741,
      741, 1050,  741,  987,  987,  987,  987,  741,  741, 1000,
     1000, 1000, 1000, 1109,  987, 1129, 1128,  960, 1133, 1056,

     1000, 1067,  960, 1073, 1111, 1111, 1111, 1111, 1117, 1117,
     1117, 1117, 1136, 1141, 1146, 1111, 1268, 1484, 1268, 1117,
     1485,  741, 1133, 1486, 1275, 1137, 1275,  741,  741, 1132,
     1139, 1129, 1136, 1141,  741,  796,  796,  796,  796,  796,
      796,  796,  796,  796,  796,  796,  796,  796,  796,  796,
      796,  796, 1132,  796,  796, 1134,  796,  796,  796,  796,
      796,  796,  796, 1137, 1138, 1111, 1139, 1140, 1143, 1117,
     1171, 1162,  796,  796,  796, 1131, 1131, 1131, 1131, 1135,
     1135, 1135, 1135, 1134, 1487, 1282, 1131, 1282, 1138, 1478,
     1135, 1140, 1143, 1478, 1171, 1131, 1162, 1481, 1481, 1135,

      796,  796,  796,  796,  829,  829,  829,  829,  829,  829,
      829,  829,  829,  829,  829,  829,  829,  829,  829,  829,
      829,  829,  829,  829,  829,  829,  829,  829,  829,  829,
      829,  829,  829,  829,  829,  829,  829,  829,  829,  829,
      829,  829,  829,  829,  829,  829,  829,  829,  829,  829,
      829,  829,  829,  829,  829,  829,  829,  829,  829,  829,
      829,  829,  829,  829,  829,  829,  829,  829,  829,  829,
      829,  829,  829,  841,  841,  841,  841,  841,  841,  841,
      841,  841,  841,  841,  841,  841,  841,  841,  841,  841,
     1142,  841,  841, 1147,  841,  841,  841,  841,  841,  841,

      841, 1169, 1148, 1148, 1148, 1148, 1168, 1188, 1488, 1494,
      841,  841,  841, 1148, 1145, 1145, 1145, 1145, 1289, 1495,
     1289, 1142, 1148, 1144, 1499, 1514,  964,  964,  964,  964,
     1188, 1147, 1168, 1169, 1145, 1154, 1155,  964,  841,  841,
      841,  841,  875,  875,  875,  875,  875,  875,  875,  875,
      875,  875,  875,  875,  875,  875,  875,  875,  875, 1144,
      875,  875, 1149,  875,  875,  875,  875,  875,  875,  875,
      964, 1154, 1155, 1160, 1163, 1172,  964,  964, 1145,  875,
      875,  875, 1175,  964, 1517, 1150, 1150, 1150, 1150, 1157,
     1519, 1296, 1150, 1296, 1520, 1149, 1150, 1489, 1309, 1172,

     1309, 1521, 1175, 1160, 1163, 1489, 1173,  875,  875,  875,
      875, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
     1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1157, 1152,
     1152, 1161, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1166,
     1158, 1158, 1158, 1158, 1173, 1191, 1178, 1158, 1152, 1152,
     1152, 1158, 1164, 1164, 1164, 1164, 1214, 1214, 1214, 1214,
     1316, 1167, 1316, 1164, 1420, 1522, 1420, 1161, 1191, 1174,
     1178, 1170, 1164, 1522, 1526, 1166, 1152, 1152, 1152, 1152,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1156, 1156, 1156, 1156, 1167, 1156, 1156,

     1174, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1170, 1177,
     1180, 1181, 1181, 1181, 1181, 1193, 1190, 1156, 1156, 1156,
     1227, 1527, 1181, 1240, 1530, 1219, 1219, 1219, 1219, 1183,
     1219, 1181, 1187, 1537, 1180, 1219, 1219, 1549, 1550, 1193,
     1177, 1189, 1190, 1240, 1227, 1156, 1156, 1156, 1156, 1176,
     1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176,
     1176, 1176, 1176, 1176, 1176, 1176, 1183, 1176, 1176, 1187,
     1176, 1176, 1176, 1176, 1176, 1176, 1176, 1189, 1182, 1182,
     1182, 1182, 1192, 1196, 1224, 1194, 1176, 1176, 1176, 1182,
     1197, 1226, 1226, 1226, 1226, 1232, 1231, 1234, 1182, 1236,

     1237, 1238, 1226, 1241, 1248, 1257, 1251, 1556, 1252, 1192,
     1259, 1226, 1224, 1571, 1176, 1176, 1176, 1176, 1194, 1232,
     1196, 1235, 1235, 1235, 1235, 1572, 1197, 1231, 1248, 1257,
     1427, 1226, 1427, 1236, 1259, 1238, 1237, 1251, 1252, 1241,
     1234, 1235, 1182, 1195, 1195, 1195, 1195, 1195, 1195, 1195,
     1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195,
     1255, 1195, 1195, 1247, 1195, 1195, 1195, 1195, 1195, 1195,
     1195, 1249, 1242, 1242, 1242, 1242, 1246, 1246, 1246, 1246,
     1195, 1195, 1195, 1242, 1437, 1235, 1437, 1246, 1410, 1410,
     1410, 1410, 1242, 1573, 1410, 1250, 1246, 1195, 1255, 1247,

     1444, 1577, 1444, 1578, 1579, 1580, 1581, 1249, 1195, 1195,
     1195, 1195, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
     1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1260,
     1225, 1225, 1250, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
     1256, 1253, 1253, 1253, 1253, 1361, 1361, 1361, 1361, 1225,
     1225, 1225, 1253, 1325, 1325, 1325, 1325, 1583, 1585, 1585,
     1260, 1253, 1553, 1473, 1325, 1329, 1329, 1329, 1329, 1553,
     1587, 1582, 1256, 1588, 1491, 1582, 1329, 1225, 1225, 1225,
     1225, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233,
     1233, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1491, 1233,

     1233, 1473, 1233, 1233, 1233, 1233, 1233, 1233, 1233, 1361,
     1345, 1345, 1345, 1345, 1325, 1501, 1490, 1503, 1233, 1233,
     1233, 1345, 1509, 1509, 1509, 1509, 1329, 1346, 1346, 1346,
     1346, 1592, 1595, 1331, 1331, 1331, 1331, 1490, 1346, 1501,
     1512, 1601, 1610, 1627, 1331, 1503, 1233, 1233, 1233, 1233,
     1239, 1239, 1239, 1239, 1239, 1239, 1239, 1239, 1239, 1239,
     1239, 1239, 1239, 1239, 1239, 1239, 1239, 1346, 1239, 1239,
     1512, 1239, 1239, 1239, 1239, 1239, 1239, 1239, 1331, 1349,
     1349, 1349, 1349, 1331, 1506, 1508, 1509, 1239, 1239, 1239,
     1349, 1365, 1365, 1365, 1365, 1603, 1634, 1635, 1365, 1603,

     1500, 1636, 1365, 1337, 1337, 1337, 1337, 1496, 1506, 1508,
     1637, 1515, 1638, 1639, 1337, 1239, 1239, 1239, 1239, 1254,
     1254, 1254, 1254, 1254, 1254, 1254, 1254, 1254, 1254, 1254,
     1254, 1254, 1254, 1254, 1254, 1254, 1500, 1254, 1254, 1496,
     1254, 1254, 1254, 1254, 1254, 1254, 1254, 1337, 1376, 1376,
     1376, 1376, 1515, 1337, 1337, 1376, 1254, 1254, 1254, 1376,
     1337, 1407, 1407, 1407, 1407, 1497, 1502, 1504, 1492, 1492,
     1492, 1492, 1407, 1523, 1505, 1507, 1531, 1532, 1534, 1492,
     1539, 1528, 1545, 1621, 1254, 1254, 1254, 1254, 1492, 1498,
     1498, 1498, 1498, 1640, 1641, 1642, 1498, 1497, 1502, 1532,

     1498, 1528, 1534, 1504, 1539, 1376, 1505, 1507, 1621, 1643,
     1545, 1523, 1644, 1531, 1407, 1468, 1468, 1468, 1468, 1468,
     1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468,
     1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468,
     1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468,
     1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468,
     1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468,
     1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468, 1468,
     1468, 1468, 1468, 1468, 1469, 1469, 1469, 1469, 1474, 1474,
     1474, 1474, 1480, 1482, 1538, 1469, 1524, 1533, 1542, 1474,

     1493, 1493, 1493, 1493, 1511, 1511, 1511, 1511, 1540, 1541,
     1645, 1493, 1543, 1646, 1647, 1511, 1576, 1513, 1513, 1513,
     1513, 1544, 1542, 1554, 1511, 1566, 1480, 1482, 1513, 1561,
     1546, 1538, 1480, 1482, 1524, 1543, 1480, 1482, 1480, 1482,
     1533, 1480, 1482, 1547, 1540, 1469, 1551, 1541, 1493, 1474,
     1535, 1535, 1535, 1535, 1546, 1554, 1565, 1493, 1544, 1576,
     1648, 1535, 1649, 1566, 1650, 1547, 1551, 1589, 1574, 1651,
     1561, 1568, 1562, 1652, 1653, 1589, 1565, 1563, 1513, 1552,
     1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
     1552, 1552, 1552, 1552, 1552, 1552, 1562, 1552, 1552, 1563,

     1552, 1552, 1552, 1552, 1552, 1552, 1552, 1574, 1555, 1555,
     1555, 1555, 1568, 1654, 1655, 1555, 1552, 1552, 1552, 1555,
     1557, 1557, 1557, 1557, 1597, 1656, 1598, 1613, 1590, 1584,
     1596, 1557, 1564, 1564, 1564, 1564, 1657, 1567, 1567, 1567,
     1567, 1606, 1599, 1564, 1552, 1552, 1552, 1552, 1567, 1590,
     1598, 1596, 1564, 1623, 1658, 1659, 1597, 1567, 1660, 1570,
     1570, 1570, 1570, 1584, 1613, 1594, 1594, 1594, 1594, 1584,
     1570, 1661, 1662, 1584, 1599, 1584, 1594, 1623, 1584, 1606,
     1663, 1586, 1607, 1664, 1557, 1560, 1560, 1560, 1560, 1560,
     1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560, 1560,

     1560, 1560, 1570, 1560, 1560, 1594, 1560, 1560, 1560, 1560,
     1560, 1560, 1560, 1612, 1607, 1586, 1570, 1570, 1665, 1622,
     1570, 1586, 1560, 1560, 1560, 1586, 1666, 1586, 1633, 1667,
     1586, 1604, 1604, 1604, 1604, 1614, 1614, 1614, 1614, 1622,
     1668, 1669, 1620, 1670, 1671, 1612, 1614, 1674, 1633, 1675,
     1560, 1560, 1560, 1560, 1575, 1575, 1575, 1575, 1575, 1575,
     1575, 1575, 1575, 1575, 1575, 1575, 1575, 1575, 1575, 1575,
     1575, 1619, 1575, 1575, 1620, 1575, 1575, 1575, 1575, 1575,
     1575, 1575, 1632, 1608, 1608, 1608, 1608, 1615, 1615, 1615,
     1615, 1575, 1575, 1575, 1608, 1604, 1676, 1678, 1615, 1615,

     1679, 1680, 1681, 1608, 1616, 1616, 1616, 1616, 1619, 1682,
     1683, 1685, 1686, 1687, 1632, 1616, 1688, 1689, 1690, 1575,
     1575, 1575, 1575, 1618, 1618, 1618, 1618, 1624, 1624, 1624,
     1624, 1692, 1695, 1697, 1618, 1698, 1700, 1701, 1624, 1629,
     1629, 1629, 1629, 1618, 1673, 1673, 1673, 1673, 1684, 1691,
     1629, 1702, 1703, 1704, 1705, 1673, 1684, 1691, 1706, 1629,
     1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
     1630, 1630, 1630, 1630, 1630, 1630, 1630, 1707, 1630, 1630,
     1710, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1713, 1714,
     1715, 1717, 1719, 1699, 1699, 1699, 1699, 1630, 1630, 1630,

     1677, 1677, 1677, 1677, 1699, 1673, 1696, 1696, 1696, 1696,
     1722, 1677, 1694, 1694, 1694, 1694, 1723, 1696, 1711, 1711,
     1711, 1711, 1724, 1694, 1725, 1630, 1630, 1630, 1630, 1631,
     1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631,
     1631, 1631, 1631, 1631, 1631, 1631, 1696, 1631, 1631, 1727,
     1631, 1631, 1631, 1631, 1631, 1631, 1631, 1728, 1729, 1730,
     1694, 1677, 1709, 1709, 1709, 1709, 1631, 1631, 1631, 1694,
     1731, 1732, 1733, 1709, 1720, 1720, 1720, 1720, 1734, 1734,
     1734, 1734, 1711, 1735, 1736, 1720, 1737, 1738, 1739, 1734,
     1740, 1741, 1743, 1745, 1631, 1631, 1631, 1631, 1746, 1750,

     1750, 1750, 1750, 1752, 1753, 1753, 1753, 1753, 1754, 1756,
     1750, 1757, 1757, 1757, 1757, 1753, 1758, 1759, 1761, 1762,
     1763, 1764, 1757, 1765, 1766, 1767, 1768, 1769, 1770, 1772,
     1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783,
     1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
     1795, 1796, 1789, 1795, 1757, 1797, 1793, 1798, 1799, 1800,
     1801, 1802, 1803, 1801, 1804, 1805, 1807, 1808, 1757, 1757,
     1809, 1810, 1757, 1811, 1814, 1815, 1816, 1817, 1790, 1818,
     1813, 1813, 1813, 1813, 1822, 1823, 1818, 1824, 1824, 1824,
     1824, 1813, 1794, 1833, 1835, 1819, 1836, 1838, 1824, 1840,

     1844, 1850, 1800, 1820, 1834, 1826, 1854, 1824, 1830, 1823,
     1863, 1864, 1811, 1812, 1812, 1812, 1812, 1812, 1812, 1812,
     1812, 1812, 1812, 1812, 1812, 1812, 1812, 1812, 1812, 1812,
     1813, 1812, 1812, 1819, 1812, 1812, 1812, 1812, 1812, 1812,
     1812, 1825, 1820, 1826, 1827, 1828, 1830, 1834, 1837, 1843,
     1812, 1812, 1812, 1829, 1831, 1831, 1831, 1831, 1868, 1832,
     1832, 1832, 1832, 1839, 1825, 1831, 1832, 1828, 1827, 1845,
     1832, 1839, 1852, 1870, 1831, 1843, 1837, 1845, 1812, 1812,
     1812, 1812, 1847, 1853, 1860, 1829, 1841, 1841, 1841, 1841,
     1842, 1842, 1842, 1842, 1857, 1852, 1871, 1841, 1876, 1880,

     1856, 1842, 1847, 1853, 1883, 1861, 1841, 1885, 1860, 1861,
     1842, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846,
     1846, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1856, 1846,
     1846, 1857, 1846, 1846, 1846, 1846, 1846, 1846, 1846, 1858,
     1849, 1849, 1849, 1849, 1859, 1859, 1859, 1859, 1846, 1846,
     1846, 1849, 1866, 1886, 1887, 1859, 1875, 1875, 1875, 1875,
     1849, 1884, 1888, 1875, 1859, 1884, 1891, 1875, 1892, 1872,
     1877, 1894, 1858, 1873, 1866, 1895, 1846, 1846, 1846, 1846,
     1848, 1848, 1848, 1848, 1848, 1848, 1848, 1848, 1848, 1848,
     1848, 1848, 1848, 1848, 1848, 1848, 1848, 1872, 1848, 1848,

     1874, 1848, 1848, 1848, 1848, 1848, 1848, 1848, 1877, 1873,
     1879, 1879, 1879, 1879, 1896, 1899, 1900, 1848, 1848, 1848,
     1874, 1879, 1901, 1882, 1882, 1882, 1882, 1898, 1902, 1904,
     1898, 1889, 1904, 1905, 1882, 1897, 1903, 1906, 1907, 1908,
     1909, 1911, 1912, 1910, 1921, 1848, 1848, 1848, 1848, 1851,
     1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851,
     1851, 1851, 1851, 1851, 1851, 1851, 1882, 1851, 1851, 1889,
     1851, 1851, 1851, 1851, 1851, 1851, 1851, 1913, 1897, 1903,
     1882, 1882, 1910, 1919, 1882, 1925, 1851, 1851, 1851, 1893,
     1893, 1893, 1893, 1924, 1924, 1924, 1924, 1914, 1928, 1935,

     1893, 1937, 1940, 1919, 1924, 1924, 1915, 1913, 1916, 1893,
     1917, 1944, 1945, 1929, 1851, 1851, 1851, 1851, 1855, 1855,
     1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855, 1855,
     1855, 1855, 1855, 1855, 1855, 1914, 1855, 1855, 1915, 1855,
     1855, 1855, 1855, 1855, 1855, 1855, 1916, 1917, 1922, 1923,
     1929, 1931, 1946, 1947, 1932, 1855, 1855, 1855, 1932, 1948,
     1949, 1950, 1951, 1920, 1920, 1920, 1920, 1943, 1952, 1942,
     1922, 1943, 1953, 1923, 1920, 1954, 1952, 1956, 1957, 1931,
     1958, 1959, 1961, 1855, 1855, 1855, 1855, 1878, 1878, 1878,
     1878, 1878, 1878, 1878, 1878, 1878, 1878, 1878, 1878, 1878,

     1878, 1878, 1878, 1878, 1920, 1878, 1878, 1942, 1878, 1878,
     1878, 1878, 1878, 1878, 1878, 1955, 1933, 1933, 1933, 1933,
     1962, 1963, 1964, 1955, 1878, 1878, 1878, 1933, 1966, 1966,
     1966, 1966, 1927, 1927, 1927, 1927, 1933, 1967, 1968, 1966,
     1969, 1970, 1971, 1927, 1972, 1973, 1976, 1977, 1978, 1980,
     1981, 1982, 1878, 1878, 1878, 1878, 1881, 1881, 1881, 1881,
     1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881, 1881,
     1881, 1881, 1881, 1927, 1881, 1881, 1966, 1881, 1881, 1881,
     1881, 1881, 1881, 1881, 1983, 1966, 1974, 1974, 1974, 1974,
     1985, 1987, 1989, 1881, 1881, 1881, 1990, 1974, 1979, 1979,

     1979, 1979, 1934, 1934, 1934, 1934, 1991, 1992, 1994, 1979,
     1996, 1997, 1998, 1934, 1991, 1999, 2000, 2003, 2005, 2008,
     2009, 1881, 1881, 1881, 1881, 1918, 1918, 1918, 1918, 1918,
     1918, 1918, 1918, 1918, 1918, 1918, 1918, 1918, 1918, 1918,
     1918, 1918, 1934, 1918, 1918, 2001, 1918, 1918, 1918, 1918,
     1918, 1918, 1918, 2001, 1986, 1986, 1986, 1986, 1995, 1995,
     1995, 1995, 1918, 1918, 1918, 1986, 2011, 2012, 2014, 1995,
     1993, 1993, 1993, 1993, 2016, 2018, 1984, 1984, 1984, 1984,
     2023, 1993, 2025, 2027, 2032, 2033, 2034, 1984, 2035, 2033,
     1918, 1918, 1918, 1918, 1930, 1930, 1930, 1930, 1930, 1930,

     1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930, 1930,
     1930, 1993, 1930, 1930, 2036, 1930, 1930, 1930, 1930, 1930,
     1930, 1930, 1984, 2037, 2038, 2040, 1984, 2007, 2007, 2007,
     2007, 1930, 1930, 1930, 2013, 2013, 2013, 2013, 2007, 2019,
     2019, 2019, 2019, 2042, 2044, 2013, 2022, 2022, 2022, 2022,
     2019, 2045, 2046, 2047, 2048, 2049, 2050, 2022, 2050, 1930,
     1930, 1930, 1930, 2026, 2026, 2026, 2026, 2052, 2007, 2053,
     2026, 2054, 2055, 2056, 2026, 2059, 2031, 2031, 2031, 2031,
     2057, 2060, 2057, 2061, 2062, 2063, 2022, 2031, 2065, 2047,
     2067, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,

     2079, 2079, 2079, 2079, 2080, 2081, 2082, 2077, 2085, 2088,
     2086, 2079, 2087, 2090, 2082, 2083, 2083, 2083, 2083, 2031,
     2079, 2084, 2084, 2084, 2084, 2089, 2083, 2093, 2080, 2068,
     2086, 2095, 2084, 2031, 2031, 2083, 2097, 2031, 2098, 2099,
     2087, 2088, 2091, 2091, 2091, 2091, 2100, 2099, 2101, 2089,
     2103, 2090, 2105, 2091, 2092, 2092, 2092, 2092, 2106, 2107,
     2109, 2110, 2091, 2111, 2079, 2092, 2113, 2114, 2116, 2117,
     2119, 2120, 2123, 2084, 2125, 2126, 2128, 2131, 2100, 2123,
     2135, 2133, 2106, 2141, 2102, 2102, 2102, 2102, 2104, 2104,
     2104, 2104, 2127, 2122, 2136, 2102, 2092, 2144, 2145, 2104,

     2111, 2133, 2136, 2146, 2128, 2133, 2091, 2096, 2096, 2096,
     2096, 2096, 2096, 2096, 2096, 2096, 2096, 2096, 2096, 2096,
     2096, 2096, 2096, 2096, 2127, 2096, 2096, 2122, 2096, 2096,
     2096, 2096, 2096, 2096, 2096, 2102, 2115, 2115, 2115, 2115,
     2104, 2102, 2134, 2137, 2096, 2096, 2096, 2115, 2121, 2121,
     2121, 2121, 2129, 2130, 2130, 2130, 2130, 2139, 2132, 2132,
     2132, 2132, 2138, 2142, 2130, 2147, 2134, 2149, 2121, 2132,
     2150, 2151, 2096, 2096, 2096, 2096, 2152, 2154, 2132, 2155,
     2153, 2137, 2156, 2157, 2129, 2160, 2138, 2142, 2115, 2153,
     2162, 2157, 2163, 2166, 2139, 2158, 2158, 2158, 2158, 2159,

     2159, 2159, 2159, 2167, 2168, 2130, 2158, 2164, 2169, 2164,
     2159, 2170, 2121, 2173, 2171, 2158, 2171, 2174, 2175, 2176,
     2177, 2180, 2178, 2181, 2182, 2183, 2183, 2183, 2183, 2184,
     2186, 2181, 2185, 2185, 2185, 2185, 2183, 2188, 2190, 2191,
     2192, 2193, 2194, 2185, 2195, 2183, 2196, 2197, 2182, 2198,
     2200, 2202, 2185, 2205, 2186, 2206, 2203, 2207, 2212, 2159,
     2178, 2213, 2214, 2215, 2194, 2193, 2216, 2184, 2190, 2217,
     2204, 2204, 2204, 2204, 2218, 2202, 2203, 2198, 2219, 2220,
     2203, 2204, 2208, 2208, 2208, 2208, 2209, 2209, 2209, 2209,
     2222, 2224, 2226, 2208, 2227, 2228, 2229, 2209, 2210, 2210,

     2210, 2210, 2208, 2232, 2234, 2235, 2209, 2230, 2233, 2210,
     2221, 2221, 2221, 2221, 2238, 2230, 2233, 2236, 2236, 2236,
     2236, 2221, 2239, 2204, 2240, 2241, 2242, 2243, 2236, 2244,
     2209, 2245, 2245, 2245, 2245, 2246, 2249, 2250, 2251, 2252,
     2253, 2254, 2245, 2255, 2256, 2257, 2258, 2260, 2261, 2263,
     2264, 2265, 2267, 2268, 2269, 2269, 2269, 2269, 2271, 2272,
     2273, 2273, 2273, 2273, 2274, 2269, 2275, 2276, 2277, 2279,
     2282, 2273, 2283, 2245, 2284, 2285, 2286, 2287, 2288, 2289,
     2289, 2289, 2289, 2284, 2290, 2291, 2288, 2293, 2294, 2295,
     2289, 2297, 2298, 2295, 2299, 2300, 2301, 2302, 2303, 2304,

     2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2315, 2315,
     2315, 2311, 2319, 2273, 2318, 2318, 2318, 2318, 2315, 2321,
     2322, 2323, 2324, 2325, 2308, 2318, 2326, 2328, 2328, 2328,
     2328, 2330, 2332, 2333, 2318, 2329, 2329, 2329, 2329, 2334,
     2335, 2337, 2338, 2328, 2339, 2325, 2329, 2328, 2335, 2340,
     2341, 2342, 2343, 2344, 2324, 2345, 2346, 2348, 2349, 2350,
     2351, 2354, 2357, 2356, 2326, 2358, 2352, 2352, 2352, 2352,
     2359, 2315, 2320, 2320, 2320, 2320, 2341, 2360, 2362, 2366,
     2363, 2348, 2367, 2320, 2368, 2370, 2364, 2373, 2354, 2356,
     2371, 2328, 2374, 2375, 2357, 2369, 2376, 2377, 2371, 2329,

     2374, 2378, 2358, 2379, 2367, 2380, 2381, 2368, 2383, 2361,
     2361, 2361, 2361, 2320, 2320, 2320, 2364, 2320, 2363, 2369,
     2361, 2384, 2385, 2387, 2320, 2320, 2388, 2389, 2320, 2320,
     2352, 2320, 2320, 2327, 2327, 2327, 2327, 2327, 2327, 2327,
     2327, 2327, 2327, 2327, 2327, 2327, 2327, 2327, 2327, 2327,
     2390, 2327, 2327, 2391, 2327, 2327, 2327, 2327, 2327, 2327,
     2327, 2361, 2392, 2393, 2394, 2395, 2396, 2397, 2399, 2361,
     2327, 2327, 2327, 2372, 2372, 2372, 2372, 2400, 2400, 2400,
     2400, 2403, 2409, 2413, 2372, 2403, 2410, 2406, 2400, 2416,
     2422, 2397, 2412, 2372, 2410, 2423, 2425, 2400, 2327, 2327,

     2327, 2327, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347,
     2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2418,
     2347, 2347, 2406, 2347, 2347, 2347, 2347, 2347, 2347, 2347,
     2412, 2401, 2401, 2401, 2401, 2421, 2429, 2372, 2431, 2347,
     2347, 2347, 2401, 2404, 2404, 2404, 2404, 2414, 2417, 2426,
     2420, 2418, 2433, 2434, 2404, 2414, 2417, 2426, 2435, 2437,
     2441, 2442, 2419, 2446, 2447, 2421, 2429, 2347, 2347, 2347,
     2347, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365,
     2365, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2420, 2365,
     2365, 2448, 2365, 2365, 2365, 2365, 2365, 2365, 2365, 2419,

     2382, 2382, 2382, 2382, 2411, 2411, 2411, 2411, 2365, 2365,
     2365, 2382, 2450, 2452, 2454, 2411, 2427, 2427, 2427, 2427,
     2439, 2439, 2439, 2439, 2411, 2456, 2457, 2427, 2458, 2365,
     2460, 2439, 2461, 2462, 2464, 2465, 2365, 2365, 2365, 2365,
     2468, 2470, 2382, 2382, 2451, 2451, 2451, 2451, 2430, 2430,
     2430, 2430, 2463, 2473, 2475, 2451, 2476, 2382, 2382, 2430,
     2463, 2382, 2407, 2407, 2407, 2407, 2407, 2407, 2407, 2407,
     2407, 2407, 2407, 2407, 2407, 2407, 2407, 2407, 2407, 2477,
     2407, 2407, 2471, 2407, 2407, 2407, 2407, 2407, 2407, 2407,
     2471, 2479, 2430, 2440, 2440, 2440, 2440, 2481, 2483, 2407,

     2407, 2407, 2484, 2485, 2440, 2453, 2453, 2453, 2453, 2472,
     2472, 2472, 2472, 2480, 2486, 2487, 2453, 2489, 2490, 2491,
     2472, 2480, 2492, 2493, 2494, 2495, 2490, 2407, 2407, 2407,
     2407, 2493, 2496, 2497, 2498, 2499, 2500, 2501, 2501, 2501,
     2501, 2440, 2502, 2507, 2508, 2513, 2514, 2515, 2501, 2516,
     2453, 2508, 2512, 2512, 2512, 2512, 2517, 2517, 2517, 2517,
     2518, 2519, 2520, 2512, 2521, 2522, 2522, 2517, 2523, 2524,
     2525, 2524, 2512, 2526, 2519, 2527, 2507, 2528, 2529, 2501,
     2501, 2530, 2531, 2532, 2533, 2534, 2534, 2534, 2534, 2537,
     2538, 2532, 2540, 2543, 2501, 2501, 2534, 2538, 2501, 2539,

     2539, 2539, 2539, 2544, 2545, 2534, 2517, 2542, 2542, 2542,
     2542, 2546, 2547, 2549, 2550, 2551, 2512, 2549, 2552, 2546,
     2553, 2554, 2533, 2555, 2540, 2556, 2558, 2542, 2553, 2559,
     2561, 2562, 2563, 2556, 2566, 2569, 2559, 2570, 2566, 2572,
     2563, 2573, 2534, 2535, 2535, 2535, 2535, 2535, 2535, 2535,
     2535, 2535, 2535, 2535, 2535, 2535, 2535, 2535, 2535, 2535,
     2567, 2535, 2535, 2539, 2535, 2535, 2535, 2535, 2535, 2535,
     2535, 2542, 2568, 2574, 2576, 2571, 2578, 2579, 2581, 2584,
     2535, 2535, 2535, 2571, 2579, 2586, 2567, 2588, 2589, 2590,
     2591, 2575, 2592, 2592, 2592, 2592, 2593, 2594, 2576, 2568,

     2595, 2596, 2597, 2592, 2598, 2581, 2599, 2600, 2535, 2535,
     2535, 2535, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560,
     2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2560, 2575,
     2560, 2560, 2601, 2560, 2560, 2560, 2560, 2560, 2560, 2560,
     2602, 2608, 2615, 2617, 2603, 2582, 2582, 2582, 2582, 2560,
     2560, 2560, 2603, 2606, 2606, 2606, 2606, 2619, 2621, 2626,
     2585, 2585, 2585, 2585, 2606, 2582, 2627, 2628, 2630, 2632,
     2633, 2585, 2635, 2606, 2631, 2628, 2636, 2560, 2560, 2560,
     2560, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565,
     2565, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2631, 2565,

     2565, 2641, 2565, 2565, 2565, 2565, 2565, 2565, 2565, 2582,
     2585, 2610, 2610, 2610, 2610, 2642, 2643, 2585, 2565, 2565,
     2565, 2647, 2610, 2648, 2585, 2650, 2652, 2607, 2607, 2607,
     2607, 2610, 2616, 2616, 2616, 2616, 2653, 2654, 2607, 2655,
     2658, 2659, 2660, 2616, 2661, 2662, 2565, 2565, 2565, 2565,
     2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2580,
     2580, 2580, 2580, 2580, 2580, 2580, 2580, 2607, 2580, 2580,
     2610, 2580, 2580, 2580, 2580, 2580, 2580, 2580, 2663, 2612,
     2612, 2612, 2612, 2665, 2667, 2616, 2663, 2580, 2580, 2580,
     2612, 2669, 2676, 2622, 2622, 2622, 2622, 2679, 2683, 2612,

     2668, 2668, 2668, 2668, 2622, 2684, 2685, 2687, 2689, 2690,
     2691, 2668, 2692, 2622, 2685, 2580, 2580, 2580, 2580, 2583,
     2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583, 2583,
     2583, 2583, 2583, 2583, 2583, 2583, 2694, 2583, 2583, 2622,
     2583, 2583, 2583, 2583, 2583, 2583, 2583, 2695, 2609, 2609,
     2609, 2609, 2696, 2668, 2697, 2698, 2583, 2583, 2583, 2609,
     2624, 2624, 2624, 2624, 2672, 2672, 2672, 2672, 2609, 2699,
     2700, 2624, 2701, 2708, 2709, 2672, 2712, 2713, 2714, 2715,
     2624, 2709, 2716, 2717, 2583, 2583, 2583, 2583, 2640, 2640,
     2640, 2640, 2718, 2705, 2718, 2719, 2720, 2721, 2722, 2640,

     2609, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618,
     2618, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2624, 2618,
     2618, 2723, 2618, 2618, 2618, 2618, 2618, 2618, 2618, 2705,
     2693, 2693, 2693, 2693, 2724, 2725, 2640, 2726, 2618, 2618,
     2618, 2693, 2727, 2625, 2625, 2625, 2625, 2728, 2729, 2730,
     2649, 2649, 2649, 2649, 2625, 2731, 2732, 2730, 2733, 2735,
     2738, 2649, 2733, 2625, 2745, 2740, 2618, 2618, 2618, 2618,
     2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     2623, 2623, 2623, 2623, 2623, 2623, 2623, 2625, 2623, 2623,
     2649, 2623, 2623, 2623, 2623, 2623, 2623, 2623, 2740, 2707,

     2707, 2707, 2707, 2734, 2734, 2734, 2734, 2623, 2623, 2623,
     2707, 2739, 2747, 2748, 2734, 2750, 2752, 2753, 2739, 2736,
     2736, 2736, 2736, 2741, 2741, 2741, 2741, 2754, 2755, 2756,
     2736, 2742, 2742, 2742, 2742, 2623, 2623, 2623, 2623, 2736,
     2746, 2758, 2751, 2759, 2760, 2761, 2764, 2765, 2746, 2751,
     2759, 2742, 2750, 2766, 2765, 2767, 2769, 2768, 2770, 2771,
     2734, 2768, 2767, 2707, 2772, 2773, 2774, 2775, 2776, 2777,
     2779, 2780, 2785, 2787, 2789, 2775, 2786, 2788, 2780, 2782,
     2782, 2782, 2782, 2786, 2769, 2790, 2788, 2741, 2791, 2792,
     2766, 2781, 2781, 2781, 2781, 2742, 2793, 2793, 2793, 2793,

     2777, 2794, 2781, 2795, 2776, 2796, 2797, 2793, 2798, 2799,
     2800, 2781, 2801, 2802, 2803, 2804, 2805, 2809, 2799, 2810,
     2811, 2812, 2803, 2807, 2807, 2807, 2807, 2813, 2814, 2816,
     2820, 2818, 2822, 2823, 2807, 2818, 2824, 2825, 2826, 2827,
     2828, 2829, 2832, 2782, 2834, 2812, 2835, 2836, 2837, 2829,
     2838, 2840, 2841, 2811, 2842, 2843, 2845, 2793, 2838, 2846,
     2851, 2852, 2847, 2853, 2823, 2854, 2856, 2857, 2822, 2826,
     2847, 2849, 2849, 2849, 2849, 2860, 2859, 2859, 2859, 2859,
     2864, 2867, 2849, 2859, 2868, 2870, 2871, 2859, 2872, 2873,
     2873, 2873, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880,

     2873, 2881, 2882, 2883, 2884, 2886, 2888, 2879, 2884, 2889,
     2890, 2883, 2885, 2885, 2885, 2885, 2891, 2892, 2893, 2894,
     2895, 2896, 2897, 2898, 2899, 2892, 2900, 2901, 2902, 2903,
     2904, 2905, 2885, 2906, 2907, 2908, 2909, 2910, 2911, 2912,
     2913, 2913, 2913, 2913, 2910, 2914, 2918, 2915, 2919, 2920,
     2873, 2913, 2916, 2916, 2916, 2916, 2917, 2917, 2917, 2917,
     2922, 2923, 2924, 2925, 2926, 2928, 2929, 2917, 2931, 2909,
     2915, 2932, 2933, 2934, 2935, 2938, 2885, 2920, 2936, 2936,
     2936, 2936, 2939, 2940, 2941, 2943, 2942, 2944, 2913, 2936,
     2945, 2946, 2926, 2928, 2942, 2947, 2948, 2949, 2935, 2950,

     2929, 2934, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2959,
     2960, 2961, 2962, 2964, 2965, 2966, 2916, 2967, 2960, 2969,
     2971, 2972, 2965, 2968, 2970, 2975, 2976, 2977, 2978, 2979,
     2980, 2981, 2983, 2984, 2961, 2977, 2985, 2986, 2989, 2990,
     2992, 2984, 2995, 2966, 2962, 2967, 2996, 2968, 2970, 2988,
     2988, 2988, 2988, 2998, 2996, 2999, 3000, 3001, 3002, 3003,
     2988, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012,
     3013, 3014, 3015, 3016, 3016, 3016, 3016, 3020, 3017, 3017,
     3017, 3017, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028,
     3021, 3029, 3030, 3031, 3032, 3033, 3034, 2988, 3017, 3035,

     3036, 3037, 3038, 3039, 3042, 3044, 2988, 3045, 3046, 3015,
     3047, 3048, 3049, 3051, 3052, 3054, 3046, 3050, 3050, 3050,
     3050, 3055, 3053, 3058, 3059, 3060, 3064, 3065, 3066, 3068,
     3069, 3071, 3073, 3074, 3075, 3076, 3049, 3016, 3077, 3078,
     3042, 3079, 3017, 3053, 3080, 3059, 3077, 3081, 3065, 3082,
     3084, 3085, 3086, 3088, 3089, 3090, 3092, 3060, 3094, 3098,
     3066, 3070, 3070, 3070, 3070, 3072, 3072, 3072, 3072, 3100,
     3093, 3101, 3070, 3103, 3104, 3107, 3072, 3090, 3089, 3094,
     3108, 3050, 3061, 3061, 3061, 3061, 3061, 3061, 3061, 3061,
     3061, 3061, 3061, 3061, 3061, 3061, 3061, 3061, 3061, 3095,

     3061, 3061, 3093, 3061, 3061, 3061, 3061, 3061, 3061, 3061,
     3097, 3070, 3083, 3083, 3083, 3083, 3109, 3110, 3070, 3061,
     3061, 3061, 3106, 3083, 3096, 3096, 3096, 3096, 3111, 3113,
     3106, 3095, 3115, 3116, 3121, 3096, 3117, 3122, 3123, 3124,
     3115, 3126, 3097, 3127, 3117, 3128, 3129, 3061, 3061, 3061,
     3061, 3119, 3119, 3119, 3119, 3120, 3120, 3120, 3120, 3125,
     3130, 3132, 3119, 3133, 3134, 3138, 3120, 3125, 3131, 3131,
     3131, 3131, 3135, 3135, 3135, 3135, 3137, 3139, 3141, 3131,
     3136, 3136, 3136, 3136, 3137, 3142, 3143, 3144, 3134, 3145,
     3146, 3136, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154,

     3156, 3157, 3158, 3159, 3156, 3160, 3161, 3163, 3164, 3168,
     3158, 3169, 3170, 3172, 3161, 3162, 3162, 3162, 3162, 3173,
     3175, 3175, 3175, 3175, 3176, 3178, 3162, 3177, 3180, 3181,
     3183, 3175, 3184, 3185, 3186, 3162, 3135, 3187, 3164, 3188,
     3184, 3169, 3179, 3179, 3179, 3179, 3189, 3191, 3192, 3170,
     3193, 3194, 3196, 3179, 3197, 3190, 3190, 3190, 3190, 3195,
     3195, 3195, 3195, 3176, 3198, 3177, 3190, 3199, 3201, 3202,
     3195, 3200, 3200, 3200, 3200, 3203, 3196, 3206, 3207, 3195,
     3208, 3209, 3200, 3210, 3211, 3212, 3213, 3214, 3215, 3218,
     3220, 3197, 3221, 3212, 3223, 3225, 3215, 3226, 3224, 3179,

     3227, 3228, 3229, 3198, 3231, 3199, 3224, 3202, 3217, 3217,
     3217, 3217, 3200, 3232, 3233, 3234, 3190, 3236, 3237, 3217,
     3219, 3219, 3219, 3219, 3230, 3230, 3230, 3230, 3239, 3240,
     3241, 3219, 3242, 3243, 3244, 3230, 3235, 3235, 3235, 3235,
     3245, 3246, 3248, 3249, 3250, 3234, 3251, 3252, 3254, 3217,
     3247, 3247, 3247, 3247, 3253, 3255, 3256, 3257, 3257, 3257,
     3257, 3247, 3260, 3263, 3256, 3264, 3265, 3267, 3257, 3266,
     3266, 3266, 3266, 3268, 3270, 3271, 3272, 3219, 3273, 3275,
     3266, 3269, 3269, 3269, 3269, 3230, 3278, 3279, 3280, 3281,
     3260, 3253, 3269, 3264, 3282, 3283, 3284, 3289, 3290, 3292,

     3235, 3269, 3293, 3295, 3265, 3286, 3286, 3286, 3286, 3297,
     3299, 3268, 3288, 3288, 3288, 3288, 3286, 3291, 3291, 3291,
     3291, 3300, 3266, 3288, 3301, 3302, 3305, 3306, 3291, 3307,
     3308, 3309, 3288, 3302, 3311, 3289, 3290, 3291, 3294, 3294,
     3294, 3294, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3294,
     3321, 3322, 3324, 3325, 3326, 3327, 3329, 3330, 3294, 3328,
     3328, 3328, 3328, 3331, 3333, 3332, 3332, 3332, 3332, 3334,
     3328, 3335, 3336, 3337, 3338, 3321, 3332, 3339, 3340, 3341,
     3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 3350, 3350,
     3350, 3352, 3353, 3360, 3354, 3361, 3362, 3363, 3350, 3364,

     3365, 3339, 3354, 3366, 3370, 3371, 3375, 3364, 3380, 3382,
     3349, 3383, 3343, 3384, 3345, 3368, 3368, 3368, 3368, 3346,
     3369, 3369, 3369, 3369, 3388, 3390, 3368, 3391, 3398, 3371,
     3376, 3369, 3369, 3372, 3372, 3372, 3372, 3399, 3376, 3400,
     3370, 3389, 3392, 3401, 3372, 3377, 3377, 3377, 3377, 3389,
     3392, 3402, 3403, 3404, 3405, 3408, 3377, 3409, 3410, 3402,
     3411, 3411, 3411, 3411, 3412, 3414, 3414, 3414, 3414, 3415,
     3416, 3411, 3417, 3417, 3417, 3417, 3414, 3418, 3419, 3420,
     3420, 3420, 3420, 3417, 3421, 3421, 3421, 3421, 3422, 3423,
     3420, 3424, 3428, 3425, 3427, 3421, 3429, 3429, 3429, 3429,

     3430, 3431, 3411, 3433, 3411, 3411, 3438, 3429, 3440, 3431,
     3442, 3443, 3445, 3411, 3432, 3432, 3432, 3432, 3422, 3425,
     3427, 3434, 3441, 3447, 3450, 3432, 3454, 3455, 3458, 3434,
     3441, 3428, 3450, 3463, 3432, 3444, 3444, 3444, 3444, 3448,
     3448, 3448, 3448, 3457, 3459, 3465, 3444, 3444, 3466, 3467,
     3448, 3457, 3459, 3468, 3469, 3472, 3466, 3473, 3474, 3448,
     3475, 3469, 3447, 3476, 3477, 3478, 3479, 3481, 3481, 3481,
     3481, 3482, 3483, 3483, 3483, 3483, 3484, 3485, 3481, 3486,
     3486, 3486, 3486, 3483, 3487, 3485, 3488, 3489, 3491, 3493,
     3486, 3490, 3490, 3490, 3490, 3494, 3492, 3492, 3492, 3492,

     3495, 3496, 3490, 3492, 3497, 3499, 3500, 3492, 3501, 3501,
     3501, 3501, 3502, 3503, 3504, 3504, 3504, 3504, 3507, 3501,
     3494, 3503, 3509, 3512, 3513, 3504, 3518, 3519, 3500, 3506,
     3506, 3506, 3506, 3521, 3523, 3527, 3490, 3528, 3529, 3530,
     3506, 3514, 3514, 3514, 3514, 3531, 3513, 3520, 3520, 3520,
     3520, 3532, 3514, 3533, 3534, 3535, 3536, 3538, 3520, 3540,
     3501, 3539, 3541, 3535, 3537, 3537, 3537, 3537, 3543, 3539,
     3542, 3542, 3542, 3542, 3544, 3537, 3546, 3547, 3548, 3549,
     3550, 3542, 3551, 3552, 3553, 3554, 3556, 3550, 3561, 3551,
     3555, 3555, 3555, 3555, 3562, 3563, 3564, 3565, 3567, 3572,

     3573, 3555, 3562, 3566, 3566, 3566, 3566, 3574, 3575, 3576,
     3577, 3578, 3579, 3580, 3566, 3581, 3582, 3583, 3584, 3585,
     3579, 3552, 3587, 3581, 3588, 3589, 3584, 3586, 3586, 3586,
     3586, 3590, 3591, 3563, 3592, 3595, 3593, 3598, 3586, 3590,
     3599, 3600, 3592, 3593, 3601, 3602, 3603, 3606, 3607, 3608,
     3609, 3555, 3601, 3610, 3611, 3606, 3614, 3615, 3615, 3615,
     3615, 3616, 3617, 3618, 3566, 3598, 3619, 3620, 3615, 3621,
     3622, 3623, 3586, 3624, 3626, 3627, 3607, 3621, 3628, 3623,
     3629, 3624, 3625, 3625, 3625, 3625, 3630, 3633, 3629, 3634,
     3635, 3636, 3637, 3625, 3630, 3638, 3639, 3640, 3641, 3636,

     3643, 3644, 3645, 3646, 3639, 3647, 3647, 3647, 3647, 3648,
     3645, 3649, 3650, 3651, 3652, 3654, 3647, 3653, 3653, 3653,
     3653, 3656, 3634, 3654, 3655, 3655, 3655, 3655, 3653, 3657,
     3640, 3658, 3659, 3660, 3661, 3655, 3662, 3664, 3665, 3666,
     3659, 3667, 3669, 3670, 3672, 3673, 3665, 3671, 3671, 3671,
     3671, 3670, 3674, 3675, 3676, 3678, 3679, 3680, 3671, 3677,
     3677, 3677, 3677, 3682, 3681, 3686, 3689, 3691, 3662, 3692,
     3677, 3666, 3681, 3684, 3684, 3684, 3684, 3687, 3687, 3687,
     3687, 3695, 3697, 3698, 3684, 3699, 3693, 3700, 3687, 3690,
     3690, 3690, 3690, 3684, 3693, 3700, 3701, 3687, 3702, 3705,

     3690, 3694, 3694, 3694, 3694, 3696, 3696, 3696, 3696, 3712,
     3715, 3716, 3694, 3718, 3720, 3723, 3696, 3704, 3704, 3704,
     3704, 3708, 3708, 3708, 3708, 3713, 3721, 3722, 3704, 3724,
     3726, 3729, 3708, 3713, 3721, 3722, 3731, 3684, 3714, 3714,
     3714, 3714, 3717, 3717, 3717, 3717, 3733, 3735, 3737, 3714,
     3730, 3739, 3742, 3717, 3719, 3719, 3719, 3719, 3730, 3732,
     3732, 3732, 3732, 3736, 3745, 3719, 3734, 3734, 3734, 3734,
     3732, 3736, 3738, 3738, 3738, 3738, 3740, 3734, 3741, 3743,
     3746, 3704, 3748, 3738, 3740, 3747, 3741, 3743, 3744, 3744,
     3744, 3744, 3749, 3747, 3750, 3750, 3750, 3750, 3751, 3744,

     3752, 3752, 3752, 3752, 3753, 3750, 3754, 3755, 3756, 3757,
     3758, 3752, 3753, 3760, 3754, 3761, 3756, 3762, 3758, 3759,
     3759, 3759, 3759, 3763, 3764, 3765, 3765, 3765, 3765, 3766,
     3759, 3763, 3764, 3767, 3768, 3769, 3765, 3770, 3771, 3772,
     3773, 3774, 3768, 3769, 3900, 1439, 3771, 3900, 3773, 3774,
     3900, 3900, 3901, 1436, 3918, 3901, 1435, 3918, 3901, 3901,
     3918, 3918, 1433, 1432, 3752, 3776, 3776, 3776, 3776, 3776,
     3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776,
     3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776, 3776,
     3776, 3776, 3776, 3776, 3777, 3777, 3777, 3777, 3777, 3777,

     3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777,
     3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777, 3777,
     3777, 3777, 3777, 3778, 3778, 3778, 3778, 3778, 3778, 3778,
     3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778,
     3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778, 3778,
     3778, 3778, 3779, 3779, 3779, 3779, 3779, 3779, 3779, 3779,
     3779, 3779, 3779, 3779, 3779, 3779, 3779, 3779, 3779, 3779,
     3779, 3779, 3779, 3779, 3779, 3779, 3779, 3779, 3779, 3779,
     3779, 3780, 3780, 3780, 3780, 3780, 3780, 3780, 3780, 3780,
     3780, 3780, 3780, 3780, 3780, 3780, 3780, 3780, 3780, 3780,

     3780, 3780, 3780, 3780, 3780, 3780, 3780, 3780, 3780, 3780,
     3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781,
     3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781,
     3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3781, 3782,
     3782, 3782, 3782, 3782, 3782, 3782, 3782, 3782, 3782, 3782,
     3782, 3782, 3782, 3782, 3782, 3782, 3782, 3782, 3782, 3782,
     3782, 3782, 3782, 3782, 3782, 3782, 3782, 3782, 3783, 3783,
     3783, 3783, 3783, 3783, 3783, 3783, 3783, 3783, 3783, 3783,
     3783, 3783, 3783, 3783, 3783, 3783, 3783, 3783, 3783, 3783,
     3783, 3783, 3783, 3783, 3783, 3783, 3783, 3784, 3784, 3784,

     3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784,
     3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784, 3784,
     3784, 3784, 3784, 3784, 3784, 3784, 3785, 3785, 3785, 3785,
     3785, 3785, 3785, 3785, 3785, 3785, 3785, 3785, 3785, 3785,
     3785, 3785, 3785, 3785, 3785, 3785, 3785, 3785, 3785, 3785,
     3785, 3785, 3785, 3785, 3785, 3786, 3786, 3786, 3786, 3786,
     3786, 3786, 3786, 3786, 3786, 3786, 3786, 3786, 3786, 3786,
     3786, 3786, 3786, 3786, 3786, 3786, 3786, 3786, 3786, 3786,
     3786, 3786, 3786, 3786, 3787, 3787, 3787, 3787, 3787, 3787,
     3787, 3787, 3787, 3787, 3787, 3787, 3787, 3787, 3787, 3787,

     3787, 3787, 3787, 3787, 3787, 3787, 3787, 3787, 3787, 3787,
     3787, 3787, 3787, 3788, 3788, 3788, 3788, 3788, 3788, 3788,
     3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788,
     3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788, 3788,
     3788, 3788, 3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789,
     3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789,
     3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789, 3789,
     3789, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790,
     3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790,
     3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790, 3790,

     3791, 3791, 3791, 3791, 3791, 3791, 3791, 3791, 3791, 3791,
     3791, 3791, 3791, 3791, 3791, 3791, 3791, 3791, 3791, 3791,
     3791, 3791, 3791, 3791, 3791, 3791, 3791, 3791, 3791, 3792,
     3792, 1431, 1430, 3792, 3792, 1429, 3792, 3792, 3792, 3792,
     3792, 3792, 3792, 3793, 3793, 3793, 3793, 1426, 3793, 3793,
     1425, 3793, 3793, 3793, 3793, 3793, 3793, 3793, 3794, 1424,
     3794, 3794, 3794, 1423, 1422, 3794, 3794, 3794, 3794, 3794,
     3794, 3794, 3794, 3794, 3794, 3794, 3794, 3794, 3794, 3794,
     3794, 3794, 3794, 3795, 1417, 3795, 3795, 3795, 1416, 3795,
     3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795,

     3795, 3795, 3795, 3795, 3795, 3795, 3795, 3795, 3796, 3796,
     3927, 1414, 1413, 3927, 1412, 1411, 3927, 3927, 3796, 3796,
     3796, 3796, 1408, 3796, 3796, 1406, 3796, 3796, 3796, 3796,
     3796, 3796, 3796, 3797, 3797, 3797, 3797, 1405, 3797, 3797,
     1404, 3797, 3797, 3797, 3797, 3797, 3797, 3797, 3798, 3798,
     3798, 3798, 1403, 3798, 3798, 1402, 3798, 3798, 3798, 3798,
     3798, 3798, 3798, 3799, 3799, 3799, 3799, 3799, 3799, 3799,
     3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799,
     3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799, 3799,
     3799, 3799, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800,

     3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800,
     3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800, 3800,
     3800, 3801, 3801, 3801, 1401, 1400, 3801, 3801, 1399, 3801,
     3801, 3801, 3801, 3801, 3801, 3801, 3802, 3802, 3802, 3802,
     3802, 3802, 3802, 3802, 3802, 3802, 3802, 3802, 3802, 3802,
     3802, 3802, 3802, 3802, 3802, 3802, 3802, 3802, 3802, 3802,
     3802, 3802, 3802, 3802, 3802, 3803, 3803, 3803, 3803, 3803,
     3803, 3803, 3803, 3803, 3803, 3803, 3803, 3803, 3803, 3803,
     3803, 3803, 3803, 3803, 3803, 3803, 3803, 3803, 3803, 3803,
     3803, 3803, 3803, 3803, 3804, 3804, 3804, 1397, 1396, 3804,

     3804, 1395, 3804, 3804, 3804, 3804, 3804, 3804, 3804, 3805,
     3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805,
     3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805,
     3805, 3805, 3805, 3805, 3805, 3805, 3805, 3805, 3806, 3806,
     3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806,
     3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806, 3806,
     3806, 3806, 3806, 3806, 3806, 3806, 3806, 3807, 3807, 3807,
     3807, 3807, 3807, 3807, 3807, 3807, 3807, 3807, 3807, 3807,
     3807, 3807, 3807, 3807, 3807, 3807, 3807, 3807, 3807, 3807,
     3807, 3807, 3807, 3807, 3807, 3807, 3808, 3808, 3808, 3808,

     3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808,
     3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808, 3808,
     3808, 3808, 3808, 3808, 3808, 3809, 3809, 3809, 3809, 1394,
     3809, 3809, 1393, 3809, 3809, 3809, 3809, 3809, 3809, 3809,
     3810, 3810, 3928, 1391, 3810, 3928, 1390, 1389, 3928, 3928,
     3810, 3810, 3810, 3810, 1388, 3810, 3810, 1387, 3810, 3810,
     3810, 3810, 3810, 3810, 3810, 3811, 1386, 3811, 3811, 3811,
     3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811,
     3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811, 3811,
     3811, 3811, 3812, 3812, 3812, 1385, 1384, 3812, 3812, 1383,

     3812, 3812, 3812, 3812, 3812, 3812, 3812, 3813, 3813, 3813,
     3813, 1382, 3813, 3813, 3813, 3813, 3813, 3813, 3813, 3813,
     3813, 3813, 3813, 3813, 3813, 3814, 1381, 3814, 3814, 3814,
     3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814,
     3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814, 3814,
     3814, 3814, 3815, 1379, 3815, 1378, 3815, 1377, 3815, 3815,
     3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815, 3815,
     3815, 3815, 3815, 3815, 3815, 3815, 3815, 3816, 3816, 3816,
     3816, 1375, 3816, 3816, 1373, 3816, 3816, 3816, 3816, 3816,
     3816, 3816, 3817, 3817, 3817, 3817, 1372, 3817, 3817, 1371,

     3817, 3817, 3817, 3817, 3817, 3817, 3817, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818, 3818,
     3818, 3818, 3818, 3818, 3818, 3818, 3819, 3819, 3819, 3819,
     3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819,
     3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819, 3819,
     3819, 3819, 3819, 3819, 3819, 3820, 3820, 3820, 3820, 1369,
     3820, 3820, 1368, 3820, 3820, 3820, 3820, 3820, 3820, 3820,
     3821, 1366, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,
     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821, 3821,

     3821, 3821, 3821, 3821, 3821, 3821, 3821, 3822, 1364, 3822,
     3822, 3822, 3822, 3822, 3822, 3822, 3822, 3822, 3822, 3822,
     3822, 3822, 3822, 3822, 3822, 3822, 3822, 3822, 3822, 3822,
     3822, 3822, 3822, 3822, 3823, 3823, 3823, 3823, 3823, 3823,
     3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823,
     3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823, 3823,
     3823, 3823, 3823, 3824, 3824, 3824, 3824, 3824, 3824, 3824,
     3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824,
     3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824, 3824,
     3824, 3824, 3825, 3825, 1363, 1362, 3949, 1360, 1359, 3949,

     3825, 3825, 3949, 3949, 1356, 1355, 1354, 3825, 3825, 1353,
     3825, 3825, 3825, 3825, 3825, 3825, 3825, 3826, 3826, 3826,
     3826, 1352, 3826, 3826, 1351, 3826, 3826, 3826, 3826, 3826,
     3826, 3826, 3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827,
     3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827,
     3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827, 3827,
     3827, 3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828,
     3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828,
     3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828, 3828,
     3829, 3829, 1350, 3829, 3829, 3829, 3829, 3829, 3829, 3829,

     3830, 1348, 1347, 3830, 3830, 1344, 3830, 3830, 3830, 3830,
     3830, 3830, 3830, 3831, 3831, 1343, 1342, 3831, 3831, 1341,
     3831, 3831, 3831, 3831, 3831, 3831, 3831, 3832, 3832, 3832,
     3832, 1340, 3832, 3832, 1339, 3832, 3832, 3832, 3832, 3832,
     3832, 3832, 3833, 1338, 1336, 1335, 1334, 1333, 3833, 3833,
     1332, 3833, 3833, 3833, 3833, 3833, 3833, 3833, 3834, 1330,
     3834, 3834, 3834, 1326, 1323, 3834, 3834, 3834, 3834, 3834,
     3834, 3834, 3834, 3834, 3834, 3834, 3834, 3834, 3834, 3834,
     3834, 3834, 3834, 3835, 1322, 3835, 3835, 3835, 1321, 3835,
     3835, 3835, 3835, 3835, 3835, 3835, 3835, 3835, 3835, 3835,

     3835, 3835, 3835, 3835, 3835, 3835, 3835, 3835, 3836, 3836,
     3950, 1320, 1319, 3950, 1318, 1315, 3950, 3950, 3836, 3836,
     3836, 3836, 1314, 3836, 3836, 1313, 3836, 3836, 3836, 3836,
     3836, 3836, 3836, 3837, 3837, 1312, 3837, 3837, 3837, 3837,
     3837, 3837, 3837, 3838, 3838, 3838, 3838, 1311, 3838, 3838,
     1308, 3838, 3838, 3838, 3838, 3838, 3838, 3838, 3839, 3839,
     1307, 3839, 3839, 3839, 3839, 3839, 3839, 3839, 3840, 3840,
     3840, 3840, 1306, 3840, 3840, 1305, 3840, 3840, 3840, 3840,
     3840, 3840, 3840, 3841, 3841, 1304, 3841, 3841, 3841, 3841,
     3841, 3841, 3841, 3842, 3842, 3842, 3842, 3842, 3842, 3842,

     3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842,
     3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842, 3842,
     3842, 3842, 3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843,
     3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843,
     3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843, 3843,
     3843, 3844, 3844, 3844, 1303, 1302, 3844, 3844, 1301, 3844,
     3844, 3844, 3844, 3844, 3844, 3844, 3845, 3845, 3845, 3845,
     3845, 3845, 3845, 3845, 3845, 3845, 3845, 3845, 3845, 3845,
     3845, 3845, 3845, 3845, 3845, 3845, 3845, 3845, 3845, 3845,
     3845, 3845, 3845, 3845, 3845, 3846, 3846, 3846, 3846, 3846,

     3846, 3846, 3846, 3846, 3846, 3846, 3846, 3846, 3846, 3846,
     3846, 3846, 3846, 3846, 3846, 3846, 3846, 3846, 3846, 3846,
     3846, 3846, 3846, 3846, 3847, 3847, 3847, 1300, 1299, 3847,
     3847, 1298, 3847, 3847, 3847, 3847, 3847, 3847, 3847, 3848,
     3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848,
     3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848,
     3848, 3848, 3848, 3848, 3848, 3848, 3848, 3848, 3849, 3849,
     3849, 3849, 3849, 3849, 3849, 3849, 3849, 3849, 3849, 3849,
     3849, 3849, 3849, 3849, 3849, 3849, 3849, 3849, 3849, 3849,
     3849, 3849, 3849, 3849, 3849, 3849, 3849, 3850, 3850, 3850,

     3850, 3850, 3850, 3850, 3850, 3850, 3850, 3850, 3850, 3850,
     3850, 3850, 3850, 3850, 3850, 3850, 3850, 3850, 3850, 3850,
     3850, 3850, 3850, 3850, 3850, 3850, 3851, 3851, 3851, 3851,
     3851, 3851, 3851, 3851, 3851, 3851, 3851, 3851, 3851, 3851,
     3851, 3851, 3851, 3851, 3851, 3851, 3851, 3851, 3851, 3851,
     3851, 3851, 3851, 3851, 3851, 3852, 3852, 3852, 3852, 3852,
     3852, 3852, 3852, 3852, 3852, 3852, 1295, 3852, 1294, 3852,
     3852, 1293, 3951, 3852, 3852, 3951, 1292, 1291, 3951, 3951,
     1288, 3852, 3852, 3852, 3853, 3853, 3853, 3853, 3853, 3853,
     3853, 3853, 3853, 3853, 3853, 1287, 3853, 3952, 3853, 3853,

     3952, 1286, 3853, 3952, 3952, 1285, 1284, 1281, 1280, 1279,
     3853, 3853, 3853, 3854, 3854, 3854, 3854, 3854, 3854, 3854,
     3854, 3854, 3854, 3854, 1278, 3854, 3953, 3854, 3854, 3953,
     1277, 3854, 3953, 3953, 1274, 1273, 1272, 1271, 1270, 3854,
     3854, 3854, 3855, 3855, 3855, 3855, 3855, 3855, 3855, 3855,
     3855, 3855, 3855, 1267, 3855, 3954, 3855, 3855, 3954, 1266,
     3855, 3954, 3954, 1265, 1264, 1263, 1244, 1229, 3855, 3855,
     3855, 3856, 3856, 3856, 3856, 3856, 3856, 3856, 3856, 3856,
     3856, 3856, 1223, 3856, 3955, 3856, 3856, 3955, 1222, 3856,
     3955, 3955, 1217, 1213, 1211, 1210, 1208, 3856, 3856, 3856,

     3857, 3857, 3857, 3857, 3857, 3857, 3857, 3857, 3857, 3857,
     3857, 1207, 3857, 3956, 3857, 3857, 3956, 1206, 3857, 3956,
     3956, 1205, 1204, 3857, 3857, 1203, 3857, 3857, 3857, 3858,
     3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858, 3858,
     1202, 3858, 3973, 3858, 3858, 3973, 1200, 3858, 3973, 3973,
     1199, 1198, 1186, 1185, 1179, 3858, 3858, 3858, 3859, 3859,
     3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 3859, 1165,
     3859, 3974, 3859, 3859, 3974, 1159, 3859, 3974, 3974, 1153,
     1151, 1127, 3859, 3859, 3859, 3859, 3859, 3860, 3860, 3860,
     3860, 3860, 3860, 3860, 3860, 3860, 3860, 3860, 1126, 3860,

     3976, 3860, 3860, 3976, 1125, 3860, 3976, 3976, 1124, 1123,
     1120, 1119, 1118, 3860, 3860, 3860, 3861, 3861, 3861, 3861,
     3861, 3861, 3861, 3861, 3861, 3861, 3861, 1114, 3861, 3977,
     3861, 3861, 3977, 1113, 3861, 3977, 3977, 1112, 1106, 1105,
     1101, 1100, 3861, 3861, 3861, 3862, 3862, 3862, 3862, 3862,
     3862, 3862, 3862, 3862, 3862, 3862, 1099, 3862, 1098, 3862,
     3862, 4069, 1097, 3862, 4069, 3862, 1094, 4069, 4069, 1093,
     1092, 3862, 3862, 3862, 3863, 3863, 3863, 3863, 3863, 3863,
     3863, 3863, 3863, 3863, 3863, 1091, 3863, 4070, 3863, 3863,
     4070, 1090, 3863, 4070, 4070, 1084, 1083, 1081, 1079, 1078,

     3863, 3863, 3863, 3864, 3864, 3864, 3864, 1077, 3864, 3864,
     1076, 3864, 3864, 3864, 3864, 3864, 3864, 3864, 3865, 3865,
     1075, 3865, 3865, 3865, 3865, 3865, 3865, 3865, 3866, 3866,
     4085, 1072, 3866, 4085, 1071, 1070, 4085, 4085, 3866, 3866,
     3866, 3866, 1069, 3866, 3866, 1065, 3866, 3866, 3866, 3866,
     3866, 3866, 3866, 3867, 3867, 1064, 3867, 3867, 3867, 3867,
     3867, 3867, 3867, 3868, 1063, 3868, 3868, 3868, 3868, 3868,
     3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868,
     3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868, 3868,
     3869, 1061, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869,

     3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869, 3869,
     3869, 3869, 3869, 3869, 3869, 3869, 3869, 3870, 3870, 3870,
     1060, 1059, 3870, 3870, 1058, 3870, 3870, 3870, 3870, 3870,
     3870, 3870, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871,
     3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871,
     3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871, 3871,
     3871, 3872, 3872, 3872, 3872, 1055, 3872, 3872, 3872, 3872,
     3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3872, 3873,
     1054, 3873, 3873, 3873, 3873, 3873, 3873, 3873, 3873, 3873,
     3873, 3873, 3873, 3873, 3873, 3873, 3873, 3873, 3873, 3873,

     3873, 3873, 3873, 3873, 3873, 3873, 3874, 1053, 3874, 1052,
     3874, 1047, 3874, 3874, 3874, 3874, 3874, 3874, 3874, 3874,
     3874, 3874, 3874, 3874, 3874, 3874, 3874, 3874, 3874, 3874,
     3874, 3875, 3875, 3875, 3875, 1046, 3875, 3875, 1045, 3875,
     3875, 3875, 3875, 3875, 3875, 3875, 3876, 3876, 1044, 3876,
     3876, 3876, 3876, 3876, 3876, 3876, 3877, 3877, 3877, 3877,
     1043, 3877, 3877, 1039, 3877, 3877, 3877, 3877, 3877, 3877,
     3877, 3878, 3878, 1034, 3878, 3878, 3878, 3878, 3878, 3878,
     3878, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879,
     3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879,

     3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879,
     3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880,
     3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880,
     3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3880, 3881,
     3881, 3881, 3881, 1033, 3881, 3881, 1032, 3881, 3881, 3881,
     3881, 3881, 3881, 3881, 3882, 3882, 1031, 3882, 3882, 3882,
     3882, 3882, 3882, 3882, 3883, 1030, 3883, 3883, 3883, 3883,
     3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883,
     3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883, 3883,
     3883, 3884, 1029, 3884, 3884, 3884, 3884, 3884, 3884, 3884,

     3884, 1028, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884,
     3884, 3884, 3884, 3884, 3884, 3884, 3884, 3884, 3885, 1027,
     3885, 3885, 3885, 3885, 3885, 3885, 3885, 3885, 3885, 3885,
     3885, 3885, 3885, 3885, 3885, 3885, 3885, 3885, 3885, 3885,
     3885, 3885, 3885, 3885, 3885, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886, 3886,
     3886, 3886, 3886, 3886, 3887, 3887, 3887, 3887, 3887, 3887,
     3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887,
     3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887, 3887,

     3887, 3887, 3887, 3888, 3888, 3888, 3888, 3888, 3888, 3888,
     3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888,
     3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888, 3888,
     3888, 3888, 3889, 3889, 1026, 1024, 4086, 1023, 1022, 4086,
     3889, 3889, 4086, 4086, 1021, 1020, 1019, 3889, 3889, 1018,
     3889, 3889, 3889, 3889, 3889, 3889, 3889, 3890, 3890, 3890,
     3890, 1017, 3890, 3890, 1016, 3890, 3890, 3890, 3890, 3890,
     3890, 3890, 3891, 3891, 1015, 3891, 3891, 3891, 3891, 3891,
     3891, 3891, 3892, 1014, 1013, 1012, 1011, 1010, 3892, 3892,
     1009, 3892, 3892, 3892, 3892, 3892, 3892, 3892, 3893, 3893,

     3893, 1007, 1006, 3893, 3893, 1004, 3893, 3893, 3893, 3893,
     3893, 3893, 3893, 3894, 1002, 1001, 3894, 3894,  998, 3894,
     3894, 3894, 3894, 3894, 3894, 3894, 3895,  993,  991, 3895,
     3895,  989, 3895, 3895, 3895, 3895, 3895, 3895, 3895, 3896,
     3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896,
     3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896,
     3896, 3896, 3896, 3896, 3896, 3896, 3896, 3896, 3897, 3897,
     3897,  988,  986, 3897, 3897,  985, 3897, 3897, 3897, 3897,
     3897, 3897, 3897, 3898, 3898, 3898, 3898,  984, 3898, 3898,
      983, 3898, 3898, 3898, 3898, 3898, 3898, 3898, 3899,  981,

      980,  979,  977,  976, 3899, 3899,  975, 3899, 3899, 3899,
     3899, 3899, 3899, 3899, 3902, 3902,  974,  973,  972,  971,
      970,  969,  968,  966, 3902, 3902, 3902,  965,  962, 3902,
     3902,  961, 3902, 3902, 3902, 3902, 3902, 3902, 3902, 3903,
     3903, 3903,  955,  954, 3903, 3903,  953, 3903, 3903, 3903,
     3903, 3903, 3903, 3903, 3904, 3904, 3904, 3904,  952, 3904,
     3904,  951, 3904, 3904, 3904, 3904, 3904, 3904, 3904, 3905,
     3905,  948, 3905, 3905, 3905, 3905, 3905, 3905, 3905, 3906,
     3906, 3906,  947,  946, 3906, 3906,  945, 3906, 3906, 3906,
     3906, 3906, 3906, 3906, 3907, 3907, 3907, 3907,  942, 3907,

     3907,  940, 3907, 3907, 3907, 3907, 3907, 3907, 3907, 3908,
     3908, 3908,  939,  938, 3908, 3908,  937, 3908, 3908, 3908,
     3908, 3908, 3908, 3908, 3909, 3909, 3909, 3909, 3909, 3909,
     3909, 3909, 3909, 3909, 3909,  936, 3909,  935, 3909, 3909,
      934,  931, 3909,  930,  929,  928,  923,  922,  921,  920,
     3909, 3909, 3909, 3910, 3910, 3910, 3910, 3910, 3910, 3910,
     3910, 3910, 3910, 3910,  917, 3910,  916, 3910, 3910,  915,
      914, 3910,  911,  910,  909,  908,  905,  904,  903, 3910,
     3910, 3910, 3911, 3911, 3911, 3911, 3911, 3911, 3911, 3911,
     3911, 3911, 3911,  902, 3911,  892, 3911, 3911,  881,  877,

     3911,  873,  870,  866,  861,  857,  853,  847, 3911, 3911,
     3911, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912, 3912,
     3912, 3912,  836, 3912,  835, 3912, 3912,  831,  826, 3912,
      825,  824,  823,  822,  821,  820,  817, 3912, 3912, 3912,
     3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913, 3913,
     3913,  816, 3913,  814, 3913, 3913,  813,  812, 3913,  811,
      810, 3913,  768,  742,  740,  739, 3913, 3913, 3913, 3914,
     3914, 3914,  731,  730, 3914, 3914,  729, 3914, 3914, 3914,
     3914, 3914, 3914, 3914, 3915, 3915,  728,  727, 3915,  722,
      721,  720,  719,  716, 3915, 3915, 3915,  715,  714, 3915,

     3915,  713, 3915, 3915, 3915, 3915, 3915, 3915, 3915, 3916,
      710, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916,
     3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916, 3916,
     3916, 3916, 3916, 3916, 3916, 3916, 3917, 3917, 3917, 3917,
     3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917,
     3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917, 3917,
     3917, 3917, 3917, 3917, 3917, 3919, 3919, 3919,  709,  707,
     3919, 3919,  706, 3919, 3919, 3919, 3919, 3919, 3919, 3919,
     3920, 3920, 3920,  703,  702, 3920, 3920,  701, 3920, 3920,
     3920, 3920, 3920, 3920, 3920, 3921, 3921, 3921,  700,  699,

     3921, 3921,  698, 3921, 3921, 3921, 3921, 3921, 3921, 3921,
     3922,  694, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922, 3922,
     3922, 3922, 3922, 3922, 3922, 3922, 3922, 3923, 3923, 3923,
     3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923,
     3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923, 3923,
     3923, 3923, 3923, 3923, 3923, 3923, 3924, 3924, 3924, 3924,
     3924, 3924, 3924, 3924, 3924, 3924, 3924,  692, 3924,  690,
     3924, 3924,  689,  687, 3924,  686,  685,  681,  678,  674,
      668,  664, 3924, 3924, 3924, 3925, 3925, 3925,  659,  658,

     3925, 3925,  657, 3925, 3925, 3925, 3925, 3925, 3925, 3925,
     3926, 3926, 3926,  656,  649, 3926, 3926,  646, 3926, 3926,
     3926, 3926, 3926, 3926, 3926, 3929, 3929, 3929,  645,  634,
     3929, 3929,  630, 3929, 3929, 3929, 3929, 3929, 3929, 3929,
     3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930,
     3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930,
     3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930, 3930, 3931,
     3931, 3931,  627,  625, 3931, 3931,  624, 3931, 3931, 3931,
     3931, 3931, 3931, 3931, 3932, 3932, 3932, 3932,  623, 3932,
     3932,  622, 3932, 3932, 3932, 3932, 3932, 3932, 3932, 3933,

      621,  620,  618,  617,  615, 3933, 3933,  614, 3933, 3933,
     3933, 3933, 3933, 3933, 3933, 3934, 3934, 3934, 3934, 3934,
     3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934,
     3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934, 3934,
     3934, 3934, 3934, 3934, 3935, 3935, 3935, 3935, 3935, 3935,
     3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935,
     3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935, 3935,
     3935, 3935, 3935, 3936, 3936, 3936, 3936, 3936, 3936, 3936,
     3936, 3936, 3936, 3936, 3936, 3936, 3936, 3936, 3936, 3936,
     3936, 3936, 3936, 3936, 3936, 3936, 3936, 3936, 3936, 3936,

     3936, 3936, 3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937,
     3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937,
     3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937, 3937,
     3937, 3938,  611, 3938, 3938,  610,  609, 3938, 3938, 3939,
      608, 3939, 3939,  607,  606, 3939, 3939, 3940, 3940,  604,
      602,  600,  597,  595,  593,  592,  591, 3940, 3940, 3940,
      589,  587, 3940, 3940,  586, 3940, 3940, 3940, 3940, 3940,
     3940, 3940, 3941, 3941, 3941,  585,  580, 3941, 3941,  576,
     3941, 3941, 3941, 3941, 3941, 3941, 3941, 3942, 3942, 3942,
     3942,  575, 3942, 3942,  565, 3942, 3942, 3942, 3942, 3942,

     3942, 3942, 3943, 3943,  560, 3943, 3943, 3943, 3943, 3943,
     3943, 3943, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944,
     3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944,
     3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944, 3944,
     3944, 3945, 3945, 3945, 3945, 3945, 3945, 3945, 3945, 3945,
     3945, 3945, 3945, 3945, 3945, 3945, 3945, 3945, 3945, 3945,
     3945, 3945, 3945, 3945, 3945, 3945, 3945, 3945, 3945, 3945,
     3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946,
     3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946,
     3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3946, 3947,

     3947, 3947,  554,  553, 3947, 3947,  552, 3947, 3947, 3947,
     3947, 3947, 3947, 3947, 3948, 3948, 3948, 3948,  551, 3948,
     3948,  550, 3948, 3948, 3948, 3948, 3948, 3948, 3948, 3957,
     3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957,
     3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957,
     3957, 3957, 3957, 3957, 3957, 3957, 3957, 3957, 3958, 3958,
     3958, 3958, 3958, 3958, 3958, 3958, 3958, 3958, 3958, 3958,
     3958, 3958, 3958, 3958, 3958, 3958, 3958, 3958, 3958, 3958,
     3958, 3958, 3958, 3958, 3958, 3958, 3958, 3959, 3959, 3959,
     3959, 3959, 3959, 3959, 3959, 3959, 3959, 3959,  548, 3959,

      544, 3959, 3959,  538,  534, 3959,  529,  525,  519,  479,
      459,  458,  457, 3959, 3959, 3959, 3960, 3960, 3960, 3960,
     3960, 3960, 3960, 3960, 3960, 3960, 3960,  456, 3960,  452,
     3960, 3960,  451,  448, 3960,  444,  443,  442,  441,  386,
      385,  383, 3960, 3960, 3960, 3961, 3961, 3961, 3961, 3961,
     3961, 3961, 3961, 3961, 3961, 3961,  369, 3961,  364, 3961,
     3961,  361,  360, 3961,  355,  354,  352,  347,  346,  345,
      344, 3961, 3961, 3961, 3962, 3962, 3962, 3962, 3962, 3962,
     3962, 3962, 3962, 3962, 3962,  342, 3962,  341, 3962, 3962,
      340,  335, 3962,  334,  325,  322,  315,  314,  309,  308,

     3962, 3962, 3962, 3963, 3963, 3963, 3963, 3963, 3963, 3963,
     3963, 3963, 3963, 3963,  306, 3963,  302, 3963, 3963,  301,
      300, 3963,  298,  280,  274,  268,  264,  256,  247, 3963,
     3963, 3963, 3964, 3964, 3964, 3964, 3964, 3964, 3964, 3964,
     3964, 3964, 3964,  238, 3964,  235, 3964, 3964,  227,  222,
     3964,  220,  219,  217,  210,  205,  196,  186, 3964, 3964,
     3964, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965, 3965,
     3965, 3965,  183, 3965,  160, 3965, 3965,  155,  149, 3965,
      144,  143,  137,  136,  129,  128,  122, 3965, 3965, 3965,
     3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966, 3966,

     3966,  117, 3966,  114, 3966, 3966,  113,  112, 3966,  106,
       85,   75, 3966,   71,   63,    0, 3966, 3966, 3966, 3967,
     3967, 3967,    0,    0, 3967, 3967,    0, 3967, 3967, 3967,
     3967, 3967, 3967, 3967, 3968, 3968,    0,    0, 3968,    0,
        0,    0,    0,    0, 3968, 3968, 3968,    0,    0, 3968,
     3968,    0, 3968, 3968, 3968, 3968, 3968, 3968, 3968, 3969,
     3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969,    0, 3969,
     3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969,
     3969, 3969, 3969, 3969, 3969, 3969, 3969, 3969, 3970,    0,
     3970, 3970,    0,    0, 3970, 3970, 3971, 3971, 3971,    0,

        0, 3971, 3971,    0, 3971, 3971, 3971, 3971, 3971, 3971,
     3971, 3972, 3972, 3972,    0,    0, 3972, 3972,    0, 3972,
     3972, 3972, 3972, 3972, 3972, 3972, 3975, 3975, 3975,    0,
        0, 3975, 3975,    0, 3975, 3975, 3975, 3975, 3975, 3975,
     3975, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978,
        0, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978,
     3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978, 3978,
     3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979, 3979,
     3979,    0, 3979,    0, 3979, 3979,    0,    0, 3979,    0,
        0,    0,    0,    0,    0,    0, 3979, 3979, 3979, 3980,

     3980, 3980,    0,    0, 3980, 3980,    0, 3980, 3980, 3980,
     3980, 3980, 3980, 3980, 3981, 3981, 3981,    0,    0, 3981,
     3981,    0, 3981, 3981, 3981, 3981, 3981, 3981, 3981, 3982,
        0, 3982, 3982,    0,    0, 3982, 3982, 3983,    0, 3983,
     3983,    0,    0, 3983, 3983, 3984, 3984, 3984, 3984, 3984,
     3984, 3984, 3984, 3984,    0, 3984, 3984, 3984, 3984, 3984,
     3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984, 3984,
     3984, 3984, 3984, 3984, 3985, 3985, 3985, 3985, 3985, 3985,
     3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985,
     3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985, 3985,

     3985, 3985, 3985, 3986, 3986, 3986, 3986,    0, 3986, 3986,
        0, 3986, 3986, 3986, 3986, 3986, 3986, 3986, 3987, 3987,
     3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987,
     3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987, 3987,
     3987, 3987, 3987, 3987, 3987, 3987, 3987, 3988, 3988, 3988,
     3988, 3988, 3988, 3988, 3988, 3988, 3988, 3988, 3988, 3988,
     3988, 3988, 3988, 3988, 3988, 3988, 3988, 3988, 3988, 3988,
     3988, 3988, 3988, 3988, 3988, 3988, 3989, 3989, 3989, 3989,
     3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989,
     3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989, 3989,

     3989, 3989, 3989, 3989, 3989, 3990, 3990, 3990, 3990, 3990,
     3990, 3990, 3990, 3990, 3990, 3990, 3990, 3990, 3990, 3990,
     3990, 3990, 3990, 3990, 3990, 3990, 3990, 3990, 3990, 3990,
     3990, 3990, 3990, 3990, 3991, 3991, 3991, 3991, 3991, 3991,
     3991, 3991, 3991, 3991, 3991, 3991, 3991, 3991, 3991, 3991,
     3991, 3991, 3991, 3991, 3991, 3991, 3991, 3991, 3991, 3991,
     3991, 3991, 3991, 3992,    0,    0,    0,    0,    0, 3992,
     3992,    0, 3992, 3992, 3992, 3992, 3992, 3992, 3992, 3993,
     3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993,
     3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993,

     3993, 3993, 3993, 3993, 3993, 3993, 3993, 3993, 3994, 3994,
     3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994,
     3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994, 3994,
     3994, 3994, 3994, 3994, 3994, 3994, 3994, 3995, 3995, 3995,
     3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995,
     3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995, 3995,
     3995, 3995, 3995, 3995, 3995, 3995, 3996, 3996, 3996, 3996,
     3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996,
     3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996, 3996,
     3996, 3996, 3996, 3996, 3996, 3997, 3997, 3997, 3997, 3997,

     3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997,
     3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997, 3997,
     3997, 3997, 3997, 3997, 3998, 3998, 3998, 3998,    0, 3998,
     3998,    0, 3998, 3998, 3998, 3998, 3998, 3998, 3998, 3999,
     3999,    0, 3999, 3999, 3999, 3999, 3999, 3999, 3999, 4000,
     4000, 4000, 4000,    0, 4000, 4000,    0, 4000, 4000, 4000,
     4000, 4000, 4000, 4000, 4001,    0, 4001, 4001,    0,    0,
     4001, 4001, 4002,    0, 4002, 4002,    0,    0, 4002, 4002,
     4003,    0, 4003, 4003,    0,    0, 4003, 4003, 4004,    0,
     4004, 4004,    0,    0, 4004, 4004, 4005,    0, 4005, 4005,

        0,    0, 4005, 4005, 4006,    0, 4006, 4006,    0,    0,
     4006, 4006, 4007,    0, 4007, 4007,    0,    0, 4007, 4007,
     4008,    0, 4008, 4008,    0,    0, 4008, 4008, 4009, 4009,
     4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009, 4009,    0,
     4009,    0, 4009, 4009,    0,    0, 4009,    0,    0,    0,
        0,    0,    0,    0, 4009, 4009, 4009, 4010, 4010, 4010,
     4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010,
     4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010, 4010,
     4010, 4010, 4010, 4010, 4010, 4010, 4011, 4011, 4011, 4011,
     4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011,

     4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011, 4011,
     4011, 4011, 4011, 4011, 4011, 4012, 4012, 4012, 4012, 4012,
     4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012,
     4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012, 4012,
     4012, 4012, 4012, 4012, 4013, 4013, 4013, 4013, 4013, 4013,
     4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013,
     4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013, 4013,
     4013, 4013, 4013, 4014, 4014, 4014, 4014, 4014, 4014, 4014,
     4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014,
     4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014, 4014,

     4014, 4014, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015, 4015,
     4015, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016, 4016,
     4016, 4016,    0, 4016,    0, 4016, 4016,    0,    0, 4016,
        0,    0,    0,    0,    0,    0,    0, 4016, 4016, 4016,
     4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017, 4017,
     4017,    0, 4017,    0, 4017, 4017,    0,    0, 4017,    0,
        0,    0,    0,    0,    0,    0, 4017, 4017, 4017, 4018,
     4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018, 4018,

        0, 4018,    0, 4018, 4018,    0,    0, 4018,    0,    0,
        0,    0,    0,    0,    0, 4018, 4018, 4018, 4019, 4019,
     4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019, 4019,    0,
     4019,    0, 4019, 4019,    0,    0, 4019,    0,    0,    0,
        0,    0,    0,    0, 4019, 4019, 4019, 4020, 4020, 4020,
     4020, 4020, 4020, 4020, 4020, 4020, 4020, 4020,    0, 4020,
        0, 4020, 4020,    0,    0, 4020,    0,    0,    0,    0,
        0,    0,    0, 4020, 4020, 4020, 4021, 4021, 4021, 4021,
     4021, 4021, 4021, 4021, 4021, 4021, 4021,    0, 4021,    0,
     4021, 4021,    0,    0, 4021,    0,    0,    0,    0,    0,

        0,    0, 4021, 4021, 4021, 4022,    0, 4022, 4022,    0,
        0, 4022, 4022, 4023,    0, 4023, 4023,    0,    0, 4023,
     4023, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024, 4024,
     4024, 4024,    0, 4024,    0, 4024, 4024,    0,    0, 4024,
        0,    0,    0,    0,    0,    0,    0, 4024, 4024, 4024,
     4025,    0, 4025, 4025,    0,    0, 4025, 4025, 4026,    0,
     4026, 4026,    0,    0, 4026, 4026, 4027, 4027, 4027, 4027,
        0, 4027, 4027,    0, 4027, 4027, 4027, 4027, 4027, 4027,
     4027, 4028,    0,    0,    0,    0,    0, 4028, 4028,    0,
     4028, 4028, 4028, 4028, 4028, 4028, 4028, 4029, 4029, 4029,

     4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029,
     4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029, 4029,
     4029, 4029, 4029, 4029, 4029, 4029, 4030, 4030, 4030, 4030,
     4030, 4030, 4030, 4030, 4030, 4030, 4030, 4030, 4030, 4030,
     4030, 4030, 4030, 4030, 4030, 4030, 4030, 4030, 4030, 4030,
     4030, 4030, 4030, 4030, 4030, 4031, 4031, 4031, 4031, 4031,
     4031, 4031, 4031, 4031, 4031, 4031,    0, 4031,    0, 4031,
     4031,    0,    0, 4031,    0,    0,    0,    0,    0,    0,
        0, 4031, 4031, 4031, 4032, 4032, 4032, 4032, 4032, 4032,
     4032, 4032, 4032,    0, 4032, 4032, 4032, 4032, 4032, 4032,

     4032, 4032, 4032, 4032, 4032, 4032, 4032, 4032, 4032, 4032,
     4032, 4032, 4032, 4033, 4033, 4033, 4033, 4033, 4033, 4033,
     4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033,
     4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033, 4033,
     4033, 4033, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034,
     4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034,
     4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034, 4034,
     4034, 4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035,
     4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035,
     4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035, 4035,

     4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036,
     4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036,
     4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4036, 4037,
     4037, 4037, 4037, 4037, 4037, 4037, 4037, 4037,    0, 4037,
     4037, 4037, 4037, 4037, 4037, 4037, 4037, 4037, 4037, 4037,
     4037, 4037, 4037, 4037, 4037, 4037, 4037, 4037, 4038, 4038,
     4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038,
     4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038, 4038,
     4038, 4038, 4038, 4038, 4038, 4038, 4038, 4039, 4039, 4039,
     4039, 4039, 4039, 4039, 4039, 4039, 4039, 4039, 4039, 4039,

     4039, 4039, 4039, 4039, 4039, 4039, 4039, 4039, 4039, 4039,
     4039, 4039, 4039, 4039, 4039, 4039, 4040, 4040, 4040, 4040,
     4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040,
     4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040, 4040,
     4040, 4040, 4040, 4040, 4040, 4041, 4041, 4041, 4041, 4041,
     4041, 4041, 4041, 4041,    0, 4041, 4041, 4041, 4041, 4041,
     4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041, 4041,
     4041, 4041, 4041, 4041, 4042, 4042, 4042, 4042,    0, 4042,
     4042,    0, 4042, 4042, 4042, 4042, 4042, 4042, 4042, 4043,
     4043, 4043, 4043, 4043, 4043, 4043, 4043, 4043, 4043, 4043,

     4043, 4043, 4043, 4043, 4043, 4043, 4043, 4043, 4043, 4043,
     4043, 4043, 4043, 4043, 4043, 4043, 4043, 4043, 4044, 4044,
        0, 4044, 4044, 4044, 4044, 4044, 4044, 4044, 4045, 4045,
     4045, 4045,    0, 4045, 4045,    0, 4045, 4045, 4045, 4045,
     4045, 4045, 4045, 4046, 4046, 4046, 4046, 4046, 4046, 4046,
     4046, 4046, 4046, 4046, 4046, 4046, 4046, 4046, 4046, 4046,
     4046, 4046, 4046, 4046, 4046, 4046, 4046, 4046, 4046, 4046,
     4046, 4046, 4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047,
     4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047,
     4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047, 4047,

     4047, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048,
        0, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048,
     4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048, 4048,
     4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049, 4049,
     4049,    0, 4049,    0, 4049, 4049,    0,    0, 4049,    0,
        0,    0,    0,    0,    0,    0, 4049, 4049, 4049, 4050,
     4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050,    0, 4050,
     4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050,
     4050, 4050, 4050, 4050, 4050, 4050, 4050, 4050, 4051, 4051,
     4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051, 4051,    0,

     4051,    0, 4051, 4051,    0,    0, 4051,    0,    0,    0,
        0,    0,    0,    0, 4051, 4051, 4051, 4052, 4052, 4052,
     4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052,
     4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052, 4052,
     4052, 4052, 4052, 4052, 4052, 4052, 4053, 4053, 4053, 4053,
     4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053,
     4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053, 4053,
     4053, 4053, 4053, 4053, 4053, 4054, 4054, 4054, 4054, 4054,
     4054, 4054, 4054, 4054, 4054, 4054,    0, 4054,    0, 4054,
     4054,    0,    0, 4054,    0,    0,    0,    0,    0,    0,

        0, 4054, 4054, 4054, 4055, 4055, 4055, 4055, 4055, 4055,
     4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055,
     4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055, 4055,
     4055, 4055, 4055, 4056, 4056, 4056, 4056, 4056, 4056, 4056,
     4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056,
     4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056, 4056,
     4056, 4056, 4057, 4057, 4057, 4057, 4057, 4057, 4057, 4057,
     4057, 4057, 4057,    0, 4057,    0, 4057, 4057,    0,    0,
     4057,    0,    0,    0,    0,    0,    0,    0, 4057, 4057,
     4057, 4058, 4058, 4058, 4058, 4058, 4058, 4058, 4058, 4058,

     4058, 4058,    0, 4058,    0, 4058, 4058,    0,    0, 4058,
        0,    0,    0,    0,    0,    0,    0, 4058, 4058, 4058,
     4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059, 4059,
     4059,    0, 4059,    0, 4059, 4059,    0,    0, 4059,    0,
        0,    0,    0,    0,    0,    0, 4059, 4059, 4059, 4060,
     4060, 4060, 4060, 4060, 4060, 4060, 4060, 4060, 4060, 4060,
        0, 4060,    0, 4060, 4060,    0,    0, 4060,    0,    0,
        0,    0,    0,    0,    0, 4060, 4060, 4060, 4061, 4061,
     4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061, 4061,    0,
     4061,    0, 4061, 4061,    0,    0, 4061,    0,    0,    0,

        0,    0,    0,    0, 4061, 4061, 4061, 4062, 4062, 4062,
     4062, 4062, 4062, 4062, 4062, 4062, 4062, 4062,    0, 4062,
        0, 4062, 4062,    0,    0, 4062,    0,    0,    0,    0,
        0,    0,    0, 4062, 4062, 4062, 4063, 4063, 4063, 4063,
     4063, 4063, 4063, 4063, 4063, 4063, 4063,    0, 4063,    0,
     4063, 4063,    0,    0, 4063,    0,    0,    0,    0,    0,
        0,    0, 4063, 4063, 4063, 4064, 4064, 4064, 4064, 4064,
     4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064,
     4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064, 4064,
     4064, 4064, 4064, 4064, 4065, 4065, 4065, 4065, 4065, 4065,

     4065, 4065, 4065, 4065, 4065,    0, 4065,    0, 4065, 4065,
        0,    0, 4065,    0,    0,    0,    0,    0,    0,    0,
     4065, 4065, 4065, 4066, 4066, 4066, 4066, 4066, 4066, 4066,
     4066, 4066,    0, 4066, 4066, 4066, 4066, 4066, 4066, 4066,
     4066, 4066, 4066, 4066, 4066, 4066, 4066, 4066, 4066, 4066,
     4066, 4066, 4067, 4067, 4067, 4067,    0, 4067, 4067,    0,
     4067, 4067, 4067, 4067, 4067, 4067, 4067, 4068, 4068, 4068,
     4068, 4068, 4068, 4068, 4068, 4068,    0, 4068, 4068, 4068,
     4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068, 4068,
     4068, 4068, 4068, 4068, 4068, 4068, 4071, 4071, 4071, 4071,

     4071, 4071, 4071, 4071, 4071, 4071, 4071,    0, 4071,    0,
     4071, 4071,    0,    0, 4071,    0,    0,    0,    0,    0,
        0,    0, 4071, 4071, 4071, 4072,    0,    0,    0,    0,
        0, 4072, 4072,    0, 4072, 4072, 4072, 4072, 4072, 4072,
     4072, 4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073,
     4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073,
     4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073, 4073,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074,
     4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4074, 4075,

     4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075,
     4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075,
     4075, 4075, 4075, 4075, 4075, 4075, 4075, 4075, 4076, 4076,
     4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076,
     4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076, 4076,
     4076, 4076, 4076, 4076, 4076, 4076, 4076, 4077, 4077, 4077,
     4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077,
     4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077, 4077,
     4077, 4077, 4077, 4077, 4077, 4077, 4078, 4078, 4078, 4078,
     4078, 4078, 4078, 4078, 4078,    0, 4078, 4078, 4078, 4078,

     4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078, 4078,
     4078, 4078, 4078, 4078, 4078, 4079, 4079, 4079, 4079, 4079,
     4079, 4079, 4079, 4079,    0, 4079, 4079, 4079, 4079, 4079,
     4079, 4079, 4079, 4079, 4079, 4079, 4079, 4079, 4079, 4079,
     4079, 4079, 4079, 4079, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080, 4080,
     4080, 4080, 4080, 4081, 4081, 4081, 4081, 4081, 4081, 4081,
     4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081,
     4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081, 4081,

     4081, 4081, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082, 4082,
     4082, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083,
     4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083,
     4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083, 4083,
     4084, 4084, 4084, 4084, 4084, 4084, 4084, 4084, 4084, 4084,
     4084,    0, 4084,    0, 4084, 4084,    0,    0, 4084,    0,
        0,    0,    0,    0,    0,    0, 4084, 4084, 4084, 4087,
     4087, 4087, 4087,    0, 4087, 4087,    0, 4087, 4087, 4087,

     4087, 4087, 4087, 4087, 4088, 4088, 4088, 4088, 4088, 4088,
     4088, 4088, 4088, 4088, 4088,    0, 4088,    0, 4088, 4088,
        0,    0, 4088,    0,    0,    0,    0,    0,    0,    0,
     4088, 4088, 4088, 4089, 4089, 4089, 4089, 4089, 4089, 4089,
     4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089,
     4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089, 4089,
     4089, 4089, 4090, 4090,    0, 4090, 4090, 4090, 4090, 4090,
     4090, 4090, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091,
     4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091,
     4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091, 4091,

     4091, 4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092,
     4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092,
     4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092, 4092,
     4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093,
     4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093,
     4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093, 4093, 4094,
     4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094,
     4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094,
     4094, 4094, 4094, 4094, 4094, 4094, 4094, 4094, 4095, 4095,
        0,    0,    0,    0,    0, 4095,    0,    0, 4095, 4095,

     4095, 4095,    0, 4095, 4095,    0, 4095, 4095, 4095, 4095,
     4095, 4095, 4095, 4096, 4096, 4096, 4096, 4096, 4096, 4096,
     4096, 4096, 4096, 4096,    0, 4096,    0, 4096, 4096,    0,
        0, 4096,    0,    0,    0,    0,    0,    0,    0, 4096,
     4096, 4096, 4097, 4097, 4097, 4097, 4097, 4097, 4097, 4097,
     4097,    0, 4097, 4097, 4097, 4097, 4097, 4097, 4097, 4097,
     4097, 4097, 4097, 4097, 4097, 4097, 4097, 4097, 4097, 4097,
     4097, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098,
        0, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098,
     4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098, 4098,

     4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099, 4099,
     4099,    0, 4099,    0, 4099, 4099,    0,    0, 4099,    0,
        0,    0,    0,    0,    0,    0, 4099, 4099, 4099, 4100,
     4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100,
     4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100,
     4100, 4100, 4100, 4100, 4100, 4100, 4100, 4100, 4101, 4101,
     4101, 4101, 4101, 4101, 4101, 4101, 4101, 4101, 4101,    0,
     4101,    0, 4101, 4101,    0,    0, 4101,    0,    0,    0,
        0,    0,    0,    0, 4101, 4101, 4101, 4102, 4102, 4102,
     4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102,

     4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102, 4102,
     4102, 4102, 4102, 4102, 4102, 4102, 4103, 4103, 4103, 4103,
     4103, 4103, 4103, 4103, 4103, 4103, 4103,    0, 4103,    0,
     4103, 4103,    0,    0, 4103,    0,    0,    0,    0,    0,
        0,    0, 4103, 4103, 4103, 4104, 4104, 4104, 4104, 4104,
     4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104,
     4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104, 4104,
     4104, 4104, 4104, 4104, 4105, 4105, 4105, 4105, 4105, 4105,
     4105, 4105, 4105, 4105, 4105,    0, 4105,    0, 4105, 4105,
        0,    0, 4105,    0,    0,    0,    0,    0,    0,    0,

     4105, 4105, 4105, 4106, 4106, 4106, 4106, 4106, 4106, 4106,
     4106, 4106,    0, 4106, 4106, 4106, 4106, 4106, 4106, 4106,
     4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106, 4106,
     4106, 4106, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107,
     4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107,
     4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107, 4107,
     4107, 4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108,
        0, 4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108,
     4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108, 4108,
     4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109,

     4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109,
     4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4109, 4110,
     4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110,
     4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110,
     4110, 4110, 4110, 4110, 4110, 4110, 4110, 4110, 4111, 4111,
     4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111,
     4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111, 4111,
     4111, 4111, 4111, 4111, 4111, 4111, 4111, 4112, 4112, 4112,
     4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112,
     4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112, 4112,

     4112, 4112, 4112, 4112, 4112, 4112, 4113, 4113, 4113, 4113,
        0, 4113, 4113,    0, 4113, 4113, 4113, 4113, 4113, 4113,
     4113, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114, 4114,
     4114, 4114,    0, 4114,    0, 4114, 4114,    0,    0, 4114,
        0,    0,    0,    0,    0,    0,    0, 4114, 4114, 4114,
     4115,    0, 4115, 4115,    0,    0, 4115, 4115, 4116,    0,
     4116, 4116,    0,    0, 4116, 4116, 4117, 4117, 4117, 4117,
     4117, 4117, 4117, 4117, 4117, 4117, 4117,    0, 4117,    0,
     4117, 4117,    0,    0, 4117,    0,    0,    0,    0,    0,
        0,    0, 4117, 4117, 4117, 4118, 4118, 4118, 4118, 4118,

     4118, 4118, 4118, 4118, 4118, 4118,    0, 4118,    0, 4118,
     4118,    0,    0, 4118,    0,    0,    0,    0,    0,    0,
        0, 4118, 4118, 4118, 4119, 4119, 4119, 4119, 4119, 4119,
     4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119,
     4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119, 4119,
     4119, 4119, 4119, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120, 4120,    0, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120, 4120,
     4120, 4120, 4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121,
     4121,    0, 4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121,

     4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121, 4121,
     4121, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122,
     4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122,
     4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122, 4122,
     4123, 4123,    0,    0,    0,    0,    0, 4123,    0,    0,
        0,    0,    0,    0,    0, 4123, 4123,    0, 4123, 4123,
     4123, 4123, 4123, 4123, 4123, 4123, 4124, 4124, 4124, 4124,
     4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124,
     4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124, 4124,
     4124, 4124, 4124, 4124, 4124, 4125, 4125, 4125, 4125, 4125,

     4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125,
     4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125, 4125,
     4125, 4125, 4125, 4125, 4126,    0,    0,    0,    0,    0,
     4126, 4126,    0, 4126, 4126, 4126, 4126, 4126, 4126, 4126,
     4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127,    0,
     4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127,
     4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4127, 4128,
     4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128,
     4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128,
     4128, 4128, 4128, 4128, 4128, 4128, 4128, 4128, 4129, 4129,

     4129, 4129, 4129, 4129, 4129, 4129, 4129, 4129, 4129, 4129,
     4129, 4129, 4129, 4129, 4129, 4129, 4129, 4129, 4129, 4129,
     4129, 4129, 4129, 4129, 4129, 4129, 4129, 4130, 4130, 4130,
     4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130,
     4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130, 4130,
     4130, 4130, 4130, 4130, 4130, 4130, 4131, 4131, 4131, 4131,
     4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131,
     4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131, 4131,
     4131, 4131, 4131, 4131, 4131, 4132, 4132, 4132, 4132, 4132,
     4132, 4132, 4132, 4132,    0, 4132, 4132, 4132, 4132, 4132,

     4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132, 4132,
     4132, 4132, 4132, 4132, 4133, 4133, 4133, 4133, 4133, 4133,
     4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133,
     4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133, 4133,
     4133, 4133, 4133, 4134, 4134, 4134, 4134, 4134, 4134, 4134,
     4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134,
     4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134, 4134,
     4134, 4134, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135,
     4135,    0, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135,
     4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135, 4135,

     4135, 4136, 4136, 4136, 4136, 4136, 4136, 4136, 4136, 4136,
     4136, 4136, 4136, 4136, 4136, 4136, 4136, 4136, 4136, 4136,
     4136, 4136, 4136, 4136, 4136, 4136, 4136, 4136, 4136, 4136,
     4137,    0, 4137, 4137,    0,    0, 4137, 4137, 4138,    0,
     4138, 4138,    0,    0, 4138, 4138, 4139, 4139, 4139, 4139,
        0, 4139, 4139,    0, 4139, 4139, 4139, 4139, 4139, 4139,
     4139, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140,
        0, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140,
     4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140, 4140,
     4141, 4141, 4141, 4141, 4141, 4141, 4141, 4141, 4141, 4141,

     4141,    0, 4141,    0, 4141, 4141,    0,    0, 4141,    0,
        0,    0,    0,    0,    0,    0, 4141, 4141, 4141, 4142,
     4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142,
     4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142,
     4142, 4142, 4142, 4142, 4142, 4142, 4142, 4142, 4143, 4143,
     4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143,
     4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143, 4143,
     4143, 4143, 4143, 4143, 4143, 4143, 4143, 4144, 4144, 4144,
     4144, 4144, 4144, 4144, 4144, 4144, 4144, 4144,    0, 4144,
        0, 4144, 4144,    0,    0, 4144,    0,    0,    0,    0,

        0,    0,    0, 4144, 4144, 4144, 4145, 4145, 4145, 4145,
     4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145,
     4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145, 4145,
     4145, 4145, 4145, 4145, 4145, 4146, 4146, 4146, 4146, 4146,
     4146, 4146, 4146, 4146, 4146, 4146, 4146, 4146, 4146, 4146,
     4146, 4146, 4146, 4146, 4146, 4146, 4146, 4146, 4146, 4146,
     4146, 4146, 4146, 4146, 4147, 4147, 4147, 4147, 4147, 4147,
     4147, 4147, 4147, 4147, 4147,    0, 4147,    0, 4147, 4147,
        0,    0, 4147,    0,    0,    0,    0,    0,    0,    0,
     4147, 4147, 4147, 4148, 4148, 4148, 4148, 4148, 4148, 4148,

     4148, 4148, 4148, 4148, 4148, 4148, 4148, 4148, 4148, 4148,
     4148, 4148, 4148, 4148, 4148, 4148, 4148, 4148, 4148, 4148,
     4148, 4148, 4149, 4149, 4149, 4149,    0, 4149, 4149,    0,
     4149, 4149, 4149, 4149, 4149, 4149, 4149, 4150, 4150, 4150,
     4150, 4150, 4150, 4150, 4150, 4150, 4150, 4150,    0, 4150,
        0, 4150, 4150,    0,    0, 4150,    0,    0,    0,    0,
        0,    0,    0, 4150, 4150, 4150, 4151, 4151, 4151, 4151,
     4151, 4151, 4151, 4151, 4151, 4151, 4151,    0, 4151,    0,
     4151, 4151,    0,    0, 4151,    0,    0,    0,    0,    0,
        0,    0, 4151, 4151, 4151, 4152, 4152, 4152, 4152, 4152,

     4152, 4152, 4152, 4152, 4152, 4152,    0, 4152,    0, 4152,
     4152,    0,    0, 4152,    0,    0,    0,    0,    0,    0,
        0, 4152, 4152, 4152, 4153, 4153, 4153, 4153, 4153, 4153,
     4153, 4153, 4153, 4153, 4153,    0, 4153,    0, 4153, 4153,
        0,    0, 4153,    0,    0,    0,    0,    0,    0,    0,
     4153, 4153, 4153, 4154, 4154, 4154, 4154, 4154, 4154, 4154,
     4154, 4154,    0, 4154, 4154, 4154, 4154, 4154, 4154, 4154,
     4154, 4154, 4154, 4154, 4154, 4154, 4154, 4154, 4154, 4154,
     4154, 4154, 4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155,
     4155,    0, 4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155,

     4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155, 4155,
     4155, 4156, 4156, 4156, 4156, 4156, 4156, 4156, 4156, 4156,
     4156, 4156,    0, 4156,    0, 4156, 4156,    0,    0, 4156,
        0,    0,    0,    0,    0,    0,    0, 4156, 4156, 4156,
     4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157,
     4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157,
     4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4157, 4158,
     4158, 4158, 4158, 4158, 4158, 4158, 4158, 4158, 4158, 4158,
     4158, 4158, 4158, 4158, 4158, 4158, 4158, 4158, 4158, 4158,
     4158, 4158, 4158, 4158, 4158, 4158, 4158, 4158, 4159, 4159,

     4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159, 4159,    0,
     4159,    0, 4159, 4159,    0,    0, 4159,    0,    0,    0,
        0,    0,    0,    0, 4159, 4159, 4159, 4160, 4160, 4160,
     4160, 4160, 4160, 4160, 4160, 4160, 4160, 4160,    0, 4160,
        0, 4160, 4160,    0,    0, 4160,    0,    0,    0,    0,
        0,    0,    0, 4160, 4160, 4160, 4161, 4161, 4161, 4161,
     4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161,
     4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161, 4161,
     4161, 4161, 4161, 4161, 4161, 4162, 4162, 4162, 4162, 4162,
     4162, 4162, 4162, 4162, 4162, 4162,    0, 4162,    0, 4162,

     4162,    0,    0, 4162,    0,    0,    0,    0,    0,    0,
        0, 4162, 4162, 4162, 4163, 4163, 4163, 4163, 4163, 4163,
     4163, 4163, 4163, 4163, 4163,    0, 4163,    0, 4163, 4163,
        0,    0, 4163,    0,    0,    0,    0,    0,    0,    0,
     4163, 4163, 4163, 4164, 4164, 4164, 4164, 4164, 4164, 4164,
     4164, 4164, 4164, 4164, 4164, 4164, 4164, 4164, 4164, 4164,
     4164, 4164, 4164, 4164, 4164, 4164, 4164, 4164, 4164, 4164,
     4164, 4164, 4165, 4165, 4165, 4165, 4165, 4165, 4165, 4165,
     4165, 4165, 4165,    0, 4165,    0, 4165, 4165,    0,    0,
     4165,    0,    0,    0,    0,    0,    0,    0, 4165, 4165,

     4165, 4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166, 4166,
     4166, 4166,    0, 4166,    0, 4166, 4166,    0,    0, 4166,
        0,    0,    0,    0, 4166,    0,    0, 4166, 4166, 4166,
     4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167,
     4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167,
     4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4167, 4168,
     4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168, 4168,
        0, 4168,    0, 4168, 4168,    0,    0, 4168,    0,    0,
        0,    0,    0,    0,    0, 4168, 4168, 4168, 4169, 4169,
     4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169,

     4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169, 4169,
     4169, 4169, 4169, 4169, 4169, 4169, 4169, 4170, 4170, 4170,
     4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170,
     4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170, 4170,
     4170, 4170, 4170, 4170, 4170, 4170, 4171, 4171, 4171, 4171,
     4171, 4171, 4171, 4171, 4171,    0, 4171, 4171, 4171, 4171,
     4171, 4171, 4171, 4171, 4171, 4171, 4171, 4171, 4171, 4171,
     4171, 4171, 4171, 4171, 4171, 4172, 4172, 4172, 4172, 4172,
     4172, 4172, 4172, 4172, 4172, 4172,    0, 4172,    0, 4172,
     4172,    0,    0, 4172,    0,    0,    0,    0,    0,    0,

        0, 4172, 4172, 4172, 4173, 4173, 4173, 4173, 4173, 4173,
     4173, 4173, 4173, 4173, 4173,    0, 4173,    0, 4173, 4173,
        0,    0, 4173,    0,    0,    0,    0,    0,    0,    0,
     4173, 4173, 4173, 4174, 4174, 4174, 4174, 4174, 4174, 4174,
     4174, 4174, 4174, 4174,    0, 4174,    0, 4174, 4174,    0,
        0, 4174,    0,    0,    0,    0,    0,    0,    0, 4174,
     4174, 4174, 4175, 4175, 4175, 4175,    0, 4175, 4175,    0,
     4175, 4175, 4175, 4175, 4175, 4175, 4175, 4176,    0,    0,
        0, 4176,    0, 4176, 4176,    0, 4176, 4176, 4176, 4176,
     4176, 4176, 4176, 4177, 4177, 4177, 4177, 4177, 4177, 4177,

     4177, 4177,    0, 4177, 4177, 4177, 4177, 4177, 4177, 4177,
     4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177, 4177,
     4177, 4177, 4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178,
     4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178,
     4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178, 4178,
     4178, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179,
     4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179,
     4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179, 4179,
     4180, 4180,    0,    0,    0,    0,    0,    0,    0,    0,
     4180, 4180, 4180, 4180,    0, 4180, 4180,    0, 4180, 4180,

     4180, 4180, 4180, 4180, 4180, 4180, 4181, 4181, 4181, 4181,
     4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181,
     4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181, 4181,
     4181, 4181, 4181, 4181, 4181, 4182, 4182, 4182, 4182, 4182,
     4182, 4182, 4182, 4182, 4182, 4182, 4182, 4182, 4182, 4182,
     4182, 4182, 4182, 4182, 4182, 4182, 4182, 4182, 4182, 4182,
     4182, 4182, 4182, 4182, 4183, 4183, 4183, 4183, 4183, 4183,
     4183, 4183, 4183,    0, 4183, 4183, 4183, 4183, 4183, 4183,
     4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183, 4183,
     4183, 4183, 4183, 4184, 4184, 4184, 4184, 4184, 4184, 4184,

     4184, 4184, 4184, 4184,    0, 4184,    0, 4184, 4184,    0,
        0, 4184,    0,    0,    0,    0,    0,    0,    0, 4184,
     4184, 4184, 4185, 4185, 4185, 4185, 4185, 4185, 4185, 4185,
     4185, 4185, 4185, 4185, 4185, 4185, 4185, 4185, 4185, 4185,
     4185, 4185, 4185, 4185, 4185, 4185, 4185, 4185, 4185, 4185,
     4185, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186,
     4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186,
     4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186, 4186,
     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187,
     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187,

     4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4187, 4188,
     4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188, 4188,
        0, 4188,    0, 4188, 4188,    0,    0, 4188,    0,    0,
        0,    0,    0,    0,    0, 4188, 4188, 4188, 4189, 4189,
     4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189,
     4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189, 4189,
     4189, 4189, 4189, 4189, 4189, 4189, 4189, 4190, 4190, 4190,
     4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190,
     4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190, 4190,
     4190, 4190, 4190, 4190, 4190, 4190, 4191, 4191, 4191, 4191,

     4191, 4191, 4191, 4191, 4191,    0, 4191, 4191, 4191, 4191,
     4191, 4191, 4191, 4191, 4191, 4191, 4191, 4191, 4191, 4191,
     4191, 4191, 4191, 4191, 4191, 4192, 4192, 4192, 4192, 4192,
     4192, 4192, 4192, 4192,    0, 4192, 4192, 4192, 4192, 4192,
     4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192, 4192,
     4192, 4192, 4192, 4192, 4193, 4193, 4193, 4193, 4193, 4193,
     4193, 4193, 4193, 4193, 4193, 4193, 4193, 4193, 4193, 4193,
     4193, 4193, 4193, 4193, 4193, 4193, 4193, 4193, 4193, 4193,
     4193, 4193, 4193, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,

     4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194, 4194,
     4194, 4194, 4195, 4195, 4195, 4195, 4195, 4195, 4195, 4195,
     4195, 4195, 4195,    0, 4195,    0, 4195, 4195,    0,    0,
     4195,    0,    0,    0,    0,    0,    0,    0, 4195, 4195,
     4195, 4196, 4196,    0,    0,    0,    0,    0, 4196,    0,
        0, 4196, 4196, 4196, 4196,    0, 4196, 4196,    0, 4196,
     4196, 4196, 4196, 4196, 4196, 4196, 4197, 4197,    0, 4197,
     4197, 4197, 4197, 4197, 4197, 4197, 4198, 4198, 4198, 4198,
     4198, 4198, 4198, 4198, 4198,    0, 4198, 4198, 4198, 4198,
     4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198, 4198,

     4198, 4198, 4198, 4198, 4198, 4199, 4199, 4199, 4199, 4199,
     4199, 4199, 4199, 4199,    0, 4199, 4199, 4199, 4199, 4199,
     4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199, 4199,
     4199, 4199, 4199, 4199, 4200, 4200, 4200, 4200, 4200, 4200,
     4200, 4200, 4200,    0, 4200, 4200, 4200, 4200, 4200, 4200,
     4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200, 4200,
     4200, 4200, 4200, 4201, 4201, 4201, 4201, 4201, 4201, 4201,
     4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201,
     4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201,
     4201, 4201, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202,

     4202,    0, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202,
     4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202, 4202,
     4202, 4203, 4203, 4203, 4203,    0, 4203, 4203,    0, 4203,
     4203, 4203, 4203, 4203, 4203, 4203, 4204, 4204, 4204, 4204,
     4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204,
     4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204, 4204,
     4204, 4204, 4204, 4204, 4204, 4205, 4205, 4205, 4205, 4205,
     4205, 4205, 4205, 4205, 4205, 4205,    0, 4205,    0, 4205,
     4205,    0,    0, 4205,    0,    0,    0,    0,    0,    0,
        0, 4205, 4205, 4205, 4206, 4206, 4206, 4206, 4206, 4206,

     4206, 4206, 4206, 4206, 4206,    0, 4206,    0, 4206, 4206,
        0,    0, 4206,    0,    0,    0,    0,    0,    0,    0,
     4206, 4206, 4206, 4207, 4207, 4207, 4207, 4207, 4207, 4207,
     4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207,
     4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207, 4207,
     4207, 4207, 4208, 4208, 4208, 4208, 4208, 4208, 4208, 4208,
     4208, 4208, 4208,    0, 4208,    0, 4208, 4208,    0,    0,
     4208,    0,    0,    0,    0,    0,    0,    0, 4208, 4208,
     4208, 4209, 4209, 4209, 4209, 4209, 4209, 4209, 4209, 4209,
     4209, 4209,    0, 4209,    0, 4209, 4209,    0,    0, 4209,

        0,    0,    0,    0,    0,    0,    0, 4209, 4209, 4209,
     4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210,
     4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210,
     4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4210, 4211,
     4211, 4211, 4211, 4211, 4211, 4211, 4211, 4211, 4211, 4211,
        0, 4211,    0, 4211, 4211,    0,    0, 4211,    0,    0,
        0,    0,    0,    0,    0, 4211, 4211, 4211, 4212, 4212,
     4212, 4212, 4212, 4212, 4212, 4212, 4212,    0, 4212, 4212,
     4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212, 4212,
     4212, 4212, 4212, 4212, 4212, 4212, 4212, 4213, 4213, 4213,

     4213, 4213, 4213, 4213, 4213, 4213, 4213, 4213, 4213, 4213,
     4213, 4213, 4213, 4213, 4213, 4213, 4213, 4213, 4213, 4213,
     4213, 4213, 4213, 4213, 4213, 4213, 4214, 4214, 4214, 4214,
     4214, 4214, 4214, 4214, 4214,    0, 4214, 4214, 4214, 4214,
     4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214, 4214,
     4214, 4214, 4214, 4214, 4214, 4215, 4215, 4215, 4215, 4215,
     4215, 4215, 4215, 4215, 4215, 4215,    0, 4215,    0, 4215,
     4215,    0,    0, 4215,    0,    0,    0,    0,    0,    0,
        0, 4215, 4215, 4215, 4216, 4216, 4216, 4216, 4216, 4216,
     4216, 4216, 4216, 4216, 4216,    0, 4216,    0, 4216, 4216,

        0,    0, 4216,    0,    0,    0,    0,    0,    0,    0,
     4216, 4216, 4216, 4217, 4217, 4217, 4217, 4217, 4217, 4217,
     4217, 4217, 4217, 4217,    0, 4217,    0, 4217, 4217,    0,
        0, 4217,    0,    0,    0,    0,    0,    0,    0, 4217,
     4217, 4217, 4218, 4218, 4218, 4218, 4218, 4218, 4218, 4218,
     4218,    0, 4218, 4218, 4218, 4218, 4218, 4218, 4218, 4218,
     4218, 4218, 4218, 4218, 4218, 4218, 4218, 4218, 4218, 4218,
     4218, 4219, 4219, 4219, 4219, 4219, 4219, 4219, 4219, 4219,
     4219, 4219,    0, 4219,    0, 4219, 4219,    0,    0, 4219,
        0,    0,    0,    0,    0,    0,    0, 4219, 4219, 4219,

     4220, 4220, 4220, 4220, 4220, 4220, 4220, 4220, 4220, 4220,
     4220,    0, 4220,    0, 4220, 4220,    0,    0, 4220,    0,
        0,    0,    0,    0,    0,    0, 4220, 4220, 4220, 4221,
     4221, 4221, 4221, 4221, 4221, 4221, 4221, 4221, 4221, 4221,
        0, 4221,    0, 4221, 4221,    0,    0, 4221,    0,    0,
        0,    0,    0,    0,    0, 4221, 4221, 4221, 4222, 4222,
     4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222,
     4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222, 4222,
     4222, 4222, 4222, 4222, 4222, 4222, 4222, 4223, 4223, 4223,
     4223, 4223, 4223, 4223, 4223, 4223,    0, 4223, 4223, 4223,

     4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223, 4223,
     4223, 4223, 4223, 4223, 4223, 4223, 4224, 4224, 4224, 4224,
     4224, 4224, 4224, 4224, 4224, 4224, 4224,    0, 4224,    0,
     4224, 4224,    0,    0, 4224,    0,    0,    0,    0,    0,
        0,    0, 4224, 4224, 4224, 4225, 4225, 4225, 4225, 4225,
     4225, 4225, 4225, 4225,    0, 4225, 4225, 4225, 4225, 4225,
     4225, 4225, 4225, 4225, 4225, 4225, 4225, 4225, 4225, 4225,
     4225, 4225, 4225, 4225, 4226, 4226, 4226, 4226, 4226, 4226,
     4226, 4226, 4226, 4226, 4226, 4226, 4226, 4226, 4226, 4226,
     4226, 4226, 4226, 4226, 4226, 4226, 4226, 4226, 4226, 4226,

     4226, 4226, 4226, 4227, 4227, 4227, 4227,    0, 4227, 4227,
        0, 4227, 4227, 4227, 4227, 4227, 4227, 4227, 4228, 4228,
        0,    0,    0,    0,    0, 4228,    0,    0,    0,    0,
        0,    0,    0, 4228, 4228,    0, 4228, 4228, 4228, 4228,
     4228, 4228, 4228, 4228, 4229,    0,    0,    0, 4229,    0,
     4229, 4229,    0, 4229, 4229, 4229, 4229, 4229, 4229, 4229,
     4230, 4230, 4230, 4230, 4230, 4230, 4230, 4230, 4230, 4230,
     4230, 4230, 4230, 4230, 4230, 4230, 4230, 4230, 4230, 4230,
     4230, 4230, 4230, 4230, 4230, 4230, 4230, 4230, 4230, 4231,
     4231, 4231, 4231, 4231, 4231, 4231, 4231, 4231, 4231, 4231,

     4231, 4231, 4231, 4231, 4231, 4231, 4231, 4231, 4231, 4231,
     4231, 4231, 4231, 4231, 4231, 4231, 4231, 4231, 4232, 4232,
     4232, 4232, 4232, 4232, 4232, 4232, 4232,    0, 4232, 4232,
     4232, 4232, 4232, 4232, 4232, 4232, 4232, 4232, 4232, 4232,
     4232, 4232, 4232, 4232, 4232, 4232, 4232, 4233, 4233,    0,
        0,    0,    0,    0,    0,    0,    0, 4233, 4233, 4233,
     4233,    0, 4233, 4233,    0, 4233, 4233, 4233, 4233, 4233,
     4233, 4233, 4233, 4234, 4234,    0, 4234, 4234, 4234, 4234,
     4234, 4234, 4234, 4235, 4235, 4235, 4235, 4235, 4235, 4235,
     4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235,

     4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235, 4235,
     4235, 4235, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236,
     4236,    0, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236,
     4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236, 4236,
     4236, 4237, 4237, 4237, 4237, 4237, 4237, 4237, 4237, 4237,
        0, 4237, 4237, 4237, 4237, 4237, 4237, 4237, 4237, 4237,
     4237, 4237, 4237, 4237, 4237, 4237, 4237, 4237, 4237, 4237,
     4238, 4238, 4238, 4238, 4238, 4238, 4238, 4238, 4238,    0,
     4238, 4238, 4238, 4238, 4238, 4238, 4238, 4238, 4238, 4238,
     4238, 4238, 4238, 4238, 4238, 4238, 4238, 4238, 4238, 4239,

     4239, 4239, 4239, 4239, 4239, 4239, 4239, 4239,    0, 4239,
     4239, 4239, 4239, 4239, 4239, 4239, 4239, 4239, 4239, 4239,
     4239, 4239, 4239, 4239, 4239, 4239, 4239, 4239, 4240, 4240,
     4240, 4240, 4240, 4240, 4240, 4240, 4240,    0, 4240, 4240,
     4240, 4240, 4240, 4240, 4240, 4240, 4240, 4240, 4240, 4240,
     4240, 4240, 4240, 4240, 4240, 4240, 4240, 4241, 4241, 4241,
     4241, 4241, 4241, 4241, 4241, 4241, 4241, 4241, 4241, 4241,
     4241, 4241, 4241, 4241, 4241, 4241, 4241, 4241, 4241, 4241,
     4241, 4241, 4241, 4241, 4241, 4241, 4242, 4242, 4242, 4242,
     4242, 4242, 4242, 4242, 4242, 4242, 4242, 4242, 4242, 4242,

     4242, 4242, 4242, 4242, 4242, 4242, 4242, 4242, 4242, 4242,
     4242, 4242, 4242, 4242, 4242, 4243, 4243, 4243, 4243, 4243,
     4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243,
     4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243, 4243,
     4243, 4243, 4243, 4243, 4244, 4244, 4244, 4244, 4244, 4244,
     4244, 4244, 4244,    0, 4244, 4244, 4244, 4244, 4244, 4244,
     4244, 4244, 4244, 4244, 4244, 4244, 4244, 4244, 4244, 4244,
     4244, 4244, 4244, 4245, 4245, 4245, 4245, 4245, 4245, 4245,
     4245, 4245, 4245, 4245, 4245, 4245, 4245, 4245, 4245, 4245,
     4245, 4245, 4245, 4245, 4245, 4245, 4245, 4245, 4245, 4245,

     4245, 4245, 4246, 4246, 4246, 4246,    0, 4246, 4246,    0,
     4246, 4246, 4246, 4246, 4246, 4246, 4246, 4247, 4247, 4247,
     4247, 4247, 4247, 4247, 4247, 4247, 4247, 4247, 4247, 4247,
     4247, 4247, 4247, 4247, 4247, 4247, 4247, 4247, 4247, 4247,
     4247, 4247, 4247, 4247, 4247, 4247, 4248, 4248,    0, 4248,
     4248, 4248, 4248, 4248, 4248, 4248, 4249, 4249, 4249, 4249,
     4249, 4249, 4249, 4249, 4249,    0, 4249, 4249, 4249, 4249,
     4249, 4249, 4249, 4249, 4249, 4249, 4249, 4249, 4249, 4249,
     4249, 4249, 4249, 4249, 4249, 4250, 4250, 4250, 4250,    0,
     4250, 4250,    0, 4250, 4250, 4250, 4250, 4250, 4250, 4250,

     4251, 4251, 4251, 4251, 4251, 4251, 4251, 4251, 4251, 4251,
     4251, 4251, 4251, 4251, 4251, 4251, 4251, 4251, 4251, 4251,
     4251, 4251, 4251, 4251, 4251, 4251, 4251, 4251, 4251, 4252,
     4252, 4252, 4252, 4252, 4252, 4252, 4252, 4252, 4252, 4252,
        0, 4252,    0, 4252, 4252,    0,    0, 4252,    0,    0,
        0,    0,    0,    0,    0, 4252, 4252, 4252, 4253, 4253,
     4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253,
     4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253, 4253,
     4253, 4253, 4253, 4253, 4253, 4253, 4253, 4254, 4254, 4254,
     4254, 4254, 4254, 4254, 4254, 4254, 4254, 4254, 4254, 4254,

     4254, 4254, 4254, 4254, 4254, 4254, 4254, 4254, 4254, 4254,
     4254, 4254, 4254, 4254, 4254, 4254, 4255, 4255, 4255, 4255,
     4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255,
     4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255, 4255,
     4255, 4255, 4255, 4255, 4255, 4256, 4256, 4256, 4256, 4256,
     4256, 4256, 4256, 4256, 4256, 4256, 4256, 4256, 4256, 4256,
     4256, 4256, 4256, 4256, 4256, 4256, 4256, 4256, 4256, 4256,
     4256, 4256, 4256, 4256, 4257, 4257, 4257, 4257, 4257, 4257,
     4257, 4257, 4257, 4257, 4257,    0, 4257,    0, 4257, 4257,
        0,    0, 4257,    0,    0,    0,    0,    0,    0,    0,

     4257, 4257, 4257, 4258, 4258, 4258, 4258, 4258, 4258, 4258,
     4258, 4258,    0, 4258, 4258, 4258, 4258, 4258, 4258, 4258,
     4258, 4258, 4258, 4258, 4258, 4258, 4258, 4258, 4258, 4258,
     4258, 4258, 4259, 4259, 4259, 4259, 4259, 4259, 4259, 4259,
     4259, 4259, 4259,    0, 4259,    0, 4259, 4259,    0,    0,
     4259,    0,    0,    0,    0,    0,    0,    0, 4259, 4259,
     4259, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260,
     4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260,
     4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260, 4260,
     4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261,    0,

     4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261,
     4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261, 4261, 4262,
     4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262,
     4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262,
     4262, 4262, 4262, 4262, 4262, 4262, 4262, 4262, 4263, 4263,
        0,    0,    0,    0,    0,    0,    0,    0, 4263, 4263,
     4263, 4263,    0, 4263, 4263,    0, 4263, 4263, 4263, 4263,
     4263, 4263, 4263, 4263, 4264, 4264, 4264, 4264, 4264, 4264,
     4264, 4264, 4264, 4264, 4264, 4264, 4264, 4264, 4264, 4264,
     4264, 4264, 4264, 4264, 4264, 4264, 4264, 4264, 4264, 4264,

     4264, 4264, 4264, 4265, 4265, 4265, 4265, 4265, 4265, 4265,
     4265, 4265, 4265, 4265, 4265, 4265, 4265, 4265, 4265, 4265,
     4265, 4265, 4265, 4265, 4265, 4265, 4265, 4265, 4265, 4265,
     4265, 4265, 4266, 4266, 4266, 4266, 4266, 4266, 4266, 4266,
     4266,    0, 4266, 4266, 4266, 4266, 4266, 4266, 4266, 4266,
     4266, 4266, 4266, 4266, 4266, 4266, 4266, 4266, 4266, 4266,
     4266, 4267, 4267, 4267, 4267, 4267, 4267, 4267, 4267, 4267,
     4267, 4267,    0, 4267,    0, 4267, 4267,    0,    0, 4267,
        0,    0,    0,    0, 4267,    0,    0, 4267, 4267, 4267,
     4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268,

     4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268,
     4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4268, 4269,
     4269,    0,    0,    0,    0,    0,    0,    0,    0, 4269,
     4269, 4269,    0,    0, 4269, 4269,    0, 4269, 4269, 4269,
     4269, 4269, 4269, 4269, 4269, 4270, 4270,    0,    0,    0,
        0,    0, 4270,    0,    0,    0,    0,    0,    0,    0,
     4270, 4270,    0, 4270, 4270, 4270, 4270, 4270, 4270, 4270,
     4271, 4271, 4271, 4271, 4271, 4271, 4271, 4271, 4271,    0,
     4271, 4271, 4271, 4271, 4271, 4271, 4271, 4271, 4271, 4271,
     4271, 4271, 4271, 4271, 4271, 4271, 4271, 4271, 4271, 4272,

     4272, 4272, 4272, 4272, 4272, 4272, 4272, 4272, 4272, 4272,
        0, 4272,    0, 4272, 4272,    0,    0, 4272,    0,    0,
        0,    0, 4272,    0,    0, 4272, 4272, 4272, 4273, 4273,
     4273, 4273, 4273, 4273, 4273, 4273, 4273, 4273, 4273,    0,
     4273,    0, 4273, 4273,    0,    0, 4273,    0,    0,    0,
        0,    0,    0,    0, 4273, 4273, 4273, 4274, 4274, 4274,
     4274, 4274, 4274, 4274, 4274, 4274,    0, 4274, 4274, 4274,
     4274, 4274, 4274, 4274, 4274, 4274, 4274, 4274, 4274, 4274,
     4274, 4274, 4274, 4274, 4274, 4274, 4275, 4275, 4275, 4275,
     4275, 4275, 4275, 4275, 4275, 4275, 4275, 4275, 4275, 4275,

     4275, 4275, 4275, 4275, 4275, 4275, 4275, 4275, 4275, 4275,
     4275, 4275, 4275, 4275, 4275, 4276, 4276, 4276, 4276, 4276,
     4276, 4276, 4276, 4276, 4276, 4276, 4276, 4276, 4276, 4276,
     4276, 4276, 4276, 4276, 4276, 4276, 4276, 4276, 4276, 4276,
     4276, 4276, 4276, 4276, 4277, 4277, 4277, 4277, 4277, 4277,
     4277, 4277, 4277,    0, 4277, 4277, 4277, 4277, 4277, 4277,
     4277, 4277, 4277, 4277, 4277, 4277, 4277, 4277, 4277, 4277,
     4277, 4277, 4277, 4278, 4278, 4278, 4278, 4278, 4278, 4278,
     4278, 4278, 4278, 4278,    0, 4278,    0, 4278, 4278,    0,
        0, 4278,    0,    0,    0,    0,    0,    0,    0, 4278,

     4278, 4278, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279,
     4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279,
     4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279, 4279,
     4279, 4280, 4280, 4280, 4280,    0, 4280, 4280,    0, 4280,
     4280, 4280, 4280, 4280, 4280, 4280, 4281, 4281, 4281, 4281,
     4281, 4281, 4281, 4281, 4281, 4281, 4281,    0, 4281,    0,
     4281, 4281,    0,    0, 4281,    0,    0,    0,    0,    0,
        0,    0, 4281, 4281, 4281, 4282, 4282, 4282, 4282, 4282,
     4282, 4282, 4282, 4282, 4282, 4282, 4282, 4282, 4282, 4282,
     4282, 4282, 4282, 4282, 4282, 4282, 4282, 4282, 4282, 4282,

     4282, 4282, 4282, 4282, 4283, 4283, 4283, 4283,    0, 4283,
     4283,    0, 4283, 4283, 4283, 4283, 4283, 4283, 4283, 4284,
     4284, 4284, 4284, 4284, 4284, 4284, 4284, 4284,    0, 4284,
     4284, 4284, 4284, 4284, 4284, 4284, 4284, 4284, 4284, 4284,
     4284, 4284, 4284, 4284, 4284, 4284, 4284, 4284, 4285, 4285,
     4285, 4285, 4285, 4285, 4285, 4285, 4285, 4285, 4285,    0,
     4285,    0, 4285, 4285,    0,    0, 4285,    0,    0,    0,
        0,    0,    0,    0, 4285, 4285, 4285, 4286, 4286, 4286,
     4286, 4286, 4286, 4286, 4286, 4286, 4286, 4286, 4286, 4286,
     4286, 4286, 4286, 4286, 4286, 4286, 4286, 4286, 4286, 4286,

     4286, 4286, 4286, 4286, 4286, 4286, 4287, 4287, 4287, 4287,
     4287, 4287, 4287, 4287, 4287,    0, 4287, 4287, 4287, 4287,
     4287, 4287, 4287, 4287, 4287, 4287, 4287, 4287, 4287, 4287,
     4287, 4287, 4287, 4287, 4287, 4288, 4288, 4288, 4288, 4288,
     4288, 4288, 4288, 4288, 4288, 4288,    0, 4288,    0, 4288,
     4288,    0,    0, 4288,    0,    0,    0,    0,    0,    0,
        0, 4288, 4288, 4288, 4289, 4289, 4289, 4289, 4289, 4289,
     4289, 4289, 4289, 4289, 4289, 4289, 4289, 4289, 4289, 4289,
     4289, 4289, 4289, 4289, 4289, 4289, 4289, 4289, 4289, 4289,
     4289, 4289, 4289, 4290, 4290, 4290, 4290, 4290, 4290, 4290,

     4290, 4290,    0, 4290, 4290, 4290, 4290, 4290, 4290, 4290,
     4290, 4290, 4290, 4290, 4290, 4290, 4290, 4290, 4290, 4290,
     4290, 4290, 4291, 4291, 4291, 4291, 4291, 4291, 4291, 4291,
     4291, 4291, 4291,    0, 4291,    0, 4291, 4291,    0,    0,
     4291,    0,    0,    0,    0,    0,    0,    0, 4291, 4291,
     4291, 4292, 4292, 4292, 4292, 4292, 4292, 4292, 4292, 4292,
     4292, 4292,    0, 4292,    0, 4292, 4292,    0,    0, 4292,
        0,    0,    0,    0,    0,    0,    0, 4292, 4292, 4292,
     4293, 4293, 4293, 4293, 4293, 4293, 4293, 4293, 4293, 4293,
     4293, 4293, 4293, 4293, 4293, 4293, 4293, 4293, 4293, 4293,

     4293, 4293, 4293, 4293, 4293, 4293, 4293, 4293, 4293, 4294,
     4294, 4294, 4294, 4294, 4294, 4294, 4294, 4294, 4294, 4294,
     4294, 4294, 4294, 4294, 4294, 4294, 4294, 4294, 4294, 4294,
     4294, 4294, 4294, 4294, 4294, 4294, 4294, 4294, 4295, 4295,
     4295, 4295, 4295, 4295, 4295, 4295, 4295, 4295, 4295, 4295,
     4295, 4295, 4295, 4295, 4295, 4295, 4295, 4295, 4295, 4295,
     4295, 4295, 4295, 4295, 4295, 4295, 4295, 4296, 4296, 4296,
     4296, 4296, 4296, 4296, 4296, 4296,    0, 4296, 4296, 4296,
     4296, 4296, 4296, 4296, 4296, 4296, 4296, 4296, 4296, 4296,
     4296, 4296, 4296, 4296, 4296, 4296, 4297, 4297,    0,    0,

        0,    0,    0,    0,    0,    0, 4297, 4297, 4297, 4297,
        0, 4297, 4297,    0, 4297, 4297, 4297, 4297, 4297, 4297,
     4297, 4297, 4298, 4298,    0, 4298, 4298, 4298, 4298, 4298,
     4298, 4298, 4299, 4299, 4299, 4299, 4299, 4299, 4299, 4299,
     4299, 4299, 4299, 4299, 4299, 4299, 4299, 4299, 4299, 4299,
     4299, 4299, 4299, 4299, 4299, 4299, 4299, 4299, 4299, 4299,
     4299, 4300, 4300, 4300, 4300, 4300, 4300, 4300, 4300, 4300,
        0, 4300, 4300, 4300, 4300, 4300, 4300, 4300, 4300, 4300,
     4300, 4300, 4300, 4300, 4300, 4300, 4300, 4300, 4300, 4300,
     4301, 4301, 4301, 4301, 4301, 4301, 4301, 4301, 4301, 4301,

     4301,    0, 4301,    0, 4301, 4301,    0,    0, 4301,    0,
        0,    0,    0,    0,    0,    0, 4301, 4301, 4301, 4302,
     4302, 4302, 4302, 4302, 4302, 4302, 4302, 4302, 4302, 4302,
     4302, 4302, 4302, 4302, 4302, 4302, 4302, 4302, 4302, 4302,
     4302, 4302, 4302, 4302, 4302, 4302, 4302, 4302, 4303, 4303,
     4303, 4303, 4303, 4303, 4303, 4303, 4303, 4303, 4303, 4303,
     4303, 4303, 4303, 4303, 4303, 4303, 4303, 4303, 4303, 4303,
     4303, 4303, 4303, 4303, 4303, 4303, 4303, 4304, 4304,    0,
        0,    0,    0,    0,    0,    0,    0, 4304, 4304, 4304,
        0,    0, 4304, 4304,    0, 4304, 4304, 4304, 4304, 4304,

     4304, 4304, 4304, 4305, 4305, 4305, 4305, 4305, 4305, 4305,
     4305, 4305, 4305, 4305,    0, 4305,    0, 4305, 4305,    0,
        0, 4305,    0,    0,    0,    0,    0,    0,    0, 4305,
     4305, 4305, 4306, 4306, 4306, 4306, 4306, 4306, 4306, 4306,
     4306, 4306, 4306,    0, 4306,    0, 4306, 4306,    0,    0,
     4306,    0,    0,    0,    0,    0,    0,    0, 4306, 4306,
     4306, 4307, 4307, 4307, 4307, 4307, 4307, 4307, 4307, 4307,
        0, 4307, 4307, 4307, 4307, 4307, 4307, 4307, 4307, 4307,
     4307, 4307, 4307, 4307, 4307, 4307, 4307, 4307, 4307, 4307,
     4308, 4308, 4308, 4308, 4308, 4308, 4308, 4308, 4308, 4308,

     4308, 4308, 4308, 4308, 4308, 4308, 4308, 4308, 4308, 4308,
     4308, 4308, 4308, 4308, 4308, 4308, 4308, 4308, 4308, 4309,
     4309, 4309, 4309, 4309, 4309, 4309, 4309, 4309,    0, 4309,
     4309, 4309, 4309, 4309, 4309, 4309, 4309, 4309, 4309, 4309,
     4309, 4309, 4309, 4309, 4309, 4309, 4309, 4309, 4310, 4310,
     4310, 4310,    0, 4310, 4310,    0, 4310, 4310, 4310, 4310,
     4310, 4310, 4310, 4311, 4311, 4311, 4311, 4311, 4311, 4311,
     4311, 4311,    0, 4311, 4311, 4311, 4311, 4311, 4311, 4311,
     4311, 4311, 4311, 4311, 4311, 4311, 4311, 4311, 4311, 4311,
     4311, 4311, 4312, 4312, 4312, 4312,    0, 4312, 4312,    0,

     4312, 4312, 4312, 4312, 4312, 4312, 4312, 4313, 4313, 4313,
     4313, 4313, 4313, 4313, 4313, 4313,    0, 4313, 4313, 4313,
     4313, 4313, 4313, 4313, 4313, 4313, 4313, 4313, 4313, 4313,
     4313, 4313, 4313, 4313, 4313, 4313, 4314, 4314, 4314, 4314,
     4314, 4314, 4314, 4314, 4314, 4314, 4314,    0, 4314,    0,
     4314, 4314,    0,    0, 4314,    0,    0,    0,    0,    0,
        0,    0, 4314, 4314, 4314, 4315, 4315, 4315, 4315, 4315,
     4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315,
     4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315, 4315,
     4315, 4315, 4315, 4315, 4316, 4316, 4316, 4316, 4316, 4316,

     4316, 4316, 4316, 4316, 4316,    0, 4316,    0, 4316, 4316,
        0,    0, 4316,    0,    0,    0,    0,    0,    0,    0,
     4316, 4316, 4316, 4317, 4317,    0,    0,    0,    0,    0,
        0,    0,    0, 4317, 4317, 4317,    0,    0, 4317, 4317,
        0, 4317, 4317, 4317, 4317, 4317, 4317, 4317, 4317, 4318,
     4318,    0,    0,    0,    0,    0, 4318,    0,    0,    0,
        0,    0,    0,    0, 4318, 4318,    0, 4318, 4318, 4318,
     4318, 4318, 4318, 4318, 4319, 4319, 4319, 4319, 4319, 4319,
     4319, 4319, 4319, 4319, 4319,    0, 4319,    0, 4319, 4319,
        0,    0, 4319,    0,    0,    0,    0,    0,    0,    0,

     4319, 4319, 4319, 4320, 4320, 4320, 4320, 4320, 4320, 4320,
     4320, 4320, 4320, 4320,    0, 4320,    0, 4320, 4320,    0,
        0, 4320,    0,    0,    0,    0,    0,    0,    0, 4320,
     4320, 4320, 4321,    0,    0,    0,    0,    0, 4321, 4321,
        0, 4321, 4321, 4321, 4321, 4321, 4321, 4321, 4322, 4322,
     4322, 4322, 4322, 4322, 4322, 4322, 4322, 4322, 4322,    0,
     4322,    0, 4322, 4322,    0,    0, 4322,    0,    0,    0,
        0,    0,    0,    0, 4322, 4322, 4322, 4323, 4323, 4323,
     4323, 4323, 4323, 4323, 4323, 4323, 4323, 4323,    0, 4323,
        0, 4323, 4323,    0,    0, 4323,    0,    0,    0,    0,

        0,    0,    0, 4323, 4323, 4323, 4324, 4324, 4324, 4324,
     4324, 4324, 4324, 4324, 4324, 4324, 4324,    0, 4324,    0,
     4324, 4324,    0,    0, 4324,    0,    0,    0,    0,    0,
        0,    0, 4324, 4324, 4324, 4325, 4325, 4325, 4325, 4325,
     4325, 4325, 4325, 4325, 4325, 4325,    0, 4325,    0, 4325,
     4325,    0,    0, 4325,    0,    0,    0,    0,    0,    0,
        0, 4325, 4325, 4325, 4326, 4326, 4326, 4326, 4326, 4326,
     4326, 4326, 4326, 4326, 4326,    0, 4326,    0, 4326, 4326,
        0,    0, 4326,    0,    0,    0,    0,    0,    0,    0,
     4326, 4326, 4326, 4327, 4327, 4327, 4327, 4327, 4327, 4327,

     4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327,
     4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327, 4327,
     4327, 4327, 4328, 4328, 4328, 4328, 4328, 4328, 4328, 4328,
     4328, 4328, 4328,    0, 4328,    0, 4328, 4328,    0,    0,
     4328,    0,    0,    0,    0,    0,    0,    0, 4328, 4328,
     4328, 4329, 4329, 4329, 4329, 4329, 4329, 4329, 4329, 4329,
     4329, 4329,    0, 4329,    0, 4329, 4329,    0,    0, 4329,
        0,    0,    0,    0,    0,    0,    0, 4329, 4329, 4329,
     4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330,
     4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330,

     4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4330, 4331,
     4331, 4331, 4331, 4331, 4331, 4331, 4331, 4331, 4331, 4331,
        0, 4331,    0, 4331, 4331,    0,    0, 4331,    0,    0,
        0,    0,    0,    0,    0, 4331, 4331, 4331, 4332, 4332,
     4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332,
     4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332, 4332,
     4332, 4332, 4332, 4332, 4332, 4332, 4332, 4333, 4333, 4333,
     4333, 4333, 4333, 4333, 4333, 4333, 4333, 4333,    0, 4333,
        0, 4333, 4333,    0,    0, 4333,    0,    0,    0,    0,
        0,    0,    0, 4333, 4333, 4333, 4334, 4334, 4334, 4334,

     4334, 4334, 4334, 4334, 4334, 4334, 4334,    0, 4334,    0,
     4334, 4334,    0,    0, 4334,    0,    0,    0,    0,    0,
        0,    0, 4334, 4334, 4334, 4335, 4335, 4335, 4335, 4335,
     4335, 4335, 4335, 4335, 4335, 4335,    0, 4335,    0, 4335,
     4335,    0,    0, 4335,    0,    0,    0,    0,    0,    0,
        0, 4335, 4335, 4335, 4336, 4336, 4336, 4336, 4336, 4336,
     4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336,
     4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336, 4336,
     4336, 4336, 4336, 4337, 4337, 4337, 4337, 4337, 4337, 4337,
     4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337,

     4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337, 4337,
     4337, 4337, 4338, 4338, 4338, 4338, 4338, 4338, 4338, 4338,
     4338, 4338, 4338,    0, 4338,    0, 4338, 4338,    0,    0,
     4338,    0,    0,    0,    0,    0,    0,    0, 4338, 4338,
     4338, 4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339, 4339,
     4339, 4339,    0, 4339,    0, 4339, 4339,    0,    0, 4339,
        0,    0,    0,    0,    0,    0,    0, 4339, 4339, 4339,
     4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340,
     4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340,
     4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340, 4340, 4341,

     4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341,
     4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341,
     4341, 4341, 4341, 4341, 4341, 4341, 4341, 4341, 4342, 4342,
     4342, 4342, 4342, 4342, 4342, 4342, 4342, 4342, 4342,    0,
     4342,    0, 4342, 4342,    0,    0, 4342,    0,    0,    0,
        0,    0,    0,    0, 4342, 4342, 4342, 4343, 4343, 4343,
     4343, 4343, 4343, 4343, 4343, 4343, 4343, 4343,    0, 4343,
        0, 4343, 4343,    0,    0, 4343,    0,    0,    0,    0,
        0,    0,    0, 4343, 4343, 4343, 4344, 4344, 4344, 4344,
     4344, 4344, 4344, 4344, 4344, 4344, 4344,    0, 4344,    0,

     4344, 4344,    0,    0, 4344,    0,    0,    0,    0,    0,
        0,    0, 4344, 4344, 4344, 4345, 4345, 4345, 4345, 4345,
     4345, 4345, 4345, 4345, 4345, 4345,    0, 4345,    0, 4345,
     4345,    0,    0, 4345,    0,    0,    0,    0,    0,    0,
        0, 4345, 4345, 4345, 4346, 4346, 4346, 4346, 4346, 4346,
     4346, 4346, 4346, 4346, 4346,    0, 4346,    0, 4346, 4346,
        0,    0, 4346,    0,    0,    0,    0,    0,    0,    0,
     4346, 4346, 4346, 4347, 4347, 4347, 4347, 4347, 4347, 4347,
     4347, 4347, 4347, 4347,    0, 4347,    0, 4347, 4347,    0,
        0, 4347,    0,    0,    0,    0,    0,    0,    0, 4347,

     4347, 4347, 4348, 4348, 4348, 4348, 4348, 4348, 4348, 4348,
     4348, 4348, 4348,    0, 4348,    0, 4348, 4348,    0,    0,
     4348,    0,    0,    0,    0,    0,    0,    0, 4348, 4348,
     4348, 4349, 4349, 4349, 4349, 4349, 4349, 4349, 4349, 4349,
     4349, 4349,    0, 4349,    0, 4349, 4349,    0,    0, 4349,
        0,    0,    0,    0,    0,    0,    0, 4349, 4349, 4349,
     4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350, 4350,
     4350,    0, 4350,    0, 4350, 4350,    0,    0, 4350,    0,
        0,    0,    0,    0,    0,    0, 4350, 4350, 4350, 4351,
     4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351, 4351,

        0, 4351,    0, 4351, 4351,    0,    0, 4351,    0,    0,
        0,    0,    0,    0,    0, 4351, 4351, 4351, 4352, 4352,
     4352, 4352, 4352, 4352, 4352, 4352, 4352, 4352, 4352,    0,
     4352,    0, 4352, 4352,    0,    0, 4352,    0,    0,    0,
        0,    0,    0,    0, 4352, 4352, 4352, 4353, 4353, 4353,
     4353, 4353, 4353, 4353, 4353, 4353, 4353, 4353,    0, 4353,
        0, 4353, 4353,    0,    0, 4353,    0,    0,    0,    0,
        0,    0,    0, 4353, 4353, 4353, 4354, 4354, 4354, 4354,
     4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354,
     4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354, 4354,

     4354, 4354, 4354, 4354, 4354, 4355, 4355, 4355, 4355, 4355,
     4355, 4355, 4355, 4355, 4355, 4355,    0, 4355,    0, 4355,
     4355,    0,    0, 4355,    0,    0,    0,    0,    0,    0,
        0, 4355, 4355, 4355, 4356, 4356, 4356, 4356, 4356, 4356,
     4356, 4356, 4356, 4356, 4356,    0, 4356,    0, 4356, 4356,
        0,    0, 4356,    0,    0,    0,    0,    0,    0,    0,
     4356, 4356, 4356, 4357, 4357, 4357, 4357, 4357, 4357, 4357,
     4357, 4357, 4357, 4357,    0, 4357,    0, 4357, 4357,    0,
        0, 4357,    0,    0,    0,    0,    0,    0,    0, 4357,
     4357, 4357, 4358, 4358, 4358, 4358, 4358, 4358, 4358, 4358,

     4358, 4358, 4358,    0, 4358,    0, 4358, 4358,    0,    0,
     4358,    0,    0,    0,    0,    0,    0,    0, 4358, 4358,
     4358, 4359, 4359, 4359, 4359, 4359, 4359, 4359, 4359, 4359,
     4359, 4359,    0, 4359,    0, 4359, 4359,    0,    0, 4359,
        0,    0,    0,    0,    0,    0,    0, 4359, 4359, 4359,
     4360,    0,    0,    0, 4360,    0, 4360, 4360,    0, 4360,
     4360, 4360, 4360, 4360, 4360, 4360, 4361, 4361, 4361, 4361,
     4361, 4361, 4361, 4361, 4361, 4361, 4361, 4361, 4361, 4361,
     4361, 4361, 4361, 4361, 4361, 4361, 4361, 4361, 4361, 4361,
     4361, 4361, 4361, 4361, 4361, 4362, 4362, 4362, 4362, 4362,

     4362, 4362, 4362, 4362, 4362, 4362,    0, 4362,    0, 4362,
     4362,    0,    0, 4362,    0,    0,    0,    0,    0,    0,
        0, 4362, 4362, 4362, 4363, 4363, 4363, 4363, 4363, 4363,
     4363, 4363, 4363, 4363, 4363,    0, 4363,    0, 4363, 4363,
        0,    0, 4363,    0,    0,    0,    0,    0,    0,    0,
     4363, 4363, 4363, 4364, 4364, 4364, 4364, 4364, 4364, 4364,
     4364, 4364, 4364, 4364, 4364, 4364, 4364, 4364, 4364, 4364,
     4364, 4364, 4364, 4364, 4364, 4364, 4364, 4364, 4364, 4364,
     4364, 4364, 4365, 4365, 4365, 4365, 4365, 4365, 4365, 4365,
     4365, 4365, 4365,    0, 4365,    0, 4365, 4365,    0,    0,

     4365,    0,    0,    0,    0,    0,    0,    0, 4365, 4365,
     4365, 4366, 4366, 4366, 4366, 4366, 4366, 4366, 4366, 4366,
     4366, 4366,    0, 4366,    0, 4366, 4366,    0,    0, 4366,
        0,    0,    0,    0,    0,    0,    0, 4366, 4366, 4366,
     4367, 4367, 4367, 4367, 4367, 4367, 4367, 4367, 4367, 4367,
     4367, 4367, 4367, 4367, 4367, 4367, 4367, 4367, 4367, 4367,
     4367, 4367, 4367, 4367, 4367, 4367, 4367, 4367, 4367, 4368,
     4368, 4368, 4368, 4368, 4368, 4368, 4368, 4368, 4368, 4368,
     4368, 4368, 4368, 4368, 4368, 4368, 4368, 4368, 4368, 4368,
     4368, 4368, 4368, 4368, 4368, 4368, 4368, 4368, 4369, 4369,

     4369, 4369, 4369, 4369, 4369, 4369, 4369, 4369, 4369, 4369,
     4369, 4369, 4369, 4369, 4369, 4369, 4369, 4369, 4369, 4369,
     4369, 4369, 4369, 4369, 4369, 4369, 4369, 4370, 4370, 4370,
     4370, 4370, 4370, 4370, 4370, 4370, 4370, 4370, 4370, 4370,
     4370, 4370, 4370, 4370, 4370, 4370, 4370, 4370, 4370, 4370,
     4370, 4370, 4370, 4370, 4370, 4370, 4371, 4371, 4371, 4371,
     4371, 4371, 4371, 4371, 4371, 4371, 4371, 4371, 4371, 4371,
     4371, 4371, 4371, 4371, 4371, 4371, 4371, 4371, 4371, 4371,
     4371, 4371, 4371, 4371, 4371, 4372, 4372, 4372, 4372, 4372,
     4372, 4372, 4372, 4372, 4372, 4372,    0, 4372,    0, 4372,

     4372,    0,    0, 4372,    0,    0,    0,    0,    0,    0,
        0, 4372, 4372, 4372, 4373, 4373, 4373, 4373, 4373, 4373,
     4373, 4373, 4373, 4373, 4373,    0, 4373,    0, 4373, 4373,
        0,    0, 4373,    0,    0,    0,    0,    0,    0,    0,
     4373, 4373, 4373, 4374, 4374, 4374, 4374, 4374, 4374, 4374,
     4374, 4374, 4374, 4374,    0, 4374,    0, 4374, 4374,    0,
        0, 4374,    0,    0,    0,    0,    0,    0,    0, 4374,
     4374, 4374, 4375, 4375, 4375, 4375, 4375, 4375, 4375, 4375,
     4375, 4375, 4375,    0, 4375,    0, 4375, 4375,    0,    0,
     4375,    0,    0,    0,    0,    0,    0,    0, 4375, 4375,

     4375, 4376, 4376, 4376, 4376, 4376, 4376, 4376, 4376, 4376,
     4376, 4376, 4376, 4376, 4376, 4376, 4376, 4376, 4376, 4376,
     4376, 4376, 4376, 4376, 4376, 4376, 4376, 4376, 4376, 4376,
     4377, 4377, 4377, 4377, 4377, 4377, 4377, 4377, 4377, 4377,
     4377,    0, 4377,    0, 4377, 4377,    0,    0, 4377,    0,
        0,    0,    0,    0,    0,    0, 4377, 4377, 4377, 4378,
     4378, 4378, 4378, 4378, 4378, 4378, 4378, 4378, 4378, 4378,
     4378, 4378, 4378, 4378, 4378, 4378, 4378, 4378, 4378, 4378,
     4378, 4378, 4378, 4378, 4378, 4378, 4378, 4378, 4379, 4379,
     4379, 4379, 4379, 4379, 4379, 4379, 4379, 4379, 4379, 4379,

     4379, 4379, 4379, 4379, 4379, 4379, 4379, 4379, 4379, 4379,
     4379, 4379, 4379, 4379, 4379, 4379, 4379, 4380, 4380, 4380,
     4380, 4380, 4380, 4380, 4380, 4380, 4380, 4380, 4380, 4380,
     4380, 4380, 4380, 4380, 4380, 4380, 4380, 4380, 4380, 4380,
     4380, 4380, 4380, 4380, 4380, 4380, 4381, 4381, 4381, 4381,
     4381, 4381, 4381, 4381, 4381, 4381, 4381,    0, 4381,    0,
     4381, 4381,    0,    0, 4381,    0,    0,    0,    0,    0,
        0,    0, 4381, 4381, 4381, 4382, 4382, 4382, 4382, 4382,
     4382, 4382, 4382, 4382, 4382, 4382,    0, 4382,    0, 4382,
     4382,    0,    0, 4382,    0,    0,    0,    0,    0,    0,

        0, 4382, 4382, 4382, 4383, 4383, 4383, 4383, 4383, 4383,
     4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383,
     4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383, 4383,
     4383, 4383, 4383, 4384, 4384, 4384, 4384, 4384, 4384, 4384,
     4384, 4384, 4384, 4384, 4384, 4384, 4384, 4384, 4384, 4384,
     4384, 4384, 4384, 4384, 4384, 4384, 4384, 4384, 4384, 4384,
     4384, 4384, 4385, 4385, 4385, 4385, 4385, 4385, 4385, 4385,
     4385, 4385, 4385,    0, 4385,    0, 4385, 4385,    0,    0,
     4385,    0,    0,    0,    0,    0,    0,    0, 4385, 4385,
     4385, 4386, 4386, 4386, 4386, 4386, 4386, 4386, 4386, 4386,

     4386, 4386,    0, 4386,    0, 4386, 4386,    0,    0, 4386,
        0,    0,    0,    0,    0,    0,    0, 4386, 4386, 4386,
     4387, 4387, 4387, 4387, 4387, 4387, 4387, 4387, 4387, 4387,
     4387, 4387, 4387, 4387, 4387, 4387, 4387, 4387, 4387, 4387,
     4387, 4387, 4387, 4387, 4387, 4387, 4387, 4387, 4387, 4388,
     4388,    0,    0,    0,    0,    0, 4388,    0,    0,    0,
        0,    0,    0,    0, 4388, 4388,    0, 4388, 4388, 4388,
     4388, 4388, 4388, 4388, 4388, 4389, 4389, 4389, 4389, 4389,
     4389, 4389, 4389, 4389, 4389, 4389,    0, 4389,    0, 4389,
     4389,    0,    0, 4389,    0,    0,    0,    0,    0,    0,

        0, 4389, 4389, 4389, 4390, 4390, 4390, 4390, 4390, 4390,
     4390, 4390, 4390, 4390, 4390,    0, 4390,    0, 4390, 4390,
        0,    0, 4390,    0,    0,    0,    0,    0,    0,    0,
     4390, 4390, 4390, 4391, 4391, 4391, 4391, 4391, 4391, 4391,
     4391, 4391, 4391, 4391, 4391, 4391, 4391, 4391, 4391, 4391,
     4391, 4391, 4391, 4391, 4391, 4391, 4391, 4391, 4391, 4391,
     4391, 4391, 4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392,
     4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392,
     4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392, 4392,
     4392, 4393, 4393, 4393, 4393, 4393, 4393, 4393, 4393, 4393,

     4393, 4393, 4393, 4393, 4393, 4393, 4393, 4393, 4393, 4393,
     4393, 4393, 4393, 4393, 4393, 4393, 4393, 4393, 4393, 4393,
     4394, 4394, 4394, 4394, 4394, 4394, 4394, 4394, 4394, 4394,
     4394, 4394, 4394, 4394, 4394, 4394, 4394, 4394, 4394, 4394,
     4394, 4394, 4394, 4394, 4394, 4394, 4394, 4394, 4394, 4395,
     4395, 4395, 4395, 4395, 4395, 4395, 4395, 4395, 4395, 4395,
     4395, 4395, 4395, 4395, 4395, 4395, 4395, 4395, 4395, 4395,
     4395, 4395, 4395, 4395, 4395, 4395, 4395, 4395, 4396, 4396,
     4396, 4396, 4396, 4396, 4396, 4396, 4396, 4396, 4396, 4396,
     4396, 4396, 4396, 4396, 4396, 4396, 4396, 4396, 4396, 4396,

     4396, 4396, 4396, 4396, 4396, 4396, 4396, 4397, 4397, 4397,
     4397, 4397, 4397, 4397, 4397, 4397, 4397, 4397, 4397, 4397,
     4397, 4397, 4397, 4397, 4397, 4397, 4397, 4397, 4397, 4397,
     4397, 4397, 4397, 4397, 4397, 4397, 4398, 4398, 4398, 4398,
     4398, 4398, 4398, 4398, 4398, 4398, 4398, 4398, 4398, 4398,
     4398, 4398, 4398, 4398, 4398, 4398, 4398, 4398, 4398, 4398,
     4398, 4398, 4398, 4398, 4398, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,

     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775, 3775,
     3775, 3775, 3775, 3775, 3775
    } ;

static yyconst flex_int16_t yy_rule_linenum[508] =
    {   0,
      325,  329,  334,  339,  343,  348,  353,  357,  362,  367,
      372,  377,  382,  387,  397,  401,  407,  412,  416,  420,
      424,  429,  434,  439,  442,  445,  448,  455,  460,  465,
      470,  475,  480,  485,  490,  498,  509,  512,  515,  518,
      521,  524,  527,  530,  533,  536,  539,  542,  545,  548,
      551,  554,  557,  560,  568,  571,  577,  580,  586,  589,
      595,  600,  605,  610,  615,  620,  625,  630,  635,  640,
      648,  653,  658,  663,  671,  676,  681,  686,  691,  699,
      704,  709,  714,  719,  724,  729,  738,  746,  754,  760,
      765,  773,  781,  788,  796,  804,  812,  820,  827,  832,

      837,  847,  856,  859,  862,  865,  868,  871,  874,  877,
      880,  883,  886,  889,  892,  895,  898,  901,  904,  907,
      910,  913,  916,  919,  922,  925,  928,  931,  934,  937,
      940,  943,  946,  949,  952,  955,  958,  961,  964,  967,
      970,  973,  976,  979,  982,  985,  988,  991,  994,  997,
     1000, 1003, 1007, 1012, 1047, 1051, 1055, 1059, 1063, 1067,
     1071, 1077, 1081, 1085, 1089, 1093, 1097, 1127, 1132, 1137,
     1142, 1147, 1189, 1194, 1198, 1236, 1241, 1279, 1284, 1289,
     1331, 1335, 1340, 1344, 1348, 1352, 1356, 1360, 1369, 1375,
     1379, 1383, 1387, 1391, 1395, 1399, 1403, 1407, 1411, 1415,

     1419, 1423, 1427, 1431, 1435, 1442, 1446, 1450, 1454, 1458,
     1462, 1466, 1470, 1474, 1478, 1482, 1486, 1490, 1494, 1498,
     1502, 1506, 1510, 1514, 1518, 1522, 1526, 1530, 1534, 1538,
     1542, 1546, 1556, 1560, 1568, 1572, 1576, 1581, 1586, 1591,
     1607, 1611, 1615, 1619, 1623, 1631, 1638, 1645, 1653, 1661,
     1664, 1667, 1670, 1673, 1676, 1679, 1682, 1685, 1698, 1703,
     1707, 1711, 1715, 1719, 1723, 1727, 1731, 1735, 1739, 1743,
     1751, 1754, 1757, 1760, 1763, 1766, 1769, 1772, 1775, 1778,
     1781, 1784, 1787, 1790, 1793, 1796, 1799, 1802, 1805, 1808,
     1811, 1814, 1817, 1820, 1823, 1826, 1829, 1832, 1835, 1838,

     1841, 1844, 1847, 1850, 1853, 1856, 1859, 1862, 1865, 1868,
     1873, 1877, 1917, 1924, 1928, 1932, 1970, 1974, 1981, 1985,
     1989, 1993, 1997, 2001, 2005, 2043, 2082, 2087, 2094, 2099,
     2106, 2113, 2117, 2121, 2125, 2129, 2133, 2175, 2180, 2187,
     2191, 2195, 2239, 2246, 2250, 2254, 2303, 2308, 2315, 2321,
     2326, 2331, 2336, 2341, 2346, 2351, 2356, 2363, 2368, 2375,
     2382, 2387, 2392, 2399, 2406, 2411, 2416, 2421, 2426, 2431,
     2436, 2441, 2446, 2451, 2456, 2461, 2466, 2471, 2476, 2481,
     2486, 2491, 2496, 2501, 2506, 2511, 2516, 2521, 2526, 2531,
     2536, 2541, 2546, 2551, 2556, 2561, 2566, 2571, 2576, 2581,

     2586, 2591, 2596, 2601, 2608, 2613, 2620, 2624, 2628, 2632,
     2636, 2641, 2647, 2651, 2698, 2705, 2710, 2717, 2723, 2730,
     2735, 2742, 2746, 2793, 2801, 2807, 2811, 2815, 2819, 2857,
     2864, 2871, 2878, 2884, 2888, 2892, 2942, 2947, 2952, 2959,
     2965, 2970, 3018, 3023, 3027, 3073, 3078, 3083, 3087, 3133,
     3138, 3190, 3197, 3201, 3205, 3255, 3262, 3269, 3276, 3283,
     3290, 3294, 3298, 3347, 3354, 3361, 3368, 3375, 3382, 3389,
     3393, 3397, 3401, 3405, 3411, 3458, 3465, 3471, 3512, 3519,
     3523, 3569, 3575, 3579, 3630, 3637, 3644, 3691, 3734, 3741,
     3794, 3801, 3808, 3812, 3816, 3820, 3824, 3828, 3881, 3888,

     3895, 3899, 3903, 3907, 3911, 3915, 3943
    } ;

#define YY_TRAILING_MASK 0x2000
#define YY_TRAILING_HEAD_MASK 0x4000
#define REJECT \
{ \
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \
yy_cp = (yy_full_match); /* restore poss. backed-over text */ \
(yy_lp) = (yy_full_lp); /* restore orig. accepting pos. */ \
(yy_state_ptr) = (yy_full_state); /* restore orig. state */ \
yy_current_state = *(yy_state_ptr); /* restore curr. state */ \
++(yy_lp); \
goto find_rule; \
}

#define yymore() ((yy_more_flag) = 1)
#define YY_MORE_ADJ (yy_more_len)
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
/*
 * Copyright 2006-2008 The FLWOR Foundation.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#line 17 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"

#if defined (WIN32)
#pragma warning(disable: 4786)
#endif

#include "zorbatypes/representations.h"

#include "common/common.h"
#include "util/properties.h"

#include <cstdlib>
#include <errno.h>
#include <limits.h>
#include <iostream>
#include <string>

using namespace std;

#include "compiler/parser/xquery_parser.hpp"
#include "compiler/parser/xquery_scanner.h"
#include "compiler/parser/xquery_driver.h"

typedef zorba::xquery_parser::token token;
typedef zorba::xquery_parser::token_type token_type;

#define PUSH_STATE(state) \
    do { \
        yy_push_state(state); \
        getDriver()->push_state_stack(); \
    } while(0)

#define POP_STATE() \
    do { \
        yy_pop_state(); \
        getDriver()->pop_state_stack(); \
    } while(0)

#define PUSH_AND_BEGIN( pushed, new ) \
    do { \
        BEGIN new; \
        PUSH_STATE(pushed); \
    } while(0)

#define TRY_SVAL_TOKEN( ttype, put )                                    \
  do {                                                                  \
    off_t res = getDriver()->symtab.put;                                \
    if (res < 0) return token::UNRECOGNIZED;                            \
    else {                                                              \
      yylval->sval = res;                                               \
      return token::ttype;                                              \
    }                                                                   \
  } while (0)

#define TRY_STR_LIT( ttype, put, yytext, yyleng ) \
  TRY_SVAL_TOKEN (ttype, put (yytext, yyleng))

#define TRY_STRINGLIT( ttype, yytext, yyleng ) \
  TRY_STR_LIT (ttype, put_stringlit, yytext, yyleng)

#define TRY_URILIT( ttype, yytext, yyleng ) \
  TRY_STR_LIT (ttype, put_uri, yytext, yyleng)

/*
  Work around an incompatibility in flex (at least versions
  2.5.31 through 2.5.33): it generates code that does
  not conform to C89.  See Debian bug 333231
  <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=333231>.
*/
#undef yywrap
#define yywrap() 1

/*
  By default yylex returns int, we use token_type.
  Unfortunately yyterminate by default returns 0, which is
  not of token_type.
*/
#define yyterminate() return token::END

std::string start_state(int);

#define YY_USER_ACTION \
{ \
  if (yy_flex_debug) { \
    std::cout<<'<'<<start_state(YY_START)<<">" /* << " [["<<yytext<<"]]" */ << std::endl; \
  } \
  \
  int last_endl = 0;\
  for (int i=0; i<yyleng; i++) \
    if (yytext[i] == '\n')  \
    { \
      yylloc->lines(1);\
      last_endl = i+1;\
    }\
  \
  yylloc->step();\
  yylloc->columns(yyleng - last_endl);\
}


/*______________________________________________________________________
*                                                                      *
*  Scanner options                                                     *
*______________________________________________________________________*/
/* %option case-insensitive */
/* %option nostdinit */
/* %option reentrant */
#define YY_NO_UNISTD_H 1
/*_____________________________________________________________________
|
|  Whitespace definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Basic character classes
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  XQuery allows '' to escape ', and "" to escape ".
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  NCName definition
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  QName definition
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  VarName definition
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Entity definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Numeric literal definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  String literal definitions
|______________________________________________________________________*/
/*_____________________________________________________________________
|
|  Content character definitions
|______________________________________________________________________*/
/*
NonXChar  [\x09\x0A\x0D\x20A-WY-Za-wy-z\x7B-\xFD]
NonMChar  [\x09\x0A\x0D\x20A-LN-Za-ln-z\x7B-\xFD]
NonLChar  [\x09\x0A\x0D\x20A-KM-Za-km-z\x7B-\xFD]
PITarget  (({NonXChar}{Char}*)|((X|x){NonMChar}{Char}*)|((X|x)(M|m){NonLChar}*)|({Char}{Char}{Char}{Char}+))
*/
/*______________________________________________________________________
|
|  Exclusive start states
|______________________________________________________________________*/




























/* Update Modes */

/* Try-Catch Modes */

/*
  The macro YY_USER_ACTION can be defined to provide an action which is
  always executed prior to the matched rule's action.

  The following paragraph suffices to track locations accurately. Each
  time yylex is invoked, the begin position is moved onto the end
  position. Then when a pattern is matched, the end position is advanced
  of its width. In case it matched ends of lines, the end cursor is
  adjusted, and each time blanks are matched, the begin cursor is moved
  onto the end cursor to effectively ignore the blanks preceding tokens.
  Comments would be treated equally.
*/
#line 7659 "xquery_scanner.yy.cpp"

#define INITIAL 0
#define MODE_APOS_ATTRIBUTE_CONTENT 1
#define MODE_CDATA_SECTION 2
#define MODE_CLOSE_KINDTEST 3
#define MODE_DECLAREORDERING 4
#define MODE_ELEMENT_CONTENT 5
#define MODE_END_TAG 6
#define MODE_EXPR_COMMENT 7
#define MODE_ITEMTYPE 8
#define MODE_KINDTEST 9
#define MODE_KINDTESTFORPI 10
#define MODE_NAMESPACEDECL 11
#define MODE_NAMESPACEKEYWORD 12
#define MODE_OCCURRENCE_INDICATOR 13
#define MODE_OPERATOR 14
#define MODE_OPTION 15
#define MODE_PRAGMA 16
#define MODE_PRAGMACONTENTS 17
#define MODE_PROCESSING_INSTRUCTION_CTOR 18
#define MODE_PROCESSING_INSTRUCTION 19
#define MODE_PROCESSING_INSTRUCTION_CONTENT 20
#define MODE_QUOTE_ATTRIBUTE_CONTENT 21
#define MODE_SINGLETYPE 22
#define MODE_START_TAG 23
#define MODE_URITOOPERATOR 24
#define MODE_VARNAME 25
#define MODE_XMLSPACE_DECL 26
#define MODE_XML_COMMENT 27
#define MODE_XQUERY_VERSION 28
#define MODE_DECLAREREVALIDATION 29
#define MODE_CATCH 30

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#include <unistd.h>
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */
/* %if-c-only */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %if-bison-bridge */
/* %endif */
/* %endif End reentrant structures and macros. */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define ECHO LexerOutput( yytext, yyleng )
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
\
/* %if-c++-only C++ definition \ */\
	if ( (result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#define YY_FATAL_ERROR(msg) LexerError( msg )
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %ok-for-header */

/* %not-for-header */

/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define YY_DECL int yyFlexLexer::yylex()
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    
/* %% [7.0] user's declarations go here */
#line 305 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"



typedef zorba::xquery_parser::token token;



  /*______________________________________________________________________
   |
   |  INITIAL State
   |
   |  This state is for patterns that occur at the beginning  of an
   |  expression or subexpression.
   |______________________________________________________________________*/

  /* <MODE_INITIAL> */

  /* maintain INITIAL */
  /* ---------------- */

#line 7867 "xquery_scanner.yy.cpp"

	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

        /* Create the reject buffer large enough to save one state per allowed character. */
        if ( ! (yy_state_buf) )
            (yy_state_buf) = (yy_state_type *)Zorbaalloc(YY_STATE_BUF_SIZE  );
            if ( ! (yy_state_buf) )
                YY_FATAL_ERROR( "out of dynamic memory in yylex()" );

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyin = & std::cin;
/* %endif */

		if ( ! yyout )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyout = & std::cout;
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		(yy_more_len) = 0;
		if ( (yy_more_flag) )
			{
			(yy_more_len) = (yy_c_buf_p) - (yytext_ptr);
			(yy_more_flag) = 0;
			}
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = (yy_start);

		(yy_state_ptr) = (yy_state_buf);
		*(yy_state_ptr)++ = yy_current_state;

yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 3776 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			*(yy_state_ptr)++ = yy_current_state;
			++yy_cp;
			}
		while ( yy_current_state != 3775 );

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_current_state = *--(yy_state_ptr);
		(yy_lp) = yy_accept[yy_current_state];
find_rule: /* we branch to this label when backing up */
		for ( ; ; ) /* until we find what rule we matched */
			{
			if ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )
				{
				yy_act = yy_acclist[(yy_lp)];
				if ( yy_act & YY_TRAILING_HEAD_MASK ||
				     (yy_looking_for_trail_begin) )
					{
					if ( yy_act == (yy_looking_for_trail_begin) )
						{
						(yy_looking_for_trail_begin) = 0;
						yy_act &= ~YY_TRAILING_HEAD_MASK;
						break;
						}
					}
				else if ( yy_act & YY_TRAILING_MASK )
					{
					(yy_looking_for_trail_begin) = yy_act & ~YY_TRAILING_MASK;
					(yy_looking_for_trail_begin) |= YY_TRAILING_HEAD_MASK;
					}
				else
					{
					(yy_full_match) = yy_cp;
					(yy_full_state) = (yy_state_ptr);
					(yy_full_lp) = (yy_lp);
					break;
					}
				++(yy_lp);
				goto find_rule;
				}
			--yy_cp;
			yy_current_state = *--(yy_state_ptr);
			(yy_lp) = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				std::cerr << "--scanner backing up\n";
			else if ( yy_act < 508 )
				std::cerr << "--accepting rule at line " << yy_rule_linenum[yy_act] <<
				         "(\"" << yytext << "\")\n";
			else if ( yy_act == 508 )
				std::cerr << "--accepting default rule (\"" << yytext << "\")\n";
			else if ( yy_act == 509 )
				std::cerr << "--(end of buffer or a NUL)\n";
			else
				std::cerr << "--EOF (start condition " << YY_START << ")\n";
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
case 1:
/* rule 1 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 325 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::EXIT_WITH;
}
	YY_BREAK
case 2:
/* rule 2 can match eol */
YY_RULE_SETUP
#line 329 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN (MODE_OPERATOR);
  return token::BREAK_LOOP;
}
	YY_BREAK
case 3:
/* rule 3 can match eol */
YY_RULE_SETUP
#line 334 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN (MODE_OPERATOR);
  return token::CONT_LOOP;
}
	YY_BREAK
case 4:
/* rule 4 can match eol */
YY_RULE_SETUP
#line 339 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WHILE_LPAR;
}
	YY_BREAK
case 5:
/* rule 5 can match eol */
YY_RULE_SETUP
#line 343 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::VALIDATE_LBRACE;
}
	YY_BREAK
case 6:
/* rule 6 can match eol */
YY_RULE_SETUP
#line 348 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  TRY_SVAL_TOKEN (VALIDATE_MODE, put(yytext+9, yyleng-9));
}
	YY_BREAK
case 7:
/* rule 7 can match eol */
YY_RULE_SETUP
#line 353 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::TYPESWITCH_LPAR;
}
	YY_BREAK
case 8:
/* rule 8 can match eol */
YY_RULE_SETUP
#line 357 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, INITIAL);
  return token::EVAL_LBRACE;
}
	YY_BREAK
case 9:
/* rule 9 can match eol */
YY_RULE_SETUP
#line 362 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::ELEMENT_LBRACE;
}
	YY_BREAK
case 10:
/* rule 10 can match eol */
YY_RULE_SETUP
#line 367 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::ATTRIBUTE_LBRACE;
}
	YY_BREAK
case 11:
/* rule 11 can match eol */
YY_RULE_SETUP
#line 372 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  TRY_SVAL_TOKEN (ATTRIBUTE_QNAME_LBRACE, put_qname(yytext+10, yyleng-11, true, true));
}
	YY_BREAK
case 12:
/* rule 12 can match eol */
YY_RULE_SETUP
#line 377 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  TRY_SVAL_TOKEN (ELEMENT_QNAME_LBRACE, put_qname(yytext+8, yyleng-9, true, true));
}
	YY_BREAK
case 13:
/* rule 13 can match eol */
YY_RULE_SETUP
#line 382 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::DOCUMENT_LBRACE;
}
	YY_BREAK
case 14:
/* rule 14 can match eol */
YY_RULE_SETUP
#line 387 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::TEXT_LBRACE;
}
	YY_BREAK
/* transition to MODE_PROCESSING_INSTRUCTION_CTOR */
/* ---------------------------------------------- */
/* TODO: fix 'if (1) then 2 else processing-instruction' */
case 15:
/* rule 15 can match eol */
YY_RULE_SETUP
#line 397 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PROCESSING_INSTRUCTION_CTOR;
  return token::PROCESSING_INSTRUCTION;
}
	YY_BREAK
case 16:
/* rule 16 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 401 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PROCESSING_INSTRUCTION_CTOR;
  return token::PROCESSING_INSTRUCTION;
}
	YY_BREAK
case 17:
/* rule 17 can match eol */
YY_RULE_SETUP
#line 407 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::COMMENT_LBRACE;
}
	YY_BREAK
case 18:
/* rule 18 can match eol */
YY_RULE_SETUP
#line 412 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DECLARE_FUNCTION;
}
	YY_BREAK
case 19:
/* rule 19 can match eol */
YY_RULE_SETUP
#line 416 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DECLARE_UPDATING_FUNCTION;
}
	YY_BREAK
case 20:
/* rule 20 can match eol */
YY_RULE_SETUP
#line 420 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DECLARE_SEQ_FUNCTION;
}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 424 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::LBRACE;
}
	YY_BREAK
case 22:
/* rule 22 can match eol */
YY_RULE_SETUP
#line 429 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::ORDERED_LBRACE;
}
	YY_BREAK
case 23:
/* rule 23 can match eol */
YY_RULE_SETUP
#line 434 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::UNORDERED_LBRACE;
}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 439 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SEMI;
}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 442 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::COMMA;
}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 445 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::LPAR;
}
	YY_BREAK
case 27:
/* rule 27 can match eol */
YY_RULE_SETUP
#line 448 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::IF_LPAR;
}
	YY_BREAK
/* transition to KINDTEST */
/* ---------------------- */
case 28:
/* rule 28 can match eol */
YY_RULE_SETUP
#line 455 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::ELEMENT_LPAR;
}
	YY_BREAK
case 29:
/* rule 29 can match eol */
YY_RULE_SETUP
#line 460 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::ATTRIBUTE_LPAR;
}
	YY_BREAK
case 30:
/* rule 30 can match eol */
YY_RULE_SETUP
#line 465 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::SCHEMA_ELEMENT_LPAR;
}
	YY_BREAK
case 31:
/* rule 31 can match eol */
YY_RULE_SETUP
#line 470 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::SCHEMA_ATTRIBUTE_LPAR;
}
	YY_BREAK
case 32:
/* rule 32 can match eol */
YY_RULE_SETUP
#line 475 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::COMMENT_LPAR;
}
	YY_BREAK
case 33:
/* rule 33 can match eol */
YY_RULE_SETUP
#line 480 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::TEXT_LPAR;
}
	YY_BREAK
case 34:
/* rule 34 can match eol */
YY_RULE_SETUP
#line 485 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::NODE_LPAR;
}
	YY_BREAK
case 35:
/* rule 35 can match eol */
YY_RULE_SETUP
#line 490 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OPERATOR);
  return token::DOCUMENT_NODE_LPAR;
}
	YY_BREAK
/* transition to KINDTESTFORPI */
/* --------------------------- */
case 36:
/* rule 36 can match eol */
YY_RULE_SETUP
#line 498 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTESTFORPI, MODE_OPERATOR);
  return token::PI_LPAR;
}
	YY_BREAK
/* order dependence: this must follow the rules: xxx{S}"(" */
/* {QName}{S}"(" {
   yylval->sval = getDriver()->symtab.put_qname(yytext, yyleng-1, false, true);
   return token::QNAME_LPAR;
  }*/
case 37:
YY_RULE_SETUP
#line 509 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::MINUS;
}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 512 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::PLUS;
}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 515 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SLASH;
}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 518 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::LEADING_LONE_SLASH;
}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 521 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SLASH_SLASH;
}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 524 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ANCESTOR_OR_SELF_AXIS;
}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 527 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ANCESTOR_AXIS;
}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 530 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ATTRIBUTE_AXIS;
}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 533 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::CHILD_AXIS;
}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 536 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DESCENDANT_OR_SELF_AXIS;
}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 539 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DESCENDANT_AXIS;
}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 542 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::FOLLOWING_SIBLING_AXIS;
}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 545 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::FOLLOWING_AXIS;
}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 548 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::PARENT_AXIS;
}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 551 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::PRECEDING_SIBLING_AXIS;
}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 554 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::PRECEDING_AXIS;
}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 557 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SELF_AXIS;
}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 560 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_SIGN;
}
	YY_BREAK
/* transition to OPERATOR */
/* ---------------------- */
case 55:
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 568 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 571 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->ival = getDriver()->symtab.integerval(yytext, yyleng);
  BEGIN MODE_OPERATOR;
  return token::INTEGER_LITERAL;
}
	YY_BREAK
case 57:
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 577 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 580 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->decval = getDriver()->symtab.decimalval(yytext, yyleng);
  BEGIN MODE_OPERATOR;
  return token::DECIMAL_LITERAL;
}
	YY_BREAK
case 59:
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 586 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 589 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->dval = getDriver()->symtab.doubleval(yytext, yyleng);
  BEGIN MODE_OPERATOR;
  return token::DOUBLE_LITERAL;
}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 595 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (ELEM_WILDCARD, put_ncname(yytext, yyleng-2));
}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 600 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 605 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::RPAR;
}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 610 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (PREFIX_WILDCARD, put_ncname(yytext+2, yyleng-2));
}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 615 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::STAR;
}
	YY_BREAK
case 66:
/* rule 66 can match eol */
YY_RULE_SETUP
#line 620 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 67:
/* rule 67 can match eol */
YY_RULE_SETUP
#line 625 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::DECLARE_CONSTRUCTION;
}
	YY_BREAK
case 68:
/* rule 68 can match eol */
YY_RULE_SETUP
#line 630 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::DECLARE_DEFAULT_ORDER;
}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 635 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::DOT_DOT;
}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 640 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::DOT;
}
	YY_BREAK
/* transition to NAMESPACEDECL */
/* --------------------------- */
case 71:
/* rule 71 can match eol */
YY_RULE_SETUP
#line 648 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::DECLARE_DEFAULT_COLLATION;
}
	YY_BREAK
case 72:
/* rule 72 can match eol */
YY_RULE_SETUP
#line 653 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::DECLARE_NAMESPACE;
}
	YY_BREAK
case 73:
/* rule 73 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 658 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::MODULE_NAMESPACE;
}
	YY_BREAK
case 74:
/* rule 74 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 663 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::DECLARE_BASE_URI;
}
	YY_BREAK
/* transition to NAMESPACEKEYWORD */
/* ------------------------------ */
case 75:
/* rule 75 can match eol */
YY_RULE_SETUP
#line 671 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::DECLARE_DEFAULT_ELEMENT;
}
	YY_BREAK
case 76:
/* rule 76 can match eol */
YY_RULE_SETUP
#line 676 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::DECLARE_DEFAULT_FUNCTION;
}
	YY_BREAK
case 77:
/* rule 77 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 681 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::IMPORT_SCHEMA;
}
	YY_BREAK
case 78:
/* rule 78 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 686 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::IMPORT_MODULE;
}
	YY_BREAK
case 79:
/* rule 79 can match eol */
YY_RULE_SETUP
#line 691 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEKEYWORD;
  return token::DECLARE_COPY_NAMESPACES;
}
	YY_BREAK
/* transition to VARNAME */
/* --------------------- */
case 80:
YY_RULE_SETUP
#line 699 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::DOLLAR;
}
	YY_BREAK
case 81:
/* rule 81 can match eol */
YY_RULE_SETUP
#line 704 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::FOR_DOLLAR;
}
	YY_BREAK
case 82:
/* rule 82 can match eol */
YY_RULE_SETUP
#line 709 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::LET_DOLLAR;
}
	YY_BREAK
case 83:
/* rule 83 can match eol */
YY_RULE_SETUP
#line 714 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::USING_DOLLAR;
}
	YY_BREAK
case 84:
/* rule 84 can match eol */
YY_RULE_SETUP
#line 719 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::SOME_DOLLAR;
}
	YY_BREAK
case 85:
/* rule 85 can match eol */
YY_RULE_SETUP
#line 724 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::EVERY_DOLLAR;
}
	YY_BREAK
case 86:
/* rule 86 can match eol */
YY_RULE_SETUP
#line 729 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::DECLARE_VARIABLE_DOLLAR;
}
	YY_BREAK
/* transition to XML_COMMENT */
/* ------------------------- */
case 87:
YY_RULE_SETUP
#line 738 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_XML_COMMENT, MODE_OPERATOR);
  return token::XML_COMMENT_BEGIN;
}
	YY_BREAK
/* transition to PROCESSING_INSTRUCTION */
/* ------------------------------------ */
case 88:
YY_RULE_SETUP
#line 746 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_PROCESSING_INSTRUCTION, MODE_OPERATOR);
  return token::PI_BEGIN;
}
	YY_BREAK
/* transition to CDATA_SECTION */
/* --------------------------- */
case 89:
YY_RULE_SETUP
#line 754 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_CDATA_SECTION, MODE_OPERATOR);
  return token::CDATA_BEGIN;
}
	YY_BREAK
case 90:
/* rule 90 can match eol */
YY_RULE_SETUP
#line 760 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* transition to START_TAG */
/* ----------------------- */
case 91:
YY_RULE_SETUP
#line 765 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_START_TAG, MODE_OPERATOR);
  return token::START_TAG;
}
	YY_BREAK
/* transition to XMLSPACE_DECL */
/* --------------------------- */
case 92:
/* rule 92 can match eol */
YY_RULE_SETUP
#line 773 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_XMLSPACE_DECL;
  return token::DECLARE_BOUNDARY_SPACE;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 93:
YY_RULE_SETUP
#line 781 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* transition to DECLAREORDERING */
/* ----------------------------- */
case 94:
/* rule 94 can match eol */
YY_RULE_SETUP
#line 788 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_DECLAREORDERING;
  return token::DECLARE_ORDERING;
}
	YY_BREAK
/* transition to XQUERY_VERSION */
/* ---------------------------- */
case 95:
/* rule 95 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 796 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_XQUERY_VERSION;
  return token::XQUERY_VERSION;
}
	YY_BREAK
/* transition to PRAGMA */
/* -------------------- */
case 96:
YY_RULE_SETUP
#line 804 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PRAGMA;
  return token::PRAGMA_BEGIN;
}
	YY_BREAK
/* transition to OPTION */
/* -------------------- */
case 97:
/* rule 97 can match eol */
YY_RULE_SETUP
#line 812 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPTION;
  return token::DECLARE_OPTION;
}
	YY_BREAK
/* transition to NAMESPACEDECL */
/* --------------------------- */
case 98:
/* rule 98 can match eol */
YY_RULE_SETUP
#line 820 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  TRY_URILIT (AT_URI_LITERAL, yytext+2, yyleng-2);
}
	YY_BREAK
/* pop previous state */
/* ------------------ */
case 99:
YY_RULE_SETUP
#line 827 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::RBRACE;
}
	YY_BREAK
case 100:
/* rule 100 can match eol */
YY_RULE_SETUP
#line 832 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_DECLAREREVALIDATION;
  return token::DECLARE_REVALIDATION;
}
	YY_BREAK
case 101:
/* rule 101 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 837 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AS;
}
	YY_BREAK
/*______________________________________________________________________
    |
    | TRY-CATCH rules <INITIAL>
    |______________________________________________________________________*/
case 102:
/* rule 102 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 847 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::TRY;
}
	YY_BREAK
/*______________________________________________________________________
   |
   | FT rules <INITIAL>
   |______________________________________________________________________*/
case 103:
YY_RULE_SETUP
#line 856 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::FTAND;
}
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 859 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::FTNOT;
}
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 862 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::FTOR;
}
	YY_BREAK
case 106:
/* rule 106 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 865 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::FTNOT_IN;
}
	YY_BREAK
case 107:
/* rule 107 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 868 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ALL;
}
	YY_BREAK
case 108:
/* rule 108 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 871 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ALL_WORDS;
}
	YY_BREAK
case 109:
/* rule 109 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 874 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ANY;
}
	YY_BREAK
case 110:
/* rule 110 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 877 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ANY_WORD;
}
	YY_BREAK
case 111:
/* rule 111 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 880 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_END;
}
	YY_BREAK
case 112:
/* rule 112 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 883 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_LEAST;
}
	YY_BREAK
case 113:
/* rule 113 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 886 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_MOST;
}
	YY_BREAK
case 114:
/* rule 114 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 889 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_START;
}
	YY_BREAK
case 115:
/* rule 115 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 892 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE_INSENSITIVE;
}
	YY_BREAK
case 116:
/* rule 116 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 895 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE_SENSITIVE;
}
	YY_BREAK
case 117:
/* rule 117 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 898 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DECLARE_FTOPTION;
}
	YY_BREAK
case 118:
/* rule 118 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 901 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DIACRITICS_INSENSITIVE;
}
	YY_BREAK
case 119:
/* rule 119 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 904 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DIACRITICS_SENSITIVE;
}
	YY_BREAK
case 120:
/* rule 120 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 907 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DIFFERENT;
}
	YY_BREAK
case 121:
/* rule 121 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 910 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DISTANCE;
}
	YY_BREAK
case 122:
/* rule 122 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 913 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ENTIRE_CONTENT;
}
	YY_BREAK
case 123:
/* rule 123 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 916 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::EXACTLY;
}
	YY_BREAK
case 124:
/* rule 124 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 919 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::FROM;
}
	YY_BREAK
case 125:
/* rule 125 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 922 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::LANGUAGE;
}
	YY_BREAK
case 126:
/* rule 126 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 925 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::LEVELS;
}
	YY_BREAK
case 127:
/* rule 127 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 928 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::LOWERCASE;
}
	YY_BREAK
case 128:
/* rule 128 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 931 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::OCCURS;
}
	YY_BREAK
case 129:
/* rule 129 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 934 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::PARAGRAPH;
}
	YY_BREAK
case 130:
/* rule 130 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 937 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::PHRASE;
}
	YY_BREAK
case 131:
/* rule 131 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 12;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 940 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::RELATIONSHIP;
}
	YY_BREAK
case 132:
/* rule 132 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 943 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SAME;
}
	YY_BREAK
case 133:
/* rule 133 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 946 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SCORE;
}
	YY_BREAK
case 134:
/* rule 134 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 949 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SENTENCE;
}
	YY_BREAK
case 135:
/* rule 135 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 952 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SENTENCES;
}
	YY_BREAK
case 136:
/* rule 136 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 955 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::TIMES;
}
	YY_BREAK
case 137:
/* rule 137 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 958 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UPPERCASE;
}
	YY_BREAK
case 138:
/* rule 138 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 961 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WEIGHT;
}
	YY_BREAK
case 139:
/* rule 139 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 964 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WINDOW;
}
	YY_BREAK
case 140:
/* rule 140 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 967 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_CONTENT;
}
	YY_BREAK
case 141:
/* rule 141 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 970 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_DIACRITICS;
}
	YY_BREAK
case 142:
/* rule 142 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 973 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_STEMMING;
}
	YY_BREAK
case 143:
/* rule 143 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 976 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_STOP_WORDS;
}
	YY_BREAK
case 144:
/* rule 144 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 979 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_THESAURUS;
}
	YY_BREAK
case 145:
/* rule 145 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 982 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_WILDCARDS;
}
	YY_BREAK
case 146:
/* rule 146 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 985 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_DEFAULT_STOP_WORDS;
}
	YY_BREAK
case 147:
/* rule 147 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 988 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_DIACRITICS;
}
	YY_BREAK
case 148:
/* rule 148 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 991 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_STEMMING;
}
	YY_BREAK
case 149:
/* rule 149 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 994 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_STOP_WORDS;
}
	YY_BREAK
case 150:
/* rule 150 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 997 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_THESAURUS;
}
	YY_BREAK
case 151:
/* rule 151 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1000 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_WILDCARDS;
}
	YY_BREAK
case 152:
/* rule 152 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1003 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WORDS;
}
	YY_BREAK
case 153:
/* rule 153 can match eol */
YY_RULE_SETUP
#line 1007 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* catch all */
case 154:
YY_RULE_SETUP
#line 1012 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* END <MODE INITIAL> */
/*______________________________________________________________________
    |
    | Update rules <INITIAL,MODE_OPERATOR>
    |______________________________________________________________________*/

case 155:
/* rule 155 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1047 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INSERT_NODE;
}
	YY_BREAK
case 156:
/* rule 156 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1051 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INSERT_NODES;
}
	YY_BREAK
case 157:
/* rule 157 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1055 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DELETE_NODE;
}
	YY_BREAK
case 158:
/* rule 158 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1059 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DELETE_NODES;
}
	YY_BREAK
case 159:
/* rule 159 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1063 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REPLACE;
}
	YY_BREAK
case 160:
/* rule 160 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1067 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REPLACE_VALUE_OF;
}
	YY_BREAK
case 161:
/* rule 161 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1071 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  getDriver()->set_rename(true);
  return token::RENAME;
}
	YY_BREAK
case 162:
/* rule 162 can match eol */
YY_RULE_SETUP
#line 1077 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::COPY_DOLLAR;
}
	YY_BREAK
case 163:
/* rule 163 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1081 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INTO;
}
	YY_BREAK
case 164:
/* rule 164 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1085 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AFTER;
}
	YY_BREAK
case 165:
/* rule 165 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1089 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::BEFORE;
}
	YY_BREAK
case 166:
/* rule 166 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1093 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::WITH;
}
	YY_BREAK
case 167:
/* rule 167 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1097 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MODIFY;
}
	YY_BREAK
/* <INITIAL, MODE_OPERATOR> */

case 168:
/* rule 168 can match eol */
YY_RULE_SETUP
#line 1127 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::RPAR;
}
	YY_BREAK
case 169:
/* rule 169 can match eol */
YY_RULE_SETUP
#line 1132 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
case 170:
/* rule 170 can match eol */
YY_RULE_SETUP
#line 1137 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STAR;
}
	YY_BREAK
case 171:
/* rule 171 can match eol */
YY_RULE_SETUP
#line 1142 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (ELEM_WILDCARD, put_ncname(yytext, yyleng-2));
}
	YY_BREAK
case 172:
/* rule 172 can match eol */
YY_RULE_SETUP
#line 1147 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (PREFIX_WILDCARD, put_ncname(yytext+2, yyleng-2));
}
	YY_BREAK
/* END <MODE_CATCH> */
/*______________________________________________________________________
   |
   |  The PROCESSING_INSTRUCTION_CTOR State
   |
   |  transition to MODE_OPERATOR
   |______________________________________________________________________*/

case 173:
YY_RULE_SETUP
#line 1189 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::LBRACE;
}
	YY_BREAK
case 174:
YY_RULE_SETUP
#line 1194 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (NCNAME, put_ncname(yytext, yyleng));
}
	YY_BREAK
case 175:
/* rule 175 can match eol */
YY_RULE_SETUP
#line 1198 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_PROCESSING_INSTRUCTION_CTOR> */
/*______________________________________________________________________
   |
   |  The DECLAREORDERING State
   |
   |  Special state to recognize declare ordering specific keywords.
   |  transition to INITIAL
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 176:
/* rule 176 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1236 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ORDERED;
}
	YY_BREAK
case 177:
/* rule 177 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1241 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::UNORDERED;
}
	YY_BREAK
/* END <MODE_DECLAREORDERING> */
/*______________________________________________________________________
   |
   |  The DECLAREREVALIDATION State
   |
   |  Special state to recognize declare revalidation specific keywords.
   |  transition to INITIAL
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 178:
/* rule 178 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1279 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REVAL_STRICT;
}
	YY_BREAK
case 179:
/* rule 179 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1284 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REVAL_LAX;
}
	YY_BREAK
case 180:
/* rule 180 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1289 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::REVAL_SKIP;
}
	YY_BREAK
/* END <MODE_DECLAREORDERING> */
/*______________________________________________________________________
   |
   |  OPERATOR State
   |
   |  This state is for patterns that are defined for operators.
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 181:
YY_RULE_SETUP
#line 1331 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(INITIAL);
  return token::LBRACE;
}
	YY_BREAK
case 182:
YY_RULE_SETUP
#line 1335 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  /* PUSH_STATE(INITIAL); */
  return token::LPAR;
}
	YY_BREAK
case 183:
YY_RULE_SETUP
#line 1340 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SEMI;
}
	YY_BREAK
case 184:
/* rule 184 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1344 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::THEN;
}
	YY_BREAK
case 185:
/* rule 185 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1348 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ELSE;
}
	YY_BREAK
case 186:
/* rule 186 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1352 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXTERNAL;
}
	YY_BREAK
case 187:
/* rule 187 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1356 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AND;
}
	YY_BREAK
case 188:
/* rule 188 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1360 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  if (!getDriver()->ftcontains()) {
    BEGIN INITIAL;
  }
  return token::AT;
}
	YY_BREAK
/* full-text rule */
case 189:
/* rule 189 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1369 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SCORE;
}
	YY_BREAK
case 190:
YY_RULE_SETUP
#line 1375 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GETS;
}
	YY_BREAK
case 191:
YY_RULE_SETUP
#line 1379 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::COMMA;
}
	YY_BREAK
case 192:
/* rule 192 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1383 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DIV;
}
	YY_BREAK
case 193:
YY_RULE_SETUP
#line 1387 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EQUALS;
}
	YY_BREAK
case 194:
/* rule 194 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1391 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXCEPT;
}
	YY_BREAK
case 195:
/* rule 195 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1395 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_EQ;
}
	YY_BREAK
case 196:
/* rule 196 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1399 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_GE;
}
	YY_BREAK
case 197:
/* rule 197 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1403 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_GT;
}
	YY_BREAK
case 198:
/* rule 198 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1407 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_LE;
}
	YY_BREAK
case 199:
/* rule 199 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1411 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_LT;
}
	YY_BREAK
case 200:
/* rule 200 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1415 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_NE;
}
	YY_BREAK
case 201:
YY_RULE_SETUP
#line 1419 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GE;
}
	YY_BREAK
case 202:
YY_RULE_SETUP
#line 1423 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FOLLOWS;
}
	YY_BREAK
case 203:
YY_RULE_SETUP
#line 1427 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GT;
}
	YY_BREAK
case 204:
/* rule 204 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1431 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::IDIV;
}
	YY_BREAK
case 205:
/* rule 205 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1435 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INTERSECT;
}
	YY_BREAK
case 206:
/* rule 206 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1442 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::_IN_;
}
	YY_BREAK
case 207:
/* rule 207 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1446 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::IS;
}
	YY_BREAK
case 208:
YY_RULE_SETUP
#line 1450 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LBRACK;
}
	YY_BREAK
case 209:
YY_RULE_SETUP
#line 1454 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LE;
}
	YY_BREAK
case 210:
YY_RULE_SETUP
#line 1458 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PRECEDES;
}
	YY_BREAK
case 211:
YY_RULE_SETUP
#line 1462 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LT;
}
	YY_BREAK
case 212:
YY_RULE_SETUP
#line 1466 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MINUS;
}
	YY_BREAK
case 213:
/* rule 213 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1470 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MOD;
}
	YY_BREAK
case 214:
YY_RULE_SETUP
#line 1474 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STAR;
}
	YY_BREAK
case 215:
YY_RULE_SETUP
#line 1478 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::NE;
}
	YY_BREAK
case 216:
/* rule 216 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1482 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GROUP_BY;
}
	YY_BREAK
case 217:
/* rule 217 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1486 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ORDER_BY;
}
	YY_BREAK
case 218:
/* rule 218 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1490 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STABLE_ORDER_BY;
}
	YY_BREAK
case 219:
/* rule 219 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1494 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::OR;
}
	YY_BREAK
case 220:
YY_RULE_SETUP
#line 1498 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PLUS;
}
	YY_BREAK
case 221:
/* rule 221 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1502 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::RETURN;
}
	YY_BREAK
case 222:
/* rule 222 can match eol */
YY_RULE_SETUP
#line 1506 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, INITIAL);
  return token::EVAL_LBRACE;
}
	YY_BREAK
case 223:
/* rule 223 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1510 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SATISFIES;
}
	YY_BREAK
case 224:
YY_RULE_SETUP
#line 1514 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SLASH;
}
	YY_BREAK
case 225:
YY_RULE_SETUP
#line 1518 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LEADING_LONE_SLASH;
}
	YY_BREAK
case 226:
YY_RULE_SETUP
#line 1522 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SLASH_SLASH;
}
	YY_BREAK
case 227:
/* rule 227 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1526 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::TO;
}
	YY_BREAK
case 228:
/* rule 228 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1530 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::UNION;
}
	YY_BREAK
case 229:
YY_RULE_SETUP
#line 1534 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VBAR;
}
	YY_BREAK
case 230:
/* rule 230 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1538 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::WHERE;
}
	YY_BREAK
case 231:
/* rule 231 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1542 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PRESERVE;
}
	YY_BREAK
case 232:
/* rule 232 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1546 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STRIP;
}
	YY_BREAK
/* transition to SINGLETYPE */
/* ------------------------ */
case 233:
/* rule 233 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1556 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_SINGLETYPE;
  return token::CASTABLE_AS;
}
	YY_BREAK
case 234:
/* rule 234 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1560 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_SINGLETYPE;
  return token::CAST_AS;
}
	YY_BREAK
/* transition to ITEMTYPE */
/* ---------------------- */
case 235:
/* rule 235 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1568 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_ITEMTYPE;
  return token::INSTANCE_OF;
}
	YY_BREAK
case 236:
/* rule 236 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1572 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_ITEMTYPE;
  return token::TREAT_AS;
}
	YY_BREAK
case 237:
/* rule 237 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1576 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_ITEMTYPE;
  return token::CASE;
}
	YY_BREAK
case 238:
/* rule 238 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1581 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FIRST_INTO;
}
	YY_BREAK
case 239:
/* rule 239 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1586 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LAST_INTO;
}
	YY_BREAK
case 240:
/* rule 240 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1591 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  if (getDriver()->rename()) {
    getDriver()->set_rename(false);
    BEGIN INITIAL;
  }
  else if (getDriver()->ftcontains()) {
    getDriver()->set_ftcontains(false);
  }
  else {
    BEGIN MODE_ITEMTYPE;
  }
  return token::AS;
}
	YY_BREAK
/* transition to VARNAME */
/* --------------------- */
case 241:
YY_RULE_SETUP
#line 1607 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::DOLLAR;
}
	YY_BREAK
case 242:
/* rule 242 can match eol */
YY_RULE_SETUP
#line 1611 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::FOR_DOLLAR;
}
	YY_BREAK
case 243:
/* rule 243 can match eol */
YY_RULE_SETUP
#line 1615 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::LET_DOLLAR;
}
	YY_BREAK
case 244:
/* rule 244 can match eol */
YY_RULE_SETUP
#line 1619 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::USING_DOLLAR;
}
	YY_BREAK
case 245:
/* rule 245 can match eol */
YY_RULE_SETUP
#line 1623 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::LET_SCORE_DOLLAR;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 246:
YY_RULE_SETUP
#line 1631 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* transition to MODE_CATCH   */
/* -------------------------- */
case 247:
/* rule 247 can match eol */
YY_RULE_SETUP
#line 1638 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_CATCH);
  return token::CATCH_LPAR;
}
	YY_BREAK
/* transition to URITOOPERATOR */
/* --------------------------- */
case 248:
/* rule 248 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1645 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_URITOOPERATOR;
  return token::COLLATION;
}
	YY_BREAK
/* restore previous state on closing brace */
/* --------------------------------------- */
case 249:
YY_RULE_SETUP
#line 1653 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::RBRACE;
}
	YY_BREAK
/* maintain OPERATOR state */
/* ----------------------- */
case 250:
YY_RULE_SETUP
#line 1661 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::RPAR;
}
	YY_BREAK
case 251:
YY_RULE_SETUP
#line 1664 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::HOOK;
}
	YY_BREAK
case 252:
/* rule 252 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1667 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::EMPTY_GREATEST;
}
	YY_BREAK
case 253:
/* rule 253 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1670 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::EMPTY_LEAST;
}
	YY_BREAK
case 254:
/* rule 254 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1673 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ASCENDING;
}
	YY_BREAK
case 255:
/* rule 255 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 10;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1676 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DESCENDING;
}
	YY_BREAK
case 256:
/* rule 256 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1679 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DEFAULT;
}
	YY_BREAK
case 257:
YY_RULE_SETUP
#line 1682 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::RBRACK;
}
	YY_BREAK
case 258:
/* rule 258 can match eol */
YY_RULE_SETUP
#line 1685 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
/*______________________________________________________________________
   |
   | FT rules <OPERATOR>
   |______________________________________________________________________*/
/* transition to INITIAL state */
/* --------------------------- */
case 259:
/* rule 259 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 10;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1698 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  getDriver()->set_ftcontains(true);
  return token::FTCONTAINS;
}
	YY_BREAK
case 260:
YY_RULE_SETUP
#line 1703 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FTAND;
}
	YY_BREAK
case 261:
YY_RULE_SETUP
#line 1707 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FTNOT;
}
	YY_BREAK
case 262:
YY_RULE_SETUP
#line 1711 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FTOR;
}
	YY_BREAK
case 263:
/* rule 263 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1715 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FTNOT_IN;
}
	YY_BREAK
case 264:
/* rule 264 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1719 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AT_LEAST;
}
	YY_BREAK
case 265:
/* rule 265 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1723 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AT_MOST;
}
	YY_BREAK
case 266:
/* rule 266 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1727 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DISTANCE;
}
	YY_BREAK
case 267:
/* rule 267 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1731 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXACTLY;
}
	YY_BREAK
case 268:
/* rule 268 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1735 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FROM;
}
	YY_BREAK
case 269:
/* rule 269 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1739 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::OCCURS;
}
	YY_BREAK
case 270:
/* rule 270 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1743 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::WINDOW;
}
	YY_BREAK
/* maintain OPERATOR state */
/* ----------------------- */
case 271:
/* rule 271 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1751 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ALL;
}
	YY_BREAK
case 272:
/* rule 272 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1754 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ALL_WORDS;
}
	YY_BREAK
case 273:
/* rule 273 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1757 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ANY;
}
	YY_BREAK
case 274:
/* rule 274 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1760 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ANY_WORD;
}
	YY_BREAK
case 275:
/* rule 275 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1763 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_END;
}
	YY_BREAK
case 276:
/* rule 276 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1766 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::AT_START;
}
	YY_BREAK
case 277:
/* rule 277 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1769 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE_INSENSITIVE;
}
	YY_BREAK
case 278:
/* rule 278 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1772 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE_SENSITIVE;
}
	YY_BREAK
case 279:
/* rule 279 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1775 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DECLARE_FTOPTION;
}
	YY_BREAK
case 280:
/* rule 280 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1778 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DIACRITICS_INSENSITIVE;
}
	YY_BREAK
case 281:
/* rule 281 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1781 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DIACRITICS_SENSITIVE;
}
	YY_BREAK
case 282:
/* rule 282 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1784 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DIFFERENT;
}
	YY_BREAK
case 283:
/* rule 283 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1787 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ENTIRE_CONTENT;
}
	YY_BREAK
case 284:
/* rule 284 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1790 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::LANGUAGE;
}
	YY_BREAK
case 285:
/* rule 285 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1793 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::LEVELS;
}
	YY_BREAK
case 286:
/* rule 286 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1796 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::LOWERCASE;
}
	YY_BREAK
case 287:
/* rule 287 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1799 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::PARAGRAPH;
}
	YY_BREAK
case 288:
/* rule 288 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1802 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::PHRASE;
}
	YY_BREAK
case 289:
/* rule 289 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 12;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1805 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::RELATIONSHIP;
}
	YY_BREAK
case 290:
/* rule 290 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1808 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SAME;
}
	YY_BREAK
case 291:
/* rule 291 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1811 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SCORE;
}
	YY_BREAK
case 292:
/* rule 292 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1814 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SENTENCE;
}
	YY_BREAK
case 293:
/* rule 293 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1817 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::SENTENCES;
}
	YY_BREAK
case 294:
/* rule 294 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1820 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::TIMES;
}
	YY_BREAK
case 295:
/* rule 295 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1823 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UPPERCASE;
}
	YY_BREAK
case 296:
/* rule 296 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1826 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WEIGHT;
}
	YY_BREAK
case 297:
/* rule 297 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1829 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_CONTENT;
}
	YY_BREAK
case 298:
/* rule 298 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1832 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_DIACRITICS;
}
	YY_BREAK
case 299:
/* rule 299 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1835 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_STEMMING;
}
	YY_BREAK
case 300:
/* rule 300 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1838 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_STOP_WORDS;
}
	YY_BREAK
case 301:
/* rule 301 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1841 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_THESAURUS;
}
	YY_BREAK
case 302:
/* rule 302 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1844 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITHOUT_WILDCARDS;
}
	YY_BREAK
case 303:
/* rule 303 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1847 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_DEFAULT_STOP_WORDS;
}
	YY_BREAK
case 304:
/* rule 304 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1850 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_DIACRITICS;
}
	YY_BREAK
case 305:
/* rule 305 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1853 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_STEMMING;
}
	YY_BREAK
case 306:
/* rule 306 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1856 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_STOP_WORDS;
}
	YY_BREAK
case 307:
/* rule 307 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1859 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_THESAURUS;
}
	YY_BREAK
case 308:
/* rule 308 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1862 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WITH_WILDCARDS;
}
	YY_BREAK
case 309:
/* rule 309 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1865 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::WORDS;
}
	YY_BREAK
case 310:
YY_RULE_SETUP
#line 1868 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PRAGMA;
  return token::PRAGMA_BEGIN;
}
	YY_BREAK
case 311:
YY_RULE_SETUP
#line 1873 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 312:
/* rule 312 can match eol */
YY_RULE_SETUP
#line 1877 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_OPERATOR> */
/*______________________________________________________________________
   |
   | XQUERY_VERSION State
   |
   | This state is for recognition of XQuery version specific keywords.
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 313:
YY_RULE_SETUP
#line 1917 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SEMI;
}
	YY_BREAK
/* maintain XQUERYVERSION */
/* ---------------------- */
case 314:
/* rule 314 can match eol */
YY_RULE_SETUP
#line 1924 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 315:
/* rule 315 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1928 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ENCODING;
}
	YY_BREAK
case 316:
/* rule 316 can match eol */
YY_RULE_SETUP
#line 1932 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_XQUERY_VERSION> */
/*______________________________________________________________________
   |
   | NAMESPACEDECL State
   |
   | This state occurs inside of a namespace declaration, and is needed
   | to recognize a NCName that is to be used as the prefix, as opposed
   | to allowing a QName to occur. (Otherwise, the difference between
   | NCName and QName becomes ambiguous.)
   |______________________________________________________________________*/

case 317:
YY_RULE_SETUP
#line 1970 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 318:
YY_RULE_SETUP
#line 1974 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SEMI;
}
	YY_BREAK
/* maintain NAMESPACEDECL */
/* ---------------------- */
case 319:
/* rule 319 can match eol */
YY_RULE_SETUP
#line 1981 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_URILIT (URI_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 320:
YY_RULE_SETUP
#line 1985 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::COMMA;
}
	YY_BREAK
case 321:
/* rule 321 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 1989 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::AT;
}
	YY_BREAK
case 322:
YY_RULE_SETUP
#line 1993 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::EQUALS;
}
	YY_BREAK
case 323:
YY_RULE_SETUP
#line 1997 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (NCNAME, put_ncname(yytext, yyleng));
}
	YY_BREAK
case 324:
YY_RULE_SETUP
#line 2001 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 325:
/* rule 325 can match eol */
YY_RULE_SETUP
#line 2005 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_NAMESPACEDECL> */
/*______________________________________________________________________
   |
   | URITOOPERATOR State
   |
   | This state is to recognize a URILiteral that transitions to the
   | OPERATOR state.
   |______________________________________________________________________*/
case 326:
/* rule 326 can match eol */
YY_RULE_SETUP
#line 2043 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_URILIT (URI_LITERAL, yytext, yyleng);
}
	YY_BREAK
/*______________________________________________________________________
   |
   | NAMESPACEKEYWORD State
   |
   | This state occurs at places where the keyword "namespace" is
   | expected, which would otherwise be ambiguous compared to a QName.
   | QNames can not occur in this state.
   |______________________________________________________________________*/

/* transition to NAMESPACEDECL */
/* --------------------------- */
case 327:
/* rule 327 can match eol */
YY_RULE_SETUP
#line 2082 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  TRY_URILIT (URI_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 328:
/* rule 328 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2087 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  return token::NAMESPACE;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 329:
/* rule 329 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 7;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2094 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INHERIT;
}
	YY_BREAK
case 330:
/* rule 330 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 10;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2099 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::NO_INHERIT;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 331:
YY_RULE_SETUP
#line 2106 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* maintain NAMESPACEKEYWORD */
/* ------------------------- */
case 332:
/* rule 332 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2113 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DEFAULT_ELEMENT;
}
	YY_BREAK
case 333:
/* rule 333 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2117 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::PRESERVE;
}
	YY_BREAK
case 334:
/* rule 334 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 11;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2121 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::NO_PRESERVE;
}
	YY_BREAK
case 335:
YY_RULE_SETUP
#line 2125 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::COMMA;
}
	YY_BREAK
case 336:
YY_RULE_SETUP
#line 2129 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 337:
/* rule 337 can match eol */
YY_RULE_SETUP
#line 2133 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_NAMESPACEKEYWORD> */
/*______________________________________________________________________
    |
    | XMLSPACE_DECL State
    |
    | This state occurs at places where the keywords "preserve" and
    | "strip" is expected to support "declare xmlspace". QNames cannot
    | occur in this state.
    |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 338:
/* rule 338 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2175 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PRESERVE;
}
	YY_BREAK
case 339:
/* rule 339 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2180 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STRIP;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 340:
YY_RULE_SETUP
#line 2187 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 341:
YY_RULE_SETUP
#line 2191 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 342:
/* rule 342 can match eol */
YY_RULE_SETUP
#line 2195 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_XMLSPACE_DECL> */
/*______________________________________________________________________
   |
   | SINGLETYPE State
   |
   | This state distinguishes tokens that can occur only inside the
   | SingleType production.
   |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 343:
YY_RULE_SETUP
#line 2239 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 344:
YY_RULE_SETUP
#line 2246 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 345:
YY_RULE_SETUP
#line 2250 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 346:
/* rule 346 can match eol */
YY_RULE_SETUP
#line 2254 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_SINGLETYPE> */
/*______________________________________________________________________
   |
   | ITEMTYPE State
   |
   | This state distinguishes tokens that can occur only inside the
   | ItemType production.
   |______________________________________________________________________*/

/* transition to VARNAME */
/* --------------------- */
case 347:
YY_RULE_SETUP
#line 2303 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_VARNAME;
  return token::DOLLAR;
}
	YY_BREAK
case 348:
/* rule 348 can match eol */
YY_RULE_SETUP
#line 2308 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::VOID_TEST;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 349:
YY_RULE_SETUP
#line 2315 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* transition to KINDTEST */
/* ---------------------- */
case 350:
/* rule 350 can match eol */
YY_RULE_SETUP
#line 2321 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::ELEMENT_LPAR;
}
	YY_BREAK
case 351:
/* rule 351 can match eol */
YY_RULE_SETUP
#line 2326 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::ATTRIBUTE_LPAR;
}
	YY_BREAK
case 352:
/* rule 352 can match eol */
YY_RULE_SETUP
#line 2331 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::SCHEMA_ELEMENT_LPAR;
}
	YY_BREAK
case 353:
/* rule 353 can match eol */
YY_RULE_SETUP
#line 2336 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::SCHEMA_ATTRIBUTE_LPAR;
}
	YY_BREAK
case 354:
/* rule 354 can match eol */
YY_RULE_SETUP
#line 2341 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::COMMENT_LPAR;
}
	YY_BREAK
case 355:
/* rule 355 can match eol */
YY_RULE_SETUP
#line 2346 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::TEXT_LPAR;
}
	YY_BREAK
case 356:
/* rule 356 can match eol */
YY_RULE_SETUP
#line 2351 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::NODE_LPAR;
}
	YY_BREAK
case 357:
/* rule 357 can match eol */
YY_RULE_SETUP
#line 2356 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_OCCURRENCE_INDICATOR);
  return token::DOCUMENT_NODE_LPAR;
}
	YY_BREAK
/* transition to KINDTESTFORPI */
/* --------------------------- */
case 358:
/* rule 358 can match eol */
YY_RULE_SETUP
#line 2363 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTESTFORPI, MODE_OCCURRENCE_INDICATOR);
  return token::PI_LPAR;
}
	YY_BREAK
case 359:
/* rule 359 can match eol */
YY_RULE_SETUP
#line 2368 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OCCURRENCE_INDICATOR;
  return token::ITEM_TEST;
}
	YY_BREAK
/* transition to PRAGMA */
/* -------------------- */
case 360:
YY_RULE_SETUP
#line 2375 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PRAGMA;
  return token::PRAGMA_BEGIN;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 361:
YY_RULE_SETUP
#line 2382 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SEMI;
}
	YY_BREAK
case 362:
/* rule 362 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2387 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::THEN;
}
	YY_BREAK
case 363:
/* rule 363 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2392 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ELSE;
}
	YY_BREAK
/* transition to NAMESPACEDECL */
/* --------------------------- */
case 364:
/* rule 364 can match eol */
YY_RULE_SETUP
#line 2399 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_NAMESPACEDECL;
  TRY_URILIT (AT_URI_LITERAL, yytext+2, yyleng-2);
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 365:
/* rule 365 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 8;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2406 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXTERNAL;
}
	YY_BREAK
case 366:
/* rule 366 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2411 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AND;
}
	YY_BREAK
case 367:
/* rule 367 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2416 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::AT;
}
	YY_BREAK
case 368:
YY_RULE_SETUP
#line 2421 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GETS;
}
	YY_BREAK
case 369:
YY_RULE_SETUP
#line 2426 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::COMMA;
}
	YY_BREAK
case 370:
/* rule 370 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2431 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::DIV;
}
	YY_BREAK
case 371:
YY_RULE_SETUP
#line 2436 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EQUALS;
}
	YY_BREAK
case 372:
/* rule 372 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2441 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::EXCEPT;
}
	YY_BREAK
case 373:
/* rule 373 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2446 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_EQ;
}
	YY_BREAK
case 374:
/* rule 374 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2451 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_GE;
}
	YY_BREAK
case 375:
/* rule 375 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2456 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_GT;
}
	YY_BREAK
case 376:
/* rule 376 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2461 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_LE;
}
	YY_BREAK
case 377:
/* rule 377 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2466 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_LT;
}
	YY_BREAK
case 378:
/* rule 378 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2471 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VAL_NE;
}
	YY_BREAK
case 379:
YY_RULE_SETUP
#line 2476 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GE;
}
	YY_BREAK
case 380:
YY_RULE_SETUP
#line 2481 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::FOLLOWS;
}
	YY_BREAK
case 381:
YY_RULE_SETUP
#line 2486 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GT;
}
	YY_BREAK
case 382:
/* rule 382 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2491 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::IDIV;
}
	YY_BREAK
case 383:
/* rule 383 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2496 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::INTERSECT;
}
	YY_BREAK
case 384:
/* rule 384 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2501 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::_IN_;
}
	YY_BREAK
case 385:
/* rule 385 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2506 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::IS;
}
	YY_BREAK
case 386:
YY_RULE_SETUP
#line 2511 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LBRACK;
}
	YY_BREAK
case 387:
YY_RULE_SETUP
#line 2516 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LPAR;
}
	YY_BREAK
case 388:
YY_RULE_SETUP
#line 2521 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LE;
}
	YY_BREAK
case 389:
YY_RULE_SETUP
#line 2526 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::PRECEDES;
}
	YY_BREAK
case 390:
YY_RULE_SETUP
#line 2531 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::LT;
}
	YY_BREAK
case 391:
YY_RULE_SETUP
#line 2536 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MINUS;
}
	YY_BREAK
case 392:
/* rule 392 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 3;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2541 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::MOD;
}
	YY_BREAK
case 393:
YY_RULE_SETUP
#line 2546 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::NE;
}
	YY_BREAK
case 394:
/* rule 394 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2551 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::GROUP_BY;
}
	YY_BREAK
case 395:
/* rule 395 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2556 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::ORDER_BY;
}
	YY_BREAK
case 396:
/* rule 396 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2561 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::STABLE_ORDER_BY;
}
	YY_BREAK
case 397:
/* rule 397 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2566 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::OR;
}
	YY_BREAK
case 398:
/* rule 398 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 6;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2571 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::RETURN;
}
	YY_BREAK
case 399:
/* rule 399 can match eol */
YY_RULE_SETUP
#line 2576 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, INITIAL);
  return token::EVAL_LBRACE;
}
	YY_BREAK
case 400:
/* rule 400 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 9;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2581 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::SATISFIES;
}
	YY_BREAK
case 401:
/* rule 401 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2586 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::TO;
}
	YY_BREAK
case 402:
/* rule 402 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2591 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::UNION;
}
	YY_BREAK
case 403:
YY_RULE_SETUP
#line 2596 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::VBAR;
}
	YY_BREAK
case 404:
/* rule 404 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 5;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2601 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  return token::WHERE;
}
	YY_BREAK
/* transition to SINGLETYPE */
/* ------------------------ */
case 405:
/* rule 405 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2608 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_SINGLETYPE;
  return token::CASTABLE_AS;
}
	YY_BREAK
case 406:
/* rule 406 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2613 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_SINGLETYPE;
  return token::CAST_AS;
}
	YY_BREAK
/* maintain ITEMTYPE */
/* ----------------- */
case 407:
/* rule 407 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2620 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::INSTANCE_OF;
}
	YY_BREAK
case 408:
/* rule 408 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp -= 1;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2624 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::TREAT_AS;
}
	YY_BREAK
case 409:
/* rule 409 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 4;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2628 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::CASE;
}
	YY_BREAK
case 410:
YY_RULE_SETUP
#line 2632 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::RPAR;
}
	YY_BREAK
case 411:
/* rule 411 can match eol */
*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */
(yy_c_buf_p) = yy_cp = yy_bp + 2;
YY_DO_BEFORE_ACTION; /* set up yytext again */
YY_RULE_SETUP
#line 2636 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::AS;
}
	YY_BREAK
case 412:
YY_RULE_SETUP
#line 2641 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  yylval->sval = getDriver()->symtab.put_qname(yytext, yyleng);
  BEGIN MODE_OCCURRENCE_INDICATOR;
  return token::QNAME;
}
	YY_BREAK
case 413:
YY_RULE_SETUP
#line 2647 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 414:
/* rule 414 can match eol */
YY_RULE_SETUP
#line 2651 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_ITEMTYPE> */
/*______________________________________________________________________
   |
   | KINDTEST State
   |
   | This state is for the psuedo-parameters for the KindTest productions
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 415:
YY_RULE_SETUP
#line 2698 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::LBRACE;
}
	YY_BREAK
/* transition to CLOSE_KINDTEST */
/* --------------------------- */
case 416:
YY_RULE_SETUP
#line 2705 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_CLOSE_KINDTEST;
  return token::STAR;
}
	YY_BREAK
case 417:
YY_RULE_SETUP
#line 2710 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_CLOSE_KINDTEST;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 418:
YY_RULE_SETUP
#line 2717 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* pop previous state on close paren */
/* --------------------------------- */
case 419:
YY_RULE_SETUP
#line 2723 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::RPAR;
}
	YY_BREAK
/* maintain KINDTEST */
/* ----------------- */
case 420:
/* rule 420 can match eol */
YY_RULE_SETUP
#line 2730 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_KINDTEST);
  return token::ELEMENT_LPAR;
}
	YY_BREAK
case 421:
/* rule 421 can match eol */
YY_RULE_SETUP
#line 2735 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (MODE_KINDTEST, MODE_KINDTEST);
  return token::SCHEMA_ELEMENT_LPAR;
}
	YY_BREAK
/* catch-all */
/* --------- */
case 422:
YY_RULE_SETUP
#line 2742 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 423:
/* rule 423 can match eol */
YY_RULE_SETUP
#line 2746 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_KINDTEST> */
/*______________________________________________________________________
   |
   | KINDTESTFORPI
   |
   | This state is similar to KINDTEST, but recognizes NCNames instead of
   | QNames.
   |______________________________________________________________________*/

/* pop previous state on close paren */
/* --------------------------------- */
case 424:
YY_RULE_SETUP
#line 2793 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::RPAR;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 425:
YY_RULE_SETUP
#line 2801 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* maintain KINDTESTFORPI */
/* ---------------------- */
case 426:
YY_RULE_SETUP
#line 2807 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (NCNAME, put_ncname(yytext, yyleng));
}
	YY_BREAK
case 427:
/* rule 427 can match eol */
YY_RULE_SETUP
#line 2811 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_STRINGLIT (STRING_LITERAL, yytext, yyleng);
}
	YY_BREAK
case 428:
YY_RULE_SETUP
#line 2815 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 429:
/* rule 429 can match eol */
YY_RULE_SETUP
#line 2819 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_KINDTESTFORPI> */
/*______________________________________________________________________
   |
   | CLOSE_KINDTEST State
   |
   | This state is expecting to close a KINDTEST sequence.
   |______________________________________________________________________*/

/* pop previous state */
/* ------------------ */
case 430:
YY_RULE_SETUP
#line 2857 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::RPAR;
}
	YY_BREAK
/* transition to KINDTEST */
/* ---------------------- */
case 431:
YY_RULE_SETUP
#line 2864 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_KINDTEST;
  return token::COMMA;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 432:
YY_RULE_SETUP
#line 2871 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_OPERATOR);
  return token::LBRACE;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 433:
YY_RULE_SETUP
#line 2878 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* maintain CLOSE_KINDTEST */
/* ---------------------- */
case 434:
YY_RULE_SETUP
#line 2884 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::HOOK;
}
	YY_BREAK
case 435:
YY_RULE_SETUP
#line 2888 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 436:
/* rule 436 can match eol */
YY_RULE_SETUP
#line 2892 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_CLOSE_KINDTEST> */
/*______________________________________________________________________
   |
   | OCCURRENCE_INDICATOR State
   |
   | This special state is needed to distinguish occurrence indicators
   | that appear in the SequenceType production. For instance, compare
   | "foo instance of baz*" to "baz*foo". In the first case, the "*" is
   | interpreted as an occurrence indicator, and in the second case, it
   | must be interpreted as a multiplication operator. But, when in the
   | OCCURRENCEINDICATOR state, if anything else other than "?", "*",
   | "+", those symbols must be interpreted in the OPERATOR state. For
   | instance, this would occur with the expression "foo instance of baz
   | and $x", with the operator "and".
   |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 437:
YY_RULE_SETUP
#line 2942 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::OCCURS_HOOK;
}
	YY_BREAK
case 438:
YY_RULE_SETUP
#line 2947 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::OCCURS_STAR;
}
	YY_BREAK
case 439:
YY_RULE_SETUP
#line 2952 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  return token::OCCURS_PLUS;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 440:
YY_RULE_SETUP
#line 2959 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
/* anything else: push back, goto OPERATOR */
/* --------------------------------------- */
case 441:
YY_RULE_SETUP
#line 2965 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  yyless(0);
  BEGIN MODE_OPERATOR;
}
	YY_BREAK
case 442:
/* rule 442 can match eol */
YY_RULE_SETUP
#line 2970 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* MODE_OCCURRENCE_INDICATOR> */
/*______________________________________________________________________
   |
   | OPTION State
   |
   | This state is entered in the prolog for an option declaration, and
   | recognizes a QName that transits to a INITIAL state rather than a
   | OPERATOR state.
   |______________________________________________________________________*/

/* transition to INITIAL */
/* --------------------- */
case 443:
YY_RULE_SETUP
#line 3018 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN INITIAL;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
case 444:
YY_RULE_SETUP
#line 3023 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 445:
/* rule 445 can match eol */
YY_RULE_SETUP
#line 3027 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_OPTION> */
/*______________________________________________________________________
   |
   | PRAGMA State
   |
   | This state is entered in a a pragma expression, and recognizes
   | a QName that transits to a PRAGMACONTENTS state rather than an
   | OPERATOR state.
   |______________________________________________________________________*/

/* transition to PRAGMACONTENTS */
/* ---------------------------- */
case 446:
/* rule 446 can match eol */
YY_RULE_SETUP
#line 3073 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PRAGMACONTENTS;
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng,true,true));
}
	YY_BREAK
case 447:
YY_RULE_SETUP
#line 3078 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (QNAME_AND_END_PRAGMA, put(yytext, yyleng-2));
}
	YY_BREAK
case 448:
/* rule 448 can match eol */
YY_RULE_SETUP
#line 3083 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
case 449:
YY_RULE_SETUP
#line 3087 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* END <MODE_PRAGMA> */
/*______________________________________________________________________
   |
   | PRAGMACONTENTS State
   |
   | This state recognizes characters in pragma content and transitions
   | out of this state when a '#)' pattern is recognized.
   |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 450:
/* rule 450 can match eol */
YY_RULE_SETUP
#line 3133 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (PRAGMA_LITERAL_AND_END, put(yytext, yyleng-2));
}
	YY_BREAK
case 451:
YY_RULE_SETUP
#line 3138 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* END <MODE_PRAGMACONTENTS> */
/*______________________________________________________________________
   |
   | VARNAME State
   |
   | This state differentiates variable names from qualified names. This
   | allows only the pattern of a QName to be recognized when otherwise
   | ambiguities could occur.
   |______________________________________________________________________*/

/* transition to OPERATOR */
/* ---------------------- */
case 452:
YY_RULE_SETUP
#line 3190 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_OPERATOR;
  TRY_SVAL_TOKEN (VARNAME, put_varname(yytext, yyleng));
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 453:
YY_RULE_SETUP
#line 3197 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 454:
YY_RULE_SETUP
#line 3201 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
case 455:
/* rule 455 can match eol */
YY_RULE_SETUP
#line 3205 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* eat up whitespace */
}
	YY_BREAK
/* END <MODE_VARNAME> */
/*______________________________________________________________________
   |
   | START_TAG State
   |
   | This state allows attributes in the native XML syntax, and marks the
   | beginning of an element construction. Element constructors also push
   | the current state, popping it at the conclusion of an end tag. In
   | the START_TAG state, the string ">" is recognized as a token which
   | is associated with the transition to the original state.
   |______________________________________________________________________*/

/* transition to ELEMENT_CONTENT */
/* ----------------------------- */
case 456:
YY_RULE_SETUP
#line 3255 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_ELEMENT_CONTENT;
  return token::TAG_END;
}
	YY_BREAK
/* transition to QUOT_ATTRIBUTE_CONTENT */
/* ------------------------------------ */
case 457:
YY_RULE_SETUP
#line 3262 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_QUOTE_ATTRIBUTE_CONTENT;
  return token::QUOTE;
}
	YY_BREAK
/* transition to APOS_ATTRIBUTE_CONTENT */
/* ------------------------------------ */
case 458:
YY_RULE_SETUP
#line 3269 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_APOS_ATTRIBUTE_CONTENT;
  return token::APOS;
}
	YY_BREAK
/* transition to START_TAG */
/* ----------------------- */
case 459:
YY_RULE_SETUP
#line 3276 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_START_TAG;
  return token::EQUALS;
}
	YY_BREAK
/* pop previous state on exit */
/* -------------------------- */
case 460:
YY_RULE_SETUP
#line 3283 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::EMPTY_TAG_END;
}
	YY_BREAK
/* maintain START_TAG */
/* ------------------ */
case 461:
/* rule 461 can match eol */
YY_RULE_SETUP
#line 3290 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* continue lexing */
}
	YY_BREAK
case 462:
YY_RULE_SETUP
#line 3294 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng));
}
	YY_BREAK
case 463:
YY_RULE_SETUP
#line 3298 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* END <MODE_START_TAG> */
/*______________________________________________________________________
   |
   | ELEMENT_CONTENT State
   |
   | This state allows XML-like content, without these characters being
   | misinterpreted as expressions. The character "{" marks a transition
   | to the INITIAL state, i.e. the start of an embedded expression, and
   | the "}" character pops back to the ELEMENT_CONTENT state. To allow
   | curly braces to be used as character content, a double left or right
   | curly brace is interpreted as a single curly brace character. The
   | string "</" is interpreted as the beginning of an end tag, which is
   | associated with a transition to the END_TAG state.
   |______________________________________________________________________*/

/* transition to END_TAG */
/* --------------------- */
case 464:
YY_RULE_SETUP
#line 3347 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_END_TAG;
  return token::START_TAG_END;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 465:
YY_RULE_SETUP
#line 3354 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(INITIAL);
  return token::LBRACE;
}
	YY_BREAK
/* transition to EXPR_COMMENT */
/* -------------------------- */
case 466:
YY_RULE_SETUP
#line 3361 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_XML_COMMENT);
  return token::XML_COMMENT_BEGIN;
}
	YY_BREAK
/* transition to PROCESSING_INSTRUCTION */
/* ------------------------------------ */
case 467:
YY_RULE_SETUP
#line 3368 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_PROCESSING_INSTRUCTION);
  return token::PI_BEGIN;
}
	YY_BREAK
/* transition to CDATA_SECTION */
/* --------------------------- */
case 468:
YY_RULE_SETUP
#line 3375 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_CDATA_SECTION);
  return token::CDATA_BEGIN;
}
	YY_BREAK
/* transition to START_TAG */
/* ----------------------- */
case 469:
YY_RULE_SETUP
#line 3382 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_START_TAG);
  return token::START_TAG;
}
	YY_BREAK
/* maintain ELEMENT_CONTENT */
/* ------------------------ */
case 470:
/* rule 470 can match eol */
YY_RULE_SETUP
#line 3389 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (ELEMENT_CONTENT, put(yytext, yyleng, true));
}
	YY_BREAK
case 471:
YY_RULE_SETUP
#line 3393 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (ELEMENT_CONTENT, put_entityref(yytext, yyleng));
}
	YY_BREAK
case 472:
YY_RULE_SETUP
#line 3397 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_STR_LIT (CHAR_REF_LITERAL, put_charref, yytext, yyleng);
}
	YY_BREAK
case 473:
YY_RULE_SETUP
#line 3401 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_LBRACE;
}
	YY_BREAK
case 474:
YY_RULE_SETUP
#line 3405 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_RBRACE;
}
	YY_BREAK
/* catch all else */
/* -------------- */
case 475:
YY_RULE_SETUP
#line 3411 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* MODE_ELEMENT_CONTENT> */
/*______________________________________________________________________
   |
   | END_TAG State
   |
   | When the end tag is terminated, the state is popped to the state
   | that was pushed at the start of the corresponding start tag.
   |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 476:
YY_RULE_SETUP
#line 3458 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::TAG_END;
}
	YY_BREAK
/* maintain END_TAG */
/* ---------------- */
case 477:
/* rule 477 can match eol */
YY_RULE_SETUP
#line 3465 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
   TRY_SVAL_TOKEN (QNAME, put_qname(yytext, yyleng, false, true));
}
	YY_BREAK
/* catch all else */
/* -------------- */
case 478:
YY_RULE_SETUP
#line 3471 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* END <MODE_END_TAG> */
/*______________________________________________________________________
   |
   | XML_COMMENT State
   | The "<--" token marks the beginning of an XML Comment, and the "-->"
   | token marks the end. This allows no special interpretation of other
   | characters in this state.
   |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 479:
YY_RULE_SETUP
#line 3512 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::XML_COMMENT_END;
}
	YY_BREAK
/* maintain XML_COMMENT */
/* -------------------- */
case 480:
/* rule 480 can match eol */
YY_RULE_SETUP
#line 3519 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (XML_COMMENT_LITERAL, put(yytext, yyleng));
}
	YY_BREAK
case 481:
YY_RULE_SETUP
#line 3523 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
   return token::UNRECOGNIZED;
 }
	YY_BREAK
/* END <MODE_XML_COMMENT> */
/*______________________________________________________________________
   |
   | EXPR_COMMENT State
   |
   | The "(:" token marks the beginning of an expression Comment, and
   | the ":)" token marks the end. This allows no special interpretation
   | of other characters in this state.
   |______________________________________________________________________*/

/* pop previous state */
/* ------------------ */
case 482:
YY_RULE_SETUP
#line 3569 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
}
	YY_BREAK
/* maintain EXPR_COMMENT */
/* --------------------- */
case 483:
YY_RULE_SETUP
#line 3575 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(MODE_EXPR_COMMENT);
}
	YY_BREAK
case 484:
/* rule 484 can match eol */
YY_RULE_SETUP
#line 3579 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  /* do nothing */
}
	YY_BREAK
case YY_STATE_EOF(MODE_EXPR_COMMENT):
#line 3583 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::UNRECOGNIZED;
}
	YY_BREAK
/* END <MODE_EXPR_COMMENT> */
/*______________________________________________________________________
   |
   | PROCESSING_INSTRUCTION State
   |
   | In this state, only patterns that are legal in a processing
   | instruction name are recognized.
   |______________________________________________________________________*/

/* transition to PROCESSING_INSTRUCTION_CONTENT */
/* -------------------------------------------- */
case 485:
/* rule 485 can match eol */
YY_RULE_SETUP
#line 3630 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PROCESSING_INSTRUCTION_CONTENT;
  /* continue lexing */
}
	YY_BREAK
/* pop previous state on exit */
/* -------------------------- */
case 486:
YY_RULE_SETUP
#line 3637 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  return token::PI_END;
}
	YY_BREAK
/* maintain PROCESSING_INSTRUCTION */
/* ------------------------------- */
case 487:
YY_RULE_SETUP
#line 3644 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_PROCESSING_INSTRUCTION;
  TRY_SVAL_TOKEN (PI_TARGET_LITERAL, put(yytext, yyleng));
}
	YY_BREAK
/* END <MODE_PROCESSING_INSTRUCTION> */
/*______________________________________________________________________
   |
   | PROCESSING_INSTRUCTION_CONTENT State
   |
   | In this state, only characters are that are legal in processing
   | instruction content are recognized.
   |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 488:
/* rule 488 can match eol */
YY_RULE_SETUP
#line 3691 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  TRY_SVAL_TOKEN (CHAR_LITERAL_AND_PI_END, put(yytext, yyleng-2));
}
	YY_BREAK
/* END <MODE_PROCESSING_INSTRUCTION_CONTENT> */
/*______________________________________________________________________
   |
   | CDATA_SECTION State
   |
   | In this state, only lexemes that are legal in a CDATA section are
   | recognized.
   |______________________________________________________________________*/

/* pop previous state on exit */
/* -------------------------- */
case 489:
YY_RULE_SETUP
#line 3734 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  POP_STATE();
  TRY_SVAL_TOKEN (CHAR_LITERAL_AND_CDATA_END, put(yytext, yyleng-3));
}
	YY_BREAK
/* maintain CDATA_SECTION */
/* ---------------------- */
case 490:
/* rule 490 can match eol */
YY_RULE_SETUP
#line 3741 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  yymore();
}
	YY_BREAK
/* END <MODE_CDATA_SECTION> */
/*______________________________________________________________________
   |
   | QUOTE_ATTRIBUTE_CONTENT State
   |
   | This state allows content legal for attributes. The character "{"
   | marks a transition to the INITIAL state, i.e. the start of an
   | embedded expression, and the "}" character pops back to the original
   | state.  To allow curly braces to be used as character content, a
   | double left or right curly brace is interpreted as a single curly
   | brace character. This state is the same as APOS_ATTRIBUTE_CONTENT,
   | except that apostrophes are allowed without escaping, and an
   | unescaped quote marks the end of the state.
   |______________________________________________________________________*/

/* transition to START_TAG */
/* ----------------------- */
case 491:
YY_RULE_SETUP
#line 3794 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_START_TAG;
  return token::QUOTE;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 492:
YY_RULE_SETUP
#line 3801 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_STATE(INITIAL);
  return token::LBRACE;
}
	YY_BREAK
/* maintain QUOTE_ATTRIBUTE_CONTENT */
/* -------------------------------- */
case 493:
YY_RULE_SETUP
#line 3808 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ESCAPE_QUOTE;
}
	YY_BREAK
case 494:
/* rule 494 can match eol */
YY_RULE_SETUP
#line 3812 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (QUOTE_ATTR_CONTENT, put(yytext, yyleng, true));
}
	YY_BREAK
case 495:
YY_RULE_SETUP
#line 3816 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (QUOTE_ATTR_CONTENT, put_entityref(yytext, yyleng));
}
	YY_BREAK
case 496:
YY_RULE_SETUP
#line 3820 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_STR_LIT (CHAR_REF_LITERAL, put_charref, yytext, yyleng);
}
	YY_BREAK
case 497:
YY_RULE_SETUP
#line 3824 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_LBRACE;
}
	YY_BREAK
case 498:
YY_RULE_SETUP
#line 3828 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_RBRACE;
}
	YY_BREAK
/* END <MODE_QUOTE_ATTRIBUTE_CONTENT> */
/*______________________________________________________________________
   |
   | APOS_ATTRIBUTE_CONTENT State
   |
   | This state is the same as QUOT_ATTRIBUTE_CONTENT, except that
   | quotes are allowed, and an unescaped apostrophe marks the end of
   | the state.
   |______________________________________________________________________*/

/* transition to START_TAG */
/* ----------------------- */
case 499:
YY_RULE_SETUP
#line 3881 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  BEGIN MODE_START_TAG;
  return token::APOS;
}
	YY_BREAK
/* transition to INITIAL */
/* --------------------- */
case 500:
YY_RULE_SETUP
#line 3888 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  PUSH_AND_BEGIN (INITIAL, MODE_APOS_ATTRIBUTE_CONTENT);
  return token::LBRACE;
}
	YY_BREAK
/* maintain APOS_ATTRIBUTE_CONTENT */
/* ------------------------------- */
case 501:
YY_RULE_SETUP
#line 3895 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::ESCAPE_APOS;
}
	YY_BREAK
case 502:
/* rule 502 can match eol */
YY_RULE_SETUP
#line 3899 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (APOS_ATTR_CONTENT, put(yytext, yyleng, true));
}
	YY_BREAK
case 503:
YY_RULE_SETUP
#line 3903 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_SVAL_TOKEN (APOS_ATTR_CONTENT, put_entityref(yytext, yyleng));
}
	YY_BREAK
case 504:
YY_RULE_SETUP
#line 3907 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  TRY_STR_LIT (CHAR_REF_LITERAL, put_charref, yytext, yyleng);
}
	YY_BREAK
case 505:
YY_RULE_SETUP
#line 3911 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_LBRACE;
}
	YY_BREAK
case 506:
YY_RULE_SETUP
#line 3915 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
{
  return token::DOUBLE_RBRACE;
}
	YY_BREAK
/* END <MODE_APOS_ATTRIBUTE_CONTENT> */
case 507:
YY_RULE_SETUP
#line 3943 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
return token::UNRECOGNIZED;
	YY_BREAK
/* END OF FLEX RULES */
case 508:
YY_RULE_SETUP
#line 3970 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"
ECHO;
	YY_BREAK
#line 13358 "xquery_scanner.yy.cpp"
			case YY_STATE_EOF(INITIAL):
			case YY_STATE_EOF(MODE_APOS_ATTRIBUTE_CONTENT):
			case YY_STATE_EOF(MODE_CDATA_SECTION):
			case YY_STATE_EOF(MODE_CLOSE_KINDTEST):
			case YY_STATE_EOF(MODE_DECLAREORDERING):
			case YY_STATE_EOF(MODE_ELEMENT_CONTENT):
			case YY_STATE_EOF(MODE_END_TAG):
			case YY_STATE_EOF(MODE_ITEMTYPE):
			case YY_STATE_EOF(MODE_KINDTEST):
			case YY_STATE_EOF(MODE_KINDTESTFORPI):
			case YY_STATE_EOF(MODE_NAMESPACEDECL):
			case YY_STATE_EOF(MODE_NAMESPACEKEYWORD):
			case YY_STATE_EOF(MODE_OCCURRENCE_INDICATOR):
			case YY_STATE_EOF(MODE_OPERATOR):
			case YY_STATE_EOF(MODE_OPTION):
			case YY_STATE_EOF(MODE_PRAGMA):
			case YY_STATE_EOF(MODE_PRAGMACONTENTS):
			case YY_STATE_EOF(MODE_PROCESSING_INSTRUCTION_CTOR):
			case YY_STATE_EOF(MODE_PROCESSING_INSTRUCTION):
			case YY_STATE_EOF(MODE_PROCESSING_INSTRUCTION_CONTENT):
			case YY_STATE_EOF(MODE_QUOTE_ATTRIBUTE_CONTENT):
			case YY_STATE_EOF(MODE_SINGLETYPE):
			case YY_STATE_EOF(MODE_START_TAG):
			case YY_STATE_EOF(MODE_URITOOPERATOR):
			case YY_STATE_EOF(MODE_VARNAME):
			case YY_STATE_EOF(MODE_XMLSPACE_DECL):
			case YY_STATE_EOF(MODE_XML_COMMENT):
			case YY_STATE_EOF(MODE_XQUERY_VERSION):
			case YY_STATE_EOF(MODE_DECLAREREVALIDATION):
			case YY_STATE_EOF(MODE_CATCH):
				yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of yylex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout )
{
	yyin = arg_yyin;
	yyout = arg_yyout;
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = 0;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = new yy_state_type[YY_STATE_BUF_SIZE];

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	Zorbafree(yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	Zorbafree(yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if ( new_in )
		{
		yy_delete_buffer( YY_CURRENT_BUFFER );
		yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );
		}

	if ( new_out )
		yyout = new_out;
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin->eof() || yyin->fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin->get( buf[0] );

	if ( yyin->eof() )
		return 0;

	if ( yyin->bad() )
		return -1;

	return 1;

#else
	(void) yyin->read( buf, max_size );

	if ( yyin->bad() )
		return -1;
	else
		return yyin->gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout->write( buf, size );
}
/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
int yyFlexLexer::yy_get_next_buffer()
/* %endif */
{
    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = (yytext_ptr);
	register int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), (size_t) num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) Zorbarealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_get_previous_state()
/* %endif */
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    
/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = (yy_start);

	(yy_state_ptr) = (yy_state_buf);
	*(yy_state_ptr)++ = yy_current_state;

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 3776 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		*(yy_state_ptr)++ = yy_current_state;
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
/* %endif */
{
	register int yy_is_jam;
    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */

	register YY_CHAR yy_c = 1;
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 3776 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 3775);
	if ( ! yy_is_jam )
		*(yy_state_ptr)++ = yy_current_state;

	return yy_is_jam ? 0 : yy_current_state;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyunput( int c, register char* yy_bp)
/* %endif */
{
	register char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = (yy_n_chars) + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yyinput()
/* %endif */
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return EOF;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

/* %% [19.0] update BOL and yylineno */

	return c;
}
/* %if-c-only */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyrestart( std::istream* input_file )
/* %endif */
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
/* %endif */
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_load_buffer_state()
/* %endif */
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) Zorbaalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) Zorbaalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		Zorbafree((void *) b->yy_ch_buf  );

	Zorbafree((void *) b  );
}

/* %if-c-only */
/* %endif */

/* %if-c++-only */

extern "C" int isatty (int );

/* %endif */

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream* file )
/* %endif */

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_is_interactive = 0;
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
/* %endif */
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypop_buffer_state (void)
/* %endif */
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yyensure_buffer_stack(void)
/* %endif */
{
	int num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (struct yy_buffer_state**)Zorbaalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
								  
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)Zorbarealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_push_state( int new_state )
/* %endif */
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) Zorbaalloc(new_size  );

		else
			(yy_start_stack) = (int *) Zorbarealloc((void *) (yy_start_stack),new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(new_state);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_pop_state()
/* %endif */
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yy_top_state()
/* %endif */
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::LexerError( yyconst char msg[] )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif */

/* %if-reentrant */
/* %if-bison-bridge */
/* %endif */
/* %endif if-c-only */

/* %if-c-only */
/* %endif */

/* %if-c-only SNIP! this currently causes conflicts with the c++ scanner */
/* %if-reentrant */
/* %endif */
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *Zorbaalloc (yy_size_t  size )
{
	return (void *) malloc( size );
}

void *Zorbarealloc  (void * ptr, yy_size_t  size )
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void Zorbafree (void * ptr )
{
	free( (char *) ptr );	/* see Zorbarealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 3970 "/home/muresan/Projects/zorba/src/compiler/parser/xquery_scanner.l"



/*
  Finally, because the scanner related driver's member function depend
  on the scanner's data, it is simpler to implement them in this file.
*/

std::string start_state(int state)
{
  switch (state) {
    case INITIAL: return "INITIAL";
    case MODE_APOS_ATTRIBUTE_CONTENT: return "MODE_APOS_ATTRIBUTE_CONTENT";
    case MODE_CDATA_SECTION: return "MODE_CDATA_SECTION";
    case MODE_CLOSE_KINDTEST: return "MODE_CLOSE_KINDTEST";
    case MODE_DECLAREORDERING: return "MODE_DECLAREORDERING";
    case MODE_ELEMENT_CONTENT: return "MODE_ELEMENT_CONTENT";
    case MODE_END_TAG: return "MODE_END_TAG";
    case MODE_EXPR_COMMENT: return "MODE_EXPR_COMMENT";
    case MODE_ITEMTYPE: return "MODE_ITEMTYPE";
    case MODE_KINDTEST: return "MODE_KINDTEST";
    case MODE_KINDTESTFORPI: return "MODE_KINDTESTFORPI";
    case MODE_NAMESPACEDECL: return "MODE_NAMESPACEDECL";
    case MODE_NAMESPACEKEYWORD: return "MODE_NAMESPACEKEYWORD";
    case MODE_OCCURRENCE_INDICATOR: return "MODE_OCCURRENCE_INDICATOR";
    case MODE_OPERATOR: return "MODE_OPERATOR";
    case MODE_OPTION: return "MODE_OPTION";
    case MODE_PRAGMA: return "MODE_PRAGMA";
    case MODE_PRAGMACONTENTS: return "MODE_PRAGMACONTENTS";
    case MODE_PROCESSING_INSTRUCTION: return "MODE_PROCESSING_INSTRUCTION";
    case MODE_PROCESSING_INSTRUCTION_CONTENT: return "MODE_PROCESSING_INSTRUCTION_CONTENT";
    case MODE_PROCESSING_INSTRUCTION_CTOR: return "MODE_PROCESSING_INSTRUCTION_CTOR";
    case MODE_QUOTE_ATTRIBUTE_CONTENT: return "MODE_QUOTE_ATTRIBUTE_CONTENT";
    case MODE_SINGLETYPE: return "MODE_SINGLETYPE";
    case MODE_START_TAG: return "MODE_START_TAG";
    case MODE_URITOOPERATOR: return "MODE_URITOOPERATOR";
    case MODE_VARNAME: return "MODE_VARNAME";
    case MODE_XMLSPACE_DECL: return "MODE_XMLSPACE_DECL";
    case MODE_XML_COMMENT: return "MODE_XML_COMMENT";
    case MODE_XQUERY_VERSION: return "MODE_XQUERY_VERSION";
    case MODE_CATCH: return "MODE_CATCH";
    default: return "Something's drastically wrong here, unrecognized start state!\n";
  }
}


namespace zorba {

xquery_scanner::xquery_scanner(
  xquery_driver* aDriver,
  std::istream* i,
  std::ostream* o)
: ZorbaFlexLexer(i, o), theDriver(aDriver)
{}

xquery_scanner::~xquery_scanner() {}


void xquery_scanner::set_yy_flex_debug(bool aBool)
{
  yy_flex_debug = aBool;
}
}

#ifdef yylex
#undef yylex
#endif

int ZorbaFlexLexer::yylex()
{
  std::cerr << "in ZorbaFlexLexer::yylex() !" << std::endl;
  return 0;
}

