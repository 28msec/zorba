#!/bin/bash

# $1 is the build directory
# $2 is test result file  in the build directory  
# $3 is the file to test
# $4 is the source directory of rbkt
# $5 is the reference result


# always delete the result file upfront
rm -f "$2" "$2.err"

QNAME=`dirname $3`/`basename $3 .xq`
REFRES=$4/$5

SPEC=$QNAME.spec
if test -f $QNAME.spec; then
    XARGS=`egrep ^Args: $SPEC| cut -f2- -d:`
    ERRS=`egrep ^Error: $SPEC | cut -f2- -d:`
else
    SPEC=""
    XARGS=""
    ERRS=""
fi

if test \( ! -f $REFRES \) -a \( "x$ERRS" = "x" \); then
    echo No reference result and no expected errors for $2
    exit 1
fi

echo "executing command: $1/test/apitest -q -r -o $2 $XARGS $3"

$1/test/apitest -q -r -o "$2" $XARGS "$3" 2> "$2.err" # execute the query
RETURNVALUE=$?
if [ $RETURNVALUE -ne 0 ]
then
    echo "ERROR: $1/test/apitest -q -r -o $2 $3 failed with error code ${RETURNVALUE}"
    exit ${RETURNVALUE}
fi

# if there's an error message...
if test -s "$2.err"; then
    cat "$2.err" | head -1 | cut -f1 -d':' > "$2"
    ACTUAL_ERR=`cat $2`
else
    ACTUAL_ERR=""
fi

echo
echo "Result"
cat "$2"
echo

# tidy the generated result and store it in the build dir
cat "$2" | "$4/Scripts/tidy_xmlfrag" > "$2.tidy"

# produce and tidy the ref result
{
    if test $ACTUAL_ERR; then
        if test "$ERRS" && egrep "^Error:$ACTUAL_ERR" $SPEC &> /dev/null; then
            # proper error was reported
            echo $ACTUAL_ERR
        else  # unexpected error was reported
            if test "$ERRS"; then  # other errors were expected
                echo $ERRS
            else  # no errors were expected
                cat $REFRES
            fi
        fi
    else  # no actual error
        if test -f $REFRES; then
            cat $REFRES
        else  # ... but an error was expected
            echo $ERRS
        fi
    fi;
    } | "$4/Scripts/tidy_xmlfrag" > "$1/test/rbkt/$5.tidy"

diff "$2.tidy" "$1/test/rbkt/$5.tidy" > "$1/test/rbkt/$5.diff"
RETURNVALUE=$?

if test $RETURNVALUE -ne 0; then
    echo "Diff against expected result"
    cat "$1/test/rbkt/$5.diff"
    exit $RETURNVALUE
fi
