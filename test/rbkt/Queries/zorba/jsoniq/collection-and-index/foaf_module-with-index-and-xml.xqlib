module namespace foaf = "http://www.w3.org/TestModules/foaf";

import module namespace ddl = "http://zorba.io/modules/store/static/collections/ddl";
import module namespace dml = "http://zorba.io/modules/store/static/collections/dml";
import module namespace index_ddl = "http://zorba.io/modules/store/static/indexes/ddl";
import module namespace index_dml = "http://zorba.io/modules/store/static/indexes/dml";

declare namespace ann = "http://zorba.io/annotations";

declare variable $foaf:network:= xs:QName("foaf:network");
declare variable $foaf:person:= xs:QName("foaf:person");
declare variable $foaf:age:= xs:QName("foaf:age");
declare variable $foaf:friends:= xs:QName("foaf:friends");

declare collection foaf:network as object()*;


(:
  The person index maps each person name with its information.
:)

declare %ann:automatic index foaf:person
on nodes dml:collection(xs:QName("foaf:network"))
by .("name")/string(first) as xs:string?;

(:
  Create and populate the collection, and then create the indexes
:)

declare %ann:sequential function foaf:create-db()
{
  ddl:create($foaf:network);

  dml:insert($foaf:network, (
    {
      "name" : <name><first>James</first><middle>T.</middle><last>Kirk</last></name>,
      "age" : 30,
      "gender" : "male",
      "friends" : [ "Mister Spock", "Scotty", "Jean-Luc Picard"]
    },

    {
      "name" : <name><first>Jean-Luc</first><last>Picard</last></name>,
      "age" : 40,
      "gender" : "male",
      "friends" : [ "James T. Kirk", "Lieutenant Commander Data", "Beverly Crusher" ]
    },

    {
      "name" : <name><first>Beverly</first><last>Crusher</last></name>,
      "age" : 38,
      "gender" : "female",
      "friends" : [ "Jean-Luc Picard", "Ensign Crusher" ]
    },

    {
      "name" : <name><grade>Lieutenant Commander</grade><first>Data</first></name>,
      "age" : 100,
      "gender" : "positronic matrix",
      "friends" : [ "Geordi La Forge" ]
    }
  ));

  index_ddl:create($foaf:person);
};


declare function foaf:probe-point-id($indexName as xs:QName, $id as xs:string)
{
  index_dml:probe-index-point-value($indexName, $id)
};

declare function foaf:probe-range-id($indexName as xs:QName, $lower as xs:integer, $upper as xs:integer)
{
  index_dml:probe-index-range-value($indexName, $lower, $upper, true(), true(), true(), true())
};

declare function foaf:probe-point-general-id($indexName as xs:QName, $names as xs:string*)
{
  index_dml:probe-index-point-general($indexName, $names)
};
