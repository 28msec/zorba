xquery version "3.0";

module namespace news-data = "http://www.news.org/data";

import schema namespace news = "http://www.news.org/schemas" at "news-schema.xsd";

import module namespace init = "http://zorba.io/modules/store/static/collections/ddl";
import module namespace manip = "http://zorba.io/modules/store/static/collections/dml";

declare namespace ann = "http://zorba.io/annotations";

declare collection news-data:employees
  as schema-element(news:employee)*;

declare collection news-data:articles as node()*;

declare %ann:read-only-nodes %ann:const %ann:ordered collection news-data:months
  as schema-element(news:month)*;


declare %ann:automatic %ann:value-equality index news-data:CityEmp
  on nodes manip:collection(xs:QName("news-data:employees"))
  by .//news:station/news:city as xs:string;


declare %ann:manual %ann:value-range index news-data:ArtCountEmp
  on nodes manip:collection(xs:QName("news-data:employees"))[./news:position/@kind eq "journalist"]
  by count(for $art in manip:collection(xs:QName("news-data:articles"))
           where xs:integer($art/empid/text()) = ./@id
           return $art) as xs:integer;


declare integrity constraint news-data:UniqueId
  on collection news-data:employees
  node $id check unique key $id/@id;

declare integrity constraint news-data:AuthorNames
  on collection news-data:articles
  foreach node $article check fn:string-length($article/author/name) != 0;

declare integrity constraint news-data:ArticleEmployees
  foreign key
    from collection news-data:articles node $x key xs:integer($x/empid)
    to   collection news-data:employees node $y key fn:data($y/@id);


declare variable $news-data:employees := xs:QName("news-data:employees");
declare variable $news-data:articles := xs:QName("news-data:articles");
declare variable $news-data:months := xs:QName("news-data:months");

declare variable $news-data:CityEmp := xs:QName("news-data:CityEmp");
declare variable $news-data:ArtCountEmp := xs:QName("news-data:ArtCountEmp");

declare variable $news-data:UniqueId := xs:QName("news-data:UniqueId");
declare variable $news-data:AuthorName := xs:QName("news-data:AuthorNames");
declare variable $news-data:ArticleEmployees := xs:QName("news-data:ArticleEmployees");
