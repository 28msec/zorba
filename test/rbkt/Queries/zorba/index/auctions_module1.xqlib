
module namespace auctions = "http://www.w3.org/TestModules/auctions";

import module namespace xqddf = "http://www.zorba-xquery.com/modules/xqddf";

declare variable $auctions:auctions := xs:QName("auctions:auctions");
declare variable $auctions:PersonId := xs:QName("auctions:PersonId");
declare variable $auctions:PersonCity := xs:QName("auctions:PersonCity");
declare variable $auctions:PersonWatches := xs:QName("auctions:PersonWatches");
declare variable $auctions:PersonWatches2 := xs:QName("auctions:PersonWatches2");

declare collection auctions:auctions as node()*;


(:
  The PersonId index maps each id to the person with that id.
:)

declare unique value range manually maintained index auctions:PersonId
on nodes xqddf:collection(xs:QName("auctions:auctions"))/site/people/person
by xs:string(fn:data(./@id)) as xs:string;


(:
  The PersonCity index maps each city to the persons that live in that city.
  The PersonCity index contains some NULL keys because not all persons have a city 
:)

declare value range automatically maintained index auctions:PersonCity
on nodes xqddf:collection(xs:QName("auctions:auctions"))/site/people/person
by xs:string(.//city) as xs:string;


(:
  The PersonWatches index maps each open auction to the persons who watch that auction.
:)

declare general equality manually maintained index auctions:PersonWatches
on nodes xqddf:collection(xs:QName("auctions:auctions"))/site/people/person
by (for $x in ./watches/watch/@open_auction return xs:string($x)) as xs:string*;


(:
  The PersonWatches2 is the same as the PersonWatches except that its key is untyped.
:)

declare general equality manually maintained index auctions:PersonWatches2
on nodes xqddf:collection(xs:QName("auctions:auctions"))/site/people/person
by (for $x in ./watches/watch/@open_auction return $x);


(:
  Create and populate the collection, and then create the indexes
:)

declare sequential function auctions:create-db()
{
  xqddf:create-collection($auctions:auctions);

  xqddf:insert-nodes($auctions:auctions, doc("auctions1.xml"));

  xqddf:create-index($auctions:PersonId);

  xqddf:create-index($auctions:PersonCity);

  xqddf:create-index($auctions:PersonWatches);

  xqddf:create-index($auctions:PersonWatches2);
};


declare function auctions:probe-point-id($indexName as xs:QName, $id as xs:string)
{
  xqddf:probe-index-point-value($indexName, $id)
};


(:
  Look for persons whose id is >= than the given id
:)

declare function auctions:probe-range-id($indexName as xs:QName, $id as xs:string)
{
  xqddf:probe-index-range-value($indexName,
                                $id,
                                "",
                                xs:boolean("true"), 
                                xs:boolean("false"),
                                xs:boolean("true"),
                                xs:boolean("false"))
};


declare function auctions:probe-point-city($indexName as xs:QName, $city as xs:string?)
{
  xqddf:probe-index-point-value($indexName, $city)
};


(:
  Look for persons whose city is >= than the given city
:)

declare function auctions:probe-range-city($indexName as xs:QName, $city as xs:string)
{
  xqddf:probe-index-range-value($indexName,
                                $city,
                                "",
                                xs:boolean("true"),
                                xs:boolean("false"),
                                xs:boolean("true"),
                                xs:boolean("false"))
};



(:
  Look for persons who watch at least one of the auctions in the given set
:)

declare function auctions:probe-point-watch(
    $indexName as xs:QName,
    $auctions as xs:string*)
{
  xqddf:probe-index-point-general($indexName, $auctions)
};

