Iterator tree for const-folded expr:
<CastIterator type="xs:date">
  <SingletonIterator value="xs:string(1901-01-06)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:dayTimeDuration">
  <SingletonIterator value="xs:string(P1D)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:date">
  <SingletonIterator value="xs:string(1901-01-06)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:dayTimeDuration">
  <SingletonIterator value="xs:string(P1D)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:date">
  <SingletonIterator value="xs:string(1901-01-06)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:dayTimeDuration">
  <SingletonIterator value="xs:string(P1D)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:boolean">
  <SingletonIterator value="xs:integer(0)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:boolean">
  <SingletonIterator value="xs:integer(1)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:dayTimeDuration">
  <SingletonIterator value="xs:string(P1D)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:dayTimeDuration">
  <SingletonIterator value="xs:string(P1D)"/>
</CastIterator>

Iterator tree for const-folded expr:
<CastIterator type="xs:date">
  <SingletonIterator value="xs:string(2008-07-01+01:00)"/>
</CastIterator>

Iterator tree for const-folded expr:
<NameCastIterator>
  <SingletonIterator value="xs:string(bgcolor)"/>
</NameCastIterator>

Iterator tree for const-folded expr:
<SingletonIterator value="2008-07-01+01:00"/>

Iterator tree for const-folded expr:
<SingletonIterator value="2008-07-01+01:00"/>

Iterator tree for const-folded expr:
<SingletonIterator value="xs:integer(20)"/>

Iterator tree for const-folded expr:
<SingletonIterator value="2008-07-01+01:00"/>

Iterator tree for const-folded expr:
<SingletonIterator value="2008-07-01+01:00"/>

Iterator tree for const-folded expr:
<FnEmptyIterator>
  <SingletonIterator value="xs:boolean(true)"/>
</FnEmptyIterator>

Iterator tree for main query:
<ElementIterator>
  <SingletonIterator value="xs:QName(,,html)"/>
  <ElementIterator>
    <SingletonIterator value="xs:QName(,,body)"/>
    <FnConcatIterator>
      <ElementIterator>
        <SingletonIterator value="xs:QName(,,h1)"/>
        <FnConcatIterator>
          <TextIterator>
            <SingletonIterator value="xs:string(Days from )"/>
          </TextIterator>
          <EnclosedIterator attr_cont="false">
            <SingletonIterator value="2008-07-01+01:00"/>
          </EnclosedIterator>
        </FnConcatIterator>
      </ElementIterator>
      <ElementIterator>
        <SingletonIterator value="xs:QName(,,p)"/>
        <FnConcatIterator>
          <TextIterator>
            <SingletonIterator value="xs:string(Today is a )"/>
          </TextIterator>
          <EnclosedIterator attr_cont="false">
            <UDFunctionCallIterator>
              <SingletonIterator value="2008-07-01+01:00"/>
            </UDFunctionCallIterator>
          </EnclosedIterator>
        </FnConcatIterator>
      </ElementIterator>
      <ElementIterator>
        <SingletonIterator value="xs:QName(,,table)"/>
        <AttributeIterator qname="xs:QName(,,border)">
          <SingletonIterator value="xs:string(1)"/>
        </AttributeIterator>
        <FnConcatIterator>
          <ElementIterator>
            <SingletonIterator value="xs:QName(,,thead)"/>
            <ElementIterator>
              <SingletonIterator value="xs:QName(,,tr)"/>
              <FnConcatIterator>
                <ElementIterator>
                  <SingletonIterator value="xs:QName(,,th)"/>
                  <TextIterator>
                    <SingletonIterator value="xs:string(Cal Days)"/>
                  </TextIterator>
                </ElementIterator>
                <ElementIterator>
                  <SingletonIterator value="xs:QName(,,th)"/>
                  <TextIterator>
                    <SingletonIterator value="xs:string(Furture Date)"/>
                  </TextIterator>
                </ElementIterator>
                <ElementIterator>
                  <SingletonIterator value="xs:QName(,,th)"/>
                  <TextIterator>
                    <SingletonIterator value="xs:string(Day of Week)"/>
                  </TextIterator>
                </ElementIterator>
                <ElementIterator>
                  <SingletonIterator value="xs:QName(,,th)"/>
                  <TextIterator>
                    <SingletonIterator value="xs:string(Net Working Days)"/>
                  </TextIterator>
                </ElementIterator>
              </FnConcatIterator>
            </ElementIterator>
          </ElementIterator>
          <EnclosedIterator attr_cont="false">
            <flwor::FLWORIterator>
              <ForVariable name="i">
                <OpToIterator>
                  <SingletonIterator value="xs:integer(0)"/>
                  <SingletonIterator value="xs:integer(20)"/>
                </OpToIterator>
              </ForVariable>
              <ForVariable name="d">
                <GenericArithIterator_AddOperation>
                  <SingletonIterator value="2008-07-01+01:00"/>
                  <CastIterator type="xs:dayTimeDuration">
                    <ConcatStrIterator>
                      <SingletonIterator value="xs:string(P)"/>
                      <ForVarIterator varname="i"/>
                      <SingletonIterator value="xs:string(D)"/>
                    </ConcatStrIterator>
                  </CastIterator>
                </GenericArithIterator_AddOperation>
              </ForVariable>
              <ForVariable name="dow">
                <FunctionTraceIterator>
                  <NumArithIterator_ModOperation>
                    <CastIterator type="xs:integer">
                      <GenericArithIterator_DivideOperation>
                        <GenericArithIterator_SubtractOperation>
                          <CastIterator type="xs:date">
                            <ForVarIterator varname="d"/>
                          </CastIterator>
                          <SingletonIterator value="1901-01-06"/>
                        </GenericArithIterator_SubtractOperation>
                        <SingletonIterator value="P1D"/>
                      </GenericArithIterator_DivideOperation>
                    </CastIterator>
                    <SingletonIterator value="xs:integer(7)"/>
                  </NumArithIterator_ModOperation>
                </FunctionTraceIterator>
              </ForVariable>
              <ReturnClause>
                <ElementIterator>
                  <SingletonIterator value="xs:QName(,,tr)"/>
                  <FnConcatIterator>
                    <EnclosedIterator attr_cont="false">
                      <IfThenElseIterator>
                        <FnBooleanIterator>
                          <NumArithIterator_ModOperation>
                            <ForVarIterator varname="i"/>
                            <SingletonIterator value="xs:integer(2)"/>
                          </NumArithIterator_ModOperation>
                        </FnBooleanIterator>
                        <AttributeIterator qname="xs:QName(,,bgcolor)">
                          <EnclosedIterator attr_cont="true">
                            <SingletonIterator value="xs:string(Lavender)"/>
                          </EnclosedIterator>
                        </AttributeIterator>
                        <FnConcatIterator/>
                      </IfThenElseIterator>
                    </EnclosedIterator>
                    <ElementIterator>
                      <SingletonIterator value="xs:QName(,,td)"/>
                      <AttributeIterator qname="xs:QName(,,align)">
                        <SingletonIterator value="xs:string(center)"/>
                      </AttributeIterator>
                      <EnclosedIterator attr_cont="false">
                        <ForVarIterator varname="i"/>
                      </EnclosedIterator>
                    </ElementIterator>
                    <ElementIterator>
                      <SingletonIterator value="xs:QName(,,td)"/>
                      <AttributeIterator qname="xs:QName(,,align)">
                        <SingletonIterator value="xs:string(center)"/>
                      </AttributeIterator>
                      <EnclosedIterator attr_cont="false">
                        <ForVarIterator varname="d"/>
                      </EnclosedIterator>
                    </ElementIterator>
                    <ElementIterator>
                      <SingletonIterator value="xs:QName(,,td)"/>
                      <AttributeIterator qname="xs:QName(,,align)">
                        <SingletonIterator value="xs:string(center)"/>
                      </AttributeIterator>
                      <EnclosedIterator attr_cont="false">
                        <UDFunctionCallIterator>
                          <ForVarIterator varname="d"/>
                        </UDFunctionCallIterator>
                      </EnclosedIterator>
                    </ElementIterator>
                    <ElementIterator>
                      <SingletonIterator value="xs:QName(,,td)"/>
                      <AttributeIterator qname="xs:QName(,,align)">
                        <SingletonIterator value="xs:string(center)"/>
                      </AttributeIterator>
                      <EnclosedIterator attr_cont="false">
                        <UDFunctionCallIterator>
                          <SingletonIterator value="2008-07-01+01:00"/>
                          <PromoteIterator type="xs:date">
                            <ForVarIterator varname="d"/>
                          </PromoteIterator>
                        </UDFunctionCallIterator>
                      </EnclosedIterator>
                    </ElementIterator>
                  </FnConcatIterator>
                </ElementIterator>
              </ReturnClause>
            </flwor::FLWORIterator>
          </EnclosedIterator>
        </FnConcatIterator>
      </ElementIterator>
    </FnConcatIterator>
  </ElementIterator>
</ElementIterator>

Iterator tree for functx:day-of-week-name-en:
<PromoteIterator type="xs:string">
  <flwor::FLWORIterator>
    <LetVariable name="date" materialize="true">
      <LetVarIterator varname="date"/>
    </LetVariable>
    <LetVariable name="$$opt_temp_0" materialize="true">
      <HoistIterator>
        <SpecificNumArithIterator_AddOperation_INTEGER>
          <FunctionTraceIterator>
            <IfThenElseIterator>
              <FnEmptyIterator>
                <LetVarIterator varname="date"/>
              </FnEmptyIterator>
              <FnConcatIterator/>
              <NumArithIterator_ModOperation>
                <CastIterator type="xs:integer">
                  <GenericArithIterator_DivideOperation>
                    <GenericArithIterator_SubtractOperation>
                      <CastIterator type="xs:date">
                        <LetVarIterator varname="date"/>
                      </CastIterator>
                      <SingletonIterator value="1901-01-06"/>
                    </GenericArithIterator_SubtractOperation>
                    <SingletonIterator value="P1D"/>
                  </GenericArithIterator_DivideOperation>
                </CastIterator>
                <SingletonIterator value="xs:integer(7)"/>
              </NumArithIterator_ModOperation>
            </IfThenElseIterator>
          </FunctionTraceIterator>
          <SingletonIterator value="xs:integer(1)"/>
        </SpecificNumArithIterator_AddOperation_INTEGER>
      </HoistIterator>
    </LetVariable>
    <ForVariable name="$$dot">
      <FnConcatIterator>
        <SingletonIterator value="xs:string(Sunday)"/>
        <SingletonIterator value="xs:string(Monday)"/>
        <SingletonIterator value="xs:string(Tuesday)"/>
        <SingletonIterator value="xs:string(Wednesday)"/>
        <SingletonIterator value="xs:string(Thursday)"/>
        <SingletonIterator value="xs:string(Friday)"/>
        <SingletonIterator value="xs:string(Saturday)"/>
      </FnConcatIterator>
    </ForVariable>
    <LetVariable name="$$temp21" materialize="true">
      <UnhoistIterator>
        <LetVarIterator varname="$$opt_temp_0"/>
      </UnhoistIterator>
    </LetVariable>
    <ReturnClause>
      <IfThenElseIterator>
        <InstanceOfIterator>
          <LetVarIterator varname="$$temp21"/>
        </InstanceOfIterator>
        <IfThenElseIterator>
          <FnBooleanIterator>
            <TypedValueCompareIterator_INTEGER>
              <ForVarIterator varname="$$pos"/>
              <LetVarIterator varname="$$temp21"/>
            </TypedValueCompareIterator_INTEGER>
          </FnBooleanIterator>
          <ForVarIterator varname="$$dot"/>
          <FnConcatIterator/>
        </IfThenElseIterator>
        <IfThenElseIterator>
          <FnBooleanIterator>
            <LetVarIterator varname="$$temp21"/>
          </FnBooleanIterator>
          <ForVarIterator varname="$$dot"/>
          <FnConcatIterator/>
        </IfThenElseIterator>
      </IfThenElseIterator>
    </ReturnClause>
  </flwor::FLWORIterator>
</PromoteIterator>

Iterator tree for fxx:net-working-days:
<UDFunctionCallIterator>
  <LetVarIterator varname="s"/>
  <LetVarIterator varname="f"/>
  <FnConcatIterator/>
  <SingletonIterator value="xs:integer(0)"/>
</UDFunctionCallIterator>

Iterator tree for fxx:net-working-days-n:
<flwor::FLWORIterator>
  <ForVariable name="s">
    <LetVarIterator varname="s"/>
  </ForVariable>
  <ForVariable name="f">
    <LetVarIterator varname="f"/>
  </ForVariable>
  <LetVariable name="dates" materialize="true">
    <LetVarIterator varname="dates"/>
  </LetVariable>
  <ReturnClause>
    <IfThenElseIterator>
      <CompareIterator>
        <ForVarIterator varname="s"/>
        <ForVarIterator varname="f"/>
      </CompareIterator>
      <LetVarIterator varname="total"/>
      <IfThenElseIterator>
        <AndIterator>
          <FunctionTraceIterator>
            <IfThenElseIterator>
              <OrIterator>
                <TypedValueCompareIterator_INTEGER>
                  <NumArithIterator_ModOperation>
                    <CastIterator type="xs:integer">
                      <GenericArithIterator_DivideOperation>
                        <GenericArithIterator_SubtractOperation>
                          <ForVarIterator varname="s"/>
                          <SingletonIterator value="1901-01-06"/>
                        </GenericArithIterator_SubtractOperation>
                        <SingletonIterator value="P1D"/>
                      </GenericArithIterator_DivideOperation>
                    </CastIterator>
                    <SingletonIterator value="xs:integer(7)"/>
                  </NumArithIterator_ModOperation>
                  <SingletonIterator value="xs:integer(5)"/>
                </TypedValueCompareIterator_INTEGER>
                <TypedValueCompareIterator_INTEGER>
                  <NumArithIterator_ModOperation>
                    <CastIterator type="xs:integer">
                      <GenericArithIterator_DivideOperation>
                        <GenericArithIterator_SubtractOperation>
                          <ForVarIterator varname="s"/>
                          <SingletonIterator value="1901-01-06"/>
                        </GenericArithIterator_SubtractOperation>
                        <SingletonIterator value="P1D"/>
                      </GenericArithIterator_DivideOperation>
                    </CastIterator>
                    <SingletonIterator value="xs:integer(7)"/>
                  </NumArithIterator_ModOperation>
                  <SingletonIterator value="xs:integer(6)"/>
                </TypedValueCompareIterator_INTEGER>
              </OrIterator>
              <SingletonIterator value="xs:boolean(false)"/>
              <SingletonIterator value="xs:boolean(true)"/>
            </IfThenElseIterator>
          </FunctionTraceIterator>
          <FnBooleanIterator>
            <CompareIterator>
              <ForVarIterator varname="s"/>
              <LetVarIterator varname="dates"/>
            </CompareIterator>
          </FnBooleanIterator>
        </AndIterator>
        <UDFunctionCallIterator>
          <PromoteIterator type="xs:date">
            <GenericArithIterator_AddOperation>
              <ForVarIterator varname="s"/>
              <SingletonIterator value="P1D"/>
            </GenericArithIterator_AddOperation>
          </PromoteIterator>
          <ForVarIterator varname="f"/>
          <LetVarIterator varname="dates"/>
          <SpecificNumArithIterator_AddOperation_INTEGER>
            <LetVarIterator varname="total"/>
            <SingletonIterator value="xs:integer(1)"/>
          </SpecificNumArithIterator_AddOperation_INTEGER>
        </UDFunctionCallIterator>
        <UDFunctionCallIterator>
          <PromoteIterator type="xs:date">
            <GenericArithIterator_AddOperation>
              <ForVarIterator varname="s"/>
              <SingletonIterator value="P1D"/>
            </GenericArithIterator_AddOperation>
          </PromoteIterator>
          <ForVarIterator varname="f"/>
          <LetVarIterator varname="dates"/>
          <LetVarIterator varname="total"/>
        </UDFunctionCallIterator>
      </IfThenElseIterator>
    </IfThenElseIterator>
  </ReturnClause>
</flwor::FLWORIterator>

