Iterator tree for const-folded expr:
<PromoteIterator type="xs:double">
  <SingletonIterator value="xs:integer(5000)"/>
</PromoteIterator>

Iterator tree for main query:
<SequentialIterator>
  <CtxVarDeclareIterator varid="2" varname="input-context"/>
  <flwor::FLWORIterator>
    <LetVariable name="auction" materialize="true">
      <FnDocIterator>
        <PromoteIterator type="xs:string">
          <FnDataIterator>
            <CtxVarIterator varid="2" varname="input-context" varkind="global"/>
          </FnDataIterator>
        </PromoteIterator>
      </FnDocIterator>
    </LetVariable>
    <LetVariable name="$$opt_temp_0" materialize="true">
      <HoistIterator>
        <ChildAxisIterator test kind="match_name_test" qname="xs:QName(,,initial)" typename="*" nill allowed="0">
          <ChildAxisIterator test kind="match_name_test" qname="xs:QName(,,open_auction)" typename="*" nill allowed="0">
            <ChildAxisIterator test kind="match_name_test" qname="xs:QName(,,open_auctions)" typename="*" nill allowed="0">
              <ChildAxisIterator test kind="match_name_test" qname="xs:QName(,,site)" typename="*" nill allowed="0">
                <LetVarIterator varname="auction"/>
              </ChildAxisIterator>
            </ChildAxisIterator>
          </ChildAxisIterator>
        </ChildAxisIterator>
      </HoistIterator>
    </LetVariable>
    <ForVariable name="p">
      <ChildAxisIterator test kind="match_name_test" qname="xs:QName(,,person)" typename="*" nill allowed="0">
        <ChildAxisIterator test kind="match_name_test" qname="xs:QName(,,people)" typename="*" nill allowed="0">
          <ChildAxisIterator test kind="match_name_test" qname="xs:QName(,,site)" typename="*" nill allowed="0">
            <LetVarIterator varname="auction"/>
          </ChildAxisIterator>
        </ChildAxisIterator>
      </ChildAxisIterator>
    </ForVariable>
    <LetVariable name="$$opt_temp_1" materialize="true">
      <HoistIterator>
        <FnDataIterator>
          <AttributeAxisIterator test kind="match_name_test" qname="xs:QName(,,income)" typename="*" nill allowed="0">
            <ChildAxisIterator test kind="match_name_test" qname="xs:QName(,,profile)" typename="*" nill allowed="0">
              <ForVarIterator varname="p"/>
            </ChildAxisIterator>
          </AttributeAxisIterator>
        </FnDataIterator>
      </HoistIterator>
    </LetVariable>
    <ReturnClause>
      <ElementIterator>
        <SingletonIterator value="xs:QName(,,items)"/>
        <AttributeIterator qname="xs:QName(,,name)">
          <EnclosedIterator attr_cont="true">
            <FnDataIterator>
              <ChildAxisIterator test kind="match_text_test" qname="*" typename="*" nill allowed="0">
                <ChildAxisIterator test kind="match_name_test" qname="xs:QName(,,name)" typename="*" nill allowed="0">
                  <ForVarIterator varname="p"/>
                </ChildAxisIterator>
              </ChildAxisIterator>
            </FnDataIterator>
          </EnclosedIterator>
        </AttributeIterator>
        <EnclosedIterator attr_cont="false">
          <FnCountIterator>
            <flwor::FLWORIterator>
              <ForVariable name="i">
                <UnhoistIterator>
                  <LetVarIterator varname="$$opt_temp_0"/>
                </UnhoistIterator>
              </ForVariable>
              <WhereClause>
                <CompareIterator>
                  <UnhoistIterator>
                    <LetVarIterator varname="$$opt_temp_1"/>
                  </UnhoistIterator>
                  <SpecificNumArithIterator_MultiplyOperation_DOUBLE>
                    <SingletonIterator value="xs:double(5000)"/>
                    <PromoteIterator type="xs:double">
                      <FnDataIterator>
                        <FnExactlyOneIterator>
                          <ChildAxisIterator test kind="match_text_test" qname="*" typename="*" nill allowed="0">
                            <ForVarIterator varname="i"/>
                          </ChildAxisIterator>
                        </FnExactlyOneIterator>
                      </FnDataIterator>
                    </PromoteIterator>
                  </SpecificNumArithIterator_MultiplyOperation_DOUBLE>
                </CompareIterator>
              </WhereClause>
              <ReturnClause>
                <ForVarIterator varname="i"/>
              </ReturnClause>
            </flwor::FLWORIterator>
          </FnCountIterator>
        </EnclosedIterator>
      </ElementIterator>
    </ReturnClause>
  </flwor::FLWORIterator>
</SequentialIterator>

