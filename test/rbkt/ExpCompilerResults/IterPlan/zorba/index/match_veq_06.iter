Iterator tree for doc indexer:
<flwor::FLWORIterator>
  <ForVariable name="$$context-item">
    <CtxVarIterator varid="1" varname="$$idx_doc_var" varkind="global"/>
  </ForVariable>
  <ReturnClause>
    <ValueIndexEntryBuilderIterator>
      <ForVarIterator varname="$$context-item"/>
      <PromoteIterator type="xs:string">
        <FnDataIterator>
          <AttributeAxisIterator test kind="match_name_test" qname="xs:QName(,,uri)" typename="*" nill allowed="0">
            <ForVarIterator varname="$$context-item"/>
          </AttributeAxisIterator>
        </FnDataIterator>
      </PromoteIterator>
      <PromoteIterator type="xs:string">
        <FnDataIterator>
          <AttributeAxisIterator test kind="match_name_test" qname="xs:QName(,,child)" typename="*" nill allowed="0">
            <ForVarIterator varname="$$context-item"/>
          </AttributeAxisIterator>
        </FnDataIterator>
      </PromoteIterator>
    </ValueIndexEntryBuilderIterator>
  </ReturnClause>
</flwor::FLWORIterator>

Iterator tree for index:
<flwor::FLWORIterator>
  <ForVariable name="$$context-item">
    <ZorbaCollectionIterator>
      <SingletonIterator value="xs:QName(www.data.com,data,parents)"/>
    </ZorbaCollectionIterator>
  </ForVariable>
  <ReturnClause>
    <ValueIndexEntryBuilderIterator>
      <ForVarIterator varname="$$context-item"/>
      <PromoteIterator type="xs:string">
        <FnDataIterator>
          <AttributeAxisIterator test kind="match_name_test" qname="xs:QName(,,uri)" typename="*" nill allowed="0">
            <ForVarIterator varname="$$context-item"/>
          </AttributeAxisIterator>
        </FnDataIterator>
      </PromoteIterator>
      <PromoteIterator type="xs:string">
        <FnDataIterator>
          <AttributeAxisIterator test kind="match_name_test" qname="xs:QName(,,child)" typename="*" nill allowed="0">
            <ForVarIterator varname="$$context-item"/>
          </AttributeAxisIterator>
        </FnDataIterator>
      </PromoteIterator>
    </ValueIndexEntryBuilderIterator>
  </ReturnClause>
</flwor::FLWORIterator>

Iterator tree for const-folded expr:
<SingletonIterator value="xs:boolean(true)"/>

Iterator tree for const-folded expr:
<SingletonIterator value="xs:boolean(false)"/>

Iterator tree for const-folded expr:
<CastIterator type="xs:anyURI">
  <SingletonIterator value="xs:string(http://www.xmlteam.com/zorba/repo/index)"/>
</CastIterator>

Iterator tree for const-folded expr:
<SingletonIterator value="xs:boolean(true)"/>

Iterator tree for main query:
<SequentialIterator>
  <CtxVarDeclareIterator varid="4" varname="data:parents">
    <SingletonIterator value="xs:QName(www.data.com,data,parents)"/>
  </CtxVarDeclareIterator>
  <CtxVarDeclareIterator varid="5" varname="data:idx">
    <SingletonIterator value="xs:QName(www.data.com,data,idx)"/>
  </CtxVarDeclareIterator>
  <SequentialIterator>
    <ApplyIterator>
      <ZorbaCreateCollectionIterator>
        <CtxVarIterator varid="4" varname="data:parents" varkind="global"/>
      </ZorbaCreateCollectionIterator>
    </ApplyIterator>
    <ApplyIterator>
      <CreateIndexIterator>
        <CtxVarIterator varid="5" varname="data:idx" varkind="global"/>
      </CreateIndexIterator>
    </ApplyIterator>
    <ApplyIterator>
      <UDFunctionCallIterator function="data:add-document">
        <SingletonIterator value="xs:anyURI(http://www.xmlteam.com/zorba/repo/index)"/>
        <SingletonIterator value="xs:boolean(true)"/>
      </UDFunctionCallIterator>
    </ApplyIterator>
    <FnConcatIterator>
      <ZorbaCollectionIterator>
        <CtxVarIterator varid="4" varname="data:parents" varkind="global"/>
      </ZorbaCollectionIterator>
      <SingletonIterator value="xs:string(
)"/>
    </FnConcatIterator>
  </SequentialIterator>
</SequentialIterator>

Iterator tree for data:add-document:
<flwor::FLWORIterator>
  <ForVariable name="docURI">
    <LetVarIterator varname="docURI"/>
  </ForVariable>
  <ForVariable name="overwrite">
    <LetVarIterator varname="overwrite"/>
  </ForVariable>
  <MaterializeClause>
    <MaterializeForVariable inputVar="docURI : "/>
    <MaterializeForVariable inputVar="overwrite : "/>
  </MaterializeClause>
  <ReturnClause>
    <SequentialIterator>
      <CtxVarDeclareIterator varid="1" varname="doc-uri">
        <SubstringAfterIterator>
          <PromoteIterator type="xs:string">
            <ForVarIterator varname="docURI"/>
          </PromoteIterator>
          <SingletonIterator value="xs:string(http://www.xmlteam.com)"/>
        </SubstringAfterIterator>
      </CtxVarDeclareIterator>
      <CtxVarDeclareIterator varid="2" varname="segments">
        <FnTokenizeIterator>
          <PromoteIterator type="xs:string">
            <FnDataIterator>
              <CtxVarIterator varid="1" varname="doc-uri" varkind="local"/>
            </FnDataIterator>
          </PromoteIterator>
          <SingletonIterator value="xs:string(/)"/>
        </FnTokenizeIterator>
      </CtxVarDeclareIterator>
      <flwor::FLWORIterator>
        <LetVariable name="$$opt_temp_0" materialize="true">
          <HoistIterator>
            <ZorbaCollectionIterator>
              <CtxVarIterator varid="4" varname="data:parents" varkind="global"/>
            </ZorbaCollectionIterator>
          </HoistIterator>
        </LetVariable>
        <ForVariable name="segment">
          <CtxVarIterator varid="2" varname="segments" varkind="local"/>
        </ForVariable>
        <ForVariable name="parent">
          <StringJoinIterator>
            <PromoteIterator type="xs:string">
              <FnDataIterator>
                <CtxVarIterator varid="2" varname="segments" varkind="local">
                  <SingletonIterator value="xs:integer(1)"/>
                  <SpecificNumArithIterator_SubtractOperation_INTEGER>
                    <ForVarIterator varname="i"/>
                    <SingletonIterator value="xs:integer(1)"/>
                  </SpecificNumArithIterator_SubtractOperation_INTEGER>
                </CtxVarIterator>
              </FnDataIterator>
            </PromoteIterator>
            <SingletonIterator value="xs:string(/)"/>
          </StringJoinIterator>
        </ForVariable>
        <ForVariable name="child">
          <StringJoinIterator>
            <PromoteIterator type="xs:string">
              <FnDataIterator>
                <CtxVarIterator varid="2" varname="segments" varkind="local">
                  <SingletonIterator value="xs:integer(1)"/>
                  <ForVarIterator varname="i"/>
                </CtxVarIterator>
              </FnDataIterator>
            </PromoteIterator>
            <SingletonIterator value="xs:string(/)"/>
          </StringJoinIterator>
        </ForVariable>
        <WhereClause>
          <AndIterator>
            <TypedValueCompareIterator_INTEGER>
              <ForVarIterator varname="i"/>
              <SingletonIterator value="xs:integer(1)"/>
            </TypedValueCompareIterator_INTEGER>
            <FnEmptyIterator>
              <flwor::FLWORIterator>
                <ForVariable name="p">
                  <ProbeIndexPointValueIterator>
                    <SingletonIterator value="xs:QName(www.data.com,data,idx)"/>
                    <ForVarIterator varname="parent"/>
                    <ForVarIterator varname="child"/>
                  </ProbeIndexPointValueIterator>
                </ForVariable>
                <ReturnClause>
                  <SingletonIterator value="xs:boolean(true)"/>
                </ReturnClause>
              </flwor::FLWORIterator>
            </FnEmptyIterator>
          </AndIterator>
        </WhereClause>
        <MaterializeClause>
          <MaterializeForVariable inputVar="parent : "/>
          <MaterializeForVariable inputVar="child : "/>
        </MaterializeClause>
        <ReturnClause>
          <ApplyIterator>
            <ZorbaInsertNodesIterator need-to-copy="true">
              <CtxVarIterator varid="4" varname="data:parents" varkind="global"/>
              <ElementIterator>
                <SingletonIterator value="xs:QName(,,parent)"/>
                <FnConcatIterator>
                  <AttributeIterator qname="xs:QName(,,uri)">
                    <EnclosedIterator attr_cont="true">
                      <ForVarIterator varname="parent"/>
                    </EnclosedIterator>
                  </AttributeIterator>
                  <AttributeIterator qname="xs:QName(,,child)">
                    <EnclosedIterator attr_cont="true">
                      <ForVarIterator varname="child"/>
                    </EnclosedIterator>
                  </AttributeIterator>
                </FnConcatIterator>
              </ElementIterator>
            </ZorbaInsertNodesIterator>
          </ApplyIterator>
        </ReturnClause>
      </flwor::FLWORIterator>
      <IfThenElseIterator>
        <AndIterator>
          <ForVarIterator varname="overwrite"/>
          <FunctionTraceIterator>
            <flwor::FLWORIterator>
              <ForVariable name="docURI">
                <PromoteIterator type="xs:string">
                  <FnDataIterator>
                    <CtxVarIterator varid="1" varname="doc-uri" varkind="local"/>
                  </FnDataIterator>
                </PromoteIterator>
              </ForVariable>
              <ReturnClause>
                <IfThenElseIterator>
                  <FnBooleanIterator>
                    <TryCatchIterator>
                      <RetrieveDocumentIterator>
                        <ForVarIterator varname="docURI"/>
                      </RetrieveDocumentIterator>
                      <FnConcatIterator/>
                    </TryCatchIterator>
                  </FnBooleanIterator>
                  <SingletonIterator value="xs:boolean(true)"/>
                  <SingletonIterator value="xs:boolean(false)"/>
                </IfThenElseIterator>
              </ReturnClause>
            </flwor::FLWORIterator>
          </FunctionTraceIterator>
        </AndIterator>
        <ApplyIterator>
          <FunctionTraceIterator>
            <flwor::FLWORIterator>
              <LetVariable name="tokens" materialize="true">
                <FnTokenizeIterator>
                  <SubstringAfterIterator>
                    <PromoteIterator type="xs:string">
                      <TraceIterator>
                        <ForVarIterator varname="docURI"/>
                        <SingletonIterator value="xs:string(uri)"/>
                      </TraceIterator>
                    </PromoteIterator>
                    <SingletonIterator value="xs:string(http://www.xmlteam.com)"/>
                  </SubstringAfterIterator>
                  <SingletonIterator value="xs:string(/)"/>
                </FnTokenizeIterator>
              </LetVariable>
              <ForVariable name="parent-uri">
                <StringJoinIterator>
                  <LetVarIterator varname="tokens">
                    <SingletonIterator value="xs:integer(1)"/>
                    <SpecificNumArithIterator_SubtractOperation_INTEGER>
                      <FnCountIterator>
                        <LetVarIterator varname="tokens"/>
                      </FnCountIterator>
                      <SingletonIterator value="xs:integer(1)"/>
                    </SpecificNumArithIterator_SubtractOperation_INTEGER>
                  </LetVarIterator>
                  <SingletonIterator value="xs:string(/)"/>
                </StringJoinIterator>
              </ForVariable>
              <ForVariable name="child-uri">
                <StringJoinIterator>
                  <LetVarIterator varname="tokens"/>
                  <SingletonIterator value="xs:string(/)"/>
                </StringJoinIterator>
              </ForVariable>
              <LetVariable name="parent" materialize="true">
                <ProbeIndexPointValueIterator>
                  <SingletonIterator value="xs:QName(www.data.com,data,idx)"/>
                  <ForVarIterator varname="parent-uri"/>
                  <ForVarIterator varname="child-uri"/>
                </ProbeIndexPointValueIterator>
              </LetVariable>
              <MaterializeClause>
                <MaterializeForVariable inputVar="parent-uri : "/>
                <MaterializeForVariable inputVar="child-uri : "/>
                <MaterializeLetVariable inputVar="parent : "/>
              </MaterializeClause>
              <ReturnClause>
                <SequentialIterator>
                  <ApplyIterator>
                    <TraceIterator>
                      <ForVarIterator varname="parent-uri"/>
                      <SingletonIterator value="xs:string(parent)"/>
                    </TraceIterator>
                  </ApplyIterator>
                  <ApplyIterator>
                    <TraceIterator>
                      <ForVarIterator varname="child-uri"/>
                      <SingletonIterator value="xs:string(child)"/>
                    </TraceIterator>
                  </ApplyIterator>
                  <ApplyIterator>
                    <ZorbaDeleteNodesIterator>
                      <LetVarIterator varname="parent"/>
                    </ZorbaDeleteNodesIterator>
                  </ApplyIterator>
                </SequentialIterator>
              </ReturnClause>
            </flwor::FLWORIterator>
          </FunctionTraceIterator>
        </ApplyIterator>
        <ApplyIterator>
          <FnConcatIterator/>
        </ApplyIterator>
      </IfThenElseIterator>
    </SequentialIterator>
  </ReturnClause>
</flwor::FLWORIterator>

