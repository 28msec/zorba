#!/bin/sh

export CLEAN_BUILD=1
while test $# -gt 0; do
case $1 in
--no-clean) export CLEAN_BUILD="" ;;
local) MODE=local ;;
server) MODE=server ;;
esac
shift
done

test $MODE || MODE=local

export ROOT=`pwd`
export NOW=`date +%F-%T`

test -d snapshots || mkdir snapshots
export LASTDATE=`cd snapshots; ls -rd *-*-*-*:*:* 2>/dev/null | head -1`
if test $LASTDATE; then
    LASTREV=`cat snapshots/$LASTDATE/rev`
    echo Last date $LASTDATE, revision $LASTREV
fi
export TESTS=$ROOT/testing

#
# Check out sources
#

if test "x$MODE" = "xlocal"; then
  export REV="local"
  TMPDIR=`mktemp -d`
  export SRC=$ROOT/../..
else
  export SRC=$ROOT/src
  export REV=`svn update $SRC | perl -ne 'if (/revision ([0-9]+)/) { print $1; }'`
  if test -z $REV; then echo Could not update sources; exit 1; fi
  if test "x$REV" = "x$LASTREV"; then echo No changes, exiting; exit; fi
fi

#
# Compile
#

echo Building for snapshot $NOW, revision $REV

rm -f svn_log.xml
if test "x$LASTREV" != "x" -a "x$REV" != "xlocal"; then
    svn log --xml $SRC -r$LASTREV:$REV >svn_log.xml
fi
test -f svn_log.xml -a -s svn_log.xml || echo '<?xml version="1.0" encoding="UTF-8"?><log />' >svn_log.xml


if test $CLEAN_BUILD; then rm -rf build; fi

test -d build || mkdir build
cd build
$ROOT/compile > $ROOT/build_log.txt 2>&1 || { cd $ROOT; ./on_build_failure; exit 1; }
cd $ROOT

echo Build succeeded
export SNAPSHOT=$ROOT/snapshots/$NOW
mkdir -p $SNAPSHOT
cd $SNAPSHOT
echo $REV >rev; echo $NOW >timestamp
touch BUILD_OK
mv -f $ROOT/build_log.txt $ROOT/svn_log.xml .

#
# Test
#

do_tests () {

. $ROOT/load_test_env

cp -a $TESTS/tests .
cd tests
find . -name fixture -exec $ROOT/run_fixture {} \;
find . -name run -exec $ROOT/run_test {} \;
cd $SNAPSHOT

$ROOT/process_test_results

cd test_results
diff -qr acceptance $TESTS/test_results/acceptance | grep -v '^Only in' | cut -f2 -d' ' | xargs -r -l1 dirname | xargs -r -l1 $ROOT/report_acceptance_failure $TESTS >../acceptance_failures.xmlfrag
cd ..
test -s acceptance_failures.xmlfrag && export ACCEPTANCE_FAILURES=y
echo '<failures>' >acceptance_failures.xml
cat acceptance_failures.xmlfrag >>acceptance_failures.xml
echo '</failures>' >>acceptance_failures.xml
rm acceptance_failures.xmlfrag

}

if test -d $TESTS; then do_tests; fi
cp $ROOT/report.xqy .
$ROOT/xquery report.xqy now=$NOW rev=$REV lastdate=$LASTDATE lastrev=$LASTREV >index.html

if test $ACCEPTANCE_FAILURES; then
  echo Some acceptance tests failed, see $PWD/index.html
else
  echo All acceptance tests passed
fi

if test "x$MODE" != "xlocal"; then
   rm -f $ROOT/snapshots/latest
   ln -s $ROOT/snapshots/$NOW $ROOT/snapshots/latest
#  echo "Please see attached report." | mutt -s "Zorba integration report" -a index.html `cat $ROOT/success_email.txt`
fi

