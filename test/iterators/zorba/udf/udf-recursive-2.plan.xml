<iterator-tree description="const-folded expr">
  <UDFunctionCallIterator function="local:recursion">
    <UDFunctionArgs>
      <FnConcatIterator/>
    </UDFunctionArgs>
  </UDFunctionCallIterator>
</iterator-tree>
<iterator-tree description="local:recursion">
  <FLWORIterator>
    <LetVariable name="param" materialize="true">
      <LetVarIterator varname="param"/>
    </LetVariable>
    <ReturnClause>
      <IfThenElseIterator>
        <FnBooleanIterator>
          <LetVarIterator varname="param"/>
        </FnBooleanIterator>
        <UDFunctionCallIterator function="local:recursion">
          <UDFunctionArgs>
            <FnConcatIterator/>
          </UDFunctionArgs>
        </UDFunctionCallIterator>
        <SingletonIterator value="xs:boolean(false)"/>
      </IfThenElseIterator>
    </ReturnClause>
  </FLWORIterator>
</iterator-tree>
<iterator-tree description="const-folded expr">
  <SingletonIterator value="xs:boolean(false)"/>
</iterator-tree>
<iterator-tree description="main query">
  <UDFunctionCallIterator function="local:recursion">
    <UDFunctionArgs>
      <TreatIterator type="[NodeXQType elementNode content=[UserDefinedXQType  Content@http://foo.com/schemas/schema isComplex emptyContent base:[XQType ANY_TYPE_KIND*]]]" quant="?">
        <ValidateIterator>
          <ElementIterator>
            <SingletonIterator value="xs:QName(http://foo.com/schemas/schema,d,Content)"/>
            <AttributeIterator qname="xs:QName(,,id)">
              <SingletonIterator value="xs:string(foo)"/>
            </AttributeIterator>
          </ElementIterator>
        </ValidateIterator>
      </TreatIterator>
    </UDFunctionArgs>
  </UDFunctionCallIterator>
</iterator-tree>
<iterator-tree description="local:recursion">
  <IfThenElseIterator>
    <FnBooleanIterator>
      <LetVarIterator varname="param"/>
    </FnBooleanIterator>
    <SingletonIterator value="xs:boolean(false)"/>
    <SingletonIterator value="xs:boolean(false)"/>
  </IfThenElseIterator>
</iterator-tree>
