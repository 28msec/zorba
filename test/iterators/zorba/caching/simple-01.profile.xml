<iterator-tree>
  <FnConcatIterator prof-calls="1" prof-next-calls="15" prof-cpu="1.23178" prof-wall="1.22917" prof-name="op:concatenate">
    <UDFunctionCallIterator function="local:test-01-cache" cached-across-snapshots="true" prof-calls="1" prof-next-calls="2" prof-cpu="0.868281" prof-wall="0.866924" prof-name="local:test-01-cache" prof-cache-hits="0" prof-cache-misses="1">
      <UDFunctionArgs>
        <SingletonIterator value="xs:integer(2)" prof-calls="1" prof-next-calls="2" prof-cpu="0.002757" prof-wall="0.001871" prof-name="SingletonIterator"/>
      </UDFunctionArgs>
      <UDFunctionBody>
        <FLWORIterator prof-calls="1" prof-next-calls="2" prof-cpu="0.266546" prof-wall="0.265522" prof-name="FLWORIterator">
          <ForVariable name="x">
            <LetVarIterator varname="x" prof-calls="1" prof-next-calls="2" prof-cpu="0.012555" prof-wall="0.011537" prof-name="LetVarIterator ($x)"/>
          </ForVariable>
          <ReturnClause>
            <IfThenElseIterator prof-calls="1" prof-next-calls="2" prof-cpu="0.177439" prof-wall="0.176974" prof-name="IfThenElseIterator">
              <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="2" prof-cpu="0.146326" prof-wall="0.144874" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="2" prof-cpu="0.001401" prof-wall="0.000732" prof-name="ForVarIterator ($x)"/>
                <SingletonIterator value="xs:integer(10)" prof-calls="1" prof-next-calls="2" prof-cpu="0.000991" prof-wall="0.000356" prof-name="SingletonIterator"/>
              </TypedValueCompareIterator_INTEGER>
              <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="2" prof-cpu="0.013308" prof-wall="0.012595" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="1" prof-cpu="0.000801" prof-wall="0.00037" prof-name="ForVarIterator ($x)"/>
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="1" prof-cpu="0.000717" prof-wall="0.000287" prof-name="ForVarIterator ($x)"/>
              </SpecificNumArithIterator_MultiplyOperation_INTEGER>
              <IfThenElseIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.0075" prof-wall="0.007293" prof-name="IfThenElseIterator">
                <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.002049" prof-wall="0.001834" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000356" prof-wall="0.000137" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:integer(20)" prof-calls="1" prof-next-calls="0" prof-cpu="0.000364" prof-wall="0.000146" prof-name="SingletonIterator"/>
                </TypedValueCompareIterator_INTEGER>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.000913" prof-wall="0.000701" prof-name="op:concatenate"/>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.003442" prof-wall="0.003231" prof-name="op:concatenate">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000356" prof-wall="0.000136" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:string( == )" prof-calls="1" prof-next-calls="0" prof-cpu="0.000343" prof-wall="0.000132" prof-name="SingletonIterator"/>
                  <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001539" prof-wall="0.001322" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000367" prof-wall="0.000143" prof-name="ForVarIterator ($x)"/>
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000336" prof-wall="0.000125" prof-name="ForVarIterator ($x)"/>
                  </SpecificNumArithIterator_MultiplyOperation_INTEGER>
                </FnConcatIterator>
              </IfThenElseIterator>
            </IfThenElseIterator>
          </ReturnClause>
        </FLWORIterator>
      </UDFunctionBody>
    </UDFunctionCallIterator>
    <SingletonIterator value="xs:string(&#xA;)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001208" prof-wall="0.000542" prof-name="SingletonIterator"/>
    <UDFunctionCallIterator function="local:test-01-cache" cached-across-snapshots="true" prof-calls="1" prof-next-calls="1" prof-cpu="0.096828" prof-wall="0.095446" prof-name="local:test-01-cache" prof-cache-hits="0" prof-cache-misses="1">
      <UDFunctionArgs>
        <SingletonIterator value="xs:integer(12)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001199" prof-wall="0.00053" prof-name="SingletonIterator"/>
      </UDFunctionArgs>
      <UDFunctionBody>
        <FLWORIterator prof-calls="1" prof-next-calls="1" prof-cpu="0.040092" prof-wall="0.039271" prof-name="FLWORIterator">
          <ForVariable name="x">
            <LetVarIterator varname="x" prof-calls="1" prof-next-calls="2" prof-cpu="0.004976" prof-wall="0.004164" prof-name="LetVarIterator ($x)"/>
          </ForVariable>
          <ReturnClause>
            <IfThenElseIterator prof-calls="1" prof-next-calls="1" prof-cpu="0.022525" prof-wall="0.022111" prof-name="IfThenElseIterator">
              <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="2" prof-cpu="0.006667" prof-wall="0.006006" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="2" prof-cpu="0.001143" prof-wall="0.000473" prof-name="ForVarIterator ($x)"/>
                <SingletonIterator value="xs:integer(10)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001044" prof-wall="0.000375" prof-name="SingletonIterator"/>
              </TypedValueCompareIterator_INTEGER>
              <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001656" prof-wall="0.001453" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000396" prof-wall="0.000185" prof-name="ForVarIterator ($x)"/>
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000337" prof-wall="0.000122" prof-name="ForVarIterator ($x)"/>
              </SpecificNumArithIterator_MultiplyOperation_INTEGER>
              <IfThenElseIterator prof-calls="1" prof-next-calls="1" prof-cpu="0.011494" prof-wall="0.011064" prof-name="IfThenElseIterator">
                <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="2" prof-cpu="0.004842" prof-wall="0.004178" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="2" prof-cpu="0.001014" prof-wall="0.000341" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:integer(20)" prof-calls="1" prof-next-calls="2" prof-cpu="0.000958" prof-wall="0.000301" prof-name="SingletonIterator"/>
                </TypedValueCompareIterator_INTEGER>
                <FnConcatIterator prof-calls="1" prof-next-calls="1" prof-cpu="0.001167" prof-wall="0.000726" prof-name="op:concatenate"/>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.00327" prof-wall="0.003069" prof-name="op:concatenate">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000355" prof-wall="0.000136" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:string( == )" prof-calls="1" prof-next-calls="0" prof-cpu="0.000369" prof-wall="0.000165" prof-name="SingletonIterator"/>
                  <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001422" prof-wall="0.001218" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000346" prof-wall="0.000131" prof-name="ForVarIterator ($x)"/>
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000319" prof-wall="0.000113" prof-name="ForVarIterator ($x)"/>
                  </SpecificNumArithIterator_MultiplyOperation_INTEGER>
                </FnConcatIterator>
              </IfThenElseIterator>
            </IfThenElseIterator>
          </ReturnClause>
        </FLWORIterator>
      </UDFunctionBody>
    </UDFunctionCallIterator>
    <SingletonIterator value="xs:string(&#xA;)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001157" prof-wall="0.000465" prof-name="SingletonIterator"/>
    <UDFunctionCallIterator function="local:test-01-cache" cached-across-snapshots="true" prof-calls="1" prof-next-calls="2" prof-cpu="0.056193" prof-wall="0.054469" prof-name="local:test-01-cache" prof-cache-hits="1" prof-cache-misses="0">
      <UDFunctionArgs>
        <SingletonIterator value="xs:integer(2)" prof-calls="1" prof-next-calls="2" prof-cpu="0.00115" prof-wall="0.000443" prof-name="SingletonIterator"/>
      </UDFunctionArgs>
      <UDFunctionBody>
        <FLWORIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.021912" prof-wall="0.021448" prof-name="FLWORIterator">
          <ForVariable name="x">
            <LetVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.001547" prof-wall="0.001221" prof-name="LetVarIterator ($x)"/>
          </ForVariable>
          <ReturnClause>
            <IfThenElseIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.01248" prof-wall="0.012269" prof-name="IfThenElseIterator">
              <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.00237" prof-wall="0.002124" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000438" prof-wall="0.000208" prof-name="ForVarIterator ($x)"/>
                <SingletonIterator value="xs:integer(10)" prof-calls="1" prof-next-calls="0" prof-cpu="0.000392" prof-wall="0.000161" prof-name="SingletonIterator"/>
              </TypedValueCompareIterator_INTEGER>
              <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001801" prof-wall="0.001573" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000421" prof-wall="0.000162" prof-name="ForVarIterator ($x)"/>
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.0004" prof-wall="0.000173" prof-name="ForVarIterator ($x)"/>
              </SpecificNumArithIterator_MultiplyOperation_INTEGER>
              <IfThenElseIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.007172" prof-wall="0.00695" prof-name="IfThenElseIterator">
                <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001736" prof-wall="0.001508" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000377" prof-wall="0.000147" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:integer(20)" prof-calls="1" prof-next-calls="0" prof-cpu="0.000367" prof-wall="0.000135" prof-name="SingletonIterator"/>
                </TypedValueCompareIterator_INTEGER>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.000701" prof-wall="0.000473" prof-name="op:concatenate"/>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.003633" prof-wall="0.003408" prof-name="op:concatenate">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000392" prof-wall="0.000154" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:string( == )" prof-calls="1" prof-next-calls="0" prof-cpu="0.000372" prof-wall="0.000139" prof-name="SingletonIterator"/>
                  <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001609" prof-wall="0.001379" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.00038" prof-wall="0.000141" prof-name="ForVarIterator ($x)"/>
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.00035" prof-wall="0.000125" prof-name="ForVarIterator ($x)"/>
                  </SpecificNumArithIterator_MultiplyOperation_INTEGER>
                </FnConcatIterator>
              </IfThenElseIterator>
            </IfThenElseIterator>
          </ReturnClause>
        </FLWORIterator>
      </UDFunctionBody>
    </UDFunctionCallIterator>
    <SingletonIterator value="xs:string(&#xA;)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001083" prof-wall="0.000416" prof-name="SingletonIterator"/>
    <UDFunctionCallIterator function="local:test-01-cache" cached-across-snapshots="true" prof-calls="1" prof-next-calls="1" prof-cpu="0.046128" prof-wall="0.044694" prof-name="local:test-01-cache" prof-cache-hits="1" prof-cache-misses="0">
      <UDFunctionArgs>
        <SingletonIterator value="xs:integer(12)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001193" prof-wall="0.000478" prof-name="SingletonIterator"/>
      </UDFunctionArgs>
      <UDFunctionBody>
        <FLWORIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.02076" prof-wall="0.02026" prof-name="FLWORIterator">
          <ForVariable name="x">
            <LetVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.001629" prof-wall="0.001324" prof-name="LetVarIterator ($x)"/>
          </ForVariable>
          <ReturnClause>
            <IfThenElseIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.012189" prof-wall="0.011974" prof-name="IfThenElseIterator">
              <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.002257" prof-wall="0.002027" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000435" prof-wall="0.000197" prof-name="ForVarIterator ($x)"/>
                <SingletonIterator value="xs:integer(10)" prof-calls="1" prof-next-calls="0" prof-cpu="0.000395" prof-wall="0.000171" prof-name="SingletonIterator"/>
              </TypedValueCompareIterator_INTEGER>
              <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001715" prof-wall="0.001485" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000393" prof-wall="0.000152" prof-name="ForVarIterator ($x)"/>
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.00037" prof-wall="0.000134" prof-name="ForVarIterator ($x)"/>
              </SpecificNumArithIterator_MultiplyOperation_INTEGER>
              <IfThenElseIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.007091" prof-wall="0.006873" prof-name="IfThenElseIterator">
                <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001701" prof-wall="0.001475" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000391" prof-wall="0.000155" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:integer(20)" prof-calls="1" prof-next-calls="0" prof-cpu="0.000359" prof-wall="0.00013" prof-name="SingletonIterator"/>
                </TypedValueCompareIterator_INTEGER>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.000646" prof-wall="0.000427" prof-name="op:concatenate"/>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.003702" prof-wall="0.003486" prof-name="op:concatenate">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.00039" prof-wall="0.000154" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:string( == )" prof-calls="1" prof-next-calls="0" prof-cpu="0.000362" prof-wall="0.000132" prof-name="SingletonIterator"/>
                  <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.0017" prof-wall="0.001473" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000446" prof-wall="0.00015" prof-name="ForVarIterator ($x)"/>
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000352" prof-wall="0.000127" prof-name="ForVarIterator ($x)"/>
                  </SpecificNumArithIterator_MultiplyOperation_INTEGER>
                </FnConcatIterator>
              </IfThenElseIterator>
            </IfThenElseIterator>
          </ReturnClause>
        </FLWORIterator>
      </UDFunctionBody>
    </UDFunctionCallIterator>
    <SingletonIterator value="xs:string(&#xA;)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001078" prof-wall="0.000406" prof-name="SingletonIterator"/>
    <UDFunctionCallIterator function="local:test-01-cache" cached-across-snapshots="true" prof-calls="1" prof-next-calls="4" prof-cpu="0.08848" prof-wall="0.086228" prof-name="local:test-01-cache" prof-cache-hits="0" prof-cache-misses="1">
      <UDFunctionArgs>
        <SingletonIterator value="xs:integer(22)" prof-calls="1" prof-next-calls="2" prof-cpu="0.0012" prof-wall="0.000486" prof-name="SingletonIterator"/>
      </UDFunctionArgs>
      <UDFunctionBody>
        <FLWORIterator prof-calls="1" prof-next-calls="4" prof-cpu="0.050442" prof-wall="0.048964" prof-name="FLWORIterator">
          <ForVariable name="x">
            <LetVarIterator varname="x" prof-calls="1" prof-next-calls="2" prof-cpu="0.005143" prof-wall="0.004371" prof-name="LetVarIterator ($x)"/>
          </ForVariable>
          <ReturnClause>
            <IfThenElseIterator prof-calls="1" prof-next-calls="4" prof-cpu="0.033952" prof-wall="0.032751" prof-name="IfThenElseIterator">
              <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="2" prof-cpu="0.00635" prof-wall="0.005658" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="2" prof-cpu="0.001127" prof-wall="0.000429" prof-name="ForVarIterator ($x)"/>
                <SingletonIterator value="xs:integer(10)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001036" prof-wall="0.000355" prof-name="SingletonIterator"/>
              </TypedValueCompareIterator_INTEGER>
              <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001662" prof-wall="0.001435" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000409" prof-wall="0.00017" prof-name="ForVarIterator ($x)"/>
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000357" prof-wall="0.00013" prof-name="ForVarIterator ($x)"/>
              </SpecificNumArithIterator_MultiplyOperation_INTEGER>
              <IfThenElseIterator prof-calls="1" prof-next-calls="4" prof-cpu="0.021324" prof-wall="0.020154" prof-name="IfThenElseIterator">
                <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="2" prof-cpu="0.004982" prof-wall="0.004276" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="2" prof-cpu="0.001054" prof-wall="0.000332" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:integer(20)" prof-calls="1" prof-next-calls="2" prof-cpu="0.00104" prof-wall="0.00036" prof-name="SingletonIterator"/>
                </TypedValueCompareIterator_INTEGER>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.000627" prof-wall="0.000389" prof-name="op:concatenate"/>
                <FnConcatIterator prof-calls="1" prof-next-calls="4" prof-cpu="0.011724" prof-wall="0.010537" prof-name="op:concatenate">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="2" prof-cpu="0.001071" prof-wall="0.000365" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:string( == )" prof-calls="1" prof-next-calls="2" prof-cpu="0.001034" prof-wall="0.000344" prof-name="SingletonIterator"/>
                  <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="2" prof-cpu="0.005243" prof-wall="0.004505" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="1" prof-cpu="0.000707" prof-wall="0.000254" prof-name="ForVarIterator ($x)"/>
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="1" prof-cpu="0.000718" prof-wall="0.000266" prof-name="ForVarIterator ($x)"/>
                  </SpecificNumArithIterator_MultiplyOperation_INTEGER>
                </FnConcatIterator>
              </IfThenElseIterator>
            </IfThenElseIterator>
          </ReturnClause>
        </FLWORIterator>
      </UDFunctionBody>
    </UDFunctionCallIterator>
    <SingletonIterator value="xs:string(&#xA;)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001072" prof-wall="0.000405" prof-name="SingletonIterator"/>
    <UDFunctionCallIterator function="local:test-01-cache" cached-across-snapshots="true" prof-calls="1" prof-next-calls="4" prof-cpu="0.048667" prof-wall="0.046457" prof-name="local:test-01-cache" prof-cache-hits="1" prof-cache-misses="0">
      <UDFunctionArgs>
        <SingletonIterator value="xs:integer(22)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001318" prof-wall="0.000622" prof-name="SingletonIterator"/>
      </UDFunctionArgs>
      <UDFunctionBody>
        <FLWORIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.020919" prof-wall="0.020459" prof-name="FLWORIterator">
          <ForVariable name="x">
            <LetVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.001507" prof-wall="0.001211" prof-name="LetVarIterator ($x)"/>
          </ForVariable>
          <ReturnClause>
            <IfThenElseIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.012141" prof-wall="0.011923" prof-name="IfThenElseIterator">
              <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.002172" prof-wall="0.001936" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000444" prof-wall="0.000205" prof-name="ForVarIterator ($x)"/>
                <SingletonIterator value="xs:integer(10)" prof-calls="1" prof-next-calls="0" prof-cpu="0.000394" prof-wall="0.000162" prof-name="SingletonIterator"/>
              </TypedValueCompareIterator_INTEGER>
              <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.00174" prof-wall="0.001502" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000398" prof-wall="0.000172" prof-name="ForVarIterator ($x)"/>
                <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000353" prof-wall="0.000125" prof-name="ForVarIterator ($x)"/>
              </SpecificNumArithIterator_MultiplyOperation_INTEGER>
              <IfThenElseIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.007064" prof-wall="0.006837" prof-name="IfThenElseIterator">
                <TypedValueCompareIterator_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001701" prof-wall="0.001459" prof-name="TypedValueCompareIterator&lt;store::XS_INTEGER&gt;">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000383" prof-wall="0.000141" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:integer(20)" prof-calls="1" prof-next-calls="0" prof-cpu="0.00037" prof-wall="0.000119" prof-name="SingletonIterator"/>
                </TypedValueCompareIterator_INTEGER>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.00067" prof-wall="0.000433" prof-name="op:concatenate"/>
                <FnConcatIterator prof-calls="1" prof-next-calls="0" prof-cpu="0.003647" prof-wall="0.003418" prof-name="op:concatenate">
                  <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000377" prof-wall="0.000141" prof-name="ForVarIterator ($x)"/>
                  <SingletonIterator value="xs:string( == )" prof-calls="1" prof-next-calls="0" prof-cpu="0.000354" prof-wall="0.00012" prof-name="SingletonIterator"/>
                  <SpecificNumArithIterator_MultiplyOperation_INTEGER prof-calls="1" prof-next-calls="0" prof-cpu="0.001606" prof-wall="0.001367" prof-name="SpecificNumArithIterator&lt;MultiplyOperation,store::XS_INTEGER&gt;">
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000418" prof-wall="0.000171" prof-name="ForVarIterator ($x)"/>
                    <ForVarIterator varname="x" prof-calls="1" prof-next-calls="0" prof-cpu="0.000357" prof-wall="0.000128" prof-name="ForVarIterator ($x)"/>
                  </SpecificNumArithIterator_MultiplyOperation_INTEGER>
                </FnConcatIterator>
              </IfThenElseIterator>
            </IfThenElseIterator>
          </ReturnClause>
        </FLWORIterator>
      </UDFunctionBody>
    </UDFunctionCallIterator>
    <SingletonIterator value="xs:string(&#xA;)" prof-calls="1" prof-next-calls="2" prof-cpu="0.001091" prof-wall="0.000425" prof-name="SingletonIterator"/>
  </FnConcatIterator>
</iterator-tree>
