<iterator-tree description="const-folded expr">
  <SingletonIterator value="xs:boolean(true)"/>
</iterator-tree>
<iterator-tree description="main query">
  <TupleStreamIterator>
    <WindowIterator>
      <WindowVariable name="w">
        <FnConcatIterator>
          <SingletonIterator value="xs:integer(2)"/>
          <SingletonIterator value="xs:integer(4)"/>
          <SingletonIterator value="xs:integer(6)"/>
          <SingletonIterator value="xs:integer(8)"/>
          <SingletonIterator value="xs:integer(10)"/>
          <SingletonIterator value="xs:integer(12)"/>
          <SingletonIterator value="xs:integer(14)"/>
        </FnConcatIterator>
      </WindowVariable>
      <WinCondVariable name="start-PosIn"/>
      <WinCondVariable name="start-PosInPosOut"/>
      <SingletonIterator value="xs:boolean(true)"/>
      <WinCondVariable name="end-PosIn"/>
      <TypedValueCompareIterator_INTEGER>
        <SpecificNumArithIterator_SubtractOperation_INTEGER>
          <ForVarIterator varname="e"/>
          <ForVarIterator varname="s"/>
        </SpecificNumArithIterator_SubtractOperation_INTEGER>
        <SingletonIterator value="xs:integer(2)"/>
      </TypedValueCompareIterator_INTEGER>
      <LetIterator>
        <LetVariable name="x" materialize="true"/>
        <TupleSourceIterator/>
        <OpToIterator>
          <SingletonIterator value="xs:integer(1)"/>
          <SingletonIterator value="xs:integer(100)"/>
        </OpToIterator>
      </LetIterator>
    </WindowIterator>
    <ElementIterator>
      <SingletonIterator value="xs:QName(,,window)"/>
      <AttributeIterator qname="xs:QName(,,foo)">
        <EnclosedIterator attr_cont="true">
          <LetVarIterator varname="x">
            <ForVarIterator varname="s"/>
          </LetVarIterator>
        </EnclosedIterator>
      </AttributeIterator>
      <EnclosedIterator attr_cont="false">
        <LetVarIterator varname="w"/>
      </EnclosedIterator>
    </ElementIterator>
  </TupleStreamIterator>
</iterator-tree>
