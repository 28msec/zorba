<iterator-tree description="main query">
  <SequentialIterator>
    <CtxVarDeclareIterator varid="4" varname="seq">
      <FnDocIterator>
        <SingletonIterator value="xs:string(person_events.xml)"/>
      </FnDocIterator>
    </CtxVarDeclareIterator>
    <ElementIterator>
      <SingletonIterator value="xs:QName(,,result)"/>
      <EnclosedIterator attr_cont="false">
        <TupleStreamIterator>
          <GroupByIterator>
            <LetIterator>
              <LetVariable name="person" materialize="true"/>
              <WindowIterator>
                <WindowVariable name="w">
                  <ChildAxisIterator test-kind="match_name_test" qname="xs:QName(,,event)" typename="*" nill-allowed="0">
                    <ChildAxisIterator test-kind="match_name_test" qname="xs:QName(,,stream)" typename="*" nill-allowed="0">
                      <CtxVarIterator varid="4" varname="seq" varkind="global"/>
                    </ChildAxisIterator>
                  </ChildAxisIterator>
                </WindowVariable>
                <WinCondVariable name="start-CurrentIn"/>
                <WinCondVariable name="start-CurrentInCurrentOut"/>
                <FnBooleanIterator>
                  <TypedValueCompareIterator_STRING>
                    <PromoteIterator type="xs:anyAtomicType">
                      <FnDataIterator>
                        <ChildAxisIterator test-kind="match_name_test" qname="xs:QName(,,direction)" typename="*" nill-allowed="0">
                          <ForVarIterator varname="s"/>
                        </ChildAxisIterator>
                      </FnDataIterator>
                    </PromoteIterator>
                    <SingletonIterator value="xs:string(in)"/>
                  </TypedValueCompareIterator_STRING>
                </FnBooleanIterator>
                <WinCondVariable name="end-CurrentIn"/>
                <WinCondVariable name="end-CurrentInCurrentOut"/>
                <AndIterator>
                  <TypedValueCompareIterator_STRING>
                    <PromoteIterator type="xs:anyAtomicType">
                      <FnDataIterator>
                        <ChildAxisIterator test-kind="match_name_test" qname="xs:QName(,,person)" typename="*" nill-allowed="0">
                          <ForVarIterator varname="s"/>
                        </ChildAxisIterator>
                      </FnDataIterator>
                    </PromoteIterator>
                    <PromoteIterator type="xs:anyAtomicType">
                      <FnDataIterator>
                        <ChildAxisIterator test-kind="match_name_test" qname="xs:QName(,,person)" typename="*" nill-allowed="0">
                          <ForVarIterator varname="e"/>
                        </ChildAxisIterator>
                      </FnDataIterator>
                    </PromoteIterator>
                  </TypedValueCompareIterator_STRING>
                  <TypedValueCompareIterator_STRING>
                    <PromoteIterator type="xs:anyAtomicType">
                      <FnDataIterator>
                        <ChildAxisIterator test-kind="match_name_test" qname="xs:QName(,,direction)" typename="*" nill-allowed="0">
                          <ForVarIterator varname="e"/>
                        </ChildAxisIterator>
                      </FnDataIterator>
                    </PromoteIterator>
                    <SingletonIterator value="xs:string(out)"/>
                  </TypedValueCompareIterator_STRING>
                </AndIterator>
                <TupleSourceIterator/>
              </WindowIterator>
              <ChildAxisIterator test-kind="match_name_test" qname="xs:QName(,,person)" typename="*" nill-allowed="0">
                <ForVarIterator varname="s"/>
              </ChildAxisIterator>
            </LetIterator>
            <Spec>
              <TreatIterator quant="?">
                <FnDataIterator>
                  <LetVarIterator varname="person"/>
                </FnDataIterator>
              </TreatIterator>
              <GroupVariable/>
            </Spec>
            <Spec>
              <LetVarIterator varname="person"/>
              <NonGroupVariable/>
            </Spec>
            <Spec>
              <GenericArithIterator_SubtractOperation>
                <CastIterator type="xs:dateTime">
                  <FnDataIterator>
                    <AttributeAxisIterator test-kind="match_name_test" qname="xs:QName(,,time)" typename="*" nill-allowed="0">
                      <ForVarIterator varname="e"/>
                    </AttributeAxisIterator>
                  </FnDataIterator>
                </CastIterator>
                <CastIterator type="xs:dateTime">
                  <FnDataIterator>
                    <AttributeAxisIterator test-kind="match_name_test" qname="xs:QName(,,time)" typename="*" nill-allowed="0">
                      <ForVarIterator varname="s"/>
                    </AttributeAxisIterator>
                  </FnDataIterator>
                </CastIterator>
              </GenericArithIterator_SubtractOperation>
              <NonGroupVariable/>
            </Spec>
          </GroupByIterator>
          <ElementIterator>
            <SingletonIterator value="xs:QName(,,working-time)"/>
            <FnConcatIterator>
              <EnclosedIterator attr_cont="false">
                <LetVarIterator varname="person" targetPos="1"/>
              </EnclosedIterator>
              <ElementIterator>
                <SingletonIterator value="xs:QName(,,time)"/>
                <EnclosedIterator attr_cont="false">
                  <FnSumIterator>
                    <LetVarIterator varname="workingTime"/>
                  </FnSumIterator>
                </EnclosedIterator>
              </ElementIterator>
            </FnConcatIterator>
          </ElementIterator>
        </TupleStreamIterator>
      </EnclosedIterator>
    </ElementIterator>
  </SequentialIterator>
</iterator-tree>
