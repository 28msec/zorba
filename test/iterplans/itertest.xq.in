jsoniq version "1.0";
(:
 : Copyright 2006-2009 The FLWOR Foundation.
 :
 : Licensed under the Apache License, Version 2.0 (the "License");
 : you may not use this file except in compliance with the License.
 : You may obtain a copy of the License at
 :
 : http://www.apache.org/licenses/LICENSE-2.0
 :
 : Unless required by applicable law or agreed to in writing, software
 : distributed under the License is distributed on an "AS IS" BASIS,
 : WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 : See the License for the specific language governing permissions and
 : limitations under the License.
:)
import module namespace file = "http://expath.org/ns/file";

import schema namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";

declare variable $source-dir := "@CMAKE_SOURCE_DIR@";
declare variable $binary-dir := "@CMAKE_BINARY_DIR@";

declare variable $apitest-path external;

declare variable $testname external; 
 
declare variable $result-filepath external;

variable $expected-filepath := $source-dir || "/test/iterplans/" || $testname || ".iter";

variable $query-filepath := $source-dir || "/test/rbkt/Queries/" || $testname || ".xq";

variable $expected-filepath-normalized := file:path-to-native($expected-filepath);

variable $result-filepath-normalized := file:path-to-native($result-filepath);

variable $query-filepath-normalized := file:path-to-native($query-filepath);

variable $apitest-path-normalized := file:path-to-native($apitest-path);


if (file:exists($query-filepath-normalized))
then
{
  variable $query-options := (
    "--iterator-tree", "xml",
    "--no-tree-ids",
    "--no-serializer",
    $query-filepath-normalized
  );

  variable $result-text as xs:string := file:read-text($result-filepath-normalized);

  variable $expected-text as xs:string := file:read-text($expected-filepath-normalized);

  if ($result-text eq $expected-text) then
    "Passed!"
  else
    "Failed!\n" ||
    "Generated iterator tree is not equal to the expected result!\n" ||
    "Command to generate iterator tree: " || $apitest-path || " " || fn:string-join($query-options," ") || "\n\n" ||
    "Actual Result: " || $result-filepath || "\n" ||
    "Expected Result: " || $expected-filepath || "\n"
}
else
    "Passed! But only because query file " || $query-filepath || " was not found. Test was not executed!"
