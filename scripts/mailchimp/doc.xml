<?xml version="1.0" encoding="UTF-8" ?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"> 
  <head> 
    <meta http-equiv="Content-Type" content="text/HTML; charset=utf-8"  /> 
    <title>Available XMLRPC methods for this server</title> 
  </head> 
  <body> 
    <h1>Available XMLRPC methods for this server</h1> 
    <h2><a name="index">Index</a></h2> 
    <ul> 
      <li><a href="#ae3dc8c5ae7e24980292000488ebb244">campaignUnschedule()</a></li> 
      <li><a href="#3c90a2251218dd4a63ae76b2b9997e7f">campaignSchedule()</a></li> 
      <li><a href="#ec93ec5db989a41a85712065e640a817">campaignResume()</a></li> 
      <li><a href="#b7dd9283499831cc9984fea06a9c850d">campaignPause()</a></li> 
      <li><a href="#eca09b9f7d1dc6559ea28421805d9265">campaignSendNow()</a></li> 
      <li><a href="#18015404bee89c21896ae871dc7416d7">campaignSendTest()</a></li> 
      <li><a href="#c3cff5111fcd2ab0c0d6ae7d02f5b25b">campaignSegmentTest()</a></li> 
      <li><a href="#806711a29684b8a0e54ad77514add8ef">campaignCreate()</a></li> 
      <li><a href="#f94d00d07ab125080bbac335e775746a">campaignUpdate()</a></li> 
      <li><a href="#7779eaf6f2547a7acfad238027803a16">campaignReplicate()</a></li> 
      <li><a href="#5d50b5d382361513efe0c6df6204abe7">campaignDelete()</a></li> 
      <li><a href="#41dfabce9999260428c407d1922e2109">campaigns()</a></li> 
      <li><a href="#ac0bae46f5b2f6ebb53454b4ef2c4315">campaignStats()</a></li> 
      <li><a href="#cf43db63050ab342efc11c76ddefe6f2">campaignClickStats()</a></li> 
      <li><a href="#d22a18c4e60a2af1525db250ba24b8e1">campaignEmailDomainPerformance()</a></li> 
      <li><a href="#6ede4e31374b8e9294f7a3b70b32490a">campaignMembers()</a></li> 
      <li><a href="#5f7654aeada802683cbf451cc77e498e">campaignHardBounces()</a></li> 
      <li><a href="#35a8b026435e06c2d9962aedbb8d1dcd">campaignSoftBounces()</a></li> 
      <li><a href="#d4ad0576f62fe39cc45f7ae16076e7a4">campaignUnsubscribes()</a></li> 
      <li><a href="#d613153249eb74fed2a0966d90d2d1d5">campaignAbuseReports()</a></li> 
      <li><a href="#f064961fbb86a2d0b11148856645b96b">campaignAdvice()</a></li> 
      <li><a href="#d359efce46af041b3290191efcc9058a">campaignAnalytics()</a></li> 
      <li><a href="#4679b4fcf92a5bd02875a12d9b255bc6">campaignGeoOpens()</a></li> 
      <li><a href="#b37df7a1f88d45a1efe5fa8667ffc548">campaignGeoOpensForCountry()</a></li> 
      <li><a href="#f8ae3b89e800808cf822a41b6b185535">campaignEepUrlStats()</a></li> 
      <li><a href="#ec95925760b553fa023833de1cf58853">campaignBounceMessage()</a></li> 
      <li><a href="#fbc13760714008f18f1409b4b47a4b58">campaignBounceMessages()</a></li> 
      <li><a href="#cda579907790ecca9445f3cc6ae5fda5">campaignEcommOrders()</a></li> 
      <li><a href="#306feadeb2a6f300f355c5cb5a6949fb">campaignShareReport()</a></li> 
      <li><a href="#cc7dfc9a89d19ada82043af1a2ff3753">campaignContent()</a></li> 
      <li><a href="#36100b01bded4969ef54681395645933">campaignTemplateContent()</a></li> 
      <li><a href="#8d7c4e3bacea24a21a360a9815156248">campaignOpenedAIM()</a></li> 
      <li><a href="#b2656dde5d6ffb952678f8fd8a288ef4">campaignNotOpenedAIM()</a></li> 
      <li><a href="#62155a649f2762b6c5782b5908ba1fbb">campaignClickDetailAIM()</a></li> 
      <li><a href="#7cb83a476e7a6acb49de657d6775ad74">campaignEmailStatsAIM()</a></li> 
      <li><a href="#b7256e273452a9dbf0460ee72246cffb">campaignEmailStatsAIMAll()</a></li> 
      <li><a href="#eb3844ff4f7e4c449d54fa334b825aac">campaignEcommOrderAdd()</a></li> 
      <li><a href="#e6dbca21d4865b265ca2780205b19305">lists()</a></li> 
      <li><a href="#67b0610d759c4890e839a7882fa1d0e9">listMergeVars()</a></li> 
      <li><a href="#81bb4e762b0d502a7624c8f0d2bce17d">listMergeVarAdd()</a></li> 
      <li><a href="#e77d8c60cd55e6e7726c6c72d441d894">listMergeVarUpdate()</a></li> 
      <li><a href="#c7073fe6f189285a647c21827c7c18b2">listMergeVarDel()</a></li> 
      <li><a href="#a50c1a06785c73325c7d5ef26debb1a0">listInterestGroupings()</a></li> 
      <li><a href="#fe385ee8af561dbb4c6f8383cf9f573f">listInterestGroupAdd()</a></li> 
      <li><a href="#e7e2e48489f476f588b5b516afac7f32">listInterestGroupDel()</a></li> 
      <li><a href="#f94f6cf8788c7190b37e739bcc606575">listInterestGroupUpdate()</a></li> 
      <li><a href="#f1d35d3da743dfd599a3794d2599a96c">listInterestGroupingAdd()</a></li> 
      <li><a href="#bc31ca173183a45ae05e01e76b7d86a3">listInterestGroupingUpdate()</a></li> 
      <li><a href="#26801c38934a0df529b0773b3e11d09a">listInterestGroupingDel()</a></li> 
      <li><a href="#37dee0eebd574e2e702d880218c6d376">listWebhooks()</a></li> 
      <li><a href="#0bc20598c1812b8d6e9b4f18b7832910">listWebhookAdd()</a></li> 
      <li><a href="#786de8ddc6b296c5aecbcbfd0e7b3362">listWebhookDel()</a></li> 
      <li><a href="#6ca96af087bf6f931c69858f4ac7319c">listStaticSegments()</a></li> 
      <li><a href="#14782eb4d6704d2c67c270b4abd9e6eb">listStaticSegmentAdd()</a></li> 
      <li><a href="#29f9baee4d2d85cbc271b3f6b666e21d">listStaticSegmentReset()</a></li> 
      <li><a href="#496266d60488440c89816b8603111171">listStaticSegmentDel()</a></li> 
      <li><a href="#f29beee599101152f9b42542e6869c35">listStaticSegmentMembersAdd()</a></li> 
      <li><a href="#874cf44ce522b3ec0558e266e2188a6f">listStaticSegmentMembersDel()</a></li> 
      <li><a href="#891384081426c461c75e45e9f00cfc41">listSubscribe()</a></li> 
      <li><a href="#ce3a41c4386ea2eb857aa15bbcf9e47e">listUnsubscribe()</a></li> 
      <li><a href="#9d05e2ccd7d02015f922cc0d31dca0a5">listUpdateMember()</a></li> 
      <li><a href="#da6d9df5be0208a78fab3192e575cd5f">listBatchSubscribe()</a></li> 
      <li><a href="#f9c9113b32e116696a08396bbc60ba29">listBatchUnsubscribe()</a></li> 
      <li><a href="#787e0cef98fe1644bfe4f4463a85d7d9">listMembers()</a></li> 
      <li><a href="#de057baf53b9276a27586e519befbbb8">listMemberInfo()</a></li> 
      <li><a href="#eb18ffb232502ebc238e184fa8c27b46">listMemberActivity()</a></li> 
      <li><a href="#de9c31c0adc7b2ad114ca2de44aedc75">listAbuseReports()</a></li> 
      <li><a href="#8dd350df71d0b3d3e43dfabbee7a4b19">listGrowthHistory()</a></li> 
      <li><a href="#b2007b2f6dafc8848d32ac5273836c61">listActivity()</a></li> 
      <li><a href="#9f53df1593536f9b945e29054250e908">listLocations()</a></li> 
      <li><a href="#bd03f2645239dda6fe326e75ba7af258">listClients()</a></li> 
      <li><a href="#fed36e93a0509e20f2dc96cbbd85b678">templates()</a></li> 
      <li><a href="#810d2618ba63da2e91ef6c508006d355">templateInfo()</a></li> 
      <li><a href="#6dcd80044579149f9166982a5f82ee99">templateAdd()</a></li> 
      <li><a href="#70841c97164bbed481d02325a89b46f5">templateUpdate()</a></li> 
      <li><a href="#9533e3291d838c7a089c15cd6555f4a3">templateDel()</a></li> 
      <li><a href="#08389cacfc5a3816e77233706a170fd8">templateUndel()</a></li> 
      <li><a href="#8c5cec1b13fccafe7c16c55d603a8fd6">getAccountDetails()</a></li> 
      <li><a href="#1a1d2f3e6fdc36d715b5d3efee663c65">generateText()</a></li> 
      <li><a href="#27aad637d87e5af2f5dd3b29845b4295">inlineCss()</a></li> 
      <li><a href="#7cb31435da1bef1e450754ff725b0fdd">folders()</a></li> 
      <li><a href="#db969989b2eb0acd1b6cca8bad8e06fe">folderAdd()</a></li> 
      <li><a href="#4b1fa0f8b6a7c42bd4caf1ff24f388ba">folderUpdate()</a></li> 
      <li><a href="#cb797588d56c29e45e42d0e51253a74a">folderDel()</a></li> 
      <li><a href="#462fdd4f3a48e9e9dc84b87ded25a982">ecommOrders()</a></li> 
      <li><a href="#ec9b3ca3f0767631804aedfe12c39751">ecommOrderAdd()</a></li> 
      <li><a href="#52b318b9541129348317013a51eea6c9">ecommOrderDel()</a></li> 
      <li><a href="#dd323d460e9b11c8dc7b4110f30d3ab9">listsForEmail()</a></li> 
      <li><a href="#b822c114cfa0db382ea556e3fd97ec53">campaignsForEmail()</a></li> 
      <li><a href="#a7d2bcbfe90a2e9907dfe36607d7a7e2">chimpChatter()</a></li> 
      <li><a href="#63142ae2c44965e6169cdcc8eef75941">apikeys()</a></li> 
      <li><a href="#f742c763d6cff36f1ecf3bd5d8b6d268">apikeyAdd()</a></li> 
      <li><a href="#d89fd76a2121907c2dc02123f0dd0397">apikeyExpire()</a></li> 
      <li><a href="#d56b699830e77ba53855679cb1d252da">login()</a></li> 
      <li><a href="#df911f0151f9ef021d410b4be5060972">ping()</a></li> 
      <li><a href="#55b6b47bfeced14cb03aac5ee10dd35e">callMethod()</a></li> 
    </ul> 
    <h2>Details</h2> 
    <div class="bloc"> 
      <h3><a name="ae3dc8c5ae7e24980292000488ebb244"><span class="type">(boolean)</span> <span class="name">campaignUnschedule</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Unschedule a campaign that is scheduled to be sent in the future
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the id of the campaign to unschedule</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="3c90a2251218dd4a63ae76b2b9997e7f"><span class="type">(boolean)</span> <span class="name">campaignSchedule</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span>, <span class="paratype">(string) </span><span class="paraname">schedule_time</span><span class="other"> [ </span>, <span class="paratype">(string) </span><span class="paraname">schedule_time_b</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Schedule a campaign to be sent in the future
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the id of the campaign to schedule</td></tr> 
        <tr><td>string</td><td>schedule_time</td><td> the time to schedule the campaign. For A/B Split &quot;schedule&quot; campaigns, the time for Group A - in YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;</td></tr> 
        <tr><td>string</td><td>schedule_time_b</td><td> optional -the time to schedule Group B of an A/B Split &quot;schedule&quot; campaign - in YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="ec93ec5db989a41a85712065e640a817"><span class="type">(boolean)</span> <span class="name">campaignResume</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Resume sending an AutoResponder or RSS campaign
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the id of the campaign to pause</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="b7dd9283499831cc9984fea06a9c850d"><span class="type">(boolean)</span> <span class="name">campaignPause</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Pause an AutoResponder orRSS campaign from sending
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the id of the campaign to pause</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="eca09b9f7d1dc6559ea28421805d9265"><span class="type">(boolean)</span> <span class="name">campaignSendNow</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Send a given campaign immediately. For RSS campaigns, this will &quot;start&quot; them.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the id of the campaign to send</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="18015404bee89c21896ae871dc7416d7"><span class="type">(boolean)</span> <span class="name">campaignSendTest</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(array) </span><span class="paraname">test_emails</span>, <span class="paratype">(string) </span><span class="paraname">send_type</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Send a test of this campaign to the provided email address
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the id of the campaign to test</td></tr> 
        <tr><td>array</td><td>test_emails</td><td> an array of email address to receive the test message</td></tr> 
        <tr><td>string</td><td>send_type</td><td> optional by default (null) both formats are sent - &quot;html&quot; or &quot;text&quot; send just that format</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="c3cff5111fcd2ab0c0d6ae7d02f5b25b"><span class="type">(int)</span> <span class="name">campaignSegmentTest</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">list_id</span>, <span class="paratype">(array) </span><span class="paraname">options</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Allows one to test their segmentation rules before creating a campaign using them<br /> 
string &quot;match&quot; controls whether to use AND or OR when applying your options - expects &quot;&lt;strong&gt;any&lt;/strong&gt;&quot; (for OR) or &quot;&lt;strong&gt;all&lt;/strong&gt;&quot; (for AND)<br /> 
array &quot;conditions&quot; - up to 10 different criteria to apply while segmenting. Each criteria row must contain 3 keys - &quot;&lt;strong&gt;field&lt;/strong&gt;&quot;, &quot;&lt;strong&gt;op&lt;/strong&gt;&quot;, and &quot;&lt;strong&gt;value&lt;/strong&gt;&quot; - and possibly a fourth, &quot;&lt;strong&gt;extra&lt;/strong&gt;&quot;, based on these definitions:<br /> 
Field = &quot;&lt;strong&gt;date&lt;/strong&gt;&quot; : Select based on signup date<br /> 
Valid Op(eration): &lt;strong&gt;eq&lt;/strong&gt; (is) / &lt;strong&gt;gt&lt;/strong&gt; (after) / &lt;strong&gt;lt&lt;/strong&gt; (before)<br /> 
Valid Values:<br /> 
string last_campaign_sent  uses the date of the last campaign sent<br /> 
string campaign_id - uses the send date of the campaign that carriers the Id submitted - see campaigns()<br /> 
string YYYY-MM-DD - any date in the form of YYYY-MM-DD - &lt;em&gt;note:&lt;/em&gt; anything that appears to start with YYYY will be treated as a date<br /> 
Field = &quot;&lt;strong&gt;interests-X&lt;/strong&gt;&quot;: where X is the Grouping Id from listInterestGroupings()<br /> 
Valid Op(erations): &lt;strong&gt;one&lt;/strong&gt; / &lt;strong&gt;none&lt;/strong&gt; / &lt;strong&gt;all&lt;/strong&gt;<br /> 
Valid Values: a comma delimited of interest groups for the list - see listInterestGroupings()<br /> 
Field = &quot;&lt;strong&gt;aim&lt;/strong&gt;&quot;<br /> 
Valid Op(erations): &lt;strong&gt;open&lt;/strong&gt; / &lt;strong&gt;noopen&lt;/strong&gt; / &lt;strong&gt;click&lt;/strong&gt; / &lt;strong&gt;noclick&lt;/strong&gt;<br /> 
Valid Values: &quot;&lt;strong&gt;any&lt;/strong&gt;&quot; or a valid AIM-enabled Campaign that has been sent<br /> 
Field = &quot;&lt;strong&gt;rating&lt;/strong&gt;&quot; : allows matching based on list member ratings<br /> 
Valid Op(erations):  &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;)<br /> 
Valid Values: a number between 0 and 5<br /> 
Field = &quot;&lt;strong&gt;ecomm_prod&lt;/strong&gt;&quot; or &quot;&lt;strong&gt;ecomm_prod&lt;/strong&gt;&quot;: allows matching product and category names from purchases<br /> 
Valid Op(erations):<br /> 
&lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;) / &lt;strong&gt;like&lt;/strong&gt; (like '%blah%') / &lt;strong&gt;nlike&lt;/strong&gt; (not like '%blah%') / &lt;strong&gt;starts&lt;/strong&gt; (like 'blah%') / &lt;strong&gt;ends&lt;/strong&gt; (like '%blah')<br /> 
Valid Values: any string<br /> 
Field = &quot;&lt;strong&gt;ecomm_spent_one&lt;/strong&gt;&quot; or &quot;&lt;strong&gt;ecomm_spent_all&lt;/strong&gt;&quot; : allows matching purchase amounts on a single order or all orders<br /> 
Valid Op(erations): &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;)<br /> 
Valid Values: a number<br /> 
Field = &quot;&lt;strong&gt;ecomm_date&lt;/strong&gt;&quot; : allow matching based on order dates<br /> 
Valid Op(eration): &lt;strong&gt;eq&lt;/strong&gt; (is) / &lt;strong&gt;gt&lt;/strong&gt; (after) / &lt;strong&gt;lt&lt;/strong&gt; (before)<br /> 
Valid Values:<br /> 
string YYYY-MM-DD - any date in the form of YYYY-MM-DD<br /> 
Field = &quot;&lt;strong&gt;social_gender&lt;/strong&gt;&quot; : allows matching against the gender acquired from SocialPro<br /> 
Valid Op(eration): &lt;strong&gt;eq&lt;/strong&gt; (is) / &lt;strong&gt;ne&lt;/strong&gt; (is not)<br /> 
Valid Values: male, female<br /> 
Field = &quot;&lt;strong&gt;social_age&lt;/strong&gt;&quot; : allows matching against the age acquired from SocialPro<br /> 
Valid Op(erations):  &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;)<br /> 
Valid Values: any number<br /> 
Field = &quot;&lt;strong&gt;social_influence&lt;/strong&gt;&quot; : allows matching against the influence acquired from SocialPro<br /> 
Valid Op(erations):  &lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;)<br /> 
Valid Values: a number between 0 and 5<br /> 
Field = &quot;&lt;strong&gt;social_network&lt;/strong&gt;&quot; :<br /> 
Valid Op(erations):  &lt;strong&gt;member&lt;/strong&gt; (is a member of) / &lt;strong&gt;notmember&lt;/strong&gt; (is not a member of)<br /> 
Valid Values: twitter, facebook, myspace, linkedin, flickr<br /> 
Field = &quot;&lt;strong&gt;static_segment&lt;/strong&gt;&quot; :<br /> 
Valid Op(eration): &lt;strong&gt;eq&lt;/strong&gt; (is in) / &lt;strong&gt;ne&lt;/strong&gt; (is not in)<br /> 
Valid Values: an int - get from listStaticSegments()<br /> 
Field = An &lt;strong&gt;Address&lt;/strong&gt; Merge Var. Use &lt;strong&gt;Merge0-Merge30&lt;/strong&gt; or the &lt;strong&gt;Custom Tag&lt;/strong&gt; you've setup for your merge field - see listMergeVars(). Note, Address fields can still be used with the default operations below - this section is broken out solely to highlight the differences in using the geolocation routines.<br /> 
Valid Op(erations): &lt;strong&gt;geoin&lt;/strong&gt;<br /> 
Valid Values: The number of miles an address should be within<br /> 
Extra Value: The Zip Code to be used as the center point<br /> 
Default Field = A Merge Var. Use &lt;strong&gt;Merge0-Merge30&lt;/strong&gt; or the &lt;strong&gt;Custom Tag&lt;/strong&gt; you've setup for your merge field - see listMergeVars()<br /> 
Valid Op(erations):<br /> 
&lt;strong&gt;eq&lt;/strong&gt; (=) / &lt;strong&gt;ne&lt;/strong&gt; (!=) / &lt;strong&gt;gt&lt;/strong&gt; (&amp;gt;) / &lt;strong&gt;lt&lt;/strong&gt; (&amp;lt;) / &lt;strong&gt;like&lt;/strong&gt; (like '%blah%') / &lt;strong&gt;nlike&lt;/strong&gt; (not like '%blah%') / &lt;strong&gt;starts&lt;/strong&gt; (like 'blah%') / &lt;strong&gt;ends&lt;/strong&gt; (like '%blah')<br /> 
Valid Values: any string
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>list_id</td><td> the list to test segmentation on - get lists using lists()</td></tr> 
        <tr><td>array</td><td>options</td><td> with 2 keys:</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="806711a29684b8a0e54ad77514add8ef"><span class="type">(string)</span> <span class="name">campaignCreate</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">type</span>, <span class="paratype">(array) </span><span class="paraname">options</span>, <span class="paratype">(array) </span><span class="paraname">content</span><span class="other"> [ </span>, <span class="paratype">(array) </span><span class="paraname">segment_opts</span>, <span class="paratype">(array) </span><span class="paraname">type_opts</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Create a new draft campaign to send. You &lt;strong&gt;can not&lt;/strong&gt; have more than 32,000 campaigns in your account.<br /> 
string list_id the list to send this campaign to- get lists using lists()<br /> 
string subject the subject line for your campaign message<br /> 
string from_email the From: email address for your campaign message<br /> 
string from_name the From: name for your campaign message (not an email address)<br /> 
string to_name the To: name recipients will see (not email address)<br /> 
int template_id optional - use this user-created template to generate the HTML content of the campaign (takes precendence over other template options)<br /> 
int gallery_template_id optional - use a template from the public gallery to generate the HTML content of the campaign (takes precendence over base template options)<br /> 
int base_template_id optional - use this a base/start-from-scratch template to generate the HTML content of the campaign<br /> 
int folder_id optional - automatically file the new campaign in the folder_id passed. Get using folders() - note that Campaigns and Autoresponders have separate folder setupsn<br /> 
array tracking optional - set which recipient actions will be tracked, as a struct of boolean values with the following keys: &quot;opens&quot;, &quot;html_clicks&quot;, and &quot;text_clicks&quot;.  By default, opens and HTML clicks will be tracked. Click tracking can not be disabled for Free accounts.<br /> 
string title optional - an internal name to use for this campaign.  By default, the campaign subject will be used.<br /> 
boolean authenticate optional - set to true to enable SenderID, DomainKeys, and DKIM authentication, defaults to false.<br /> 
array analytics optional - if provided, use a struct with &quot;service type&quot; as a key and the &quot;service tag&quot; as a value. For Google, this should be &quot;google&quot;=&gt;&quot;your_google_analytics_key_here&quot;. Note that only &quot;google&quot; is currently supported - a Google Analytics tags will be added to all links in the campaign with this string attached. Others may be added in the future<br /> 
boolean auto_footer optional Whether or not we should auto-generate the footer for your content. Mostly useful for content from URLs or Imports<br /> 
boolean inline_css optional Whether or not css should be automatically inlined when this campaign is sent, defaults to false.<br /> 
boolean generate_text optional Whether of not to auto-generate your Text content from the HTML content. Note that this will be ignored if the Text part of the content passed is not empty, defaults to false.<br /> 
boolean auto_tweet optional If set, this campaign will be auto-tweeted when it is sent - defaults to false. Note that if a Twitter account isn't linked, this will be silently ignored.<br /> 
boolean timewarp optional If set, this campaign must be scheduled 24 hours in advance of sending - default to false. Only valid for &quot;regular&quot; campaigns and &quot;absplit&quot; campaigns that split on schedule_time.<br /> 
boolean ecomm360 optional If set, our &lt;a href=&quot;http://www.mailchimp.com/blog/ecommerce-tracking-plugin/&quot; target=&quot;_blank&quot;&gt;Ecommerce360 tracking&lt;/a&gt; will be enabled for links in the campaign<br /> 
string html for pasted HTML content<br /> 
string text for the plain-text version<br /> 
string url to have us pull in content from a URL. Note, this will override any other content options - for lists with Email Format options, you'll need to turn on generate_text as well<br /> 
string archive to send a Base64 encoded archive file for us to import all media from. Note, this will override any other content options - for lists with Email Format options, you'll need to turn on generate_text as well<br /> 
string archive_type optional - only necessary for the &quot;archive&quot; option. Supported formats are: zip, tar.gz, tar.bz2, tar, tgz, tbz . If not included, we will default to zip<br /> 
If you chose a template instead of pasting in your HTML content, then use &quot;html_&quot; followed by the template sections as keys - for example, use a key of &quot;html_MAIN&quot; to fill in the &quot;MAIN&quot; section of a template. Supported template sections include: &quot;html_HEADER&quot;, &quot;html_MAIN&quot;, &quot;html_SIDECOLUMN&quot;, and &quot;html_FOOTER&quot;<br /> 
For RSS Campaigns this, array should contain:<br /> 
string url the URL to pull RSS content from - it will be verified and must exist<br /> 
string schedule optional one of &quot;daily&quot;, &quot;weekly&quot;, &quot;monthly&quot; - defaults to &quot;daily&quot;<br /> 
string schedule_hour optional an hour between 0 and 24 - default to 4 (4am &lt;em&gt;local time&lt;/em&gt;) - applies to all schedule types<br /> 
string schedule_weekday optional for &quot;weekly&quot; only, a number specifying the day of the week to send: 0 (Sunday) - 6 (Saturday) - defaults to 1 (Monday)<br /> 
string schedule_monthday optional for &quot;monthly&quot; only, a number specifying the day of the month to send (1 - 28) or &quot;last&quot; for the last day of a given month. Defaults to the 1st day of the month<br /> 
For A/B Split campaigns, this array should contain:<br /> 
string split_test The values to segment based on. Currently, one of: &quot;subject&quot;, &quot;from_name&quot;, &quot;schedule&quot;. NOTE, for &quot;schedule&quot;, you will need to call campaignSchedule() separately!<br /> 
string pick_winner How the winner will be picked, one of: &quot;opens&quot; (by the open_rate), &quot;clicks&quot; (by the click rate), &quot;manual&quot; (you pick manually)<br /> 
int wait_units optional the default time unit to wait before auto-selecting a winner - use &quot;3600&quot; for hours, &quot;86400&quot; for days. Defaults to 86400.<br /> 
int wait_time optional the number of units to wait before auto-selecting a winner - defaults to 1, so if not set, a winner will be selected after 1 Day.<br /> 
int split_size optional this is a percentage of what size the Campaign's List plus any segmentation options results in. &quot;schedule&quot; type forces 50%, all others default to 10%<br /> 
string from_name_a optional sort of, required when split_test is &quot;from_name&quot;<br /> 
string from_name_b optional sort of, required when split_test is &quot;from_name&quot;<br /> 
string from_email_a optional sort of, required when split_test is &quot;from_name&quot;<br /> 
string from_email_b optional sort of, required when split_test is &quot;from_name&quot;<br /> 
string subject_a optional sort of, required when split_test is &quot;subject&quot;<br /> 
string subject_b optional sort of, required when split_test is &quot;subject&quot;<br /> 
For AutoResponder campaigns, this array should contain:<br /> 
string offset-units one of &quot;day&quot;, &quot;week&quot;, &quot;month&quot;, &quot;year&quot; - required<br /> 
string offset-time optional, sort of - the number of units must be a number greater than 0 for signup based autoresponders<br /> 
string offset-dir either &quot;before&quot; or &quot;after&quot;<br /> 
string event optional &quot;signup&quot; (default) to base this on double-optin signup, &quot;date&quot; or &quot;annual&quot; to base this on merge field in the list<br /> 
string event-datemerge optional sort of, this is required if the event is &quot;date&quot; or &quot;annual&quot;
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>type</td><td> the Campaign Type to create - one of &quot;regular&quot;, &quot;plaintext&quot;, &quot;absplit&quot;, &quot;rss&quot;, &quot;trans&quot;, &quot;auto&quot;</td></tr> 
        <tr><td>array</td><td>options</td><td> a hash of the standard options for this campaign :</td></tr> 
        <tr><td>array</td><td>content</td><td> the content for this campaign - use a struct with the following keys:</td></tr> 
        <tr><td>array</td><td>segment_opts</td><td> optional - if you wish to do Segmentation with this campaign this array should contain: see campaignSegmentTest(). It's suggested that you test your options against campaignSegmentTest(). Also, &quot;trans&quot; campaigns &lt;strong&gt;do not&lt;/strong&gt; support segmentation.</td></tr> 
        <tr><td>array</td><td>type_opts</td><td> optional -</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="f94d00d07ab125080bbac335e775746a"><span class="type">(boolean)</span> <span class="name">campaignUpdate</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span>, <span class="paratype">(string) </span><span class="paraname">name</span>, <span class="paratype">(mixed) </span><span class="paraname">value</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Update just about any setting for a campaign that has &lt;em&gt;not&lt;/em&gt; been sent. See campaignCreate() for details.<br /> 
Caveats:&lt;br/&gt;&lt;ul&gt;<br /> 
&lt;li&gt;If you set list_id, all segmentation options will be deleted and must be re-added.&lt;/li&gt;<br /> 
&lt;li&gt;If you set template_id, you need to follow that up by setting it's 'content'&lt;/li&gt;<br /> 
&lt;li&gt;If you set segment_opts, you should have tested your options against campaignSegmentTest() as campaignUpdate() will not allow you to set a segment that includes no members.&lt;/li&gt;&lt;/ul&gt;
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the Campaign Id to update</td></tr> 
        <tr><td>string</td><td>name</td><td> the parameter name ( see campaignCreate() ). For items in the &lt;strong&gt;options&lt;/strong&gt; array, this will be that parameter's name (subject, from_email, etc.). Additional parameters will be that option name  (content, segment_opts). &quot;type_opts&quot; will be the name of the type - rss, auto, trans, etc.</td></tr> 
        <tr><td>mixed</td><td>value</td><td>e an appropriate value for the parameter ( see campaignCreate() ). For items in the &lt;strong&gt;options&lt;/strong&gt; array, this will be that parameter's value. For additional parameters, this is the same value passed to them.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="7779eaf6f2547a7acfad238027803a16"><span class="type">(string)</span> <span class="name">campaignReplicate</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Replicate a campaign.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the Campaign Id to replicate</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="5d50b5d382361513efe0c6df6204abe7"><span class="type">(boolean)</span> <span class="name">campaignDelete</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Delete a campaign. Seriously, &quot;poof, gone!&quot; - be careful!
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the Campaign Id to delete</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="41dfabce9999260428c407d1922e2109"><span class="type">(array)</span> <span class="name">campaigns</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other"> [ </span>, <span class="paratype">(array) </span><span class="paraname">filters</span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get the list of campaigns and their details matching the specified filters<br /> 
string  campaign_id optional - return a single campaign using a know campaign_id<br /> 
string  list_id optional - the list to send this campaign to- get lists using lists(). Accepts multiples separated by commas when not using exact matching.<br /> 
int folder_id optional - only show campaigns from this folder id - get folders using campaignFolders(). Accepts multiples separated by commas when not using exact matching.<br /> 
int template_id optional - only show campaigns using this template id - get templates using templates(). Accepts multiples separated by commas when not using exact matching.<br /> 
string  status optional - return campaigns of a specific status - one of &quot;sent&quot;, &quot;save&quot;, &quot;paused&quot;, &quot;schedule&quot;, &quot;sending&quot;. Accepts multiples separated by commas when not using exact matching.<br /> 
string  type optional - return campaigns of a specific type - one of &quot;regular&quot;, &quot;plaintext&quot;, &quot;absplit&quot;, &quot;rss&quot;, &quot;trans&quot;, &quot;auto&quot;. Accepts multiples separated by commas when not using exact matching.<br /> 
string  from_name optional - only show campaigns that have this &quot;From Name&quot;<br /> 
string  from_email optional - only show campaigns that have this &quot;Reply-to Email&quot;<br /> 
string  title optional - only show campaigns that have this title<br /> 
string  subject optional - only show campaigns that have this subject<br /> 
string  sendtime_start optional - only show campaigns that have been sent since this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)<br /> 
string  sendtime_end optional - only show campaigns that have been sent before this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)<br /> 
boolean exact optional - flag for whether to filter on exact values when filtering, or search within content for filter values - defaults to true. Using this disables the use of any filters that accept multiples.<br /> 
string id Campaign Id (used for all other campaign functions)<br /> 
int web_id The Campaign id used in our web app, allows you to create a link directly to it<br /> 
string list_id The List used for this campaign<br /> 
int folder_id The Folder this campaign is in<br /> 
int template_id The Template this campaign uses<br /> 
string content_type How the campaign's content is put together - one of 'template', 'html', 'url'<br /> 
string title Title of the campaign<br /> 
string type The type of campaign this is (regular,plaintext,absplit,rss,inspection,trans,auto)<br /> 
string create_time Creation time for the campaign<br /> 
string send_time Send time for the campaign - also the scheduled time for scheduled campaigns.<br /> 
int emails_sent Number of emails email was sent to<br /> 
string status Status of the given campaign (save,paused,schedule,sending,sent)<br /> 
string from_name From name of the given campaign<br /> 
string from_email Reply-to email of the given campaign<br /> 
string subject Subject of the given campaign<br /> 
string to_name Custom &quot;To:&quot; email string using merge variables<br /> 
string archive_url Archive link for the given campaign<br /> 
boolean inline_css Whether or not the campaign content's css was auto-inlined<br /> 
string analytics Either &quot;google&quot; if enabled or &quot;N&quot; if disabled<br /> 
string analytics_tag The name/tag the campaign's links were tagged with if analytics were enabled.<br /> 
boolean authenticate Whether or not the campaign was authenticated<br /> 
boolean ecomm360 Whether or not ecomm360 tracking was appended to links<br /> 
boolean auto_tweet Whether or not the campaign was auto tweeted after sending<br /> 
string auto_fb_post A comma delimited list of Facebook Profile/Page Ids the campaign was posted to after sending. If not used, blank.<br /> 
boolean auto_footer Whether or not the auto_footer was manually turned on<br /> 
boolean timewarp Whether or not the campaign used Timewarp<br /> 
boolean timewarp_schedule The time, in GMT, that the Timewarp campaign is being sent. For A/B Split campaigns, this is blank and is instead in their schedule_a and schedule_b in the type_opts array<br /> 
array tracking containing &quot;text_clicks&quot;, &quot;html_clicks&quot;, and &quot;opens&quot; as boolean values representing whether or not they were enabled<br /> 
string segment_text a string marked-up with HTML explaining the segment used for the campaign in plain English<br /> 
array segment_opts the segment used for the campaign - can be passed to campaignSegmentTest() or campaignCreate()<br /> 
array type_opts the type-specific options for the campaign - can be passed to campaignCreate()
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>array</td><td>filters</td><td> a hash of filters to apply to this query - all are optional:</td></tr> 
        <tr><td>integer</td><td>start</td><td> optional - control paging of campaigns, start results at this campaign #, defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td> optional - control paging of campaigns, number of campaigns to return with each call, defaults to 25 (max=1000)</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="ac0bae46f5b2f6ebb53454b4ef2c4315"><span class="type">(array)</span> <span class="name">campaignStats</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Given a list and a campaign, get all the relevant campaign statistics (opens, bounces, clicks, etc.)<br /> 
int bounces_a bounces for the A group<br /> 
int bounces_b bounces for the B group<br /> 
int forwards_a forwards for the A group<br /> 
int forwards_b forwards for the B group<br /> 
int abuse_reports_a abuse reports for the A group<br /> 
int abuse_reports_b abuse reports for the B group<br /> 
int unsubs_a unsubs for the A group<br /> 
int unsubs_b unsubs for the B group<br /> 
int recipients_click_a clicks for the A group<br /> 
int recipients_click_b clicks for the B group<br /> 
int forwards_opens_a opened forwards for the A group<br /> 
int forwards_opens_b opened forwards for the A group<br /> 
int opens opens for this timezone<br /> 
string last_open the date/time of the last open for this timezone<br /> 
int unique_opens the unique opens for this timezone<br /> 
int clicks the total clicks for this timezone<br /> 
string last_click the date/time of the last click for this timezone<br /> 
int unique_opens the unique clicks for this timezone<br /> 
int bounces the total bounces for this timezone<br /> 
int total the total number of members sent to in this timezone<br /> 
int sent the total number of members delivered to in this timezone
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull stats for (can be gathered using campaigns())</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="cf43db63050ab342efc11c76ddefe6f2"><span class="type">(int)</span> <span class="name">campaignClickStats</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get an array of the urls being tracked, and their click counts for a given campaign
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull stats for (can be gathered using campaigns())</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="d22a18c4e60a2af1525db250ba24b8e1"><span class="type">(int)</span> <span class="name">campaignEmailDomainPerformance</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get the top 5 performing email domains for this campaign. Users want more than 5 should use campaign campaignEmailStatsAIM()<br /> 
or campaignEmailStatsAIMAll() and generate any additional stats they require.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull email domain performance for (can be gathered using campaigns())</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="6ede4e31374b8e9294f7a3b70b32490a"><span class="type">(array)</span> <span class="name">campaignMembers</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(string) </span><span class="paraname">status</span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get all email addresses the campaign was successfully sent to (ie, no bounces)<br /> 
string email the email address sent to<br /> 
string status the status of the send - one of 'sent', 'hard', 'soft'<br /> 
string absplit_group if this was an absplit campaign, one of 'a','b', or 'winner'<br /> 
string tz_group if this was an timewarp campaign the timezone GMT offset the member was included in
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull members for (can be gathered using campaigns())</td></tr> 
        <tr><td>string</td><td>status</td><td> optional the status to pull - one of 'sent', 'hard' (bounce), or 'soft' (bounce). By default, all records are returned</td></tr> 
        <tr><td>integer</td><td>start</td><td>art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td>mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="5f7654aeada802683cbf451cc77e498e"><span class="type">(array)</span> <span class="name">campaignHardBounces</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        &lt;strong&gt;DEPRECATED&lt;/strong&gt; Get all email addresses with Hard Bounces for a given campaign<br /> 
string email the email address that bounced
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
        <tr><td>integer</td><td>start</td><td>art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td>mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="35a8b026435e06c2d9962aedbb8d1dcd"><span class="type">(array)</span> <span class="name">campaignSoftBounces</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        &lt;strong&gt;DEPRECATED&lt;/strong&gt; Get all email addresses with Soft Bounces for a given campaign<br /> 
string email the email address that bounced
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
        <tr><td>integer</td><td>start</td><td>art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td>mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="d4ad0576f62fe39cc45f7ae16076e7a4"><span class="type">(array)</span> <span class="name">campaignUnsubscribes</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get all unsubscribed email addresses for a given campaign<br /> 
string email the email address that unsubscribed<br /> 
string reason For unsubscribes only - the reason collected for the unsubscribe. If populated, one of 'NORMAL','NOSIGNUP','INAPPROPRIATE','SPAM','OTHER'<br /> 
string reason_text For unsubscribes only - if the reason is OTHER, the text entered.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
        <tr><td>integer</td><td>start</td><td>art optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td>mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="d613153249eb74fed2a0966d90d2d1d5"><span class="type">(string)</span> <span class="name">campaignAbuseReports</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">since</span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(string) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get all email addresses that complained about a given campaign
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull abuse reports for (can be gathered using campaigns())</td></tr> 
        <tr><td>integer</td><td>since</td><td> optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>start</td><td> optional for large data sets, the number of results to return - defaults to 500, upper limit set at 1000</td></tr> 
        <tr><td>string</td><td>limit</td><td> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="f064961fbb86a2d0b11148856645b96b"><span class="type">(type)</span> <span class="name">campaignAdvice</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the text presented in our app for how a campaign performed and any advice we may have for you - best<br /> 
suited for display in customized reports pages. Note: some messages will contain HTML - clean tags as necessary
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull advice text for (can be gathered using campaigns())</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="d359efce46af041b3290191efcc9058a"><span class="type">(array)</span> <span class="name">campaignAnalytics</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the Google Analytics data we've collected for this campaign. Note, requires Google Analytics Add-on to be installed and configured.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="4679b4fcf92a5bd02875a12d9b255bc6"><span class="type">(bool)</span> <span class="name">campaignGeoOpens</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the countries and number of opens tracked for each. Email address are not returned.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="b37df7a1f88d45a1efe5fa8667ffc548"><span class="type">(int)</span> <span class="name">campaignGeoOpensForCountry</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span>, <span class="paratype">(string) </span><span class="paraname">code</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the regions and number of opens tracked for a certain country. Email address are not returned.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
        <tr><td>string</td><td>code</td><td> An ISO3166 2 digit country code</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="f8ae3b89e800808cf822a41b6b185535"><span class="type">(array)</span> <span class="name">campaignEepUrlStats</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the tracked eepurl mentions on Twitter<br /> 
int tweets Total number of tweets seen<br /> 
string first_tweet date and time of the first tweet seen<br /> 
string last_tweet date and time of the last tweet seen<br /> 
int retweets Total number of retweets seen<br /> 
string first_retweet date and time of the first retweet seen<br /> 
string last_retweet date and time of the last retweet seen<br /> 
array statuses an array of statuses recorded inclduing the status, screen_name, status_id, and datetime fields plus an is_retweet flag<br /> 
int clicks Total number of clicks seen<br /> 
string first_click date and time of the first click seen<br /> 
string last_click date and time of the first click seen<br /> 
array locations an array of geographic locations including country, region, and total clicks<br /> 
string referrer the referrer, truncated to 100 bytes<br /> 
int clicks Total number of clicks seen from this referrer<br /> 
string first_click date and time of the first click seen from this referrer<br /> 
string last_click date and time of the first click seen from this referrer
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="ec95925760b553fa023833de1cf58853"><span class="type">(string)</span> <span class="name">campaignBounceMessage</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span>, <span class="paratype">(string) </span><span class="paraname">email</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the most recent full bounce message for a specific email address on the given campaign.<br /> 
Messages over 30 days old are subject to being removed
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
        <tr><td>string</td><td>email</td><td> the email address or unique id of the member to pull a bounce message for.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="fbc13760714008f18f1409b4b47a4b58"><span class="type">(array)</span> <span class="name">campaignBounceMessages</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span>, <span class="paratype">(string) </span><span class="paraname">since</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the full bounce messages for the given campaign. Note that this can return very large amounts<br /> 
of data depending on how large the campaign was and how much cruft the bounce provider returned. Also,<br /> 
message over 30 days old are subject to being removed<br /> 
string date date/time the bounce was received and processed<br /> 
string email the email address that bounced<br /> 
string message the entire bounce message received
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
        <tr><td>integer</td><td>start</td><td> optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td> optional for large data sets, the number of results to return - defaults to 25, upper limit set at 50</td></tr> 
        <tr><td>string</td><td>since</td><td> optional pull only messages since this time - use YYYY-MM-DD format in &lt;strong&gt;GMT&lt;/strong&gt; (we only store the date, not the time)</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="cda579907790ecca9445f3cc6ae5fda5"><span class="type">(array)</span> <span class="name">campaignEcommOrders</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span>, <span class="paratype">(string) </span><span class="paraname">since</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the Ecommerce Orders tracked by campaignEcommOrderAdd()<br /> 
string store_id the store id generated by the plugin used to uniquely identify a store<br /> 
string store_name the store name collected by the plugin - often the domain name<br /> 
string order_id the internal order id the store tracked this order by<br /> 
string email  the email address that received this campaign and is associated with this order<br /> 
double order_total the order total<br /> 
double tax_total the total tax for the order (if collected)<br /> 
double ship_total the shipping total for the order (if collected)<br /> 
string order_date the date the order was tracked - from the store if possible, otherwise the GMT time we recieved it<br /> 
array lines containing detail of the order - product, category, quantity, item cost
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to pull bounces for (can be gathered using campaigns())</td></tr> 
        <tr><td>integer</td><td>start</td><td> optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 500</td></tr> 
        <tr><td>string</td><td>since</td><td> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="306feadeb2a6f300f355c5cb5a6949fb"><span class="type">(string)</span> <span class="name">campaignShareReport</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(array) </span><span class="paraname">opts</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get the URL to a customized &lt;a href=&quot;http://eepurl.com/gKmL&quot; target=&quot;_blank&quot;&gt;VIP Report&lt;/a&gt; for the specified campaign and optionally send an email to someone with links to it. Note subsequent calls will overwrite anything already set for the same campign (eg, the password)<br /> 
string  header_type optional - &quot;text&quot; or &quot;image', defaults to &quot;text'<br /> 
string  header_data optional - if &quot;header_type&quot; is text, the text to display. if &quot;header_type&quot; is &quot;image&quot; a valid URL to an image file. Note that images will be resized to be no more than 500x150. Defaults to the Accounts Company Name.<br /> 
boolean    secure optional - whether to require a password for the shared report. defaults to &quot;true&quot;<br /> 
string  password optional - if secure is true and a password is not included, we will generate one. It is always returned.<br /> 
string  to_email optional - optional, email address to share the report with - no value means an email will not be sent<br /> 
array   theme  optional - an array containing either 3 or 6 character color code values for: &quot;bg_color&quot;, &quot;header_color&quot;, &quot;current_tab&quot;, &quot;current_tab_text&quot;, &quot;normal_tab&quot;, &quot;normal_tab_text&quot;, &quot;hover_tab&quot;, &quot;hover_tab_text&quot;<br /> 
string  css_url    optional - a link to an external CSS file to be included after our default CSS (http://vip-reports.net/css/vip.css) &lt;strong&gt;only if&lt;/strong&gt; loaded via the &quot;secure_url&quot; - max 255 bytes
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to share a report for (can be gathered using campaigns())</td></tr> 
        <tr><td>array</td><td>opts</td><td>s optional various parameters which can be used to configure the shared report</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="cc7dfc9a89d19ada82043af1a2ff3753"><span class="type">(string)</span> <span class="name">campaignContent</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(boolean) </span><span class="paraname">for_archive</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get the content (both html and text) for a campaign either as it would appear in the campaign archive or as the raw, original content
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to get content for (can be gathered using campaigns())</td></tr> 
        <tr><td>boolean</td><td>for_archive</td><td>ve optional controls whether we return the Archive version (true) or the Raw version (false), defaults to true</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="36100b01bded4969ef54681395645933"><span class="type">(array)</span> <span class="name">campaignTemplateContent</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get the HTML template content sections for a campaign. Note that this &lt;strong&gt;will&lt;/strong&gt; return very jagged, non-standard results based on the template<br /> 
a campaign is using. You only want to use this if you want to allow editing template sections in your applicaton.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to get content for (can be gathered using campaigns())</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="8d7c4e3bacea24a21a360a9815156248"><span class="type">(array)</span> <span class="name">campaignOpenedAIM</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the list of email addresses that opened a given campaign with how many times they opened - note: this AIM function is free and does<br /> 
not actually require the AIM module to be installed<br /> 
string email Email address that opened the campaign<br /> 
int open_count Total number of times the campaign was opened by this email address
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to get opens for (can be gathered using campaigns())</td></tr> 
        <tr><td>integer</td><td>start</td><td>art optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td>mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="b2656dde5d6ffb952678f8fd8a288ef4"><span class="type">(array)</span> <span class="name">campaignNotOpenedAIM</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the list of email addresses that did not open a given campaign<br /> 
string email Email address that opened the campaign
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to get no opens for (can be gathered using campaigns())</td></tr> 
        <tr><td>integer</td><td>start</td><td>art optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td>mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="62155a649f2762b6c5782b5908ba1fbb"><span class="type">(array)</span> <span class="name">campaignClickDetailAIM</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span>, <span class="paratype">(string) </span><span class="paraname">url</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Return the list of email addresses that clicked on a given url, and how many times they clicked<br /> 
string email Email address that opened the campaign<br /> 
int clicks Total number of times the URL was clicked on by this email address
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to get click stats for (can be gathered using campaigns())</td></tr> 
        <tr><td>string</td><td>url</td><td> the URL of the link that was clicked on</td></tr> 
        <tr><td>integer</td><td>start</td><td>art optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td>mit optional for large data sets, the number of results to return - defaults to 1000, upper limit set at 15000</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="7cb83a476e7a6acb49de657d6775ad74"><span class="type">(array)</span> <span class="name">campaignEmailStatsAIM</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span>, <span class="paratype">(array) </span><span class="paraname">email_address</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Given a campaign and email address, return the entire click and open history with timestamps, ordered by time<br /> 
string action The action taken (open or click)<br /> 
string timestamp Time the action occurred<br /> 
string url For clicks, the URL that was clicked
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to get stats for (can be gathered using campaigns())</td></tr> 
        <tr><td>array</td><td>email_address</td><td> an array of up to 50 email addresses to check OR the email &quot;id&quot; returned from listMemberInfo, Webhooks, and Campaigns. For backwards compatibility, if a string is passed, it will be treated as an array with a single element (will not work with XML-RPC).</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="b7256e273452a9dbf0460ee72246cffb"><span class="type">(array)</span> <span class="name">campaignEmailStatsAIMAll</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">cid</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Given a campaign and correct paging limits, return the entire click and open history with timestamps, ordered by time,<br /> 
for every user a campaign was delivered to.<br /> 
string action The action taken (open or click)<br /> 
string timestamp Time the action occurred<br /> 
string url For clicks, the URL that was clicked
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>cid</td><td> the campaign id to get stats for (can be gathered using campaigns())</td></tr> 
        <tr><td>integer</td><td>start</td><td> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 1000</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="eb3844ff4f7e4c449d54fa334b825aac"><span class="type">(bool)</span> <span class="name">campaignEcommOrderAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(array) </span><span class="paraname">order</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Attach Ecommerce Order Information to a Campaign. This will generall be used by ecommerce package plugins<br /> 
&lt;a href=&quot;/plugins/ecomm360.phtml&quot;&gt;that we provide&lt;/a&gt; or by 3rd part system developers.<br /> 
string id the Order Id<br /> 
string campaign_id the Campaign Id to track this order with (see the &quot;mc_cid&quot; query string variable a campaign passes)<br /> 
string email_id the Email Id of the subscriber we should attach this order to (see the &quot;mc_eid&quot; query string variable a campaign passes)<br /> 
double total The Order Total (ie, the full amount the customer ends up paying)<br /> 
string order_date optional the date of the order - if this is not provided, we will default the date to now<br /> 
double shipping optional the total paid for Shipping Fees<br /> 
double tax optional the total tax paid<br /> 
string store_id a unique id for the store sending the order in (20 bytes max)<br /> 
string store_name optional a &quot;nice&quot; name for the store - typically the base web address (ie, &quot;store.mailchimp.com&quot;). We will automatically update this if it changes (based on store_id)<br /> 
string plugin_id the MailChimp assigned Plugin Id. Get yours by &lt;a href=&quot;/register.php&quot;&gt;registering here&lt;/a&gt;<br /> 
array items the individual line items for an order using these keys:<br /> 
&lt;div style=&quot;padding-left:30px&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan=*&gt;<br /> 
int line_num optional the line number of the item on the order. We will generate these if they are not passed<br /> 
int product_id the store's internal Id for the product. Lines that do no contain this will be skipped<br /> 
string product_name the product name for the product_id associated with this item. We will auto update these as they change (based on product_id)<br /> 
int category_id the store's internal Id for the (main) category associated with this product. Our testing has found this to be a &quot;best guess&quot; scenario<br /> 
string category_name the category name for the category_id this product is in. Our testing has found this to be a &quot;best guess&quot; scenario. Our plugins walk the category heirarchy up and send &quot;Root - SubCat1 - SubCat4&quot;, etc.<br /> 
double qty the quantity of the item ordered<br /> 
double cost the cost of a single item (ie, not the extended cost of the line)<br /> 
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>array</td><td>order</td><td> an array of information pertaining to the order that has completed. Use the following keys:</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="e6dbca21d4865b265ca2780205b19305"><span class="type">(array)</span> <span class="name">lists</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other"> [ </span>, <span class="paratype">(array) </span><span class="paraname">filters</span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve all of the lists defined for your user account<br /> 
string list_id optional - return a single list using a known list_id. Accepts multiples separated by commas when not using exact matching<br /> 
string list_name optional - only lists that match this name<br /> 
string from_name optional - only lists that have a default from name matching this<br /> 
string from_email optional - only lists that have a default from email matching this<br /> 
string from_subject optional - only lists that have a default from email matching this<br /> 
string created_before optional - only show lists that were created before this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)<br /> 
string created_after optional - only show lists that were created since this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)<br /> 
boolean exact optional - flag for whether to filter on exact values when filtering, or search within content for filter values - defaults to true<br /> 
string id The list id for this list. This will be used for all other list management functions.<br /> 
int web_id The list id used in our web app, allows you to create a link directly to it<br /> 
string name The name of the list.<br /> 
string date_created The date that this list was created.<br /> 
boolean email_type_option Whether or not the List supports multiple formats for emails or just HTML<br /> 
boolean use_awesomebar Whether or not campaigns for this list use the Awesome Bar in archives by default<br /> 
string default_from_name Default From Name for campaigns using this list<br /> 
string default_from_email Default From Email for campaigns using this list<br /> 
string default_subject Default Subject Line for campaigns using this list<br /> 
string default_language Default Language for this list's forms<br /> 
int list_rating An auto-generated activity score for the list (0 - 5)<br /> 
array stats various stats and counts for the list<br /> 
int member_count The number of active members in the given list.<br /> 
int unsubscribe_count The number of members who have unsubscribed from the given list.<br /> 
int cleaned_count The number of members cleaned from the given list.<br /> 
int member_count_since_send The number of active members in the given list since the last campaign was sent<br /> 
int unsubscribe_count_since_send The number of members who have unsubscribed from the given list since the last campaign was sent<br /> 
int cleaned_count_since_send The number of members cleaned from the given list since the last campaign was sent<br /> 
int campaign_count The number of campaigns in any status that use this list<br /> 
int grouping_count The number of Interest Groupings for this list<br /> 
int group_count The number of Interest Groups (regardless of grouping) for this list<br /> 
int merge_var_count The number of merge vars for this list (not including the required EMAIL one)<br /> 
int avg_sub_rate the average number of subscribe per month for the list (empty value if we haven't calculated this yet)<br /> 
int avg_unsub_rate the average number of unsubscribe per month for the list (empty value if we haven't calculated this yet)<br /> 
int target_sub_rate the target subscription rate for the list to keep it growing (empty value if we haven't calculated this yet)<br /> 
int open_rate the average open rate per campaign for the list  (empty value if we haven't calculated this yet)<br /> 
int click_rate the average click rate per campaign for the list  (empty value if we haven't calculated this yet)<br /> 
array modules Any list specific modules installed for this list (example is SocialPro)
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>array</td><td>filters</td><td> a hash of filters to apply to this query - all are optional:</td></tr> 
        <tr><td>integer</td><td>start</td><td> optional - control paging of lists, start results at this list #, defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td> optional - control paging of lists, number of lists to return with each call, defaults to 25 (max=100)</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="67b0610d759c4890e839a7882fa1d0e9"><span class="type">(array)</span> <span class="name">listMergeVars</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get the list of merge tags for a given list, including their name, tag, and required setting
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="81bb4e762b0d502a7624c8f0d2bce17d"><span class="type">(bool)</span> <span class="name">listMergeVarAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">tag</span>, <span class="paratype">(string) </span><span class="paraname">name</span><span class="other"> [ </span>, <span class="paratype">(array) </span><span class="paraname">options</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Add a new merge tag to a given list<br /> 
string field_type optional one of: text, number, radio, dropdown, date, address, phone, url, imageurl - defaults to text<br /> 
boolean req optional indicates whether the field is required - defaults to false<br /> 
boolean public optional indicates whether the field is displayed in public - defaults to true<br /> 
boolean show optional indicates whether the field is displayed in the app's list member view - defaults to true<br /> 
string default_value optional the default value for the field. See listSubscribe() for formatting info. Defaults to blank<br /> 
array choices optional kind of - an array of strings to use as the choices for radio and dropdown type fields
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>tag</td><td> The merge tag to add, e.g. FNAME</td></tr> 
        <tr><td>string</td><td>name</td><td> The long description of the tag being added, used for user displays</td></tr> 
        <tr><td>array</td><td>options</td><td> optional Various options for this merge var. &lt;em&gt;note:&lt;/em&gt; for historical purposes this can also take a &quot;boolean&quot;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="e77d8c60cd55e6e7726c6c72d441d894"><span class="type">(bool)</span> <span class="name">listMergeVarUpdate</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">tag</span>, <span class="paratype">(array) </span><span class="paraname">options</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Update most parameters for a merge tag on a given list. You cannot currently change the merge type
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>tag</td><td> The merge tag to update</td></tr> 
        <tr><td>array</td><td>options</td><td> The options to change for a merge var. See listMergeVarAdd() for valid options</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="c7073fe6f189285a647c21827c7c18b2"><span class="type">(bool)</span> <span class="name">listMergeVarDel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">tag</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Delete a merge tag from a given list and all its members. Seriously - the data is removed from all members as well!<br /> 
Note that on large lists this method may seem a bit slower than calls you typically make.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>tag</td><td> The merge tag to delete</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="a50c1a06785c73325c7d5ef26debb1a0"><span class="type">(array)</span> <span class="name">listInterestGroupings</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get the list of interest groupings for a given list, including the label, form information, and included groups for each
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="fe385ee8af561dbb4c6f8383cf9f573f"><span class="type">(bool)</span> <span class="name">listInterestGroupAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">group_name</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">grouping_id</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Add a single Interest Group - if interest groups for the List are not yet enabled, adding the first<br /> 
group will automatically turn them on.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>group_name</td><td> the interest group to add - group names must be unique within a grouping</td></tr> 
        <tr><td>integer</td><td>grouping_id</td><td>ouping_id The grouping to add the new group to - get using listInterestGrouping() . If not supplied, the first grouping on the list is used.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="e7e2e48489f476f588b5b516afac7f32"><span class="type">(bool)</span> <span class="name">listInterestGroupDel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">group_name</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">grouping_id</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Delete a single Interest Group - if the last group for a list is deleted, this will also turn groups for the list off.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>group_name</td><td> the interest group to delete</td></tr> 
        <tr><td>integer</td><td>grouping_id</td><td> The grouping to delete the group from - get using listInterestGrouping() . If not supplied, the first grouping on the list is used.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="f94f6cf8788c7190b37e739bcc606575"><span class="type">(bool)</span> <span class="name">listInterestGroupUpdate</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">old_name</span>, <span class="paratype">(string) </span><span class="paraname">new_name</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">grouping_id</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Change the name of an Interest Group
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>old_name</td><td> the interest group name to be changed</td></tr> 
        <tr><td>string</td><td>new_name</td><td> the new interest group name to be set</td></tr> 
        <tr><td>integer</td><td>grouping_id</td><td>ouping_id The grouping to delete the group from - get using listInterestGrouping() . If not supplied, the first grouping on the list is used.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="f1d35d3da743dfd599a3794d2599a96c"><span class="type">(int)</span> <span class="name">listInterestGroupingAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">name</span>, <span class="paratype">(string) </span><span class="paraname">type</span>, <span class="paratype">(array) </span><span class="paraname">groups</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Add a new Interest Grouping - if interest groups for the List are not yet enabled, adding the first<br /> 
grouping will automatically turn them on.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>name</td><td> the interest grouping to add - grouping names must be unique</td></tr> 
        <tr><td>string</td><td>type</td><td> The type of the grouping to add - one of &quot;checkboxes&quot;, &quot;hidden&quot;, &quot;dropdown&quot;, &quot;radio&quot;</td></tr> 
        <tr><td>array</td><td>groups</td><td> The lists of initial group names to be added - at least 1 is required and the names must be unique within a grouping. If the number takes you over the 60 group limit, an error will be thrown.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="bc31ca173183a45ae05e01e76b7d86a3"><span class="type">(bool)</span> <span class="name">listInterestGroupingUpdate</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(integer) </span><span class="paraname">grouping_id</span>, <span class="paratype">(string) </span><span class="paraname">name</span>, <span class="paratype">(string) </span><span class="paraname">value</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Update an existing Interest Grouping
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>integer</td><td>grouping_id</td><td> the interest grouping id - get from listInterestGroupings()</td></tr> 
        <tr><td>string</td><td>name</td><td> The name of the field to update - either &quot;name&quot; or &quot;type&quot;. Groups with in the grouping should be manipulated using the standard listInterestGroup* methods</td></tr> 
        <tr><td>string</td><td>value</td><td> The new value of the field. Grouping names must be unique - only &quot;hidden&quot; and &quot;checkboxes&quot; grouping types can be converted between each other.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="26801c38934a0df529b0773b3e11d09a"><span class="type">(bool)</span> <span class="name">listInterestGroupingDel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(integer) </span><span class="paraname">grouping_id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Delete an existing Interest Grouping - this will permanently delete all contained interest groups and will remove those selections from all list members
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>integer</td><td>grouping_id</td><td> the interest grouping id - get from listInterestGroupings()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="37dee0eebd574e2e702d880218c6d376"><span class="type">(array)</span> <span class="name">listWebhooks</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Return the Webhooks configured for the given list
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="0bc20598c1812b8d6e9b4f18b7832910"><span class="type">(bool)</span> <span class="name">listWebhookAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">url</span><span class="other"> [ </span>, <span class="paratype">(array) </span><span class="paraname">actions</span>, <span class="paratype">(array) </span><span class="paraname">sources</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Add a new Webhook URL for the given list<br /> 
boolean subscribe optional as subscribes occur, defaults to true<br /> 
boolean unsubscribe optional as subscribes occur, defaults to true<br /> 
boolean profile optional as profile updates occur, defaults to true<br /> 
boolean cleaned optional as emails are cleaned from the list, defaults to true<br /> 
boolean upemail optional when  subscribers change their email address, defaults to true<br /> 
boolean user optional user/subscriber initiated actions, defaults to true<br /> 
boolean admin optional admin actions in our web app, defaults to true<br /> 
boolean api optional actions that happen via API calls, defaults to false
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>url</td><td> a valid URL for the Webhook - it will be validated. note that a url may only exist on a list once.</td></tr> 
        <tr><td>array</td><td>actions</td><td> optional a hash of actions to fire this Webhook for</td></tr> 
        <tr><td>array</td><td>sources</td><td> optional a hash of sources to fire this Webhook for</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="786de8ddc6b296c5aecbcbfd0e7b3362"><span class="type">(boolean)</span> <span class="name">listWebhookDel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">url</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Delete an existing Webhook URL from a given list
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>url</td><td> the URL of a Webhook on this list</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="6ca96af087bf6f931c69858f4ac7319c"><span class="type">(date)</span> <span class="name">listStaticSegments</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve all of the Static Segments for a list.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="14782eb4d6704d2c67c270b4abd9e6eb"><span class="type">(int)</span> <span class="name">listStaticSegmentAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">name</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Save a segment against a list for later use. There is no limit to the number of segments which can be saved. Static Segments &lt;strong&gt;are not&lt;/strong&gt; tied<br /> 
to any merge data, interest groups, etc. They essentially allow you to configure an unlimited number of custom segments which will have standard performance.<br /> 
When using proper segments, Static Segments are one of the available options for segmentation just as if you used a merge var (and they can be used with other segmentation<br /> 
options), though performance may degrade at that point.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>name</td><td> a unique name per list for the segment - 50 byte maximum length, anything longer will throw an error</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="29f9baee4d2d85cbc271b3f6b666e21d"><span class="type">(bool)</span> <span class="name">listStaticSegmentReset</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(integer) </span><span class="paraname">seg_id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Resets a static segment - removes &lt;strong&gt;all&lt;/strong&gt; members from the static segment. Note: does not actually affect list member data
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>integer</td><td>seg_id</td><td> the id of the static segment to reset  - get from listStaticSegments()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="496266d60488440c89816b8603111171"><span class="type">(bool)</span> <span class="name">listStaticSegmentDel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(integer) </span><span class="paraname">seg_id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Delete a static segment. Note that this will, of course, remove any member affiliations with the segment
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>integer</td><td>seg_id</td><td> the id of the static segment to delete - get from listStaticSegments()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="f29beee599101152f9b42542e6869c35"><span class="type">(array)</span> <span class="name">listStaticSegmentMembersAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(integer) </span><span class="paraname">seg_id</span>, <span class="paratype">(array) </span><span class="paraname">batch</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Add list members to a static segment. It is suggested that you limit batch size to no more than 10,000 addresses per call. Email addresses must exist on the list<br /> 
in order to be included - this &lt;strong&gt;will not&lt;/strong&gt; subscribe them to the list!
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>integer</td><td>seg_id</td><td> the id of the static segment to modify - get from listStaticSegments()</td></tr> 
        <tr><td>array</td><td>batch</td><td> an array of email addresses and/or unique_ids to add to the segment</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="874cf44ce522b3ec0558e266e2188a6f"><span class="type">(array)</span> <span class="name">listStaticSegmentMembersDel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(integer) </span><span class="paraname">seg_id</span>, <span class="paratype">(array) </span><span class="paraname">batch</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Remove list members from a static segment. It is suggested that you limit batch size to no more than 10,000 addresses per call. Email addresses must exist on the list<br /> 
in order to be removed - this &lt;strong&gt;will not&lt;/strong&gt; unsubscribe them from the list!
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>integer</td><td>seg_id</td><td> the id of the static segment to delete - get from listStaticSegments()</td></tr> 
        <tr><td>array</td><td>batch</td><td> an array of email addresses and/or unique_ids to remove from the segment</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="891384081426c461c75e45e9f00cfc41"><span class="type">(boolean)</span> <span class="name">listSubscribe</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">email_address</span><span class="other"> [ </span>, <span class="paratype">(array) </span><span class="paraname">merge_vars</span>, <span class="paratype">(string) </span><span class="paraname">email_type</span>, <span class="paratype">(boolean) </span><span class="paraname">double_optin</span>, <span class="paratype">(boolean) </span><span class="paraname">update_existing</span>, <span class="paratype">(boolean) </span><span class="paraname">replace_interests</span>, <span class="paratype">(boolean) </span><span class="paraname">send_welcome</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Subscribe the provided email to a list. By default this sends a confirmation email - you will not see new members until the link contained in it is clicked!<br /> 
string EMAIL set this to change the email address. This is only respected on calls using update_existing or when passed to listUpdateMember()<br /> 
array GROUPINGS Set Interest Groups by Grouping. Each element in this array should be an array containing the &quot;groups&quot; parameter which contains a comma delimited list of Interest Groups to add. Commas in Interest Group names should be escaped with a backslash. ie, &quot;,&quot; =&amp;gt; &quot;\,&quot; and either an &quot;id&quot; or &quot;name&quot; parameter to specify the Grouping - get from listInterestGroupings()<br /> 
string OPTIN_IP Set the Opt-in IP field. &lt;em&gt;Abusing this may cause your account to be suspended.&lt;/em&gt; We do validate this and it must not be a private IP address.<br /> 
string OPTIN_TIME Set the Opt-in Time field. &lt;em&gt;Abusing this may cause your account to be suspended.&lt;/em&gt; We do validate this and it must be a valid date. Use YYYY-MM-DD HH:ii:ss to be safe. Generally, though, anything strtotime() understands we'll understand - &lt;a href=&quot;http://us2.php.net/strtotime&quot; target=&quot;_blank&quot;&gt;http://us2.php.net/strtotime&lt;/a&gt;<br /> 
array MC_LOCATION Set the members geographic location. By default if this merge field exists, we'll update using the optin_ip if it exists. If the array contains LATITUDE and LONGITUDE keys, they will be used. NOTE - this will slow down each subscribe call a bit, especially for lat/lng pairs in sparsely populated areas. Currently our automated background processes can and will overwrite this based on opens and clicks.<br /> 
&lt;strong&gt;Handling Field Data Types&lt;/strong&gt; - most fields you can just pass a string and all is well. For some, though, that is not the case...<br /> 
Field values should be formatted as follows:<br /> 
string address For the string version of an Address, the fields should be delimited by &lt;strong&gt;2&lt;/strong&gt; spaces. Address 2 can be skipped. The Country should be a 2 character ISO-3166-1 code and will default to your default country if not set<br /> 
array address For the array version of an Address, the requirements for Address 2 and Country are the same as with the string version. Then simply pass us an array with the keys &lt;strong&gt;addr1&lt;/strong&gt;, &lt;strong&gt;addr2&lt;/strong&gt;, &lt;strong&gt;city&lt;/strong&gt;, &lt;strong&gt;state&lt;/strong&gt;, &lt;strong&gt;zip&lt;/strong&gt;, &lt;strong&gt;country&lt;/strong&gt; and appropriate values for each<br /> 
string date use YYYY-MM-DD to be safe. Generally, though, anything strtotime() understands we'll understand - &lt;a href=&quot;http://us2.php.net/strtotime&quot; target=&quot;_blank&quot;&gt;http://us2.php.net/strtotime&lt;/a&gt;<br /> 
string dropdown can be a normal string - we &lt;em&gt;will&lt;/em&gt; validate that the value is a valid option<br /> 
string image must be a valid, existing url. we &lt;em&gt;will&lt;/em&gt; check its existence<br /> 
string multi_choice can be a normal string - we &lt;em&gt;will&lt;/em&gt; validate that the value is a valid option<br /> 
double number pass in a valid number - anything else will turn in to zero (0). Note, this will be rounded to 2 decimal places<br /> 
string phone If your account has the US Phone numbers option set, this &lt;em&gt;must&lt;/em&gt; be in the form of NPA-NXX-LINE (404-555-1212). If not, we assume an International number and will simply set the field with what ever number is passed in.<br /> 
string website This is a standard string, but we &lt;em&gt;will&lt;/em&gt; verify that it looks like a valid URL
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>email_address</td><td> the email address to subscribe</td></tr> 
        <tr><td>array</td><td>merge_vars</td><td> optional merges for the email (FNAME, LNAME, etc.) (see examples below for handling &quot;blank&quot; arrays). Note that a merge field can only hold up to 255 bytes. Also, there are a few &quot;special&quot; keys:</td></tr> 
        <tr><td>string</td><td>email_type</td><td> optional email type preference for the email (html, text, or mobile defaults to html)</td></tr> 
        <tr><td>boolean</td><td>double_optin</td><td> optional flag to control whether a double opt-in confirmation message is sent, defaults to true. &lt;em&gt;Abusing this may cause your account to be suspended.&lt;/em&gt;</td></tr> 
        <tr><td>boolean</td><td>update_existing</td><td> optional flag to control whether a existing subscribers should be updated instead of throwing and error, defaults to false</td></tr> 
        <tr><td>boolean</td><td>replace_interests</td><td> optional flag to determine whether we replace the interest groups with the groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)</td></tr> 
        <tr><td>boolean</td><td>send_welcome</td><td> optional if your double_optin is false and this is true, we will send your lists Welcome Email if this subscribe succeeds - this will *not* fire if we end up updating an existing subscriber. If double_optin is true, this has no effect. defaults to false.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="ce3a41c4386ea2eb857aa15bbcf9e47e"><span class="type">(boolean)</span> <span class="name">listUnsubscribe</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">email_address</span><span class="other"> [ </span>, <span class="paratype">(boolean) </span><span class="paraname">delete_member</span>, <span class="paratype">(boolean) </span><span class="paraname">send_goodbye</span>, <span class="paratype">(boolean) </span><span class="paraname">send_notify</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Unsubscribe the given email address from the list
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>email_address</td><td> the email address to unsubscribe  OR the email &quot;id&quot; returned from listMemberInfo, Webhooks, and Campaigns</td></tr> 
        <tr><td>boolean</td><td>delete_member</td><td> flag to completely delete the member from your list instead of just unsubscribing, default to false</td></tr> 
        <tr><td>boolean</td><td>send_goodbye</td><td> flag to send the goodbye email to the email address, defaults to true</td></tr> 
        <tr><td>boolean</td><td>send_notify</td><td> flag to send the unsubscribe notification email to the address defined in the list email notification settings, defaults to true</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="9d05e2ccd7d02015f922cc0d31dca0a5"><span class="type">(boolean)</span> <span class="name">listUpdateMember</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(string) </span><span class="paraname">email_address</span>, <span class="paratype">(array) </span><span class="paraname">merge_vars</span><span class="other"> [ </span>, <span class="paratype">(string) </span><span class="paraname">email_type</span>, <span class="paratype">(boolean) </span><span class="paraname">replace_interests</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Edit the email address, merge fields, and interest groups for a list member. If you are doing a batch update on lots of users,<br /> 
consider using listBatchSubscribe() with the update_existing and possible replace_interests parameter.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>email_address</td><td> the current email address of the member to update OR the &quot;id&quot; for the member returned from listMemberInfo, Webhooks, and Campaigns</td></tr> 
        <tr><td>array</td><td>merge_vars</td><td> array of new field values to update the member with.  See merge_vars in listSubscribe() for details.</td></tr> 
        <tr><td>string</td><td>email_type</td><td> change the email type preference for the member (&quot;html&quot;, &quot;text&quot;, or &quot;mobile&quot;).  Leave blank to keep the existing preference (optional)</td></tr> 
        <tr><td>boolean</td><td>replace_interests</td><td> flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="da6d9df5be0208a78fab3192e575cd5f"><span class="type">(array)</span> <span class="name">listBatchSubscribe</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(array) </span><span class="paraname">batch</span><span class="other"> [ </span>, <span class="paratype">(boolean) </span><span class="paraname">double_optin</span>, <span class="paratype">(boolean) </span><span class="paraname">update_existing</span>, <span class="paratype">(boolean) </span><span class="paraname">replace_interests</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Subscribe a batch of email addresses to a list at once. If you are using a serialized version of the API, we strongly suggest that you<br /> 
only run this method as a POST request, and &lt;em&gt;not&lt;/em&gt; a GET request. Maximum batch sizes vary based on the amount of data in each record,<br /> 
though you should cap them at 5k - 10k records, depending on your experience. These calls are also long, so be sure you increase your timeout values.<br /> 
string code the error code<br /> 
string message the full error message<br /> 
string email the email address being processed
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>array</td><td>batch</td><td> an array of structs for each address to import with two special keys: &quot;EMAIL&quot; for the email address, and &quot;EMAIL_TYPE&quot; for the email type option (html, text, or mobile)</td></tr> 
        <tr><td>boolean</td><td>double_optin</td><td> flag to control whether to send an opt-in confirmation email - defaults to true</td></tr> 
        <tr><td>boolean</td><td>update_existing</td><td> flag to control whether to update members that are already subscribed to the list or to return an error, defaults to false (return error)</td></tr> 
        <tr><td>boolean</td><td>replace_interests</td><td> flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="f9c9113b32e116696a08396bbc60ba29"><span class="type">(array)</span> <span class="name">listBatchUnsubscribe</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(array) </span><span class="paraname">emails</span><span class="other"> [ </span>, <span class="paratype">(boolean) </span><span class="paraname">delete_member</span>, <span class="paratype">(boolean) </span><span class="paraname">send_goodbye</span>, <span class="paratype">(boolean) </span><span class="paraname">send_notify</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Unsubscribe a batch of email addresses to a list
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>array</td><td>emails</td><td> array of email addresses to unsubscribe</td></tr> 
        <tr><td>boolean</td><td>delete_member</td><td> flag to completely delete the member from your list instead of just unsubscribing, default to false</td></tr> 
        <tr><td>boolean</td><td>send_goodbye</td><td> flag to send the goodbye email to the email addresses, defaults to true</td></tr> 
        <tr><td>boolean</td><td>send_notify</td><td> flag to send the unsubscribe notification email to the address defined in the list email notification settings, defaults to false</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="787e0cef98fe1644bfe4f4463a85d7d9"><span class="type">(array)</span> <span class="name">listMembers</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other"> [ </span>, <span class="paratype">(string) </span><span class="paraname">status</span>, <span class="paratype">(string) </span><span class="paraname">since</span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get all of the list members for a list that are of a particular status. Are you trying to get a dump including lots of merge<br /> 
data or specific members of a list? If so, checkout the &lt;a href=&quot;/api/export&quot;&gt;Export API&lt;/a&gt;<br /> 
string email Member email address<br /> 
date timestamp timestamp of their associated status date (subscribed, unsubscribed, cleaned, or updated) in GMT<br /> 
string reason For unsubscribes only - the reason collected for the unsubscribe. If populated, one of 'NORMAL','NOSIGNUP','INAPPROPRIATE','SPAM','OTHER'<br /> 
string reason_text For unsubscribes only - if the reason is OTHER, the text entered.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>string</td><td>status</td><td> the status to get members for - one of(subscribed, unsubscribed, &lt;a target=&quot;_blank&quot; href=&quot;http://eepurl.com/dwk1&quot;&gt;cleaned&lt;/a&gt;, updated), defaults to subscribed</td></tr> 
        <tr><td>string</td><td>since</td><td> optional pull all members whose status (subscribed/unsubscribed/cleaned) has changed or whose profile (updated) has changed since this date/time (in GMT) - format is YYYY-MM-DD HH:mm:ss (24hr)</td></tr> 
        <tr><td>integer</td><td>start</td><td> optional for large data sets, the page number to start at - defaults to 1st page of data (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 15000</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="de057baf53b9276a27586e519befbbb8"><span class="type">(array)</span> <span class="name">listMemberInfo</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(array) </span><span class="paraname">email_address</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get all the information for particular members of a list<br /> 
string id The unique id for this email address on an account<br /> 
string email The email address associated with this record<br /> 
string email_type The type of emails this customer asked to get: html, text, or mobile<br /> 
array merges An associative array of all the merge tags and the data for those tags for this email address. &lt;em&gt;Note&lt;/em&gt;: Interest Groups are returned as comma delimited strings - if a group name contains a comma, it will be escaped with a backslash. ie, &quot;,&quot; =&amp;gt; &quot;\,&quot;. Groupings will be returned with their &quot;id&quot; and &quot;name&quot; as well as a &quot;groups&quot; field formatted just like Interest Groups<br /> 
string status The subscription status for this email address, either pending, subscribed, unsubscribed, or cleaned<br /> 
string ip_opt IP Address this address opted in from.<br /> 
string ip_signup IP Address this address signed up from.<br /> 
int member_rating the rating of the subscriber. This will be 1 - 5 as described &lt;a href=&quot;http://eepurl.com/f-2P&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;<br /> 
string campaign_id If the user is unsubscribed and they unsubscribed from a specific campaign, that campaign_id will be listed, otherwise this is not returned.<br /> 
array lists An associative array of the other lists this member belongs to - the key is the list id and the value is their status in that list.<br /> 
date timestamp The time this email address was added to the list<br /> 
date info_changed The last time this record was changed. If the record is old enough, this may be blank.<br /> 
int web_id The Member id used in our web app, allows you to create a link directly to it<br /> 
array geo the geographic information if we have it. includes keys for 'latitude', 'longitude', 'gmtoff' (GMT offset), 'dstoff' (GMT offset during daylight savings), 'timezone', 'cc' (2 digit ISO-3166 country code), 'region' (generally state, province, or similar)<br /> 
array clients the client we've tracked the address as using the most - includes client 'name' and 'icon_url'<br /> 
array static_segments the 'id', 'name', and date 'added' for any static segment this member is in
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>array</td><td>email_address</td><td> an array of up to 50 email addresses to get information for OR the &quot;id&quot;(s) for the member returned from listMembers, Webhooks, and Campaigns. For backwards compatibility, if a string is passed, it will be treated as an array with a single element (will not work with XML-RPC).</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="eb18ffb232502ebc238e184fa8c27b46"><span class="type">(array)</span> <span class="name">listMemberActivity</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span>, <span class="paratype">(array) </span><span class="paraname">email_address</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get the most recent 100 activities for particular list members (open, click, bounce, unsub, abuse, sent to)<br /> 
string action The action name, one of: open, click, bounce, unsub, abuse, sent<br /> 
string timestamp The date/time of the action<br /> 
string url For click actions, the url clicked, otherwise this is empty<br /> 
string bounce_type For bounce actions, the bounce type, otherwise this is empty<br /> 
string campaign_id The campaign id the action was related to, if it exists - otherwise empty (ie, direct unsub from list)
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
        <tr><td>array</td><td>email_address</td><td> an array of up to 50 email addresses to get information for OR the &quot;id&quot;(s) for the member returned from listMembers, Webhooks, and Campaigns.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="de9c31c0adc7b2ad114ca2de44aedc75"><span class="type">(array)</span> <span class="name">listAbuseReports</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span>, <span class="paratype">(string) </span><span class="paraname">since</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Get all email addresses that complained about a given campaign<br /> 
string date date/time the abuse report was received and processed<br /> 
string email the email address that reported abuse<br /> 
string campaign_id the unique id for the campaign that report was made against<br /> 
string type an internal type generally specifying the orginating mail provider - may not be useful outside of filling report views
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to pull abuse reports for (can be gathered using lists())</td></tr> 
        <tr><td>integer</td><td>start</td><td> optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td> optional for large data sets, the number of results to return - defaults to 500, upper limit set at 1000</td></tr> 
        <tr><td>string</td><td>since</td><td> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="8dd350df71d0b3d3e43dfabbee7a4b19"><span class="type">(int)</span> <span class="name">listGrowthHistory</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Access the Growth History by Month for a given list.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="b2007b2f6dafc8848d32ac5273836c61"><span class="type">(int)</span> <span class="name">listActivity</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Access up to the previous 180 days of daily detailed aggregated activity stats for a given list
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="9f53df1593536f9b945e29054250e908"><span class="type">(double)</span> <span class="name">listLocations</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the locations (countries) that the list's subscribers have been tagged to based on geocoding their IP address
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="bd03f2645239dda6fe326e75ba7af258"><span class="type">(array)</span> <span class="name">listClients</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the clients that the list's subscribers have been tagged as being used based on user agents seen. Made possible by &lt;a href=&quot;http://user-agent-string.info&quot; target=&quot;_blank&quot;&gt;user-agent-string.info&lt;/a&gt;<br /> 
double penetration the percent of desktop clients in use<br /> 
array clients a record containing the 'client', an 'icon' image url, the 'percent' using the client, and the total 'members' represented<br /> 
double penetration the percent of mobile clients in use<br /> 
array clients a record containing the 'client', an 'icon' image url, the 'percent' using the client, and the total 'members' represented
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>id</td><td> the list id to connect to. Get by calling lists()</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="fed36e93a0509e20f2dc96cbbd85b678"><span class="type">(bool)</span> <span class="name">templates</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other"> [ </span>, <span class="paratype">(array) </span><span class="paraname">types</span>, <span class="paratype">(string) </span><span class="paraname">category</span>, <span class="paratype">(array) </span><span class="paraname">inactives</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve various templates available in the system, allowing some thing similar to our template gallery to be created.<br /> 
boolean user    Customer template for this user account. Defaults to true.<br /> 
boolean gallery Templates from our Gallery. Note that some templates that require extra configuration are withheld. (eg, the Etsy template). Defaults to false.<br /> 
boolean base    Our &quot;start from scratch&quot; extremely basic templates<br /> 
boolean include user templates are not deleted, only set inactive. defaults to false.<br /> 
boolean only    only include inactive templates. defaults to false.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>array</td><td>types</td><td> optional the types of templates to return</td></tr> 
        <tr><td>string</td><td>category</td><td> optional for Gallery templates only, limit to a specific template category</td></tr> 
        <tr><td>array</td><td>inactives</td><td> optional options to control how inactive templates are returned, if at all</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="810d2618ba63da2e91ef6c508006d355"><span class="type">(string)</span> <span class="name">templateInfo</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(integer) </span><span class="paraname">tid</span><span class="other"> [ </span>, <span class="paratype">(string) </span><span class="paraname">type</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Pull details for a specific template to help support editing
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>integer</td><td>tid</td><td> the template id - get from templates()</td></tr> 
        <tr><td>string</td><td>type</td><td> the template type to load - one of 'user', 'gallery', 'base'</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="6dcd80044579149f9166982a5f82ee99"><span class="type">(int)</span> <span class="name">templateAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">name</span>, <span class="paratype">(string) </span><span class="paraname">html</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Create a new user template, &lt;strong&gt;NOT&lt;/strong&gt; campaign content. These templates can then be applied while creating campaigns.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>name</td><td> the name for the template - names must be unique and a max of 50 bytes</td></tr> 
        <tr><td>string</td><td>html</td><td> a string specifying the entire template to be created. This is &lt;strong&gt;NOT&lt;/strong&gt; campaign content. They are intended to utilize our &lt;a href=&quot;http://www.mailchimp.com/resources/email-template-language/&quot; target=&quot;_blank&quot;&gt;template language&lt;/a&gt;.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="70841c97164bbed481d02325a89b46f5"><span class="type">(boolean)</span> <span class="name">templateUpdate</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(integer) </span><span class="paraname">id</span>, <span class="paratype">(array) </span><span class="paraname">values</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Replace the content of a user template, &lt;strong&gt;NOT&lt;/strong&gt; campaign content.<br /> 
string name optional the name for the template - names must be unique and a max of 50 bytes<br /> 
string html optional a string specifying the entire template to be created. This is &lt;strong&gt;NOT&lt;/strong&gt; campaign content. They are intended to utilize our &lt;a href=&quot;http://www.mailchimp.com/resources/email-template-language/&quot; target=&quot;_blank&quot;&gt;template language&lt;/a&gt;.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>integer</td><td>id</td><td> the id of the user template to update</td></tr> 
        <tr><td>array</td><td>values</td><td>s the values to updates - while both are optional, at least one should be provided. Both can be updated at the same time.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="9533e3291d838c7a089c15cd6555f4a3"><span class="type">(boolean)</span> <span class="name">templateDel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(integer) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Delete (deactivate) a user template
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>integer</td><td>id</td><td> the id of the user template to delete</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="08389cacfc5a3816e77233706a170fd8"><span class="type">(boolean)</span> <span class="name">templateUndel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(integer) </span><span class="paraname">id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Undelete (reactivate) a user template
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>integer</td><td>id</td><td> the id of the user template to reactivate</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="8c5cec1b13fccafe7c16c55d603a8fd6"><span class="type">(array)</span> <span class="name">getAccountDetails</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve lots of account information including payments made, plan info, some account stats, installed modules,<br /> 
contact info, and more. No private information like Credit Card numbers is available.<br /> 
string fname First Name<br /> 
string lname Last Name<br /> 
string email Email Address<br /> 
string company Company Name<br /> 
string address1 Address Line 1<br /> 
string address2 Address Line 2<br /> 
string city City<br /> 
string state State or Province<br /> 
string zip Zip or Postal Code<br /> 
string country Country name<br /> 
string url Website URL<br /> 
string phone Phone number<br /> 
string fax Fax number<br /> 
string name The module name<br /> 
string added The date the module was added<br /> 
int order_id The order id<br /> 
string type The order type - either &quot;monthly&quot; or &quot;credits&quot;<br /> 
double amount The order amount<br /> 
string date The order date<br /> 
double credits_used The total credits used<br /> 
int referrals_this_month the total number of referrals this month<br /> 
string notify_on whether or not we notify the user when rewards are earned<br /> 
string notify_email the email address address used for rewards notifications<br /> 
array credits Email credits earned &quot;this_month&quot;, &quot;total_earned&quot;, and &quot;remaining&quot;<br /> 
array inspections Inbox Inspections earned &quot;this_month&quot;, &quot;total_earned&quot;, and &quot;remaining&quot;<br /> 
array referrals All referrals, including &quot;name&quot;, &quot;email&quot;, &quot;signup_date&quot;, and &quot;type&quot;<br /> 
array applied Applied rewards, including &quot;value&quot;, &quot;date&quot;, &quot;order_id&quot;, and &quot;order_desc&quot;
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="1a1d2f3e6fdc36d715b5d3efee663c65"><span class="type">(string)</span> <span class="name">generateText</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">type</span>, <span class="paratype">(mixed) </span><span class="paraname">content</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Have HTML content auto-converted to a text-only format. You can send: plain HTML, an array of Template content, an existing Campaign Id, or an existing Template Id. Note that this will &lt;b&gt;not&lt;/b&gt; save anything to or update any of your lists, campaigns, or templates.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>type</td><td> The type of content to parse. Must be one of: &quot;html&quot;, &quot;template&quot;, &quot;url&quot;, &quot;cid&quot; (Campaign Id), or &quot;tid&quot; (Template Id)</td></tr> 
        <tr><td>mixed</td><td>content</td><td> The content to use. For &quot;html&quot; expects  a single string value, &quot;template&quot; expects an array like you send to campaignCreate, &quot;url&quot; expects a valid &amp; public URL to pull from, &quot;cid&quot; expects a valid Campaign Id, and &quot;tid&quot; expects a valid Template Id on your account.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="27aad637d87e5af2f5dd3b29845b4295"><span class="type">(string)</span> <span class="name">inlineCss</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">html</span><span class="other"> [ </span>, <span class="paratype">(boolean) </span><span class="paraname">strip_css</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Send your HTML content to have the CSS inlined and optionally remove the original styles.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>html</td><td> Your HTML content</td></tr> 
        <tr><td>boolean</td><td>strip_css</td><td> optional Whether you want the CSS &amp;lt;style&amp;gt; tags stripped from the returned document. Defaults to false.</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="7cb31435da1bef1e450754ff725b0fdd"><span class="type">(string)</span> <span class="name">folders</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other"> [ </span>, <span class="paratype">(string) </span><span class="paraname">type</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        List all the folders for a user account
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>type</td><td> optional the type of folders to return - either &quot;campaign&quot; or &quot;autoresponder&quot;. Defaults to &quot;campaign&quot;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="db969989b2eb0acd1b6cca8bad8e06fe"><span class="type">(int)</span> <span class="name">folderAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">name</span><span class="other"> [ </span>, <span class="paratype">(string) </span><span class="paraname">type</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Add a new folder to file campaigns or autoresponders in
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>name</td><td> a unique name for a folder (max 100 bytes)</td></tr> 
        <tr><td>string</td><td>type</td><td> optional the type of folder to create - either &quot;campaign&quot; or &quot;autoresponder&quot;. Defaults to &quot;campaign&quot;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="4b1fa0f8b6a7c42bd4caf1ff24f388ba"><span class="type">(bool)</span> <span class="name">folderUpdate</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(integer) </span><span class="paraname">fid</span>, <span class="paratype">(string) </span><span class="paraname">name</span><span class="other"> [ </span>, <span class="paratype">(string) </span><span class="paraname">type</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Update the name of a folder for campaigns or autoresponders
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>integer</td><td>fid</td><td> the folder id to update - retrieve from folders()</td></tr> 
        <tr><td>string</td><td>name</td><td> a new, unique name for the folder (max 100 bytes)</td></tr> 
        <tr><td>string</td><td>type</td><td> optional the type of folder to create - either &quot;campaign&quot; or &quot;autoresponder&quot;. Defaults to &quot;campaign&quot;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="cb797588d56c29e45e42d0e51253a74a"><span class="type">(bool)</span> <span class="name">folderDel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(integer) </span><span class="paraname">fid</span><span class="other"> [ </span>, <span class="paratype">(string) </span><span class="paraname">type</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Delete a campaign or autoresponder folder. Note that this will simply make campaigns in the folder appear unfiled, they are not removed.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>integer</td><td>fid</td><td> the folder id to update - retrieve from folders()</td></tr> 
        <tr><td>string</td><td>type</td><td> optional the type of folder to create - either &quot;campaign&quot; or &quot;autoresponder&quot;. Defaults to &quot;campaign&quot;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="462fdd4f3a48e9e9dc84b87ded25a982"><span class="type">(array)</span> <span class="name">ecommOrders</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other"> [ </span>, <span class="paratype">(integer) </span><span class="paraname">start</span>, <span class="paratype">(integer) </span><span class="paraname">limit</span>, <span class="paratype">(string) </span><span class="paraname">since</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve the Ecommerce Orders for an account<br /> 
string store_id the store id generated by the plugin used to uniquely identify a store<br /> 
string store_name the store name collected by the plugin - often the domain name<br /> 
string order_id the internal order id the store tracked this order by<br /> 
string email  the email address that received this campaign and is associated with this order<br /> 
double order_total the order total<br /> 
double tax_total the total tax for the order (if collected)<br /> 
double ship_total the shipping total for the order (if collected)<br /> 
string order_date the date the order was tracked - from the store if possible, otherwise the GMT time we recieved it<br /> 
array lines containing detail of the order - product, category, quantity, item cost
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>integer</td><td>start</td><td> optional for large data sets, the page number to start at - defaults to 1st page of data  (page 0)</td></tr> 
        <tr><td>integer</td><td>limit</td><td> optional for large data sets, the number of results to return - defaults to 100, upper limit set at 500</td></tr> 
        <tr><td>string</td><td>since</td><td> optional pull only messages since this time - use YYYY-MM-DD HH:II:SS format in &lt;strong&gt;GMT&lt;/strong&gt;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="ec9b3ca3f0767631804aedfe12c39751"><span class="type">(bool)</span> <span class="name">ecommOrderAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(array) </span><span class="paraname">order</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Import Ecommerce Order Information to be used for Segmentation. This will generally be used by ecommerce package plugins<br /> 
&lt;a href=&quot;/plugins/ecomm360.phtml&quot;&gt;that we provide&lt;/a&gt; or by 3rd part system developers.<br /> 
string id the Order Id<br /> 
string email_id optional (kind of) the Email Id of the subscriber we should attach this order to (see the &quot;mc_eid&quot; query string variable a campaign passes) - either this or &lt;strong&gt;email&lt;/strong&gt; is required. If both are provided, email_id takes precedence<br /> 
string email optional (kind of) the Email Address we should attach this order to - either this or &lt;strong&gt;email_id&lt;/strong&gt; is required. If both are provided, email_id takes precedence<br /> 
double total The Order Total (ie, the full amount the customer ends up paying)<br /> 
string order_date optional the date of the order - if this is not provided, we will default the date to now<br /> 
double shipping optional the total paid for Shipping Fees<br /> 
double tax optional the total tax paid<br /> 
string store_id a unique id for the store sending the order in (20 bytes max)<br /> 
string store_name optional a &quot;nice&quot; name for the store - typically the base web address (ie, &quot;store.mailchimp.com&quot;). We will automatically update this if it changes (based on store_id)<br /> 
string plugin_id the MailChimp assigned Plugin Id. Get yours by &lt;a href=&quot;/api/register.php&quot;&gt;registering here&lt;/a&gt;<br /> 
string campaign_id optional the Campaign Id to track this order with (see the &quot;mc_cid&quot; query string variable a campaign passes)<br /> 
array items the individual line items for an order using these keys:<br /> 
&lt;div style=&quot;padding-left:30px&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan=*&gt;<br /> 
int line_num optional the line number of the item on the order. We will generate these if they are not passed<br /> 
int product_id the store's internal Id for the product. Lines that do no contain this will be skipped<br /> 
string product_name the product name for the product_id associated with this item. We will auto update these as they change (based on product_id)<br /> 
int category_id the store's internal Id for the (main) category associated with this product. Our testing has found this to be a &quot;best guess&quot; scenario<br /> 
string category_name the category name for the category_id this product is in. Our testing has found this to be a &quot;best guess&quot; scenario. Our plugins walk the category heirarchy up and send &quot;Root - SubCat1 - SubCat4&quot;, etc.<br /> 
double qty the quantity of the item ordered<br /> 
double cost the cost of a single item (ie, not the extended cost of the line)<br /> 
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>array</td><td>order</td><td> an array of information pertaining to the order that has completed. Use the following keys:</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="52b318b9541129348317013a51eea6c9"><span class="type">(bool)</span> <span class="name">ecommOrderDel</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">store_id</span>, <span class="paratype">(string) </span><span class="paraname">order_id</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Delete Ecommerce Order Information used for segmentation. This will generally be used by ecommerce package plugins<br /> 
&lt;a href=&quot;/plugins/ecomm360.phtml&quot;&gt;that we provide&lt;/a&gt; or by 3rd part system developers.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>store_id</td><td> the store id the order belongs to</td></tr> 
        <tr><td>string</td><td>order_id</td><td> the order id (generated by the store) to delete</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="dd323d460e9b11c8dc7b4110f30d3ab9"><span class="type">(array)</span> <span class="name">listsForEmail</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">email_address</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve all List Ids a member is subscribed to.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>email_address</td><td> the email address to check OR the email &quot;id&quot; returned from listMemberInfo, Webhooks, and Campaigns</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="b822c114cfa0db382ea556e3fd97ec53"><span class="type">(array)</span> <span class="name">campaignsForEmail</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span>, <span class="paratype">(string) </span><span class="paraname">email_address</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve all Campaigns Ids a member was sent
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
        <tr><td>string</td><td>email_address</td><td> the email address to unsubscribe  OR the email &quot;id&quot; returned from listMemberInfo, Webhooks, and Campaigns</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="a7d2bcbfe90a2e9907dfe36607d7a7e2"><span class="type">(string)</span> <span class="name">chimpChatter</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Return the current Chimp Chatter messages for an account.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="63142ae2c44965e6169cdcc8eef75941"><span class="type">(string)</span> <span class="name">apikeys</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">username</span>, <span class="paratype">(string) </span><span class="paraname">password</span>, <span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other"> [ </span>, <span class="paratype">(boolean) </span><span class="paraname">expired</span><span class="other"> ] </span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Retrieve a list of all MailChimp API Keys for this User
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>username</td><td> Your MailChimp user name</td></tr> 
        <tr><td>string</td><td>password</td><td> Your MailChimp password</td></tr> 
        <tr><td>string</td><td>apikey</td><td> Any valid API Key for your account</td></tr> 
        <tr><td>boolean</td><td>expired</td><td> optional - whether or not to include expired keys, defaults to false</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="f742c763d6cff36f1ecf3bd5d8b6d268"><span class="type">(string)</span> <span class="name">apikeyAdd</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">username</span>, <span class="paratype">(string) </span><span class="paraname">password</span>, <span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Add an API Key to your account. We will generate a new key for you and return it.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>username</td><td> Your MailChimp user name</td></tr> 
        <tr><td>string</td><td>password</td><td> Your MailChimp password</td></tr> 
        <tr><td>string</td><td>apikey</td><td> Any valid API Key</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="d89fd76a2121907c2dc02123f0dd0397"><span class="type">(boolean)</span> <span class="name">apikeyExpire</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">username</span>, <span class="paratype">(string) </span><span class="paraname">password</span>, <span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Expire a Specific API Key. Note that if you expire all of your keys, just visit &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;<br /> 
to create a new one. If you are trying to shut off access to your account for an old developer, change your<br /> 
MailChimp password, then expire all of the keys they had access to. Note that this takes effect immediately, so make<br /> 
sure you replace the keys in any working application before expiring them! Consider yourself warned...
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>username</td><td> Your MailChimp user name</td></tr> 
        <tr><td>string</td><td>password</td><td> Your MailChimp password</td></tr> 
        <tr><td>string</td><td>apikey</td><td> Any valid API Key that you wish to expire</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="d56b699830e77ba53855679cb1d252da"><span class="type">(string)</span> <span class="name">login</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">username</span>, <span class="paratype">(string) </span><span class="paraname">password</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        &lt;strong&gt;DEPRECATED:&lt;/strong&gt; Log into the MailChimp API and return an API Key. There is &lt;strong&gt;no&lt;/strong&gt; reason to call this in a real app,<br /> 
just hard code your API Key from this or &lt;a href=&quot;http://admin.mailchimp.com/account/api/&quot;&gt;http://admin.mailchimp.com/account/api/&lt;/a&gt;.<br /> 
By default the oldest one is returned. If you've never logged into the API before, this will create your first API Key.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>username</td><td> Your MailChimp user name</td></tr> 
        <tr><td>string</td><td>password</td><td> Your MailChimp password</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="df911f0151f9ef021d410b4be5060972"><span class="type">(string)</span> <span class="name">ping</span><span class="other">(</span><span class="paratype">(string) </span><span class="paraname">apikey</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        &quot;Ping&quot; the MailChimp API - a simple method you can call that will return a constant value as long as everything is good. Note<br /> 
than unlike most all of our methods, we don't throw an Exception if we are having issues. You will simply receive a different<br /> 
string back that will explain our view on what is going on.
      </div> 
      <p><b>Parameters : </b></p> 
      <table> 
        <tr><td><b>Type</b></td><td><b>Name</b></td><td><b>Documentation</b></td></tr> 
        <tr><td>string</td><td>apikey</td><td> a valid API Key for your user account. Get by visiting &lt;a href=&quot;http://admin.mailchimp.com/account/api&quot; target=&quot;_blank&quot;&gt;your API dashboard&lt;/a&gt;</td></tr> 
      </table> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
    <div class="bloc"> 
      <h3><a name="55b6b47bfeced14cb03aac5ee10dd35e"><span class="type">(mixed)</span> <span class="name">callMethod</span><span class="other">(</span><span class="other">)</span></a></h3> 
      <p><b>Description :</b></p> 
      <div class="description"> 
        Internal function - proxy method for certain XML-RPC calls | DO NOT CALL
      </div> 
      <p>(return to <a href="#index">index</a>)</p> 
    </div> 
  </body> 
</html> 