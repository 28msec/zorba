// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __com_bluecast_xml_XMLInputReader__
#define __com_bluecast_xml_XMLInputReader__

#pragma interface

#include <java/io/Reader.h>
#include <gcj/array.h>

extern "Java"
{
  namespace com
  {
    namespace bluecast
    {
      namespace xml
      {
        class XMLInputReader;
        class XMLDeclParser;
      }
    }
  }
}

class com::bluecast::xml::XMLInputReader : public ::java::io::Reader
{
public:
  XMLInputReader ();
public:  // actually protected
  virtual void resetInput ();
  virtual jint parseXMLDeclaration (jcharArray, jint, jint);
public:
  virtual ::java::lang::String *getXMLVersion () { return xmlVersion; }
  virtual jboolean isXMLStandalone () { return xmlStandalone; }
  virtual jboolean isXMLStandaloneDeclared () { return xmlStandaloneDeclared; }
  virtual ::java::lang::String *getXMLDeclaredEncoding () { return xmlDeclaredEncoding; }
private:
  ::java::lang::String * __attribute__((aligned(__alignof__( ::java::io::Reader )))) xmlVersion;
  jboolean xmlStandaloneDeclared;
  jboolean xmlStandalone;
  ::java::lang::String *xmlDeclaredEncoding;
  ::com::bluecast::xml::XMLDeclParser *parser;
public:

  static ::java::lang::Class class$;
};

#endif /* __com_bluecast_xml_XMLInputReader__ */
