// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __com_bluecast_xml_Piccolo__
#define __com_bluecast_xml_Piccolo__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace com
  {
    namespace bluecast
    {
      namespace xml
      {
        class Piccolo;
        class Piccolo$StartLocator;
        class DocumentEntity;
        class PiccoloLexer;
        class ElementDefinition;
      }
    }
  }
  namespace org
  {
    namespace xml
    {
      namespace sax
      {
        class Locator;
        class EntityResolver;
        class InputSource;
        namespace ext
        {
          class DeclHandler;
          class LexicalHandler;
        }
        class ContentHandler;
        class ErrorHandler;
        class DTDHandler;
        class DocumentHandler;
      }
    }
  }
}

class com::bluecast::xml::Piccolo : public ::java::lang::Object
{
public: // actually package-private
  virtual void debug (::java::lang::String *);
  void state_push (jint);
  jint state_pop ();
  void state_drop (jint);
  jint state_peek (jint);
  jboolean init_stacks ();
  virtual void dump_stacks (jint);
  void val_init ();
  void val_push (::java::lang::String *);
  ::java::lang::String *val_pop ();
  void val_drop (jint);
  ::java::lang::String *val_peek (jint);
public:
  Piccolo ();
  Piccolo (::com::bluecast::xml::Piccolo *);
private:
  void reset ();
  void validateParseState ();
public:
  virtual void setDebug (jboolean);
  virtual void parse (::org::xml::sax::InputSource *);
  virtual void parse (::java::lang::String *);
  virtual void setDocumentHandler (::org::xml::sax::DocumentHandler *);
  virtual void setDTDHandler (::org::xml::sax::DTDHandler *);
  virtual void setEntityResolver (::org::xml::sax::EntityResolver *);
  virtual void setErrorHandler (::org::xml::sax::ErrorHandler *);
  virtual void setLocale (::java::util::Locale *);
  virtual jint getColumnNumber ();
  virtual jint getLineNumber ();
  virtual ::java::lang::String *getPublicId ();
  virtual ::java::lang::String *getSystemId ();
  virtual ::org::xml::sax::Locator *getStartLocator ();
  virtual ::java::lang::String *getVersion ();
  virtual ::java::lang::String *getEncoding ();
  virtual ::org::xml::sax::ContentHandler *getContentHandler () { return contentHandler; }
  virtual void setContentHandler (::org::xml::sax::ContentHandler *);
  virtual ::org::xml::sax::DTDHandler *getDTDHandler () { return dtdHandler; }
  virtual ::org::xml::sax::EntityResolver *getEntityResolver ();
  virtual ::org::xml::sax::ErrorHandler *getErrorHandler () { return errorHandler; }
  virtual jboolean getFeature (::java::lang::String *);
  virtual void setFeature (::java::lang::String *, jboolean);
  virtual ::java::lang::Object *getProperty (::java::lang::String *);
  virtual void setProperty (::java::lang::String *, ::java::lang::Object *);
public: // actually package-private
  virtual void reportCdata ();
  virtual void reportCdata (jchar);
  virtual void reportCdata (jcharArray, jint, jint);
  virtual void reportWhitespace ();
  virtual void reportWhitespace (jcharArray, jint, jint);
  virtual void reportError (::java::lang::String *);
  virtual void reportFatalError (::java::lang::String *);
  virtual void reportFatalError (::java::lang::String *, ::java::lang::Exception *);
  virtual void reportSkippedEntity (::java::lang::String *);
  virtual void reportPI (::java::lang::String *, ::java::lang::String *);
  virtual void reportUnparsedEntityDecl (::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::lang::String *);
  virtual void reportNotationDecl (::java::lang::String *, ::java::lang::String *, ::java::lang::String *);
  virtual void reportStartTag (::java::lang::String *, ::java::lang::String *, ::java::lang::String *);
  virtual void reportEndTag (::java::lang::String *, ::java::lang::String *, ::java::lang::String *);
  virtual void reportStartPrefixMapping (::java::lang::String *, ::java::lang::String *);
  virtual void reportEndPrefixMapping (::java::lang::String *);
  virtual void reportStartDocument ();
  virtual void reportEndDocument ();
  virtual void reportStartDTD (::java::lang::String *, ::java::lang::String *, ::java::lang::String *);
  virtual void reportEndDTD ();
  virtual void reportStartEntity (::java::lang::String *);
  virtual void reportEndEntity (::java::lang::String *);
  virtual void reportStartCdata ();
  virtual void reportEndCdata ();
  virtual void reportComment (jcharArray, jint, jint);
private:
  void addAttributeDefinition (::java::lang::String *, jint, jint, ::java::lang::String *);
  void addPrefixedAttributeDefinition (::java::lang::String *, jint, jint, ::java::lang::String *);
  void saveAttributeDefinition (::java::lang::String *, ::java::lang::String *, ::java::lang::String *, jint, jint, ::java::lang::String *);
  ::java::lang::String *resolveSystemID (::java::lang::String *);
  jint yylex ();
public: // actually package-private
  virtual void yyerror (::java::lang::String *);
  virtual void yylexdebug (jint, jint);
  virtual jint yyparse ();
  jboolean __attribute__((aligned(__alignof__( ::java::lang::Object ))))  yydebug;
  jint yynerrs;
  jint yyerrflag;
  jint yychar;
  static const jint YYSTACKSIZE = 500L;
  jintArray statestk;
  jint stateptr;
  jint stateptrmax;
  jint statemax;
  ::java::lang::String *yytext;
  ::java::lang::String *yyval;
  ::java::lang::String *yylval;
  JArray< ::java::lang::String *> *valstk;
  jint valptr;
public:
  static const jint CDATA = 257L;
  static const jint TAG_END = 258L;
  static const jint PI = 259L;
  static const jint NAME = 260L;
  static const jint STRING = 261L;
  static const jint EQ = 262L;
  static const jint OPEN_TAG = 263L;
  static const jint CLOSE_TAG = 264L;
  static const jint EMPTY_TAG = 265L;
  static const jint WHITESPACE = 266L;
  static const jint DTD_START = 267L;
  static const jint DTD_START_SKIPEXTERNAL = 268L;
  static const jint SYSTEM = 269L;
  static const jint PUBLIC = 270L;
  static const jint REQUIRED = 271L;
  static const jint IMPLIED = 272L;
  static const jint FIXED = 273L;
  static const jint LPAREN = 274L;
  static const jint RPAREN = 275L;
  static const jint LBRACKET = 276L;
  static const jint PIPE = 277L;
  static const jint ENTITY_DECL_START = 278L;
  static const jint ATTLIST_START = 279L;
  static const jint NOTATION_START = 280L;
  static const jint RBRACKET_END = 281L;
  static const jint DOUBLE_RBRACKET_END = 282L;
  static const jint PERCENT = 283L;
  static const jint ENUMERATION = 284L;
  static const jint NOTATION = 285L;
  static const jint ID = 286L;
  static const jint IDREF = 287L;
  static const jint IDREFS = 288L;
  static const jint ENTITY = 289L;
  static const jint ENTITIES = 290L;
  static const jint NMTOKEN = 291L;
  static const jint NMTOKENS = 292L;
  static const jint ENTITY_REF = 293L;
  static const jint ENTITY_END = 294L;
  static const jint INTERNAL_ENTITY_REF = 295L;
  static const jint EXTERNAL_ENTITY_REF = 296L;
  static const jint SKIPPED_ENTITY_REF = 297L;
  static const jint PREFIXED_NAME = 298L;
  static const jint UNPREFIXED_NAME = 299L;
  static const jint NDATA = 300L;
  static const jint COMMENT = 301L;
  static const jint CONDITIONAL_START = 302L;
  static const jint IGNORED_CONDITIONAL_START = 303L;
  static const jint INCLUDE = 304L;
  static const jint IGNORE = 305L;
  static const jint MODIFIER = 306L;
  static const jint PCDATA = 307L;
  static const jint ELEMENT_DECL_START = 308L;
  static const jint EMPTY = 309L;
  static const jint ANY = 310L;
  static const jint STAR = 311L;
  static const jint COMMA = 312L;
  static const jint QUESTION = 313L;
  static const jint PLUS = 314L;
  static const jint XML_DOC_DECL = 315L;
  static const jint XML_TEXT_DECL = 316L;
  static const jint XML_DOC_OR_TEXT_DECL = 317L;
  static const jint YYERRCODE = 256L;
public: // actually package-private
  static jshortArray yylhs;
  static jshortArray yylen;
  static jshortArray yydefred;
  static jshortArray yydgoto;
  static jshortArray yysindex;
  static jshortArray yyrindex;
  static jshortArray yygindex;
  static const jint YYTABLESIZE = 508L;
  static jshortArray yytable;
  static jshortArray yycheck;
  static const jint YYFINAL = 3L;
  static const jint YYMAXTOKEN = 317L;
  static JArray< ::java::lang::String *> *yyname;
  static JArray< ::java::lang::String *> *yyrule;
  ::org::xml::sax::DocumentHandler *documentHandler;
  ::org::xml::sax::DTDHandler *dtdHandler;
  ::org::xml::sax::ErrorHandler *errorHandler;
  ::org::xml::sax::ContentHandler *contentHandler;
  jint saxVersion;
  jint attributeType;
  ::java::lang::StringBuffer *modelBuffer;
  ::com::bluecast::xml::ElementDefinition *elementDefinition;
  ::java::lang::String *pubID;
  ::java::lang::String *sysID;
  ::java::lang::String *dtdName;
  ::java::lang::String *dtdPubID;
  ::java::lang::String *dtdSysID;
  ::com::bluecast::xml::PiccoloLexer *lexer;
  ::com::bluecast::xml::DocumentEntity *docEntity;
  ::org::xml::sax::ext::LexicalHandler *lexHandler;
  ::org::xml::sax::ext::DeclHandler *declHandler;
  jboolean parsingInProgress;
private:
  ::com::bluecast::xml::Piccolo$StartLocator *startLocator;
public: // actually package-private
  jboolean fNamespaces;
  jboolean fNamespacePrefixes;
  jboolean fResolveDTDURIs;
  jboolean fExternalGeneralEntities;
  jboolean fExternalParameterEntities;
  jboolean fLexicalParameterEntities;
private:
  jcharArray oneCharBuffer;
public: // actually package-private
  jint yyn;
  jint yym;
  jint yystate;
  ::java::lang::String *yys;

  friend class com_bluecast_xml_Piccolo$1;
  friend class com_bluecast_xml_Piccolo$StartLocator;
public:

  static ::java::lang::Class class$;
};

#endif /* __com_bluecast_xml_Piccolo__ */
