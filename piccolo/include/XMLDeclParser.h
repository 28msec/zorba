// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __com_bluecast_xml_XMLDeclParser__
#define __com_bluecast_xml_XMLDeclParser__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace com
  {
    namespace bluecast
    {
      namespace xml
      {
        class XMLDeclParser;
      }
    }
  }
}

class com::bluecast::xml::XMLDeclParser : public ::java::lang::Object
{
public:
  XMLDeclParser (jcharArray, jint, jint);
  XMLDeclParser ();
  void reset (jcharArray, jint, jint);
  ::java::lang::String *getXMLVersion () { return xmlVersion; }
  ::java::lang::String *getXMLEncoding () { return xmlEncoding; }
  jboolean isXMLStandaloneDeclared () { return xmlStandaloneDeclared; }
  jboolean isXMLStandalone () { return xmlStandalone; }
  jint getCharsRead ();
public: // actually package-private
  XMLDeclParser (::java::io::Reader *);
  XMLDeclParser (::java::io::InputStream *);
private:
  static jintArray yy_unpack ();
  static jint yy_unpack (::java::lang::String *, jint, jintArray);
  static jcharArray yy_unpack_cmap (::java::lang::String *);
  jboolean yy_refill ();
public:
  void yyclose ();
  void yyreset (::java::io::Reader *);
  void yyreset (jcharArray, jint, jint);
  jint yystate () { return yy_lexical_state; }
  void yybegin (jint);
  ::java::lang::String *yytext ();
  ::java::lang::String *yytext (jint, jint);
  void yynextAction ();
  jint yynextChar ();
  jint yynextBufferChar ();
private:
  jint yy_doCount (jint);
public:
  jchar yycharat (jint);
  jint yybufferLeft ();
  void yyskip (jint);
  jint yylength ();
private:
  void yy_ScanError (jint);
  void yypushback (jint);
public:
  jint parse ();
  static const jint YYEOF = -1L;
private:
  static const jint YY_BUFFERSIZE = 0L;
public:
  static const jint GOT_ENCODING = 5L;
  static const jint ENCODING = 4L;
  static const jint XML_DECL = 1L;
  static const jint YYINITIAL = 0L;
  static const jint STANDALONE = 6L;
  static const jint GOT_VERSION = 3L;
  static const jint VERSION = 2L;
  static const jint GOT_STANDALONE = 7L;
private:
  static ::java::lang::String *yycmap_packed;
  static jcharArray yycmap;
  static jintArray yy_rowMap;
  static ::java::lang::String *yy_packed0;
  static jintArray yytrans;
  static const jint YY_UNKNOWN_ERROR = 0L;
  static const jint YY_ILLEGAL_STATE = 1L;
  static const jint YY_NO_MATCH = 2L;
  static const jint YY_PUSHBACK_2BIG = 3L;
  static const jint YY_SKIP_2BIG = 4L;
  static JArray< ::java::lang::String *> *YY_ERROR_MSG;
  static jbyteArray YY_ATTRIBUTE;
  ::java::io::Reader * __attribute__((aligned(__alignof__( ::java::lang::Object )))) yy_reader;
  jint yy_state;
  jint yy_lexical_state;
  jcharArray yy_buffer;
  jcharArray yy_saved_buffer;
  jint yy_markedPos;
  jint yy_pushbackPos;
  jint yy_currentPos;
  jint yy_startRead;
  jint yy_endRead;
  jint yyline;
  jint yychar;
  jint yycolumn;
  jboolean yy_atBOL;
  jboolean yy_atEOF;
public:
  static const jint SUCCESS = 1L;
  static const jint NO_DECLARATION = -1L;
private:
  ::java::lang::String *xmlVersion;
  ::java::lang::String *xmlEncoding;
  jboolean xmlStandalone;
  jboolean xmlStandaloneDeclared;
  jint yy_currentPos_l;
  jint yy_startRead_l;
  jint yy_markedPos_l;
  jint yy_endRead_l;
  jcharArray yy_buffer_l;
  jcharArray yycmap_l;
  jboolean yy_sawCR;
  jboolean yy_prev_sawCR;
  jint yyline_next;
  jint yycolumn_next;
public:

  static ::java::lang::Class class$;
};

#endif /* __com_bluecast_xml_XMLDeclParser__ */
