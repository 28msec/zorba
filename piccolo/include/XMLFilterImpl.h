// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __org_xml_sax_helpers_XMLFilterImpl__
#define __org_xml_sax_helpers_XMLFilterImpl__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace org
  {
    namespace xml
    {
      namespace sax
      {
        namespace helpers
        {
          class XMLFilterImpl;
        }
        class SAXParseException;
        class Attributes;
        class InputSource;
        class ErrorHandler;
        class ContentHandler;
        class DTDHandler;
        class EntityResolver;
        class Locator;
        class XMLReader;
      }
    }
  }
}

class org::xml::sax::helpers::XMLFilterImpl : public ::java::lang::Object
{
public:
  XMLFilterImpl ();
  XMLFilterImpl (::org::xml::sax::XMLReader *);
  virtual void setParent (::org::xml::sax::XMLReader *);
  virtual ::org::xml::sax::XMLReader *getParent () { return parent; }
  virtual void setFeature (::java::lang::String *, jboolean);
  virtual jboolean getFeature (::java::lang::String *);
  virtual void setProperty (::java::lang::String *, ::java::lang::Object *);
  virtual ::java::lang::Object *getProperty (::java::lang::String *);
  virtual void setEntityResolver (::org::xml::sax::EntityResolver *);
  virtual ::org::xml::sax::EntityResolver *getEntityResolver () { return entityResolver; }
  virtual void setDTDHandler (::org::xml::sax::DTDHandler *);
  virtual ::org::xml::sax::DTDHandler *getDTDHandler () { return dtdHandler; }
  virtual void setContentHandler (::org::xml::sax::ContentHandler *);
  virtual ::org::xml::sax::ContentHandler *getContentHandler () { return contentHandler; }
  virtual void setErrorHandler (::org::xml::sax::ErrorHandler *);
  virtual ::org::xml::sax::ErrorHandler *getErrorHandler () { return errorHandler; }
  virtual void parse (::org::xml::sax::InputSource *);
  virtual void parse (::java::lang::String *);
  virtual ::org::xml::sax::InputSource *resolveEntity (::java::lang::String *, ::java::lang::String *);
  virtual void notationDecl (::java::lang::String *, ::java::lang::String *, ::java::lang::String *);
  virtual void unparsedEntityDecl (::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::lang::String *);
  virtual void setDocumentLocator (::org::xml::sax::Locator *);
  virtual void startDocument ();
  virtual void endDocument ();
  virtual void startPrefixMapping (::java::lang::String *, ::java::lang::String *);
  virtual void endPrefixMapping (::java::lang::String *);
  virtual void startElement (::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::org::xml::sax::Attributes *);
  virtual void endElement (::java::lang::String *, ::java::lang::String *, ::java::lang::String *);
  virtual void characters (jcharArray, jint, jint);
  virtual void ignorableWhitespace (jcharArray, jint, jint);
  virtual void processingInstruction (::java::lang::String *, ::java::lang::String *);
  virtual void skippedEntity (::java::lang::String *);
  virtual void warning (::org::xml::sax::SAXParseException *);
  virtual void error (::org::xml::sax::SAXParseException *);
  virtual void fatalError (::org::xml::sax::SAXParseException *);
private:
  void setupParse ();
  ::org::xml::sax::XMLReader * __attribute__((aligned(__alignof__( ::java::lang::Object )))) parent;
  ::org::xml::sax::Locator *locator;
  ::org::xml::sax::EntityResolver *entityResolver;
  ::org::xml::sax::DTDHandler *dtdHandler;
  ::org::xml::sax::ContentHandler *contentHandler;
  ::org::xml::sax::ErrorHandler *errorHandler;
public:

  static ::java::lang::Class class$;
};

#endif /* __org_xml_sax_helpers_XMLFilterImpl__ */
