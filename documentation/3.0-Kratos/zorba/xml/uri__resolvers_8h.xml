<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="uri__resolvers_8h" kind="file">
    <compoundname>uri_resolvers.h</compoundname>
    <includes local="no">istream</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="no">zorba/config.h</includes>
    <includes refid="api__shared__types_8h" local="no">zorba/api_shared_types.h</includes>
    <includes refid="unique__ptr_8h" local="no">zorba/internal/unique_ptr.h</includes>
    <includes refid="ztd_8h" local="no">zorba/internal/ztd.h</includes>
    <includes refid="item_8h" local="no">zorba/item.h</includes>
    <includes refid="streams_8h" local="no">zorba/streams.h</includes>
    <includes refid="locale_8h" local="no">zorba/util/locale.h</includes>
    <includes refid="zorba__string_8h" local="no">zorba/zorba_string.h</includes>
    <includedby refid="thesaurus_8h" local="no">thesaurus.h</includedby>
    <incdepgraph>
      <node id="2422">
        <label>zorba/util/locale.h</label>
        <link refid="locale_8h"/>
      </node>
      <node id="2415">
        <label>functional</label>
      </node>
      <node id="2424">
        <label>iterator</label>
      </node>
      <node id="2410">
        <label>cxx_util.h</label>
        <link refid="cxx__util_8h"/>
        <childnode refid="2405" relation="include">
        </childnode>
      </node>
      <node id="2407">
        <label>zorba/util/smart_ptr.h</label>
        <link refid="smart__ptr_8h"/>
        <childnode refid="2405" relation="include">
        </childnode>
      </node>
      <node id="2418">
        <label>zorba/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="2419" relation="include">
        </childnode>
        <childnode refid="2405" relation="include">
        </childnode>
        <childnode refid="2406" relation="include">
        </childnode>
        <childnode refid="2420" relation="include">
        </childnode>
        <childnode refid="2403" relation="include">
        </childnode>
      </node>
      <node id="2417">
        <label>string</label>
      </node>
      <node id="2404">
        <label>map</label>
      </node>
      <node id="2423">
        <label>zorba/zorba_string.h</label>
        <link refid="zorba__string_8h"/>
        <childnode refid="2424" relation="include">
        </childnode>
        <childnode refid="2417" relation="include">
        </childnode>
        <childnode refid="2405" relation="include">
        </childnode>
      </node>
      <node id="2421">
        <label>zorba/streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="2419" relation="include">
        </childnode>
      </node>
      <node id="2411">
        <label>type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="2405" relation="include">
        </childnode>
        <childnode refid="2412" relation="include">
        </childnode>
      </node>
      <node id="2403">
        <label>vector</label>
      </node>
      <node id="2420">
        <label>zorba/store_consts.h</label>
        <link refid="store__consts_8h"/>
        <childnode refid="2419" relation="include">
        </childnode>
        <childnode refid="2417" relation="include">
        </childnode>
        <childnode refid="2405" relation="include">
        </childnode>
      </node>
      <node id="2416">
        <label>sstream</label>
      </node>
      <node id="2419">
        <label>iostream</label>
      </node>
      <node id="2401">
        <label>uri_resolvers.h</label>
        <link refid="uri_resolvers.h"/>
        <childnode refid="2402" relation="include">
        </childnode>
        <childnode refid="2403" relation="include">
        </childnode>
        <childnode refid="2404" relation="include">
        </childnode>
        <childnode refid="2405" relation="include">
        </childnode>
        <childnode refid="2406" relation="include">
        </childnode>
        <childnode refid="2408" relation="include">
        </childnode>
        <childnode refid="2413" relation="include">
        </childnode>
        <childnode refid="2418" relation="include">
        </childnode>
        <childnode refid="2421" relation="include">
        </childnode>
        <childnode refid="2422" relation="include">
        </childnode>
        <childnode refid="2423" relation="include">
        </childnode>
      </node>
      <node id="2408">
        <label>zorba/internal/unique_ptr.h</label>
        <link refid="unique__ptr_8h"/>
        <childnode refid="2405" relation="include">
        </childnode>
        <childnode refid="2409" relation="include">
        </childnode>
        <childnode refid="2410" relation="include">
        </childnode>
        <childnode refid="2411" relation="include">
        </childnode>
        <childnode refid="2413" relation="include">
        </childnode>
      </node>
      <node id="2413">
        <label>ztd.h</label>
        <link refid="ztd_8h"/>
        <childnode refid="2414" relation="include">
        </childnode>
        <childnode refid="2415" relation="include">
        </childnode>
        <childnode refid="2416" relation="include">
        </childnode>
        <childnode refid="2417" relation="include">
        </childnode>
        <childnode refid="2405" relation="include">
        </childnode>
        <childnode refid="2410" relation="include">
        </childnode>
        <childnode refid="2411" relation="include">
        </childnode>
      </node>
      <node id="2412">
        <label>type_traits</label>
      </node>
      <node id="2405">
        <label>zorba/config.h</label>
      </node>
      <node id="2409">
        <label>algorithm</label>
      </node>
      <node id="2406">
        <label>zorba/api_shared_types.h</label>
        <link refid="api__shared__types_8h"/>
        <childnode refid="2405" relation="include">
        </childnode>
        <childnode refid="2407" relation="include">
        </childnode>
      </node>
      <node id="2414">
        <label>cstring</label>
      </node>
      <node id="2402">
        <label>istream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2428">
        <label>zorba.h</label>
        <link refid="zorba_8h"/>
        <childnode refid="2427" relation="include">
        </childnode>
      </node>
      <node id="2426">
        <label>thesaurus.h</label>
        <link refid="thesaurus_8h"/>
        <childnode refid="2427" relation="include">
        </childnode>
      </node>
      <node id="2427">
        <label>static_context.h</label>
        <link refid="static__context_8h"/>
        <childnode refid="2428" relation="include">
        </childnode>
      </node>
      <node id="2425">
        <label>uri_resolvers.h</label>
        <link refid="uri_resolvers.h"/>
        <childnode refid="2426" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classzorba_1_1EntityData" prot="public">zorba::EntityData</innerclass>
    <innerclass refid="classzorba_1_1OneToOneURIMapper" prot="public">zorba::OneToOneURIMapper</innerclass>
    <innerclass refid="classzorba_1_1Resource" prot="public">zorba::Resource</innerclass>
    <innerclass refid="classzorba_1_1StreamResource" prot="public">zorba::StreamResource</innerclass>
    <innerclass refid="classzorba_1_1URIMapper" prot="public">zorba::URIMapper</innerclass>
    <innerclass refid="classzorba_1_1URLResolver" prot="public">zorba::URLResolver</innerclass>
    <innernamespace refid="namespacezorba">zorba</innernamespace>
    <briefdescription>
<para>This header file defines all uri resolvers. </para>    </briefdescription>
    <detaileddescription>
<para>Zorba has a very flexible uri resolver mechanism.</para><para>QQQ Complete documentation QQQ file should be renamed uri_resolver.h </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006-2011<sp/>The<sp/>FLWOR<sp/>Foundation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZORBA_URI_RESOLVERS_API_H</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ZORBA_URI_RESOLVERS_API_H</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;istream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zorba/config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="api__shared__types_8h" kindref="compound">zorba/api_shared_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="unique__ptr_8h" kindref="compound">zorba/internal/unique_ptr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztd_8h" kindref="compound">zorba/internal/ztd.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="item_8h" kindref="compound">zorba/item.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="streams_8h" kindref="compound">zorba/streams.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="locale_8h" kindref="compound">zorba/util/locale.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="zorba__string_8h" kindref="compound">zorba/zorba_string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>@file<sp/>uri_resolvers.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>@brief<sp/>This<sp/>header<sp/>file<sp/>defines<sp/>all<sp/>uri<sp/>resolvers.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>%Zorba<sp/>has<sp/>a<sp/>very<sp/>flexible<sp/>uri<sp/>resolver<sp/>mechanism.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>QQQ<sp/>Complete<sp/>documentation</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>QQQ<sp/>file<sp/>should<sp/>be<sp/>renamed<sp/>uri_resolver.h</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">zorba<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>class<sp/>representing<sp/>the<sp/>result<sp/>of<sp/>URL<sp/>resolution.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>This<sp/>class<sp/>is<sp/>the<sp/>final<sp/>output<sp/>of<sp/>the<sp/>URI<sp/>resolution<sp/>process.<sp/>All</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>URL<sp/>resolvers<sp/>return<sp/>results<sp/>using<sp/>subclasses<sp/>of<sp/>this<sp/>class.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classzorba_1_1Resource" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1Resource" kindref="compound" tooltip="The class representing the result of URL resolution.">Resource</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classstd_1_1unique__ptr" kindref="compound">std::unique_ptr&lt;Resource,internal::ztd::destroy_delete&lt;Resource&gt;</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="54" refid="classzorba_1_1Resource_1a2fc7456745b8828dd98971e78f85823e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Resource_1a2fc7456745b8828dd98971e78f85823e" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classzorba_1_1Resource" kindref="compound" tooltip="The class representing the result of URL resolution.">Resource</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Destroy/clean<sp/>up<sp/>this<sp/>Resource.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Zorba<sp/>will<sp/>call<sp/>this<sp/>method<sp/>when<sp/>it<sp/>no<sp/>longer<sp/>needs<sp/>the<sp/>Resource.<sp/>It</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>*<sp/>is<sp/>the<sp/>responsibility<sp/>of<sp/>subclasses<sp/>to<sp/>clean<sp/>up<sp/>appropriate<sp/>when</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>method<sp/>is<sp/>called,<sp/>including<sp/>calling<sp/>&quot;delete<sp/>this&quot;<sp/>if<sp/>the<sp/>Resource</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>*<sp/>was<sp/>allocated<sp/>with<sp/>&quot;new&quot;.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroy()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Concrete<sp/>Resource<sp/>subclass<sp/>representing<sp/>access<sp/>to<sp/>an<sp/>entity</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>via<sp/>a<sp/>stream.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classzorba_1_1StreamResource" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1StreamResource" kindref="compound" tooltip="Concrete Resource subclass representing access to an entity via a stream.">StreamResource</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Resource" kindref="compound" tooltip="The class representing the result of URL resolution.">Resource</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Public<sp/>factory<sp/>method<sp/>from<sp/>istream.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>Resource<sp/>object<sp/>will<sp/>take<sp/>memory<sp/>ownership<sp/>of<sp/>the<sp/>istream.<sp/>Zorba<sp/>will</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>*<sp/>pass<sp/>it<sp/>to<sp/>aStreamReleaser<sp/>when<sp/>it<sp/>is<sp/>no<sp/>longer<sp/>needed,<sp/>so<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>*<sp/>original<sp/>client<sp/>may<sp/>delete<sp/>it.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aStream<sp/>An<sp/>istream<sp/>whence<sp/>to<sp/>read<sp/>the<sp/>string&apos;s<sp/>content.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aStreamReleaser<sp/>A<sp/>function<sp/>pointer<sp/>which<sp/>is<sp/>invoked<sp/>once</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>StreamResource<sp/>is<sp/>destroyed.<sp/>Normally<sp/>this<sp/>function<sp/>will<sp/>delete</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>std::istream<sp/>object<sp/>passed<sp/>to<sp/>it.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aIsStreamSeekable<sp/>Determines<sp/>whether<sp/>the<sp/>given<sp/>stream<sp/>is<sp/>arbitrarily</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>seekable<sp/>without<sp/>throwing<sp/>errors.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1StreamResource" kindref="compound" tooltip="Concrete Resource subclass representing access to an entity via a stream.">StreamResource</ref>*<sp/>create(std::istream*<sp/>aStream,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="streams_8h_1a3f517c3d1f2e28152eeb3f47e7fd67b4" kindref="member">StreamReleaser</ref><sp/>aStreamReleaser,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aIsStreamSeekable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Retrieve<sp/>the<sp/>istream<sp/>associated<sp/>with<sp/>this<sp/>Resource.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::istream*<sp/>getStream()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Retrieve<sp/>the<sp/>stream-releaser<sp/>function.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="streams_8h_1a3f517c3d1f2e28152eeb3f47e7fd67b4" kindref="member">StreamReleaser</ref><sp/>getStreamReleaser()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classzorba_1_1StreamResource" kindref="compound" tooltip="Concrete Resource subclass representing access to an entity via a stream.">StreamResource</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isStreamSeekable()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>class<sp/>containing<sp/>data<sp/>which<sp/>may<sp/>be<sp/>of<sp/>use<sp/>to<sp/>URIMappers</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>and<sp/>URLResolvers<sp/>when<sp/>mapping/resolving<sp/>a<sp/>URI.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>This<sp/>base<sp/>class<sp/>specifies<sp/>the<sp/>kind<sp/>of<sp/>entity<sp/>for<sp/>which<sp/>this<sp/>URI<sp/>is<sp/>being</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>resolved<sp/>-<sp/>for<sp/>instance,<sp/>a<sp/>schema<sp/>URI<sp/>or<sp/>a<sp/>module<sp/>URI.<sp/>Subclasses<sp/>of</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>this<sp/>class<sp/>will<sp/>provide<sp/>additional<sp/>data<sp/>for<sp/>specific<sp/>kinds<sp/>of<sp/>entities.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classzorba_1_1EntityData" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1EntityData" kindref="compound" tooltip="The class containing data which may be of use to URIMappers and URLResolvers when mapping/resolving a...">EntityData</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>enum<sp/>listing<sp/>the<sp/>kinds<sp/>of<sp/>entities<sp/>that<sp/>may<sp/>be<sp/>represented</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>*<sp/>by<sp/>URIs,<sp/>and<sp/>hence<sp/>may<sp/>be<sp/>looked<sp/>up<sp/>via<sp/>the<sp/>URI<sp/>resolution</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/>*<sp/>mechanism.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18a" kindref="member" tooltip="enum listing the kinds of entities that may be represented by URIs, and hence may be looked up via th...">Kind</ref><sp/>{</highlight></codeline>
<codeline lineno="126" refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aa3f8b8b595515407f94dc9351634c0aae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aa3f8b8b595515407f94dc9351634c0aae" kindref="member">SCHEMA</ref>,</highlight></codeline>
<codeline lineno="127" refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aa5b5cce2ccde7d14ae032911e86e5c4d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aa5b5cce2ccde7d14ae032911e86e5c4d2" kindref="member">MODULE</ref>,</highlight></codeline>
<codeline lineno="128" refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aa26e68c4df7c4ec7c11a2dea455ab5abb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aa26e68c4df7c4ec7c11a2dea455ab5abb" kindref="member">THESAURUS</ref>,</highlight></codeline>
<codeline lineno="129" refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aaff6ec41e2463710eb6f7eefb248ba23d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aaff6ec41e2463710eb6f7eefb248ba23d" kindref="member">STOP_WORDS</ref>,</highlight></codeline>
<codeline lineno="130" refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aacfa6d73d53fcae274620a294bb5e769a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aacfa6d73d53fcae274620a294bb5e769a" kindref="member">COLLECTION</ref>,</highlight></codeline>
<codeline lineno="131" refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aaa626e03d6717c3dca7d67753e15a6b17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aaa626e03d6717c3dca7d67753e15a6b17" kindref="member">DOCUMENT</ref>,</highlight></codeline>
<codeline lineno="132" refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18aa9d19c6a325828e7057e3d809e2daa5c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SOME_CONTENT</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>Kind<sp/>of<sp/>Entity<sp/>for<sp/>which<sp/>this<sp/>URI<sp/>is<sp/>being<sp/>resolved.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Kind<sp/>getKind()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classzorba_1_1EntityData" kindref="compound" tooltip="The class containing data which may be of use to URIMappers and URLResolvers when mapping/resolving a...">EntityData</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Interface<sp/>for<sp/>URL<sp/>resolving.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>Subclass<sp/>this<sp/>to<sp/>provide<sp/>a<sp/>URL<sp/>resolver<sp/>to<sp/>the<sp/>method</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>StaticContext::addURLResolver().</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classzorba_1_1URLResolver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1URLResolver" kindref="compound" tooltip="Interface for URL resolving.">URLResolver</ref></highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1URLResolver" kindref="compound" tooltip="Interface for URL resolving.">URLResolver</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classzorba_1_1URLResolver" kindref="compound" tooltip="Interface for URL resolving.">URLResolver</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Transforms<sp/>an<sp/>input<sp/>URL<sp/>into<sp/>a<sp/>Resource.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>&quot;aEntityData&quot;<sp/>parameter<sp/>informs<sp/>the<sp/>URLResolver<sp/>what<sp/>kind<sp/>of</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>*<sp/>entity<sp/>is<sp/>being<sp/>referenced<sp/>by<sp/>the<sp/>URL.<sp/>URLResolvers<sp/>may<sp/>choose<sp/>to</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>*<sp/>make<sp/>use<sp/>of<sp/>this<sp/>information<sp/>to<sp/>alter<sp/>their<sp/>behaviour.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>*<sp/>URLResolvers<sp/>must<sp/>ensure<sp/>that<sp/>they<sp/>return<sp/>a<sp/>concrete<sp/>subclass<sp/>of</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Resource<sp/>which<sp/>is<sp/>compatible<sp/>with<sp/>the<sp/>entity<sp/>kind<sp/>being<sp/>resolved.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Implementers<sp/>of<sp/>this<sp/>method<sp/>should<sp/>do<sp/>nothing<sp/>if<sp/>they<sp/>do<sp/>not<sp/>know</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/>*<sp/>how<sp/>to<sp/>resolve<sp/>the<sp/>URL.<sp/><sp/>They<sp/>should<sp/>create<sp/>and<sp/>return<sp/>a<sp/>Resource</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/>*<sp/>if<sp/>they<sp/>were<sp/>successfully<sp/>able<sp/>to<sp/>resolve<sp/>the<sp/>URL.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Implementers<sp/>may<sp/>throw<sp/>any<sp/>exception<sp/>if<sp/>they<sp/>believe<sp/>that<sp/>they</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>*<sp/>are<sp/>canonical<sp/>for<sp/>the<sp/>URL<sp/>and<sp/>yet<sp/>had<sp/>some<sp/>error<sp/>arise<sp/>attempting</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>resolve<sp/>it.<sp/><sp/>Note<sp/>that<sp/>because<sp/>there<sp/>may<sp/>be<sp/>several<sp/>possible</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>*<sp/>URLs<sp/>attempted,<sp/>Zorba<sp/>will<sp/>catch<sp/>any<sp/>exceptions<sp/>thrown<sp/>and</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>*<sp/>continue<sp/>until<sp/>all<sp/>all<sp/>URLs<sp/>have<sp/>failed.<sp/>Zorba<sp/>will<sp/>not<sp/>re-throw</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>*<sp/>any<sp/>of<sp/>these<sp/>exceptions<sp/>directly.<sp/>However,<sp/>if<sp/>the<sp/>exception</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>*<sp/>thrown<sp/>extends<sp/>std::exception,<sp/>Zorba<sp/>will<sp/>make<sp/>efforts<sp/>to<sp/>ensure</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/>*<sp/>that<sp/>its<sp/>error<sp/>message<sp/>is<sp/>included<sp/>in<sp/>the<sp/>exception<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>*<sp/>ultimately<sp/>thrown.<sp/>For<sp/>any<sp/>other<sp/>thrown<sp/>objects,<sp/>only<sp/>the<sp/>fact</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/>*<sp/>that<sp/>an<sp/>exception<sp/>occurred<sp/>will<sp/>be<sp/>remembered;<sp/>the<sp/>exception</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>*<sp/>object<sp/>itself<sp/>will<sp/>be<sp/>discarded.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/>*<sp/>In<sp/>any<sp/>case,<sp/>if<sp/>they<sp/>create<sp/>a<sp/>Resource,<sp/>Zorba<sp/>will<sp/>take<sp/>memory</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/>*<sp/>ownership<sp/>of<sp/>the<sp/>Resource<sp/>and<sp/>delete<sp/>it<sp/>(by<sp/>calling<sp/>destroy()<sp/>on<sp/>it)</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/>*<sp/>when<sp/>it<sp/>is<sp/>no<sp/>longer<sp/>needed.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Resource" kindref="compound" tooltip="The class representing the result of URL resolution.">Resource</ref>*<sp/>resolveURL(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">zorba::String</ref>&amp;<sp/>aUrl,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1EntityData" kindref="compound" tooltip="The class containing data which may be of use to URIMappers and URLResolvers when mapping/resolving a...">EntityData</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>aEntityData)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">};</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Interface<sp/>for<sp/>URI<sp/>mapping.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>Subclass<sp/>this<sp/>to<sp/>provide<sp/>a<sp/>URI<sp/>mapper<sp/>to<sp/>the<sp/>method</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>StaticContext::addURIMapper().</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classzorba_1_1URIMapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1URIMapper" kindref="compound" tooltip="Interface for URI mapping.">URIMapper</ref></highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1URIMapper" kindref="compound" tooltip="Interface for URI mapping.">URIMapper</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classzorba_1_1URIMapper" kindref="compound" tooltip="Interface for URI mapping.">URIMapper</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Transform<sp/>an<sp/>input<sp/>URI<sp/>into<sp/>a<sp/>set<sp/>of<sp/>output<sp/>URIs.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>&quot;aEntityData&quot;<sp/>parameter<sp/>informs<sp/>the<sp/>URIMapper<sp/>what<sp/>kind<sp/>of</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/>*<sp/>entity<sp/>is<sp/>being<sp/>referenced<sp/>by<sp/>URI.<sp/>URIMappers<sp/>may<sp/>choose<sp/>to<sp/>make</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/>*<sp/>use<sp/>of<sp/>this<sp/>information<sp/>to<sp/>alter<sp/>their<sp/>behaviour.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Implementers<sp/>of<sp/>this<sp/>method<sp/>should<sp/>provide<sp/>output<sp/>URIs<sp/>by<sp/>adding</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/>*<sp/>them<sp/>to<sp/>the<sp/>oUris<sp/>output<sp/>parameter,<sp/>using<sp/>the<sp/>push_back()</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/>*<sp/>method.<sp/>They<sp/>should<sp/>not<sp/>otherwise<sp/>view<sp/>or<sp/>manipulate<sp/>this<sp/>vector.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>a<sp/>URIMapper<sp/>does<sp/>not<sp/>wish<sp/>to<sp/>provide<sp/>any<sp/>output<sp/>URIs<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/>*<sp/>given<sp/>input<sp/>URI,<sp/>they<sp/>should<sp/>simply<sp/>do<sp/>nothing<sp/>and<sp/>return.<sp/>In</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>case,<sp/>Zorba<sp/>will<sp/>continue<sp/>with<sp/>the<sp/>original,<sp/>unmapped<sp/>URI.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapURI(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">zorba::String</ref><sp/>aUri,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1EntityData" kindref="compound" tooltip="The class containing data which may be of use to URIMappers and URLResolvers when mapping/resolving a...">EntityData</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>aEntityData,<sp/>std::vector&lt;zorba::String&gt;&amp;<sp/>oUris)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>enum<sp/>defining<sp/>legal<sp/>return<sp/>values<sp/>for<sp/>mapperKind().</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classzorba_1_1URIMapper_1a500b4b621e1d8c88a499dae07ae3c208" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1URIMapper_1a500b4b621e1d8c88a499dae07ae3c208" kindref="member" tooltip="enum defining legal return values for mapperKind().">Kind</ref><sp/>{</highlight></codeline>
<codeline lineno="225" refid="classzorba_1_1URIMapper_1a500b4b621e1d8c88a499dae07ae3c208addabab0b473fd59404b67bc113c944a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1URIMapper_1a500b4b621e1d8c88a499dae07ae3c208addabab0b473fd59404b67bc113c944a5" kindref="member">COMPONENT</ref>,</highlight></codeline>
<codeline lineno="226" refid="classzorba_1_1URIMapper_1a500b4b621e1d8c88a499dae07ae3c208aa4062200dbb01e7a8a4c9d792d4280d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CANDIDATE</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Declare<sp/>whether<sp/>this<sp/>is<sp/>a<sp/>&quot;component&quot;<sp/>or<sp/>&quot;candidate&quot;<sp/>URI</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/>*<sp/>mapper.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Zorba<sp/>supports<sp/>two<sp/>different<sp/>kinds<sp/>of<sp/>URI<sp/>mapping.<sp/>The<sp/>first,</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/>*<sp/>&quot;component<sp/>URI<sp/>mapping&quot;,<sp/>is<sp/>to<sp/>allow<sp/>mapping<sp/>from<sp/>an<sp/>input<sp/>URI<sp/>to</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/>*<sp/>a<sp/>set<sp/>of<sp/>URIs<sp/>which,<sp/>taken<sp/>together,<sp/>comprise<sp/>the<sp/>entire<sp/>entity</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>resolved.<sp/>This<sp/>is<sp/>currently<sp/>only<sp/>supported<sp/>for<sp/>module</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/>*<sp/>import,<sp/>where<sp/>it<sp/>can<sp/>be<sp/>used<sp/>to<sp/>load<sp/>a<sp/>module<sp/>which<sp/>is<sp/>physically</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/>*<sp/>stored<sp/>in<sp/>multiple<sp/>library<sp/>module<sp/>files.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/>*<sp/>&quot;Candidate<sp/>URI<sp/>mapping&quot;<sp/>is<sp/>to<sp/>allow<sp/>mapping<sp/>from<sp/>an<sp/>input<sp/>URI<sp/>to</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/>*<sp/>a<sp/>set<sp/>or<sp/>URIs<sp/>which<sp/>are<sp/>*potential*<sp/>identifiers<sp/>of<sp/>the<sp/>entity</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/>*<sp/>being<sp/>resolved.<sp/>Each<sp/>of<sp/>these<sp/>URIs<sp/>will<sp/>be<sp/>treated<sp/>to<sp/>any</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/>*<sp/>subsequent<sp/>URI<sp/>mappers,<sp/>and<sp/>then<sp/>treated<sp/>as<sp/>URLs<sp/>and<sp/>passed<sp/>in</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/>*<sp/>turn<sp/>to<sp/>all<sp/>registered<sp/>URLResolvers.<sp/>This<sp/>type<sp/>of<sp/>URI<sp/>mapping<sp/>is</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/>*<sp/>supported<sp/>for<sp/>all<sp/>uses<sp/>of<sp/>URIs<sp/>in<sp/>Zorba.<sp/>It<sp/>can<sp/>be<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/>*<sp/>example<sp/>to<sp/>redirect<sp/>http:<sp/>URIs<sp/>to<sp/>locally-cached<sp/>file:<sp/>URLs,<sp/>or</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>provide<sp/>several<sp/>alternative<sp/>locations<sp/>for<sp/>a<sp/>given<sp/>resource.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>you<sp/>do<sp/>not<sp/>override<sp/>this<sp/>method,<sp/>the<sp/>default<sp/>is<sp/>&quot;candidate&quot;.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Kind<sp/>mapperKind();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Constant<sp/>indicating<sp/>that<sp/>Zorba<sp/>should<sp/>deny<sp/>access<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/>*<sp/>given<sp/>URI.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>any<sp/>kind<sp/>of<sp/>URIMapper<sp/>returns<sp/>this<sp/>value<sp/>at<sp/>any<sp/>point<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/>*<sp/>vector<sp/>of<sp/>URIs,<sp/>Zorba<sp/>will<sp/>cause<sp/>the<sp/>resolution<sp/>of<sp/>this<sp/>URI<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/>*<sp/>denied<sp/>with<sp/>an<sp/>error.<sp/><sp/>This<sp/>can<sp/>be<sp/>used,<sp/>for<sp/>example,<sp/>to<sp/>suppress</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/>*<sp/>importing<sp/>particular<sp/>modules<sp/>by<sp/>URI.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classzorba_1_1URIMapper_1ae62d17b1a0092fd21995b84c94387b1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">zorba::String</ref><sp/><ref refid="classzorba_1_1URIMapper_1ae62d17b1a0092fd21995b84c94387b1b" kindref="member" tooltip="Constant indicating that Zorba should deny access to the given URI.">DENY_ACCESS</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="266"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>Convenience<sp/>implementation<sp/>of<sp/>a<sp/>mapper<sp/>that<sp/>maps<sp/>URIs<sp/>to<sp/>other</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>single<sp/>URIs.<sp/>Will<sp/>only<sp/>map<sp/>for<sp/>one<sp/>specific<sp/>Entity<sp/>Kind.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="classzorba_1_1OneToOneURIMapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1OneToOneURIMapper" kindref="compound" tooltip="Convenience implementation of a mapper that maps URIs to other single URIs.">OneToOneURIMapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1URIMapper" kindref="compound" tooltip="Interface for URI mapping.">URIMapper</ref><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Constructor.<sp/>Specify<sp/>the<sp/>Entity<sp/>Kind<sp/>you<sp/>wish<sp/>to<sp/>map.<sp/>Optionally,</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/>*<sp/>specify<sp/>whether<sp/>this<sp/>should<sp/>be<sp/>a<sp/>CANDIDATE<sp/>or<sp/>COMPONENT<sp/>mapper;</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/>*<sp/>default<sp/>is<sp/>CANDIDATE.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1OneToOneURIMapper" kindref="compound" tooltip="Convenience implementation of a mapper that maps URIs to other single URIs.">OneToOneURIMapper</ref>(<ref refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18a" kindref="member" tooltip="enum listing the kinds of entities that may be represented by URIs, and hence may be looked up via th...">EntityData::Kind</ref><sp/>aEntityKind,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1URIMapper_1a500b4b621e1d8c88a499dae07ae3c208" kindref="member" tooltip="enum defining legal return values for mapperKind().">URIMapper::Kind</ref><sp/>aMapperKind<sp/>=<sp/><ref refid="classzorba_1_1URIMapper_1a500b4b621e1d8c88a499dae07ae3c208aa4062200dbb01e7a8a4c9d792d4280d5" kindref="member">URIMapper::CANDIDATE</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Add<sp/>a<sp/>mapping<sp/>from<sp/>a<sp/>given<sp/>URI<sp/>to<sp/>another<sp/>URI.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>addMapping(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aMappedUri);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1URIMapper_1a500b4b621e1d8c88a499dae07ae3c208" kindref="member" tooltip="enum defining legal return values for mapperKind().">Kind</ref><sp/>mapperKind();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mapURI(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">zorba::String</ref><sp/>aUri,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1EntityData" kindref="compound" tooltip="The class containing data which may be of use to URIMappers and URLResolvers when mapping/resolving a...">EntityData</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>aEntityData,<sp/>std::vector&lt;zorba::String&gt;&amp;<sp/>oUris);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1EntityData_1a12bf89226b6bd93b9bf5f56343c0c18a" kindref="member" tooltip="enum listing the kinds of entities that may be represented by URIs, and hence may be looked up via th...">EntityData::Kind</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>theEntityKind;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1URIMapper_1a500b4b621e1d8c88a499dae07ae3c208" kindref="member" tooltip="enum defining legal return values for mapperKind().">URIMapper::Kind</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>theMapperKind;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;String,<sp/>String&gt;<sp/>Mapping_t;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Mapping_t::const_iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MappingIter_t;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>Mapping_t<sp/>theMappings;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>zorba<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>vim:set<sp/>et<sp/>sw=2<sp/>ts=2:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/include/zorba/uri_resolvers.h"/>
  </compounddef>
</doxygen>
