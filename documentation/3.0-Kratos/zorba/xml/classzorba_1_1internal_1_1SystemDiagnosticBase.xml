<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classzorba_1_1internal_1_1SystemDiagnosticBase" kind="class" prot="public">
    <compoundname>zorba::internal::SystemDiagnosticBase</compoundname>
    <basecompoundref refid="classzorba_1_1Diagnostic" prot="public" virt="non-virtual">zorba::Diagnostic</basecompoundref>
    <derivedcompoundref refid="classzorba_1_1internal_1_1SystemDiagnostic" prot="public" virt="non-virtual">zorba::internal::SystemDiagnostic&lt; QNameType &gt;</derivedcompoundref>
    <includes refid="system__diagnostic_8h" local="no">zorba/internal/system_diagnostic.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classzorba_1_1internal_1_1SystemDiagnosticBase_1adcea4007a53ee58f31fbc2955b4cf7e8" prot="private" static="no">
        <type>std::map&lt; char const *, <ref refid="classzorba_1_1Diagnostic" kindref="compound">Diagnostic</ref> const *, <ref refid="structzorba_1_1internal_1_1ztd_1_1less" kindref="compound">ztd::less</ref>&lt; char const * &gt; &gt;</type>
        <definition>typedef std::map&lt;char const*,Diagnostic const*,ztd::less&lt;char const*&gt; &gt; zorba::internal::SystemDiagnosticBase::map_type</definition>
        <argsstring></argsstring>
        <name>map_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" line="53" bodyfile="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classzorba_1_1internal_1_1SystemDiagnosticBase_1a2ba93c3a5c6c0da6ac847650b86081e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SystemDiagnostic</definition>
        <argsstring></argsstring>
        <name>SystemDiagnostic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" line="62" bodyfile="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1Diagnostic_1afb81a2ab07a82ca366124911d4d6d09a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ZorbaException</definition>
        <argsstring></argsstring>
        <name>ZorbaException</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/diagnostic.h" line="316" bodyfile="/home/wcandillon/deadlinks/include/zorba/diagnostic.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classzorba_1_1internal_1_1SystemDiagnosticBase_1a100fbd9f5d338881cc42472199dcf0f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classzorba_1_1Diagnostic" kindref="compound">Diagnostic</ref> const *</type>
        <definition>static Diagnostic const* zorba::internal::SystemDiagnosticBase::find</definition>
        <argsstring>(char const *localname)</argsstring>
        <name>find</name>
        <param>
          <type>char const *</type>
          <declname>localname</declname>
        </param>
        <briefdescription>
<para>Given a diagnostic&apos;s local-name, finds its corresponding Diagnostic object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localname</parametername>
</parameternamelist>
<parameterdescription>
<para>The local-name. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the corresponding Diagnostic object or <computeroutput>NULL</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" line="45" bodyfile="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" bodystart="45" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classzorba_1_1internal_1_1SystemDiagnosticBase_1a401b39ac945e28696247ac6be169dffb" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>map_type &amp;</type>
        <definition>static map_type&amp; zorba::internal::SystemDiagnosticBase::get_map</definition>
        <argsstring>()</argsstring>
        <name>get_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" line="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classzorba_1_1internal_1_1SystemDiagnosticBase_1afc86c2ab784a6d6c6ecab842ad69d2e9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zorba::internal::SystemDiagnosticBase::SystemDiagnosticBase</definition>
        <argsstring>(char const *localname)</argsstring>
        <name>SystemDiagnosticBase</name>
        <param>
          <type>char const *</type>
          <declname>localname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" line="57" bodyfile="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" bodystart="57" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classzorba_1_1Diagnostic_1a26bf8331471f50f339a748b67006591b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacezorba_1_1diagnostic_1a5709afb398f65a318160aa7613abfa9e" kindref="member">diagnostic::kind</ref></type>
        <definition>virtual diagnostic::kind zorba::Diagnostic::kind</definition>
        <argsstring>() const </argsstring>
        <name>kind</name>
        <reimplementedby refid="classzorba_1_1internal_1_1SystemDiagnostic_1ae8d86c62f67ac02e066c20d1c8b2b47e">kind</reimplementedby>
        <briefdescription>
<para>Gets the kind of this diagnostic. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns said kind. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/diagnostic.h" line="295"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1Diagnostic_1a26d37747968b7e16cc3bbb564124ab66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>char const *</type>
        <definition>virtual char const* zorba::Diagnostic::message</definition>
        <argsstring>() const </argsstring>
        <name>message</name>
        <briefdescription>
<para>Gets the message of this diagnostic. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns said message. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/diagnostic.h" line="302"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1Diagnostic_1ae32b80d36d617c9d142aeec331dd92c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classzorba_1_1diagnostic_1_1QName" kindref="compound">diagnostic::QName</ref> const &amp;</type>
        <definition>virtual diagnostic::QName const&amp; zorba::Diagnostic::qname</definition>
        <argsstring>() const =0</argsstring>
        <name>qname</name>
        <reimplementedby refid="classzorba_1_1UserError_1a86d369086e3d44185d0648ebca171fbd">qname</reimplementedby>
        <reimplementedby refid="classzorba_1_1internal_1_1SystemDiagnostic_1a87c995adba48030eab64b815ae712b2f">qname</reimplementedby>
        <briefdescription>
<para>Gets the QName for this diagnostic. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns said QName. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/diagnostic.h" line="288"/>
        <referencedby refid="namespacezorba_1adf799320d83872ba0b8c9c4a140a6e97" compoundref="diagnostic_8h" startline="326" endline="328">zorba::operator==</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classzorba_1_1Diagnostic_1a26384c8cc836e3aedaafee7e73e1cac0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classzorba_1_1Diagnostic" kindref="compound">Diagnostic</ref> const *</type>
        <definition>virtual Diagnostic const* zorba::Diagnostic::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classzorba_1_1UserError_1a609a979fe0b8a579df7413103f4249e8">clone</reimplementedby>
        <reimplementedby refid="classzorba_1_1internal_1_1SystemDiagnostic_1a460536c65f301d8a3669c14396259eb1">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/diagnostic.h" line="307"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1Diagnostic_1ace559dde0d2a2f708ce7af94cb767e7e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void zorba::Diagnostic::destroy</definition>
        <argsstring>() const </argsstring>
        <name>destroy</name>
        <reimplementedby refid="classzorba_1_1internal_1_1SystemDiagnostic_1aa3514301f262258b64fb7c9aa34490cd">destroy</reimplementedby>
        <briefdescription>
<para>Destroys a Diagnostic. </para>        </briefdescription>
        <detaileddescription>
<para>This is the only way a Diagnostic should be destroyed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/diagnostic.h" line="313"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="887">
        <label>zorba::internal::SystemDiagnosticBase</label>
        <link refid="classzorba_1_1internal_1_1SystemDiagnosticBase"/>
        <childnode refid="888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="889">
        <label>zorba::internal::SystemDiagnostic&lt; QNameType &gt;</label>
        <link refid="classzorba_1_1internal_1_1SystemDiagnostic"/>
        <childnode refid="887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="888">
        <label>zorba::Diagnostic</label>
        <link refid="classzorba_1_1Diagnostic"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="890">
        <label>zorba::internal::SystemDiagnosticBase</label>
        <link refid="classzorba_1_1internal_1_1SystemDiagnosticBase"/>
        <childnode refid="891" relation="public-inheritance">
        </childnode>
      </node>
      <node id="891">
        <label>zorba::Diagnostic</label>
        <link refid="classzorba_1_1Diagnostic"/>
      </node>
    </collaborationgraph>
    <location file="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" line="35" bodyfile="/home/wcandillon/deadlinks/include/zorba/internal/system_diagnostic.h" bodystart="35" bodyend="63"/>
    <listofallmembers>
      <member refid="classzorba_1_1Diagnostic_1a26384c8cc836e3aedaafee7e73e1cac0" prot="protected" virt="pure-virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>clone</name></member>
      <member refid="classzorba_1_1Diagnostic_1ace559dde0d2a2f708ce7af94cb767e7e" prot="protected" virt="virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>destroy</name></member>
      <member refid="classzorba_1_1internal_1_1SystemDiagnosticBase_1a100fbd9f5d338881cc42472199dcf0f6" prot="public" virt="non-virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>find</name></member>
      <member refid="classzorba_1_1internal_1_1SystemDiagnosticBase_1a401b39ac945e28696247ac6be169dffb" prot="private" virt="non-virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>get_map</name></member>
      <member refid="classzorba_1_1Diagnostic_1a26bf8331471f50f339a748b67006591b" prot="public" virt="virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>kind</name></member>
      <member refid="classzorba_1_1internal_1_1SystemDiagnosticBase_1adcea4007a53ee58f31fbc2955b4cf7e8" prot="private" virt="non-virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>map_type</name></member>
      <member refid="classzorba_1_1Diagnostic_1a26d37747968b7e16cc3bbb564124ab66" prot="public" virt="virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>message</name></member>
      <member refid="classzorba_1_1Diagnostic_1ae32b80d36d617c9d142aeec331dd92c6" prot="public" virt="pure-virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>qname</name></member>
      <member refid="classzorba_1_1internal_1_1SystemDiagnosticBase_1a2ba93c3a5c6c0da6ac847650b86081e6" prot="private" virt="non-virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>SystemDiagnostic</name></member>
      <member refid="classzorba_1_1internal_1_1SystemDiagnosticBase_1afc86c2ab784a6d6c6ecab842ad69d2e9" prot="private" virt="non-virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>SystemDiagnosticBase</name></member>
      <member refid="classzorba_1_1Diagnostic_1afb81a2ab07a82ca366124911d4d6d09a" prot="protected" virt="non-virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>ZorbaException</name></member>
      <member refid="classzorba_1_1Diagnostic_1ab3e86cf75df94f0b02c2dbc1acbafdd1" prot="protected" virt="virtual"><scope>zorba::internal::SystemDiagnosticBase</scope><name>~Diagnostic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
