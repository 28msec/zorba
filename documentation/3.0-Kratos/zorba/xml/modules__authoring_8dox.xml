<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="modules__authoring_8dox" kind="file">
    <compoundname>modules_authoring.dox</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**<sp/>\page<sp/>modules_authoring<sp/>Writing<sp/>Your<sp/>Own<sp/>Modules</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Writing<sp/>your<sp/>own<sp/>modules<sp/>for<sp/>Zorba<sp/>is<sp/>easy.<sp/>This<sp/>guide<sp/>will<sp/>cover</highlight></codeline>
<codeline lineno="4"><highlight class="comment">writing<sp/>a<sp/>simple<sp/>XQuery<sp/>module;<sp/>using<sp/>Zorba&apos;s<sp/>CMake-based<sp/>build<sp/>system</highlight></codeline>
<codeline lineno="5"><highlight class="comment">to<sp/>deploy<sp/>the<sp/>module;<sp/>versioning<sp/>your<sp/>module;<sp/>and<sp/>writing<sp/>a<sp/>more</highlight></codeline>
<codeline lineno="6"><highlight class="comment">complex<sp/>module<sp/>with<sp/>external<sp/>functions<sp/>implemented<sp/>in<sp/>C++.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">\section<sp/>mod_author_simple<sp/>Creating<sp/>a<sp/>Simple<sp/>XQuery<sp/>Module</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">A<sp/>&quot;module&quot;<sp/>is<sp/>simply<sp/>a<sp/>library<sp/>of<sp/>XQuery<sp/>functions<sp/>and<sp/>variables,</highlight></codeline>
<codeline lineno="11"><highlight class="comment">usually<sp/>which<sp/>perform<sp/>a<sp/>set<sp/>of<sp/>related<sp/>functions.<sp/>Modules<sp/>are<sp/>defined</highlight></codeline>
<codeline lineno="12"><highlight class="comment">by<sp/>the<sp/>XQuery<sp/>language<sp/>specification.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">A<sp/>module<sp/>exists<sp/>in<sp/>a<sp/>particular<sp/>&lt;i&gt;namespace&lt;/i&gt;,<sp/>which<sp/>is<sp/>identified</highlight></codeline>
<codeline lineno="15"><highlight class="comment">by<sp/>a<sp/>URI.<sp/>A<sp/>module<sp/>must<sp/>start<sp/>with<sp/>a<sp/>module<sp/>&lt;i&gt;declaration&lt;/i&gt;,<sp/>which</highlight></codeline>
<codeline lineno="16"><highlight class="comment">specifies<sp/>the<sp/>namespace<sp/>URI<sp/>and<sp/>associates<sp/>that<sp/>URI<sp/>with<sp/>a<sp/>prefix<sp/>for</highlight></codeline>
<codeline lineno="17"><highlight class="comment">easy<sp/>reference.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="20"><highlight class="comment">module<sp/>namespace<sp/>mymod<sp/>=<sp/>&quot;http://zorba.io/mymod&quot;;</highlight></codeline>
<codeline lineno="21"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">After<sp/>the<sp/>module<sp/>declaration,<sp/>you<sp/>may<sp/>have<sp/>as<sp/>many<sp/>&lt;i&gt;function&lt;/i&gt;<sp/>or</highlight></codeline>
<codeline lineno="24"><highlight class="comment">&lt;i&gt;variable&lt;/i&gt;<sp/>declarations<sp/>as<sp/>you<sp/>like.<sp/>All<sp/>of<sp/>the<sp/>functions<sp/>and</highlight></codeline>
<codeline lineno="25"><highlight class="comment">variables<sp/>you<sp/>declare<sp/>in<sp/>the<sp/>modules<sp/>namespace<sp/>will<sp/>be<sp/>made<sp/>available</highlight></codeline>
<codeline lineno="26"><highlight class="comment">to<sp/>queries<sp/>that<sp/>&lt;i&gt;import&lt;/i&gt;<sp/>your<sp/>module.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight></codeline>
<codeline lineno="28"><highlight class="comment">Here<sp/>we<sp/>declare<sp/>a<sp/>module<sp/>which<sp/>exposes<sp/>a<sp/>string<sp/>variable<sp/>(and<sp/>assign</highlight></codeline>
<codeline lineno="29"><highlight class="comment">it<sp/>a<sp/>value),<sp/>as<sp/>well<sp/>as<sp/>two<sp/>simple<sp/>functions.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="32"><highlight class="comment">module<sp/>namespace<sp/>mymod<sp/>=<sp/>&quot;http://zorba.io/mymod&quot;;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">declare<sp/>variable<sp/>$mymod:value<sp/>as<sp/>xs:string<sp/>:=<sp/>&quot;my<sp/>string<sp/>value&quot;;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">declare<sp/>function<sp/>mymod:hello()<sp/>as<sp/>xs:string<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/>&quot;hello&quot;</highlight></codeline>
<codeline lineno="38"><highlight class="comment">};</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">declare<sp/>function<sp/>mymod:get-value()<sp/>as<sp/>xs:string<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>$mymod:value</highlight></codeline>
<codeline lineno="42"><highlight class="comment">};</highlight></codeline>
<codeline lineno="43"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment">Assuming<sp/>for<sp/>the<sp/>moment<sp/>that<sp/>this<sp/>file<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="46"><highlight class="comment">working<sp/>directory<sp/>as<sp/>&lt;tt&gt;mymod.xq&lt;/tt&gt;,<sp/>we<sp/>can<sp/>write<sp/>a<sp/>query<sp/>which</highlight></codeline>
<codeline lineno="47"><highlight class="comment">imports<sp/>the<sp/>module<sp/>and<sp/>uses<sp/>one<sp/>of<sp/>its<sp/>functions:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="50"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>mymod=&quot;http://zorba.io/mymod&quot;</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>at<sp/>&quot;mymod.xq&quot;;</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">mymod:hello()</highlight></codeline>
<codeline lineno="54"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">If<sp/>this<sp/>query<sp/>is<sp/>in<sp/>a<sp/>file<sp/>called<sp/>&lt;tt&gt;query.xq&lt;/tt&gt;<sp/>in<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="57"><highlight class="comment">working<sp/>directory,<sp/>we<sp/>can<sp/>execute<sp/>it:</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="60"><highlight class="comment">%<sp/>zorba<sp/>-f<sp/>-q<sp/>query.xq</highlight></codeline>
<codeline lineno="61"><highlight class="comment">&lt;?xml<sp/>version=&quot;1.0&quot;<sp/>encoding=&quot;UTF-8&quot;?&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="comment">hello</highlight></codeline>
<codeline lineno="63"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">\section<sp/>mod_author_project<sp/>Creating<sp/>a<sp/>CMake<sp/>Module<sp/>Project</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">As<sp/>mentioned<sp/>in<sp/>\ref<sp/>mod_importing,<sp/>using<sp/>the<sp/>&lt;tt&gt;at<sp/>&quot;...&quot;&lt;/tt&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="comment">clauses<sp/>when<sp/>importing<sp/>modules<sp/>is<sp/>best<sp/>avoided.<sp/>There<sp/>are<sp/>also<sp/>many</highlight></codeline>
<codeline lineno="69"><highlight class="comment">ways<sp/>to<sp/>expand<sp/>upon<sp/>this<sp/>example,<sp/>such<sp/>as<sp/>introducing<sp/>versioning<sp/>for</highlight></codeline>
<codeline lineno="70"><highlight class="comment">our<sp/>module;<sp/>importing<sp/>schemas;<sp/>depending<sp/>on<sp/>other<sp/>modules;<sp/>writing</highlight></codeline>
<codeline lineno="71"><highlight class="comment">external<sp/>function<sp/>implementations<sp/>in<sp/>C++;<sp/>and<sp/>creating<sp/>test<sp/>cases<sp/>to</highlight></codeline>
<codeline lineno="72"><highlight class="comment">ensure<sp/>your<sp/>module&apos;s<sp/>functionality.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">Zorba<sp/>offers<sp/>a<sp/>comprehensive<sp/>system<sp/>for<sp/>module<sp/>authors<sp/>to<sp/>do<sp/>all<sp/>of</highlight></codeline>
<codeline lineno="75"><highlight class="comment">the<sp/>above<sp/>easily<sp/>and<sp/>consistently,<sp/>utilizing<sp/>the<sp/>same<sp/>build<sp/>tool<sp/>that</highlight></codeline>
<codeline lineno="76"><highlight class="comment">Zorba<sp/>itself<sp/>utilizes:<sp/>CMake<sp/>(http://www.cmake.org/).<sp/>If<sp/>you<sp/>plan<sp/>to</highlight></codeline>
<codeline lineno="77"><highlight class="comment">write<sp/>Zorba<sp/>modules<sp/>for<sp/>use<sp/>by<sp/>other<sp/>developers,<sp/>we<sp/>strongly<sp/>recommend</highlight></codeline>
<codeline lineno="78"><highlight class="comment">creating<sp/>a<sp/>CMake<sp/>project<sp/>so<sp/>that<sp/>you<sp/>may<sp/>easily<sp/>integrate<sp/>with<sp/>Zorba</highlight></codeline>
<codeline lineno="79"><highlight class="comment">and<sp/>other<sp/>modules.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">(Note:<sp/>the<sp/>majority<sp/>of<sp/>this<sp/>section<sp/>is<sp/>also<sp/>relevant<sp/>if<sp/>you<sp/>are</highlight></codeline>
<codeline lineno="82"><highlight class="comment">developing<sp/>an<sp/>entire<sp/>stand-alone<sp/>application<sp/>which<sp/>uses<sp/>Zorba<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="83"><highlight class="comment">library.)</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">Assuming<sp/>that<sp/>you<sp/>have<sp/>cmake<sp/>installed<sp/>(it<sp/>is<sp/>available<sp/>in<sp/>most<sp/>Linux</highlight></codeline>
<codeline lineno="86"><highlight class="comment">distributions,<sp/>and<sp/>installers<sp/>are<sp/>available<sp/>for<sp/>Windows<sp/>and<sp/>MacOS<sp/>-<sp/>it</highlight></codeline>
<codeline lineno="87"><highlight class="comment">is<sp/>also<sp/>part<sp/>of<sp/>MacPorts),<sp/>creating<sp/>a<sp/>project<sp/>for<sp/>a<sp/>Zorba<sp/>module<sp/>is</highlight></codeline>
<codeline lineno="88"><highlight class="comment">very<sp/>easy.<sp/>First,<sp/>in<sp/>a<sp/>new<sp/>directory,<sp/>copy<sp/>the<sp/>&lt;tt&gt;mymod.xq&lt;/tt&gt;<sp/>file</highlight></codeline>
<codeline lineno="89"><highlight class="comment">from<sp/>above,<sp/>and<sp/>create<sp/>a<sp/>file<sp/>named<sp/>&lt;tt&gt;CMakeLists.txt&lt;/tt&gt;:</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="92"><highlight class="comment">#<sp/>My<sp/>Zorba<sp/>Module<sp/>Project</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">PROJECT<sp/>(my_zorba_module)</highlight></codeline>
<codeline lineno="95"><highlight class="comment">CMAKE_MINIMUM_REQUIRED<sp/>(VERSION<sp/>2.6)</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">FIND_PACKAGE<sp/>(Zorba<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="98"><highlight class="comment">INCLUDE<sp/>(&quot;${Zorba_USE_FILE}&quot;)</highlight></codeline>
<codeline lineno="99"><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">DECLARE_ZORBA_MODULE<sp/>(FILE<sp/>mymod.xq<sp/>URI<sp/>&quot;http://zorba.io/mymod&quot;)</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">DONE_DECLARING_ZORBA_URIS<sp/>()</highlight></codeline>
<codeline lineno="103"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="104"><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment">This<sp/>is<sp/>the<sp/>minimum<sp/>required<sp/>&quot;boilerplate&quot;<sp/>for<sp/>your<sp/>CMake<sp/>project.</highlight></codeline>
<codeline lineno="106"><highlight class="comment">Here<sp/>is<sp/>a<sp/>brief<sp/>explanation<sp/>for<sp/>each<sp/>line:</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="109"><highlight class="comment">#<sp/>My<sp/>Zorba<sp/>Module<sp/>Project</highlight></codeline>
<codeline lineno="110"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="111"><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment">This<sp/>is<sp/>a<sp/>CMake<sp/>comment.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="115"><highlight class="comment">PROJECT<sp/>(my_zorba_module)</highlight></codeline>
<codeline lineno="116"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="117"><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">CMake<sp/>groups<sp/>build<sp/>environments<sp/>into<sp/>&lt;i&gt;projects&lt;/i&gt;,<sp/>which<sp/>must<sp/>have</highlight></codeline>
<codeline lineno="119"><highlight class="comment">unique<sp/>names.<sp/>The<sp/>name<sp/>can<sp/>be<sp/>anything<sp/>you<sp/>like,<sp/>but<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="120"><highlight class="comment">descriptive.<sp/>In<sp/>future,<sp/>if<sp/>other<sp/>module<sp/>projects<sp/>depend<sp/>on<sp/>your</highlight></codeline>
<codeline lineno="121"><highlight class="comment">module<sp/>project,<sp/>they<sp/>will<sp/>use<sp/>this<sp/>name<sp/>to<sp/>identify<sp/>it.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="124"><highlight class="comment">CMAKE_MINIMUM_REQUIRED<sp/>(VERSION<sp/>2.6)</highlight></codeline>
<codeline lineno="125"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="126"><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment">CMake<sp/>has<sp/>introduced<sp/>many<sp/>new<sp/>features<sp/>over<sp/>time;<sp/>Zorba&apos;s<sp/>CMake</highlight></codeline>
<codeline lineno="128"><highlight class="comment">support<sp/>requires<sp/>at<sp/>least<sp/>CMake<sp/>version<sp/>2.6.<sp/>Without<sp/>the<sp/>above<sp/>line,</highlight></codeline>
<codeline lineno="129"><highlight class="comment">your<sp/>project<sp/>will<sp/>still<sp/>work<sp/>(assuming<sp/>you<sp/>are<sp/>in<sp/>fact<sp/>using<sp/>at<sp/>least</highlight></codeline>
<codeline lineno="130"><highlight class="comment">CMake<sp/>2.6),<sp/>but<sp/>will<sp/>display<sp/>a<sp/>warning.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="133"><highlight class="comment">FIND_PACKAGE<sp/>(Zorba<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="134"><highlight class="comment">INCLUDE<sp/>(&quot;${Zorba_USE_FILE}&quot;)</highlight></codeline>
<codeline lineno="135"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">CMake<sp/>has<sp/>an<sp/>exhaustive<sp/>facility<sp/>for<sp/>introspecting<sp/>your<sp/>development</highlight></codeline>
<codeline lineno="138"><highlight class="comment">environment<sp/>and<sp/>finding<sp/>dependencies.<sp/>The<sp/>&lt;tt&gt;FIND_PACKAGE()&lt;/tt&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="comment">command<sp/>will<sp/>search<sp/>for<sp/>many<sp/>things,<sp/>including<sp/>other<sp/>CMake<sp/>projects</highlight></codeline>
<codeline lineno="140"><highlight class="comment">such<sp/>as<sp/>Zorba.<sp/>Zorba<sp/>ships<sp/>CMake<sp/>configuration<sp/>files<sp/>allowing<sp/>it<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="141"><highlight class="comment">found<sp/>in<sp/>this<sp/>way,<sp/>and<sp/>these<sp/>configuration<sp/>files<sp/>tell<sp/>our</highlight></codeline>
<codeline lineno="142"><highlight class="comment">project<sp/>where<sp/>Zorba<sp/>is<sp/>located<sp/>as<sp/>well<sp/>as<sp/>setting<sp/>a<sp/>number<sp/>of<sp/>other<sp/>useful</highlight></codeline>
<codeline lineno="143"><highlight class="comment">variables<sp/>describing<sp/>the<sp/>Zorba<sp/>environment.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment">One<sp/>such<sp/>variable,<sp/>&lt;tt&gt;${Zorba_USE_FILE}&lt;/tt&gt;,<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>CMake</highlight></codeline>
<codeline lineno="146"><highlight class="comment">script<sp/>containing<sp/>a<sp/>variety<sp/>of<sp/>utility<sp/>CMake<sp/>macros<sp/>that<sp/>are<sp/>very</highlight></codeline>
<codeline lineno="147"><highlight class="comment">useful<sp/>when<sp/>developing<sp/>modules.<sp/>By<sp/>using<sp/>&lt;tt&gt;INCLUDE()&lt;/tt&gt;<sp/>to<sp/>load</highlight></codeline>
<codeline lineno="148"><highlight class="comment">this<sp/>file,<sp/>we<sp/>gain<sp/>access<sp/>to<sp/>everything<sp/>we<sp/>need<sp/>to<sp/>build<sp/>our<sp/>module.</highlight></codeline>
<codeline lineno="149"><highlight class="comment">(This<sp/>&quot;use<sp/>file&quot;<sp/>technique<sp/>is<sp/>a<sp/>convention<sp/>for<sp/>CMake<sp/>projects.)</highlight></codeline>
<codeline lineno="150"><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="152"><highlight class="comment">DECLARE_ZORBA_MODULE<sp/>(FILE<sp/>mymod.xq<sp/>URI<sp/>&quot;http://zorba.io/mymod&quot;)</highlight></codeline>
<codeline lineno="153"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="154"><highlight class="comment"></highlight></codeline>
<codeline lineno="155"><highlight class="comment">&lt;tt&gt;DECLARE_ZORBA_MODULE()&lt;/tt&gt;<sp/>is<sp/>the<sp/>centerpiece<sp/>of<sp/>the<sp/>Zorba<sp/>module</highlight></codeline>
<codeline lineno="156"><highlight class="comment">development<sp/>environment;<sp/>most<sp/>of<sp/>the<sp/>rest<sp/>of<sp/>this<sp/>guide<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="157"><highlight class="comment">describing<sp/>how<sp/>to<sp/>use<sp/>it<sp/>in<sp/>detail.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="160"><highlight class="comment">DONE_DECLARING_ZORBA_URIS()</highlight></codeline>
<codeline lineno="161"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="162"><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">This<sp/>must<sp/>be<sp/>the<sp/>last<sp/>thing<sp/>called<sp/>by<sp/>your<sp/>top-level</highlight></codeline>
<codeline lineno="164"><highlight class="comment">&lt;tt&gt;CMakeLists.txt&lt;/tt&gt;<sp/>file.<sp/>It<sp/>collects<sp/>all<sp/>the<sp/>information<sp/>provided</highlight></codeline>
<codeline lineno="165"><highlight class="comment">by<sp/>earlier<sp/>calls<sp/>to<sp/>&lt;tt&gt;DECLARE_ZORBA_MODULE()&lt;/tt&gt;<sp/>(and<sp/>its<sp/>sister</highlight></codeline>
<codeline lineno="166"><highlight class="comment">macro,<sp/>&lt;tt&gt;DECLARE_ZORBA_SCHEMA()&lt;/tt&gt;,<sp/>described<sp/>later)<sp/>and<sp/>generates</highlight></codeline>
<codeline lineno="167"><highlight class="comment">all<sp/>the<sp/>necessary<sp/>build<sp/>system<sp/>rules<sp/>and<sp/>targets.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment">\section<sp/>mod_author_building<sp/>Building<sp/>the<sp/>Module<sp/>Project</highlight></codeline>
<codeline lineno="170"><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment">You<sp/>have<sp/>created<sp/>a<sp/>small<sp/>but<sp/>complete<sp/>Zorba<sp/>module<sp/>CMake<sp/>project.</highlight></codeline>
<codeline lineno="172"><highlight class="comment">Now,<sp/>the<sp/>project<sp/>must<sp/>be<sp/>built.<sp/>One<sp/>of<sp/>the<sp/>great<sp/>things<sp/>about<sp/>CMake<sp/>is</highlight></codeline>
<codeline lineno="173"><highlight class="comment">that<sp/>it<sp/>is<sp/>capable<sp/>of<sp/>creating<sp/>build<sp/>environments<sp/>for<sp/>a<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="174"><highlight class="comment">different<sp/>tools.<sp/>On<sp/>Unix<sp/>systems<sp/>(include<sp/>Windows<sp/>with<sp/>Cygwin),<sp/>it<sp/>can</highlight></codeline>
<codeline lineno="175"><highlight class="comment">create<sp/>a<sp/>Makefile-based<sp/>environment.<sp/><sp/>It<sp/>can<sp/>also<sp/>create<sp/>projects<sp/>for</highlight></codeline>
<codeline lineno="176"><highlight class="comment">the<sp/>KDevelop,<sp/>Code::Blocks,<sp/>and<sp/>QtCreator<sp/>IDEs,<sp/>among<sp/>others,<sp/>and<sp/>has</highlight></codeline>
<codeline lineno="177"><highlight class="comment">some<sp/>support<sp/>for<sp/>Eclipse<sp/>as<sp/>well.<sp/>On<sp/>MacOS,<sp/>it<sp/>can<sp/>create<sp/>Xcode</highlight></codeline>
<codeline lineno="178"><highlight class="comment">projects.<sp/><sp/>On<sp/>Windows,<sp/>it<sp/>can<sp/>create<sp/>Visual<sp/>Studio<sp/>projects,<sp/>and<sp/>it</highlight></codeline>
<codeline lineno="179"><highlight class="comment">can<sp/>also<sp/>create<sp/>a<sp/>Makefile-based<sp/>environment<sp/>for<sp/>use<sp/>with<sp/>Visual</highlight></codeline>
<codeline lineno="180"><highlight class="comment">Studio&apos;s<sp/>nmake<sp/>utility.<sp/>See<sp/>CMake&apos;s<sp/>documentation<sp/>for<sp/>more<sp/>details<sp/>and</highlight></codeline>
<codeline lineno="181"><highlight class="comment">other<sp/>supported<sp/>build<sp/>environments.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment">This<sp/>guide<sp/>will<sp/>focus<sp/>on<sp/>a<sp/>Makefile<sp/>environment,<sp/>but<sp/>it<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="184"><highlight class="comment">equally<sp/>applicable<sp/>to<sp/>all<sp/>others.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment">CMake<sp/>encourages<sp/>the<sp/>use<sp/>of<sp/>&quot;out-of-source&quot;<sp/>builds;<sp/>that<sp/>is,<sp/>all<sp/>files</highlight></codeline>
<codeline lineno="187"><highlight class="comment">that<sp/>are<sp/>generated<sp/>by<sp/>the<sp/>build<sp/>are<sp/>created<sp/>in<sp/>a<sp/>directory<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="188"><highlight class="comment">separate<sp/>from<sp/>the<sp/>source<sp/>code.<sp/>This<sp/>is<sp/>good<sp/>practice.<sp/>One<sp/>common</highlight></codeline>
<codeline lineno="189"><highlight class="comment">convention<sp/>is<sp/>to<sp/>create<sp/>a<sp/>directory<sp/>named<sp/>&lt;tt&gt;build&lt;/tt&gt;<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="190"><highlight class="comment">subdirectory<sp/>of<sp/>the<sp/>top-level<sp/>directory<sp/>of<sp/>the<sp/>project,<sp/>so<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="191"><highlight class="comment">command-line,<sp/>execute<sp/>the<sp/>following<sp/>commands<sp/>from<sp/>your<sp/>project</highlight></codeline>
<codeline lineno="192"><highlight class="comment">directory:</highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="195"><highlight class="comment">mkdir<sp/>build</highlight></codeline>
<codeline lineno="196"><highlight class="comment">cd<sp/>build</highlight></codeline>
<codeline lineno="197"><highlight class="comment">cmake<sp/>..</highlight></codeline>
<codeline lineno="198"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment">The<sp/>&lt;tt&gt;cmake<sp/>..&lt;/tt&gt;<sp/>command<sp/>tells<sp/>CMake<sp/>to<sp/>create<sp/>a<sp/>build</highlight></codeline>
<codeline lineno="201"><highlight class="comment">environment<sp/>based<sp/>on<sp/>the<sp/>source<sp/>directory<sp/>&lt;tt&gt;..&lt;/tt&gt;,<sp/>that<sp/>is,<sp/>the</highlight></codeline>
<codeline lineno="202"><highlight class="comment">parent<sp/>directory.<sp/>You<sp/>could<sp/>also<sp/>create<sp/>your<sp/>build<sp/>directory<sp/>anywhere</highlight></codeline>
<codeline lineno="203"><highlight class="comment">on<sp/>the<sp/>system,<sp/>in<sp/>which<sp/>case,<sp/>you<sp/>simply<sp/>provide<sp/>the<sp/>full<sp/>absolute<sp/>or</highlight></codeline>
<codeline lineno="204"><highlight class="comment">relative<sp/>path<sp/>to<sp/>your<sp/>source<sp/>directory<sp/>as<sp/>the<sp/>argument<sp/>to</highlight></codeline>
<codeline lineno="205"><highlight class="comment">&lt;tt&gt;cmake&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment">If<sp/>you<sp/>have<sp/>Zorba<sp/>installed<sp/>in<sp/>a<sp/>standard<sp/>system-wide<sp/>location,<sp/>the</highlight></codeline>
<codeline lineno="208"><highlight class="comment">above<sp/>will<sp/>likely<sp/>be<sp/>all<sp/>you<sp/>need<sp/>to<sp/>do.<sp/>However,<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="209"><highlight class="comment">&lt;tt&gt;cmake&lt;/tt&gt;<sp/>step<sp/>does<sp/>not<sp/>find<sp/>Zorba,<sp/>you<sp/>can<sp/>point<sp/>CMake<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="210"><highlight class="comment">right<sp/>direction<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="211"><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="213"><highlight class="comment">cmake<sp/>-DCMAKE_PREFIX_PATH=/path/to/zorbaroot<sp/>..</highlight></codeline>
<codeline lineno="214"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="215"><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment">&quot;zorbaroot&quot;<sp/>is<sp/>the<sp/>root<sp/>directory<sp/>of<sp/>a<sp/>Zorba<sp/>installation;<sp/>it<sp/>should</highlight></codeline>
<codeline lineno="217"><highlight class="comment">contain<sp/>&lt;tt&gt;bin/zorba&lt;/tt&gt;<sp/>(&lt;tt&gt;bin/zorba.exe&lt;/tt&gt;<sp/>on<sp/>Windows)<sp/>among</highlight></codeline>
<codeline lineno="218"><highlight class="comment">other<sp/>files.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"></highlight></codeline>
<codeline lineno="220"><highlight class="comment">The<sp/>default<sp/>build<sp/>configuration<sp/>for<sp/>CMake<sp/>is<sp/>&quot;Unix<sp/>Makefiles&quot;.<sp/>If<sp/>you</highlight></codeline>
<codeline lineno="221"><highlight class="comment">are<sp/>building<sp/>using<sp/>a<sp/>different<sp/>tool<sp/>set,<sp/>you<sp/>must<sp/>provide<sp/>the</highlight></codeline>
<codeline lineno="222"><highlight class="comment">&lt;tt&gt;-G&lt;/tt&gt;<sp/>option<sp/>to<sp/>&lt;tt&gt;cmake&lt;/tt&gt;.<sp/>For<sp/>example,<sp/>if<sp/>you<sp/>wish<sp/>to</highlight></codeline>
<codeline lineno="223"><highlight class="comment">create<sp/>a<sp/>Visual<sp/>Studio<sp/>10<sp/>project,<sp/>use:</highlight></codeline>
<codeline lineno="224"><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="226"><highlight class="comment">cmake<sp/>-G&quot;Visual<sp/>Studio<sp/>10&quot;<sp/>..</highlight></codeline>
<codeline lineno="227"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="228"><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment">No<sp/>matter<sp/>what<sp/>your<sp/>eventual<sp/>&lt;tt&gt;cmake&lt;/tt&gt;<sp/>command<sp/>line<sp/>ends<sp/>up</highlight></codeline>
<codeline lineno="230"><highlight class="comment">being,<sp/>the<sp/>nice<sp/>thing<sp/>is<sp/>you<sp/>will<sp/>only<sp/>need<sp/>to<sp/>execute<sp/>it<sp/>once.<sp/><sp/>From</highlight></codeline>
<codeline lineno="231"><highlight class="comment">that<sp/>point<sp/>on,<sp/>you<sp/>can<sp/>simply<sp/>invoke<sp/>the<sp/>default<sp/>build<sp/>target<sp/>in</highlight></codeline>
<codeline lineno="232"><highlight class="comment">whatever<sp/>build<sp/>environment<sp/>you<sp/>have<sp/>created.<sp/>CMake<sp/>sets<sp/>up<sp/>all</highlight></codeline>
<codeline lineno="233"><highlight class="comment">dependencies<sp/>correctly,<sp/>and<sp/>will<sp/>automatically<sp/>re-invoke<sp/>itself<sp/>if<sp/>you</highlight></codeline>
<codeline lineno="234"><highlight class="comment">modify<sp/>the<sp/>&lt;tt&gt;CMakeLists.txt&lt;/tt&gt;<sp/>file<sp/>or<sp/>make<sp/>any<sp/>other<sp/>changes</highlight></codeline>
<codeline lineno="235"><highlight class="comment">which<sp/>would<sp/>require<sp/>&lt;tt&gt;cmake&lt;/tt&gt;<sp/>to<sp/>generate<sp/>the<sp/>build<sp/>environment</highlight></codeline>
<codeline lineno="236"><highlight class="comment">again.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"></highlight></codeline>
<codeline lineno="238"><highlight class="comment">So,<sp/>go<sp/>ahead<sp/>and<sp/>build!<sp/>For<sp/>Unix<sp/>Makefiles,<sp/>just<sp/>type:</highlight></codeline>
<codeline lineno="239"><highlight class="comment"></highlight></codeline>
<codeline lineno="240"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="241"><highlight class="comment">make</highlight></codeline>
<codeline lineno="242"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="243"><highlight class="comment"></highlight></codeline>
<codeline lineno="244"><highlight class="comment">\section<sp/>mod_author_built<sp/>What<sp/>Happens<sp/>When<sp/>You<sp/>Build?</highlight></codeline>
<codeline lineno="245"><highlight class="comment"></highlight></codeline>
<codeline lineno="246"><highlight class="comment">For<sp/>this<sp/>very<sp/>simple<sp/>module<sp/>project,<sp/>not<sp/>much<sp/>happens<sp/>when<sp/>you<sp/>build.</highlight></codeline>
<codeline lineno="247"><highlight class="comment">You<sp/>will<sp/>probably<sp/>see<sp/>output<sp/>similar<sp/>to<sp/>this:</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="250"><highlight class="comment">Scanning<sp/>dependencies<sp/>of<sp/>target<sp/>check_uris</highlight></codeline>
<codeline lineno="251"><highlight class="comment">[<sp/><sp/>0%]<sp/>Copying<sp/>/tmp/myproject/mymod.xq<sp/>to<sp/>URI<sp/>path</highlight></codeline>
<codeline lineno="252"><highlight class="comment">[100%]<sp/>Built<sp/>target<sp/>check_uris</highlight></codeline>
<codeline lineno="253"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="254"><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment">The<sp/>primary<sp/>result<sp/>of<sp/>building<sp/>this<sp/>project<sp/>is<sp/>that<sp/>a<sp/>directory<sp/>named</highlight></codeline>
<codeline lineno="256"><highlight class="comment">(by<sp/>default)<sp/>&lt;tt&gt;URI_PATH&lt;/tt&gt;<sp/>will<sp/>be<sp/>created<sp/>in<sp/>your<sp/>build</highlight></codeline>
<codeline lineno="257"><highlight class="comment">directory,<sp/>containing<sp/>all<sp/>of<sp/>your<sp/>declared<sp/>modules<sp/>and<sp/>schemas<sp/>in<sp/>an</highlight></codeline>
<codeline lineno="258"><highlight class="comment">appropriate<sp/>directory<sp/>structure<sp/>for<sp/>Zorba&apos;s<sp/>URI<sp/>resolution<sp/>mechanism</highlight></codeline>
<codeline lineno="259"><highlight class="comment">(see<sp/>\ref<sp/>uriresolvers).<sp/>This<sp/>means<sp/>that<sp/>we<sp/>can<sp/>eliminate<sp/>the<sp/>&lt;tt&gt;at</highlight></codeline>
<codeline lineno="260"><highlight class="comment">&quot;...&quot;&lt;/tt&gt;<sp/>clause<sp/>from<sp/>our<sp/>test<sp/>query<sp/>which<sp/>imports<sp/>this<sp/>module:</highlight></codeline>
<codeline lineno="261"><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="263"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>&quot;http://zorba.io/mymod&quot;;</highlight></codeline>
<codeline lineno="264"><highlight class="comment"></highlight></codeline>
<codeline lineno="265"><highlight class="comment">mymod:hello()</highlight></codeline>
<codeline lineno="266"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="267"><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment">and<sp/>then<sp/>execute<sp/>Zorba<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="269"><highlight class="comment"></highlight></codeline>
<codeline lineno="270"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="271"><highlight class="comment">%<sp/>zorba<sp/>--uri-path<sp/>/tmp/myproject/build/URI_PATH<sp/>-f<sp/>-q<sp/>query.xq</highlight></codeline>
<codeline lineno="272"><highlight class="comment">&lt;?xml<sp/>version=&quot;1.0&quot;<sp/>encoding=&quot;UTF-8&quot;?&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="comment">hello</highlight></codeline>
<codeline lineno="274"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="275"><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment">By<sp/>providing<sp/>this<sp/>one<sp/>&lt;tt&gt;--uri-path&lt;/tt&gt;<sp/>argument,<sp/>Zorba<sp/>will</highlight></codeline>
<codeline lineno="277"><highlight class="comment">automatically<sp/>be<sp/>able<sp/>to<sp/>load<sp/>any<sp/>of<sp/>our<sp/>modules<sp/>or<sp/>schemas<sp/>by<sp/>URI,</highlight></codeline>
<codeline lineno="278"><highlight class="comment">rather<sp/>than<sp/>requiring<sp/>explicit<sp/>filesystem<sp/>paths<sp/>to<sp/>them.<sp/>This<sp/>makes<sp/>it</highlight></codeline>
<codeline lineno="279"><highlight class="comment">much<sp/>easier<sp/>to<sp/>develop<sp/>larger<sp/>XQuery<sp/>applications,<sp/>because<sp/>the<sp/>entire</highlight></codeline>
<codeline lineno="280"><highlight class="comment">application<sp/>can<sp/>be<sp/>moved<sp/>around<sp/>easily,<sp/>and<sp/>you<sp/>won&apos;t<sp/>need<sp/>to<sp/>edit<sp/>all</highlight></codeline>
<codeline lineno="281"><highlight class="comment">of<sp/>your<sp/>queries<sp/>to<sp/>change<sp/>the<sp/>paths<sp/>to<sp/>load<sp/>your<sp/>modules<sp/>as<sp/>you<sp/>move</highlight></codeline>
<codeline lineno="282"><highlight class="comment">from<sp/>development<sp/>to<sp/>production.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment">\ref<sp/>modules_authoring_2</highlight></codeline>
<codeline lineno="285"><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment">\ref<sp/>modules_building_in</highlight></codeline>
<codeline lineno="287"><highlight class="comment"></highlight></codeline>
<codeline lineno="288"><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment"></highlight></codeline>
<codeline lineno="290"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/doc/zorba/modules_authoring.dox"/>
  </compounddef>
</doxygen>
