<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="xqddf_8dox" kind="file">
    <compoundname>xqddf.dox</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**<sp/>\page<sp/>xqddf<sp/>Data<sp/>Definition<sp/>Facility</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Zorba<sp/>has<sp/>support<sp/>for<sp/>collections,<sp/>indexes,<sp/>and<sp/>integrity<sp/>constraints.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">This<sp/>is<sp/>accomplished<sp/>via<sp/>a<sp/>combination<sp/>of<sp/>new<sp/>prolog<sp/>declarations,<sp/>new<sp/>kinds<sp/>of<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">expressions<sp/>or<sp/>extensions<sp/>to<sp/>existing<sp/>expressions,</highlight></codeline>
<codeline lineno="6"><highlight class="comment">and<sp/>new<sp/>built-in<sp/>functions.<sp/>Furthermore,<sp/>both<sp/>the<sp/>static<sp/>and<sp/>the<sp/>dynamic</highlight></codeline>
<codeline lineno="7"><highlight class="comment">contexts<sp/>are<sp/>extended<sp/>with<sp/>new<sp/>components<sp/>that<sp/>store<sp/>information<sp/>about</highlight></codeline>
<codeline lineno="8"><highlight class="comment">collections,<sp/>indexes,<sp/>and<sp/>integrity<sp/>constraints.<sp/>Collectively,<sp/>all<sp/>these</highlight></codeline>
<codeline lineno="9"><highlight class="comment">extensions<sp/>are<sp/>called<sp/>the<sp/>&lt;strong&gt;Data<sp/>Definition<sp/>Facility&lt;/strong&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">\n<sp/>\n<sp/>As<sp/>part<sp/>of<sp/>the<sp/>implementation,<sp/>Zorba<sp/>includes<sp/>new<sp/>&quot;built-in&quot;<sp/>modules</highlight></codeline>
<codeline lineno="12"><highlight class="comment">that<sp/>contain<sp/>the<sp/>declarations<sp/>of<sp/>all<sp/>the<sp/>new<sp/>built-in<sp/>functions<sp/>to<sp/>manage<sp/>(ddl)</highlight></codeline>
<codeline lineno="13"><highlight class="comment">and<sp/>manipulate<sp/>(dml)<sp/>collections,<sp/>indexes,<sp/>and<sp/>integrity<sp/>constraints.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;a<sp/>href=&quot;/modules/latest/zorba.io/modules/store/static/collections/dml&quot;&gt;http://zorba.io/modules/store/static/collections/dml&lt;/a&gt;<sp/>(prefix:<sp/>cdml)&lt;/li&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;a<sp/>href=&quot;/modules/latest/zorba.io/modules/store/static/collections/ddl&quot;&gt;http://zorba.io/modules/store/static/collections/ddl&lt;/a&gt;<sp/>(prefix:<sp/>cddl)&lt;/li&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;a<sp/>href=&quot;/modules/latest/zorba.io/modules/store/static/indexes/dml&quot;&gt;http://zorba.io/modules/store/static/indexes/dml&lt;/a&gt;<sp/>(prefix:<sp/>idml)&lt;/li&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;a<sp/>href=&quot;/modules/latest/zorba.io/modules/store/static/indexes/ddl&quot;&gt;http://zorba.io/modules/store/static/indexes/ddl&lt;/a&gt;<sp/>(prefix:<sp/>iddl)&lt;/li&gt;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;a<sp/>href=&quot;/modules/latest/zorba.io/modules/store/static/integrity/constraints/dml&quot;&gt;http://zorba.io/modules/store/static/integrity_constraints/dml&lt;/a&gt;<sp/>(prefix:<sp/>icdml)&lt;/li&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;a<sp/>href=&quot;/modules/latest/zorba.io/modules/store/static/integrity/constraints/ddl&quot;&gt;http://zorba.io/modules/store/static/integrity_constraints/ddl&lt;/a&gt;<sp/>(prefix:<sp/>icddl)&lt;/li&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment">As<sp/>usual,<sp/>these<sp/>modules<sp/>must<sp/>be<sp/>imported<sp/>by<sp/>any<sp/>other<sp/>module<sp/>that<sp/>wants<sp/>to<sp/>invoke<sp/>any<sp/>of<sp/>the<sp/>functions.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">\section<sp/>collections<sp/>Collections</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment">&lt;h3&gt;&lt;a<sp/>name=&quot;collection&quot;&gt;Collections&lt;/a&gt;&lt;/h3&gt;<sp/>A<sp/>collection<sp/>is<sp/>defined<sp/>as<sp/>an<sp/>ordered</highlight></codeline>
<codeline lineno="30"><highlight class="comment">set<sp/>of<sp/>documents<sp/>that<sp/>is<sp/>disjoint<sp/>from<sp/>any<sp/>other<sp/>collection<sp/>and<sp/>is<sp/>uniquely</highlight></codeline>
<codeline lineno="31"><highlight class="comment">identified<sp/>by<sp/>a<sp/>QName.<sp/>Furthermore,<sp/>with<sp/>respect<sp/>to<sp/>document<sp/>order,<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="32"><highlight class="comment">order<sp/>of<sp/>two<sp/>nodes<sp/>belonging<sp/>to<sp/>different<sp/>documents<sp/>within<sp/>the<sp/>same<sp/>collection</highlight></codeline>
<codeline lineno="33"><highlight class="comment">is<sp/>defined<sp/>to<sp/>be<sp/>the<sp/>same<sp/>as<sp/>the<sp/>relative<sp/>position<sp/>of<sp/>their<sp/>containing<sp/>documents</highlight></codeline>
<codeline lineno="34"><highlight class="comment">within<sp/>the<sp/>collection.<sp/>We<sp/>will<sp/>say<sp/>that<sp/>a<sp/>node<sp/>belongs<sp/>to<sp/>a<sp/>collection<sp/>if<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="35"><highlight class="comment">inside<sp/>a<sp/>document<sp/>that<sp/>belongs<sp/>to<sp/>that<sp/>collection.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">\n<sp/>\n<sp/>Like<sp/>a<sp/>W3C<sp/>collection,<sp/>an<sp/>&lt;a<sp/>href=&quot;#collection&quot;&gt;collection&lt;/a&gt;<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="38"><highlight class="comment">viewed<sp/>as<sp/>a<sp/>sequence<sp/>of<sp/>nodes:<sp/>it<sp/>is<sp/>the<sp/>sequence<sp/>containing<sp/>the<sp/>root<sp/>nodes<sp/>of</highlight></codeline>
<codeline lineno="39"><highlight class="comment">the<sp/>documents<sp/>that<sp/>belong<sp/>to<sp/>the<sp/>collection<sp/>(and<sp/>as<sp/>we<sp/>will<sp/>see<sp/>later,<sp/>the</highlight></codeline>
<codeline lineno="40"><highlight class="comment">function<sp/>&lt;a<sp/>href=&quot;#cdml_collection&quot;</highlight></codeline>
<codeline lineno="41"><highlight class="comment">title=&quot;cdml:collection&quot;&gt;cdml:collection&lt;/a&gt;<sp/>returns<sp/>exactly<sp/>this<sp/>sequence<sp/>of</highlight></codeline>
<codeline lineno="42"><highlight class="comment">nodes).<sp/>However,<sp/>even<sp/>when<sp/>viewed<sp/>as<sp/>sequences<sp/>of<sp/>nodes,<sp/>&lt;a</highlight></codeline>
<codeline lineno="43"><highlight class="comment">href=&quot;#collection&quot;&gt;collections&lt;/a&gt;<sp/>differ<sp/>from<sp/>W3C<sp/>collections<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="44"><highlight class="comment">following<sp/>ways:</highlight></codeline>
<codeline lineno="45"><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/>&lt;li&gt;They<sp/>contain<sp/>parent-less<sp/>nodes<sp/>only.&lt;/li&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>&lt;li&gt;They<sp/>can<sp/>not<sp/>contain<sp/>any<sp/>duplicate<sp/>nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>&lt;li&gt;Their<sp/>nodes<sp/>are<sp/>in<sp/>document<sp/>order.&lt;/li&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/>&lt;li&gt;A<sp/>node<sp/>can<sp/>not<sp/>be<sp/>contained<sp/>in<sp/>more<sp/>than<sp/>one<sp/>&lt;a<sp/>href=&quot;#collection&quot;&gt;collection&lt;/a&gt;.&lt;/li&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>&lt;li&gt;collections<sp/>are<sp/>identified<sp/>by<sp/>QNames,<sp/>whereas<sp/>W3C<sp/>collections<sp/>are</highlight></codeline>
<codeline lineno="52"><highlight class="comment">identified<sp/>by<sp/>URIs.&lt;/li&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">For<sp/>brevity,<sp/>in<sp/>the<sp/>remaining<sp/>of<sp/>this<sp/>document<sp/>we<sp/>will<sp/>use<sp/>the<sp/>term<sp/>&quot;collection&quot;<sp/>to</highlight></codeline>
<codeline lineno="56"><highlight class="comment">mean<sp/>&lt;a<sp/>href=&quot;#collection&quot;&gt;collection&lt;/a&gt;.<sp/>For<sp/>backward<sp/>compatibility<sp/>with</highlight></codeline>
<codeline lineno="57"><highlight class="comment">the<sp/>W3C<sp/>XQuery<sp/>specification,<sp/>Zorba<sp/>retains<sp/>some<sp/>basic<sp/>support<sp/>for<sp/>W3C</highlight></codeline>
<codeline lineno="58"><highlight class="comment">collections<sp/>(see<sp/>&lt;a<sp/>href=&quot;../modules/latest/zorba.io/modules/store/dynamic/collections/w3c/dml&quot;&gt;http://zorba.io/modules/store/dynamic/collections/w3c/dml&lt;/a&gt;<sp/>and<sp/>&lt;a<sp/>href=&quot;/modules/latest/zorba.io/modules/store/dynamic/collections/w3c/ddl&quot;&gt;http://zorba.io/modules/store/dynamic/collections/w3c/ddl&lt;/a&gt;).</highlight></codeline>
<codeline lineno="59"><highlight class="comment">However,<sp/>users<sp/>are<sp/>encouraged<sp/>to<sp/>use<sp/>&lt;a<sp/>href=&quot;#collection&quot;&gt;collections&lt;/a&gt;<sp/>instead.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">Zorba<sp/>supports<sp/>five<sp/>kinds<sp/>of<sp/>operations<sp/>on<sp/>collections:<sp/>&lt;a</highlight></codeline>
<codeline lineno="62"><highlight class="comment">href=&quot;#collection_declaration&quot;&gt;collection<sp/>declaration&lt;/a&gt;,<sp/>&lt;a</highlight></codeline>
<codeline lineno="63"><highlight class="comment">href=&quot;#creating_collections&quot;&gt;collection<sp/>creation&lt;/a&gt;,<sp/>&lt;a</highlight></codeline>
<codeline lineno="64"><highlight class="comment">href=&quot;#destroying_collections&quot;&gt;collection<sp/>deletion&lt;/a&gt;,<sp/>&lt;a</highlight></codeline>
<codeline lineno="65"><highlight class="comment">href=&quot;#updating_collections&quot;&gt;collection<sp/>update&lt;/a&gt;,<sp/>and<sp/>&lt;a</highlight></codeline>
<codeline lineno="66"><highlight class="comment">href=&quot;#accessing_collections&quot;&gt;node<sp/>retrieval&lt;/a&gt;.<sp/>These<sp/>are<sp/>explained<sp/>briefly<sp/>in</highlight></codeline>
<codeline lineno="67"><highlight class="comment">the<sp/>following<sp/>simple<sp/>example.<sp/>Full<sp/>details<sp/>for<sp/>each<sp/>operation<sp/>are<sp/>provided<sp/>in</highlight></codeline>
<codeline lineno="68"><highlight class="comment">the<sp/>subsequent<sp/>chapters.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">\subsection<sp/>collections_in_action<sp/>Collections<sp/>in<sp/>action<sp/>-<sp/>A<sp/>simple<sp/>example</highlight></codeline>
<codeline lineno="71"><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">\n<sp/>Let<sp/>us<sp/>assume<sp/>an<sp/>application<sp/>that<sp/>models<sp/>a<sp/>news<sp/>organization.<sp/>The<sp/>application</highlight></codeline>
<codeline lineno="73"><highlight class="comment">models<sp/>its<sp/>data<sp/>as<sp/>XML<sp/>documents<sp/>grouped<sp/>into<sp/>collections<sp/>of<sp/>logically<sp/>related</highlight></codeline>
<codeline lineno="74"><highlight class="comment">entities.<sp/>In<sp/>this<sp/>example,<sp/>we<sp/>show<sp/>how<sp/>three<sp/>such<sp/>collections<sp/>may<sp/>be<sp/>created<sp/>and</highlight></codeline>
<codeline lineno="75"><highlight class="comment">used;<sp/>the<sp/>first<sp/>collection<sp/>contains<sp/>employee<sp/>data,<sp/>the<sp/>second<sp/>contains<sp/>news</highlight></codeline>
<codeline lineno="76"><highlight class="comment">articles,<sp/>and<sp/>the<sp/>third<sp/>contains<sp/>information<sp/>about<sp/>the<sp/>months<sp/>of<sp/>the<sp/>year<sp/>(e.g.,</highlight></codeline>
<codeline lineno="77"><highlight class="comment">the<sp/>name,<sp/>number<sp/>of<sp/>days,<sp/>and<sp/>fixed<sp/>holidays<sp/>for<sp/>each<sp/>month).</highlight></codeline>
<codeline lineno="78"><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">\n<sp/>\n<sp/>Before<sp/>a<sp/>collection<sp/>can<sp/>be<sp/>created,<sp/>it<sp/>must<sp/>be<sp/>declared.<sp/>A<sp/>&lt;strong&gt;collection</highlight></codeline>
<codeline lineno="80"><highlight class="comment">declaration&lt;/strong&gt;<sp/>describes<sp/>the<sp/>collection<sp/>by<sp/>providing<sp/>a<sp/>unique<sp/>name<sp/>for<sp/>it</highlight></codeline>
<codeline lineno="81"><highlight class="comment">and<sp/>specifying<sp/>certain<sp/>properties<sp/>(using<sp/>XQuery<sp/>Annotations)<sp/>for<sp/>the<sp/>collection<sp/>itself<sp/>and<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="82"><highlight class="comment">documents<sp/>in<sp/>the<sp/>collection.<sp/>As<sp/>explained<sp/>in<sp/>\ref<sp/>collection_declaration,</highlight></codeline>
<codeline lineno="83"><highlight class="comment">collections<sp/>must<sp/>be<sp/>declared<sp/>inside<sp/>library<sp/>modules.<sp/>In<sp/>terms<sp/>of<sp/>the<sp/>XQuery</highlight></codeline>
<codeline lineno="84"><highlight class="comment">language,<sp/>collection<sp/>declarations<sp/>become<sp/>part<sp/>of<sp/>a<sp/>module&apos;s<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">\n<sp/>\n<sp/>In<sp/>this<sp/>example,<sp/>the<sp/>declarations<sp/>are<sp/>placed<sp/>inside<sp/>the<sp/>&lt;a</highlight></codeline>
<codeline lineno="87"><highlight class="comment">href=&quot;#lib_module_news_data_collections&quot;<sp/>title=&quot;news-data&quot;&gt;&quot;news-data&quot;&lt;/a&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="comment">library<sp/>module<sp/>(shown<sp/>below).<sp/>The<sp/>declarations<sp/>assign<sp/>the<sp/>names</highlight></codeline>
<codeline lineno="89"><highlight class="comment">news-data:employees,<sp/>news-data:articles,<sp/>and<sp/>news-data:months<sp/>to<sp/>the<sp/>three</highlight></codeline>
<codeline lineno="90"><highlight class="comment">collections,<sp/>respectively.<sp/>Documents<sp/>in<sp/>both<sp/>the<sp/>employees<sp/>and<sp/>the<sp/>months</highlight></codeline>
<codeline lineno="91"><highlight class="comment">collections<sp/>are<sp/>assumed<sp/>to<sp/>have<sp/>a<sp/>well-known<sp/>structure,<sp/>which<sp/>is<sp/>reflected<sp/>in<sp/>an</highlight></codeline>
<codeline lineno="92"><highlight class="comment">XML<sp/>schema<sp/>(&quot;news-schema&quot;).<sp/>The<sp/>schema<sp/>declares<sp/>two<sp/>global<sp/>elements<sp/>for</highlight></codeline>
<codeline lineno="93"><highlight class="comment">employees<sp/>and<sp/>months<sp/>respectively.<sp/>Accordingly,<sp/>the<sp/>collection<sp/>declarations<sp/>for</highlight></codeline>
<codeline lineno="94"><highlight class="comment">employees<sp/>and<sp/>months<sp/>specify<sp/>that<sp/>their<sp/>root<sp/>nodes<sp/>are<sp/>elements<sp/>whose<sp/>name<sp/>and</highlight></codeline>
<codeline lineno="95"><highlight class="comment">type<sp/>matches<sp/>the<sp/>name<sp/>and<sp/>type<sp/>of<sp/>the<sp/>corresponding<sp/>global<sp/>element<sp/>declarations</highlight></codeline>
<codeline lineno="96"><highlight class="comment">in<sp/>&quot;news-schema&quot;.<sp/>In<sp/>contrast,<sp/>articles<sp/>may<sp/>come<sp/>from<sp/>various<sp/>sources<sp/>(including</highlight></codeline>
<codeline lineno="97"><highlight class="comment">external<sp/>ones),<sp/>and<sp/>as<sp/>a<sp/>result,<sp/>article<sp/>documents<sp/>do<sp/>not<sp/>have<sp/>any<sp/>particular</highlight></codeline>
<codeline lineno="98"><highlight class="comment">schema.<sp/>Therefore,<sp/>the<sp/>declaration<sp/>for<sp/>the<sp/>articles<sp/>collection<sp/>specifies<sp/>node()</highlight></codeline>
<codeline lineno="99"><highlight class="comment">as<sp/>the<sp/>type<sp/>of<sp/>the<sp/>root<sp/>nodes.<sp/>Both<sp/>employee<sp/>and<sp/>article<sp/>documents<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="100"><highlight class="comment">updated<sp/>during<sp/>their<sp/>lifetime.<sp/>Instead,<sp/>the<sp/>months-related<sp/>information<sp/>is<sp/>fixed</highlight></codeline>
<codeline lineno="101"><highlight class="comment">(can<sp/>not<sp/>change),<sp/>so<sp/>the<sp/>nodes<sp/>of<sp/>the<sp/>months<sp/>collection<sp/>are<sp/>declared<sp/>as</highlight></codeline>
<codeline lineno="102"><highlight class="comment">&apos;%an:read-only-nodes&apos;.<sp/>Furthermore,<sp/>the<sp/>collection<sp/>itself<sp/>is<sp/>declared<sp/>&apos;%an:const&apos;,<sp/>meaning</highlight></codeline>
<codeline lineno="103"><highlight class="comment">that<sp/>no<sp/>months<sp/>may<sp/>be<sp/>added<sp/>to<sp/>or<sp/>deleted<sp/>from<sp/>this<sp/>collection<sp/>after<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="104"><highlight class="comment">created<sp/>and<sp/>initialized.<sp/>Finally,<sp/>we<sp/>want<sp/>the<sp/>order<sp/>of<sp/>the<sp/>month<sp/>documents</highlight></codeline>
<codeline lineno="105"><highlight class="comment">within<sp/>their<sp/>containing<sp/>collection<sp/>to<sp/>be<sp/>the<sp/>same<sp/>as<sp/>the<sp/>actual<sp/>order<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="106"><highlight class="comment">months<sp/>within<sp/>the<sp/>year.<sp/>To<sp/>achieve<sp/>this,<sp/>we<sp/>have<sp/>to<sp/>declare<sp/>the<sp/>collection<sp/>as</highlight></codeline>
<codeline lineno="107"><highlight class="comment">&quot;ordered&quot;,<sp/>so<sp/>that<sp/>when<sp/>we<sp/>later<sp/>insert<sp/>the<sp/>month<sp/>documents<sp/>in<sp/>the<sp/>collection,</highlight></codeline>
<codeline lineno="108"><highlight class="comment">the<sp/>system<sp/>will<sp/>store<sp/>and<sp/>return<sp/>them<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>their<sp/>insertion</highlight></codeline>
<codeline lineno="109"><highlight class="comment">order.<sp/>In<sp/>contrast,<sp/>the<sp/>position<sp/>of<sp/>employees<sp/>or<sp/>articles<sp/>inside<sp/>their</highlight></codeline>
<codeline lineno="110"><highlight class="comment">respective<sp/>collections<sp/>does<sp/>not<sp/>have<sp/>any<sp/>special<sp/>meaning<sp/>for<sp/>the<sp/>application,<sp/>so</highlight></codeline>
<codeline lineno="111"><highlight class="comment">the<sp/>corresponding<sp/>declarations<sp/>do<sp/>not<sp/>specify<sp/>any<sp/>ordering<sp/>property.<sp/>This<sp/>allows</highlight></codeline>
<codeline lineno="112"><highlight class="comment">the<sp/>system<sp/>to<sp/>store<sp/>and<sp/>access<sp/>the<sp/>contents<sp/>of<sp/>these<sp/>collections<sp/>in<sp/>what<sp/>it</highlight></codeline>
<codeline lineno="113"><highlight class="comment">considers<sp/>as<sp/>the<sp/>most<sp/>optimal<sp/>order.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment">&lt;a<sp/>name=&quot;lib_module_news_data_collections&quot;</highlight></codeline>
<codeline lineno="116"><highlight class="comment">id=&quot;lib_module_news_data_collections&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;news-data&quot;<sp/>Library<sp/>Module<sp/>:)</highlight></codeline>
<codeline lineno="119"><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;;</highlight></codeline>
<codeline lineno="121"><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/>import<sp/>schema<sp/>namespace<sp/>news-schemas<sp/>=<sp/>&quot;http://www.news.org/schemas&quot;;</highlight></codeline>
<codeline lineno="123"><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/>declare<sp/>namespace<sp/>an<sp/>=<sp/>&quot;http://zorba.io/annotations&quot;;</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/>declare<sp/>collection<sp/>news-data:employees<sp/>as<sp/>schema-element(news-schema:employee)*;</highlight></codeline>
<codeline lineno="127"><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/>declare<sp/>collection<sp/>news-data:articles<sp/>as<sp/>node()*;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/>declare<sp/>%an:const<sp/>%an:ordered<sp/>%an:read-only-nodes<sp/>collection<sp/>news-data:months</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>schema-element(news-schema:month)*;</highlight></codeline>
<codeline lineno="132"><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:employees<sp/>:=<sp/>xs:QName(&quot;news-data:employees&quot;);</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:articles<sp/>:=<sp/>xs:QName(&quot;news-data:articles&quot;);</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:months<sp/>:=<sp/>xs:QName(&quot;news-data:months&quot;);</highlight></codeline>
<codeline lineno="136"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="137"><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment">Having<sp/>been<sp/>declared,<sp/>the<sp/>collections<sp/>can<sp/>now<sp/>be<sp/>created.<sp/>&lt;strong&gt;Collection</highlight></codeline>
<codeline lineno="139"><highlight class="comment">creation&lt;/strong&gt;<sp/>is<sp/>illustrated<sp/>by<sp/>the<sp/>&quot;admin-script-1&quot;<sp/>script<sp/>shown<sp/>below.</highlight></codeline>
<codeline lineno="140"><highlight class="comment">First,<sp/>the<sp/>collection<sp/>descriptions<sp/>must<sp/>be<sp/>made<sp/>visible<sp/>to<sp/>the<sp/>script.<sp/>This<sp/>is</highlight></codeline>
<codeline lineno="141"><highlight class="comment">done<sp/>by<sp/>importing<sp/>the<sp/>&lt;a<sp/>href=&quot;#lib_module_news_data_collections&quot;</highlight></codeline>
<codeline lineno="142"><highlight class="comment">title=&quot;news-data&quot;&gt;&quot;news-data&quot;&lt;/a&gt;<sp/>library<sp/>module<sp/>that<sp/>contains<sp/>the<sp/>collection</highlight></codeline>
<codeline lineno="143"><highlight class="comment">declarations.<sp/>Then,<sp/>the<sp/>collections<sp/>are<sp/>created<sp/>by<sp/>calling<sp/>the</highlight></codeline>
<codeline lineno="144"><highlight class="comment">cddl:create<sp/>function.<sp/>There<sp/>are<sp/>two<sp/>versions<sp/>of<sp/>this<sp/>function:<sp/>the</highlight></codeline>
<codeline lineno="145"><highlight class="comment">first<sp/>takes<sp/>a<sp/>QName<sp/>as<sp/>input<sp/>and<sp/>the<sp/>second<sp/>takes<sp/>both<sp/>a<sp/>QName<sp/>and<sp/>a</highlight></codeline>
<codeline lineno="146"><highlight class="comment">node-producing<sp/>expression.<sp/>In<sp/>the<sp/>first<sp/>version,<sp/>an<sp/>empty<sp/>document<sp/>container<sp/>is</highlight></codeline>
<codeline lineno="147"><highlight class="comment">created<sp/>by<sp/>Zorba&apos;s<sp/>storage<sp/>system<sp/>and<sp/>registered<sp/>inside<sp/>a<sp/>&lt;strong&gt;collections</highlight></codeline>
<codeline lineno="148"><highlight class="comment">table&lt;/strong&gt;<sp/>that<sp/>maps<sp/>collection<sp/>names<sp/>to<sp/>document<sp/>containers.<sp/>In<sp/>the<sp/>second</highlight></codeline>
<codeline lineno="149"><highlight class="comment">version,<sp/>the<sp/>given<sp/>expression<sp/>is<sp/>evaluated<sp/>first,<sp/>and<sp/>(deep)<sp/>copies<sp/>are<sp/>made<sp/>of</highlight></codeline>
<codeline lineno="150"><highlight class="comment">the<sp/>nodes<sp/>in<sp/>the<sp/>result<sp/>sequence.<sp/>This<sp/>way,<sp/>a<sp/>sequence<sp/>of<sp/>distinct<sp/>documents<sp/>is</highlight></codeline>
<codeline lineno="151"><highlight class="comment">produced.<sp/>This<sp/>is<sp/>called<sp/>the<sp/>&quot;insertion<sp/>sequence&quot;.<sp/>Then,<sp/>as<sp/>in<sp/>the<sp/>first<sp/>version</highlight></codeline>
<codeline lineno="152"><highlight class="comment">of<sp/>the<sp/>function,<sp/>the<sp/>document<sp/>container<sp/>is<sp/>created<sp/>and<sp/>registered.<sp/>Finally,<sp/>the</highlight></codeline>
<codeline lineno="153"><highlight class="comment">container<sp/>is<sp/>populated<sp/>with<sp/>the<sp/>documents<sp/>in<sp/>the<sp/>insertion<sp/>sequence.<sp/>In</highlight></codeline>
<codeline lineno="154"><highlight class="comment">&quot;admin-script-1&quot;,<sp/>this<sp/>second<sp/>version<sp/>is<sp/>used<sp/>to<sp/>create<sp/>and<sp/>initialize<sp/>the</highlight></codeline>
<codeline lineno="155"><highlight class="comment">months<sp/>collection.<sp/>In<sp/>fact,<sp/>months<sp/>must<sp/>be<sp/>initialized<sp/>during<sp/>creation<sp/>because</highlight></codeline>
<codeline lineno="156"><highlight class="comment">it<sp/>is<sp/>a<sp/>constant<sp/>collection,<sp/>so<sp/>no<sp/>documents<sp/>can<sp/>be<sp/>added<sp/>to<sp/>it<sp/>later.<sp/>The</highlight></codeline>
<codeline lineno="157"><highlight class="comment">months<sp/>are<sp/>inserted<sp/>in<sp/>the<sp/>collection<sp/>in<sp/>the<sp/>order<sp/>from<sp/>January<sp/>to<sp/>December,<sp/>and</highlight></codeline>
<codeline lineno="158"><highlight class="comment">since<sp/>the<sp/>collection<sp/>was<sp/>declared<sp/>as<sp/>&apos;%an:ordered&apos;,<sp/>this<sp/>order<sp/>is<sp/>preserved<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="159"><highlight class="comment">associated<sp/>document<sp/>container.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/>(:<sp/>&quot;admin-script-1&quot;<sp/>:)</highlight></codeline>
<codeline lineno="163"><highlight class="comment"></highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>cddl<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/collections/ddl&quot;;</highlight></codeline>
<codeline lineno="165"><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;;</highlight></codeline>
<codeline lineno="167"><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/>cddl:create($news-data:employees);</highlight></codeline>
<codeline lineno="169"><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/>cddl:create($news-data:articles);</highlight></codeline>
<codeline lineno="171"><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/>cddl:create($news-data:months,<sp/>(&lt;month<sp/>name=&quot;Jan&quot;&gt;...&lt;/month&gt;,<sp/>...,<sp/>&lt;month<sp/>name=&quot;Dec&quot;&gt;...&lt;/month&gt;));</highlight></codeline>
<codeline lineno="173"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="174"><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">The<sp/>next<sp/>script<sp/>(&quot;user-script-1&quot;)<sp/>shows<sp/>how<sp/>collections<sp/>may<sp/>be<sp/>used.<sp/>First<sp/>the</highlight></codeline>
<codeline lineno="176"><highlight class="comment">necessary<sp/>modules<sp/>and<sp/>schemas<sp/>are<sp/>imported.<sp/>Next,<sp/>the<sp/>employees<sp/>collection<sp/>is</highlight></codeline>
<codeline lineno="177"><highlight class="comment">populated<sp/>using<sp/>the<sp/>cdml:insert-nodes<sp/>function.<sp/>The<sp/>first<sp/>argument<sp/>to<sp/>this</highlight></codeline>
<codeline lineno="178"><highlight class="comment">function<sp/>is<sp/>the<sp/>QName<sp/>of<sp/>a<sp/>collection,<sp/>and<sp/>the<sp/>second<sp/>is<sp/>a<sp/>node-producing</highlight></codeline>
<codeline lineno="179"><highlight class="comment">expression<sp/>(called<sp/>the<sp/>source<sp/>expression).<sp/>The<sp/>QName<sp/>is<sp/>used<sp/>to<sp/>lookup<sp/>the</highlight></codeline>
<codeline lineno="180"><highlight class="comment">collection<sp/>declaration<sp/>and<sp/>the<sp/>collection<sp/>itself<sp/>(i.e.,<sp/>its<sp/>document<sp/>container).</highlight></codeline>
<codeline lineno="181"><highlight class="comment">Then,<sp/>the<sp/>nodes<sp/>produced<sp/>by<sp/>the<sp/>source<sp/>expression<sp/>(source<sp/>nodes)<sp/>are<sp/>copied<sp/>and</highlight></codeline>
<codeline lineno="182"><highlight class="comment">the<sp/>copies<sp/>are<sp/>added<sp/>to<sp/>the<sp/>document<sp/>container,<sp/>making<sp/>sure<sp/>that<sp/>the<sp/>actual<sp/>type</highlight></codeline>
<codeline lineno="183"><highlight class="comment">of<sp/>each<sp/>node<sp/>matches<sp/>the<sp/>static<sp/>type<sp/>found<sp/>in<sp/>the<sp/>collection<sp/>declaration.</highlight></codeline>
<codeline lineno="184"><highlight class="comment">Copying<sp/>the<sp/>source<sp/>nodes<sp/>(and<sp/>their<sp/>sub-trees)<sp/>guarantees<sp/>that<sp/>the<sp/>nodes<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="185"><highlight class="comment">insertion<sp/>sequence<sp/>are<sp/>indeed<sp/>parent-less<sp/>nodes<sp/>that<sp/>do<sp/>not<sp/>belong<sp/>to<sp/>any<sp/>other</highlight></codeline>
<codeline lineno="186"><highlight class="comment">collection<sp/>already<sp/>and<sp/>are<sp/>distinct<sp/>from<sp/>each<sp/>other.<sp/>Notice<sp/>that<sp/>the<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="187"><highlight class="comment">validate<sp/>the<sp/>root<sp/>nodes<sp/>against<sp/>the<sp/>type<sp/>specified<sp/>in<sp/>the<sp/>collection<sp/>declaration</highlight></codeline>
<codeline lineno="188"><highlight class="comment">is<sp/>the<sp/>reason<sp/>why<sp/>the<sp/>&quot;news-schema&quot;<sp/>must<sp/>be<sp/>imported,<sp/>even<sp/>though<sp/>no<sp/>type</highlight></codeline>
<codeline lineno="189"><highlight class="comment">defined<sp/>by<sp/>the<sp/>schema<sp/>is<sp/>referenced<sp/>explicitly<sp/>in<sp/>the<sp/>query.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment">\n<sp/>\n<sp/>In<sp/>this<sp/>example,<sp/>the<sp/>employees<sp/>collection<sp/>is<sp/>populated<sp/>by<sp/>a<sp/>single<sp/>call<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="192"><highlight class="comment">cdml:insert-nodes<sp/>function,<sp/>whose<sp/>source<sp/>expression<sp/>is<sp/>a<sp/>concatenation<sp/>of</highlight></codeline>
<codeline lineno="193"><highlight class="comment">explicitly<sp/>constructed<sp/>documents.<sp/>The<sp/>articles<sp/>collection<sp/>is<sp/>populated<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="194"><highlight class="comment">cdml:insert-nodes<sp/>function<sp/>as<sp/>well,<sp/>but<sp/>in<sp/>a<sp/>slightly<sp/>different<sp/>fashion:<sp/>The</highlight></codeline>
<codeline lineno="195"><highlight class="comment">article<sp/>documents<sp/>are<sp/>assumed<sp/>to<sp/>exist<sp/>already,<sp/>either<sp/>as<sp/>text<sp/>files<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="196"><highlight class="comment">local<sp/>filesystem,<sp/>or<sp/>at<sp/>various<sp/>web<sp/>sites.<sp/>As<sp/>a<sp/>result,<sp/>the<sp/>articles<sp/>collection</highlight></codeline>
<codeline lineno="197"><highlight class="comment">is<sp/>populated<sp/>via<sp/>a<sp/>concatenation<sp/>of<sp/>cdml:insert-function<sp/>calls,<sp/>each<sp/>reading</highlight></codeline>
<codeline lineno="198"><highlight class="comment">and<sp/>parsing<sp/>a<sp/>single<sp/>XML<sp/>document<sp/>and<sp/>inserting<sp/>the<sp/>generated<sp/>XML<sp/>tree<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="199"><highlight class="comment">collection.<sp/>Although<sp/>there<sp/>is<sp/>one<sp/>function<sp/>call<sp/>per<sp/>article,<sp/>the<sp/>articles<sp/>will</highlight></codeline>
<codeline lineno="200"><highlight class="comment">be<sp/>inserted<sp/>all<sp/>together<sp/>in<sp/>an<sp/>atomic<sp/>(all-or-nothing)<sp/>operation,<sp/>when<sp/>the<sp/>&quot;;&quot;</highlight></codeline>
<codeline lineno="201"><highlight class="comment">at<sp/>line<sp/>16<sp/>is<sp/>processed.<sp/>This<sp/>is<sp/>because,<sp/>as<sp/>explained<sp/>in<sp/>\ref</highlight></codeline>
<codeline lineno="202"><highlight class="comment">updating_collections,<sp/>the<sp/>cdml:insert-nodes<sp/>function<sp/>(and<sp/>all<sp/>other<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="comment">functions<sp/>that<sp/>create,<sp/>delete,<sp/>or<sp/>update<sp/>collections)<sp/>is<sp/>an<sp/>//updating</highlight></codeline>
<codeline lineno="204"><highlight class="comment">function//,<sp/>that<sp/>is,<sp/>rather<sp/>than<sp/>applying<sp/>the<sp/>insertion<sp/>immediately,<sp/>it<sp/>produces</highlight></codeline>
<codeline lineno="205"><highlight class="comment">an<sp/>updating<sp/>primitive<sp/>that<sp/>becomes<sp/>part<sp/>of<sp/>a<sp/>pending<sp/>updates<sp/>list<sp/>(PUL),<sp/>which</highlight></codeline>
<codeline lineno="206"><highlight class="comment">is<sp/>applied<sp/>atomically<sp/>when<sp/>the<sp/>next<sp/>&quot;;&quot;<sp/>appears<sp/>in<sp/>the<sp/>program.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment">\n<sp/>\n<sp/>After<sp/>populating<sp/>the<sp/>two<sp/>collections,<sp/>&quot;user-script-1&quot;<sp/>runs<sp/>a<sp/>query<sp/>expression</highlight></codeline>
<codeline lineno="209"><highlight class="comment">that<sp/>uses<sp/>the<sp/>&lt;a<sp/>href=&quot;#cdml_collection&quot;</highlight></codeline>
<codeline lineno="210"><highlight class="comment">title=&quot;cdml:collection&quot;&gt;cdmlcdml:collection&lt;/a&gt;<sp/>function<sp/>to<sp/>access<sp/>their<sp/>root</highlight></codeline>
<codeline lineno="211"><highlight class="comment">nodes.<sp/>The<sp/>expression<sp/>returns,<sp/>for<sp/>each<sp/>journalist,<sp/>the<sp/>articles<sp/>authored<sp/>by</highlight></codeline>
<codeline lineno="212"><highlight class="comment">that<sp/>journalist<sp/>ordered<sp/>by<sp/>their<sp/>date.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment">\n<sp/>\n<sp/>Finally,<sp/>&quot;user-script-1&quot;<sp/>uses<sp/>the<sp/>cdml:remove-nodes<sp/>function<sp/>to<sp/>remove<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="215"><highlight class="comment">articles<sp/>collection<sp/>all<sp/>articles<sp/>that<sp/>were<sp/>published<sp/>before<sp/>2000.<sp/>Like</highlight></codeline>
<codeline lineno="216"><highlight class="comment">cdml:insert-nodes,<sp/>cdml:remove-nodes<sp/>takes<sp/>as<sp/>input<sp/>the<sp/>QName<sp/>of<sp/>a<sp/>collection</highlight></codeline>
<codeline lineno="217"><highlight class="comment">and<sp/>a<sp/>node-producing<sp/>source<sp/>expression.<sp/>The<sp/>source<sp/>nodes<sp/>must<sp/>be<sp/>parent-less</highlight></codeline>
<codeline lineno="218"><highlight class="comment">nodes<sp/>that<sp/>belong<sp/>to<sp/>the<sp/>collection.<sp/>The<sp/>function<sp/>looks<sp/>up<sp/>the<sp/>collection</highlight></codeline>
<codeline lineno="219"><highlight class="comment">declaration<sp/>and<sp/>the<sp/>collection<sp/>container,<sp/>and<sp/>removes<sp/>the<sp/>source<sp/>nodes<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="220"><highlight class="comment">collection<sp/>container.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/>(:<sp/>&quot;user-script-1&quot;:)</highlight></codeline>
<codeline lineno="224"><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>cdml<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/collections/dml&quot;;</highlight></codeline>
<codeline lineno="226"><highlight class="comment"></highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>http<sp/>=<sp/>&quot;http://www.zorba-xquery.com/modules/http-client&quot;;</highlight></codeline>
<codeline lineno="228"><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/>import<sp/>schema<sp/>namespace<sp/>news-schemas<sp/>=<sp/>&quot;http://www.news.org/schemas&quot;;</highlight></codeline>
<codeline lineno="230"><highlight class="comment"></highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;;</highlight></codeline>
<codeline lineno="232"><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/>cdml:insert-nodes($news-data:employees,<sp/>(&lt;employee<sp/>id=&quot;100&quot;&gt;...&lt;/employee&gt;,<sp/>...,<sp/>&lt;employee<sp/>id=&quot;500&quot;&gt;...&lt;/employee&gt;));</highlight></codeline>
<codeline lineno="234"><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/>(</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/>cdml:insert-nodes($news-data:articles,<sp/>doc(&quot;article1.xml&quot;)/article),</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/>cdml:insert-nodes($news-data:articles,<sp/>http:get(&quot;http://www.reuters.com/article234.xhtml&quot;)//article),</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/>....,</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/>cdml:insert-nodes($news-data:articles,<sp/>doc(&quot;article100.xml&quot;)/article)</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="comment"></highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/>for<sp/>$emp<sp/>in<sp/>cdml:collection($news-data:employees)[./position/@kind<sp/>eq<sp/>&quot;journalist&quot;]</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/>let<sp/>$articles<sp/>:=<sp/>for<sp/>$art<sp/>in<sp/>cdml:collection($news-data:articles)[.//author//name<sp/>eq<sp/>$emp/name]</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order<sp/>by<sp/>$art//date</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>$art</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/>return<sp/>&lt;result&gt;{$emp}&lt;articles&gt;{$articles//title}&lt;/articles&gt;&lt;/result&gt;;</highlight></codeline>
<codeline lineno="247"><highlight class="comment"></highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/>cdml:delete-nodes(cdml:collection($news-data:articles)[.//date<sp/>lt<sp/>xs:date(&quot;01/01/2000&quot;)]);</highlight></codeline>
<codeline lineno="249"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="250"><highlight class="comment"></highlight></codeline>
<codeline lineno="251"><highlight class="comment">We<sp/>conclude<sp/>this<sp/>example<sp/>with<sp/>the<sp/>&quot;admin-script-2&quot;<sp/>script,<sp/>which<sp/>simply<sp/>destroys</highlight></codeline>
<codeline lineno="252"><highlight class="comment">the<sp/>collections<sp/>using<sp/>the<sp/>cddl:delete<sp/>function.<sp/>The<sp/>function</highlight></codeline>
<codeline lineno="253"><highlight class="comment">de-registers<sp/>the<sp/>collection<sp/>from<sp/>the<sp/>collections<sp/>table,<sp/>destroys<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="254"><highlight class="comment">documents<sp/>in<sp/>the<sp/>collection<sp/>and<sp/>all<sp/>the<sp/>indexes<sp/>and<sp/>integrity<sp/>constraints</highlight></codeline>
<codeline lineno="255"><highlight class="comment">associated<sp/>the<sp/>collection,<sp/>and<sp/>finally<sp/>destroys<sp/>the<sp/>document<sp/>container<sp/>itself.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"></highlight></codeline>
<codeline lineno="257"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/>(:<sp/>admin-script2<sp/>:)</highlight></codeline>
<codeline lineno="259"><highlight class="comment"></highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>cddl<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/collections/ddl&quot;;</highlight></codeline>
<codeline lineno="261"><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;;</highlight></codeline>
<codeline lineno="263"><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/>cddl:delete($news-data:employees);</highlight></codeline>
<codeline lineno="265"><highlight class="comment"></highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/>cddl:delete($news-data:articles);</highlight></codeline>
<codeline lineno="267"><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/>cddl:delete($news-data:months);</highlight></codeline>
<codeline lineno="269"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="270"><highlight class="comment"></highlight></codeline>
<codeline lineno="271"><highlight class="comment">\subsection<sp/>collection_declaration<sp/>Collection<sp/>Declaration</highlight></codeline>
<codeline lineno="272"><highlight class="comment"></highlight></codeline>
<codeline lineno="273"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/>AnnotatedDecl</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::=<sp/>&apos;declare&apos;<sp/>(<sp/>CompatibilityAnnotation<sp/>|<sp/>Annotation<sp/>)*</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>VarDecl<sp/>|<sp/>FunctionDecl<sp/>|<sp/>CollectionDecl<sp/>|<sp/>IndexDecl<sp/>|<sp/>ICDecl<sp/>)</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/>CollectionDecl<sp/>::=<sp/>&apos;collection&apos;<sp/>EQName<sp/>CollectionTypeDecl?</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/>CollectionTypeDecl<sp/>::=<sp/>&apos;as&apos;<sp/>KindTest<sp/>OccurrenceIndicator?</highlight></codeline>
<codeline lineno="280"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="281"><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment">Collections<sp/>are<sp/>defined<sp/>by<sp/>&lt;strong&gt;collection<sp/>declaration<sp/>statements&lt;/strong&gt;,</highlight></codeline>
<codeline lineno="283"><highlight class="comment">which<sp/>specify<sp/>a<sp/>unique<sp/>name<sp/>for<sp/>a<sp/>collection<sp/>as<sp/>a<sp/>QName,<sp/>a<sp/>set<sp/>of<sp/>collection</highlight></codeline>
<codeline lineno="284"><highlight class="comment">annotations<sp/>(see<sp/>\ref<sp/>collection_index_annotations),<sp/>the<sp/>collection&apos;s<sp/>static<sp/>type.</highlight></codeline>
<codeline lineno="285"><highlight class="comment">Syntactically,<sp/>collection<sp/>declarations<sp/>are<sp/>placed<sp/>inside</highlight></codeline>
<codeline lineno="286"><highlight class="comment">module<sp/>prologs.<sp/>The<sp/>Prolog<sp/>syntax<sp/>is<sp/>extended<sp/>accordingly,<sp/>as<sp/>shown<sp/>above.<sp/>An</highlight></codeline>
<codeline lineno="287"><highlight class="comment">additional<sp/>constraint<sp/>(not<sp/>expressible<sp/>syntactically)<sp/>is<sp/>that<sp/>only<sp/>library</highlight></codeline>
<codeline lineno="288"><highlight class="comment">modules<sp/>may<sp/>contain<sp/>collection<sp/>declarations<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0003&quot;</highlight></codeline>
<codeline lineno="289"><highlight class="comment">title=&quot;zerr:ZDST0003&quot;&gt;zerr:ZDST0003&lt;/a&gt;].<sp/>This<sp/>is<sp/>because<sp/>library<sp/>modules<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="290"><highlight class="comment">shared<sp/>among<sp/>queries,<sp/>whereas<sp/>if<sp/>a<sp/>collection<sp/>was<sp/>declared<sp/>inside<sp/>a<sp/>main<sp/>module,</highlight></codeline>
<codeline lineno="291"><highlight class="comment">then<sp/>every<sp/>other<sp/>query<sp/>that<sp/>would<sp/>like<sp/>to<sp/>use<sp/>this<sp/>collection<sp/>would<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="292"><highlight class="comment">redeclared<sp/>it<sp/>in<sp/>its<sp/>main<sp/>module.<sp/>Worse,<sp/>allowing<sp/>collection<sp/>declarations<sp/>in</highlight></codeline>
<codeline lineno="293"><highlight class="comment">&quot;user&quot;<sp/>queries<sp/>can<sp/>lead<sp/>to<sp/>&quot;data<sp/>leaks&quot;:<sp/>a<sp/>collection<sp/>declared<sp/>and<sp/>created<sp/>by<sp/>a</highlight></codeline>
<codeline lineno="294"><highlight class="comment">user<sp/>query<sp/>and<sp/>not<sp/>destroyed<sp/>by<sp/>the<sp/>same<sp/>query<sp/>will<sp/>be<sp/>unknown<sp/>to<sp/>the<sp/>rest<sp/>of</highlight></codeline>
<codeline lineno="295"><highlight class="comment">the<sp/>application,<sp/>and<sp/>may<sp/>stay<sp/>in<sp/>the<sp/>database<sp/>indefinitely.<sp/>In<sp/>contrast,<sp/>library</highlight></codeline>
<codeline lineno="296"><highlight class="comment">modules<sp/>containing<sp/>declarations<sp/>are<sp/>expected<sp/>to<sp/>be<sp/>under<sp/>the<sp/>jurisdiction</highlight></codeline>
<codeline lineno="297"><highlight class="comment">of<sp/>a<sp/>system<sp/>administrator<sp/>who<sp/>makes<sp/>sure<sp/>that<sp/>queries<sp/>see<sp/>the<sp/>data<sp/>that<sp/>they</highlight></codeline>
<codeline lineno="298"><highlight class="comment">must<sp/>see,<sp/>and<sp/>no<sp/>data<sp/>inconsistencies<sp/>or<sp/>leaks<sp/>can<sp/>arise.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"></highlight></codeline>
<codeline lineno="300"><highlight class="comment">\n<sp/>\n<sp/>To<sp/>accommodate<sp/>collection<sp/>declarations,<sp/>Zorba<sp/>extends<sp/>the<sp/>static<sp/>context<sp/>with<sp/>a</highlight></codeline>
<codeline lineno="301"><highlight class="comment">component<sp/>called<sp/>the<sp/>&lt;strong&gt;statically<sp/>known<sp/>collections&lt;/strong&gt;.<sp/>This<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="302"><highlight class="comment">map<sp/>whose<sp/>entries<sp/>associate<sp/>an<sp/>expanded<sp/>QName<sp/>with<sp/>an<sp/>implementation-dependent</highlight></codeline>
<codeline lineno="303"><highlight class="comment">representation<sp/>of<sp/>the<sp/>information<sp/>contained<sp/>in<sp/>a<sp/>collection<sp/>declaration<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="304"><highlight class="comment">same<sp/>QName.<sp/>The<sp/>effect<sp/>of<sp/>a<sp/>collection<sp/>declaration<sp/>is<sp/>to<sp/>add<sp/>an<sp/>entry<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="305"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>of<sp/>the<sp/>module<sp/>containing<sp/>the<sp/>declaration.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="306"><highlight class="comment">expanded<sp/>QName<sp/>of<sp/>the<sp/>collection<sp/>is<sp/>equal<sp/>(as<sp/>defined<sp/>by<sp/>the<sp/>eq<sp/>operator)<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="307"><highlight class="comment">expanded<sp/>QName<sp/>of<sp/>another<sp/>collection<sp/>in<sp/>the<sp/>statically<sp/>known<sp/>collections<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="308"><highlight class="comment">same<sp/>module,<sp/>a<sp/>static<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0001&quot;</highlight></codeline>
<codeline lineno="309"><highlight class="comment">title=&quot;zerr:ZDST0001&quot;&gt;zerr:ZDST0001&lt;/a&gt;].<sp/>Like<sp/>variables<sp/>and<sp/>functions,<sp/>the</highlight></codeline>
<codeline lineno="310"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>of<sp/>a<sp/>module<sp/>that<sp/>is<sp/>imported<sp/>by<sp/>another<sp/>module<sp/>are</highlight></codeline>
<codeline lineno="311"><highlight class="comment">copied<sp/>into<sp/>the<sp/>statically<sp/>known<sp/>collections<sp/>of<sp/>the<sp/>importing<sp/>module.<sp/>It<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="312"><highlight class="comment">static<sp/>error<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0002&quot;<sp/>title=&quot;zerr:ZDST0002&quot;&gt;zerr:ZDST0002&lt;/a&gt;]<sp/>if</highlight></codeline>
<codeline lineno="313"><highlight class="comment">the<sp/>expanded<sp/>QName<sp/>of<sp/>a<sp/>collection<sp/>declared<sp/>in<sp/>an<sp/>imported<sp/>module<sp/>is<sp/>equal<sp/>(as</highlight></codeline>
<codeline lineno="314"><highlight class="comment">defined<sp/>by<sp/>the<sp/>eq<sp/>operator)<sp/>to<sp/>the<sp/>expanded<sp/>QName<sp/>of<sp/>a<sp/>collection<sp/>declared<sp/>in</highlight></codeline>
<codeline lineno="315"><highlight class="comment">the<sp/>importing<sp/>module<sp/>or<sp/>in<sp/>another<sp/>imported<sp/>module<sp/>(even<sp/>if<sp/>the<sp/>declarations<sp/>are</highlight></codeline>
<codeline lineno="316"><highlight class="comment">consistent).</highlight></codeline>
<codeline lineno="317"><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment">Zorba<sp/>defines<sp/>three<sp/>categories<sp/>of<sp/>collection<sp/>annotations:</highlight></codeline>
<codeline lineno="319"><highlight class="comment"></highlight></codeline>
<codeline lineno="320"><highlight class="comment">&lt;strong&gt;update<sp/>mode&lt;/strong&gt;<sp/>(with<sp/>possible<sp/>values<sp/>&apos;%an:const&apos;,<sp/>&apos;%an:mutable&apos;,<sp/>&apos;%an:append-only&apos;,<sp/>or<sp/>&apos;%an:queue&apos;),</highlight></codeline>
<codeline lineno="321"><highlight class="comment">&lt;strong&gt;ordering<sp/>mode&lt;/strong&gt;<sp/>(with<sp/>possible<sp/>values<sp/>&apos;%an:ordered&apos;<sp/>or<sp/>&apos;%an:unordered&apos;),<sp/>and</highlight></codeline>
<codeline lineno="322"><highlight class="comment">&lt;strong&gt;document<sp/>update<sp/>mode&lt;/strong&gt;<sp/>(with<sp/>possible<sp/>values<sp/>&apos;%an:read-only-nodes&apos;<sp/>and<sp/>&apos;%an:mutable-nodes&apos;).</highlight></codeline>
<codeline lineno="323"><highlight class="comment"></highlight></codeline>
<codeline lineno="324"><highlight class="comment">If<sp/>not<sp/>specified,<sp/>the<sp/>default<sp/>values<sp/>for<sp/>update<sp/>and<sp/>ordering<sp/>mode<sp/>are<sp/>&apos;%an:mutable&apos;<sp/>and<sp/>&apos;%an:unordered&apos;,<sp/>respectively.</highlight></codeline>
<codeline lineno="325"><highlight class="comment">The<sp/>default<sp/>value<sp/>for<sp/>the<sp/>document<sp/>update<sp/>mode<sp/>is<sp/>&apos;%an:mutable-nodes&apos;.</highlight></codeline>
<codeline lineno="326"><highlight class="comment"></highlight></codeline>
<codeline lineno="327"><highlight class="comment">\n<sp/>\n<sp/>It<sp/>is<sp/>a<sp/>static<sp/>error<sp/>[err::XQST0106]<sp/>if<sp/>a<sp/>collection<sp/>declaration<sp/>contains<sp/>more<sp/>than<sp/>one<sp/>value<sp/>for<sp/>the<sp/>same<sp/>property.</highlight></codeline>
<codeline lineno="328"><highlight class="comment">An<sp/>&lt;strong&gt;ordered<sp/>collection&lt;/strong&gt;<sp/>is<sp/>a<sp/>collection<sp/>into<sp/>which<sp/>the<sp/>ordering<sp/>of<sp/>documents<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>meaningful<sp/>for<sp/>the<sp/>application,<sp/>and<sp/>as<sp/>a<sp/>result,<sp/>programmers<sp/>can<sp/>explicitly<sp/>control<sp/>the<sp/>placement<sp/>of<sp/>documents<sp/>via<sp/>appropriate<sp/>updating<sp/>functions.</highlight></codeline>
<codeline lineno="329"><highlight class="comment">In<sp/>contrast,<sp/>the<sp/>ordering<sp/>of<sp/>documents<sp/>inside<sp/>&lt;strong&gt;unordered<sp/>collections&lt;/strong&gt;<sp/>is<sp/>implementation<sp/>dependent,<sp/>but<sp/>stable<sp/>(see<sp/>\ref<sp/>accessing_collections<sp/>for<sp/>details).</highlight></codeline>
<codeline lineno="330"><highlight class="comment">A<sp/>&lt;strong&gt;constant<sp/>collection&lt;/strong&gt;<sp/>is<sp/>one<sp/>that<sp/>is<sp/>created<sp/>with<sp/>an<sp/>initial<sp/>set<sp/>of<sp/>documents<sp/>and</highlight></codeline>
<codeline lineno="331"><highlight class="comment">does<sp/>not<sp/>allow<sp/>any<sp/>subsequent<sp/>insertions<sp/>to<sp/>or<sp/>deletions<sp/>from<sp/>this<sp/>initial<sp/>set.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"></highlight></codeline>
<codeline lineno="333"><highlight class="comment">\n<sp/>\n<sp/>An<sp/>&apos;%an:append-only&apos;<sp/>collection<sp/>does<sp/>not<sp/>allow<sp/>any<sp/>deletions<sp/>at<sp/>all<sp/>and<sp/>restricts<sp/>insertions<sp/>to<sp/>take<sp/>place<sp/>at<sp/>the<sp/>&quot;end&quot;<sp/>only,<sp/>i.e.,<sp/>all<sp/>new<sp/>documents<sp/>must<sp/>be<sp/>inserted<sp/>after<sp/>all<sp/>existing<sp/>ones.</highlight></codeline>
<codeline lineno="334"><highlight class="comment">This<sp/>implies<sp/>a<sp/>user-visible<sp/>document<sp/>ordering,<sp/>and<sp/>as<sp/>a<sp/>result,<sp/>an<sp/>&apos;%an:append-only&apos;<sp/>collection<sp/>must<sp/>also<sp/>be<sp/>declared<sp/>as<sp/>&apos;%an:ordered&apos;<sp/>[err:XQST0106].</highlight></codeline>
<codeline lineno="335"><highlight class="comment">A<sp/>&apos;%an:queue&apos;<sp/>collection<sp/>forbids<sp/>both<sp/>insertions<sp/>and<sp/>deletions<sp/>in/from<sp/>the<sp/>&quot;middle&quot;;<sp/>only<sp/>documents<sp/>at</highlight></codeline>
<codeline lineno="336"><highlight class="comment">the<sp/>front<sp/>of<sp/>the<sp/>collection<sp/>may<sp/>be<sp/>deleted,<sp/>and<sp/>new<sp/>documents<sp/>can<sp/>be<sp/>inserted<sp/>only<sp/>at<sp/>the<sp/>end<sp/>of<sp/>a<sp/>collection.</highlight></codeline>
<codeline lineno="337"><highlight class="comment">Like<sp/>&apos;%an:append-only&apos;,<sp/>&apos;%an:queue&apos;<sp/>collections<sp/>must<sp/>be<sp/>declared<sp/>as<sp/>&apos;%an:ordered&apos;<sp/>[err:XQST0106].</highlight></codeline>
<codeline lineno="338"><highlight class="comment">If<sp/>the<sp/>document<sp/>update<sp/>mode<sp/>of<sp/>a<sp/>collection<sp/>is<sp/>&apos;%an:read-only-nodes&apos;<sp/>then<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0010&quot;<sp/>title=&quot;zerr:ZDDY0010&quot;&gt;zerr:ZDDY0010&lt;/a&gt;]<sp/>every<sp/>time<sp/>a<sp/>node<sp/>of<sp/>the<sp/>collection<sp/>appears<sp/>as<sp/>the<sp/>target<sp/>node<sp/>of<sp/>an<sp/>updating<sp/>expression;<sp/>otherwise<sp/>no<sp/>such<sp/>error<sp/>is<sp/>raised.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"></highlight></codeline>
<codeline lineno="340"><highlight class="comment">In<sp/>addition<sp/>to<sp/>the<sp/>annotations<sp/>described<sp/>above,<sp/>a<sp/>collection<sp/>declaration<sp/>also</highlight></codeline>
<codeline lineno="341"><highlight class="comment">specifies<sp/>the<sp/>&lt;strong&gt;collection<sp/>static<sp/>type&lt;/strong&gt;,<sp/>i.e.,<sp/>the<sp/>static<sp/>type<sp/>for</highlight></codeline>
<codeline lineno="342"><highlight class="comment">the<sp/>result<sp/>of<sp/>the<sp/>&lt;a<sp/>href=&quot;#cdml_collection&quot;</highlight></codeline>
<codeline lineno="343"><highlight class="comment">title=&quot;cdml:collection&quot;&gt;cdml:collection&lt;/a&gt;<sp/>function.<sp/>This<sp/>is<sp/>specified<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="344"><highlight class="comment">sequence<sp/>type<sp/>that<sp/>adheres<sp/>to<sp/>the<sp/>syntax<sp/>and<sp/>semantics<sp/>of<sp/>a<sp/>KindTest<sp/>plus<sp/>an</highlight></codeline>
<codeline lineno="345"><highlight class="comment">(optional)<sp/>occurrence<sp/>indicator.<sp/>If<sp/>no<sp/>static<sp/>type<sp/>is<sp/>specified,<sp/>it<sp/>is<sp/>assumed</highlight></codeline>
<codeline lineno="346"><highlight class="comment">to<sp/>be<sp/>document-node(element(*,<sp/>xs:untyped))*.<sp/>The<sp/>static<sp/>type<sp/>without<sp/>the</highlight></codeline>
<codeline lineno="347"><highlight class="comment">occurrence<sp/>indicator<sp/>is<sp/>the<sp/>static<sp/>type<sp/>of<sp/>the<sp/>collection&apos;s<sp/>root<sp/>nodes.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"></highlight></codeline>
<codeline lineno="349"><highlight class="comment">\subsection<sp/>creating_collections<sp/>Creating<sp/>Collections</highlight></codeline>
<codeline lineno="350"><highlight class="comment"></highlight></codeline>
<codeline lineno="351"><highlight class="comment">\n<sp/>As<sp/>explained<sp/>already,<sp/>collections<sp/>are<sp/>just<sp/>sets<sp/>of<sp/>parent-less<sp/>XML<sp/>trees<sp/>(called</highlight></codeline>
<codeline lineno="352"><highlight class="comment">&quot;documents&quot;).<sp/>In<sp/>terms<sp/>of<sp/>the<sp/>language,<sp/>these<sp/>sets</highlight></codeline>
<codeline lineno="353"><highlight class="comment">&quot;live&quot;<sp/>in<sp/>the<sp/>dynamic<sp/>context.<sp/>In<sp/>particular,<sp/>the<sp/>dynamic<sp/>context<sp/>is<sp/>extended</highlight></codeline>
<codeline lineno="354"><highlight class="comment">with<sp/>a<sp/>component<sp/>called<sp/>the<sp/>&lt;strong&gt;available<sp/>collections&lt;/strong&gt;.<sp/>This<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="355"><highlight class="comment">map<sp/>whose<sp/>entries<sp/>associate<sp/>the<sp/>expanded<sp/>QName<sp/>of<sp/>a<sp/>collection<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="356"><highlight class="comment">collection&apos;s<sp/>document<sp/>set.<sp/>If<sp/>an<sp/>entry<sp/>for<sp/>a<sp/>collection<sp/>appears<sp/>in<sp/>the<sp/>available</highlight></codeline>
<codeline lineno="357"><highlight class="comment">collections<sp/>of<sp/>a<sp/>module,<sp/>the<sp/>collection<sp/>is<sp/>said<sp/>to<sp/>be<sp/>available<sp/>to<sp/>that<sp/>module.</highlight></codeline>
<codeline lineno="358"><highlight class="comment"></highlight></codeline>
<codeline lineno="359"><highlight class="comment">\n<sp/>\n<sp/>In<sp/>practice,<sp/>the<sp/>available<sp/>collections<sp/>component<sp/>is<sp/>implemented<sp/>by<sp/>the<sp/>storage<sp/>system<sp/>of<sp/>Zorba.</highlight></codeline>
<codeline lineno="360"><highlight class="comment">To<sp/>begin<sp/>with,<sp/>each<sp/>document<sp/>set<sp/>is<sp/>implemented<sp/>by<sp/>some</highlight></codeline>
<codeline lineno="361"><highlight class="comment">appropriate<sp/>data<sp/>structure<sp/>that<sp/>acts<sp/>as<sp/>a<sp/>document<sp/>container.<sp/>The<sp/>description<sp/>of</highlight></codeline>
<codeline lineno="362"><highlight class="comment">potential<sp/>data<sp/>structures<sp/>is<sp/>beyond<sp/>the<sp/>scope<sp/>of<sp/>this<sp/>document,<sp/>but<sp/>the<sp/>choice</highlight></codeline>
<codeline lineno="363"><highlight class="comment">will,<sp/>in<sp/>general,<sp/>depend<sp/>on<sp/>the<sp/>properties<sp/>of<sp/>the<sp/>collection<sp/>and<sp/>the<sp/>contained</highlight></codeline>
<codeline lineno="364"><highlight class="comment">documents.<sp/>In<sp/>addition<sp/>to<sp/>managing<sp/>the<sp/>document<sp/>containers,<sp/>the<sp/>store<sp/>maintains</highlight></codeline>
<codeline lineno="365"><highlight class="comment">a<sp/>&lt;strong&gt;collections<sp/>table&lt;/strong&gt;,<sp/>which<sp/>maps<sp/>collection<sp/>names<sp/>to<sp/>document</highlight></codeline>
<codeline lineno="366"><highlight class="comment">containers.<sp/>The<sp/>collections<sp/>table<sp/>is<sp/>accessible<sp/>by<sp/>all<sp/>queries,<sp/>so<sp/>once<sp/>an<sp/>entry</highlight></codeline>
<codeline lineno="367"><highlight class="comment">is<sp/>added<sp/>to<sp/>the<sp/>table,<sp/>the<sp/>associated<sp/>collection<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>available<sp/>to</highlight></codeline>
<codeline lineno="368"><highlight class="comment">every<sp/>query<sp/>and<sp/>every<sp/>module<sp/>that<sp/>participates<sp/>in<sp/>the<sp/>execution<sp/>of<sp/>that<sp/>query.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"></highlight></codeline>
<codeline lineno="370"><highlight class="comment">\n<sp/>\n<sp/>Creation<sp/>of<sp/>a<sp/>collection<sp/>involves<sp/>creating<sp/>an<sp/>initially<sp/>empty<sp/>document<sp/>container</highlight></codeline>
<codeline lineno="371"><highlight class="comment">and<sp/>&quot;registering&quot;<sp/>that<sp/>container<sp/>in<sp/>the<sp/>collections<sp/>table.<sp/>We<sp/>provide<sp/>two</highlight></codeline>
<codeline lineno="372"><highlight class="comment">functions<sp/>for<sp/>creating<sp/>collections.<sp/>Both<sp/>are<sp/>updating<sp/>functions,<sp/>so<sp/>instead<sp/>of</highlight></codeline>
<codeline lineno="373"><highlight class="comment">actually<sp/>performing<sp/>the<sp/>updates,<sp/>they<sp/>generate<sp/>pending<sp/>update<sp/>primitives<sp/>that</highlight></codeline>
<codeline lineno="374"><highlight class="comment">become<sp/>part<sp/>of<sp/>a<sp/>pending<sp/>update<sp/>list<sp/>(PUL)<sp/>to<sp/>be<sp/>applied<sp/>at<sp/>a<sp/>later<sp/>time<sp/>(see</highlight></codeline>
<codeline lineno="375"><highlight class="comment">\ref<sp/>extensions_xquf_updates_routines).<sp/>The<sp/>functions<sp/>and<sp/>their<sp/>associated</highlight></codeline>
<codeline lineno="376"><highlight class="comment">update<sp/>primitives<sp/>are<sp/>described<sp/>below:</highlight></codeline>
<codeline lineno="377"><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:create_collection($collectionName<sp/>as<sp/>xs:QName)</highlight></codeline>
<codeline lineno="380"><highlight class="comment"></highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/>upd:createCollection($collectionName<sp/>as<sp/>xs:QName)</highlight></codeline>
<codeline lineno="382"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="383"><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment">The<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="385"><highlight class="comment"></highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="388"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an</highlight></codeline>
<codeline lineno="389"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0001&quot;</highlight></codeline>
<codeline lineno="390"><highlight class="comment">title=&quot;zerr:ZDDY0001&quot;&gt;zerr:ZDDY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>identifies<sp/>a<sp/>collection<sp/>that<sp/>is<sp/>available</highlight></codeline>
<codeline lineno="392"><highlight class="comment">already,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0002&quot;</highlight></codeline>
<codeline lineno="393"><highlight class="comment">title=&quot;zerr:ZDDY0002&quot;&gt;zerr:ZDDY0002&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="395"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="396"><highlight class="comment">upd:createCollection($collectionName).&lt;/li&gt;</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="comment"></highlight></codeline>
<codeline lineno="399"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="400"><highlight class="comment"></highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/>&lt;li&gt;An<sp/>empty<sp/>document<sp/>container<sp/>is<sp/>created.&lt;/li&gt;</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/>&lt;li&gt;A<sp/>entry<sp/>is<sp/>added<sp/>to<sp/>the<sp/>collections<sp/>table.<sp/>The<sp/>entry<sp/>maps<sp/>the<sp/>collection&apos;s</highlight></codeline>
<codeline lineno="404"><highlight class="comment">expanded<sp/>QName<sp/>to<sp/>the<sp/>document<sp/>container.&lt;/li&gt;</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="406"><highlight class="comment"></highlight></codeline>
<codeline lineno="407"><highlight class="comment">The<sp/>second<sp/>create<sp/>function<sp/>creates<sp/>the<sp/>collection<sp/>and<sp/>populates<sp/>it</highlight></codeline>
<codeline lineno="408"><highlight class="comment">with<sp/>an<sp/>initial<sp/>set<sp/>of<sp/>trees.</highlight></codeline>
<codeline lineno="409"><highlight class="comment"></highlight></codeline>
<codeline lineno="410"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:create_collection($collectionName<sp/>as<sp/>xs:QName,<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="412"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="413"><highlight class="comment"></highlight></codeline>
<codeline lineno="414"><highlight class="comment">The<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="415"><highlight class="comment"></highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="418"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an</highlight></codeline>
<codeline lineno="419"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0001&quot;</highlight></codeline>
<codeline lineno="420"><highlight class="comment">title=&quot;zerr:ZDDY0001&quot;&gt;zerr:ZDDY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>identifies<sp/>a<sp/>collection<sp/>that<sp/>is<sp/>available</highlight></codeline>
<codeline lineno="422"><highlight class="comment">already,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0002&quot;</highlight></codeline>
<codeline lineno="423"><highlight class="comment">title=&quot;zerr:ZDDY0002&quot;&gt;zerr:ZDDY0002&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>expression<sp/>that<sp/>is<sp/>given<sp/>as<sp/>the<sp/>second<sp/>argument<sp/>to<sp/>the<sp/>function<sp/>call</highlight></codeline>
<codeline lineno="425"><highlight class="comment">is<sp/>evaluated.<sp/>The<sp/>result<sp/>of<sp/>the<sp/>evaluation<sp/>is<sp/>called<sp/>the<sp/>source<sp/>sequence.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="426"><highlight class="comment">source<sp/>sequence<sp/>contains<sp/>an<sp/>item<sp/>that<sp/>is<sp/>not<sp/>a<sp/>node,<sp/>or<sp/>a<sp/>node<sp/>whose<sp/>actual<sp/>type</highlight></codeline>
<codeline lineno="427"><highlight class="comment">does<sp/>not<sp/>match<sp/>the<sp/>root<sp/>static<sp/>type<sp/>specified<sp/>in<sp/>the<sp/>collection<sp/>declaration,<sp/>a</highlight></codeline>
<codeline lineno="428"><highlight class="comment">type<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRXDTY0001&quot;</highlight></codeline>
<codeline lineno="429"><highlight class="comment">title=&quot;zerr:XDTY0001&quot;&gt;zerr:XDTY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/>&lt;li&gt;Each<sp/>of<sp/>the<sp/>nodes<sp/>in<sp/>the<sp/>source<sp/>sequence<sp/>is<sp/>copied<sp/>as<sp/>if<sp/>it<sp/>was<sp/>a<sp/>node</highlight></codeline>
<codeline lineno="431"><highlight class="comment">returned<sp/>by<sp/>an<sp/>enclosed<sp/>expression<sp/>in<sp/>a<sp/>direct<sp/>element<sp/>constructor<sp/>(see</highlight></codeline>
<codeline lineno="432"><highlight class="comment">http://www.w3.org/TR/xquery/#id-content).<sp/>The<sp/>construction<sp/>and<sp/>copy-namespaces</highlight></codeline>
<codeline lineno="433"><highlight class="comment">modes<sp/>used<sp/>during<sp/>the<sp/>copy<sp/>operation<sp/>are<sp/>the<sp/>ones<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="434"><highlight class="comment">invoking<sp/>module.<sp/>Let<sp/>$nodes<sp/>be<sp/>the<sp/>sequence<sp/>containing<sp/>the<sp/>copied<sp/>nodes.<sp/>Every</highlight></codeline>
<codeline lineno="435"><highlight class="comment">node<sp/>in<sp/>$nodes<sp/>is<sp/>a<sp/>root<sp/>(parent-less)<sp/>node<sp/>that<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>any</highlight></codeline>
<codeline lineno="436"><highlight class="comment">collection<sp/>and<sp/>is<sp/>distinct<sp/>from<sp/>any<sp/>other<sp/>node<sp/>in<sp/>$nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="438"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>the<sp/>following<sp/>update<sp/>primitives:</highlight></codeline>
<codeline lineno="439"><highlight class="comment">upd:createCollection($collectionName)<sp/>and<sp/>upd:insertNodesFirst($collectionName,</highlight></codeline>
<codeline lineno="440"><highlight class="comment">$nodes)&lt;/li&gt;</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="442"><highlight class="comment"></highlight></codeline>
<codeline lineno="443"><highlight class="comment">The<sp/>upd:createCollection<sp/>primitive<sp/>was<sp/>described<sp/>above.<sp/>The<sp/>upd:insertNodesFirst</highlight></codeline>
<codeline lineno="444"><highlight class="comment">will<sp/>be<sp/>described<sp/>in<sp/>\ref<sp/>updating_collections,<sp/>in<sp/>the<sp/>context<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="445"><highlight class="comment">cdml:insert-nodes-first<sp/>function.</highlight></codeline>
<codeline lineno="446"><highlight class="comment"></highlight></codeline>
<codeline lineno="447"><highlight class="comment">\subsection<sp/>accessing_collections<sp/>Accessing<sp/>Collections</highlight></codeline>
<codeline lineno="448"><highlight class="comment"></highlight></codeline>
<codeline lineno="449"><highlight class="comment">To<sp/>access<sp/>the<sp/>root<sp/>nodes<sp/>of<sp/>a<sp/>collection,<sp/>the<sp/>&lt;strong&gt;&lt;a</highlight></codeline>
<codeline lineno="450"><highlight class="comment">name=&quot;cdml_collection&quot;<sp/>id=&quot;cdml_collection&quot;&gt;&lt;/a&gt;cdml:collection&lt;/strong&gt;</highlight></codeline>
<codeline lineno="451"><highlight class="comment">function<sp/>is<sp/>provided.</highlight></codeline>
<codeline lineno="452"><highlight class="comment"></highlight></codeline>
<codeline lineno="453"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/>declare<sp/>function<sp/>cdml:collection($collectionName<sp/>as<sp/>xs:QName)<sp/>as<sp/>node()*</highlight></codeline>
<codeline lineno="455"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="456"><highlight class="comment"></highlight></codeline>
<codeline lineno="457"><highlight class="comment">The<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="458"><highlight class="comment"></highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="461"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an</highlight></codeline>
<codeline lineno="462"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0001&quot;</highlight></codeline>
<codeline lineno="463"><highlight class="comment">title=&quot;zerr:ZDDY0001&quot;&gt;zerr:ZDDY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="465"><highlight class="comment">available<sp/>collections<sp/>in<sp/>the<sp/>dynamic<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="466"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0003&quot;<sp/>title=&quot;zerr:ZDDY0003&quot;&gt;zerr:ZDDY0003&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>a<sp/>sequence<sp/>consisting<sp/>of<sp/>the<sp/>root<sp/>nodes<sp/>in</highlight></codeline>
<codeline lineno="468"><highlight class="comment">the<sp/>collection.<sp/>If<sp/>the<sp/>collection<sp/>is<sp/>declared<sp/>as<sp/>&apos;%an:ordered&apos;,<sp/>the<sp/>ordering<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="469"><highlight class="comment">nodes<sp/>in<sp/>the<sp/>result<sp/>will<sp/>reflect<sp/>the<sp/>order<sp/>into<sp/>which<sp/>nodes<sp/>were<sp/>inserted<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="470"><highlight class="comment">collection<sp/>by<sp/>the<sp/>node<sp/>insertion<sp/>functions<sp/>(see<sp/>\ref</highlight></codeline>
<codeline lineno="471"><highlight class="comment">updating_collections).<sp/>If<sp/>the<sp/>collection<sp/>is<sp/>declared<sp/>as<sp/>&apos;%an:unordered&apos;,<sp/>the<sp/>ordering</highlight></codeline>
<codeline lineno="472"><highlight class="comment">of<sp/>the<sp/>nodes<sp/>in<sp/>the<sp/>result<sp/>is<sp/>implementation-dependent.<sp/>In<sp/>both<sp/>cases,<sp/>the<sp/>nodes</highlight></codeline>
<codeline lineno="473"><highlight class="comment">in<sp/>the<sp/>sequence<sp/>are,<sp/>by<sp/>definition,<sp/>in<sp/>document<sp/>order.<sp/>For<sp/>unordered</highlight></codeline>
<codeline lineno="474"><highlight class="comment">collections,<sp/>this<sp/>document<sp/>ordering<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>stable<sp/>within<sp/>a<sp/>query</highlight></codeline>
<codeline lineno="475"><highlight class="comment">snapshot<sp/>(i.e.,<sp/>until<sp/>the<sp/>next<sp/>time<sp/>updates<sp/>are<sp/>applied).<sp/>For<sp/>ordered</highlight></codeline>
<codeline lineno="476"><highlight class="comment">collections,<sp/>the<sp/>document<sp/>ordering<sp/>is<sp/>stable<sp/>&quot;forever&quot;<sp/>(i.e.,<sp/>two<sp/>root<sp/>nodes<sp/>in</highlight></codeline>
<codeline lineno="477"><highlight class="comment">the<sp/>collection<sp/>will<sp/>compare<sp/>the<sp/>same<sp/>as<sp/>long<sp/>as<sp/>the<sp/>collection<sp/>(and<sp/>the<sp/>nodes)</highlight></codeline>
<codeline lineno="478"><highlight class="comment">exist).&lt;/li&gt;</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="480"><highlight class="comment"></highlight></codeline>
<codeline lineno="481"><highlight class="comment">Another<sp/>non-updating<sp/>function<sp/>that<sp/>accesses<sp/>a<sp/>collection<sp/>implicitly,<sp/>is</highlight></codeline>
<codeline lineno="482"><highlight class="comment">the<sp/>index-of<sp/>function:</highlight></codeline>
<codeline lineno="483"><highlight class="comment"></highlight></codeline>
<codeline lineno="484"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/>declare<sp/>function<sp/>cdml:index_of($node<sp/>as<sp/>node())<sp/>as<sp/>xs:integer</highlight></codeline>
<codeline lineno="486"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="487"><highlight class="comment"></highlight></codeline>
<codeline lineno="488"><highlight class="comment">The<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="489"><highlight class="comment"></highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>node<sp/>is<sp/>not<sp/>a<sp/>root<sp/>node<sp/>of<sp/>a<sp/>collection,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0011&quot;</highlight></codeline>
<codeline lineno="492"><highlight class="comment">title=&quot;zerr:ZDDY0011&quot;&gt;zerr:ZDDY0011&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>this<sp/>function<sp/>is<sp/>the<sp/>position<sp/>as<sp/>xs:integer<sp/>of<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="494"><highlight class="comment">node<sp/>within<sp/>its<sp/>collection.&lt;/li&gt;</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="496"><highlight class="comment"></highlight></codeline>
<codeline lineno="497"><highlight class="comment">\subsection<sp/>updating_collections<sp/>Updating<sp/>Collections</highlight></codeline>
<codeline lineno="498"><highlight class="comment"></highlight></codeline>
<codeline lineno="499"><highlight class="comment">A<sp/>&lt;strong&gt;collection<sp/>update&lt;/strong&gt;<sp/>is<sp/>an<sp/>operation<sp/>that<sp/>either<sp/>inserts<sp/>or</highlight></codeline>
<codeline lineno="500"><highlight class="comment">deletes<sp/>a<sp/>number<sp/>of<sp/>root<sp/>nodes<sp/>(and<sp/>their<sp/>subtrees)<sp/>to/from<sp/>a<sp/>collection.<sp/>Zorba</highlight></codeline>
<codeline lineno="501"><highlight class="comment">provides<sp/>five<sp/>updating<sp/>functions<sp/>that<sp/>insert<sp/>root<sp/>nodes,<sp/>and<sp/>another<sp/>five<sp/>updating<sp/>functions<sp/>that<sp/>delete</highlight></codeline>
<codeline lineno="502"><highlight class="comment">root<sp/>nodes.<sp/>All<sp/>of<sp/>these<sp/>functions<sp/>are<sp/>//updating<sp/>functions//<sp/>(in<sp/>the</highlight></codeline>
<codeline lineno="503"><highlight class="comment">terminology<sp/>of<sp/>the<sp/>XQUF).<sp/>As<sp/>a<sp/>result,<sp/>rather<sp/>than<sp/>applying<sp/>the<sp/>update</highlight></codeline>
<codeline lineno="504"><highlight class="comment">immediately,<sp/>they<sp/>produce<sp/>an<sp/>updating<sp/>primitive<sp/>that<sp/>becomes<sp/>part<sp/>of<sp/>a<sp/>pending</highlight></codeline>
<codeline lineno="505"><highlight class="comment">updates<sp/>list<sp/>(PUL),<sp/>which<sp/>is<sp/>applied<sp/>atomically<sp/>when<sp/>the<sp/>next<sp/>&quot;;&quot;<sp/>appears<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="506"><highlight class="comment">script.<sp/>The<sp/>signature<sp/>and<sp/>semantics<sp/>of<sp/>each<sp/>function<sp/>and<sp/>its<sp/>associated<sp/>update</highlight></codeline>
<codeline lineno="507"><highlight class="comment">primitive<sp/>are<sp/>described<sp/>in<sp/>this<sp/>section.<sp/>The<sp/>order<sp/>in<sp/>which<sp/>the<sp/>various<sp/>update</highlight></codeline>
<codeline lineno="508"><highlight class="comment">primitives<sp/>are<sp/>applied<sp/>and<sp/>constraints<sp/>in<sp/>how<sp/>update<sp/>primitives<sp/>may<sp/>be<sp/>combined</highlight></codeline>
<codeline lineno="509"><highlight class="comment">in<sp/>a<sp/>PUL<sp/>are<sp/>described<sp/>in<sp/>\ref<sp/>extensions_xquf_updates_routines.</highlight></codeline>
<codeline lineno="510"><highlight class="comment"></highlight></codeline>
<codeline lineno="511"><highlight class="comment">\n<sp/>\n<sp/>In<sp/>addition<sp/>to<sp/>the<sp/>updating<sp/>insert<sp/>functions,<sp/>Zorba<sp/>also<sp/>provides<sp/>five<sp/></highlight></codeline>
<codeline lineno="512"><highlight class="comment">sequential<sp/>insert<sp/>functions<sp/>(i.e.<sp/>cdml:apply-insert-nodes,</highlight></codeline>
<codeline lineno="513"><highlight class="comment">cdml:apply-insert-nodes-first,<sp/>cdml:apply-insert-nodes-last,</highlight></codeline>
<codeline lineno="514"><highlight class="comment">cdml:apply-insert-nodes-before,<sp/>cdml:apply-insert-nodes-after)<sp/>.</highlight></codeline>
<codeline lineno="515"><highlight class="comment">These<sp/>sequential<sp/>counterparts<sp/>apply<sp/>the<sp/>update<sp/>primitive<sp/>implicitly<sp/>and<sp/>return</highlight></codeline>
<codeline lineno="516"><highlight class="comment">the<sp/>node<sp/>that<sp/>was<sp/>inserted<sp/>into<sp/>the<sp/>collection.</highlight></codeline>
<codeline lineno="517"><highlight class="comment">This<sp/>is<sp/>especially<sp/>useful<sp/>because<sp/>nodes<sp/>are<sp/>copied<sp/>before<sp/>they<sp/>are<sp/>inserted<sp/>into</highlight></codeline>
<codeline lineno="518"><highlight class="comment">a<sp/>collection.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"></highlight></codeline>
<codeline lineno="520"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:insert-nodes($collectionName<sp/>as<sp/>xs:QName,<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="522"><highlight class="comment"></highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/>upd:insertIntoCollection($collectionName<sp/>as<sp/>xs:QName,<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="524"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="525"><highlight class="comment"></highlight></codeline>
<codeline lineno="526"><highlight class="comment">The<sp/>insert-nodes<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="527"><highlight class="comment"></highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="530"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an</highlight></codeline>
<codeline lineno="531"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0001&quot;</highlight></codeline>
<codeline lineno="532"><highlight class="comment">title=&quot;zerr:ZDDY0001&quot;&gt;zerr:ZDDY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="534"><highlight class="comment">available<sp/>collections<sp/>in<sp/>the<sp/>dynamic<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="535"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0003&quot;<sp/>title=&quot;zerr:ZDDY0003&quot;&gt;zerr:ZDDY0003&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>update<sp/>mode<sp/>of<sp/>the<sp/>collection<sp/>is<sp/>const,<sp/>append-only,<sp/>or<sp/>queue,<sp/>an</highlight></codeline>
<codeline lineno="537"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0004&quot;<sp/>title=&quot;zerr:ZDDY0004&quot;&gt;zerr:ZDDY0004&lt;/a&gt;],</highlight></codeline>
<codeline lineno="538"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0005&quot;<sp/>title=&quot;zerr:ZDDY0005&quot;&gt;zerr:ZDDY0005&lt;/a&gt;],<sp/>or<sp/>[&lt;a</highlight></codeline>
<codeline lineno="539"><highlight class="comment">href=&quot;#ERRZDDY0006&quot;<sp/>title=&quot;zerr:ZDDY0006&quot;&gt;zerr:ZDDY0006&lt;/a&gt;],<sp/>respectively.&lt;/li&gt;</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>expression<sp/>that<sp/>is<sp/>given<sp/>as<sp/>the<sp/>second<sp/>argument<sp/>to<sp/>the<sp/>function<sp/>call</highlight></codeline>
<codeline lineno="541"><highlight class="comment">is<sp/>evaluated.<sp/>The<sp/>result<sp/>of<sp/>the<sp/>evaluation<sp/>is<sp/>called<sp/>the<sp/>source<sp/>sequence.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="542"><highlight class="comment">source<sp/>sequence<sp/>contains<sp/>an<sp/>item<sp/>that<sp/>is<sp/>not<sp/>a<sp/>node,<sp/>or<sp/>a<sp/>node<sp/>whose<sp/>actual<sp/>type</highlight></codeline>
<codeline lineno="543"><highlight class="comment">does<sp/>not<sp/>match<sp/>the<sp/>KindTest<sp/>specified<sp/>in<sp/>the<sp/>collection<sp/>declaration,<sp/>a<sp/>type</highlight></codeline>
<codeline lineno="544"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRXDTY0001&quot;<sp/>title=&quot;zerr:XDTY0001&quot;&gt;zerr:XDTY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/>&lt;li&gt;Each<sp/>of<sp/>the<sp/>nodes<sp/>in<sp/>the<sp/>source<sp/>sequence<sp/>is<sp/>copied<sp/>as<sp/>if<sp/>it<sp/>was<sp/>a<sp/>node</highlight></codeline>
<codeline lineno="546"><highlight class="comment">returned<sp/>by<sp/>an<sp/>enclosed<sp/>expression<sp/>in<sp/>a<sp/>direct<sp/>element<sp/>constructor<sp/>(see</highlight></codeline>
<codeline lineno="547"><highlight class="comment">http://www.w3.org/TR/xquery/#id-content).<sp/>The<sp/>construction<sp/>and<sp/>copy-namespaces</highlight></codeline>
<codeline lineno="548"><highlight class="comment">modes<sp/>used<sp/>during<sp/>the<sp/>copy<sp/>operation<sp/>are<sp/>the<sp/>ones<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="549"><highlight class="comment">invoking<sp/>module.<sp/>Let<sp/>$nodes<sp/>be<sp/>the<sp/>sequence<sp/>containing<sp/>the<sp/>copied<sp/>nodes.<sp/>Every</highlight></codeline>
<codeline lineno="550"><highlight class="comment">node<sp/>in<sp/>$nodes<sp/>is<sp/>a<sp/>parent-less<sp/>root<sp/>node<sp/>that<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>any<sp/>collection</highlight></codeline>
<codeline lineno="551"><highlight class="comment">and<sp/>is<sp/>distinct<sp/>from<sp/>any<sp/>other<sp/>node<sp/>in<sp/>$nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="553"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="554"><highlight class="comment">upd:insertIntoCollection($collectionName,<sp/>$nodes).&lt;/li&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="556"><highlight class="comment"></highlight></codeline>
<codeline lineno="557"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:<sp/></highlight></codeline>
<codeline lineno="558"><highlight class="comment"></highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>document<sp/>container<sp/>for<sp/>the<sp/>collection<sp/>is<sp/>found<sp/>via<sp/>the<sp/>collections</highlight></codeline>
<codeline lineno="561"><highlight class="comment">table.&lt;/li&gt;</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>root<sp/>nodes<sp/>in<sp/>$nodes<sp/>are<sp/>inserted<sp/>into<sp/>the<sp/>container.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="563"><highlight class="comment">collection<sp/>is<sp/>an<sp/>ordered<sp/>one,<sp/>then<sp/>all<sp/>the<sp/>nodes<sp/>are<sp/>inserted<sp/>next<sp/>to<sp/>each<sp/>other</highlight></codeline>
<codeline lineno="564"><highlight class="comment">and<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>they<sp/>appear<sp/>in<sp/>$nodes.<sp/>The<sp/>position<sp/>of<sp/>the<sp/>first<sp/>node</highlight></codeline>
<codeline lineno="565"><highlight class="comment">to<sp/>be<sp/>inserted<sp/>is<sp/>implementation-dependent.<sp/>The<sp/>relative<sp/>positions<sp/>of</highlight></codeline>
<codeline lineno="566"><highlight class="comment">pre-existing<sp/>root<sp/>nodes<sp/>do<sp/>not<sp/>change<sp/>as<sp/>a<sp/>result<sp/>of<sp/>the<sp/>insertions.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="567"><highlight class="comment">collection<sp/>is<sp/>an<sp/>unordered<sp/>one,<sp/>each<sp/>node<sp/>is<sp/>inserted<sp/>in<sp/>some</highlight></codeline>
<codeline lineno="568"><highlight class="comment">implementation-dependent<sp/>position.<sp/>Furthermore,<sp/>the<sp/>relative<sp/>positions<sp/>of</highlight></codeline>
<codeline lineno="569"><highlight class="comment">pre-existing<sp/>root<sp/>nodes<sp/>may<sp/>change<sp/>as<sp/>a<sp/>result<sp/>of<sp/>the<sp/>insertions.&lt;/li&gt;</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="571"><highlight class="comment"></highlight></codeline>
<codeline lineno="572"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:insert-nodes-first($collectionName<sp/>as<sp/>xs:QName,<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="574"><highlight class="comment"></highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/>upd:insertFirstIntoCollection($collectionName<sp/>as<sp/>xs:QName,<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="576"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="577"><highlight class="comment"></highlight></codeline>
<codeline lineno="578"><highlight class="comment">The<sp/>insert-nodes-first<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="579"><highlight class="comment"></highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="582"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an</highlight></codeline>
<codeline lineno="583"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0001&quot;</highlight></codeline>
<codeline lineno="584"><highlight class="comment">title=&quot;zerr:ZDDY0001&quot;&gt;zerr:ZDDY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="586"><highlight class="comment">available<sp/>collections<sp/>in<sp/>the<sp/>dynamic<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="587"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0003&quot;<sp/>title=&quot;zerr:ZDDY0003&quot;&gt;zerr:ZDDY0003&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>update<sp/>mode<sp/>of<sp/>the<sp/>collection<sp/>is<sp/>&apos;%an:const&apos;,<sp/>&apos;%an:append-only&apos;,<sp/>or<sp/>&apos;%an:queue&apos;,<sp/>an</highlight></codeline>
<codeline lineno="589"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0004&quot;<sp/>title=&quot;zerr:ZDDY0004&quot;&gt;zerr:ZDDY0004&lt;/a&gt;],</highlight></codeline>
<codeline lineno="590"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0005&quot;<sp/>title=&quot;zerr:ZDDY0005&quot;&gt;zerr:ZDDY0005&lt;/a&gt;],<sp/>or<sp/>[&lt;a</highlight></codeline>
<codeline lineno="591"><highlight class="comment">href=&quot;#ERRZDDY0006&quot;<sp/>title=&quot;zerr:ZDDY0006&quot;&gt;zerr:ZDDY0006&lt;/a&gt;],<sp/>respectively.&lt;/li&gt;</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>collection<sp/>is<sp/>&apos;%an:unordered&apos;,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0012&quot;</highlight></codeline>
<codeline lineno="593"><highlight class="comment">title=&quot;zerr:ZDDY0012&quot;&gt;zerr:ZDDY0012&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>expression<sp/>that<sp/>is<sp/>given<sp/>as<sp/>the<sp/>second<sp/>argument<sp/>to<sp/>the<sp/>function<sp/>call</highlight></codeline>
<codeline lineno="595"><highlight class="comment">is<sp/>evaluated.<sp/>The<sp/>result<sp/>of<sp/>the<sp/>evaluation<sp/>is<sp/>called<sp/>the<sp/>source<sp/>sequence.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="596"><highlight class="comment">source<sp/>sequence<sp/>contains<sp/>an<sp/>item<sp/>that<sp/>is<sp/>not<sp/>a<sp/>node,<sp/>or<sp/>a<sp/>node<sp/>whose<sp/>actual<sp/>type</highlight></codeline>
<codeline lineno="597"><highlight class="comment">does<sp/>not<sp/>match<sp/>the<sp/>KindTest<sp/>specified<sp/>in<sp/>the<sp/>collection<sp/>declaration,<sp/>a<sp/>type</highlight></codeline>
<codeline lineno="598"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRXDTY0001&quot;</highlight></codeline>
<codeline lineno="599"><highlight class="comment">title=&quot;zerr:XDTY0001&quot;&gt;zerr:XDTY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/>&lt;li&gt;Each<sp/>of<sp/>the<sp/>nodes<sp/>in<sp/>the<sp/>source<sp/>sequence<sp/>is<sp/>copied<sp/>as<sp/>if<sp/>it<sp/>was<sp/>a<sp/>node</highlight></codeline>
<codeline lineno="601"><highlight class="comment">returned<sp/>by<sp/>an<sp/>enclosed<sp/>expression<sp/>in<sp/>a<sp/>direct<sp/>element<sp/>constructor<sp/>(see</highlight></codeline>
<codeline lineno="602"><highlight class="comment">http://www.w3.org/TR/xquery/#id-content).<sp/>The<sp/>construction<sp/>and<sp/>copy-namespaces</highlight></codeline>
<codeline lineno="603"><highlight class="comment">modes<sp/>used<sp/>during<sp/>the<sp/>copy<sp/>operation<sp/>are<sp/>the<sp/>ones<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="604"><highlight class="comment">invoking<sp/>module.<sp/>Let<sp/>$nodes<sp/>be<sp/>the<sp/>sequence<sp/>containing<sp/>the<sp/>copied<sp/>nodes.<sp/>Every</highlight></codeline>
<codeline lineno="605"><highlight class="comment">node<sp/>in<sp/>$nodes<sp/>is<sp/>a<sp/>parent-less<sp/>root<sp/>node<sp/>that<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>any<sp/>collection</highlight></codeline>
<codeline lineno="606"><highlight class="comment">and<sp/>is<sp/>distinct<sp/>from<sp/>any<sp/>other<sp/>node<sp/>in<sp/>$nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="608"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="609"><highlight class="comment">upd:insertFirstIntoCollection($collectionName,<sp/>$nodes).&lt;/li&gt;</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="611"><highlight class="comment"></highlight></codeline>
<codeline lineno="612"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:<sp/></highlight></codeline>
<codeline lineno="613"><highlight class="comment"></highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>document<sp/>container<sp/>for<sp/>the<sp/>collection<sp/>is<sp/>found<sp/>via<sp/>the<sp/>collections</highlight></codeline>
<codeline lineno="616"><highlight class="comment">table.<sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>root<sp/>nodes<sp/>in<sp/>$nodes<sp/>are<sp/>inserted<sp/>at<sp/>the<sp/>&quot;beginning&quot;<sp/>of<sp/>the<sp/>container.</highlight></codeline>
<codeline lineno="618"><highlight class="comment">Specifically,<sp/>the<sp/>first<sp/>node<sp/>is<sp/>inserted<sp/>at<sp/>the<sp/>first<sp/>position,<sp/>and<sp/>the<sp/>rest<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="619"><highlight class="comment">nodes<sp/>are<sp/>inserted<sp/>after<sp/>the<sp/>first<sp/>one<sp/>and<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>they<sp/>appear<sp/>in</highlight></codeline>
<codeline lineno="620"><highlight class="comment">$nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="622"><highlight class="comment"></highlight></codeline>
<codeline lineno="623"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:insert-nodes-last($collectionName<sp/>as<sp/>xs:QName,<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="625"><highlight class="comment"></highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/><sp/>upd:insertLastIntoCollection($collectionName<sp/>as<sp/>xs:QName,<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="627"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="628"><highlight class="comment"></highlight></codeline>
<codeline lineno="629"><highlight class="comment">The<sp/>insert-nodes-last<sp/>function<sp/>is<sp/>evaluated<sp/>the<sp/>same<sp/>way<sp/>as<sp/>the<sp/>insert-nodes-first<sp/>function<sp/>except:</highlight></codeline>
<codeline lineno="630"><highlight class="comment"></highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>collection<sp/>is<sp/>&apos;%an:append-only&apos;<sp/>or<sp/>&apos;%an:queue&apos;,<sp/>the<sp/>insertion<sp/>is<sp/>allowed<sp/>(i.e.,</highlight></codeline>
<codeline lineno="633"><highlight class="comment">the<sp/>errors<sp/>ZDDY0005<sp/>or<sp/>ZDDY0006<sp/>are<sp/>not<sp/>raised).&lt;/li&gt;</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="635"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="636"><highlight class="comment">upd:insertLastIntoCollection($collectionName,<sp/>$nodes).&lt;/li&gt;</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="638"><highlight class="comment"></highlight></codeline>
<codeline lineno="639"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:<sp/></highlight></codeline>
<codeline lineno="640"><highlight class="comment"></highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>document<sp/>container<sp/>for<sp/>the<sp/>collection<sp/>is<sp/>found<sp/>via<sp/>the<sp/>collections<sp/>table.&lt;/li&gt;</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>root<sp/>nodes<sp/>in<sp/>$nodes<sp/>are<sp/>inserted<sp/>at<sp/>the<sp/>&quot;end&quot;<sp/>of<sp/>the<sp/>container.</highlight></codeline>
<codeline lineno="644"><highlight class="comment">Specifically,<sp/>the<sp/>first<sp/>node<sp/>is<sp/>inserted<sp/>after<sp/>the<sp/>last<sp/>existing<sp/>node,<sp/>and<sp/>rest</highlight></codeline>
<codeline lineno="645"><highlight class="comment">of<sp/>the<sp/>nodes<sp/>are<sp/>inserted<sp/>after<sp/>the<sp/>first<sp/>one<sp/>and<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>they</highlight></codeline>
<codeline lineno="646"><highlight class="comment">appear<sp/>in<sp/>$nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="648"><highlight class="comment"></highlight></codeline>
<codeline lineno="649"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:insert-nodes-before($collectionName<sp/>as<sp/>xs:QName,<sp/>$target<sp/>as<sp/>node(),<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="651"><highlight class="comment"></highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/>upd:insertBeforeIntoCollection($collectionName<sp/>as<sp/>xs:QName,<sp/>$target<sp/>as<sp/>node(),<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="653"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="654"><highlight class="comment"></highlight></codeline>
<codeline lineno="655"><highlight class="comment">The<sp/>insert-nodes-before<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="656"><highlight class="comment"></highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="659"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an</highlight></codeline>
<codeline lineno="660"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0001&quot;</highlight></codeline>
<codeline lineno="661"><highlight class="comment">title=&quot;zerr:ZDDY0001&quot;&gt;zerr:ZDDY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="663"><highlight class="comment">available<sp/>collections<sp/>in<sp/>the<sp/>dynamic<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="664"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0003&quot;<sp/>title=&quot;zerr:ZDDY0003&quot;&gt;zerr:ZDDY0003&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>update<sp/>mode<sp/>of<sp/>the<sp/>collection<sp/>is<sp/>&apos;%an:const&apos;,<sp/>&apos;%an:append-only&apos;,<sp/>or<sp/>&apos;%an:queue&apos;,<sp/>an</highlight></codeline>
<codeline lineno="666"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0004&quot;<sp/>title=&quot;zerr:ZDDY0004&quot;&gt;zerr:ZDDY0004&lt;/a&gt;],</highlight></codeline>
<codeline lineno="667"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0005&quot;<sp/>title=&quot;zerr:ZDDY0005&quot;&gt;zerr:ZDDY0005&lt;/a&gt;],<sp/>or<sp/>[&lt;a</highlight></codeline>
<codeline lineno="668"><highlight class="comment">href=&quot;#ERRZDDY0006&quot;<sp/>title=&quot;zerr:ZDDY0006&quot;&gt;zerr:ZDDY0006&lt;/a&gt;],<sp/>respectively.&lt;/li&gt;</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>collection<sp/>is<sp/>&apos;%an:unordered&apos;,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0012&quot;</highlight></codeline>
<codeline lineno="670"><highlight class="comment">title=&quot;zerr:ZDDY0012&quot;&gt;zerr:ZDDY0012&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>expression<sp/>that<sp/>appears<sp/>as<sp/>the<sp/>second<sp/>argument<sp/>to<sp/>the<sp/>function<sp/>call<sp/>is</highlight></codeline>
<codeline lineno="672"><highlight class="comment">evaluated.<sp/>The<sp/>expression<sp/>must<sp/>return<sp/>a<sp/>single<sp/>node,<sp/>called<sp/>the<sp/>target<sp/>node.<sp/>If</highlight></codeline>
<codeline lineno="673"><highlight class="comment">the<sp/>target<sp/>node<sp/>is<sp/>not<sp/>a<sp/>root<sp/>node<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>collection,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="674"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0011&quot;<sp/>title=&quot;zerr:ZDDY0011&quot;&gt;zerr:ZDDY0011&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>expression<sp/>that<sp/>is<sp/>given<sp/>as<sp/>the<sp/>third<sp/>argument<sp/>to<sp/>the<sp/>function<sp/>call<sp/>is</highlight></codeline>
<codeline lineno="676"><highlight class="comment">evaluated.<sp/>The<sp/>result<sp/>of<sp/>the<sp/>evaluation<sp/>is<sp/>called<sp/>the<sp/>source<sp/>sequence.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="677"><highlight class="comment">source<sp/>sequence<sp/>contains<sp/>an<sp/>item<sp/>that<sp/>is<sp/>not<sp/>a<sp/>node,<sp/>or<sp/>a<sp/>node<sp/>whose<sp/>actual<sp/>type</highlight></codeline>
<codeline lineno="678"><highlight class="comment">does<sp/>not<sp/>match<sp/>the<sp/>KindTest<sp/>specified<sp/>in<sp/>the<sp/>collection<sp/>declaration,<sp/>a<sp/>type</highlight></codeline>
<codeline lineno="679"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRXDTY0001&quot;</highlight></codeline>
<codeline lineno="680"><highlight class="comment">title=&quot;zerr:XDTY0001&quot;&gt;zerr:XDTY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/>&lt;li&gt;Each<sp/>of<sp/>the<sp/>nodes<sp/>in<sp/>the<sp/>source<sp/>sequence<sp/>is<sp/>copied<sp/>as<sp/>if<sp/>it<sp/>was<sp/>a<sp/>node</highlight></codeline>
<codeline lineno="682"><highlight class="comment">returned<sp/>by<sp/>an<sp/>enclosed<sp/>expression<sp/>in<sp/>a<sp/>direct<sp/>element<sp/>constructor<sp/>(see</highlight></codeline>
<codeline lineno="683"><highlight class="comment">http://www.w3.org/TR/xquery/#id-content).<sp/>The<sp/>construction<sp/>and<sp/>copy-namespaces</highlight></codeline>
<codeline lineno="684"><highlight class="comment">modes<sp/>used<sp/>during<sp/>the<sp/>copy<sp/>operation<sp/>are<sp/>the<sp/>ones<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="685"><highlight class="comment">invoking<sp/>module.<sp/>Let<sp/>$nodes<sp/>be<sp/>the<sp/>sequence<sp/>containing<sp/>the<sp/>copied<sp/>nodes.<sp/>Every</highlight></codeline>
<codeline lineno="686"><highlight class="comment">node<sp/>in<sp/>$nodes<sp/>is<sp/>a<sp/>parent-less<sp/>root<sp/>node<sp/>that<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>any<sp/>collection</highlight></codeline>
<codeline lineno="687"><highlight class="comment">and<sp/>is<sp/>distinct<sp/>from<sp/>any<sp/>other<sp/>node<sp/>in<sp/>$nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="689"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="690"><highlight class="comment">upd:insertBeforeIntoCollection($collectionName,<sp/>$target,<sp/>$nodes).&lt;/li&gt;</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="692"><highlight class="comment"></highlight></codeline>
<codeline lineno="693"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:<sp/></highlight></codeline>
<codeline lineno="694"><highlight class="comment"></highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>document<sp/>container<sp/>for<sp/>the<sp/>collection<sp/>is<sp/>found<sp/>via<sp/>the<sp/>collections</highlight></codeline>
<codeline lineno="697"><highlight class="comment">table.&lt;/li&gt;</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>root<sp/>nodes<sp/>in<sp/>$nodes<sp/>are<sp/>inserted<sp/>into<sp/>the<sp/>container<sp/>before<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="699"><highlight class="comment">target<sp/>node.<sp/>Specifically,<sp/>if<sp/>the<sp/>target<sp/>node<sp/>is<sp/>at<sp/>position<sp/>K,<sp/>the<sp/>first<sp/>node</highlight></codeline>
<codeline lineno="700"><highlight class="comment">is<sp/>inserted<sp/>at<sp/>position<sp/>K,<sp/>and<sp/>rest<sp/>of<sp/>the<sp/>nodes<sp/>are<sp/>inserted<sp/>after<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="701"><highlight class="comment">one<sp/>and<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>they<sp/>appear<sp/>in<sp/>$nodes.<sp/>After<sp/>the<sp/>insertion,<sp/>the</highlight></codeline>
<codeline lineno="702"><highlight class="comment">target<sp/>node<sp/>will<sp/>at<sp/>position<sp/>K+N,<sp/>where<sp/>N<sp/>is<sp/>the<sp/>number<sp/>of<sp/>nodes<sp/>in<sp/>$nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="704"><highlight class="comment"></highlight></codeline>
<codeline lineno="705"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:insert-nodes-after($collectionName<sp/>as<sp/>xs:QName,<sp/>$target<sp/>as<sp/>node(),<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="707"><highlight class="comment"></highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/>upd:insertAfterIntoCollection($collectionName<sp/>as<sp/>xs:QName,<sp/>$target<sp/>as<sp/>node(),<sp/>$nodes<sp/>as<sp/>node()*)</highlight></codeline>
<codeline lineno="709"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="710"><highlight class="comment"></highlight></codeline>
<codeline lineno="711"><highlight class="comment">The<sp/>insert-nodes-after<sp/>function<sp/>is<sp/>evaluated<sp/>the<sp/>same<sp/>way<sp/>as<sp/>the<sp/>insert-nodes-before<sp/>function<sp/>except:</highlight></codeline>
<codeline lineno="712"><highlight class="comment"></highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="715"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="716"><highlight class="comment">upd:insertAfterIntoCollection($collectionName,<sp/>$target,<sp/>$nodes).&lt;/li&gt;</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="718"><highlight class="comment"></highlight></codeline>
<codeline lineno="719"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:<sp/></highlight></codeline>
<codeline lineno="720"><highlight class="comment"></highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>document<sp/>container<sp/>for<sp/>the<sp/>collection<sp/>is<sp/>found<sp/>via<sp/>the<sp/>collections<sp/>table.&lt;/li&gt;</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>root<sp/>nodes<sp/>in<sp/>$nodes<sp/>are<sp/>inserted<sp/>into<sp/>the<sp/>container<sp/>after<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="724"><highlight class="comment">target<sp/>node.<sp/>Specifically,<sp/>if<sp/>the<sp/>target<sp/>node<sp/>is<sp/>at<sp/>position<sp/>K,<sp/>the<sp/>first<sp/>node</highlight></codeline>
<codeline lineno="725"><highlight class="comment">is<sp/>inserted<sp/>at<sp/>position<sp/>K+1,<sp/>and<sp/>rest<sp/>of<sp/>the<sp/>nodes<sp/>are<sp/>inserted<sp/>after<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="726"><highlight class="comment">one<sp/>and<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>they<sp/>appear<sp/>in<sp/>$nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="728"><highlight class="comment"></highlight></codeline>
<codeline lineno="729"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:delete-nodes($nodes<sp/>as<sp/>xs:node()*)</highlight></codeline>
<codeline lineno="731"><highlight class="comment"></highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/><sp/>upd:deleteFromCollection($nodes<sp/>as<sp/>xs:node()*)</highlight></codeline>
<codeline lineno="733"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="734"><highlight class="comment"></highlight></codeline>
<codeline lineno="735"><highlight class="comment">The<sp/>delete-nodes<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="736"><highlight class="comment"></highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>expression<sp/>that<sp/>appears<sp/>as<sp/>the<sp/>first<sp/>argument<sp/>to<sp/>the<sp/>function<sp/>call<sp/>is</highlight></codeline>
<codeline lineno="739"><highlight class="comment">evaluated.<sp/>The<sp/>result<sp/>of<sp/>this<sp/>evaluation<sp/>is<sp/>called<sp/>the<sp/>deletion<sp/>sequence.<sp/>If</highlight></codeline>
<codeline lineno="740"><highlight class="comment">there<sp/>is<sp/>any<sp/>node<sp/>in<sp/>the<sp/>deletion<sp/>sequence<sp/>that<sp/>is<sp/>not<sp/>a<sp/>root<sp/>node<sp/>belonging<sp/>to</highlight></codeline>
<codeline lineno="741"><highlight class="comment">a<sp/>collection,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0011&quot;</highlight></codeline>
<codeline lineno="742"><highlight class="comment">title=&quot;zerr:ZDDY0011&quot;&gt;zerr:ZDDY0011&lt;/a&gt;].<sp/>Let<sp/>$nodes<sp/>be<sp/>the<sp/>deletion</highlight></codeline>
<codeline lineno="743"><highlight class="comment">sequence.&lt;/li&gt;</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>update<sp/>mode<sp/>of<sp/>a<sp/>collection<sp/>of<sp/>any<sp/>node<sp/>is<sp/>&apos;%an:const&apos;,<sp/>&apos;%an:append-only&apos;,<sp/>or<sp/>&apos;%an:queue&apos;,<sp/>an</highlight></codeline>
<codeline lineno="745"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0004&quot;<sp/>title=&quot;zerr:ZDDY0004&quot;&gt;zerr:ZDDY0004&lt;/a&gt;],</highlight></codeline>
<codeline lineno="746"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0007&quot;<sp/>title=&quot;zerr:ZDDY0007&quot;&gt;zerr:ZDDY0007&lt;/a&gt;],<sp/>or<sp/>[&lt;a</highlight></codeline>
<codeline lineno="747"><highlight class="comment">href=&quot;#ERRZDDY009&quot;<sp/>title=&quot;zerr:ZDDY009&quot;&gt;zerr:ZDDY009&lt;/a&gt;],<sp/>respectively.&lt;/li&gt;</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="749"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="750"><highlight class="comment">upd:deleteFromCollection($nodes).&lt;/li&gt;</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="752"><highlight class="comment"></highlight></codeline>
<codeline lineno="753"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:<sp/></highlight></codeline>
<codeline lineno="754"><highlight class="comment"></highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>document<sp/>container<sp/>for<sp/>the<sp/>collection<sp/>is<sp/>found<sp/>via<sp/>the<sp/>collections</highlight></codeline>
<codeline lineno="757"><highlight class="comment">table.<sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/>&lt;li&gt;Each<sp/>document<sp/>that<sp/>is<sp/>rooted<sp/>at<sp/>a<sp/>node<sp/>in<sp/>$nodes<sp/>is<sp/>removed<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="759"><highlight class="comment">container,<sp/>if<sp/>it<sp/>is<sp/>still<sp/>there<sp/>(earlier<sp/>delete<sp/>primitives<sp/>in<sp/>the<sp/>same<sp/>PUL<sp/>may</highlight></codeline>
<codeline lineno="760"><highlight class="comment">have<sp/>deleted<sp/>the<sp/>tree<sp/>already).<sp/>If<sp/>there<sp/>are<sp/>no<sp/>variables<sp/>that<sp/>are<sp/>bound<sp/>to<sp/>any</highlight></codeline>
<codeline lineno="761"><highlight class="comment">of<sp/>the<sp/>document&apos;s<sp/>nodes,<sp/>the<sp/>document<sp/>is<sp/>destroyed.<sp/>Otherwise,<sp/>the<sp/>document<sp/>will</highlight></codeline>
<codeline lineno="762"><highlight class="comment">be<sp/>destroyed<sp/>as<sp/>soon<sp/>as<sp/>there<sp/>are<sp/>no<sp/>variables<sp/>bound<sp/>to<sp/>any<sp/>of<sp/>its<sp/>nodes.<sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="764"><highlight class="comment"></highlight></codeline>
<codeline lineno="765"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:delete-nodes-first($collectionName<sp/>as<sp/>xs:QName,<sp/>$number<sp/>as<sp/>xs:unsignedLong)</highlight></codeline>
<codeline lineno="767"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="768"><highlight class="comment"></highlight></codeline>
<codeline lineno="769"><highlight class="comment">The<sp/>delete-nodes-first<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="770"><highlight class="comment"></highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="773"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an</highlight></codeline>
<codeline lineno="774"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0001&quot;</highlight></codeline>
<codeline lineno="775"><highlight class="comment">title=&quot;zerr:ZDDY0001&quot;&gt;zerr:ZDDY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="777"><highlight class="comment">available<sp/>collections<sp/>in<sp/>the<sp/>dynamic<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="778"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0003&quot;<sp/>title=&quot;zerr:ZDDY0003&quot;&gt;zerr:ZDDY0003&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>update<sp/>mode<sp/>of<sp/>the<sp/>collection<sp/>is<sp/>const,<sp/>or<sp/>append-only,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="780"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0004&quot;<sp/>title=&quot;zerr:ZDDY0004&quot;&gt;zerr:ZDDY0004&lt;/a&gt;]<sp/>or<sp/>[&lt;a</highlight></codeline>
<codeline lineno="781"><highlight class="comment">href=&quot;#ERRZDDY0007&quot;<sp/>title=&quot;zerr:ZDDY0007&quot;&gt;zerr:ZDDY0007&lt;/a&gt;]<sp/>respectively.&lt;/li&gt;</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>expression<sp/>that<sp/>appears<sp/>as<sp/>the<sp/>second<sp/>argument<sp/>to<sp/>the<sp/>function<sp/>call<sp/>is</highlight></codeline>
<codeline lineno="783"><highlight class="comment">evaluated,<sp/>producing<sp/>a<sp/>single<sp/>positive<sp/>integer.<sp/>Let<sp/>$number<sp/>be<sp/>that</highlight></codeline>
<codeline lineno="784"><highlight class="comment">integer.&lt;/li&gt;</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>collection<sp/>has<sp/>fewer<sp/>than<sp/>$number<sp/>nodes,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a</highlight></codeline>
<codeline lineno="786"><highlight class="comment">href=&quot;#ERRZDDY0011&quot;<sp/>title=&quot;zerr:ZDDY0011&quot;&gt;zerr:ZDDY0011&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/>&lt;li&gt;Let<sp/>$nodes<sp/>be<sp/>the<sp/>sequence<sp/>consisting<sp/>of<sp/>the<sp/>first<sp/>$number<sp/>root<sp/>nodes<sp/>in</highlight></codeline>
<codeline lineno="788"><highlight class="comment">the<sp/>collection.&lt;/li&gt;</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="790"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="791"><highlight class="comment">upd:deleteFromCollection($collectionName,<sp/>$nodes).&lt;/li&gt;</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="793"><highlight class="comment"></highlight></codeline>
<codeline lineno="794"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:delete-node-first($collectionName<sp/>as<sp/>xs:QName)</highlight></codeline>
<codeline lineno="796"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="797"><highlight class="comment"></highlight></codeline>
<codeline lineno="798"><highlight class="comment">The<sp/>delete-node-first<sp/>function<sp/>is<sp/>a<sp/>special<sp/>case<sp/>of<sp/>the<sp/>delete-nodes-first</highlight></codeline>
<codeline lineno="799"><highlight class="comment">function.<sp/>Specifically,<sp/>delete-node-first($collectionName)<sp/>is<sp/>equivalent<sp/>to</highlight></codeline>
<codeline lineno="800"><highlight class="comment">delete-nodes-first($collectionName,<sp/>1).</highlight></codeline>
<codeline lineno="801"><highlight class="comment"></highlight></codeline>
<codeline lineno="802"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:delete-nodes-last($collectionName<sp/>as<sp/>xs:QName,<sp/>$number<sp/>as<sp/>xs:unsignedLong)</highlight></codeline>
<codeline lineno="804"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="805"><highlight class="comment"></highlight></codeline>
<codeline lineno="806"><highlight class="comment">The<sp/>delete-nodes-last<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="807"><highlight class="comment"></highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="810"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an</highlight></codeline>
<codeline lineno="811"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0001&quot;</highlight></codeline>
<codeline lineno="812"><highlight class="comment">title=&quot;zerr:ZDDY0001&quot;&gt;zerr:ZDDY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="814"><highlight class="comment">available<sp/>collections<sp/>in<sp/>the<sp/>dynamic<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="815"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0003&quot;<sp/>title=&quot;zerr:ZDDY0003&quot;&gt;zerr:ZDDY0003&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>update<sp/>mode<sp/>of<sp/>the<sp/>collection<sp/>is<sp/>const,<sp/>append-only,<sp/>or<sp/>queue,<sp/>an</highlight></codeline>
<codeline lineno="817"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0004&quot;<sp/>title=&quot;zerr:ZDDY0004&quot;&gt;zerr:ZDDY0004&lt;/a&gt;],</highlight></codeline>
<codeline lineno="818"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0007&quot;<sp/>title=&quot;zerr:ZDDY0007&quot;&gt;zerr:ZDDY0007&lt;/a&gt;],<sp/>or<sp/>[&lt;a</highlight></codeline>
<codeline lineno="819"><highlight class="comment">href=&quot;#ERRZDDY009&quot;<sp/>title=&quot;zerr:ZDDY009&quot;&gt;zerr:ZDDY009&lt;/a&gt;],<sp/>respectively.&lt;/li&gt;</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>expression<sp/>that<sp/>appears<sp/>as<sp/>the<sp/>second<sp/>argument<sp/>to<sp/>the<sp/>function<sp/>call<sp/>is</highlight></codeline>
<codeline lineno="821"><highlight class="comment">evaluated,<sp/>producing<sp/>a<sp/>single<sp/>positive<sp/>integer.<sp/>Let<sp/>$number<sp/>be<sp/>that</highlight></codeline>
<codeline lineno="822"><highlight class="comment">integer.&lt;/li&gt;</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>collection<sp/>has<sp/>fewer<sp/>than<sp/>$number<sp/>nodes,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a</highlight></codeline>
<codeline lineno="824"><highlight class="comment">href=&quot;#ERRZDDY0011&quot;<sp/>title=&quot;zerr:ZDDY0011&quot;&gt;zerr:ZDDY0011&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/>&lt;li&gt;Let<sp/>$nodes<sp/>be<sp/>the<sp/>sequence<sp/>consisting<sp/>of<sp/>the<sp/>last<sp/>$number<sp/>root<sp/>nodes<sp/>in</highlight></codeline>
<codeline lineno="826"><highlight class="comment">the<sp/>collection.&lt;/li&gt;</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="828"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="829"><highlight class="comment">upd:deleteFromCollection($collectionName,<sp/>$nodes).&lt;/li&gt;</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="831"><highlight class="comment"></highlight></codeline>
<codeline lineno="832"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cdml:delete-node-last($collectionName<sp/>as<sp/>xs:QName)</highlight></codeline>
<codeline lineno="834"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="835"><highlight class="comment"></highlight></codeline>
<codeline lineno="836"><highlight class="comment">The<sp/>delete-node-last<sp/>function<sp/>is<sp/>a<sp/>special<sp/>case<sp/>of<sp/>the<sp/>delete-nodes-lasst<sp/>function.</highlight></codeline>
<codeline lineno="837"><highlight class="comment">Specifically,<sp/>delete-node-last($collectionName)<sp/>is<sp/>equivalent<sp/>to<sp/>delete-nodes-last($collectionName,<sp/>1).</highlight></codeline>
<codeline lineno="838"><highlight class="comment"></highlight></codeline>
<codeline lineno="839"><highlight class="comment"></highlight></codeline>
<codeline lineno="840"><highlight class="comment">\subsection<sp/>destroying_collections<sp/>Destroying<sp/>Collections</highlight></codeline>
<codeline lineno="841"><highlight class="comment"></highlight></codeline>
<codeline lineno="842"><highlight class="comment">To<sp/>destroy<sp/>a<sp/>collection,<sp/>Zorba<sp/>provides<sp/>the<sp/>&lt;tt&gt;delete&lt;/tt&gt;<sp/>updating<sp/>function.</highlight></codeline>
<codeline lineno="843"><highlight class="comment">The<sp/>function<sp/>itself<sp/>and<sp/>its<sp/>associated<sp/>update<sp/>primitive<sp/>are<sp/>described<sp/>below.</highlight></codeline>
<codeline lineno="844"><highlight class="comment"></highlight></codeline>
<codeline lineno="845"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>cddl:delete($collectionName<sp/>as<sp/>xs:QName)</highlight></codeline>
<codeline lineno="847"><highlight class="comment"></highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/>upd:deleteCollection($collectionName<sp/>as<sp/>xs<sp/>:QName)</highlight></codeline>
<codeline lineno="849"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="850"><highlight class="comment"></highlight></codeline>
<codeline lineno="851"><highlight class="comment">The<sp/>delete<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="852"><highlight class="comment"></highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="855"><highlight class="comment">statically<sp/>known<sp/>collections<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an</highlight></codeline>
<codeline lineno="856"><highlight class="comment">error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0001&quot;</highlight></codeline>
<codeline lineno="857"><highlight class="comment">title=&quot;zerr:ZDDY0001&quot;&gt;zerr:ZDDY0001&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="859"><highlight class="comment">available<sp/>collections<sp/>in<sp/>the<sp/>dynamic<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="860"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0003&quot;<sp/>title=&quot;zerr:ZDDY0003&quot;&gt;zerr:ZDDY0003&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="862"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="863"><highlight class="comment">upd:deleteCollection($collectionName).&lt;/li&gt;</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="865"><highlight class="comment"></highlight></codeline>
<codeline lineno="866"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="867"><highlight class="comment"></highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>there<sp/>is<sp/>any<sp/>available<sp/>index<sp/>whose<sp/>domain<sp/>expression<sp/>or<sp/>any<sp/>of<sp/>its<sp/>key</highlight></codeline>
<codeline lineno="870"><highlight class="comment">expressions<sp/>reference<sp/>the<sp/>collection,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0013&quot;</highlight></codeline>
<codeline lineno="871"><highlight class="comment">title=&quot;zerr:ZDDY0013&quot;&gt;zerr:ZDDY0013&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>there<sp/>is<sp/>any<sp/>active<sp/>integrity<sp/>constraint<sp/>on<sp/>the<sp/>collection,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="873"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0014&quot;<sp/>title=&quot;zerr:ZDDY0014&quot;&gt;zerr:ZDDY0014&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>there<sp/>is<sp/>any<sp/>in-scope<sp/>variable<sp/>that<sp/>references<sp/>any<sp/>node<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="875"><highlight class="comment">collection,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0015&quot;</highlight></codeline>
<codeline lineno="876"><highlight class="comment">title=&quot;zerr:ZDDY0015&quot;&gt;zerr:ZDDY0015&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>document<sp/>container<sp/>for<sp/>the<sp/>collection<sp/>is<sp/>found<sp/>via<sp/>the<sp/>collections</highlight></codeline>
<codeline lineno="878"><highlight class="comment">table.&lt;/li&gt;</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/><sp/>&lt;li&gt;All<sp/>documents<sp/>in<sp/>the<sp/>container<sp/>are<sp/>destroyed.&lt;/li&gt;</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>container<sp/>itself<sp/>is<sp/>destroyed.&lt;/li&gt;</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>entry<sp/>mapping<sp/>the<sp/>collection<sp/>name<sp/>to<sp/>its<sp/>container<sp/>is<sp/>removed<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="882"><highlight class="comment">collections<sp/>table.&lt;/li&gt;</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="884"><highlight class="comment"></highlight></codeline>
<codeline lineno="885"><highlight class="comment"></highlight></codeline>
<codeline lineno="886"><highlight class="comment">\section<sp/>indexes<sp/>Indexes</highlight></codeline>
<codeline lineno="887"><highlight class="comment"></highlight></codeline>
<codeline lineno="888"><highlight class="comment"></highlight></codeline>
<codeline lineno="889"><highlight class="comment">\n<sp/>Zorba<sp/>supports<sp/>two<sp/>kinds<sp/>of<sp/>indexes,<sp/>&lt;strong&gt;value<sp/>indexes&lt;/strong&gt;<sp/>and<sp/></highlight></codeline>
<codeline lineno="890"><highlight class="comment">&lt;strong&gt;general<sp/>indexes&lt;/strong&gt;.<sp/>As<sp/>shown<sp/>in<sp/>\ref<sp/>indexes_in_action,<sp/>value</highlight></codeline>
<codeline lineno="891"><highlight class="comment">indexes<sp/>can<sp/>be<sp/>used<sp/>to<sp/>optimize<sp/>queries<sp/>involving<sp/>value<sp/>comparisons,<sp/>whereas<sp/></highlight></codeline>
<codeline lineno="892"><highlight class="comment">general<sp/>indexes<sp/>can<sp/>be<sp/>used<sp/>to<sp/>optimize<sp/>queries<sp/>involving</highlight></codeline>
<codeline lineno="893"><highlight class="comment">value<sp/>and/or<sp/>general<sp/>comparisons.<sp/>Although<sp/>general<sp/>indexes<sp/>can<sp/>handle<sp/>both<sp/>kinds<sp/>of</highlight></codeline>
<codeline lineno="894"><highlight class="comment">comparisons,<sp/>value<sp/>indexes<sp/>are<sp/>more<sp/>compact<sp/>and<sp/>efficient,<sp/>and<sp/>as<sp/>a<sp/>result,<sp/>they</highlight></codeline>
<codeline lineno="895"><highlight class="comment">should<sp/>be<sp/>preferred<sp/>over<sp/>general<sp/>indexes<sp/>for<sp/>data<sp/>on<sp/>which<sp/>no<sp/>general<sp/>comparisons</highlight></codeline>
<codeline lineno="896"><highlight class="comment">are<sp/>expected.</highlight></codeline>
<codeline lineno="897"><highlight class="comment"></highlight></codeline>
<codeline lineno="898"><highlight class="comment">\n<sp/>\n<sp/>A<sp/>value<sp/>index<sp/>is<sp/>a<sp/>set<sp/>whose<sp/>contents<sp/>(called<sp/>&lt;strong&gt;index<sp/>entries&lt;/strong&gt;)<sp/></highlight></codeline>
<codeline lineno="899"><highlight class="comment">are<sp/>defined<sp/>by<sp/>a<sp/>&quot;domain&quot;<sp/>expression<sp/>and<sp/>a<sp/>number<sp/>of<sp/>&quot;key&quot;<sp/>expressions.<sp/></highlight></codeline>
<codeline lineno="900"><highlight class="comment">Informally,<sp/>a<sp/>value<sp/>index<sp/>is<sp/>created<sp/>by<sp/>evaluating<sp/>its<sp/>domain<sp/>expression<sp/>first,<sp/></highlight></codeline>
<codeline lineno="901"><highlight class="comment">resulting<sp/>in<sp/>a<sp/>sequence<sp/>of<sp/>nodes<sp/>(called<sp/>the<sp/>index<sp/>&lt;strong&gt;domain<sp/>sequence&lt;/strong&gt;).<sp/></highlight></codeline>
<codeline lineno="902"><highlight class="comment">Then,<sp/>for<sp/>each<sp/>node<sp/>D<sp/>in<sp/>the<sp/>domain</highlight></codeline>
<codeline lineno="903"><highlight class="comment">sequence,<sp/>the<sp/>key<sp/>expressions<sp/>are<sp/>evaluated<sp/>with<sp/>node<sp/>D<sp/>serving<sp/>as<sp/>their</highlight></codeline>
<codeline lineno="904"><highlight class="comment">context<sp/>node.<sp/>A<sp/>key<sp/>expression<sp/>must<sp/>not<sp/>return<sp/>more<sp/>than<sp/>one<sp/>value.<sp/>If<sp/>a</highlight></codeline>
<codeline lineno="905"><highlight class="comment">value<sp/>returned<sp/>by<sp/>a<sp/>key<sp/>expression<sp/>is<sp/>not<sp/>atomic,<sp/>it<sp/>is<sp/>converted<sp/>to<sp/>an<sp/>atomic</highlight></codeline>
<codeline lineno="906"><highlight class="comment">value<sp/>via<sp/>atomization.<sp/>Thus,<sp/>if<sp/>N<sp/>is<sp/>the<sp/>number<sp/>of<sp/>key<sp/>expressions,<sp/>then<sp/>for</highlight></codeline>
<codeline lineno="907"><highlight class="comment">each<sp/>domain<sp/>node,<sp/>an<sp/>associated<sp/>&lt;strong&gt;key<sp/>tuple&lt;/strong&gt;<sp/>of<sp/>N<sp/>atomic<sp/>values</highlight></codeline>
<codeline lineno="908"><highlight class="comment">is<sp/>constructed.<sp/>The<sp/>purpose<sp/>of<sp/>the<sp/>index<sp/>is<sp/>to<sp/>map<sp/>key<sp/>tuples<sp/>to<sp/>domain<sp/>nodes.<sp/>In</highlight></codeline>
<codeline lineno="909"><highlight class="comment">general,<sp/>several<sp/>domain<sp/>nodes<sp/>may<sp/>produce<sp/>the<sp/>same<sp/>key<sp/>tuple.<sp/>As<sp/>a<sp/>result,<sp/>each</highlight></codeline>
<codeline lineno="910"><highlight class="comment">index<sp/>entry<sp/>is<sp/>a<sp/>pair<sp/>consisting<sp/>of<sp/>a<sp/>key<sp/>tuple<sp/>and<sp/>the<sp/>set<sp/>of<sp/>domain<sp/>nodes<sp/>that</highlight></codeline>
<codeline lineno="911"><highlight class="comment">produced<sp/>the<sp/>key<sp/>tuple.</highlight></codeline>
<codeline lineno="912"><highlight class="comment"></highlight></codeline>
<codeline lineno="913"><highlight class="comment">\n<sp/>\n<sp/>General<sp/>comparison<sp/>operators<sp/>accept<sp/>operands<sp/>that<sp/>are<sp/>sequences<sp/>potentially</highlight></codeline>
<codeline lineno="914"><highlight class="comment">containing<sp/>more<sp/>than<sp/>one<sp/>item.<sp/>As<sp/>a<sp/>result,<sp/>the<sp/>main<sp/>difference<sp/>between<sp/>value</highlight></codeline>
<codeline lineno="915"><highlight class="comment">and<sp/>general<sp/>indexes<sp/>is<sp/>the<sp/>the<sp/>later<sp/>allow<sp/>a<sp/>key<sp/>expression<sp/>to<sp/>return<sp/>multiple</highlight></codeline>
<codeline lineno="916"><highlight class="comment">values<sp/>with<sp/>potentially<sp/>different<sp/>data<sp/>types.<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>for<sp/>simplicity,</highlight></codeline>
<codeline lineno="917"><highlight class="comment">the<sp/>current<sp/>Zorba<sp/>implementation<sp/>restricts<sp/>the<sp/>number<sp/>of<sp/>key<sp/>expressions<sp/>for</highlight></codeline>
<codeline lineno="918"><highlight class="comment">general<sp/>indexes<sp/>to<sp/>one<sp/>expression<sp/>only.<sp/></highlight></codeline>
<codeline lineno="919"><highlight class="comment"></highlight></codeline>
<codeline lineno="920"><highlight class="comment">\n<sp/>\n<sp/>Like<sp/>value<sp/>indexes,<sp/>general<sp/>indexes<sp/>are<sp/>sets<sp/>of<sp/>index<sp/>entries,<sp/>where<sp/>each<sp/>index</highlight></codeline>
<codeline lineno="921"><highlight class="comment">entry<sp/>is<sp/>a<sp/>pair<sp/>consisting<sp/>of<sp/>an<sp/>atomic<sp/>key<sp/>value<sp/>and<sp/>the<sp/>set<sp/>of<sp/>associated<sp/></highlight></codeline>
<codeline lineno="922"><highlight class="comment">domain<sp/>nodes.<sp/>Informally,<sp/>the<sp/>set<sp/>of<sp/>entries<sp/>for<sp/>a<sp/>general<sp/>index<sp/>is<sp/>created<sp/></highlight></codeline>
<codeline lineno="923"><highlight class="comment">by<sp/>evaluating<sp/>its<sp/>domain<sp/>expression<sp/>first,<sp/>resulting<sp/>in<sp/>a<sp/>sequence<sp/>of<sp/>domain<sp/></highlight></codeline>
<codeline lineno="924"><highlight class="comment">nodes.<sp/>Then,<sp/>for<sp/>each<sp/>node<sp/>D<sp/>in<sp/>the<sp/>domain<sp/>sequence,<sp/>the<sp/>key<sp/>expression<sp/>is</highlight></codeline>
<codeline lineno="925"><highlight class="comment">evaluated<sp/>with<sp/>node<sp/>D<sp/>serving<sp/>as<sp/>its<sp/>context<sp/>node.<sp/>A<sp/>key<sp/>expression<sp/>may<sp/>return</highlight></codeline>
<codeline lineno="926"><highlight class="comment">a<sp/>sequence<sp/>of<sp/>arbitrary<sp/>number<sp/>of<sp/>items,<sp/>called<sp/>the<sp/>&lt;strong&gt;key<sp/>sequence&lt;/strong&gt;.</highlight></codeline>
<codeline lineno="927"><highlight class="comment">Items<sp/>in<sp/>the<sp/>key<sp/>sequence<sp/>may<sp/>have<sp/>different<sp/>data<sp/>types.<sp/>If<sp/>an<sp/>item<sp/>in<sp/>the<sp/>key</highlight></codeline>
<codeline lineno="928"><highlight class="comment">sequence<sp/>is<sp/>a<sp/>node,<sp/>it<sp/>is<sp/>converted<sp/>to<sp/>one<sp/>or<sp/>more<sp/>atomic<sp/>values<sp/>via<sp/>atomization,</highlight></codeline>
<codeline lineno="929"><highlight class="comment">and<sp/>the<sp/>atomic<sp/>values<sp/>replace<sp/>the<sp/>node<sp/>in<sp/>the<sp/>key<sp/>sequence.<sp/>If<sp/>an<sp/>item<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="930"><highlight class="comment">key<sp/>sequence<sp/>has<sp/>type<sp/>xs:untypedAtomic,<sp/>it<sp/>is<sp/>removed<sp/>from<sp/>the<sp/>key<sp/>sequence<sp/>and</highlight></codeline>
<codeline lineno="931"><highlight class="comment">is<sp/>cast<sp/>to<sp/>every<sp/>other<sp/>atomic<sp/>built-in<sp/>type.<sp/>Then,<sp/>for<sp/>each<sp/>successful<sp/>cast,</highlight></codeline>
<codeline lineno="932"><highlight class="comment">the<sp/>resulting<sp/>atomic<sp/>value<sp/>is<sp/>put<sp/>into<sp/>the<sp/>key<sp/>sequence.<sp/>Thus,<sp/>for<sp/>each<sp/>domain</highlight></codeline>
<codeline lineno="933"><highlight class="comment">node<sp/>D,<sp/>a<sp/>key<sp/>sequence<sp/>is<sp/>constructed<sp/>that<sp/>contains<sp/>atomic<sp/>values<sp/>none<sp/>of<sp/>which</highlight></codeline>
<codeline lineno="934"><highlight class="comment">has<sp/>type<sp/>xs:untypedAtomic.<sp/>For<sp/>each<sp/>value<sp/>K<sp/>in<sp/>this<sp/>key<sp/>sequence,<sp/>the<sp/>pair</highlight></codeline>
<codeline lineno="935"><highlight class="comment">[K,<sp/>D]<sp/>is<sp/>inserted<sp/>in<sp/>the<sp/>index.<sp/>If<sp/>an<sp/>entry<sp/>for<sp/>K<sp/>exists<sp/>already,<sp/>D<sp/>is<sp/>inserted</highlight></codeline>
<codeline lineno="936"><highlight class="comment">in<sp/>the<sp/>associated<sp/>set<sp/>of<sp/>domain<sp/>nodes;<sp/>otherwise<sp/>a<sp/>new<sp/>index<sp/>entry<sp/>is<sp/>created,</highlight></codeline>
<codeline lineno="937"><highlight class="comment">mapping<sp/>K<sp/>to<sp/>the<sp/>set<sp/>{<sp/>D<sp/>}.</highlight></codeline>
<codeline lineno="938"><highlight class="comment"></highlight></codeline>
<codeline lineno="939"><highlight class="comment">\n<sp/>Zorba<sp/>supports<sp/>the<sp/>following<sp/>five<sp/>operations<sp/>on<sp/>indexes:</highlight></codeline>
<codeline lineno="940"><highlight class="comment">&lt;a<sp/>href=&quot;#index_declaration&quot;&gt;declaration&lt;/a&gt;,</highlight></codeline>
<codeline lineno="941"><highlight class="comment">&lt;a<sp/>href=&quot;#index_creation&quot;&gt;creation&lt;/a&gt;,</highlight></codeline>
<codeline lineno="942"><highlight class="comment">&lt;a<sp/>href=&quot;#index_deletion&quot;&gt;deletion&lt;/a&gt;,</highlight></codeline>
<codeline lineno="943"><highlight class="comment">&lt;a<sp/>href=&quot;#index_probing&quot;&gt;probing&lt;/a&gt;<sp/>and</highlight></codeline>
<codeline lineno="944"><highlight class="comment">&lt;a<sp/>href=&quot;#index_maintenance&quot;&gt;maintenance&lt;/a&gt;.</highlight></codeline>
<codeline lineno="945"><highlight class="comment">These<sp/>are<sp/>explained<sp/>briefly<sp/>in<sp/>the<sp/>following<sp/>simple<sp/>example.<sp/>Full<sp/>details<sp/>for</highlight></codeline>
<codeline lineno="946"><highlight class="comment">each<sp/>operation<sp/>are<sp/>provided<sp/>in<sp/>the<sp/>subsections<sp/>after<sp/>the<sp/>example.</highlight></codeline>
<codeline lineno="947"><highlight class="comment"></highlight></codeline>
<codeline lineno="948"><highlight class="comment"></highlight></codeline>
<codeline lineno="949"><highlight class="comment">\subsection<sp/>indexes_in_action<sp/>Indexes<sp/>in<sp/>action<sp/>-<sp/>A<sp/>simple<sp/>example</highlight></codeline>
<codeline lineno="950"><highlight class="comment"></highlight></codeline>
<codeline lineno="951"><highlight class="comment"></highlight></codeline>
<codeline lineno="952"><highlight class="comment">\n<sp/>Let<sp/>us<sp/>consider<sp/>the<sp/>same<sp/>news<sp/>application<sp/>we<sp/>used<sp/>in<sp/>\ref<sp/>collections_in_action.</highlight></codeline>
<codeline lineno="953"><highlight class="comment">In<sp/>this<sp/>example,<sp/>we<sp/>will<sp/>show<sp/>how<sp/>to<sp/>create<sp/>and<sp/>use<sp/>indexes<sp/>on<sp/>the<sp/>collections<sp/>of</highlight></codeline>
<codeline lineno="954"><highlight class="comment">the<sp/>news<sp/>organization.<sp/>First,<sp/>let<sp/>us<sp/>assume<sp/>that<sp/>each<sp/>employee<sp/>has<sp/>a<sp/>city<sp/>where</highlight></codeline>
<codeline lineno="955"><highlight class="comment">he/she<sp/>is<sp/>currently<sp/>stationed<sp/>at.<sp/>We<sp/>want<sp/>to<sp/>create<sp/>an<sp/>index<sp/>that<sp/>maps<sp/>city</highlight></codeline>
<codeline lineno="956"><highlight class="comment">names<sp/>to<sp/>the<sp/>employees<sp/>that<sp/>are<sp/>stationed<sp/>in<sp/>those<sp/>cities.<sp/>The<sp/>index<sp/>will</highlight></codeline>
<codeline lineno="957"><highlight class="comment">contain<sp/>one<sp/>entry<sp/>for<sp/>each<sp/>city<sp/>where<sp/>at<sp/>least<sp/>one<sp/>employee<sp/>is<sp/>stationed<sp/>in.<sp/>Let</highlight></codeline>
<codeline lineno="958"><highlight class="comment">us<sp/>also<sp/>assume<sp/>that<sp/>we<sp/>want<sp/>to<sp/>search<sp/>for<sp/>journalists<sp/>based<sp/>on<sp/>the<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="959"><highlight class="comment">articles<sp/>they<sp/>have<sp/>written.<sp/>For<sp/>this,<sp/>we<sp/>will<sp/>create<sp/>an<sp/>index<sp/>that<sp/>maps<sp/>article</highlight></codeline>
<codeline lineno="960"><highlight class="comment">counts<sp/>to<sp/>the<sp/>employees<sp/>who<sp/>are<sp/>journalists<sp/>and<sp/>have<sp/>produced<sp/>that<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="961"><highlight class="comment">articles.<sp/>Finally,<sp/>we<sp/>want<sp/>to<sp/>be<sp/>able<sp/>to<sp/>quickly<sp/>find<sp/>the<sp/>manager<sp/>of<sp/>any<sp/>given</highlight></codeline>
<codeline lineno="962"><highlight class="comment">employee.<sp/>For<sp/>this,<sp/>we<sp/>will<sp/>create<sp/>an<sp/>index<sp/>that<sp/>maps<sp/>employee<sp/>ids<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="963"><highlight class="comment">manager<sp/>of<sp/>the<sp/>associated<sp/>employee.</highlight></codeline>
<codeline lineno="964"><highlight class="comment"></highlight></codeline>
<codeline lineno="965"><highlight class="comment">\n<sp/>\n<sp/>Before<sp/>an<sp/>index<sp/>can<sp/>be<sp/>created,<sp/>it<sp/>must<sp/>be<sp/>declared.<sp/>An<sp/>&lt;a<sp/>href=&quot;#index_declaration&quot;&gt;</highlight></codeline>
<codeline lineno="966"><highlight class="comment">index<sp/>declaration&lt;/a&gt;<sp/>describes<sp/>the<sp/>index<sp/>by<sp/>providing<sp/>its<sp/>domain<sp/>expression,<sp/></highlight></codeline>
<codeline lineno="967"><highlight class="comment">its<sp/>key<sp/>expressions,<sp/>and<sp/>certain<sp/>index<sp/>properties<sp/>(declared<sp/>as<sp/>annotations);<sp/>it<sp/>also<sp/>specifies<sp/>a<sp/>name<sp/>for<sp/></highlight></codeline>
<codeline lineno="968"><highlight class="comment">referencing<sp/>the<sp/>index<sp/>in<sp/>subsequent<sp/>operations.<sp/>Like<sp/>collections,<sp/>indexes<sp/>must<sp/></highlight></codeline>
<codeline lineno="969"><highlight class="comment">be<sp/>declared<sp/>inside<sp/>the<sp/>prolog<sp/>of<sp/>library<sp/>modules.<sp/>In<sp/>terms<sp/>of<sp/>the<sp/>XQuery<sp/>language,</highlight></codeline>
<codeline lineno="970"><highlight class="comment">index<sp/>declarations<sp/>become<sp/>part<sp/>of<sp/>a<sp/>module&apos;s<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="971"><highlight class="comment"></highlight></codeline>
<codeline lineno="972"><highlight class="comment">\n<sp/>\n<sp/>In<sp/>this<sp/>example,<sp/>the<sp/>index<sp/>declarations<sp/>are<sp/>placed<sp/>inside<sp/>the<sp/></highlight></codeline>
<codeline lineno="973"><highlight class="comment">&lt;a<sp/>href=&quot;#lib_module_news_data_indexes&quot;&gt;&quot;news-data&quot;&lt;/a&gt;<sp/>library</highlight></codeline>
<codeline lineno="974"><highlight class="comment">module<sp/>shown<sp/>below<sp/>(same<sp/>as<sp/>the<sp/>module<sp/>we<sp/>saw<sp/>in<sp/>\ref<sp/>collections_in_action,</highlight></codeline>
<codeline lineno="975"><highlight class="comment">except<sp/>for<sp/>the<sp/>additional<sp/>index<sp/>declarations).<sp/>The<sp/>first<sp/>index<sp/>declaration</highlight></codeline>
<codeline lineno="976"><highlight class="comment">assigns<sp/>the<sp/>name<sp/>news-data:CityEmp<sp/>to<sp/>the<sp/>index.<sp/>It<sp/>uses<sp/>the<sp/>&quot;on<sp/>nodes&quot;<sp/>and<sp/>&quot;by&quot;</highlight></codeline>
<codeline lineno="977"><highlight class="comment">keywords<sp/>to<sp/>specify<sp/>the<sp/>domain<sp/>and<sp/>key<sp/>expressions<sp/>respectively.<sp/>The<sp/>&quot;as&quot;</highlight></codeline>
<codeline lineno="978"><highlight class="comment">keyword<sp/>specifies<sp/>a<sp/>target<sp/>atomic<sp/>data<sp/>type<sp/>which<sp/>the<sp/>result<sp/>of<sp/>the<sp/>key</highlight></codeline>
<codeline lineno="979"><highlight class="comment">expression<sp/>must<sp/>match<sp/>with<sp/>(after<sp/>atomization).<sp/>The<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="980"><highlight class="comment">&apos;%an:value-equality&apos;<sp/>index.<sp/>This<sp/>means<sp/>that<sp/>it<sp/>can<sp/>be<sp/>used<sp/>to<sp/>find<sp/>the<sp/>employees<sp/>in</highlight></codeline>
<codeline lineno="981"><highlight class="comment">a<sp/>particular<sp/>city,<sp/>but<sp/>not<sp/>in<sp/>a<sp/>&quot;range&quot;<sp/>of<sp/>cities.<sp/>In<sp/>other<sp/>words,<sp/>the<sp/>index<sp/>is</highlight></codeline>
<codeline lineno="982"><highlight class="comment">not<sp/>aware<sp/>of<sp/>any<sp/>ordering<sp/>among<sp/>city<sp/>names.<sp/>Finally,<sp/>the<sp/>maintenance<sp/>property<sp/>of</highlight></codeline>
<codeline lineno="983"><highlight class="comment">the<sp/>index<sp/>is<sp/>set<sp/>to<sp/>&quot;automatically<sp/>maintained&quot;<sp/>(&apos;%an:automatic&apos;).<sp/>Briefly,<sp/>an<sp/>automatically</highlight></codeline>
<codeline lineno="984"><highlight class="comment">maintained<sp/>index<sp/>is<sp/>one<sp/>whose<sp/>maintenance<sp/>is<sp/>the<sp/>responsibility<sp/>of<sp/>Zorba<sp/>rather</highlight></codeline>
<codeline lineno="985"><highlight class="comment">than<sp/>the<sp/>XQuery<sp/>programmers.<sp/></highlight></codeline>
<codeline lineno="986"><highlight class="comment"></highlight></codeline>
<codeline lineno="987"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>second<sp/>index<sp/>declaration<sp/>assigns<sp/>the<sp/>name</highlight></codeline>
<codeline lineno="988"><highlight class="comment">news-data:ArtCountEmp<sp/>to<sp/>the<sp/>index.<sp/>Its<sp/>domain<sp/>expression<sp/>selects<sp/>all<sp/>employees</highlight></codeline>
<codeline lineno="989"><highlight class="comment">who<sp/>are<sp/>journalists.<sp/>Its<sp/>key<sp/>expression<sp/>computes<sp/>the<sp/>number<sp/>of<sp/>articles<sp/>written</highlight></codeline>
<codeline lineno="990"><highlight class="comment">by<sp/>the<sp/>&quot;current&quot;<sp/>journalist.<sp/>This<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>a<sp/>&quot;value<sp/>range&quot;<sp/>(&apos;%an:value-range&apos;)<sp/>index,</highlight></codeline>
<codeline lineno="991"><highlight class="comment">which<sp/>means<sp/>that<sp/>it<sp/>can<sp/>be<sp/>used<sp/>to<sp/>find<sp/>journalists<sp/>whose<sp/>article<sp/>count<sp/>is</highlight></codeline>
<codeline lineno="992"><highlight class="comment">within<sp/>a<sp/>given<sp/>range.<sp/>Finally,<sp/>the<sp/>index<sp/>is<sp/>also<sp/>declared<sp/>as<sp/>&quot;manually</highlight></codeline>
<codeline lineno="993"><highlight class="comment">maintained&quot;<sp/>(&apos;%an:manual&apos;),<sp/>which<sp/>means<sp/>that<sp/>programmers<sp/>must<sp/>explicitly<sp/>request<sp/>that<sp/>the<sp/>index</highlight></codeline>
<codeline lineno="994"><highlight class="comment">be<sp/>synchronized<sp/>with<sp/>the<sp/>underlying<sp/>data.<sp/></highlight></codeline>
<codeline lineno="995"><highlight class="comment"></highlight></codeline>
<codeline lineno="996"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>last<sp/>index<sp/>declaration<sp/>assigns<sp/>the<sp/>name<sp/>news-data:EmpMgr<sp/>to<sp/>the<sp/>index.<sp/></highlight></codeline>
<codeline lineno="997"><highlight class="comment">The<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>a<sp/>&apos;%an:general-equality&apos;<sp/>index,<sp/>which,<sp/>like<sp/>&apos;%an:value-equality&apos;</highlight></codeline>
<codeline lineno="998"><highlight class="comment">means<sp/>that<sp/>the<sp/>index<sp/>does<sp/>not<sp/>maintain<sp/>its<sp/>keys<sp/>in<sp/>any<sp/>order.<sp/>The<sp/>index<sp/>key</highlight></codeline>
<codeline lineno="999"><highlight class="comment">expression<sp/>selects,<sp/>for<sp/>each<sp/>employee<sp/>E,<sp/>the<sp/>ids<sp/>of<sp/>the<sp/>employees<sp/>managed<sp/>by<sp/>E.<sp/></highlight></codeline>
<codeline lineno="1000"><highlight class="comment">Notice<sp/>that<sp/>this<sp/>set<sp/>of<sp/>ids<sp/>may<sp/>be<sp/>empty.<sp/>The<sp/>index<sp/>will<sp/>contain<sp/>an<sp/>entry<sp/>mapping<sp/></highlight></codeline>
<codeline lineno="1001"><highlight class="comment">the<sp/>empty<sp/>sequence<sp/>to<sp/>the<sp/>employees<sp/>who<sp/>do<sp/>not<sp/>manage<sp/>anybody.<sp/>Notice<sp/>also<sp/>that<sp/></highlight></codeline>
<codeline lineno="1002"><highlight class="comment">no<sp/>type<sp/>declaration<sp/>is<sp/>required<sp/>for<sp/>the<sp/>key<sp/>expression.<sp/>Typically,<sp/>the<sp/>employee<sp/></highlight></codeline>
<codeline lineno="1003"><highlight class="comment">ids<sp/>will<sp/>all<sp/>be<sp/>integers<sp/>or<sp/>strings<sp/>or<sp/>untypedAtomic.<sp/>All<sp/>of<sp/>these<sp/>cases<sp/>can<sp/>be<sp/></highlight></codeline>
<codeline lineno="1004"><highlight class="comment">handled<sp/>by<sp/>the<sp/>news-data:EmpMgr<sp/>index,<sp/>as<sp/>well<sp/>as<sp/>the<sp/>not<sp/>very<sp/>likely<sp/>scenario<sp/></highlight></codeline>
<codeline lineno="1005"><highlight class="comment">where<sp/>different<sp/>kinds<sp/>of<sp/>employees<sp/>have<sp/>ids<sp/>of<sp/>different<sp/>data<sp/>types.</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"></highlight></codeline>
<codeline lineno="1007"><highlight class="comment">&lt;a<sp/>name=&quot;lib_module_news_data_indexes&quot;<sp/>id=&quot;lib_module_news_data_indexes&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1008"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;news-data&quot;<sp/>Library<sp/>Module<sp/>:)</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"></highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/><sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;;</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"></highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>cdml<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/collections/dml&quot;;</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"></highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/><sp/>import<sp/>schema<sp/>namespace<sp/>news-schemas<sp/>=<sp/>&quot;http://www.news.org/schemas&quot;;</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"></highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/><sp/>declare<sp/>namespace<sp/>an<sp/>=<sp/>&quot;http://zorba.io/annotations&quot;;</highlight></codeline>
<codeline lineno="1018"><highlight class="comment"></highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/>declare<sp/>collection<sp/>news-data:employees<sp/>as<sp/>schema-element(news-schema:employee)*;</highlight></codeline>
<codeline lineno="1020"><highlight class="comment"></highlight></codeline>
<codeline lineno="1021"><highlight class="comment"><sp/><sp/>declare<sp/>collection<sp/>news-data:articles<sp/>as<sp/>node()*;</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"></highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/>declare<sp/>%an:const<sp/>%an:ordered<sp/>%an:read-only-nodes<sp/>collection<sp/>news-data:months</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>schema-element(news-schema:month)*;</highlight></codeline>
<codeline lineno="1025"><highlight class="comment"></highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/><sp/>declare<sp/>%an:automatic<sp/>%an:value-equality<sp/>index<sp/>news-data:CityEmp</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>nodes<sp/>cdml:collection(xs:QName(&quot;news-data:employees&quot;))/employee</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>.//station/city<sp/>as<sp/>xs:string;</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"></highlight></codeline>
<codeline lineno="1030"><highlight class="comment"><sp/><sp/>declare<sp/>%an:manual<sp/>%an:value-range<sp/>index<sp/>news-data:ArtCountEmp</highlight></codeline>
<codeline lineno="1031"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>nodes<sp/>cdml:collection(xs:QName(&quot;news-data:employees&quot;))/employee[./position/@kind<sp/>eq<sp/>&quot;journalist&quot;]</highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>count(for<sp/>$art<sp/>in<sp/>cdml:collection(xs:QName(&quot;news-data:articles&quot;))//article</highlight></codeline>
<codeline lineno="1033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>$art/empid<sp/>=<sp/>./id</highlight></codeline>
<codeline lineno="1034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>$art)<sp/>as<sp/>xs:integer;</highlight></codeline>
<codeline lineno="1035"><highlight class="comment"></highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/><sp/>declare<sp/>%an:automatic<sp/>%an:general-equality<sp/>index<sp/>news-data:EmpMgr</highlight></codeline>
<codeline lineno="1037"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>nodes<sp/>cdml:collection(xs:QName(&quot;news-data:employees&quot;))/employee</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>./manages//@empid;</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"></highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:employees<sp/>:=<sp/>xs:QName(&quot;news-data:employees&quot;);</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:articles<sp/>:=<sp/>xs:QName(&quot;news-data:articles&quot;);</highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:months<sp/>:=<sp/>xs:QName(&quot;news-data:months&quot;);</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:CityEmp<sp/>:=<sp/>xs:QName(&quot;news-data:CityEmp&quot;);</highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:ArtCountEmp<sp/>:=<sp/>xs:QName(&quot;news-data:ArtCountEmp&quot;);</highlight></codeline>
<codeline lineno="1045"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:EmpMgr<sp/>:=<sp/>xs:QName(&quot;news-data:EmpMgr&quot;);</highlight></codeline>
<codeline lineno="1046"><highlight class="comment"></highlight></codeline>
<codeline lineno="1047"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1048"><highlight class="comment"></highlight></codeline>
<codeline lineno="1049"><highlight class="comment">Having<sp/>declared<sp/>the<sp/>indexes<sp/>in<sp/>a<sp/>library<sp/>module,<sp/>they<sp/>can<sp/>now<sp/>be<sp/>created.</highlight></codeline>
<codeline lineno="1050"><highlight class="comment">This<sp/>is<sp/>done<sp/>by<sp/>the<sp/>&lt;a<sp/>href=&quot;#admin_script_3&quot;&gt;&quot;admin-script-3&quot;&lt;/a&gt;<sp/>script<sp/>shown<sp/>below.</highlight></codeline>
<codeline lineno="1051"><highlight class="comment">The<sp/>script<sp/>must<sp/>first<sp/>import<sp/>the<sp/>&lt;a<sp/>href=&quot;#lib_module_news_data_indexes&quot;&gt;</highlight></codeline>
<codeline lineno="1052"><highlight class="comment">&quot;news-data&quot;&lt;/a&gt;<sp/>module.<sp/>As<sp/>far<sp/>as<sp/>indexes<sp/>are<sp/>concerned,<sp/>the</highlight></codeline>
<codeline lineno="1053"><highlight class="comment">effect<sp/>of<sp/>this<sp/>import<sp/>is<sp/>to<sp/>create<sp/>three<sp/>entries<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>main</highlight></codeline>
<codeline lineno="1054"><highlight class="comment">module,<sp/>mapping<sp/>the<sp/>index<sp/>names<sp/>to<sp/>the<sp/>index<sp/>definitions<sp/>(domain<sp/>expression,<sp/>key</highlight></codeline>
<codeline lineno="1055"><highlight class="comment">specification,<sp/>and<sp/>properties).<sp/>Then,<sp/>the<sp/>query<sp/>creates<sp/>the<sp/>indexes<sp/>by<sp/>invoking</highlight></codeline>
<codeline lineno="1056"><highlight class="comment">the<sp/>&lt;a<sp/>href=&quot;#create_index&quot;&gt;iddl:create&lt;/a&gt;<sp/>function,<sp/>passing<sp/>the<sp/>name<sp/>of<sp/>the<sp/>index<sp/>as<sp/>input.</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"></highlight></codeline>
<codeline lineno="1058"><highlight class="comment">\n<sp/>\n<sp/>Let<sp/>us<sp/>consider<sp/>the<sp/>creation<sp/>of<sp/>the<sp/>CityEmp<sp/>index<sp/>(the<sp/>process<sp/>is<sp/>the<sp/>similar</highlight></codeline>
<codeline lineno="1059"><highlight class="comment">for<sp/>the<sp/>ArtCountEmp<sp/>and<sp/>EmpMgr<sp/>indexes).<sp/>&lt;a<sp/>href=&quot;#index_creation&quot;&gt;Index<sp/>Creation&lt;/a&gt;<sp/></highlight></codeline>
<codeline lineno="1060"><highlight class="comment">starts<sp/>with<sp/>retrieving<sp/>the<sp/>index<sp/>definition<sp/>from<sp/>the<sp/>static</highlight></codeline>
<codeline lineno="1061"><highlight class="comment">context,<sp/>using<sp/>the<sp/>index<sp/>name.<sp/>Then,<sp/>an<sp/>index<sp/>container<sp/>is<sp/>created,<sp/>whose</highlight></codeline>
<codeline lineno="1062"><highlight class="comment">entries<sp/>will<sp/>be<sp/>pairs<sp/>associating<sp/>a<sp/>city<sp/>name<sp/>with<sp/>a<sp/>set<sp/>of<sp/>employees.<sp/>Next,<sp/>the</highlight></codeline>
<codeline lineno="1063"><highlight class="comment">index<sp/>container<sp/>is<sp/>populated<sp/>using<sp/>the<sp/>process<sp/>outlined<sp/>earlier:<sp/>The<sp/>domain</highlight></codeline>
<codeline lineno="1064"><highlight class="comment">expression<sp/>is<sp/>evaluated,<sp/>and<sp/>for<sp/>each<sp/>employee<sp/>node<sp/>E<sp/>in<sp/>the<sp/>domain<sp/>sequence,</highlight></codeline>
<codeline lineno="1065"><highlight class="comment">the<sp/>name<sp/>of<sp/>the<sp/>city<sp/>C<sp/>where<sp/>the<sp/>employee<sp/>is<sp/>currently<sp/>stationed<sp/>in<sp/>is<sp/>retrieved</highlight></codeline>
<codeline lineno="1066"><highlight class="comment">by<sp/>evaluating<sp/>the<sp/>key<sp/>expression,<sp/>atomizing<sp/>its<sp/>result,<sp/>and<sp/>checking<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="1067"><highlight class="comment">atomic<sp/>value<sp/>matches<sp/>the<sp/>specified<sp/>target<sp/>type.<sp/>Finally,<sp/>the<sp/>pair<sp/>[E,<sp/>C]<sp/>is</highlight></codeline>
<codeline lineno="1068"><highlight class="comment">inserted<sp/>in<sp/>the<sp/>index:<sp/>if<sp/>an<sp/>entry<sp/>for<sp/>C<sp/>exists<sp/>already,<sp/>E<sp/>is<sp/>inserted<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1069"><highlight class="comment">set<sp/>associated<sp/>with<sp/>C;<sp/>otherwise,<sp/>an<sp/>new<sp/>entry<sp/>is<sp/>created<sp/>mapping<sp/>C<sp/>to<sp/>the<sp/>set<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="comment">E<sp/>}.<sp/>The<sp/>last<sp/>step<sp/>in<sp/>index<sp/>creation<sp/>involves<sp/>registering<sp/>the<sp/>index<sp/>inside<sp/>an</highlight></codeline>
<codeline lineno="1071"><highlight class="comment">&lt;strong&gt;indexes<sp/>table&lt;/strong&gt;<sp/>that<sp/>maps<sp/>index<sp/>names<sp/>to<sp/>index<sp/>containers.<sp/>The</highlight></codeline>
<codeline lineno="1072"><highlight class="comment">index<sp/>container<sp/>will<sp/>remain<sp/>registered<sp/>until<sp/>it<sp/>is<sp/>destroyed<sp/>by<sp/>a<sp/>call<sp/>to<sp/>the<sp/>&lt;a</highlight></codeline>
<codeline lineno="1073"><highlight class="comment">href=&quot;#delete_index&quot;&gt;iddl:delete&lt;/a&gt;<sp/>function</highlight></codeline>
<codeline lineno="1074"><highlight class="comment">(see<sp/>the<sp/>&lt;a<sp/>href=&quot;#admin_script_4&quot;&gt;&quot;admin-script-4&quot;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1075"><highlight class="comment">script<sp/>below).</highlight></codeline>
<codeline lineno="1076"><highlight class="comment"></highlight></codeline>
<codeline lineno="1077"><highlight class="comment">&lt;a<sp/>name=&quot;admin_script_3&quot;<sp/>id=&quot;admin_script_3&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1078"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1079"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;admin-script-3&quot;<sp/>script<sp/>:)</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"></highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>iddf<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/indexes/ddl&quot;;</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"></highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;<sp/>at<sp/>&quot;news_data.xqlib&quot;;</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"></highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/><sp/>iddf:create($news-data:CityEmp);</highlight></codeline>
<codeline lineno="1086"><highlight class="comment"></highlight></codeline>
<codeline lineno="1087"><highlight class="comment"><sp/><sp/>iddf:create($news-data:ArtCountEmp);</highlight></codeline>
<codeline lineno="1088"><highlight class="comment"></highlight></codeline>
<codeline lineno="1089"><highlight class="comment"><sp/><sp/>iddf:create($news-data:EmpMgr);</highlight></codeline>
<codeline lineno="1090"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1091"><highlight class="comment"></highlight></codeline>
<codeline lineno="1092"><highlight class="comment">The<sp/>next<sp/>step<sp/>in<sp/>this<sp/>example<sp/>is<sp/>to<sp/>show<sp/>how<sp/>the<sp/>index<sp/>can<sp/>be<sp/>used<sp/>to<sp/>to</highlight></codeline>
<codeline lineno="1093"><highlight class="comment">optimize<sp/>query<sp/>performance,<sp/>which<sp/>of<sp/>course,<sp/>is<sp/>the<sp/>primary<sp/>motivation<sp/>for</highlight></codeline>
<codeline lineno="1094"><highlight class="comment">supporting<sp/>indexes<sp/>in<sp/>any<sp/>data-processing<sp/>system.<sp/>Zorba<sp/>provides<sp/>four<sp/>functions</highlight></codeline>
<codeline lineno="1095"><highlight class="comment">for<sp/>&lt;a<sp/>href=&quot;#index_probing&quot;&gt;index<sp/>probing&lt;/a&gt;:</highlight></codeline>
<codeline lineno="1096"><highlight class="comment">&lt;a<sp/>href=&quot;#probe_index_point_value&quot;&gt;idml:probe-index-point-value&lt;/a&gt;,<sp/></highlight></codeline>
<codeline lineno="1097"><highlight class="comment">&lt;a<sp/>href=&quot;#probe_index_range_value&quot;&gt;idml:probe-index-range-value&lt;/a&gt;,</highlight></codeline>
<codeline lineno="1098"><highlight class="comment">&lt;a<sp/>href=&quot;#probe_index_point_general&quot;&gt;idml:probe-index-point-general&lt;/a&gt;,<sp/>and<sp/></highlight></codeline>
<codeline lineno="1099"><highlight class="comment">&lt;a<sp/>href=&quot;#probe_index_range_general&quot;&gt;idml:probe-index-range-general&lt;/a&gt;.</highlight></codeline>
<codeline lineno="1100"><highlight class="comment">idml:probe-index-point-value<sp/>is<sp/>supported<sp/>by<sp/>all<sp/>kind<sp/>of<sp/>indexes,</highlight></codeline>
<codeline lineno="1101"><highlight class="comment">idml:probe-index-point-general<sp/>is<sp/>supported<sp/>by<sp/>general<sp/>indexes<sp/>(equality<sp/>and<sp/>range),</highlight></codeline>
<codeline lineno="1102"><highlight class="comment">idml:probe-index-range-value<sp/>is<sp/>supported<sp/>by<sp/>value<sp/>and<sp/>general<sp/>range<sp/>indexes,</highlight></codeline>
<codeline lineno="1103"><highlight class="comment">and<sp/>idml:probe-index-range-general<sp/>is<sp/>supported<sp/>by<sp/>general<sp/>range<sp/>indexes<sp/>only.</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"></highlight></codeline>
<codeline lineno="1105"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>&lt;a<sp/>href=&quot;#query_probe_1&quot;&gt;&quot;probe-1&quot;&lt;/a&gt;<sp/>query<sp/>illustrates<sp/>the</highlight></codeline>
<codeline lineno="1106"><highlight class="comment">use<sp/>of<sp/>idml:probe-index-point-value.<sp/>The<sp/>query<sp/>returns<sp/>the<sp/>names<sp/>of<sp/>all<sp/>employees</highlight></codeline>
<codeline lineno="1107"><highlight class="comment">stationed<sp/>in<sp/>Paris.<sp/>As<sp/>shown,<sp/>the<sp/>idml:probe-index-point-value<sp/>function<sp/>takes<sp/>the</highlight></codeline>
<codeline lineno="1108"><highlight class="comment">index<sp/>name<sp/>and<sp/>the<sp/>keyword<sp/>&quot;Paris&quot;<sp/>as<sp/>inputs.<sp/>It<sp/>uses<sp/>the<sp/>index<sp/>name<sp/>to<sp/>find<sp/>the</highlight></codeline>
<codeline lineno="1109"><highlight class="comment">index<sp/>container<sp/>via<sp/>the<sp/>indexes<sp/>tables,<sp/>looks-up<sp/>the<sp/>entry<sp/>for<sp/>&quot;Paris&quot;<sp/>inside</highlight></codeline>
<codeline lineno="1110"><highlight class="comment">this<sp/>container,<sp/>and<sp/>returns<sp/>all<sp/>the<sp/>associated<sp/>employee<sp/>nodes.</highlight></codeline>
<codeline lineno="1111"><highlight class="comment"></highlight></codeline>
<codeline lineno="1112"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>&lt;a<sp/>href=&quot;#query_probe_2&quot;&gt;&quot;probe-2&quot;&lt;/a&gt;<sp/>query<sp/>illustrates</highlight></codeline>
<codeline lineno="1113"><highlight class="comment">index<sp/>probing<sp/>via<sp/>the<sp/>idml:probe-index-range-value<sp/>function.<sp/>The<sp/>query<sp/>returns<sp/>all</highlight></codeline>
<codeline lineno="1114"><highlight class="comment">journalists<sp/>who<sp/>have<sp/>written<sp/>at<sp/>least<sp/>100<sp/>articles.<sp/>As<sp/>shown,<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="1115"><highlight class="comment">parameter<sp/>of<sp/>the<sp/>idml:probe-index-range-value<sp/>function<sp/>is<sp/>the<sp/>index<sp/>name,<sp/>followed<sp/>by</highlight></codeline>
<codeline lineno="1116"><highlight class="comment">6<sp/>parameters<sp/>per<sp/>key<sp/>expression.<sp/>The<sp/>6<sp/>parameters<sp/>specify<sp/>a<sp/>range<sp/>of<sp/>value<sp/>for</highlight></codeline>
<codeline lineno="1117"><highlight class="comment">the<sp/>key<sp/>values:<sp/>the<sp/>first<sp/>2<sp/>are<sp/>the<sp/>lower<sp/>and<sp/>upper<sp/>values<sp/>of<sp/>the<sp/>range,<sp/>the</highlight></codeline>
<codeline lineno="1118"><highlight class="comment">next<sp/>two<sp/>are<sp/>booleans<sp/>that<sp/>specify<sp/>whether<sp/>the<sp/>range<sp/>does<sp/>indeed<sp/>have<sp/>a<sp/>lower</highlight></codeline>
<codeline lineno="1119"><highlight class="comment">and/or<sp/>upper<sp/>bound,<sp/>and<sp/>the<sp/>last<sp/>2<sp/>are<sp/>also<sp/>booleans<sp/>that<sp/>specify<sp/>whether<sp/>the</highlight></codeline>
<codeline lineno="1120"><highlight class="comment">range<sp/>is<sp/>open<sp/>or<sp/>closed<sp/>from<sp/>below<sp/>or<sp/>above<sp/>(i.e.,<sp/>whether<sp/>the<sp/>lower/upper<sp/>bound</highlight></codeline>
<codeline lineno="1121"><highlight class="comment">are<sp/>included<sp/>in<sp/>the<sp/>range<sp/>or<sp/>not).</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"></highlight></codeline>
<codeline lineno="1123"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>&lt;a<sp/>href=&quot;#query_probe_3&quot;&gt;&quot;probe-3&quot;&lt;/a&gt;<sp/>query<sp/>illustrates<sp/>the<sp/>use<sp/>of</highlight></codeline>
<codeline lineno="1124"><highlight class="comment">idml:probe-index-point-general.<sp/>The<sp/>query<sp/>returns<sp/>the<sp/>managers<sp/>of<sp/>the<sp/>employees<sp/></highlight></codeline>
<codeline lineno="1125"><highlight class="comment">whose<sp/>id<sp/>is<sp/>of<sp/>type<sp/>string<sp/>(or<sp/>subtype)<sp/>and<sp/>its<sp/>value<sp/>is<sp/>&quot;100&quot;<sp/>or<sp/>&quot;200&quot;.</highlight></codeline>
<codeline lineno="1126"><highlight class="comment">It<sp/>will<sp/>also<sp/>return<sp/>the<sp/>managers<sp/>of<sp/>the<sp/>employees<sp/>whose<sp/>id<sp/>is<sp/>of<sp/>type<sp/>untypedAtomic</highlight></codeline>
<codeline lineno="1127"><highlight class="comment">and<sp/>its<sp/>value,<sp/>when<sp/>cast<sp/>to<sp/>string,<sp/>is<sp/>&quot;100&quot;<sp/>or<sp/>&quot;200&quot;.</highlight></codeline>
<codeline lineno="1128"><highlight class="comment"></highlight></codeline>
<codeline lineno="1129"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>&lt;a<sp/>href=&quot;#query_no_probe_1&quot;&gt;&quot;no-probe-1&quot;&lt;/a&gt;,<sp/>&lt;a<sp/>href=&quot;#query_no_probe_2&quot;&gt;</highlight></codeline>
<codeline lineno="1130"><highlight class="comment">&quot;no-probe-2&quot;&lt;/a&gt;,<sp/>&lt;a<sp/>href=&quot;#query_no_probe_3&quot;&gt;&quot;no-probe-3&quot;&lt;/a&gt;<sp/>queries<sp/>return<sp/>the</highlight></codeline>
<codeline lineno="1131"><highlight class="comment">same<sp/>results<sp/>as<sp/>&lt;a<sp/>href=&quot;#query_probe_1&quot;&gt;&quot;probe-1&quot;&lt;/a&gt;,<sp/>&lt;a<sp/>href=&quot;#query_probe_2&quot;&gt;</highlight></codeline>
<codeline lineno="1132"><highlight class="comment">&quot;probe-2&quot;&lt;/a&gt;,<sp/>and<sp/>&lt;a<sp/>href=&quot;#query_probe_3&quot;&gt;&quot;probe-3&quot;&lt;/a&gt;,<sp/>respectively,</highlight></codeline>
<codeline lineno="1133"><highlight class="comment">but<sp/>without<sp/>using<sp/>any<sp/>index.<sp/>Normally,<sp/>the<sp/>performance<sp/>of<sp/>the<sp/>probe<sp/>queries<sp/>will</highlight></codeline>
<codeline lineno="1134"><highlight class="comment">be<sp/>much<sp/>better<sp/>than<sp/>that<sp/>of<sp/>the<sp/>corresponding<sp/>no-probe<sp/>queries.<sp/>This<sp/>is<sp/>because,</highlight></codeline>
<codeline lineno="1135"><highlight class="comment">in<sp/>general,<sp/>indexes<sp/>organize<sp/>their<sp/>entries<sp/>in<sp/>ways<sp/>that<sp/>make<sp/>the<sp/>execution<sp/>of</highlight></codeline>
<codeline lineno="1136"><highlight class="comment">the<sp/>probe<sp/>functions<sp/>very<sp/>efficient.<sp/>Typically,<sp/>some<sp/>kind<sp/>of<sp/>a<sp/>hash<sp/>table<sp/>(for</highlight></codeline>
<codeline lineno="1137"><highlight class="comment">value<sp/>equality<sp/>indexes)<sp/>or<sp/>ordered<sp/>tree<sp/>(for<sp/>value<sp/>range<sp/>indexes)<sp/>data<sp/>structure</highlight></codeline>
<codeline lineno="1138"><highlight class="comment">is<sp/>employed,<sp/>and<sp/>as<sp/>we<sp/>will<sp/>see,<sp/>Zorba<sp/>support<sp/>both<sp/>kinds<sp/>of<sp/>indexes.<sp/>So,<sp/>for</highlight></codeline>
<codeline lineno="1139"><highlight class="comment">example,<sp/>the<sp/>&lt;a<sp/>href=&quot;#query_probe_1&quot;&gt;&quot;probe-1&quot;&lt;/a&gt;<sp/>query<sp/>does</highlight></codeline>
<codeline lineno="1140"><highlight class="comment">not<sp/>have<sp/>to<sp/>access<sp/>every<sp/>entry<sp/>in<sp/>the<sp/>index<sp/>until<sp/>it<sp/>finds<sp/>the<sp/>one<sp/>for<sp/>Paris,</highlight></codeline>
<codeline lineno="1141"><highlight class="comment">whereas<sp/>the<sp/>&lt;a<sp/>href=&quot;#query_no_probe_1&quot;&gt;&quot;no-probe-1&quot;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1142"><highlight class="comment">query<sp/>has<sp/>to<sp/>access<sp/>every<sp/>employee<sp/>in<sp/>the<sp/>collection<sp/>and<sp/>check<sp/>his/her<sp/>city.</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"></highlight></codeline>
<codeline lineno="1144"><highlight class="comment">\n<sp/>\n<sp/>People<sp/>familiar<sp/>with<sp/>SQL<sp/>and<sp/>modern<sp/>relational<sp/>DBMSs<sp/>would<sp/>probably<sp/>expect</highlight></codeline>
<codeline lineno="1145"><highlight class="comment">the<sp/>query<sp/>optimizer<sp/>to<sp/>be<sp/>able<sp/>to<sp/>automatically<sp/>rewrite<sp/>queries<sp/>like<sp/></highlight></codeline>
<codeline lineno="1146"><highlight class="comment">&lt;a<sp/>href=&quot;#query_no_probe_1&quot;&gt;&quot;no-probe-1&quot;&lt;/a&gt;<sp/>to<sp/>queries<sp/>like<sp/></highlight></codeline>
<codeline lineno="1147"><highlight class="comment">&lt;a<sp/>href=&quot;#query_probe_1&quot;&gt;&quot;probe-1&quot;&lt;/a&gt;.</highlight></codeline>
<codeline lineno="1148"><highlight class="comment">The<sp/>Zorba<sp/>query<sp/>optimizer<sp/>does<sp/>not<sp/>yet<sp/>detect<sp/>index-related<sp/>rewrites<sp/>automatically.</highlight></codeline>
<codeline lineno="1149"><highlight class="comment">Although,<sp/>we<sp/>do<sp/>plan<sp/>to<sp/>offer<sp/>automatic<sp/>index-related<sp/>rewrites<sp/></highlight></codeline>
<codeline lineno="1150"><highlight class="comment">in<sp/>the<sp/>near<sp/>future,<sp/>we<sp/>also<sp/>expect<sp/>the<sp/>probing<sp/>functions<sp/>to<sp/>remain<sp/>useful<sp/></highlight></codeline>
<codeline lineno="1151"><highlight class="comment">for<sp/>manual<sp/>rewrites<sp/>because<sp/>both<sp/>the<sp/>XQuery<sp/>language<sp/>and<sp/>the<sp/>kind<sp/>of<sp/>indexes<sp/></highlight></codeline>
<codeline lineno="1152"><highlight class="comment">that<sp/>are<sp/>allowed<sp/>in<sp/>Zorba<sp/>can<sp/>be<sp/>much<sp/>more<sp/>complex<sp/>than<sp/>their<sp/>relational<sp/></highlight></codeline>
<codeline lineno="1153"><highlight class="comment">counterparts.</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"></highlight></codeline>
<codeline lineno="1155"><highlight class="comment">&lt;a<sp/>name=&quot;query_probe_1&quot;<sp/>id=&quot;query_probe_1&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1156"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1157"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;probe-1&quot;<sp/>query<sp/>:)</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"></highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>idml<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/indexes/dml&quot;;</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"></highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;<sp/>at<sp/>&quot;news_data.xqlib&quot;;</highlight></codeline>
<codeline lineno="1162"><highlight class="comment"></highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/><sp/>idml:probe-index-point-value($news-data:CityEmp,<sp/>&quot;Paris&quot;)</highlight></codeline>
<codeline lineno="1164"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1165"><highlight class="comment"></highlight></codeline>
<codeline lineno="1166"><highlight class="comment">&lt;a<sp/>name=&quot;query_probe_2&quot;<sp/>id=&quot;query_probe_2&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1167"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;probe-2&quot;<sp/>query<sp/>:)</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"></highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>idml<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/indexes/dml&quot;;</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"></highlight></codeline>
<codeline lineno="1172"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;<sp/>at<sp/>&quot;news_data.xqlib&quot;;</highlight></codeline>
<codeline lineno="1173"><highlight class="comment"></highlight></codeline>
<codeline lineno="1174"><highlight class="comment"><sp/><sp/>idml:probe-index-range-value($news-data:ArtCountEmp,<sp/>100,<sp/>(),<sp/>true,<sp/>false,<sp/>true,<sp/>false)</highlight></codeline>
<codeline lineno="1175"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1176"><highlight class="comment"></highlight></codeline>
<codeline lineno="1177"><highlight class="comment">&lt;a<sp/>name=&quot;query_probe_3&quot;<sp/>id=&quot;query_probe_3&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1178"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1179"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;probe-3&quot;<sp/>query<sp/>:)</highlight></codeline>
<codeline lineno="1180"><highlight class="comment"></highlight></codeline>
<codeline lineno="1181"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>idml<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/indexes/dml&quot;;</highlight></codeline>
<codeline lineno="1182"><highlight class="comment"></highlight></codeline>
<codeline lineno="1183"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;<sp/>at<sp/>&quot;news_data.xqlib&quot;;</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"></highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/><sp/>idml:probe-index-point-general($news-data:EmpMgr,<sp/>(&quot;100&quot;,<sp/>&quot;200&quot;))</highlight></codeline>
<codeline lineno="1186"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"></highlight></codeline>
<codeline lineno="1188"><highlight class="comment">&lt;a<sp/>name=&quot;query_no_probe_1&quot;<sp/>id=&quot;query_no_probe_1&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1189"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;no-probe-1&quot;<sp/>query<sp/>:)</highlight></codeline>
<codeline lineno="1191"><highlight class="comment"></highlight></codeline>
<codeline lineno="1192"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>cdml<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/collections/dml&quot;;</highlight></codeline>
<codeline lineno="1193"><highlight class="comment"></highlight></codeline>
<codeline lineno="1194"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;<sp/>at<sp/>&quot;news_data.xqlib&quot;;</highlight></codeline>
<codeline lineno="1195"><highlight class="comment"></highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/><sp/>cdml:collection($news-data:employees)/employee[.//station/city<sp/>eq<sp/>&quot;Paris&quot;]</highlight></codeline>
<codeline lineno="1197"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"></highlight></codeline>
<codeline lineno="1199"><highlight class="comment">&lt;a<sp/>name=&quot;query_no_probe_2&quot;<sp/>id=&quot;query_no_probe_2&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1200"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1201"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;no-probe-2&quot;<sp/>query<sp/>:)</highlight></codeline>
<codeline lineno="1202"><highlight class="comment"></highlight></codeline>
<codeline lineno="1203"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>cdml<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/collections/dml&quot;;</highlight></codeline>
<codeline lineno="1204"><highlight class="comment"></highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;<sp/>at<sp/>&quot;news_data.xqlib&quot;;</highlight></codeline>
<codeline lineno="1206"><highlight class="comment"></highlight></codeline>
<codeline lineno="1207"><highlight class="comment"><sp/><sp/>for<sp/>$emp<sp/>in<sp/>cdml:collection($news-data:employees)/employee[./position/@kind<sp/>eq<sp/>&quot;journalist&quot;]</highlight></codeline>
<codeline lineno="1208"><highlight class="comment"><sp/><sp/>where<sp/>100<sp/>le<sp/>count(for<sp/>$art<sp/>in<sp/>cdml:collection(xs:QName(&quot;news-data:articles&quot;))//article</highlight></codeline>
<codeline lineno="1209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>$art/empid<sp/>eq<sp/>$emp/id</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>$art)</highlight></codeline>
<codeline lineno="1211"><highlight class="comment"><sp/><sp/>return<sp/>$emp</highlight></codeline>
<codeline lineno="1212"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1213"><highlight class="comment"></highlight></codeline>
<codeline lineno="1214"><highlight class="comment">&lt;a<sp/>name=&quot;query_no_probe_3&quot;<sp/>id=&quot;query_no_probe_3&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1215"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;probe-3&quot;<sp/>query<sp/>:)</highlight></codeline>
<codeline lineno="1217"><highlight class="comment"></highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>cdml<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/collections/dml&quot;;</highlight></codeline>
<codeline lineno="1219"><highlight class="comment"></highlight></codeline>
<codeline lineno="1220"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;<sp/>at<sp/>&quot;news_data.xqlib&quot;;</highlight></codeline>
<codeline lineno="1221"><highlight class="comment"></highlight></codeline>
<codeline lineno="1222"><highlight class="comment"><sp/><sp/>for<sp/>$mgr<sp/>in<sp/>cdml:collection($news-data:employees)/employee</highlight></codeline>
<codeline lineno="1223"><highlight class="comment"><sp/><sp/>where<sp/>$mgr/manages//@empid<sp/>=<sp/>(&quot;100&quot;,<sp/>&quot;200&quot;)</highlight></codeline>
<codeline lineno="1224"><highlight class="comment"><sp/><sp/>return<sp/>$mgr</highlight></codeline>
<codeline lineno="1225"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"></highlight></codeline>
<codeline lineno="1227"><highlight class="comment">\n<sp/>\n<sp/>Now,<sp/>let<sp/>us<sp/>consider<sp/>what<sp/>happens<sp/>when<sp/>the<sp/>data<sp/>on<sp/>which<sp/>an<sp/>index<sp/>is<sp/>built<sp/>gets</highlight></codeline>
<codeline lineno="1228"><highlight class="comment">updated.<sp/>In<sp/>general,<sp/>&lt;a<sp/>href=&quot;#index_maintenance&quot;&gt;index<sp/>maintenance&lt;/a&gt;<sp/></highlight></codeline>
<codeline lineno="1229"><highlight class="comment">is<sp/>the<sp/>operation<sp/>where<sp/>the<sp/>index<sp/>contents<sp/>are</highlight></codeline>
<codeline lineno="1230"><highlight class="comment">updated<sp/>so<sp/>that<sp/>they<sp/>reflect<sp/>the<sp/>index<sp/>definition<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="1231"><highlight class="comment">snapshot<sp/>of<sp/>the<sp/>data.<sp/>Zorba<sp/>offers<sp/>two<sp/>maintenance<sp/>modes:<sp/>manual<sp/>and</highlight></codeline>
<codeline lineno="1232"><highlight class="comment">automatic.<sp/>If<sp/>an<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>&apos;%an:manual&apos;,<sp/>index<sp/>maintenance</highlight></codeline>
<codeline lineno="1233"><highlight class="comment">is<sp/>done<sp/>only<sp/>when<sp/>the<sp/>function<sp/>&lt;a<sp/>href=&quot;#refresh_index&quot;&gt;idml:refresh-index&lt;/a&gt;<sp/></highlight></codeline>
<codeline lineno="1234"><highlight class="comment">is<sp/>invoked<sp/>inside<sp/>a<sp/>query.<sp/>Essentially,<sp/>in<sp/>manual<sp/>mode</highlight></codeline>
<codeline lineno="1235"><highlight class="comment">maintenance<sp/>is<sp/>in<sp/>the<sp/>control<sp/>of<sp/>the<sp/>query<sp/>programmers,<sp/>and<sp/>the<sp/>index<sp/>may<sp/>become</highlight></codeline>
<codeline lineno="1236"><highlight class="comment">stale<sp/>between<sp/>two<sp/>consecutive<sp/>calls<sp/>to<sp/>the<sp/>&lt;a<sp/>href=&quot;#refresh_index&quot;&gt;</highlight></codeline>
<codeline lineno="1237"><highlight class="comment">idml:refresh-index&lt;/a&gt;<sp/>function.<sp/>In<sp/>contrast,<sp/>if<sp/>an</highlight></codeline>
<codeline lineno="1238"><highlight class="comment">index<sp/>is<sp/>declared<sp/>as<sp/>&apos;%an:automatic&apos;,<sp/>Zorba<sp/>guarantees<sp/>that<sp/>the<sp/>index<sp/>stays<sp/>up-to-date<sp/>at<sp/>any<sp/>given<sp/>time.</highlight></codeline>
<codeline lineno="1239"><highlight class="comment"></highlight></codeline>
<codeline lineno="1240"><highlight class="comment">\n<sp/>\n<sp/>In<sp/>this<sp/>example,<sp/>the<sp/>CityEmp<sp/>index<sp/>was<sp/>declared<sp/>as<sp/>automatic.<sp/>The<sp/>&lt;a</highlight></codeline>
<codeline lineno="1241"><highlight class="comment">href=&quot;#query_index_maintenance&quot;&gt;&quot;index-maintenance&quot;&lt;/a&gt;<sp/>query<sp/>shown<sp/>below<sp/>transfers</highlight></codeline>
<codeline lineno="1242"><highlight class="comment">the<sp/>employee<sp/>with<sp/>id<sp/>&quot;007&quot;<sp/>from<sp/>his<sp/>current<sp/>city,<sp/>say<sp/>Paris,<sp/>to<sp/>Beijing.<sp/>Since</highlight></codeline>
<codeline lineno="1243"><highlight class="comment">index<sp/>CityEmp<sp/>is<sp/>automatic,<sp/>after<sp/>the<sp/>update<sp/>is<sp/>applied,<sp/>Zorba<sp/>will<sp/>initiate<sp/>a</highlight></codeline>
<codeline lineno="1244"><highlight class="comment">maintenance<sp/>operation<sp/>on<sp/>the<sp/>index,<sp/>whereby<sp/>the<sp/>employee<sp/>node<sp/>will<sp/>be<sp/>removed</highlight></codeline>
<codeline lineno="1245"><highlight class="comment">from<sp/>the<sp/>node<sp/>set<sp/>associated<sp/>with<sp/>Paris<sp/>and<sp/>inserted<sp/>into<sp/>the<sp/>node<sp/>set</highlight></codeline>
<codeline lineno="1246"><highlight class="comment">associated<sp/>with<sp/>Beijing<sp/>(if<sp/>there<sp/>is<sp/>no<sp/>other<sp/>employee<sp/>stationed<sp/>in<sp/>Beijing</highlight></codeline>
<codeline lineno="1247"><highlight class="comment">already,<sp/>an<sp/>entry<sp/>for<sp/>it<sp/>will<sp/>be<sp/>created<sp/>first).<sp/>Notice<sp/>that<sp/>although<sp/>the<sp/>index</highlight></codeline>
<codeline lineno="1248"><highlight class="comment">is<sp/>not<sp/>explicitly<sp/>referenced<sp/>anywhere<sp/>in<sp/>this<sp/>query,<sp/>its<sp/>definition<sp/>must<sp/>still</highlight></codeline>
<codeline lineno="1249"><highlight class="comment">be<sp/>available<sp/>to<sp/>the<sp/>query<sp/>because<sp/>it<sp/>is<sp/>needed<sp/>to<sp/>perform<sp/>the<sp/>index<sp/>maintenance.</highlight></codeline>
<codeline lineno="1250"><highlight class="comment">In<sp/>this<sp/>example,<sp/>the<sp/>query<sp/>imports<sp/>the<sp/>&lt;a<sp/>href=&quot;#lib_module_news_data_indexes&quot;</highlight></codeline>
<codeline lineno="1251"><highlight class="comment">title=&quot;news-data&quot;&gt;&quot;news-data&quot;&lt;/a&gt;<sp/>module<sp/>because<sp/>it<sp/>contains<sp/>the<sp/>declaration<sp/>for</highlight></codeline>
<codeline lineno="1252"><highlight class="comment">the<sp/>employees<sp/>collection,<sp/>which<sp/>is<sp/>referenced<sp/>by<sp/>the<sp/>query.<sp/><sp/>But<sp/>the<sp/>&lt;a</highlight></codeline>
<codeline lineno="1253"><highlight class="comment">href=&quot;#lib_module_news_data_indexes&quot;<sp/>title=&quot;news-data&quot;&gt;&quot;news-data&quot;&lt;/a&gt;<sp/>module</highlight></codeline>
<codeline lineno="1254"><highlight class="comment">contains<sp/>the<sp/>index<sp/>declaration<sp/>as<sp/>well,<sp/>so<sp/>index<sp/>maintenance<sp/>can<sp/>find<sp/>the<sp/>index</highlight></codeline>
<codeline lineno="1255"><highlight class="comment">definition.<sp/>In<sp/>general,<sp/>it<sp/>is<sp/>a<sp/>best<sp/>practice<sp/>to<sp/>declare<sp/>an<sp/>index<sp/>in<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="1256"><highlight class="comment">module<sp/>as<sp/>the<sp/>collections<sp/>that<sp/>are<sp/>referenced<sp/>by<sp/>the<sp/>index.</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"></highlight></codeline>
<codeline lineno="1258"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>ArtCountEmp<sp/>index<sp/>is<sp/>more<sp/>complex<sp/>than<sp/>the<sp/>CityEmp<sp/>index,<sp/>so<sp/>the<sp/>system<sp/>may</highlight></codeline>
<codeline lineno="1259"><highlight class="comment">not<sp/>be<sp/>able<sp/>to<sp/>maintain<sp/>it<sp/>in<sp/>an<sp/>efficient<sp/>way.<sp/>Furthermore,<sp/>the<sp/>index<sp/>contains</highlight></codeline>
<codeline lineno="1260"><highlight class="comment">&quot;statistical&quot;<sp/>information,<sp/>so<sp/>it<sp/>may<sp/>be<sp/>acceptable<sp/>if<sp/>its<sp/>contents<sp/>are<sp/>not</highlight></codeline>
<codeline lineno="1261"><highlight class="comment">always<sp/>in<sp/>sync<sp/>with<sp/>the<sp/>underlying<sp/>data.<sp/>For<sp/>these<sp/>reasons,<sp/>the<sp/>ArtCountEmp</highlight></codeline>
<codeline lineno="1262"><highlight class="comment">index<sp/>was<sp/>declared<sp/>as<sp/>&apos;%an:manual&apos;.</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"></highlight></codeline>
<codeline lineno="1264"><highlight class="comment">&lt;a<sp/>name=&quot;query_index_maintenance&quot;<sp/>id=&quot;query_index_maintenance&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1265"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;index-maintenance&quot;<sp/>query<sp/>:)</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"></highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>cdml<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/collections/dml&quot;;</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"></highlight></codeline>
<codeline lineno="1270"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;<sp/>at<sp/>&quot;news_data.xqlib&quot;;</highlight></codeline>
<codeline lineno="1271"><highlight class="comment"></highlight></codeline>
<codeline lineno="1272"><highlight class="comment"><sp/><sp/>replace<sp/>node<sp/>value<sp/>cdml:collection($news-data:employees)/employee[@id<sp/>eq<sp/>&quot;007&quot;]//station/city</highlight></codeline>
<codeline lineno="1273"><highlight class="comment"><sp/><sp/>with<sp/>&quot;Beijing&quot;</highlight></codeline>
<codeline lineno="1274"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1275"><highlight class="comment"></highlight></codeline>
<codeline lineno="1276"><highlight class="comment">Finally,<sp/>we<sp/>conclude<sp/>this<sp/>example<sp/>with<sp/>a<sp/>query<sp/>that<sp/>shows<sp/>how<sp/>to<sp/>destroy<sp/>an</highlight></codeline>
<codeline lineno="1277"><highlight class="comment">index.<sp/>As<sp/>shown<sp/>in<sp/>&lt;a<sp/>href=&quot;#admin_script_4&quot;&gt;&quot;admin-script-4&quot;&lt;/a&gt;<sp/>below,</highlight></codeline>
<codeline lineno="1278"><highlight class="comment">&lt;a<sp/>href=&quot;#index_deletion&quot;&gt;index<sp/>deletion&lt;/a&gt;<sp/>is<sp/>done<sp/>via</highlight></codeline>
<codeline lineno="1279"><highlight class="comment">the<sp/>&lt;a<sp/>href=&quot;#delete_index&quot;&gt;iddl:delete&lt;/a&gt;</highlight></codeline>
<codeline lineno="1280"><highlight class="comment">function.<sp/>The<sp/>function<sp/>simply<sp/>destroys<sp/>the<sp/>index<sp/>container<sp/>and<sp/>removes<sp/>the</highlight></codeline>
<codeline lineno="1281"><highlight class="comment">mapping<sp/>between<sp/>the<sp/>index<sp/>name<sp/>and<sp/>the<sp/>index<sp/>container<sp/>from<sp/>the<sp/>indexes<sp/>table.</highlight></codeline>
<codeline lineno="1282"><highlight class="comment">After<sp/>the<sp/>index<sp/>is<sp/>deleted,<sp/>any<sp/>query<sp/>that<sp/>tries<sp/>to<sp/>access<sp/>the<sp/>index<sp/>will</highlight></codeline>
<codeline lineno="1283"><highlight class="comment">receive<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="1284"><highlight class="comment"></highlight></codeline>
<codeline lineno="1285"><highlight class="comment">&lt;a<sp/>name=&quot;admin_script_4&quot;<sp/>id=&quot;admin_script_4&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1286"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/><sp/>(:<sp/>The<sp/>&quot;admin-script-4&quot;<sp/>query<sp/>:)</highlight></codeline>
<codeline lineno="1288"><highlight class="comment"></highlight></codeline>
<codeline lineno="1289"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>iddl<sp/>=<sp/>&quot;http://zorba.io/modules/store/static/indexes/ddl&quot;;</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"></highlight></codeline>
<codeline lineno="1291"><highlight class="comment"><sp/><sp/>import<sp/>module<sp/>namespace<sp/>news-data<sp/>=<sp/>&quot;http://www.news.org/data&quot;<sp/>at<sp/>&quot;news_data.xqlib&quot;;</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"></highlight></codeline>
<codeline lineno="1293"><highlight class="comment"><sp/><sp/>iddl:delete($news-data:CityEmp);</highlight></codeline>
<codeline lineno="1294"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1295"><highlight class="comment"></highlight></codeline>
<codeline lineno="1296"><highlight class="comment"></highlight></codeline>
<codeline lineno="1297"><highlight class="comment">\subsection<sp/>index_declaration<sp/>Index<sp/>Declaration</highlight></codeline>
<codeline lineno="1298"><highlight class="comment"></highlight></codeline>
<codeline lineno="1299"><highlight class="comment"></highlight></codeline>
<codeline lineno="1300"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/><sp/>IndexDecl<sp/>::=<sp/>&apos;index&apos;<sp/>IndexName</highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;on&apos;<sp/>&apos;nodes&apos;<sp/>IndexDomainExpr</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;by&apos;<sp/>IndexKeySpec<sp/>(&apos;,&apos;<sp/>IndexKeySpec)*</highlight></codeline>
<codeline lineno="1304"><highlight class="comment"></highlight></codeline>
<codeline lineno="1305"><highlight class="comment"><sp/><sp/>IndexName<sp/>::=<sp/>EQName</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"></highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/><sp/>IndexDomainExpr<sp/>::=<sp/>PathExpr</highlight></codeline>
<codeline lineno="1308"><highlight class="comment"></highlight></codeline>
<codeline lineno="1309"><highlight class="comment"><sp/><sp/>IndexKeySpec<sp/>::=<sp/>IndexKeyExpr<sp/>IndexKeyTypeDecl?<sp/>IndexKeyCollation?</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"></highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/><sp/>IndexKeyExpr<sp/>::=<sp/>PathExpr</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"></highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/><sp/>IndexKeyTypeDecl<sp/>::=<sp/>&apos;as&apos;<sp/>AtomicType<sp/>OccurrenceIndicator?</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"></highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/><sp/>AtomicType<sp/>::=<sp/>EQName</highlight></codeline>
<codeline lineno="1316"><highlight class="comment"></highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/><sp/>IndexKeyCollation<sp/>::=<sp/>&apos;collation&apos;<sp/>URILiteral</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"></highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/>Note:<sp/>the<sp/>following<sp/>annotations<sp/>are<sp/>accepted<sp/>within<sp/>the<sp/>context<sp/>of<sp/>an<sp/>index<sp/>declaration:</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"></highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>%an:unique,<sp/>%an:nonunique,</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>%an:value-range,<sp/>%an:value-equality,<sp/></highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>%an:general-range,<sp/>%an:general-equality,</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>%an:manual<sp/>or<sp/>%an:automatic</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"></highlight></codeline>
<codeline lineno="1326"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"></highlight></codeline>
<codeline lineno="1328"><highlight class="comment">Syntactically,<sp/>each<sp/>index<sp/>is<sp/>defined<sp/>by<sp/>an<sp/>&lt;a<sp/>href=&quot;#index_declaration&quot;&gt;</highlight></codeline>
<codeline lineno="1329"><highlight class="comment">index<sp/>declaration&lt;/a&gt;,<sp/>which<sp/>specifies<sp/>a<sp/>unique<sp/>name<sp/>for<sp/>the<sp/>index<sp/></highlight></codeline>
<codeline lineno="1330"><highlight class="comment">as<sp/>a<sp/>QName,<sp/>the<sp/>index<sp/>domain<sp/>expression,<sp/>a<sp/>number<sp/>of<sp/>key<sp/>specifications,<sp/>and<sp/></highlight></codeline>
<codeline lineno="1331"><highlight class="comment">a<sp/>set<sp/>of<sp/>index<sp/>properties<sp/>(given<sp/>as<sp/>annotations;<sp/>see<sp/>\ref<sp/>collection_index_annotations).</highlight></codeline>
<codeline lineno="1332"><highlight class="comment">The<sp/>IndexDecl<sp/>syntax<sp/>shown<sp/>above<sp/>is<sp/>common<sp/>to<sp/>both<sp/></highlight></codeline>
<codeline lineno="1333"><highlight class="comment">value<sp/>indexes<sp/>and<sp/>general<sp/>indexes.<sp/>Whether<sp/>an<sp/>index<sp/>is<sp/>a<sp/>value<sp/>or<sp/>a<sp/>general<sp/></highlight></codeline>
<codeline lineno="1334"><highlight class="comment">index<sp/>is<sp/>determined<sp/>by<sp/>the<sp/>value<sp/>of<sp/>the<sp/>usage<sp/>property,<sp/>which<sp/>is<sp/>explained<sp/>below.</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"></highlight></codeline>
<codeline lineno="1336"><highlight class="comment">\n<sp/>\n<sp/>Index<sp/>declarations<sp/>(for<sp/>both<sp/>value<sp/>and<sp/>general<sp/>indexes)<sp/>must<sp/>be<sp/>placed<sp/>inside<sp/></highlight></codeline>
<codeline lineno="1337"><highlight class="comment">module<sp/>prologs.<sp/>The<sp/>Prolog<sp/>syntax<sp/>is<sp/>extended<sp/>accordingly,<sp/>as<sp/>shown<sp/>above.<sp/></highlight></codeline>
<codeline lineno="1338"><highlight class="comment">An<sp/>additional<sp/>constraint<sp/>(not<sp/>expressible<sp/>syntactically)<sp/>is<sp/>that<sp/>only<sp/>library<sp/></highlight></codeline>
<codeline lineno="1339"><highlight class="comment">modules<sp/>may<sp/>contain<sp/>index<sp/>declarations<sp/><sp/>[&lt;a<sp/>href=&quot;#ERRZDST0023&quot;&gt;zerr:ZDST0023&lt;/a&gt;].<sp/></highlight></codeline>
<codeline lineno="1340"><highlight class="comment">The<sp/>reasons<sp/>for<sp/>this<sp/>rule<sp/>are<sp/>the<sp/>same<sp/>as<sp/>those<sp/>for<sp/>collections<sp/>(see<sp/>\ref<sp/></highlight></codeline>
<codeline lineno="1341"><highlight class="comment">collection_declaration).<sp/>Furthermore,<sp/>the<sp/>qname<sp/>of<sp/>an<sp/>index<sp/>must<sp/>have<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="1342"><highlight class="comment">namespace<sp/>URI<sp/>as<sp/>the<sp/>target<sp/>namespace<sp/>URI<sp/>of<sp/>the<sp/>declaring<sp/>library<sp/>module</highlight></codeline>
<codeline lineno="1343"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDST0036&quot;&gt;zerr:ZDST0036&lt;/a&gt;].</highlight></codeline>
<codeline lineno="1344"><highlight class="comment"></highlight></codeline>
<codeline lineno="1345"><highlight class="comment">\n<sp/>\n<sp/>To<sp/>accommodate<sp/>index<sp/>declarations,<sp/>Zorba<sp/>extends<sp/>the<sp/>static<sp/>context<sp/>with<sp/>a<sp/></highlight></codeline>
<codeline lineno="1346"><highlight class="comment">component<sp/>called<sp/>the<sp/>&lt;strong&gt;statically<sp/>known<sp/>indexes&lt;/strong&gt;.<sp/>This<sp/>is<sp/>a<sp/></highlight></codeline>
<codeline lineno="1347"><highlight class="comment">map<sp/>whose<sp/>entries<sp/>associate<sp/>an<sp/>expanded<sp/>QName<sp/>with<sp/>an<sp/>implementation-dependent</highlight></codeline>
<codeline lineno="1348"><highlight class="comment">representation<sp/>of<sp/>the<sp/>information<sp/>contained<sp/>in<sp/>an<sp/>index<sp/>declaration<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="1349"><highlight class="comment">same<sp/>QName.<sp/>Each<sp/>index<sp/>declaration<sp/>adds<sp/>an<sp/>entry<sp/>to<sp/>the<sp/>statically<sp/>known<sp/>indexes</highlight></codeline>
<codeline lineno="1350"><highlight class="comment">of<sp/>the<sp/>module<sp/>containing<sp/>the<sp/>declaration.<sp/>If<sp/>the<sp/>expanded<sp/>QName<sp/>of<sp/>the<sp/>index<sp/>is</highlight></codeline>
<codeline lineno="1351"><highlight class="comment">equal<sp/>to<sp/>the<sp/>expanded<sp/>QName<sp/>of<sp/>another<sp/>index<sp/>in<sp/>the<sp/>statically<sp/>known<sp/>indexes<sp/></highlight></codeline>
<codeline lineno="1352"><highlight class="comment">of<sp/>the<sp/>same<sp/>module,<sp/>a<sp/>static<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0021&quot;&gt;zerr:ZDST0021&lt;/a&gt;].<sp/></highlight></codeline>
<codeline lineno="1353"><highlight class="comment">Like<sp/>the<sp/>statically<sp/>known<sp/>collections,<sp/>the<sp/>statically<sp/>known<sp/>indexes<sp/>of<sp/></highlight></codeline>
<codeline lineno="1354"><highlight class="comment">a<sp/>module<sp/>that<sp/>is<sp/>imported<sp/>by<sp/>another<sp/>module<sp/>are<sp/>copied<sp/>into<sp/>the<sp/>statically<sp/></highlight></codeline>
<codeline lineno="1355"><highlight class="comment">known<sp/>indexes<sp/>of<sp/>the<sp/>importing<sp/>module.<sp/>It<sp/>is<sp/>a<sp/>static<sp/>error<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0022&quot;&gt;</highlight></codeline>
<codeline lineno="1356"><highlight class="comment">zerr:ZDST0022&lt;/a&gt;]<sp/>if<sp/>the<sp/>expanded<sp/>QName<sp/>of<sp/>an<sp/>index<sp/>declared<sp/>in<sp/>an<sp/>imported<sp/>module</highlight></codeline>
<codeline lineno="1357"><highlight class="comment">is<sp/>equal<sp/>to<sp/>the<sp/>expanded<sp/>QName<sp/>of<sp/>an<sp/>index<sp/>declared<sp/>in<sp/>the<sp/>importing<sp/>module<sp/></highlight></codeline>
<codeline lineno="1358"><highlight class="comment">or<sp/>in<sp/>another<sp/>imported<sp/>module<sp/>(even<sp/>if<sp/>the<sp/>declarations<sp/>are<sp/>consistent).</highlight></codeline>
<codeline lineno="1359"><highlight class="comment"></highlight></codeline>
<codeline lineno="1360"><highlight class="comment">\n<sp/>\n<sp/>Zorba<sp/>defines<sp/>three<sp/>index<sp/>properties<sp/>which<sp/>are<sp/>syntactically<sp/>expressed<sp/>as<sp/>annotations:</highlight></codeline>
<codeline lineno="1361"><highlight class="comment">&lt;strong&gt;uniqueness&lt;/strong&gt;<sp/>(with<sp/>possible<sp/>values<sp/>&apos;%an:unique&apos;<sp/>or<sp/>&apos;%an:nonunique&apos;),</highlight></codeline>
<codeline lineno="1362"><highlight class="comment">&lt;strong&gt;usage&lt;/strong&gt;<sp/>(with<sp/>possible<sp/>values<sp/>&apos;%an:value-range&apos;,<sp/>&apos;%an:value-equality&apos;,<sp/>&apos;%an:general-range&apos;,<sp/>or<sp/>&apos;%an:general-equality&apos;),<sp/>and<sp/></highlight></codeline>
<codeline lineno="1363"><highlight class="comment">&lt;strong&gt;maintenance<sp/>mode&lt;/strong&gt;<sp/>(with<sp/>possible<sp/>values<sp/>&apos;%an:manual&apos;<sp/>or<sp/>&apos;%an:automatic&apos;).</highlight></codeline>
<codeline lineno="1364"><highlight class="comment">The<sp/>syntax<sp/>allows<sp/>the<sp/>values<sp/>for<sp/>these<sp/>properties<sp/>to<sp/>be<sp/>listed<sp/>in<sp/>any<sp/>order<sp/>or<sp/>not<sp/>be<sp/>specified<sp/>at<sp/>all.</highlight></codeline>
<codeline lineno="1365"><highlight class="comment">If<sp/>not<sp/>specified,<sp/>the<sp/>default<sp/>values<sp/>for<sp/>uniqueness,<sp/>usage,<sp/>and<sp/>maintenance<sp/>mode<sp/>are<sp/>&apos;%an:nonunique&apos;,<sp/></highlight></codeline>
<codeline lineno="1366"><highlight class="comment">&apos;%an:value-equality&apos;,<sp/>and<sp/>&apos;%an:automatic&apos;,<sp/>respectively.</highlight></codeline>
<codeline lineno="1367"><highlight class="comment">It<sp/>is<sp/>a<sp/>static<sp/>error<sp/>[zerr::XQST0106]<sp/>if<sp/>more<sp/>than<sp/>one<sp/>value<sp/>is<sp/>listed<sp/>in<sp/>an<sp/>index<sp/>declaration<sp/>for<sp/>any<sp/>of<sp/>these<sp/>properties.</highlight></codeline>
<codeline lineno="1368"><highlight class="comment"></highlight></codeline>
<codeline lineno="1369"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>uniqueness<sp/>property<sp/>determines<sp/>the<sp/>kind<sp/>of<sp/>relationship<sp/>between<sp/>keys<sp/>and</highlight></codeline>
<codeline lineno="1370"><highlight class="comment">domain<sp/>nodes:<sp/>if<sp/>the<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>&apos;%an:unique&apos;,<sp/>Zorba<sp/>makes<sp/>sure<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="1371"><highlight class="comment">relationship<sp/>is<sp/>one-to-one,<sp/>that<sp/>is,<sp/>each<sp/>index<sp/>entry<sp/>associates<sp/>a<sp/>key<sp/>value</highlight></codeline>
<codeline lineno="1372"><highlight class="comment">(or<sp/>key<sp/>tuple<sp/>in<sp/>the<sp/>case<sp/>of<sp/>value<sp/>indexs)<sp/>with<sp/>exactly<sp/>one<sp/>domain<sp/>node.<sp/></highlight></codeline>
<codeline lineno="1373"><highlight class="comment">Otherwise,<sp/>if<sp/>the<sp/>index<sp/>is<sp/>&apos;%an:nonunique&apos;,<sp/>multiple<sp/>domain<sp/>nodes<sp/>may<sp/>have<sp/>the<sp/></highlight></codeline>
<codeline lineno="1374"><highlight class="comment">same<sp/>key<sp/>value,<sp/>and<sp/>as<sp/>a<sp/>result,<sp/>each<sp/>index<sp/>entry<sp/>associates<sp/>a<sp/>key<sp/>with<sp/>a<sp/></highlight></codeline>
<codeline lineno="1375"><highlight class="comment">set<sp/>of<sp/>domain<sp/>nodes.<sp/>In<sp/>the<sp/>current<sp/>implementation,<sp/>it<sp/>is<sp/>not<sp/>allowed<sp/>to<sp/>declare</highlight></codeline>
<codeline lineno="1376"><highlight class="comment">an<sp/>index<sp/>as<sp/>unique<sp/>if<sp/>it<sp/>is<sp/>a<sp/>general<sp/>index<sp/>whose<sp/>IndexKeyTypeDecl<sp/>is<sp/>either<sp/>absent</highlight></codeline>
<codeline lineno="1377"><highlight class="comment">or<sp/>specifies<sp/>xs:anyAtomicType<sp/>or<sp/>xs:untypedAtomic<sp/>as<sp/>its<sp/>atomic<sp/>type<sp/></highlight></codeline>
<codeline lineno="1378"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDST0025&quot;&gt;zerr:ZDST0025&lt;/a&gt;].</highlight></codeline>
<codeline lineno="1379"><highlight class="comment"></highlight></codeline>
<codeline lineno="1380"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>usage<sp/>property<sp/>specifies<sp/>the<sp/>kind<sp/>of<sp/>the<sp/>index<sp/>based<sp/>on<sp/>the<sp/>query<sp/>expressions<sp/></highlight></codeline>
<codeline lineno="1381"><highlight class="comment">that<sp/>may<sp/>be<sp/>optimized<sp/>by<sp/>using<sp/>the<sp/>index.<sp/>A<sp/>&lt;strong&gt;value<sp/>equality<sp/>index&lt;/strong&gt;<sp/></highlight></codeline>
<codeline lineno="1382"><highlight class="comment">can<sp/>optimize<sp/>expressions<sp/>involving<sp/>value<sp/>equality<sp/>predicates<sp/>only.<sp/>The<sp/></highlight></codeline>
<codeline lineno="1383"><highlight class="comment">&lt;a<sp/>href=&quot;#query_probe_1&quot;&gt;&quot;probe-1&quot;&lt;/a&gt;<sp/>and<sp/>&lt;a<sp/>href=&quot;#query_no_probe_1&quot;&gt;</highlight></codeline>
<codeline lineno="1384"><highlight class="comment">&quot;no-probe-1&quot;&lt;/a&gt;<sp/>queries<sp/>in<sp/>\ref<sp/>indexes_in_action<sp/>are<sp/>an<sp/>example<sp/>of</highlight></codeline>
<codeline lineno="1385"><highlight class="comment">such<sp/>usage.<sp/>As<sp/>shown<sp/>there,<sp/>a<sp/>value<sp/>equality<sp/>index<sp/>supports<sp/>the<sp/></highlight></codeline>
<codeline lineno="1386"><highlight class="comment">&lt;a<sp/>href=&quot;#probe_index_point_value&quot;&gt;idml:probe-index-point-value&lt;/a&gt;<sp/>function.</highlight></codeline>
<codeline lineno="1387"><highlight class="comment">A<sp/>&lt;strong&gt;value<sp/>range<sp/>index&lt;/strong&gt;<sp/>can<sp/>optimize<sp/>expressions<sp/>involving<sp/>any<sp/>kind</highlight></codeline>
<codeline lineno="1388"><highlight class="comment">of<sp/>value<sp/>comparison.<sp/>The<sp/>&lt;a<sp/>href=&quot;#query_probe_2&quot;&gt;&quot;probe-2&quot;&lt;/a&gt;<sp/>and<sp/>&lt;a</highlight></codeline>
<codeline lineno="1389"><highlight class="comment">href=&quot;#query_no_probe_2&quot;&gt;&quot;no-probe-2&quot;&lt;/a&gt;<sp/>queries<sp/>in<sp/>\ref<sp/>indexes_in_action<sp/></highlight></codeline>
<codeline lineno="1390"><highlight class="comment">are<sp/>an<sp/>example<sp/>of<sp/>such<sp/>usage.<sp/>A<sp/>value<sp/>range<sp/>index<sp/>supports<sp/>both<sp/>the<sp/></highlight></codeline>
<codeline lineno="1391"><highlight class="comment">&lt;a<sp/>href=&quot;#probe_index_point_value&quot;&gt;idml:probe-index-point-value&lt;/a&gt;<sp/></highlight></codeline>
<codeline lineno="1392"><highlight class="comment">and<sp/>the<sp/>&lt;a<sp/>href=&quot;#probe_index_range_value&quot;&gt;idml:probe-index-range-value&lt;/a&gt;</highlight></codeline>
<codeline lineno="1393"><highlight class="comment">functions.<sp/>A<sp/>&lt;strong&gt;general<sp/>equality<sp/>index&lt;/strong&gt;<sp/>can<sp/>optimize<sp/>expressions<sp/></highlight></codeline>
<codeline lineno="1394"><highlight class="comment">involving<sp/>either<sp/>value<sp/>equality<sp/>or<sp/>general<sp/>equality<sp/>predicates.<sp/>Finally,<sp/>a<sp/></highlight></codeline>
<codeline lineno="1395"><highlight class="comment">&lt;strong&gt;general<sp/>range<sp/>index&lt;/strong&gt;<sp/>can<sp/>optimize<sp/>expressions<sp/>involving<sp/>any</highlight></codeline>
<codeline lineno="1396"><highlight class="comment">kind<sp/>of<sp/>value<sp/>or<sp/>general<sp/>comparison<sp/>predicates.<sp/></highlight></codeline>
<codeline lineno="1397"><highlight class="comment"></highlight></codeline>
<codeline lineno="1398"><highlight class="comment">\n<sp/>\n<sp/>The<sp/>maintenance<sp/>mode<sp/>specifies<sp/>how<sp/>index<sp/>maintenance<sp/>is<sp/>done.<sp/>The<sp/>current<sp/>Zorba</highlight></codeline>
<codeline lineno="1399"><highlight class="comment">implementation<sp/>offers<sp/>two<sp/>maintenance<sp/>modes:<sp/>&apos;%an:manual&apos;<sp/>and<sp/>&apos;%an:automatic&apos;.<sp/>For<sp/>a<sp/></highlight></codeline>
<codeline lineno="1400"><highlight class="comment">&lt;strong&gt;manual<sp/>index&lt;/strong&gt;,<sp/>maintenance<sp/>is<sp/>done<sp/>only<sp/>when<sp/>the<sp/>function<sp/>&lt;a</highlight></codeline>
<codeline lineno="1401"><highlight class="comment">href=&quot;#refresh_index&quot;&gt;idml:refresh-index&lt;/a&gt;<sp/>(described<sp/>in<sp/>\ref<sp/>index_maintenance)</highlight></codeline>
<codeline lineno="1402"><highlight class="comment">is<sp/>invoked<sp/>inside<sp/>a<sp/>query.<sp/>Essentially,<sp/>in<sp/>manual<sp/>mode<sp/>maintenance<sp/>is<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1403"><highlight class="comment">control<sp/>of<sp/>the<sp/>query<sp/>programmers,<sp/>and<sp/>the<sp/>index<sp/>may<sp/>become<sp/>stale<sp/>between<sp/>two</highlight></codeline>
<codeline lineno="1404"><highlight class="comment">consecutive<sp/>calls<sp/>to<sp/>the<sp/>&lt;a<sp/>href=&quot;#refresh_index&quot;&gt;idml:refresh-index&lt;/a&gt;</highlight></codeline>
<codeline lineno="1405"><highlight class="comment">function.<sp/>In<sp/>contrast,<sp/>for<sp/>an<sp/>&lt;strong&gt;automatic<sp/>index&lt;/strong&gt;,<sp/>Zorba<sp/>guarantees</highlight></codeline>
<codeline lineno="1406"><highlight class="comment">that<sp/>the<sp/>index<sp/>stays<sp/>up-to-date<sp/>at<sp/>any<sp/>given<sp/>time.</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"></highlight></codeline>
<codeline lineno="1408"><highlight class="comment">The<sp/>index<sp/>declaration<sp/>syntax<sp/>is<sp/>very<sp/>liberal<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>expressions</highlight></codeline>
<codeline lineno="1409"><highlight class="comment">that<sp/>can<sp/>appear<sp/>as<sp/>domain<sp/>or<sp/>key<sp/>expressions.<sp/>However,<sp/>the<sp/>following<sp/>semantic</highlight></codeline>
<codeline lineno="1410"><highlight class="comment">restrictions<sp/>are<sp/>imposed<sp/>on<sp/>the<sp/>domain<sp/>expression<sp/>and<sp/>each<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1411"><highlight class="comment">key<sp/>expressions:</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"></highlight></codeline>
<codeline lineno="1413"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="1414"><highlight class="comment"><sp/><sp/>&lt;li&gt;They<sp/>must<sp/>be<sp/>deterministic<sp/>expressions<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0028&quot;&gt;</highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>zerr:ZDST0028&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="1416"><highlight class="comment"></highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/><sp/>&lt;li&gt;They<sp/>must<sp/>be<sp/>simple<sp/>expressions<sp/>(i.e.,<sp/>not<sp/>updating<sp/>or<sp/>sequential)</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[&lt;a<sp/>href=&quot;#ERRZDST0033&quot;&gt;zerr:ZDST0033&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="1419"><highlight class="comment"></highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/><sp/>&lt;li&gt;They<sp/>must<sp/>not<sp/>invoke<sp/>any<sp/>input<sp/>functions<sp/>other<sp/>than<sp/>&lt;a<sp/>href=&quot;#cdml_collection&quot;&gt;</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cdml:collection&lt;/a&gt;<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0029&quot;&gt;zerr:ZDST0029&lt;/a&gt;].<sp/>Moreover,</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>argument<sp/>to<sp/>each<sp/>&lt;a<sp/>href=&quot;#cdml_collection&quot;&gt;cdml:collection&lt;/a&gt;<sp/></highlight></codeline>
<codeline lineno="1423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>call<sp/>must<sp/>be<sp/>a<sp/>constant<sp/>expression<sp/>returning<sp/>a<sp/>QName</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0030&quot;&gt;zerr:ZDST0030&lt;/a&gt;].<sp/>(A</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>constant<sp/>expression<sp/>is<sp/>an<sp/>expression<sp/>that<sp/>doesn&apos;t<sp/>access<sp/>the<sp/>dynamic</highlight></codeline>
<codeline lineno="1426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>context).&lt;/li&gt;</highlight></codeline>
<codeline lineno="1427"><highlight class="comment"></highlight></codeline>
<codeline lineno="1428"><highlight class="comment"><sp/><sp/>&lt;li&gt;They<sp/>must<sp/>not<sp/>reference<sp/>and<sp/>variables<sp/>other<sp/>than<sp/>the<sp/>ones<sp/>defined<sp/>inside</highlight></codeline>
<codeline lineno="1429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>expressions<sp/>themselves<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0031&quot;&gt;zerr:ZDST0031&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="1430"><highlight class="comment"></highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>&apos;%an:automatic&apos;,<sp/>an<sp/>error<sp/>is<sp/>raised</highlight></codeline>
<codeline lineno="1432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[&lt;a<sp/>href=&quot;#ERRZDST0034&quot;&gt;zerr:ZDST0034&lt;/a&gt;]<sp/>if<sp/>the<sp/>domain<sp/>and/or<sp/>the<sp/>key<sp/></highlight></codeline>
<codeline lineno="1433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>expressions<sp/>are<sp/>too<sp/>complex<sp/>for<sp/>Zorba<sp/>to<sp/>perform<sp/>index<sp/>maintenance<sp/>in<sp/>an<sp/></highlight></codeline>
<codeline lineno="1434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>efficient<sp/>manner<sp/>(see<sp/>\ref<sp/>index_maintenance<sp/>for<sp/>details)&lt;/li&gt;</highlight></codeline>
<codeline lineno="1435"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1436"><highlight class="comment"></highlight></codeline>
<codeline lineno="1437"><highlight class="comment">Furthermore,<sp/>the<sp/>domain<sp/>expression<sp/>must<sp/>satisfy<sp/>the<sp/>following<sp/>additional</highlight></codeline>
<codeline lineno="1438"><highlight class="comment">semantic<sp/>restrictions:</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"></highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/><sp/>&lt;li&gt;Its<sp/>context<sp/>item,<sp/>context<sp/>position,<sp/>and<sp/>context<sp/>size<sp/>are<sp/>considered</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>undefined,<sp/>and<sp/>as<sp/>a<sp/>result<sp/>they<sp/>must<sp/>not<sp/>be<sp/>referenced<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0032&quot;&gt;</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>zerr:ZDST0032&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="1444"><highlight class="comment"></highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/><sp/>&lt;li&gt;It<sp/>must<sp/>generate<sp/>a<sp/>sequence<sp/>of<sp/>nodes<sp/>[&lt;a<sp/>href=&quot;#ERRXDTY0010&quot;&gt;</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>zerr:XDTY0010&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"></highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/><sp/>&lt;li&gt;Each<sp/>node<sp/>in<sp/>the<sp/>domain<sp/>sequence<sp/>must<sp/>belong<sp/>to<sp/>a<sp/>collection<sp/>that<sp/>appears</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>available<sp/>collections<sp/>of<sp/>the<sp/>module<sp/>that<sp/>contains<sp/>the<sp/>index<sp/>declaration</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0020&quot;&gt;zerr:ZDDY0020&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"></highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/><sp/>&lt;li&gt;For<sp/>general<sp/>indexes<sp/>only,<sp/>the<sp/>domain<sp/>expression<sp/>should<sp/>not<sp/>return<sp/>any</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>duplicate<sp/>nodes<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0028&quot;&gt;zerr:ZDDY0028&lt;/a&gt;]&lt;/li&gt;</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1455"><highlight class="comment"></highlight></codeline>
<codeline lineno="1456"><highlight class="comment">With<sp/>each<sp/>key<sp/>expression,<sp/>an<sp/>index<sp/>declaration<sp/>associates<sp/>a<sp/>key<sp/>type<sp/>and<sp/>a<sp/>key</highlight></codeline>
<codeline lineno="1457"><highlight class="comment">collation.<sp/>The<sp/>triplet<sp/>IndexKeyExpr,<sp/>IndexKeyTypeDecl,<sp/>IndexKeyCollation<sp/>is<sp/></highlight></codeline>
<codeline lineno="1458"><highlight class="comment">called<sp/>a<sp/>&lt;strong&gt;keyspec&lt;/strong&gt;.<sp/>For<sp/>general<sp/>indexes,<sp/>the<sp/>number<sp/>of<sp/>keyspecs<sp/></highlight></codeline>
<codeline lineno="1459"><highlight class="comment">must<sp/>be<sp/>exectly<sp/>one<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0035&quot;&gt;zerr:ZDST0035&lt;/a&gt;].<sp/>The<sp/>IndexKeyTypeDecl<sp/></highlight></codeline>
<codeline lineno="1460"><highlight class="comment">is<sp/>optional<sp/>for<sp/>general<sp/>indexes<sp/>(in<sp/>which<sp/>case<sp/>it<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>xs:anyAtomicItem*),<sp/></highlight></codeline>
<codeline lineno="1461"><highlight class="comment">but<sp/>is<sp/>required<sp/>for<sp/>value<sp/>indexes<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0027&quot;&gt;zerr:ZDST0027&lt;/a&gt;].<sp/><sp/></highlight></codeline>
<codeline lineno="1462"><highlight class="comment">The<sp/>IndexKeyTypeDecl<sp/>provides<sp/>a<sp/>sequence<sp/>type<sp/>that<sp/>the<sp/>atomized<sp/>result<sp/>of<sp/></highlight></codeline>
<codeline lineno="1463"><highlight class="comment">the<sp/>associated<sp/>key<sp/>expression<sp/>(for<sp/>each<sp/>domain<sp/>node)<sp/>must<sp/>match<sp/>with<sp/>according<sp/></highlight></codeline>
<codeline lineno="1464"><highlight class="comment">to<sp/>the<sp/>rules<sp/>of<sp/>sequence<sp/>type<sp/>matching.<sp/>For<sp/>value<sp/>indexes,<sp/>the<sp/>atomic<sp/>type<sp/></highlight></codeline>
<codeline lineno="1465"><highlight class="comment">specified<sp/>in<sp/>IndexKeyTypeDecl<sp/>must<sp/>not<sp/>be<sp/>xs:anyAtomicType<sp/>or<sp/>xs:untypedAtomic<sp/></highlight></codeline>
<codeline lineno="1466"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDST0027&quot;&gt;zerr:ZDST0027&lt;/a&gt;].<sp/>Furthermore,<sp/>for<sp/>value<sp/>indexes,<sp/></highlight></codeline>
<codeline lineno="1467"><highlight class="comment">the<sp/>occurrence<sp/>indicator<sp/>must<sp/>be<sp/>either<sp/>absent<sp/>or<sp/>equal<sp/>to<sp/>&apos;?&apos;<sp/></highlight></codeline>
<codeline lineno="1468"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDST0027&quot;&gt;zerr:ZDST0027&lt;/a&gt;].<sp/>Finally,<sp/>if<sp/>the<sp/>index<sp/>is<sp/>a<sp/>value<sp/></highlight></codeline>
<codeline lineno="1469"><highlight class="comment">range<sp/>or<sp/>general<sp/>range<sp/>index,<sp/>an<sp/>ordering<sp/>must<sp/>exist<sp/>among<sp/>the<sp/>values<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="1470"><highlight class="comment">type<sp/>domain<sp/>[&lt;a<sp/>href=&quot;#ERRZDST0027&quot;&gt;zerr:ZDST0027&lt;/a&gt;]<sp/>(this<sp/>rules<sp/>excludes</highlight></codeline>
<codeline lineno="1471"><highlight class="comment">the<sp/>following<sp/>atomic<sp/>types<sp/>and<sp/>their<sp/>subtypes:<sp/>QName,<sp/>NOTATION,<sp/></highlight></codeline>
<codeline lineno="1472"><highlight class="comment">hexBinary,<sp/>hex64Binary,<sp/>gYearMonth,<sp/>gYear,<sp/>gMonthDay,<sp/>gMonth,<sp/>and<sp/>gDay).<sp/></highlight></codeline>
<codeline lineno="1473"><highlight class="comment"></highlight></codeline>
<codeline lineno="1474"><highlight class="comment">\n<sp/>\n<sp/>If<sp/>the<sp/>key<sp/>type<sp/>in<sp/>a<sp/>keyspec<sp/>is<sp/>xs:string<sp/>(or<sp/>subtype<sp/>of),<sp/>the<sp/>IndexKeyCollation<sp/></highlight></codeline>
<codeline lineno="1475"><highlight class="comment">specifies<sp/>the<sp/>collation<sp/>to<sp/>use<sp/>when<sp/>comparing<sp/>key<sp/>values<sp/>from<sp/>this<sp/>keyspec.<sp/>If<sp/></highlight></codeline>
<codeline lineno="1476"><highlight class="comment">no<sp/>collation<sp/>is<sp/>specified,<sp/>the<sp/>default<sp/>collation<sp/>from<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="1477"><highlight class="comment">declaring<sp/>module<sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="1478"><highlight class="comment"></highlight></codeline>
<codeline lineno="1479"><highlight class="comment"></highlight></codeline>
<codeline lineno="1480"><highlight class="comment">\subsection<sp/>index_creation<sp/>Index<sp/>Creation</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"></highlight></codeline>
<codeline lineno="1482"><highlight class="comment"></highlight></codeline>
<codeline lineno="1483"><highlight class="comment">\n<sp/>As<sp/>explained<sp/>already,<sp/>indexes<sp/>are<sp/>just<sp/>sets<sp/>of<sp/>index<sp/>entries,<sp/>where<sp/>an<sp/>index<sp/></highlight></codeline>
<codeline lineno="1484"><highlight class="comment">entry<sp/>maps<sp/>a<sp/>key<sp/>item<sp/>or<sp/>a<sp/>key<sp/>tuple<sp/>to<sp/>a<sp/>set<sp/>of<sp/>domain<sp/>nodes<sp/>(to<sp/>be<sp/>more</highlight></codeline>
<codeline lineno="1485"><highlight class="comment">precise,<sp/>an<sp/>index<sp/>entry<sp/>contains<sp/>some<sp/>kind<sp/>of<sp/>&quot;pointers&quot;<sp/>to<sp/>nodes,<sp/>not<sp/>the<sp/></highlight></codeline>
<codeline lineno="1486"><highlight class="comment">nodes<sp/>themselves).<sp/>In<sp/>terms<sp/>of<sp/>the<sp/>XQuery<sp/>language,<sp/>indexes<sp/>&quot;live&quot;<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="1487"><highlight class="comment">dynamic<sp/>context.<sp/>In<sp/>particular,<sp/>Zorba<sp/>extends<sp/>the<sp/>dynamic<sp/>context<sp/>with<sp/>a<sp/></highlight></codeline>
<codeline lineno="1488"><highlight class="comment">component<sp/>called<sp/>the<sp/>&lt;strong&gt;available<sp/>indexes&lt;/strong&gt;.<sp/>This<sp/>is<sp/>a<sp/>map<sp/>whose<sp/></highlight></codeline>
<codeline lineno="1489"><highlight class="comment">entries<sp/>associate<sp/>the<sp/>expanded<sp/>QName<sp/>of<sp/>an<sp/>index<sp/>with<sp/>the<sp/>entry<sp/>set<sp/>for<sp/>that<sp/></highlight></codeline>
<codeline lineno="1490"><highlight class="comment">index.<sp/></highlight></codeline>
<codeline lineno="1491"><highlight class="comment"></highlight></codeline>
<codeline lineno="1492"><highlight class="comment">\n<sp/>\n<sp/>In<sp/>practice,<sp/>the<sp/>available<sp/>indexes<sp/>component<sp/>is<sp/>implemented<sp/>by<sp/>Zorba&apos;s<sp/>storage</highlight></codeline>
<codeline lineno="1493"><highlight class="comment">system.<sp/>To<sp/>begin<sp/>with,<sp/>each<sp/>index<sp/>is<sp/>implemented<sp/>by<sp/>some<sp/>appropriate</highlight></codeline>
<codeline lineno="1494"><highlight class="comment">data<sp/>structure<sp/>that<sp/>acts<sp/>as<sp/>an<sp/>index<sp/>entry<sp/>container.<sp/>The<sp/>description<sp/>of</highlight></codeline>
<codeline lineno="1495"><highlight class="comment">potential<sp/>data<sp/>structures<sp/>is<sp/>beyond<sp/>the<sp/>scope<sp/>of<sp/>this<sp/>document,<sp/>but<sp/>the<sp/>typical</highlight></codeline>
<codeline lineno="1496"><highlight class="comment">choices<sp/>are<sp/>either<sp/>some<sp/>sort<sp/>of<sp/>hash<sp/>table(s)<sp/>(for<sp/>equality<sp/>indexes)<sp/>or<sp/>some<sp/>kind</highlight></codeline>
<codeline lineno="1497"><highlight class="comment">of<sp/>ordered<sp/>tree(s)<sp/>(for<sp/>range<sp/>indexes).<sp/>To<sp/>manage<sp/>these<sp/>containers,<sp/>the<sp/></highlight></codeline>
<codeline lineno="1498"><highlight class="comment">store<sp/>maintains<sp/>an<sp/>&lt;strong&gt;indexes<sp/>table&lt;/strong&gt;,<sp/>which<sp/>maps<sp/>index<sp/>names<sp/>to<sp/></highlight></codeline>
<codeline lineno="1499"><highlight class="comment">index<sp/>entry<sp/>containers.<sp/>The<sp/>indexes<sp/>table<sp/>is<sp/>accessible<sp/>by<sp/>all<sp/>queries,<sp/>so<sp/>once<sp/></highlight></codeline>
<codeline lineno="1500"><highlight class="comment">an<sp/>entry<sp/>is<sp/>added<sp/>to<sp/>the<sp/>table,<sp/>the<sp/>associated<sp/>index<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>available<sp/></highlight></codeline>
<codeline lineno="1501"><highlight class="comment">to<sp/>every<sp/>query<sp/>and<sp/>every<sp/>module<sp/>that<sp/>participates<sp/>in<sp/>the<sp/>execution<sp/>of<sp/>that<sp/>query.</highlight></codeline>
<codeline lineno="1502"><highlight class="comment"></highlight></codeline>
<codeline lineno="1503"><highlight class="comment">Creation<sp/>of<sp/>an<sp/>index<sp/>involves<sp/>creating<sp/>an<sp/>initially<sp/>empty<sp/>index<sp/>entry<sp/>container,</highlight></codeline>
<codeline lineno="1504"><highlight class="comment">populating<sp/>that<sp/>container<sp/>with<sp/>the<sp/>entries<sp/>computed<sp/>by<sp/>the<sp/>domain<sp/>and<sp/>key</highlight></codeline>
<codeline lineno="1505"><highlight class="comment">expressions<sp/>of<sp/>the<sp/>index,<sp/>and<sp/>&quot;registering&quot;<sp/>that<sp/>container<sp/>in<sp/>the<sp/>indexes<sp/>table.</highlight></codeline>
<codeline lineno="1506"><highlight class="comment">All<sp/>this<sp/>is<sp/>done<sp/>by<sp/>the<sp/>&lt;a<sp/>href=&quot;#create_index&quot;&gt;iddl:create&lt;/a&gt;<sp/>function<sp/></highlight></codeline>
<codeline lineno="1507"><highlight class="comment">that<sp/>is<sp/>described<sp/>below.<sp/>In<sp/>fact,<sp/>iddl:create<sp/>is<sp/>an<sp/>updating<sp/>function,<sp/></highlight></codeline>
<codeline lineno="1508"><highlight class="comment">so<sp/>instead<sp/>of<sp/>actually<sp/>creating<sp/>the<sp/>index,<sp/>it<sp/>generates<sp/>a<sp/>pending<sp/>update<sp/></highlight></codeline>
<codeline lineno="1509"><highlight class="comment">primitive<sp/>that<sp/>becomes<sp/>part<sp/>of<sp/>a<sp/>pending<sp/>update<sp/>list<sp/>(PUL)<sp/>to<sp/>be<sp/>applied<sp/>at<sp/>a<sp/></highlight></codeline>
<codeline lineno="1510"><highlight class="comment">later<sp/>time.<sp/>The<sp/>update<sp/>primitive<sp/>is<sp/>also<sp/>described<sp/>below.</highlight></codeline>
<codeline lineno="1511"><highlight class="comment"></highlight></codeline>
<codeline lineno="1512"><highlight class="comment">&lt;a<sp/>name=&quot;create_index&quot;<sp/>id=&quot;create_index&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1513"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>iddl:create($indexName<sp/>as<sp/>xs:QName)</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"></highlight></codeline>
<codeline lineno="1516"><highlight class="comment"><sp/><sp/>upd:createIndex($indexName<sp/>as<sp/>xs:QName).</highlight></codeline>
<codeline lineno="1517"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"></highlight></codeline>
<codeline lineno="1519"><highlight class="comment">The<sp/>create<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="1520"><highlight class="comment"></highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>an<sp/>index<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="1523"><highlight class="comment">statically<sp/>known<sp/>indexes<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="1524"><highlight class="comment">is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0021&quot;&gt;zerr:ZDDY0021&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="1525"><highlight class="comment"></highlight></codeline>
<codeline lineno="1526"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>identifies<sp/>an<sp/>index<sp/>that<sp/>is<sp/>available</highlight></codeline>
<codeline lineno="1527"><highlight class="comment">already,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0022&quot;&gt;zerr:ZDDY0022&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="1528"><highlight class="comment"></highlight></codeline>
<codeline lineno="1529"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="1530"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="1531"><highlight class="comment">upd:createIndex($indexName).&lt;/li&gt;</highlight></codeline>
<codeline lineno="1532"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1533"><highlight class="comment"></highlight></codeline>
<codeline lineno="1534"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="1535"><highlight class="comment"></highlight></codeline>
<codeline lineno="1536"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="1537"><highlight class="comment"></highlight></codeline>
<codeline lineno="1538"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1539"><highlight class="comment">An<sp/>empty<sp/>index<sp/>entry<sp/>container<sp/>is<sp/>created.</highlight></codeline>
<codeline lineno="1540"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"></highlight></codeline>
<codeline lineno="1542"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1543"><highlight class="comment">The<sp/>domain<sp/>expression<sp/>is<sp/>evaluated<sp/>first.<sp/>If<sp/>the<sp/>result<sp/>of<sp/>the<sp/>domain<sp/>expression<sp/></highlight></codeline>
<codeline lineno="1544"><highlight class="comment">contains<sp/>an<sp/>item<sp/>that<sp/>is<sp/>not<sp/>a<sp/>node,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRXDTY0010&quot;&gt;</highlight></codeline>
<codeline lineno="1545"><highlight class="comment">zerr:XDTY0010&lt;/a&gt;].<sp/>If<sp/>the<sp/>result<sp/>of<sp/>the<sp/>domain<sp/>expression<sp/>contains<sp/>any<sp/>duplicate</highlight></codeline>
<codeline lineno="1546"><highlight class="comment">nodes,<sp/>then<sp/>for<sp/>value<sp/>indexes,<sp/>the<sp/>duplicate<sp/>nodes<sp/>are<sp/>removed,<sp/>but<sp/>for<sp/>general<sp/></highlight></codeline>
<codeline lineno="1547"><highlight class="comment">indexes,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0028&quot;&gt;zerr:ZDDY0028&lt;/a&gt;].<sp/>The<sp/>result</highlight></codeline>
<codeline lineno="1548"><highlight class="comment">of<sp/>the<sp/>domain<sp/>expression<sp/>after<sp/>duplicate<sp/>elimination<sp/>is<sp/>called<sp/>the<sp/>&lt;strong&gt;domain</highlight></codeline>
<codeline lineno="1549"><highlight class="comment">sequence&lt;/strong&gt;.<sp/>If<sp/>the<sp/>domain<sp/>sequence<sp/>contains<sp/>a<sp/>node<sp/>that<sp/>does<sp/>not<sp/>belong<sp/>to<sp/></highlight></codeline>
<codeline lineno="1550"><highlight class="comment">a<sp/>collection,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0020&quot;&gt;zerr:ZDDY0020&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"></highlight></codeline>
<codeline lineno="1552"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1553"><highlight class="comment">For<sp/>each<sp/>node<sp/>D<sp/>in<sp/>the<sp/>domain<sp/>sequence,<sp/>the<sp/>IndexKeySpecs<sp/>are<sp/>evaluated<sp/>in<sp/>some<sp/></highlight></codeline>
<codeline lineno="1554"><highlight class="comment">implementation<sp/>dependent<sp/>order.<sp/>An<sp/>IndexKeySpec<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="1555"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1556"><highlight class="comment"></highlight></codeline>
<codeline lineno="1557"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="1558"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1559"><highlight class="comment"><sp/><sp/>The<sp/>key<sp/>expression<sp/>in<sp/>the<sp/>IndexKeySpec<sp/>is<sp/>evaluated,<sp/>with<sp/>D<sp/>serving<sp/>as<sp/>its<sp/></highlight></codeline>
<codeline lineno="1560"><highlight class="comment"><sp/><sp/>context<sp/>item.</highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"></highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/><sp/>&lt;li&gt;Atomization<sp/>is<sp/>applied<sp/>to<sp/>the<sp/>result<sp/>of<sp/>the<sp/>key<sp/>expression.&lt;/li&gt;</highlight></codeline>
<codeline lineno="1564"><highlight class="comment"></highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/><sp/>The<sp/>result<sp/>of<sp/>atomization<sp/>is<sp/>matched<sp/>against<sp/>the<sp/>associated<sp/>IndexKeyTypeDecl,</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/><sp/>according<sp/>to<sp/>the<sp/>rules<sp/>of<sp/>sequence<sp/>type<sp/>matching.<sp/>If<sp/>the<sp/>type<sp/>match<sp/>fails,<sp/></highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/><sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRXDTY0011&quot;&gt;zerr:XDTY0011&lt;/a&gt;].<sp/></highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"></highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/><sp/>Duplicate<sp/>values<sp/>(which<sp/>may<sp/>arise<sp/>in<sp/>the<sp/>case<sp/>of<sp/>general<sp/>indexes<sp/>only)<sp/>are<sp/></highlight></codeline>
<codeline lineno="1573"><highlight class="comment"><sp/><sp/>eliminated<sp/>from<sp/>the<sp/>atomized<sp/>sequence.</highlight></codeline>
<codeline lineno="1574"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1575"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1576"><highlight class="comment"></highlight></codeline>
<codeline lineno="1577"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1578"><highlight class="comment">If<sp/>the<sp/>index<sp/>is<sp/>a<sp/>value<sp/>index:</highlight></codeline>
<codeline lineno="1579"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1580"><highlight class="comment"></highlight></codeline>
<codeline lineno="1581"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="1582"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1583"><highlight class="comment"><sp/><sp/>The<sp/>result<sp/>of<sp/>each<sp/>IndexKeySpec<sp/>is<sp/>a<sp/>single<sp/>atomic<sp/>item<sp/>or<sp/>the<sp/>empty<sp/>sequence.</highlight></codeline>
<codeline lineno="1584"><highlight class="comment"><sp/><sp/>We<sp/>call<sp/>this<sp/>result<sp/>a<sp/>&lt;strong&gt;key<sp/>value&lt;/strong&gt;.</highlight></codeline>
<codeline lineno="1585"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1586"><highlight class="comment"></highlight></codeline>
<codeline lineno="1587"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1588"><highlight class="comment"><sp/><sp/>Let<sp/>D&lt;sub&gt;i&lt;/sub&gt;<sp/>be<sp/>the<sp/>i-th<sp/>domain<sp/>node,<sp/>and<sp/>K&lt;sub&gt;ij&lt;/sub&gt;<sp/>be<sp/>the<sp/>key<sp/>value</highlight></codeline>
<codeline lineno="1589"><highlight class="comment"><sp/><sp/>computed<sp/>for<sp/>D&lt;sub&gt;i&lt;/sub&gt;<sp/>by<sp/>the<sp/>j-th<sp/>IndexKeySpec<sp/>(where<sp/>the<sp/>numbering<sp/>of</highlight></codeline>
<codeline lineno="1590"><highlight class="comment"><sp/><sp/>the<sp/>IndexKeySpecs<sp/>is<sp/>done<sp/>using<sp/>their<sp/>order<sp/>of<sp/>appearance<sp/>in<sp/>the<sp/>index</highlight></codeline>
<codeline lineno="1591"><highlight class="comment"><sp/><sp/>declaration).<sp/>Let<sp/>K&lt;sub&gt;i&lt;/sub&gt;<sp/>be<sp/>the<sp/>tuple<sp/>[K&lt;sub&gt;i1&lt;/sub&gt;,<sp/>...,</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/><sp/>K&lt;sub&gt;iM&lt;/sub&gt;],<sp/>where<sp/>M<sp/>is<sp/>the<sp/>number<sp/>of<sp/>IndexKeySpecs.<sp/>The<sp/>next<sp/>step<sp/>is<sp/>to</highlight></codeline>
<codeline lineno="1593"><highlight class="comment"><sp/><sp/>insert<sp/>in<sp/>the<sp/>index<sp/>a<sp/>mapping<sp/>from<sp/>K&lt;sub&gt;i&lt;/sub&gt;<sp/>to<sp/>D&lt;sub&gt;i&lt;/sub&gt;.<sp/>This<sp/>step</highlight></codeline>
<codeline lineno="1594"><highlight class="comment"><sp/><sp/>is<sp/>performed<sp/>for<sp/>each<sp/>node<sp/>in<sp/>the<sp/>domain<sp/>sequence.<sp/>The<sp/>order<sp/>in<sp/>which<sp/>the</highlight></codeline>
<codeline lineno="1595"><highlight class="comment"><sp/><sp/>domain<sp/>sequence<sp/>is<sp/>processed<sp/>is<sp/>implementation<sp/>dependent.</highlight></codeline>
<codeline lineno="1596"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1597"><highlight class="comment"></highlight></codeline>
<codeline lineno="1598"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1599"><highlight class="comment"><sp/><sp/>If<sp/>the<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>unique,<sp/>the<sp/>relationship<sp/>between<sp/>key</highlight></codeline>
<codeline lineno="1600"><highlight class="comment"><sp/><sp/>tuples<sp/>and<sp/>domain<sp/>nodes<sp/>is<sp/>one-to-one.<sp/>In<sp/>this<sp/>case,<sp/>if<sp/>the<sp/>index<sp/>already</highlight></codeline>
<codeline lineno="1601"><highlight class="comment"><sp/><sp/>contains<sp/>an<sp/>entry<sp/>whose<sp/>key<sp/>tuple<sp/>is<sp/>equal<sp/>to<sp/>K&lt;sub&gt;i&lt;/sub&gt;,<sp/>an<sp/>error<sp/>is<sp/></highlight></codeline>
<codeline lineno="1602"><highlight class="comment"><sp/><sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0024&quot;&gt;zerr:ZDDY0024&lt;/a&gt;].<sp/>Otherwise,<sp/>the<sp/>entry<sp/></highlight></codeline>
<codeline lineno="1603"><highlight class="comment"><sp/><sp/>[K&lt;sub&gt;i&lt;/sub&gt;,<sp/>D&lt;sub&gt;i&lt;/sub&gt;]<sp/>is<sp/>inserted<sp/>in<sp/>the<sp/>index<sp/>container.</highlight></codeline>
<codeline lineno="1604"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1605"><highlight class="comment"></highlight></codeline>
<codeline lineno="1606"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1607"><highlight class="comment"><sp/><sp/>If<sp/>the<sp/>index<sp/>is<sp/>non-unique,<sp/>then<sp/>if<sp/>it<sp/>already<sp/>contains<sp/>an<sp/>entry<sp/>whose<sp/>key<sp/></highlight></codeline>
<codeline lineno="1608"><highlight class="comment"><sp/><sp/>tuple<sp/>is<sp/>equal<sp/>to<sp/>K&lt;sub&gt;i&lt;/sub&gt;,<sp/>D&lt;sub&gt;i&lt;/sub&gt;<sp/>is<sp/>added<sp/>to<sp/>the<sp/>set<sp/>associated</highlight></codeline>
<codeline lineno="1609"><highlight class="comment"><sp/><sp/>with<sp/>K&lt;sub&gt;i&lt;/sub&gt;.<sp/>Otherwise,<sp/>the<sp/>entry<sp/>[K&lt;sub&gt;i&lt;/sub&gt;,<sp/>{<sp/>D&lt;sub&gt;i&lt;/sub&gt;<sp/>}]<sp/></highlight></codeline>
<codeline lineno="1610"><highlight class="comment"><sp/><sp/>is<sp/>inserted<sp/>in<sp/>the<sp/>index.</highlight></codeline>
<codeline lineno="1611"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1612"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1613"><highlight class="comment"></highlight></codeline>
<codeline lineno="1614"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1615"><highlight class="comment">If<sp/>the<sp/>index<sp/>is<sp/>a<sp/>general<sp/>index:</highlight></codeline>
<codeline lineno="1616"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1617"><highlight class="comment"></highlight></codeline>
<codeline lineno="1618"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="1619"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1620"><highlight class="comment"><sp/><sp/>In<sp/>the<sp/>current<sp/>implementation,<sp/>there<sp/>can<sp/>be<sp/>only<sp/>one<sp/>IndexKeySpec,<sp/>but<sp/>contrary</highlight></codeline>
<codeline lineno="1621"><highlight class="comment"><sp/><sp/>to<sp/>value<sp/>indexes,<sp/>the<sp/>result<sp/>of<sp/>this<sp/>IndexKeySpec<sp/>may<sp/>be<sp/>a<sp/>sequence<sp/>of<sp/>any</highlight></codeline>
<codeline lineno="1622"><highlight class="comment"><sp/><sp/>number<sp/>of<sp/>atomic<sp/>items,<sp/>and<sp/>the<sp/>items<sp/>may<sp/>have<sp/>different<sp/>data<sp/>types.<sp/>We<sp/>call<sp/></highlight></codeline>
<codeline lineno="1623"><highlight class="comment"><sp/><sp/>this<sp/>sequence<sp/>a<sp/>&lt;strong&gt;key<sp/>sequence&lt;/strong&gt;,<sp/>and<sp/>each<sp/>atomic<sp/>item<sp/>in<sp/>it<sp/>a<sp/></highlight></codeline>
<codeline lineno="1624"><highlight class="comment"><sp/><sp/>&lt;strong&gt;key<sp/>item&lt;/strong&gt;<sp/>(the<sp/>key<sp/>sequence<sp/>may<sp/>also<sp/>be<sp/>the<sp/>empty<sp/>sequence).</highlight></codeline>
<codeline lineno="1625"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1626"><highlight class="comment"></highlight></codeline>
<codeline lineno="1627"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1628"><highlight class="comment"><sp/><sp/>An<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRXDTY0012&quot;&gt;zerr:XDTY0012&lt;/a&gt;]<sp/>if<sp/>the<sp/>index<sp/>is<sp/></highlight></codeline>
<codeline lineno="1629"><highlight class="comment"><sp/><sp/>a<sp/>range<sp/>index<sp/>and<sp/>any<sp/>of<sp/>the<sp/>key<sp/>items<sp/>has<sp/>a<sp/>type<sp/>that<sp/>is<sp/>not<sp/>xs:untypedAtomic<sp/></highlight></codeline>
<codeline lineno="1630"><highlight class="comment"><sp/><sp/>and<sp/>for<sp/>which<sp/>no<sp/>ordering<sp/>relationship<sp/>exists.</highlight></codeline>
<codeline lineno="1631"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1632"><highlight class="comment"></highlight></codeline>
<codeline lineno="1633"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1634"><highlight class="comment"><sp/><sp/>In<sp/>this<sp/>step,<sp/>an<sp/>&lt;strong&gt;expanded<sp/>key<sp/>sequence&lt;/strong&gt;<sp/>is<sp/>constructed<sp/>for</highlight></codeline>
<codeline lineno="1635"><highlight class="comment"><sp/><sp/>each<sp/>domain<sp/>node.<sp/>If<sp/>the<sp/>atomic<sp/>type<sp/>specified<sp/>in<sp/>the<sp/>IndexKeyTypeDecl<sp/>is</highlight></codeline>
<codeline lineno="1636"><highlight class="comment"><sp/><sp/>neither<sp/>xs:untypedAtomic<sp/>nor<sp/>xs:anyAtomicType,<sp/>the<sp/>expanded<sp/>key<sp/>sequence<sp/></highlight></codeline>
<codeline lineno="1637"><highlight class="comment"><sp/><sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>original<sp/>key<sp/>sequence.<sp/>Otherwise,<sp/>let<sp/>D&lt;sub&gt;i&lt;/sub&gt;<sp/>be<sp/></highlight></codeline>
<codeline lineno="1638"><highlight class="comment"><sp/><sp/>the<sp/>i-th<sp/>domain<sp/>node,<sp/>and<sp/>K&lt;sub&gt;i&lt;/sub&gt;<sp/>be<sp/>the<sp/>key<sp/>sequence<sp/>computed<sp/>for<sp/></highlight></codeline>
<codeline lineno="1639"><highlight class="comment"><sp/><sp/>D&lt;sub&gt;i&lt;/sub&gt;.<sp/>If<sp/>any<sp/>key<sp/>item<sp/>in<sp/>K&lt;sub&gt;i&lt;/sub&gt;<sp/>has<sp/>type<sp/>xs:untypedAtomic,<sp/></highlight></codeline>
<codeline lineno="1640"><highlight class="comment"><sp/><sp/>the<sp/>item<sp/>is<sp/>removed<sp/>from<sp/>K&lt;sub&gt;i&lt;/sub&gt;<sp/>and<sp/>is<sp/>cast<sp/>to<sp/>every<sp/>primitive<sp/>builtin<sp/></highlight></codeline>
<codeline lineno="1641"><highlight class="comment"><sp/><sp/>data<sp/>type.<sp/>For<sp/>each<sp/>successful<sp/>cast,<sp/>the<sp/>resulting<sp/>item<sp/>is<sp/>inserted<sp/>back<sp/></highlight></codeline>
<codeline lineno="1642"><highlight class="comment"><sp/><sp/>into<sp/>K&lt;sub&gt;i&lt;/sub&gt;.</highlight></codeline>
<codeline lineno="1643"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1644"><highlight class="comment"></highlight></codeline>
<codeline lineno="1645"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1646"><highlight class="comment"><sp/><sp/>The<sp/>next<sp/>step<sp/>is<sp/>to<sp/>insert<sp/>in<sp/>the<sp/>index<sp/>a<sp/>mapping<sp/>from<sp/>K&lt;sub&gt;ij&lt;/sub&gt;<sp/>to<sp/></highlight></codeline>
<codeline lineno="1647"><highlight class="comment"><sp/><sp/>D&lt;sub&gt;i&lt;/sub&gt;,<sp/>for<sp/>each<sp/>key<sp/>item<sp/>K&lt;sub&gt;ij&lt;/sub&gt;<sp/>in<sp/>the<sp/>expanded<sp/>key<sp/>sequence</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/><sp/>K&lt;sub&gt;i&lt;/sub&gt;.<sp/>This<sp/>step<sp/>is<sp/>performed<sp/>for<sp/>each<sp/>node<sp/>in<sp/>the<sp/>domain<sp/>sequence.<sp/></highlight></codeline>
<codeline lineno="1649"><highlight class="comment"><sp/><sp/>The<sp/>order<sp/>in<sp/>which<sp/>the<sp/>domain<sp/>sequence<sp/>is<sp/>processed<sp/>is<sp/>implementation<sp/></highlight></codeline>
<codeline lineno="1650"><highlight class="comment"><sp/><sp/>dependent.</highlight></codeline>
<codeline lineno="1651"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1652"><highlight class="comment"></highlight></codeline>
<codeline lineno="1653"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1654"><highlight class="comment"><sp/><sp/>If<sp/>the<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>unique,<sp/>the<sp/>relationship<sp/>between<sp/>key<sp/>items<sp/>and<sp/></highlight></codeline>
<codeline lineno="1655"><highlight class="comment"><sp/><sp/>domain<sp/>nodes<sp/>is<sp/>one-to-one.<sp/>In<sp/>this<sp/>case,<sp/>if<sp/>the<sp/>index<sp/>already<sp/>contains<sp/>an<sp/></highlight></codeline>
<codeline lineno="1656"><highlight class="comment"><sp/><sp/>entry<sp/>whose<sp/>key<sp/>item<sp/>is<sp/>equal<sp/>to<sp/>K&lt;sub&gt;ij&lt;/sub&gt;,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/></highlight></codeline>
<codeline lineno="1657"><highlight class="comment"><sp/><sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0024&quot;&gt;zerr:ZDDY0024&lt;/a&gt;].<sp/>Otherwise,<sp/>the<sp/>entry<sp/></highlight></codeline>
<codeline lineno="1658"><highlight class="comment"><sp/><sp/>[K&lt;sub&gt;ij&lt;/sub&gt;,<sp/>D&lt;sub&gt;i&lt;/sub&gt;]<sp/>is<sp/>inserted<sp/>in<sp/>the<sp/>index<sp/>container.</highlight></codeline>
<codeline lineno="1659"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1660"><highlight class="comment"></highlight></codeline>
<codeline lineno="1661"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1662"><highlight class="comment"><sp/><sp/>If<sp/>the<sp/>index<sp/>is<sp/>non-unique,<sp/>then<sp/>if<sp/>it<sp/>already<sp/>contains<sp/>an<sp/>entry<sp/>whose<sp/>key</highlight></codeline>
<codeline lineno="1663"><highlight class="comment"><sp/><sp/>K<sp/>is<sp/>equal<sp/>to<sp/>K&lt;sub&gt;ij&lt;/sub&gt;,<sp/>D&lt;sub&gt;i&lt;/sub&gt;<sp/>is<sp/>added<sp/>to<sp/>the<sp/>node<sp/>set<sp/></highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/><sp/>associated<sp/>with<sp/>K.<sp/>Otherwise,<sp/>the<sp/>entry<sp/>[K&lt;sub&gt;ij&lt;/sub&gt;,<sp/>{<sp/>D&lt;sub&gt;i&lt;/sub&gt;<sp/>}]<sp/></highlight></codeline>
<codeline lineno="1665"><highlight class="comment"><sp/><sp/>is<sp/>inserted<sp/>into<sp/>the<sp/>index.<sp/><sp/></highlight></codeline>
<codeline lineno="1666"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1667"><highlight class="comment"></highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/><sp/>&lt;li&gt;</highlight></codeline>
<codeline lineno="1669"><highlight class="comment"><sp/><sp/>The<sp/>index<sp/>maintains<sp/>a<sp/>&quot;special&quot;<sp/>entry<sp/>for<sp/>all<sp/>domain<sp/>nodes<sp/>whose<sp/>key<sp/>sequence</highlight></codeline>
<codeline lineno="1670"><highlight class="comment"><sp/><sp/>is<sp/>empty.<sp/>All<sp/>such<sp/>nodes<sp/>are<sp/>inserted<sp/>in<sp/>the<sp/>node<sp/>set<sp/>associated<sp/>with<sp/>this<sp/>entry.</highlight></codeline>
<codeline lineno="1671"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="1672"><highlight class="comment"></highlight></codeline>
<codeline lineno="1673"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1674"><highlight class="comment"></highlight></codeline>
<codeline lineno="1675"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1676"><highlight class="comment">A<sp/>entry<sp/>is<sp/>added<sp/>to<sp/>the<sp/>indexes<sp/>table.<sp/>The<sp/>entry<sp/>maps<sp/>the<sp/>expanded<sp/>QName<sp/>of</highlight></codeline>
<codeline lineno="1677"><highlight class="comment">the<sp/>index<sp/>to<sp/>the<sp/>index<sp/>entry<sp/>container.</highlight></codeline>
<codeline lineno="1678"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1679"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1680"><highlight class="comment"></highlight></codeline>
<codeline lineno="1681"><highlight class="comment"></highlight></codeline>
<codeline lineno="1682"><highlight class="comment">\subsection<sp/>index_deletion<sp/>Index<sp/>Deletion</highlight></codeline>
<codeline lineno="1683"><highlight class="comment"></highlight></codeline>
<codeline lineno="1684"><highlight class="comment"></highlight></codeline>
<codeline lineno="1685"><highlight class="comment">To<sp/>destroy<sp/>an<sp/>index,<sp/>Zorba<sp/>provides<sp/>the<sp/>delete<sp/>updating<sp/>function.<sp/>The</highlight></codeline>
<codeline lineno="1686"><highlight class="comment">function<sp/>itself<sp/>and<sp/>its<sp/>associated<sp/>update<sp/>primitive<sp/>are<sp/>described<sp/>below.</highlight></codeline>
<codeline lineno="1687"><highlight class="comment"></highlight></codeline>
<codeline lineno="1688"><highlight class="comment">&lt;a<sp/>name=&quot;delete_index&quot;<sp/>id=&quot;delete_index&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1689"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1690"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>iddl:delete($indexName<sp/>as<sp/>xs<sp/>:QName)</highlight></codeline>
<codeline lineno="1691"><highlight class="comment"></highlight></codeline>
<codeline lineno="1692"><highlight class="comment"><sp/><sp/>upd:deleteIndex($indexName<sp/>as<sp/>xs:QName)</highlight></codeline>
<codeline lineno="1693"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1694"><highlight class="comment"></highlight></codeline>
<codeline lineno="1695"><highlight class="comment">The<sp/>delete<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="1696"><highlight class="comment"></highlight></codeline>
<codeline lineno="1697"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="1698"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1699"><highlight class="comment">If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>an<sp/>index<sp/>among<sp/>the<sp/>statically<sp/></highlight></codeline>
<codeline lineno="1700"><highlight class="comment">known<sp/>indexes<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline lineno="1701"><highlight class="comment">raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0021&quot;&gt;zerr:ZDDY0021&lt;/a&gt;].</highlight></codeline>
<codeline lineno="1702"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1703"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1704"><highlight class="comment">If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>an<sp/>index<sp/>among<sp/>the<sp/>available</highlight></codeline>
<codeline lineno="1705"><highlight class="comment">indexes<sp/>in<sp/>the<sp/>dynamic<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a</highlight></codeline>
<codeline lineno="1706"><highlight class="comment">href=&quot;#ERRZDDY0023&quot;&gt;zerr:ZDDY0023&lt;/a&gt;].</highlight></codeline>
<codeline lineno="1707"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1708"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1709"><highlight class="comment">The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="1710"><highlight class="comment">list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:<sp/>upd:deleteIndex($indexName).</highlight></codeline>
<codeline lineno="1711"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1712"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1713"><highlight class="comment"></highlight></codeline>
<codeline lineno="1714"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="1715"><highlight class="comment"></highlight></codeline>
<codeline lineno="1716"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="1717"><highlight class="comment">&lt;li&gt;The<sp/>index<sp/>entry<sp/>container<sp/>for<sp/>the<sp/>index<sp/>is<sp/>found<sp/>via<sp/>the<sp/>indexes<sp/>table.&lt;/li&gt;</highlight></codeline>
<codeline lineno="1718"><highlight class="comment">&lt;li&gt;All<sp/>entries<sp/>in<sp/>the<sp/>container<sp/>are<sp/>destroyed.&lt;/li&gt;</highlight></codeline>
<codeline lineno="1719"><highlight class="comment">&lt;li&gt;The<sp/>container<sp/>itself<sp/>is<sp/>destroyed.&lt;/li&gt;</highlight></codeline>
<codeline lineno="1720"><highlight class="comment">&lt;li&gt;The<sp/>entry<sp/>mapping<sp/>the<sp/>index<sp/>name<sp/>to<sp/>the<sp/>index<sp/>entry<sp/>container<sp/>is<sp/>removed</highlight></codeline>
<codeline lineno="1721"><highlight class="comment">from<sp/>the<sp/>indexes<sp/>table.&lt;/li&gt;</highlight></codeline>
<codeline lineno="1722"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1723"><highlight class="comment"></highlight></codeline>
<codeline lineno="1724"><highlight class="comment"></highlight></codeline>
<codeline lineno="1725"><highlight class="comment">\subsection<sp/>index_probing<sp/>Index<sp/>Probing</highlight></codeline>
<codeline lineno="1726"><highlight class="comment"></highlight></codeline>
<codeline lineno="1727"><highlight class="comment"></highlight></codeline>
<codeline lineno="1728"><highlight class="comment">\n<sp/>Probing<sp/>an<sp/>index<sp/>means<sp/>retrieving<sp/>the<sp/>domain<sp/>nodes<sp/>associated<sp/>with<sp/>a<sp/>particular</highlight></codeline>
<codeline lineno="1729"><highlight class="comment">search<sp/>condition.<sp/>Probing<sp/>can<sp/>be<sp/>done<sp/>via<sp/>the<sp/>xqddf<sp/>functions<sp/></highlight></codeline>
<codeline lineno="1730"><highlight class="comment">idml:probe-index-point-value,<sp/>idml:probe-index-point-general,<sp/></highlight></codeline>
<codeline lineno="1731"><highlight class="comment">idml:probe-index-range-value,<sp/>or<sp/>idml:probe-index-range-general.</highlight></codeline>
<codeline lineno="1732"><highlight class="comment">For<sp/>each<sp/>of<sp/>these<sp/>functions,<sp/>the<sp/>first<sp/>argument<sp/>is<sp/>a<sp/>QName<sp/>identifying<sp/>an<sp/>index.</highlight></codeline>
<codeline lineno="1733"><highlight class="comment">The<sp/>rest<sp/>of<sp/>the<sp/>arguments<sp/>specify<sp/>the<sp/>search<sp/>condition.<sp/>For<sp/>all<sp/>functions,<sp/>the</highlight></codeline>
<codeline lineno="1734"><highlight class="comment">index<sp/>must<sp/>exist<sp/>in<sp/>both<sp/>the<sp/>statically<sp/>known<sp/>indexes<sp/>and<sp/>the<sp/>available<sp/>indexes</highlight></codeline>
<codeline lineno="1735"><highlight class="comment">of<sp/>the<sp/>invoking<sp/>module;<sp/>otherwise<sp/>error<sp/>&lt;a<sp/>href=&quot;#ERRZDDY0021&quot;&gt;zerr:ZDDY0021&lt;/a&gt;</highlight></codeline>
<codeline lineno="1736"><highlight class="comment">or<sp/>&lt;a<sp/>href=&quot;#ERRZDDY0023&quot;&gt;zerr:ZDDY0023&lt;/a&gt;<sp/>is<sp/>raised,<sp/></highlight></codeline>
<codeline lineno="1737"><highlight class="comment">respectively.<sp/>All<sp/>of<sp/>the<sp/>functions<sp/>return<sp/>their<sp/>result<sp/>sorted<sp/>in<sp/>document<sp/>order<sp/></highlight></codeline>
<codeline lineno="1738"><highlight class="comment">and<sp/>without<sp/>duplicate<sp/>nodes.</highlight></codeline>
<codeline lineno="1739"><highlight class="comment"></highlight></codeline>
<codeline lineno="1740"><highlight class="comment"></highlight></codeline>
<codeline lineno="1741"><highlight class="comment">&lt;strong&gt;idml:probe-index-point-value&lt;/strong&gt;</highlight></codeline>
<codeline lineno="1742"><highlight class="comment"></highlight></codeline>
<codeline lineno="1743"><highlight class="comment"></highlight></codeline>
<codeline lineno="1744"><highlight class="comment">&lt;a<sp/>name=&quot;probe_index_point_value&quot;<sp/>id=&quot;probe_index_point_value&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1745"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1746"><highlight class="comment"><sp/><sp/>idml:probe-index-point-value($indexUri<sp/>as<sp/>xs:QName,</highlight></codeline>
<codeline lineno="1747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$key1<sp/><sp/><sp/><sp/><sp/>as<sp/>xs:anyAtomicType?,</highlight></codeline>
<codeline lineno="1748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...,</highlight></codeline>
<codeline lineno="1749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$keyM<sp/><sp/><sp/><sp/><sp/>as<sp/>xs:anyAtomicType?)<sp/>as<sp/>node()*</highlight></codeline>
<codeline lineno="1750"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1751"><highlight class="comment"></highlight></codeline>
<codeline lineno="1752"><highlight class="comment">The<sp/>probe-index-point-value<sp/>function<sp/>retrieves<sp/>the<sp/>domain<sp/>nodes<sp/>associated<sp/>by<sp/></highlight></codeline>
<codeline lineno="1753"><highlight class="comment">value<sp/>equality<sp/>with<sp/>a<sp/>given<sp/>&lt;strong&gt;search<sp/>tuple&lt;/strong&gt;.<sp/>The<sp/>search<sp/>tuple<sp/></highlight></codeline>
<codeline lineno="1754"><highlight class="comment">consists<sp/>of<sp/>a<sp/>number<sp/>of<sp/>&lt;strong&gt;search<sp/>keys&lt;/strong&gt;,<sp/>where<sp/>each<sp/>search<sp/>key<sp/></highlight></codeline>
<codeline lineno="1755"><highlight class="comment">is<sp/>either<sp/>an<sp/>atomic<sp/>item<sp/>or<sp/>the<sp/>empty<sp/>sequence.<sp/>The<sp/>result<sp/>of<sp/>this<sp/>function<sp/></highlight></codeline>
<codeline lineno="1756"><highlight class="comment">is<sp/>either<sp/>an<sp/>error<sp/>or<sp/>the<sp/>set<sp/>of<sp/>domain<sp/>nodes<sp/>for<sp/>which<sp/>the<sp/>following<sp/>xquery<sp/></highlight></codeline>
<codeline lineno="1757"><highlight class="comment">expression<sp/>returns<sp/>true:</highlight></codeline>
<codeline lineno="1758"><highlight class="comment"></highlight></codeline>
<codeline lineno="1759"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1760"><highlight class="comment">$key1<sp/>eq<sp/>$node/keyExpr1<sp/>and<sp/>...<sp/>and<sp/>$keyM<sp/>eq<sp/>$node/keyExprN</highlight></codeline>
<codeline lineno="1761"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"></highlight></codeline>
<codeline lineno="1763"><highlight class="comment">where<sp/>keyExpr-i<sp/>is<sp/>the<sp/>expression<sp/>specified<sp/>in<sp/>the<sp/>i&lt;sup&gt;th&lt;/sup&gt;<sp/>keyspec<sp/></highlight></codeline>
<codeline lineno="1764"><highlight class="comment">of<sp/>the<sp/>index<sp/>and<sp/>N<sp/>is<sp/>the<sp/>number<sp/>of<sp/>keyspecs<sp/>for<sp/>the<sp/>index.<sp/>Notice<sp/>that<sp/>this<sp/></highlight></codeline>
<codeline lineno="1765"><highlight class="comment">definition<sp/>implies<sp/>that<sp/>if<sp/>any<sp/>of<sp/>search<sp/>keys<sp/>is<sp/>the<sp/>empty<sp/>sequence,<sp/>the</highlight></codeline>
<codeline lineno="1766"><highlight class="comment">result<sp/>of<sp/>the<sp/>probe<sp/>is<sp/>also<sp/>the<sp/>empty<sp/>sequence.</highlight></codeline>
<codeline lineno="1767"><highlight class="comment"></highlight></codeline>
<codeline lineno="1768"><highlight class="comment">In<sp/>addition<sp/>to<sp/>the<sp/>errors<sp/>that<sp/>may<sp/>be<sp/>raised<sp/>by<sp/>the<sp/>above<sp/>expression,<sp/>the</highlight></codeline>
<codeline lineno="1769"><highlight class="comment">probe-index-point-value<sp/>function<sp/>may<sp/>raise<sp/>the<sp/>following<sp/>errors:</highlight></codeline>
<codeline lineno="1770"><highlight class="comment"></highlight></codeline>
<codeline lineno="1771"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="1772"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/>&lt;a<sp/>href=&quot;#ERRZDDY0021&quot;&gt;zerr:ZDDY0021&lt;/a&gt;<sp/>or<sp/>&lt;a<sp/>href=&quot;#ERRZDDY0023&quot;&gt;zerr:ZDDY0023&lt;/a&gt;,</highlight></codeline>
<codeline lineno="1774"><highlight class="comment">if<sp/>the<sp/>index<sp/>is<sp/>not<sp/>among<sp/>the<sp/>statically<sp/>known<sp/>indexes<sp/>or<sp/>the<sp/>available<sp/>indexes.</highlight></codeline>
<codeline lineno="1775"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1776"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1777"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0025&quot;&gt;zerr:ZDDY0025&lt;/a&gt;],<sp/>if<sp/>the<sp/>number<sp/>of<sp/>search<sp/>keys<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="1778"><highlight class="comment">equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>keyspecs<sp/>found<sp/>in<sp/>the<sp/>index<sp/>declaration.</highlight></codeline>
<codeline lineno="1779"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1780"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1781"><highlight class="comment">[err:XPTY0004],<sp/>if<sp/>a<sp/>non-empty<sp/>search<sp/>key<sp/>is<sp/>given,<sp/>whose<sp/>type<sp/>does<sp/>not<sp/>match<sp/></highlight></codeline>
<codeline lineno="1782"><highlight class="comment">the<sp/>sequence<sp/>type<sp/>specified<sp/>in<sp/>the<sp/>corresponding<sp/>keyspec.</highlight></codeline>
<codeline lineno="1783"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1784"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1785"><highlight class="comment"></highlight></codeline>
<codeline lineno="1786"><highlight class="comment"></highlight></codeline>
<codeline lineno="1787"><highlight class="comment">&lt;strong&gt;idml:probe-index-point-general&lt;/strong&gt;</highlight></codeline>
<codeline lineno="1788"><highlight class="comment"></highlight></codeline>
<codeline lineno="1789"><highlight class="comment"></highlight></codeline>
<codeline lineno="1790"><highlight class="comment">&lt;a<sp/>name=&quot;probe_index_point_general&quot;<sp/>id=&quot;probe_index_point_general&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1791"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1792"><highlight class="comment"><sp/><sp/>idml:probe-index-point-general($indexUri<sp/>as<sp/>xs:QName,</highlight></codeline>
<codeline lineno="1793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$keys<sp/><sp/><sp/><sp/><sp/>as<sp/>xs:anyAtomicType*)<sp/>as<sp/>node()*</highlight></codeline>
<codeline lineno="1794"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"></highlight></codeline>
<codeline lineno="1796"><highlight class="comment">\n<sp/>The<sp/>probe-index-point-general<sp/>function<sp/>retrieves<sp/>the<sp/>domain<sp/>nodes<sp/>associated<sp/>by<sp/></highlight></codeline>
<codeline lineno="1797"><highlight class="comment">general<sp/>equality<sp/>with<sp/>a<sp/>given<sp/>&lt;strong&gt;search<sp/>sequence&lt;/strong&gt;.<sp/>The<sp/>search</highlight></codeline>
<codeline lineno="1798"><highlight class="comment">sequence<sp/>consists<sp/>of<sp/>an<sp/>arbitrary<sp/>number<sp/>of<sp/>&lt;strong&gt;search<sp/>keys&lt;/strong&gt;,<sp/>where<sp/></highlight></codeline>
<codeline lineno="1799"><highlight class="comment">each<sp/>search<sp/>key<sp/>is<sp/>an<sp/>atomic<sp/>item.<sp/>The<sp/>function<sp/>is<sp/>supported<sp/>by<sp/>general<sp/>indexes</highlight></codeline>
<codeline lineno="1800"><highlight class="comment">only<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0029&quot;&gt;zerr:ZDDY0029&lt;/a&gt;].<sp/>Its<sp/>result<sp/>is<sp/>either<sp/>an<sp/>error<sp/></highlight></codeline>
<codeline lineno="1801"><highlight class="comment">or<sp/>the<sp/>set<sp/>of<sp/>domain<sp/>nodes<sp/>for<sp/>which<sp/>the<sp/>following<sp/>xquery<sp/>expression<sp/>returns<sp/>true:</highlight></codeline>
<codeline lineno="1802"><highlight class="comment"></highlight></codeline>
<codeline lineno="1803"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1804"><highlight class="comment">$keys<sp/>=<sp/>$node/keyExpr</highlight></codeline>
<codeline lineno="1805"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"></highlight></codeline>
<codeline lineno="1807"><highlight class="comment">where<sp/>keyExpr<sp/>is<sp/>the<sp/>expression<sp/>specified<sp/>in<sp/>the<sp/>keyspec<sp/>of<sp/>the<sp/>index<sp/>(remember</highlight></codeline>
<codeline lineno="1808"><highlight class="comment">that<sp/>for<sp/>general<sp/>indexes,<sp/>there<sp/>can<sp/>be<sp/>only<sp/>one<sp/>keyspec).</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"></highlight></codeline>
<codeline lineno="1810"><highlight class="comment">In<sp/>addition<sp/>to<sp/>the<sp/>errors<sp/>that<sp/>may<sp/>be<sp/>raised<sp/>by<sp/>the<sp/>above<sp/>expression,<sp/>the</highlight></codeline>
<codeline lineno="1811"><highlight class="comment">probe-index-point-value<sp/>function<sp/>may<sp/>raise<sp/>the<sp/>following<sp/>errors:</highlight></codeline>
<codeline lineno="1812"><highlight class="comment"></highlight></codeline>
<codeline lineno="1813"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="1814"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/>&lt;a<sp/>href=&quot;#ERRZDDY0021&quot;&gt;zerr:ZDDY0021&lt;/a&gt;<sp/>or<sp/>&lt;a<sp/>href=&quot;#ERRZDDY0023&quot;&gt;zerr:ZDDY0023&lt;/a&gt;,</highlight></codeline>
<codeline lineno="1816"><highlight class="comment">if<sp/>the<sp/>index<sp/>is<sp/>not<sp/>among<sp/>the<sp/>statically<sp/>known<sp/>indexes<sp/>or<sp/>the<sp/>available<sp/>indexes.</highlight></codeline>
<codeline lineno="1817"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1818"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1819"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0029&quot;&gt;zerr:ZDDY0029&lt;/a&gt;],<sp/>if<sp/>the<sp/>index<sp/>is<sp/>not<sp/>general.</highlight></codeline>
<codeline lineno="1820"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1821"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1822"><highlight class="comment">[err:XPTY0004],<sp/>if<sp/>the<sp/>search<sp/>sequence<sp/>contains<sp/>a<sp/>search<sp/>key,<sp/>whose<sp/>type<sp/>does<sp/></highlight></codeline>
<codeline lineno="1823"><highlight class="comment">not<sp/>match<sp/>the<sp/>sequence<sp/>type<sp/>specified<sp/>in<sp/>the<sp/>keyspec<sp/>of<sp/>the<sp/>index.</highlight></codeline>
<codeline lineno="1824"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1825"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1826"><highlight class="comment"></highlight></codeline>
<codeline lineno="1827"><highlight class="comment"></highlight></codeline>
<codeline lineno="1828"><highlight class="comment">&lt;strong&gt;idml:probe-index-range-value&lt;/strong&gt;</highlight></codeline>
<codeline lineno="1829"><highlight class="comment"></highlight></codeline>
<codeline lineno="1830"><highlight class="comment"></highlight></codeline>
<codeline lineno="1831"><highlight class="comment">&lt;a<sp/>name=&quot;probe_index_range_value&quot;<sp/>id=&quot;probe_index_range_value&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1832"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1833"><highlight class="comment"><sp/><sp/>probe-index-range-value($indexUri<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:QName,</highlight></codeline>
<codeline lineno="1834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$lowerBound1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:anyAtomicType?,</highlight></codeline>
<codeline lineno="1835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$upperBound1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:anyAtomicType?,</highlight></codeline>
<codeline lineno="1836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$haveLowerBound1<sp/><sp/><sp/><sp/><sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$haveUpperBound1<sp/><sp/><sp/><sp/><sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$lowerBoundIncluded1<sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$upperBoundIncluded1<sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>....,</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$lowerBoundM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:anyAtomicType?,</highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$upperBoundM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:anyAtomicType?,</highlight></codeline>
<codeline lineno="1843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$haveLowerBoundM<sp/><sp/><sp/><sp/><sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$haveUpperBoundM<sp/><sp/><sp/><sp/><sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$lowerBoundIncludedM<sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$upperBoundIncludedM<sp/>as<sp/>xs:boolean)<sp/>as<sp/>node()*</highlight></codeline>
<codeline lineno="1847"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"></highlight></codeline>
<codeline lineno="1849"><highlight class="comment">The<sp/>probe-index-range-value<sp/>function<sp/>retrieves<sp/>the<sp/>domain<sp/>nodes<sp/>associated<sp/>by<sp/></highlight></codeline>
<codeline lineno="1850"><highlight class="comment">value<sp/>order-comparison<sp/>(operators<sp/>le,<sp/>lt,<sp/>ge,<sp/>gt)<sp/>with<sp/>a<sp/>given<sp/>&lt;strong&gt;search<sp/></highlight></codeline>
<codeline lineno="1851"><highlight class="comment">box&lt;/strong&gt;.<sp/>The<sp/>search<sp/>box<sp/>is<sp/>specified<sp/>as<sp/>a<sp/>number<sp/>M<sp/>of<sp/>&lt;strong&gt;rangespecs</highlight></codeline>
<codeline lineno="1852"><highlight class="comment">&lt;/strong&gt;,<sp/>where<sp/>each<sp/>rangespec<sp/>consists<sp/>of<sp/>six<sp/>values.<sp/>The<sp/>number<sp/>M<sp/>must<sp/>be<sp/></highlight></codeline>
<codeline lineno="1853"><highlight class="comment">greater<sp/>than<sp/>0<sp/>and<sp/>less<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>N<sp/>of<sp/>keyspecs<sp/>found<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="1854"><highlight class="comment">index<sp/>declaration<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0025&quot;&gt;zerr:ZDDY0025&lt;/a&gt;].<sp/>If<sp/>M<sp/>is<sp/>less<sp/></highlight></codeline>
<codeline lineno="1855"><highlight class="comment">than<sp/>N,<sp/>then<sp/>the<sp/>&quot;missing&quot;<sp/>rangespecs<sp/>are<sp/>assumed<sp/>to<sp/>have<sp/>the<sp/>following<sp/></highlight></codeline>
<codeline lineno="1856"><highlight class="comment">value:<sp/>[(),<sp/>(),<sp/>false,<sp/>false,<sp/>false,<sp/>false].<sp/>As<sp/>a<sp/>result,<sp/>from<sp/>now<sp/>on,<sp/>we</highlight></codeline>
<codeline lineno="1857"><highlight class="comment">can<sp/>assume<sp/>that<sp/>M<sp/>is<sp/>equal<sp/>to<sp/>N<sp/>(Remember<sp/>that<sp/>for<sp/>general<sp/>indexes,<sp/>there<sp/></highlight></codeline>
<codeline lineno="1858"><highlight class="comment">can<sp/>be<sp/>only<sp/>one<sp/>IndexKeySpec,<sp/>and<sp/>as<sp/>a<sp/>result,<sp/>for<sp/>general<sp/>indexes,<sp/>M<sp/>=<sp/>N<sp/>=<sp/>1).</highlight></codeline>
<codeline lineno="1859"><highlight class="comment"></highlight></codeline>
<codeline lineno="1860"><highlight class="comment">The<sp/>i&lt;sup&gt;th&lt;/sup&gt;<sp/>rangespec<sp/>corresponds<sp/>to<sp/>the<sp/>i&lt;sup&gt;th&lt;/sup&gt;<sp/>keyspec,<sp/>and<sp/></highlight></codeline>
<codeline lineno="1861"><highlight class="comment">specifies<sp/>a<sp/>search<sp/>condition<sp/>on<sp/>the<sp/>key<sp/>values<sp/>that<sp/>are<sp/>produced<sp/>by<sp/>evaluating</highlight></codeline>
<codeline lineno="1862"><highlight class="comment">that<sp/>keyspec<sp/>for<sp/>every<sp/>domain<sp/>node.<sp/>Specifically,<sp/>we<sp/>define<sp/>the<sp/>i&lt;sup&gt;th&lt;/sup&gt;</highlight></codeline>
<codeline lineno="1863"><highlight class="comment">&lt;strong&gt;rangespec<sp/>result&lt;/strong&gt;<sp/>as<sp/>the<sp/>set<sp/>of<sp/>domain<sp/>nodes<sp/>for<sp/>which<sp/>the<sp/></highlight></codeline>
<codeline lineno="1864"><highlight class="comment">following<sp/>xquery<sp/>expression<sp/>returns<sp/>true:</highlight></codeline>
<codeline lineno="1865"><highlight class="comment"></highlight></codeline>
<codeline lineno="1866"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1867"><highlight class="comment">if<sp/>($haveLowerBound-i<sp/>and<sp/>$haveUpperBound-i)<sp/>then</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/><sp/>$lowerBound-i<sp/>lop<sp/>$node/keyExpr-i<sp/>and<sp/>$node/keyExpr-i<sp/>uop<sp/>$upperBound-i</highlight></codeline>
<codeline lineno="1869"><highlight class="comment">else<sp/>if<sp/>($haveLowerBound-i)<sp/>then</highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/><sp/>$lowerBound-i<sp/>lop<sp/>$node/keyExpr-i</highlight></codeline>
<codeline lineno="1871"><highlight class="comment">else<sp/>if<sp/>($haveUpperBound-i)<sp/>then</highlight></codeline>
<codeline lineno="1872"><highlight class="comment"><sp/><sp/>$node/keyExpr-i<sp/>uop<sp/>$upperBound-i</highlight></codeline>
<codeline lineno="1873"><highlight class="comment">else</highlight></codeline>
<codeline lineno="1874"><highlight class="comment"><sp/><sp/>fn:true()</highlight></codeline>
<codeline lineno="1875"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1876"><highlight class="comment"></highlight></codeline>
<codeline lineno="1877"><highlight class="comment">where<sp/>keyExpr-i<sp/>is<sp/>the<sp/>expression<sp/>specified<sp/>by<sp/>the<sp/>i&lt;sup&gt;th&lt;/sup&gt;<sp/>keyspec<sp/></highlight></codeline>
<codeline lineno="1878"><highlight class="comment">of<sp/>the<sp/>index,<sp/>lop<sp/>is<sp/>either<sp/>the<sp/>le<sp/>or<sp/>the<sp/>lt<sp/>operator<sp/>depending<sp/>on<sp/>whether<sp/></highlight></codeline>
<codeline lineno="1879"><highlight class="comment">$lowerBoundsIncluded-i<sp/>is<sp/>true<sp/>or<sp/>false,<sp/>and<sp/>uop<sp/>is<sp/>either<sp/>the<sp/>le<sp/>or<sp/>the<sp/></highlight></codeline>
<codeline lineno="1880"><highlight class="comment">lt<sp/>operator<sp/>depending<sp/>on<sp/>whether<sp/>$upperBoundsIncluded-i<sp/>is<sp/>true<sp/>or<sp/>false.</highlight></codeline>
<codeline lineno="1881"><highlight class="comment"></highlight></codeline>
<codeline lineno="1882"><highlight class="comment">The<sp/>result<sp/>of<sp/>the<sp/>probe-index-range-value<sp/>function<sp/>is<sp/>either<sp/>an<sp/>error,<sp/>or<sp/>the</highlight></codeline>
<codeline lineno="1883"><highlight class="comment">intersection<sp/>of<sp/>all<sp/>the<sp/>rangespec<sp/>results.<sp/>In<sp/>addition<sp/>to<sp/>the<sp/>errors<sp/>that<sp/>may<sp/></highlight></codeline>
<codeline lineno="1884"><highlight class="comment">be<sp/>raised<sp/>by<sp/>a<sp/>rangespec<sp/>expression,<sp/>the<sp/>function<sp/>may<sp/>raise<sp/>the<sp/>following<sp/>errors:</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"></highlight></codeline>
<codeline lineno="1886"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="1887"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1888"><highlight class="comment"><sp/>&lt;a<sp/>href=&quot;#ERRZDDY0021&quot;&gt;zerr:ZDDY0021&lt;/a&gt;<sp/>or<sp/>&lt;a<sp/>href=&quot;#ERRZDDY0023&quot;&gt;zerr:ZDDY0023&lt;/a&gt;,</highlight></codeline>
<codeline lineno="1889"><highlight class="comment">if<sp/>the<sp/>index<sp/>is<sp/>not<sp/>among<sp/>the<sp/>statically<sp/>known<sp/>indexes<sp/>or<sp/>the<sp/>available<sp/>indexes.</highlight></codeline>
<codeline lineno="1890"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1891"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1892"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0026&quot;&gt;zerr:ZDDY0026&lt;/a&gt;],<sp/>if<sp/>the<sp/>index<sp/>is<sp/>not<sp/>a<sp/>range<sp/>index.</highlight></codeline>
<codeline lineno="1893"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1894"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1895"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0025&quot;&gt;zerr:ZDDY0025&lt;/a&gt;],<sp/>if<sp/>the<sp/>number<sp/>of<sp/>rangespecs<sp/>passed<sp/></highlight></codeline>
<codeline lineno="1896"><highlight class="comment">as<sp/>arguments<sp/>is<sp/>zero<sp/>or<sp/>greater<sp/>than<sp/>the<sp/>number<sp/>of<sp/>keys<sp/>declared<sp/>for<sp/>the<sp/>index.</highlight></codeline>
<codeline lineno="1897"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1898"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1899"><highlight class="comment">[err:XPTY0004],<sp/>if<sp/>$haveLowerBound-i<sp/>is<sp/>true<sp/>and<sp/>$lowerBound-i<sp/>is<sp/>an<sp/>atomic<sp/></highlight></codeline>
<codeline lineno="1900"><highlight class="comment">item<sp/>whose<sp/>type<sp/>does<sp/>not<sp/>match<sp/>the<sp/>sequence<sp/>type<sp/>specified<sp/>by<sp/>the<sp/>i&lt;sup&gt;th&lt;/sup&gt;<sp/></highlight></codeline>
<codeline lineno="1901"><highlight class="comment">keyspec,<sp/>or<sp/>$haveUpperBound-i<sp/>is<sp/>true<sp/>and<sp/>$upperBound-i<sp/>is<sp/>an<sp/>atomic<sp/>item<sp/></highlight></codeline>
<codeline lineno="1902"><highlight class="comment">whose<sp/>type<sp/>does<sp/>not<sp/>match<sp/>the<sp/>sequence<sp/>type<sp/>specified<sp/>by<sp/>the<sp/>i&lt;sup&gt;th&lt;/sup&gt;<sp/>keyspec.</highlight></codeline>
<codeline lineno="1903"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1904"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1905"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0034&quot;&gt;zerr:ZDDY0034&lt;/a&gt;],<sp/>if<sp/>(a)<sp/>the<sp/>index<sp/>is<sp/>general<sp/>(in<sp/>which<sp/></highlight></codeline>
<codeline lineno="1906"><highlight class="comment">case<sp/>there<sp/>is<sp/>only<sp/>one<sp/>rangespac),<sp/>(b)<sp/>the<sp/>index<sp/>is<sp/>untyped,<sp/>(c)<sp/>there<sp/>is<sp/>both<sp/>a</highlight></codeline>
<codeline lineno="1907"><highlight class="comment">lower<sp/>and<sp/>an<sp/>upper<sp/>bound,<sp/>and<sp/>(d)<sp/>if<sp/>T1<sp/>and<sp/>T2<sp/>are<sp/>the<sp/>types<sp/>of<sp/>the<sp/>lower<sp/>and<sp/></highlight></codeline>
<codeline lineno="1908"><highlight class="comment">upper<sp/>bound,<sp/>neither<sp/>T1<sp/>is<sp/>a<sp/>subtype<sp/>of<sp/>T2<sp/>nor<sp/>T2<sp/>is<sp/>a<sp/>subtype<sp/>of<sp/>T1.<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1909"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1910"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1911"><highlight class="comment"></highlight></codeline>
<codeline lineno="1912"><highlight class="comment"></highlight></codeline>
<codeline lineno="1913"><highlight class="comment">&lt;strong&gt;idml:probe-index-range-general&lt;/strong&gt;</highlight></codeline>
<codeline lineno="1914"><highlight class="comment"></highlight></codeline>
<codeline lineno="1915"><highlight class="comment"></highlight></codeline>
<codeline lineno="1916"><highlight class="comment">&lt;a<sp/>name=&quot;probe_index_range_general&quot;<sp/>id=&quot;probe_index_range_general&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="1917"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1918"><highlight class="comment"><sp/><sp/>probe-index-range-general($indexUri<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:QName,</highlight></codeline>
<codeline lineno="1919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$lowerBoundKeys<sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:anyAtomicType*,</highlight></codeline>
<codeline lineno="1920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$upperBoundKeys<sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:anyAtomicType*,</highlight></codeline>
<codeline lineno="1921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$haveLowerBound<sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1922"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$haveUpperBound<sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$lowerBoundIncluded<sp/><sp/>as<sp/>xs:boolean,</highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$upperBoundIncluded<sp/><sp/>as<sp/>xs:boolean)<sp/>as<sp/>node()*</highlight></codeline>
<codeline lineno="1925"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1926"><highlight class="comment"></highlight></codeline>
<codeline lineno="1927"><highlight class="comment">The<sp/>probe-index-range-general<sp/>function<sp/>retrieves<sp/>the<sp/>domain<sp/>nodes<sp/>associated</highlight></codeline>
<codeline lineno="1928"><highlight class="comment">by<sp/>general<sp/>order-comparison<sp/>(operators<sp/>&lt;=,<sp/>&lt;,<sp/>&gt;=,<sp/>&gt;)<sp/>with<sp/>one<sp/>or<sp/>two</highlight></codeline>
<codeline lineno="1929"><highlight class="comment">&lt;strong&gt;search<sp/>sequences&lt;/strong&gt;.<sp/>Each<sp/>search<sp/>sequence<sp/>consists<sp/>of<sp/>an<sp/></highlight></codeline>
<codeline lineno="1930"><highlight class="comment">arbitrary<sp/>number<sp/>of<sp/>&lt;strong&gt;search<sp/>keys&lt;/strong&gt;,<sp/>where<sp/>each<sp/>search<sp/>key<sp/>is<sp/></highlight></codeline>
<codeline lineno="1931"><highlight class="comment">an<sp/>atomic<sp/>item.<sp/>This<sp/>method<sp/>is<sp/>supported<sp/>by<sp/>general<sp/>range<sp/>indexes<sp/>only<sp/></highlight></codeline>
<codeline lineno="1932"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0030&quot;&gt;zerr:ZDDY0030&lt;/a&gt;].<sp/>Its<sp/>result<sp/>is<sp/>either<sp/>an<sp/>error<sp/>or</highlight></codeline>
<codeline lineno="1933"><highlight class="comment">the<sp/>set<sp/>of<sp/>domain<sp/>nodes<sp/>for<sp/>which<sp/>the<sp/>following<sp/>xquery<sp/>expression<sp/>returns<sp/>true:</highlight></codeline>
<codeline lineno="1934"><highlight class="comment"></highlight></codeline>
<codeline lineno="1935"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1936"><highlight class="comment">if<sp/>($haveLowerBound<sp/>and<sp/>$haveUpperBound)<sp/>then</highlight></codeline>
<codeline lineno="1937"><highlight class="comment"><sp/><sp/>$lowerBoundKeys<sp/>lop<sp/>$node/keyExpr<sp/>and<sp/>$node/keyExpr<sp/>uop<sp/>$upperBoundKeys</highlight></codeline>
<codeline lineno="1938"><highlight class="comment">else<sp/>if<sp/>($haveLowerBound)<sp/>then</highlight></codeline>
<codeline lineno="1939"><highlight class="comment"><sp/><sp/>$lowerBoundKeys<sp/>lop<sp/>$node/keyExpr</highlight></codeline>
<codeline lineno="1940"><highlight class="comment">else<sp/>if<sp/>($haveUpperBound)<sp/>then</highlight></codeline>
<codeline lineno="1941"><highlight class="comment"><sp/><sp/>$node/keyExpr<sp/>uop<sp/>$upperBoundKeys</highlight></codeline>
<codeline lineno="1942"><highlight class="comment">else</highlight></codeline>
<codeline lineno="1943"><highlight class="comment"><sp/><sp/>fn:true()</highlight></codeline>
<codeline lineno="1944"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1945"><highlight class="comment"></highlight></codeline>
<codeline lineno="1946"><highlight class="comment">where<sp/>keyExpr<sp/>is<sp/>the<sp/>expression<sp/>specified<sp/>in<sp/>the<sp/>keyspec<sp/>of<sp/>the<sp/>index,</highlight></codeline>
<codeline lineno="1947"><highlight class="comment">lop<sp/>is<sp/>either<sp/>the<sp/>&lt;=<sp/>or<sp/>the<sp/>&lt;<sp/>operator<sp/>depending<sp/>on<sp/>whether<sp/>$lowerBoundsIncluded</highlight></codeline>
<codeline lineno="1948"><highlight class="comment">is<sp/>true<sp/>or<sp/>false,<sp/>and<sp/>uop<sp/>is<sp/>either<sp/>the<sp/>&lt;=<sp/>or<sp/>the<sp/>&lt;<sp/>operator<sp/>depending<sp/>on<sp/>whether</highlight></codeline>
<codeline lineno="1949"><highlight class="comment">$upperBoundsIncluded<sp/>is<sp/>true<sp/>or<sp/>false.</highlight></codeline>
<codeline lineno="1950"><highlight class="comment"></highlight></codeline>
<codeline lineno="1951"><highlight class="comment">In<sp/>addition<sp/>to<sp/>the<sp/>errors<sp/>that<sp/>may<sp/>be<sp/>raised<sp/>by<sp/>the<sp/>above<sp/>expression,<sp/>the</highlight></codeline>
<codeline lineno="1952"><highlight class="comment">probe-index-point-value<sp/>function<sp/>may<sp/>raise<sp/>the<sp/>following<sp/>errors:</highlight></codeline>
<codeline lineno="1953"><highlight class="comment"></highlight></codeline>
<codeline lineno="1954"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="1955"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1956"><highlight class="comment"><sp/>&lt;a<sp/>href=&quot;#ERRZDDY0021&quot;&gt;zerr:ZDDY0021&lt;/a&gt;<sp/>or<sp/>&lt;a<sp/>href=&quot;#ERRZDDY0023&quot;&gt;zerr:ZDDY0023&lt;/a&gt;,</highlight></codeline>
<codeline lineno="1957"><highlight class="comment">if<sp/>the<sp/>index<sp/>is<sp/>not<sp/>among<sp/>the<sp/>statically<sp/>known<sp/>indexes<sp/>or<sp/>the<sp/>available<sp/>indexes.</highlight></codeline>
<codeline lineno="1958"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1959"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1960"><highlight class="comment">[&lt;a<sp/>href=&quot;#ERRZDDY0030&quot;&gt;zerr:ZDDY0030&lt;/a&gt;],<sp/>if<sp/>the<sp/>index<sp/>is<sp/>not<sp/>a<sp/>general<sp/>range<sp/>index.</highlight></codeline>
<codeline lineno="1961"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1962"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="1963"><highlight class="comment">[err:XPTY0004],<sp/>if<sp/>$haveLowerBound<sp/>is<sp/>true<sp/>and<sp/>$lowerBoundKeys<sp/>constains<sp/>an</highlight></codeline>
<codeline lineno="1964"><highlight class="comment">atomic<sp/>item<sp/>whose<sp/>type<sp/>does<sp/>not<sp/>match<sp/>the<sp/>sequence<sp/>type<sp/>specified<sp/>by<sp/>the<sp/>index<sp/></highlight></codeline>
<codeline lineno="1965"><highlight class="comment">keyspec,<sp/>or<sp/>$haveUpperBound<sp/>is<sp/>true<sp/>and<sp/>$upperBoundKeys<sp/>contains<sp/>an<sp/>atomic<sp/>item<sp/></highlight></codeline>
<codeline lineno="1966"><highlight class="comment">whose<sp/>type<sp/>does<sp/>not<sp/>match<sp/>the<sp/>sequence<sp/>type<sp/>specified<sp/>by<sp/>the<sp/>index<sp/>keyspec.</highlight></codeline>
<codeline lineno="1967"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="1968"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1969"><highlight class="comment"></highlight></codeline>
<codeline lineno="1970"><highlight class="comment">\subsection<sp/>index_keys<sp/>Retrieving<sp/>Index<sp/>Keys</highlight></codeline>
<codeline lineno="1971"><highlight class="comment">In<sp/>addition<sp/>to<sp/>probing<sp/>an<sp/>index,<sp/>the<sp/>&lt;tt&gt;idml&lt;/tt&gt;<sp/>module<sp/>also<sp/>provides<sp/>a<sp/>function<sp/>that<sp/>allows<sp/>listing<sp/>all<sp/>the<sp/>keys<sp/>contained<sp/>in<sp/>an<sp/>index.</highlight></codeline>
<codeline lineno="1972"><highlight class="comment"></highlight></codeline>
<codeline lineno="1973"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1974"><highlight class="comment"><sp/><sp/>idml:keys($indexName<sp/>as<sp/>xs:QName)<sp/>as<sp/>item()*</highlight></codeline>
<codeline lineno="1975"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1976"><highlight class="comment"></highlight></codeline>
<codeline lineno="1977"><highlight class="comment">This<sp/>function<sp/>returns<sp/>a<sp/>sequence<sp/>of<sp/>element<sp/>nodes.</highlight></codeline>
<codeline lineno="1978"><highlight class="comment">Each<sp/>node<sp/>in<sp/>the<sp/>sequence<sp/>represents<sp/>one<sp/>key<sp/>contained<sp/>in<sp/>the<sp/>index<sp/>and<sp/>has<sp/>the<sp/>following<sp/>structure:</highlight></codeline>
<codeline lineno="1979"><highlight class="comment"></highlight></codeline>
<codeline lineno="1980"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="1981"><highlight class="comment"><sp/>&lt;key<sp/>xmlns=&quot;http://zorba.io/modules/store/static/indexes/dml&quot;&gt;</highlight></codeline>
<codeline lineno="1982"><highlight class="comment"><sp/><sp/><sp/>&lt;attribute<sp/>value=&quot;key_1&quot;/&gt;</highlight></codeline>
<codeline lineno="1983"><highlight class="comment"><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="1984"><highlight class="comment"><sp/><sp/><sp/>&lt;attribute<sp/>value=&quot;key_n&quot;/&gt;</highlight></codeline>
<codeline lineno="1985"><highlight class="comment"><sp/>&lt;/key&gt;</highlight></codeline>
<codeline lineno="1986"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="1987"><highlight class="comment"></highlight></codeline>
<codeline lineno="1988"><highlight class="comment">The<sp/>order<sp/>of<sp/>the<sp/>attribute<sp/>elements<sp/>reflects<sp/>the<sp/>order<sp/>of<sp/>the<sp/>key<sp/>specifications<sp/>in<sp/>the<sp/>declaration<sp/>of<sp/>the<sp/>index.</highlight></codeline>
<codeline lineno="1989"><highlight class="comment">Also,<sp/>the<sp/>types<sp/>of<sp/>the<sp/>values<sp/>of<sp/>the<sp/>attributes<sp/>are<sp/>the<sp/>types<sp/>of<sp/>the<sp/>keys<sp/>as<sp/>they<sp/>are<sp/>declared.</highlight></codeline>
<codeline lineno="1990"><highlight class="comment">If<sp/>a<sp/>value<sp/>attribute<sp/>is<sp/>not<sp/>present,<sp/>this<sp/>means<sp/>that<sp/>the<sp/>value<sp/>of<sp/>the<sp/>corresponding<sp/>key<sp/>in<sp/>the<sp/>index<sp/>is<sp/>the<sp/>empty<sp/>sequence.</highlight></codeline>
<codeline lineno="1991"><highlight class="comment"></highlight></codeline>
<codeline lineno="1992"><highlight class="comment">\subsection<sp/>index_maintenance<sp/>Index<sp/>Maintenance</highlight></codeline>
<codeline lineno="1993"><highlight class="comment"></highlight></codeline>
<codeline lineno="1994"><highlight class="comment">\n<sp/>An<sp/>index<sp/>is<sp/>said<sp/>to<sp/>be<sp/>up-to-date<sp/>if<sp/>its<sp/>content<sp/>reflects<sp/>the<sp/>index<sp/>definition</highlight></codeline>
<codeline lineno="1995"><highlight class="comment">on<sp/>the<sp/>current<sp/>data<sp/>snapshot,<sp/>i.e.,<sp/>the<sp/>contents<sp/>are<sp/>the<sp/>same<sp/>as<sp/>those<sp/>that</highlight></codeline>
<codeline lineno="1996"><highlight class="comment">would<sp/>be<sp/>produced<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="1997"><highlight class="comment">&lt;a<sp/>href=&quot;#create_index&quot;<sp/>title=&quot;idml:create&quot;&gt;iddl:create&lt;/a&gt;</highlight></codeline>
<codeline lineno="1998"><highlight class="comment">function<sp/>was<sp/>invoked<sp/>on<sp/>the<sp/>same<sp/>index<sp/>and<sp/>with<sp/>the<sp/>same<sp/>underlying<sp/>data.</highlight></codeline>
<codeline lineno="1999"><highlight class="comment">An<sp/>index<sp/>is<sp/>said<sp/>to<sp/>be<sp/>stale<sp/>if<sp/>it<sp/>is<sp/>not<sp/>up-to-date.<sp/>Indexes<sp/>become<sp/>stale<sp/>when</highlight></codeline>
<codeline lineno="2000"><highlight class="comment">documents<sp/>in<sp/>collections<sp/>are<sp/>updated<sp/>or<sp/>when<sp/>documents<sp/>are<sp/>inserted/removed</highlight></codeline>
<codeline lineno="2001"><highlight class="comment">in/from<sp/>collections.<sp/>&lt;strong&gt;Index<sp/>Maintenance&lt;/strong&gt;<sp/>is<sp/>the<sp/>operation<sp/>by</highlight></codeline>
<codeline lineno="2002"><highlight class="comment">which<sp/>stale<sp/>index<sp/>contents<sp/>are<sp/>updated<sp/>so<sp/>that<sp/>the<sp/>index<sp/>becomes<sp/>up-to-date.</highlight></codeline>
<codeline lineno="2003"><highlight class="comment">Zorba<sp/>offers<sp/>two<sp/>maintenance<sp/>modes:<sp/>manual<sp/>and<sp/>automatic.</highlight></codeline>
<codeline lineno="2004"><highlight class="comment"></highlight></codeline>
<codeline lineno="2005"><highlight class="comment">\n<sp/>\n<sp/>If<sp/>an<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>&quot;automatically<sp/>maintained&quot;<sp/>(i.e.<sp/>&apos;%an:automatic&apos;),<sp/>Zorba<sp/>guarantees<sp/>that</highlight></codeline>
<codeline lineno="2006"><highlight class="comment">every<sp/>time<sp/>a<sp/>PUL<sp/>is<sp/>applied,<sp/>the<sp/>index<sp/>is<sp/>made<sp/>up-to-date<sp/>before<sp/>the<sp/></highlight></codeline>
<codeline lineno="2007"><highlight class="comment">upd:apply-updates<sp/>function<sp/>returns.<sp/>Ideally,<sp/>all<sp/>indexes<sp/>should<sp/>be<sp/>automatically</highlight></codeline>
<codeline lineno="2008"><highlight class="comment">maintained,<sp/>but<sp/>in<sp/>general,<sp/>index<sp/>maintenance<sp/>can<sp/>be<sp/>a<sp/>very<sp/>expensive<sp/>operation</highlight></codeline>
<codeline lineno="2009"><highlight class="comment">performance-wise.<sp/>As<sp/>a<sp/>result,<sp/>Zorba<sp/>will<sp/>reject<sp/>a<sp/>declaration<sp/>for<sp/>an<sp/>automatic</highlight></codeline>
<codeline lineno="2010"><highlight class="comment">index<sp/>if<sp/>it<sp/>determines<sp/>that<sp/>it<sp/>cannot<sp/>maintain<sp/>the<sp/>index<sp/>in<sp/>an<sp/>&quot;efficient&quot;<sp/>way.</highlight></codeline>
<codeline lineno="2011"><highlight class="comment">The<sp/>definition<sp/>of<sp/>efficiency<sp/>with<sp/>respect<sp/>to<sp/>index<sp/>maintenance<sp/>is<sp/>implementation</highlight></codeline>
<codeline lineno="2012"><highlight class="comment">dependent,<sp/>but<sp/>in<sp/>general,<sp/>it<sp/>means<sp/>that<sp/>the<sp/>index<sp/>can<sp/>be<sp/>maintained<sp/>in<sp/>some</highlight></codeline>
<codeline lineno="2013"><highlight class="comment">incremental<sp/>way<sp/>that<sp/>is<sp/>faster<sp/>than<sp/>simply<sp/>re-creating<sp/>the<sp/>whole<sp/>index<sp/>from</highlight></codeline>
<codeline lineno="2014"><highlight class="comment">scratch.<sp/>However,<sp/>even<sp/>incremental<sp/>maintenance<sp/>can<sp/>have<sp/>a<sp/>high<sp/>cost,<sp/>which</highlight></codeline>
<codeline lineno="2015"><highlight class="comment">may<sp/>make<sp/>the<sp/>manual<sp/>mode<sp/>described<sp/>below<sp/>the<sp/>preferred<sp/>choice.</highlight></codeline>
<codeline lineno="2016"><highlight class="comment"></highlight></codeline>
<codeline lineno="2017"><highlight class="comment">\n<sp/>\n<sp/>If<sp/>an<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>&quot;manually<sp/>maintained&quot;<sp/>(i.e.<sp/>&apos;%an:manual&apos;),<sp/>it<sp/>is<sp/>the<sp/>responsibility<sp/>of</highlight></codeline>
<codeline lineno="2018"><highlight class="comment">the<sp/>programmers<sp/>to<sp/>keep<sp/>the<sp/>index<sp/>up-to-date.<sp/>This<sp/>can<sp/>be<sp/>done<sp/>using<sp/>the<sp/></highlight></codeline>
<codeline lineno="2019"><highlight class="comment">idml:refresh-index<sp/>updating<sp/>function<sp/>described<sp/>below.<sp/>Since<sp/>Zorba<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="2020"><highlight class="comment">take<sp/>any<sp/>maintenance<sp/>action<sp/>during<sp/>PUL<sp/>applications,<sp/>manually<sp/>maintained</highlight></codeline>
<codeline lineno="2021"><highlight class="comment">indexes<sp/>may<sp/>become<sp/>stale<sp/>in<sp/>between<sp/>calls<sp/>to<sp/>the<sp/>idml:refresh-index<sp/>function.</highlight></codeline>
<codeline lineno="2022"><highlight class="comment">Obviously,<sp/>the<sp/>manual<sp/>mode<sp/>must<sp/>be<sp/>used<sp/>if<sp/>an<sp/>index<sp/>cannot<sp/>be<sp/>maintained</highlight></codeline>
<codeline lineno="2023"><highlight class="comment">automatically.<sp/>However,<sp/>even<sp/>for<sp/>automatically<sp/>maintainable<sp/>indexes,<sp/>the</highlight></codeline>
<codeline lineno="2024"><highlight class="comment">manual<sp/>mode<sp/>may<sp/>be<sp/>preferable<sp/>if<sp/>users<sp/>can<sp/>tolerate<sp/>a<sp/>stale<sp/>index<sp/>in<sp/>return</highlight></codeline>
<codeline lineno="2025"><highlight class="comment">for<sp/>better<sp/>performance<sp/>during<sp/>updates.<sp/></highlight></codeline>
<codeline lineno="2026"><highlight class="comment"></highlight></codeline>
<codeline lineno="2027"><highlight class="comment">&lt;a<sp/>name=&quot;refresh_index&quot;<sp/>id=&quot;refresh_index&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="2028"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="2029"><highlight class="comment"><sp/><sp/>declare<sp/>updating<sp/>function<sp/>idml:refresh-index($indexName<sp/>as<sp/>xs:QName)</highlight></codeline>
<codeline lineno="2030"><highlight class="comment"></highlight></codeline>
<codeline lineno="2031"><highlight class="comment"><sp/><sp/>upd:refreshIndex($indexName<sp/>as<sp/>xs:QName)</highlight></codeline>
<codeline lineno="2032"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"></highlight></codeline>
<codeline lineno="2034"><highlight class="comment">The<sp/>refresh-index<sp/>function<sp/>is<sp/>evaluated<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="2035"><highlight class="comment"></highlight></codeline>
<codeline lineno="2036"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="2037"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>an<sp/>index<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="2038"><highlight class="comment">statically</highlight></codeline>
<codeline lineno="2039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>known<sp/>indexes<sp/>in<sp/>the<sp/>static<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is<sp/></highlight></codeline>
<codeline lineno="2040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0021&quot;&gt;zerr:ZDDY0021&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="2041"><highlight class="comment"><sp/><sp/>&lt;li&gt;If<sp/>the<sp/>given<sp/>expanded<sp/>QName<sp/>does<sp/>not<sp/>identify<sp/>an<sp/>index<sp/>among<sp/>the<sp/>available</highlight></codeline>
<codeline lineno="2042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>indexes<sp/>in<sp/>the<sp/>dynamic<sp/>context<sp/>of<sp/>the<sp/>invoking<sp/>module,<sp/>an<sp/>error<sp/>is<sp/>raised</highlight></codeline>
<codeline lineno="2043"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0023&quot;&gt;zerr:ZDDY0023&lt;/a&gt;].&lt;/li&gt;</highlight></codeline>
<codeline lineno="2044"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>is<sp/>an<sp/>empty<sp/>XDM<sp/>instance<sp/>and<sp/>a<sp/>pending<sp/>update</highlight></codeline>
<codeline lineno="2045"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>that<sp/>consists<sp/>of<sp/>a<sp/>single<sp/>update<sp/>primitive:</highlight></codeline>
<codeline lineno="2046"><highlight class="comment">upd:refreshIndex($indexName).&lt;/li&gt;</highlight></codeline>
<codeline lineno="2047"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="2048"><highlight class="comment"></highlight></codeline>
<codeline lineno="2049"><highlight class="comment">The<sp/>update<sp/>primitive<sp/>is<sp/>applied<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="2050"><highlight class="comment"></highlight></codeline>
<codeline lineno="2051"><highlight class="comment"><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="2052"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>index<sp/>entry<sp/>container<sp/>for<sp/>the<sp/>index<sp/>is<sp/>found<sp/>via<sp/>the<sp/>indexes</highlight></codeline>
<codeline lineno="2053"><highlight class="comment">table.&lt;/li&gt;</highlight></codeline>
<codeline lineno="2054"><highlight class="comment"><sp/><sp/>&lt;li&gt;The<sp/>container<sp/>is<sp/>made<sp/>up-to-date<sp/>in<sp/>some<sp/>implementation<sp/>dependent<sp/>way.<sp/>In</highlight></codeline>
<codeline lineno="2055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Zorba<sp/>this<sp/>is<sp/>done<sp/>by<sp/>discarding<sp/>the<sp/>current<sp/>contents<sp/>and<sp/>rebuilding</highlight></codeline>
<codeline lineno="2056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>index<sp/>from<sp/>scratch<sp/>(the<sp/>same<sp/>way<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="2057"><highlight class="comment">&lt;a<sp/>href=&quot;#create_index&quot;<sp/>title=&quot;iddl:create&quot;&gt;iddl:create&lt;/a&gt;</highlight></codeline>
<codeline lineno="2058"><highlight class="comment">function<sp/>populates<sp/>an<sp/>empty<sp/>index<sp/>container).&lt;/li&gt;</highlight></codeline>
<codeline lineno="2059"><highlight class="comment"><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="2060"><highlight class="comment"></highlight></codeline>
<codeline lineno="2061"><highlight class="comment"></highlight></codeline>
<codeline lineno="2062"><highlight class="comment"></highlight></codeline>
<codeline lineno="2063"><highlight class="comment">\section<sp/>integrity_constraints<sp/>Integrity<sp/>Constraints<sp/>in<sp/>Zorba<sp/></highlight></codeline>
<codeline lineno="2064"><highlight class="comment"></highlight></codeline>
<codeline lineno="2065"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="2066"><highlight class="comment"><sp/><sp/>ICDecl<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::=<sp/><sp/>&apos;integrity&apos;<sp/>&apos;constraint&apos;<sp/>EQName<sp/>(ICCollection<sp/>|<sp/>ICForeignKey)</highlight></codeline>
<codeline lineno="2067"><highlight class="comment"></highlight></codeline>
<codeline lineno="2068"><highlight class="comment"><sp/><sp/>ICCollection<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::=<sp/><sp/>&apos;on&apos;<sp/>&apos;collection&apos;<sp/>EQName</highlight></codeline>
<codeline lineno="2069"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>ICCollSequence<sp/>|<sp/>ICCollSequenceUnique<sp/>|<sp/>ICCollNode<sp/>)</highlight></codeline>
<codeline lineno="2070"><highlight class="comment"></highlight></codeline>
<codeline lineno="2071"><highlight class="comment"><sp/><sp/>ICCollSequence<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::=<sp/><sp/>&apos;\$&apos;<sp/>EQName<sp/>&apos;check&apos;<sp/>ExprSingle</highlight></codeline>
<codeline lineno="2072"><highlight class="comment"></highlight></codeline>
<codeline lineno="2073"><highlight class="comment"><sp/><sp/>ICCollSequenceUnique<sp/><sp/>::=<sp/><sp/>&apos;node&apos;<sp/>&apos;\$&apos;<sp/>EQName<sp/>&apos;check&apos;<sp/>&apos;unique&apos;<sp/>&apos;key&apos;<sp/>PathExpr</highlight></codeline>
<codeline lineno="2074"><highlight class="comment"></highlight></codeline>
<codeline lineno="2075"><highlight class="comment"><sp/><sp/>ICCollNode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::=<sp/><sp/>&apos;foreach&apos;<sp/>&apos;node&apos;<sp/>&apos;\$&apos;<sp/>EQName<sp/>&apos;check&apos;<sp/>ExprSingle</highlight></codeline>
<codeline lineno="2076"><highlight class="comment"></highlight></codeline>
<codeline lineno="2077"><highlight class="comment"><sp/><sp/>ICForeignKey<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::=<sp/><sp/>&apos;foreign&apos;<sp/>&apos;key&apos;<sp/>ICForeignKeySource<sp/>ICForeignKeyTarget</highlight></codeline>
<codeline lineno="2078"><highlight class="comment"></highlight></codeline>
<codeline lineno="2079"><highlight class="comment"><sp/><sp/>ICForeignKeySource<sp/><sp/><sp/><sp/>::=<sp/><sp/>&apos;from&apos;<sp/>ICForeignKeyValues</highlight></codeline>
<codeline lineno="2080"><highlight class="comment"></highlight></codeline>
<codeline lineno="2081"><highlight class="comment"><sp/><sp/>ICForeignKeyTarget<sp/><sp/><sp/><sp/>::=<sp/><sp/>&apos;to&apos;<sp/>ICForeignKeyValues</highlight></codeline>
<codeline lineno="2082"><highlight class="comment"></highlight></codeline>
<codeline lineno="2083"><highlight class="comment"><sp/><sp/>ICForeignKeyValues<sp/><sp/><sp/><sp/>::=<sp/><sp/>&apos;collection&apos;<sp/>EQName<sp/>&apos;node&apos;<sp/>&apos;\$&apos;<sp/>QName<sp/>&apos;key&apos;<sp/>PathExpr</highlight></codeline>
<codeline lineno="2084"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="2085"><highlight class="comment"></highlight></codeline>
<codeline lineno="2086"><highlight class="comment"></highlight></codeline>
<codeline lineno="2087"><highlight class="comment">Analogously<sp/>to<sp/>collections<sp/>and<sp/>indexes,<sp/>Zorba<sp/>defines<sp/>an<sp/>additional<sp/>extension<sp/>to</highlight></codeline>
<codeline lineno="2088"><highlight class="comment">XQuery<sp/>library<sp/>modules<sp/>which<sp/>allows<sp/>the<sp/>declaration<sp/>of<sp/>(static)<sp/>integrity</highlight></codeline>
<codeline lineno="2089"><highlight class="comment">constraints<sp/>(ICs).<sp/>Static<sp/>ICs<sp/>can<sp/>be<sp/>used<sp/>to<sp/>ensure<sp/>that,<sp/>in<sp/>every<sp/>moment<sp/>in</highlight></codeline>
<codeline lineno="2090"><highlight class="comment">time,<sp/>all<sp/>data<sp/>which<sp/>is<sp/>stored<sp/>in<sp/>collections<sp/>is<sp/>accurate<sp/>and<sp/>consistent</highlight></codeline>
<codeline lineno="2091"><highlight class="comment">according<sp/>to<sp/>the<sp/>semantics<sp/>of<sp/>an<sp/>application.</highlight></codeline>
<codeline lineno="2092"><highlight class="comment">Note<sp/>that<sp/>Zorba<sp/>doesn&apos;t<sp/>define<sp/>any<sp/>dynamic<sp/>integrity<sp/>constraints<sp/>which<sp/>check</highlight></codeline>
<codeline lineno="2093"><highlight class="comment">the<sp/>validity<sp/>of<sp/>a<sp/>particular<sp/>update.</highlight></codeline>
<codeline lineno="2094"><highlight class="comment">As<sp/>in<sp/>the<sp/>relational<sp/>world,<sp/>Zorba<sp/>defines<sp/>several<sp/>types<sp/>of<sp/>ICs:</highlight></codeline>
<codeline lineno="2095"><highlight class="comment">&lt;a<sp/>href=&quot;#ic_entity_integrity&quot;<sp/>title=&quot;Entity&quot;&gt;Entity&lt;/a&gt;,</highlight></codeline>
<codeline lineno="2096"><highlight class="comment">&lt;a<sp/>href=&quot;#ic_domain_integrity&quot;<sp/>title=&quot;Domain&quot;&gt;Domain&lt;/a&gt;<sp/>and</highlight></codeline>
<codeline lineno="2097"><highlight class="comment">&lt;a<sp/>href=&quot;#ic_referential_integrity&quot;<sp/>title=&quot;Referential&quot;&gt;Referential&lt;/a&gt;<sp/>ICs.</highlight></codeline>
<codeline lineno="2098"><highlight class="comment"></highlight></codeline>
<codeline lineno="2099"><highlight class="comment">\n<sp/>\n<sp/>&lt;a<sp/>href=&quot;#ic_entity_integrity&quot;<sp/>title=&quot;Entity&quot;&gt;Entity&lt;/a&gt;<sp/>ICs<sp/>check<sp/>for<sp/>the<sp/>accuracy</highlight></codeline>
<codeline lineno="2100"><highlight class="comment">and<sp/>consistency<sp/>of<sp/>all<sp/>nodes<sp/>in<sp/>a<sp/>collection.<sp/>For<sp/>instance,<sp/>a<sp/>special<sp/>case<sp/>of</highlight></codeline>
<codeline lineno="2101"><highlight class="comment">the<sp/>Entity<sp/>IC<sp/>is<sp/>the<sp/>IC<sp/>that<sp/>checks<sp/>for<sp/>unique<sp/>keys<sp/>among<sp/>all<sp/>nodes<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="2102"><highlight class="comment">collection.</highlight></codeline>
<codeline lineno="2103"><highlight class="comment">The<sp/>&lt;a<sp/>href=&quot;#ic_domain_integrity&quot;<sp/>title=&quot;Domain&quot;&gt;Domain&lt;/a&gt;<sp/>IC<sp/>validates<sp/>that</highlight></codeline>
<codeline lineno="2104"><highlight class="comment">each<sp/>node<sp/>in<sp/>a<sp/>collection<sp/>satisfies<sp/>a<sp/>given<sp/>expression.</highlight></codeline>
<codeline lineno="2105"><highlight class="comment">The<sp/>&lt;a<sp/>href=&quot;#ic_referential_integrity&quot;<sp/>title=&quot;Referential&quot;&gt;Referential&lt;/a&gt;<sp/>IC</highlight></codeline>
<codeline lineno="2106"><highlight class="comment">is<sp/>used<sp/>to<sp/>ensure<sp/>a<sp/>foreign<sp/>key<sp/>relationship<sp/>between<sp/>the<sp/>nodes<sp/>in<sp/>two<sp/>collections.</highlight></codeline>
<codeline lineno="2107"><highlight class="comment"></highlight></codeline>
<codeline lineno="2108"><highlight class="comment">\n<sp/>\n<sp/>In<sp/>this<sp/>section,<sp/>we<sp/>describe<sp/>how<sp/>such<sp/>ICs<sp/>are<sp/>declared<sp/>in<sp/>a<sp/>library<sp/>module<sp/>and</highlight></codeline>
<codeline lineno="2109"><highlight class="comment">how<sp/>a<sp/>particular<sp/>IC<sp/>can<sp/>be<sp/>(de-)activated.<sp/>All<sp/>ICs<sp/>are<sp/>described<sp/>using<sp/>examples</highlight></codeline>
<codeline lineno="2110"><highlight class="comment">for<sp/>the<sp/>news<sp/>application.<sp/>Specifically,<sp/>we<sp/>declare<sp/>ICs<sp/>for<sp/>the<sp/>data<sp/>stored<sp/>in</highlight></codeline>
<codeline lineno="2111"><highlight class="comment">the<sp/>news-data:employees<sp/>and<sp/>the<sp/>news-data:articles<sp/>collections.</highlight></codeline>
<codeline lineno="2112"><highlight class="comment"></highlight></codeline>
<codeline lineno="2113"><highlight class="comment">\subsection<sp/>ic_declaration<sp/>Declaration</highlight></codeline>
<codeline lineno="2114"><highlight class="comment"></highlight></codeline>
<codeline lineno="2115"><highlight class="comment">\n<sp/>As<sp/>for<sp/>collections<sp/>and<sp/>indexes,<sp/>ICs<sp/>must<sp/>be<sp/>declared<sp/>before<sp/>the<sp/>user<sp/>can</highlight></codeline>
<codeline lineno="2116"><highlight class="comment">activate</highlight></codeline>
<codeline lineno="2117"><highlight class="comment">them.<sp/>An<sp/>IC<sp/>declaration<sp/>specifies<sp/>(1)<sp/>the<sp/>name<sp/>of<sp/>the<sp/>IC<sp/>for<sp/>being<sp/>used<sp/>by</highlight></codeline>
<codeline lineno="2118"><highlight class="comment">function</highlight></codeline>
<codeline lineno="2119"><highlight class="comment">call<sp/>to<sp/>(de-)activate<sp/>it<sp/>(see<sp/>next<sp/>section),<sp/>(2)<sp/>the<sp/>name<sp/>of<sp/>the<sp/>collection(s)</highlight></codeline>
<codeline lineno="2120"><highlight class="comment">whose</highlight></codeline>
<codeline lineno="2121"><highlight class="comment">data<sp/>should<sp/>be<sp/>validated,<sp/>and<sp/>(3)<sp/>the<sp/>expression(s)<sp/>that<sp/>guarantee<sp/>the<sp/>accuracy</highlight></codeline>
<codeline lineno="2122"><highlight class="comment">and</highlight></codeline>
<codeline lineno="2123"><highlight class="comment">consistency<sp/>of<sp/>the<sp/>data.<sp/>Analogously<sp/>to<sp/>indexes,<sp/>ICs<sp/>are<sp/>declared<sp/>inside<sp/>the</highlight></codeline>
<codeline lineno="2124"><highlight class="comment">prolog</highlight></codeline>
<codeline lineno="2125"><highlight class="comment">of<sp/>the<sp/>library<sp/>module<sp/>that<sp/>declares<sp/>the<sp/>collection(s)<sp/>which<sp/>is/are<sp/>referenced<sp/>by</highlight></codeline>
<codeline lineno="2126"><highlight class="comment">the</highlight></codeline>
<codeline lineno="2127"><highlight class="comment">IC.</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"></highlight></codeline>
<codeline lineno="2129"><highlight class="comment">&lt;a<sp/>name=&quot;ic_entity_integrity&quot;<sp/>id=&quot;ic_entity_integrity&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="2130"><highlight class="comment">\subsubsection<sp/>ic_entity_integrity<sp/>Entity<sp/>Integrity</highlight></codeline>
<codeline lineno="2131"><highlight class="comment">An<sp/>Entity<sp/>IC<sp/>is<sp/>used<sp/>to<sp/>state<sp/>the<sp/>uniqueness<sp/>of<sp/>a<sp/>key<sp/>among<sp/>all<sp/>nodes<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="2132"><highlight class="comment">collection.<sp/>For<sp/>example,<sp/>the<sp/>IC<sp/>(named<sp/>news-data:UniqueId)<sp/>in<sp/>the<sp/>example<sp/>below</highlight></codeline>
<codeline lineno="2133"><highlight class="comment">states<sp/>that<sp/>the<sp/>value<sp/>of<sp/>the<sp/>id<sp/>attribute<sp/>of<sp/>each<sp/>employee<sp/>is<sp/>unique<sp/>among<sp/>all</highlight></codeline>
<codeline lineno="2134"><highlight class="comment">other<sp/>nodes<sp/>in<sp/>the<sp/>news-data:employees<sp/>collection.</highlight></codeline>
<codeline lineno="2135"><highlight class="comment"></highlight></codeline>
<codeline lineno="2136"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="2137"><highlight class="comment"><sp/><sp/>declare<sp/>integrity<sp/>constraint<sp/>news-data:UniqueId</highlight></codeline>
<codeline lineno="2138"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>collection<sp/>news-data:employees</highlight></codeline>
<codeline lineno="2139"><highlight class="comment"><sp/><sp/><sp/><sp/>node<sp/>$id<sp/>check<sp/>unique<sp/>key<sp/>$id/@id;</highlight></codeline>
<codeline lineno="2140"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="2141"><highlight class="comment"></highlight></codeline>
<codeline lineno="2142"><highlight class="comment">The<sp/>name<sp/>of<sp/>the<sp/>collection<sp/>is<sp/>specified<sp/>after<sp/>the<sp/>&quot;on<sp/>collection&quot;<sp/>keyword.<sp/>The</highlight></codeline>
<codeline lineno="2143"><highlight class="comment">path<sp/>expression<sp/>following<sp/>the<sp/>&quot;check<sp/>unique<sp/>key&quot;<sp/>keyword<sp/>returns<sp/>the<sp/>value<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="2144"><highlight class="comment">checked<sp/>for<sp/>uniqueness.<sp/>The<sp/>result<sp/>of<sp/>this<sp/>path<sp/>expression<sp/>must<sp/>not<sp/>be<sp/>empty<sp/>and</highlight></codeline>
<codeline lineno="2145"><highlight class="comment">is<sp/>wrapped<sp/>to<sp/>return<sp/>an<sp/>atomic<sp/>value.<sp/>The<sp/>variable<sp/>$id<sp/>is<sp/>successively<sp/>bound<sp/>to</highlight></codeline>
<codeline lineno="2146"><highlight class="comment">each<sp/>node<sp/>of<sp/>the<sp/>news-data:employees<sp/>collection<sp/>and<sp/>available<sp/>in<sp/>the<sp/>check</highlight></codeline>
<codeline lineno="2147"><highlight class="comment">expression.</highlight></codeline>
<codeline lineno="2148"><highlight class="comment"></highlight></codeline>
<codeline lineno="2149"><highlight class="comment">&lt;a<sp/>name=&quot;ic_domain_integrity&quot;<sp/>id=&quot;ic_domain_integrity&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="2150"><highlight class="comment">\subsubsection<sp/>ic_domain_integrity<sp/>Domain<sp/>Integrity</highlight></codeline>
<codeline lineno="2151"><highlight class="comment">The<sp/>Domain<sp/>IC<sp/>allows<sp/>the<sp/>user<sp/>to<sp/>specify<sp/>constraints<sp/>that<sp/>a<sp/>particular<sp/>node<sp/>in</highlight></codeline>
<codeline lineno="2152"><highlight class="comment">a<sp/>collection<sp/>must<sp/>satisfy.<sp/>Domain<sp/>ICs<sp/>can<sp/>be<sp/>use<sp/>in<sp/>addition<sp/>to<sp/>XML<sp/>Schema<sp/>types</highlight></codeline>
<codeline lineno="2153"><highlight class="comment">or<sp/>if<sp/>no<sp/>XML<sp/>schema<sp/>is<sp/>available.</highlight></codeline>
<codeline lineno="2154"><highlight class="comment"></highlight></codeline>
<codeline lineno="2155"><highlight class="comment">With<sp/>the<sp/>following<sp/>example,<sp/>we<sp/>want<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>name<sp/>of<sp/>each<sp/>author</highlight></codeline>
<codeline lineno="2156"><highlight class="comment">of<sp/>an<sp/>article<sp/>is<sp/>not<sp/>the<sp/>zero<sp/>length<sp/>string.<sp/>This<sp/>can<sp/>be<sp/>particularly<sp/>useful</highlight></codeline>
<codeline lineno="2157"><highlight class="comment">since<sp/>there<sp/>is<sp/>no<sp/>XML<sp/>schema<sp/>for<sp/>articles.</highlight></codeline>
<codeline lineno="2158"><highlight class="comment"></highlight></codeline>
<codeline lineno="2159"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="2160"><highlight class="comment"><sp/><sp/>declare<sp/>integrity<sp/>constraint<sp/>news-data:AuthorNames</highlight></codeline>
<codeline lineno="2161"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>collection<sp/>news-data:article</highlight></codeline>
<codeline lineno="2162"><highlight class="comment"><sp/><sp/><sp/><sp/>foreach<sp/>node<sp/>$article<sp/>check<sp/>fn:string-length($article/author/name)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="2163"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="2164"><highlight class="comment"></highlight></codeline>
<codeline lineno="2165"><highlight class="comment">The<sp/>name<sp/>of<sp/>the<sp/>IC<sp/>is<sp/>news-data:AuthorNames<sp/>and<sp/>it<sp/>is<sp/>defined<sp/>on<sp/>nodes</highlight></codeline>
<codeline lineno="2166"><highlight class="comment">belonging<sp/>to<sp/>the<sp/>news-data:articles<sp/>collection.<sp/>The<sp/>&quot;foreach<sp/>node&quot;<sp/>expression</highlight></codeline>
<codeline lineno="2167"><highlight class="comment">specifies<sp/>a<sp/>variable<sp/>(using<sp/>a<sp/>QName)<sp/>which<sp/>is<sp/>bound<sp/>to<sp/>each<sp/>node<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="2168"><highlight class="comment">collection.<sp/>For<sp/>each<sp/>such<sp/>node,<sp/>the<sp/>check<sp/>expression<sp/>is<sp/>executed.<sp/>For<sp/>each<sp/>node,</highlight></codeline>
<codeline lineno="2169"><highlight class="comment">the<sp/>boolean<sp/>effective<sp/>value<sp/>of<sp/>the<sp/>result<sp/>of<sp/>this<sp/>expression<sp/>must<sp/>be<sp/>equal<sp/>to</highlight></codeline>
<codeline lineno="2170"><highlight class="comment">true.</highlight></codeline>
<codeline lineno="2171"><highlight class="comment"></highlight></codeline>
<codeline lineno="2172"><highlight class="comment">&lt;a<sp/>name=&quot;ic_referential_integrity&quot;<sp/>id=&quot;ic_referential_integrity&quot;&gt;&lt;/a&gt;</highlight></codeline>
<codeline lineno="2173"><highlight class="comment">\subsubsection<sp/>ic_referential_integrity<sp/>Referential<sp/>Integrity</highlight></codeline>
<codeline lineno="2174"><highlight class="comment"></highlight></codeline>
<codeline lineno="2175"><highlight class="comment">\n<sp/>The<sp/>Referential<sp/>IC<sp/>requires<sp/>every<sp/>value<sp/>of<sp/>a<sp/>node<sp/>in<sp/>a<sp/>collection<sp/>to<sp/>exist<sp/>as</highlight></codeline>
<codeline lineno="2176"><highlight class="comment">a<sp/>value<sp/>of<sp/>another<sp/>node<sp/>in<sp/>another<sp/>collection.<sp/>For<sp/>example,<sp/>in<sp/>the<sp/>database<sp/>of</highlight></codeline>
<codeline lineno="2177"><highlight class="comment">the<sp/>news<sp/>organization,<sp/>we<sp/>want<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>each<sp/>article<sp/>is<sp/>maintained<sp/>by</highlight></codeline>
<codeline lineno="2178"><highlight class="comment">an<sp/>(existing)<sp/>employee.<sp/>This<sp/>can<sp/>be<sp/>done<sp/>by<sp/>declaring<sp/>a<sp/>so<sp/>called<sp/>foreign<sp/>key</highlight></codeline>
<codeline lineno="2179"><highlight class="comment">IC.<sp/>In<sp/>the<sp/>following<sp/>example,<sp/>this<sp/>IC<sp/>is<sp/>given<sp/>the<sp/>name</highlight></codeline>
<codeline lineno="2180"><highlight class="comment">news-data:ArticleEmployees.</highlight></codeline>
<codeline lineno="2181"><highlight class="comment"></highlight></codeline>
<codeline lineno="2182"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="2183"><highlight class="comment"><sp/><sp/>declare<sp/>integrity<sp/>constraint<sp/>news-data:ArticleEmployees</highlight></codeline>
<codeline lineno="2184"><highlight class="comment"><sp/><sp/><sp/><sp/>foreign<sp/>key</highlight></codeline>
<codeline lineno="2185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>collection<sp/>news-data:articles<sp/>node<sp/>$x<sp/>key<sp/>$x/empid</highlight></codeline>
<codeline lineno="2186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/><sp/><sp/>collection<sp/>news-data:employees<sp/>node<sp/>$y<sp/>key<sp/>fn:data($y/@id);</highlight></codeline>
<codeline lineno="2187"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="2188"><highlight class="comment"></highlight></codeline>
<codeline lineno="2189"><highlight class="comment">The<sp/>QName<sp/>following<sp/>the<sp/>&quot;from<sp/>collection&quot;<sp/>and<sp/>&quot;to<sp/>collection&quot;<sp/>keywords<sp/>specify</highlight></codeline>
<codeline lineno="2190"><highlight class="comment">the<sp/>source<sp/>and<sp/>destination<sp/>collections,<sp/>respectively.<sp/>Each<sp/>result<sp/>of<sp/>the<sp/>key</highlight></codeline>
<codeline lineno="2191"><highlight class="comment">expressions<sp/>are<sp/>wrapped<sp/>to<sp/>return<sp/>an<sp/>atomic<sp/>value.<sp/>For<sp/>each<sp/>atomic<sp/>value<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="2192"><highlight class="comment">source<sp/>collection,<sp/>an<sp/>atomic<sp/>value<sp/>in<sp/>the<sp/>sequence<sp/>returned<sp/>by<sp/>the<sp/>key</highlight></codeline>
<codeline lineno="2193"><highlight class="comment">expression<sp/>on<sp/>the<sp/>destination<sp/>collection<sp/>must<sp/>exist.<sp/>The<sp/>IC<sp/>is<sp/>violated<sp/>if<sp/>this</highlight></codeline>
<codeline lineno="2194"><highlight class="comment">is<sp/>not<sp/>the<sp/>case<sp/>for<sp/>any<sp/>node<sp/>in<sp/>the<sp/>source<sp/>collection.<sp/>This<sp/>semantics<sp/>is</highlight></codeline>
<codeline lineno="2195"><highlight class="comment">equivalent<sp/>to<sp/>the<sp/>following<sp/>XQuery<sp/>expression.</highlight></codeline>
<codeline lineno="2196"><highlight class="comment"></highlight></codeline>
<codeline lineno="2197"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="2198"><highlight class="comment"><sp/><sp/>every<sp/>$x<sp/>in<sp/>idml:collection(xs:QName(&quot;news-data:articles&quot;))</highlight></codeline>
<codeline lineno="2199"><highlight class="comment"><sp/><sp/>satisfies</highlight></codeline>
<codeline lineno="2200"><highlight class="comment"><sp/><sp/><sp/><sp/>some<sp/>$y<sp/>in<sp/>idml:collection(xs:QName(&quot;news-data:employees&quot;))</highlight></codeline>
<codeline lineno="2201"><highlight class="comment"><sp/><sp/><sp/><sp/>satisfies<sp/>$y/id<sp/>eq<sp/>$x//sale/empid</highlight></codeline>
<codeline lineno="2202"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="2203"><highlight class="comment"></highlight></codeline>
<codeline lineno="2204"><highlight class="comment">\subsection<sp/>ic_life_cycle<sp/>Lifecycle<sp/>Management</highlight></codeline>
<codeline lineno="2205"><highlight class="comment"></highlight></codeline>
<codeline lineno="2206"><highlight class="comment">\n<sp/>ICs<sp/>can<sp/>be<sp/>checked<sp/>manually<sp/>(if<sp/>requested<sp/>by<sp/>the<sp/>user)<sp/>or<sp/>automatically<sp/>on</highlight></codeline>
<codeline lineno="2207"><highlight class="comment">updates</highlight></codeline>
<codeline lineno="2208"><highlight class="comment">apply<sp/>time,<sp/>after<sp/>validation<sp/>and<sp/>indexes<sp/>are<sp/>computed.<sp/>In<sp/>order<sp/>to<sp/>be<sp/>checked</highlight></codeline>
<codeline lineno="2209"><highlight class="comment">automatically,<sp/>an<sp/>IC<sp/>needs<sp/>to<sp/>be<sp/>active.<sp/>ICs<sp/>can<sp/>be<sp/>(de-)activated<sp/>using<sp/>the<sp/>two</highlight></codeline>
<codeline lineno="2210"><highlight class="comment">updating<sp/>functions<sp/>icddl:activate<sp/>and</highlight></codeline>
<codeline lineno="2211"><highlight class="comment">icddl:deactivate,<sp/>respectively.<sp/>Each<sp/>function<sp/>takes<sp/>the</highlight></codeline>
<codeline lineno="2212"><highlight class="comment">name<sp/>of</highlight></codeline>
<codeline lineno="2213"><highlight class="comment">the<sp/>IC<sp/>to<sp/>(de-)activate<sp/>as<sp/>parameter.<sp/>The<sp/>flag<sp/>indicating<sp/>whether<sp/>an<sp/>IC<sp/>is</highlight></codeline>
<codeline lineno="2214"><highlight class="comment">active<sp/>or</highlight></codeline>
<codeline lineno="2215"><highlight class="comment">not<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>dynamic<sp/>context.</highlight></codeline>
<codeline lineno="2216"><highlight class="comment"></highlight></codeline>
<codeline lineno="2217"><highlight class="comment">\n<sp/>\n<sp/>Deactivating<sp/>an<sp/>IC<sp/>might<sp/>be<sp/>useful<sp/>if<sp/>the<sp/>corresponding<sp/>check<sp/>is<sp/>expensive<sp/>and,</highlight></codeline>
<codeline lineno="2218"><highlight class="comment">hence,<sp/>inconsistency<sp/>of<sp/>the<sp/>data<sp/>might<sp/>be<sp/>acceptable<sp/>and<sp/>only<sp/>checked<sp/>(and<sp/>fixed</highlight></codeline>
<codeline lineno="2219"><highlight class="comment">manually)<sp/>from<sp/>time<sp/>to<sp/>time.<sp/>To<sp/>check<sp/>an<sp/>IC<sp/>manually,<sp/>the<sp/>Zorba<sp/>defines<sp/>an</highlight></codeline>
<codeline lineno="2220"><highlight class="comment">updating</highlight></codeline>
<codeline lineno="2221"><highlight class="comment">function<sp/>called<sp/>check-integrity-constraint<sp/>which<sp/>triggers<sp/>the<sp/>IC,<sp/>identified<sp/>by</highlight></codeline>
<codeline lineno="2222"><highlight class="comment">a</highlight></codeline>
<codeline lineno="2223"><highlight class="comment">QName<sp/>passed<sp/>as<sp/>parameter,<sp/>to<sp/>be<sp/>checked.</highlight></codeline>
<codeline lineno="2224"><highlight class="comment"></highlight></codeline>
<codeline lineno="2225"><highlight class="comment">\n<sp/>\n<sp/>Similar<sp/>to<sp/>collections<sp/>and<sp/>indexes,<sp/>the<sp/>module<sp/>declaring<sp/>the<sp/>integrity</highlight></codeline>
<codeline lineno="2226"><highlight class="comment">constraints</highlight></codeline>
<codeline lineno="2227"><highlight class="comment">(i.e.<sp/>with<sp/>namespace<sp/>%http://www.news.org/data)<sp/>can<sp/>also<sp/>declare<sp/>variables<sp/>whose</highlight></codeline>
<codeline lineno="2228"><highlight class="comment">values<sp/>are<sp/>the<sp/>QNames<sp/>of<sp/>the<sp/>ICs.<sp/>This<sp/>allows<sp/>their<sp/>names<sp/>to<sp/>be<sp/>easily</highlight></codeline>
<codeline lineno="2229"><highlight class="comment">referenced<sp/>by</highlight></codeline>
<codeline lineno="2230"><highlight class="comment">subsequent<sp/>expressions.<sp/>For<sp/>example,<sp/>such<sp/>a<sp/>variable<sp/>can<sp/>be<sp/>passed<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="2231"><highlight class="comment">parameter<sp/>to</highlight></codeline>
<codeline lineno="2232"><highlight class="comment">the<sp/>activate<sp/>in<sp/>the<sp/>importing<sp/>admin-script<sp/>module<sp/>(see</highlight></codeline>
<codeline lineno="2233"><highlight class="comment">above).</highlight></codeline>
<codeline lineno="2234"><highlight class="comment">For<sp/>the<sp/>ICs<sp/>from<sp/>the<sp/>section<sp/>above,<sp/>those<sp/>variables<sp/>are<sp/>declared<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="2235"><highlight class="comment"></highlight></codeline>
<codeline lineno="2236"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="2237"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:UniqueId<sp/>:=<sp/>xs:QName(&quot;news-data:UniqueId&quot;);</highlight></codeline>
<codeline lineno="2238"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:AuthorName<sp/>:=<sp/>xs:QName(&quot;news-data:AuthorNames&quot;);</highlight></codeline>
<codeline lineno="2239"><highlight class="comment"><sp/><sp/>declare<sp/>variable<sp/>$news-data:ArticleEmployees<sp/>:=<sp/>xs:QName(&quot;news-data:ArticleEmployees&quot;);</highlight></codeline>
<codeline lineno="2240"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="2241"><highlight class="comment"></highlight></codeline>
<codeline lineno="2242"><highlight class="comment"></highlight></codeline>
<codeline lineno="2243"><highlight class="comment">\section<sp/>extensions_xquf_updates_routines<sp/>Extensions<sp/>to<sp/>the<sp/>XQUF<sp/>updates</highlight></codeline>
<codeline lineno="2244"><highlight class="comment">routines</highlight></codeline>
<codeline lineno="2245"><highlight class="comment"></highlight></codeline>
<codeline lineno="2246"><highlight class="comment">\subsection<sp/>upd_merge_updates<sp/>upd:mergeUpdates</highlight></codeline>
<codeline lineno="2247"><highlight class="comment"></highlight></codeline>
<codeline lineno="2248"><highlight class="comment">\n<sp/>The<sp/>XQuery<sp/>Update<sp/>Facility<sp/>specification<sp/>lists<sp/>a<sp/>number<sp/>of<sp/>errors<sp/>that<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="2249"><highlight class="comment">raised</highlight></codeline>
<codeline lineno="2250"><highlight class="comment">by<sp/>the<sp/>upd:mergeUpdates<sp/>routine.<sp/>Zorba<sp/>adds<sp/>the<sp/>following<sp/>error<sp/>conditions<sp/>to</highlight></codeline>
<codeline lineno="2251"><highlight class="comment">this<sp/>list:</highlight></codeline>
<codeline lineno="2252"><highlight class="comment"></highlight></codeline>
<codeline lineno="2253"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="2254"><highlight class="comment">&lt;li&gt;An<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0016&quot;</highlight></codeline>
<codeline lineno="2255"><highlight class="comment">title=&quot;zerr:ZDDY0016&quot;&gt;zerr:ZDDY0016&lt;/a&gt;]</highlight></codeline>
<codeline lineno="2256"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>two<sp/>or<sp/>more<sp/>upd:createCollection<sp/>primitives<sp/>having<sp/>the<sp/>same<sp/>QName<sp/>as</highlight></codeline>
<codeline lineno="2257"><highlight class="comment">argument<sp/>appear<sp/>in<sp/>the<sp/>merged<sp/>list.&lt;/li&gt;</highlight></codeline>
<codeline lineno="2258"><highlight class="comment">&lt;li&gt;An<sp/>error<sp/>is<sp/>raised<sp/>[&lt;a<sp/>href=&quot;#ERRZDDY0027&quot;</highlight></codeline>
<codeline lineno="2259"><highlight class="comment">title=&quot;zerr:ZDDY0027&quot;&gt;zerr:ZDDY0027&lt;/a&gt;]</highlight></codeline>
<codeline lineno="2260"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>two<sp/>or<sp/>more<sp/>upd:createIndex<sp/>primitives<sp/>having<sp/>the<sp/>same<sp/>QName<sp/>as<sp/>argument</highlight></codeline>
<codeline lineno="2261"><highlight class="comment">appear<sp/>in<sp/>the<sp/>merged<sp/>list.&lt;/li&gt;</highlight></codeline>
<codeline lineno="2262"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="2263"><highlight class="comment"></highlight></codeline>
<codeline lineno="2264"><highlight class="comment"></highlight></codeline>
<codeline lineno="2265"><highlight class="comment">\subsection<sp/>upr_apply_updates<sp/>upd:applyUpdates</highlight></codeline>
<codeline lineno="2266"><highlight class="comment"></highlight></codeline>
<codeline lineno="2267"><highlight class="comment"></highlight></codeline>
<codeline lineno="2268"><highlight class="comment">\section<sp/>error_summary<sp/>Appendix<sp/>Error<sp/>Summary</highlight></codeline>
<codeline lineno="2269"><highlight class="comment"></highlight></codeline>
<codeline lineno="2270"><highlight class="comment">The<sp/>prefix<sp/>&quot;zerr&quot;<sp/>is<sp/>bound<sp/>to<sp/>the<sp/>error<sp/>namespace<sp/>of<sp/>Zorba,<sp/>i.e.<sp/>%http://zorba.io/errors<sp/>.</highlight></codeline>
<codeline lineno="2271"><highlight class="comment">The<sp/>prefix<sp/>&quot;err&quot;<sp/>is<sp/>bound<sp/>to<sp/>the<sp/>general<sp/>XQuery<sp/>error<sp/>namespace,<sp/>i.e.<sp/>http://www.w3.org/2005/xqt-errors<sp/>.</highlight></codeline>
<codeline lineno="2272"><highlight class="comment"></highlight></codeline>
<codeline lineno="2273"><highlight class="comment">&lt;p&gt;XQuery<sp/>Data<sp/>Definition<sp/>Facility<sp/>-<sp/>Static<sp/>Errors:&lt;/p&gt;</highlight></codeline>
<codeline lineno="2274"><highlight class="comment"></highlight></codeline>
<codeline lineno="2275"><highlight class="comment">&lt;strong&gt;</highlight></codeline>
<codeline lineno="2276"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0001&quot;<sp/>id=&quot;ERRZDST0001&quot;&gt;&lt;/a&gt;zerr:ZDST0001,<sp/>A<sp/>collection<sp/>with</highlight></codeline>
<codeline lineno="2277"><highlight class="comment">name<sp/>is<sp/>already<sp/>declared<sp/>in<sp/>the<sp/>same<sp/>module.</highlight></codeline>
<codeline lineno="2278"><highlight class="comment"></highlight></codeline>
<codeline lineno="2279"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0002&quot;<sp/>id=&quot;ERRZDST0002&quot;&gt;&lt;/a&gt;zerr:ZDST0002,<sp/>A<sp/>collection<sp/>with</highlight></codeline>
<codeline lineno="2280"><highlight class="comment">name<sp/>that<sp/>is<sp/>imported<sp/>from<sp/>module<sp/>is<sp/>already<sp/>declared<sp/>in<sp/>the<sp/>importing<sp/>module.</highlight></codeline>
<codeline lineno="2281"><highlight class="comment"></highlight></codeline>
<codeline lineno="2282"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0003&quot;<sp/>id=&quot;ERRZDST0003&quot;&gt;&lt;/a&gt;zerr:ZDST0003,<sp/>A<sp/>collection</highlight></codeline>
<codeline lineno="2283"><highlight class="comment">declaration<sp/>cannot<sp/>appear<sp/>in<sp/>a<sp/>main<sp/>module.</highlight></codeline>
<codeline lineno="2284"><highlight class="comment"></highlight></codeline>
<codeline lineno="2285"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0004&quot;<sp/>id=&quot;ERRZDST0004&quot;&gt;&lt;/a&gt;zerr:ZDST0004,<sp/>The<sp/>declaration<sp/>for</highlight></codeline>
<codeline lineno="2286"><highlight class="comment">collection<sp/>specifies<sp/>multiple<sp/>values<sp/>for<sp/>the<sp/>same<sp/>property.</highlight></codeline>
<codeline lineno="2287"><highlight class="comment"></highlight></codeline>
<codeline lineno="2288"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0005&quot;<sp/>id=&quot;ERRZDST0005&quot;&gt;&lt;/a&gt;zerr:ZDST0005,<sp/>The<sp/>declaration<sp/>for</highlight></codeline>
<codeline lineno="2289"><highlight class="comment">collection<sp/>specifies<sp/>conflicting<sp/>property<sp/>values.</highlight></codeline>
<codeline lineno="2290"><highlight class="comment"></highlight></codeline>
<codeline lineno="2291"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0006&quot;<sp/>id=&quot;ERRZDST0006&quot;&gt;&lt;/a&gt;zerr:ZDST0006,<sp/>The<sp/>declaration<sp/>for</highlight></codeline>
<codeline lineno="2292"><highlight class="comment">collection<sp/>contains<sp/>an<sp/>invalid<sp/>property<sp/>value.</highlight></codeline>
<codeline lineno="2293"><highlight class="comment"></highlight></codeline>
<codeline lineno="2294"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0021&quot;<sp/>id=&quot;ERRZDST0021&quot;&gt;&lt;/a&gt;zerr:ZDST0021,<sp/>An<sp/>index<sp/>with<sp/>name<sp/>is</highlight></codeline>
<codeline lineno="2295"><highlight class="comment">already<sp/>declared<sp/>in<sp/>the<sp/>same<sp/>module.</highlight></codeline>
<codeline lineno="2296"><highlight class="comment"></highlight></codeline>
<codeline lineno="2297"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0022&quot;<sp/>id=&quot;ERRZDST0022&quot;&gt;&lt;/a&gt;zerr:ZDST0022,<sp/>An<sp/>index<sp/>with<sp/>name</highlight></codeline>
<codeline lineno="2298"><highlight class="comment">that<sp/>is<sp/>imported<sp/>from<sp/>module<sp/>/s<sp/>is<sp/>already<sp/>declared<sp/>in<sp/>the<sp/>importing<sp/>module.</highlight></codeline>
<codeline lineno="2299"><highlight class="comment"></highlight></codeline>
<codeline lineno="2300"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0023&quot;<sp/>id=&quot;ERRZDST0023&quot;&gt;&lt;/a&gt;zerr:ZDST0023,<sp/>An<sp/>index<sp/>declaration</highlight></codeline>
<codeline lineno="2301"><highlight class="comment">cannot<sp/>appear<sp/>in<sp/>a<sp/>main<sp/>module.</highlight></codeline>
<codeline lineno="2302"><highlight class="comment"></highlight></codeline>
<codeline lineno="2303"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0024&quot;<sp/>id=&quot;ERRZDST0024&quot;&gt;&lt;/a&gt;zerr:ZDST0024,<sp/>The<sp/>declaration<sp/>for</highlight></codeline>
<codeline lineno="2304"><highlight class="comment">index<sp/>specifies<sp/>multiple<sp/>values<sp/>for<sp/>the<sp/>same<sp/>property.</highlight></codeline>
<codeline lineno="2305"><highlight class="comment"></highlight></codeline>
<codeline lineno="2306"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0025&quot;<sp/>id=&quot;ERRZDST0025&quot;&gt;&lt;/a&gt;zerr:ZDST0025,<sp/>The<sp/>index<sp/>cannot<sp/>be</highlight></codeline>
<codeline lineno="2307"><highlight class="comment">declared<sp/>as<sp/>unique.</highlight></codeline>
<codeline lineno="2308"><highlight class="comment"></highlight></codeline>
<codeline lineno="2309"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0026&quot;<sp/>id=&quot;ERRZDST0026&quot;&gt;&lt;/a&gt;zerr:ZDST0026,<sp/>The<sp/>declaration<sp/>for</highlight></codeline>
<codeline lineno="2310"><highlight class="comment">index<sp/>contains<sp/>an<sp/>invalid<sp/>property<sp/>value.</highlight></codeline>
<codeline lineno="2311"><highlight class="comment"></highlight></codeline>
<codeline lineno="2312"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0027&quot;<sp/>id=&quot;ERRZDST0027&quot;&gt;&lt;/a&gt;zerr:ZDST0027,<sp/>The<sp/>index<sp/>has<sp/>an</highlight></codeline>
<codeline lineno="2313"><highlight class="comment">invalid<sp/>key<sp/>type<sp/>declaration.</highlight></codeline>
<codeline lineno="2314"><highlight class="comment"></highlight></codeline>
<codeline lineno="2315"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0028&quot;<sp/>id=&quot;ERRZDST0028&quot;&gt;&lt;/a&gt;zerr:ZDST0028,<sp/>The<sp/>index<sp/>has<sp/>a<sp/>non</highlight></codeline>
<codeline lineno="2316"><highlight class="comment">deterministic<sp/>definition.</highlight></codeline>
<codeline lineno="2317"><highlight class="comment"></highlight></codeline>
<codeline lineno="2318"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0029&quot;<sp/>id=&quot;ERRZDST0029&quot;&gt;&lt;/a&gt;zerr:ZDST0029,<sp/>The<sp/>index<sp/>references</highlight></codeline>
<codeline lineno="2319"><highlight class="comment">a<sp/>data<sp/>source<sp/>that<sp/>is<sp/>not<sp/>a<sp/>collection.</highlight></codeline>
<codeline lineno="2320"><highlight class="comment"></highlight></codeline>
<codeline lineno="2321"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0030&quot;<sp/>id=&quot;ERRZDST0030&quot;&gt;&lt;/a&gt;zerr:ZDST0030,<sp/>The<sp/>index<sp/>references</highlight></codeline>
<codeline lineno="2322"><highlight class="comment">a<sp/>collection<sp/>with<sp/>a<sp/>non-const<sp/>QName.</highlight></codeline>
<codeline lineno="2323"><highlight class="comment"></highlight></codeline>
<codeline lineno="2324"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0031&quot;<sp/>id=&quot;ERRZDST0031&quot;&gt;&lt;/a&gt;zerr:ZDST0031,<sp/>The<sp/>index<sp/>has<sp/>free</highlight></codeline>
<codeline lineno="2325"><highlight class="comment">variables<sp/>in<sp/>its<sp/>definition.</highlight></codeline>
<codeline lineno="2326"><highlight class="comment"></highlight></codeline>
<codeline lineno="2327"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0032&quot;<sp/>id=&quot;ERRZDST0032&quot;&gt;&lt;/a&gt;zerr:ZDST0032,<sp/>The<sp/>domain<sp/>expression</highlight></codeline>
<codeline lineno="2328"><highlight class="comment">of<sp/>index<sp/>references<sp/>the<sp/>context<sp/>item.</highlight></codeline>
<codeline lineno="2329"><highlight class="comment"></highlight></codeline>
<codeline lineno="2330"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0033&quot;<sp/>id=&quot;ERRZDST0033&quot;&gt;&lt;/a&gt;zerr:ZDST0033,<sp/>The<sp/>declaration<sp/>of</highlight></codeline>
<codeline lineno="2331"><highlight class="comment">index<sp/>contains<sp/>a<sp/>non-simple<sp/>expression.</highlight></codeline>
<codeline lineno="2332"><highlight class="comment"></highlight></codeline>
<codeline lineno="2333"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0034&quot;<sp/>id=&quot;ERRZDST0034&quot;&gt;&lt;/a&gt;zerr:ZDST0034,<sp/>Index<sp/>cannot<sp/>be</highlight></codeline>
<codeline lineno="2334"><highlight class="comment">automatically<sp/>maintained.</highlight></codeline>
<codeline lineno="2335"><highlight class="comment"></highlight></codeline>
<codeline lineno="2336"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0036&quot;<sp/>id=&quot;ERRZDST0036&quot;&gt;&lt;/a&gt;zerr:ZDST0036,<sp/>Index<sp/>qname<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="2337"><highlight class="comment">have<sp/>the<sp/>same<sp/>namespace<sp/>URI<sp/>as<sp/>the<sp/>target<sp/>namespace<sp/>of<sp/>the<sp/>declaring<sp/>module.</highlight></codeline>
<codeline lineno="2338"><highlight class="comment"></highlight></codeline>
<codeline lineno="2339"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0041&quot;<sp/>id=&quot;ERRZDST0041&quot;&gt;&lt;/a&gt;zerr:ZDST0041,<sp/>An<sp/>integrity</highlight></codeline>
<codeline lineno="2340"><highlight class="comment">constraint<sp/>with<sp/>URI<sp/>is<sp/>declared<sp/>already.</highlight></codeline>
<codeline lineno="2341"><highlight class="comment"></highlight></codeline>
<codeline lineno="2342"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0042&quot;<sp/>id=&quot;ERRZDST0042&quot;&gt;&lt;/a&gt;zerr:ZDST0042,<sp/>An<sp/>integrity</highlight></codeline>
<codeline lineno="2343"><highlight class="comment">constraint<sp/>key<sp/>has<sp/>multiple<sp/>values.</highlight></codeline>
<codeline lineno="2344"><highlight class="comment"></highlight></codeline>
<codeline lineno="2345"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0043&quot;<sp/>id=&quot;ERRZDST0043&quot;&gt;&lt;/a&gt;zerr:ZDST0043,<sp/>An<sp/>integrity</highlight></codeline>
<codeline lineno="2346"><highlight class="comment">constraint<sp/>key<sp/>has<sp/>a<sp/>non-atomic<sp/>value.</highlight></codeline>
<codeline lineno="2347"><highlight class="comment"></highlight></codeline>
<codeline lineno="2348"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0045&quot;<sp/>id=&quot;ERRZDST0045&quot;&gt;&lt;/a&gt;zerr:ZDST0045,<sp/>The<sp/>integrity</highlight></codeline>
<codeline lineno="2349"><highlight class="comment">constraint<sp/>cannot<sp/>be<sp/>declared<sp/>in<sp/>a<sp/>main<sp/>module.</highlight></codeline>
<codeline lineno="2350"><highlight class="comment"></highlight></codeline>
<codeline lineno="2351"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0046&quot;<sp/>id=&quot;ERRZDST0046&quot;&gt;&lt;/a&gt;zerr:ZDST0046,<sp/>The<sp/>integrity</highlight></codeline>
<codeline lineno="2352"><highlight class="comment">constraint<sp/>with<sp/>URI<sp/>has<sp/>free<sp/>variables<sp/>in<sp/>its<sp/>definition.</highlight></codeline>
<codeline lineno="2353"><highlight class="comment"></highlight></codeline>
<codeline lineno="2354"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0047&quot;<sp/>id=&quot;ERRZDST0047&quot;&gt;&lt;/a&gt;zerr:ZDST0047,<sp/>The<sp/>integrity</highlight></codeline>
<codeline lineno="2355"><highlight class="comment">constraint<sp/>with<sp/>URI<sp/>references<sp/>a<sp/>data<sp/>source<sp/>that<sp/>is<sp/>not<sp/>a<sp/>collection<sp/>among<sp/>the</highlight></codeline>
<codeline lineno="2356"><highlight class="comment">statically<sp/>known<sp/>collections.</highlight></codeline>
<codeline lineno="2357"><highlight class="comment"></highlight></codeline>
<codeline lineno="2358"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDST0048&quot;<sp/>id=&quot;ERRZDST0048&quot;&gt;&lt;/a&gt;zerr:ZDST0048,The<sp/>integrity</highlight></codeline>
<codeline lineno="2359"><highlight class="comment">constraint<sp/>with<sp/>URI<sp/>has<sp/>a<sp/>non<sp/>deterministic<sp/>definition.</highlight></codeline>
<codeline lineno="2360"><highlight class="comment">&lt;/strong&gt;</highlight></codeline>
<codeline lineno="2361"><highlight class="comment"></highlight></codeline>
<codeline lineno="2362"><highlight class="comment">&lt;p&gt;XQuery<sp/>Data<sp/>Definition<sp/>Facility<sp/>-<sp/>Type<sp/>Errors:&lt;/p&gt;</highlight></codeline>
<codeline lineno="2363"><highlight class="comment"></highlight></codeline>
<codeline lineno="2364"><highlight class="comment">&lt;strong&gt;</highlight></codeline>
<codeline lineno="2365"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRXDTY0001&quot;<sp/>id=&quot;ERRXDTY0001&quot;&gt;&lt;/a&gt;zerr:XDTY0001,<sp/>Collection<sp/>cannot</highlight></codeline>
<codeline lineno="2366"><highlight class="comment">contain<sp/>a<sp/>node<sp/>of<sp/>certain<sp/>type.</highlight></codeline>
<codeline lineno="2367"><highlight class="comment"></highlight></codeline>
<codeline lineno="2368"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRXDTY0010&quot;<sp/>id=&quot;ERRXDTY0010&quot;&gt;&lt;/a&gt;zerr:XDTY0010,<sp/>The<sp/>domain<sp/>expression</highlight></codeline>
<codeline lineno="2369"><highlight class="comment">of<sp/>index<sp/>produces<sp/>an<sp/>item<sp/>that<sp/>is<sp/>not<sp/>a<sp/>node.</highlight></codeline>
<codeline lineno="2370"><highlight class="comment"></highlight></codeline>
<codeline lineno="2371"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRXDTY0011&quot;<sp/>id=&quot;ERRXDTY0011&quot;&gt;&lt;/a&gt;zerr:XDTY0011,<sp/>The<sp/>result<sp/>of<sp/>some</highlight></codeline>
<codeline lineno="2372"><highlight class="comment">key<sp/>expression<sp/>of<sp/>index<sp/>does<sp/>not<sp/>match<sp/>its<sp/>declared<sp/>type.</highlight></codeline>
<codeline lineno="2373"><highlight class="comment">&lt;/strong&gt;</highlight></codeline>
<codeline lineno="2374"><highlight class="comment"></highlight></codeline>
<codeline lineno="2375"><highlight class="comment">&lt;p&gt;XQuery<sp/>Data<sp/>Definition<sp/>Facility<sp/>-<sp/>Dynamic<sp/>Errors:&lt;/p&gt;</highlight></codeline>
<codeline lineno="2376"><highlight class="comment"></highlight></codeline>
<codeline lineno="2377"><highlight class="comment">&lt;strong&gt;</highlight></codeline>
<codeline lineno="2378"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0001&quot;<sp/>id=&quot;ERRZDDY0001&quot;&gt;&lt;/a&gt;zerr:ZDDY0001,<sp/>Collection<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="2379"><highlight class="comment">declared<sp/>in<sp/>the<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="2380"><highlight class="comment"></highlight></codeline>
<codeline lineno="2381"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0002&quot;<sp/>id=&quot;ERRZDDY0002&quot;&gt;&lt;/a&gt;zerr:ZDDY0002,<sp/>Collection<sp/>exists</highlight></codeline>
<codeline lineno="2382"><highlight class="comment">already.</highlight></codeline>
<codeline lineno="2383"><highlight class="comment"></highlight></codeline>
<codeline lineno="2384"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0003&quot;<sp/>id=&quot;ERRZDDY0003&quot;&gt;&lt;/a&gt;zerr:ZDDY0003,<sp/>Collection<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="2385"><highlight class="comment">exist.</highlight></codeline>
<codeline lineno="2386"><highlight class="comment"></highlight></codeline>
<codeline lineno="2387"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0004&quot;<sp/>id=&quot;ERRZDDY0004&quot;&gt;&lt;/a&gt;zerr:ZDDY0004,<sp/>Cannot<sp/>update<sp/>const</highlight></codeline>
<codeline lineno="2388"><highlight class="comment">collection.</highlight></codeline>
<codeline lineno="2389"><highlight class="comment"></highlight></codeline>
<codeline lineno="2390"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0005&quot;<sp/>id=&quot;ERRZDDY0005&quot;&gt;&lt;/a&gt;zerr:ZDDY0005,<sp/>Illegal<sp/>insert<sp/>in</highlight></codeline>
<codeline lineno="2391"><highlight class="comment">append-only<sp/>collection.</highlight></codeline>
<codeline lineno="2392"><highlight class="comment"></highlight></codeline>
<codeline lineno="2393"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0006&quot;<sp/>id=&quot;ERRZDDY0006&quot;&gt;&lt;/a&gt;zerr:ZDDY0006,<sp/>Illegal<sp/>insert<sp/>in</highlight></codeline>
<codeline lineno="2394"><highlight class="comment">queue<sp/>collection.</highlight></codeline>
<codeline lineno="2395"><highlight class="comment"></highlight></codeline>
<codeline lineno="2396"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0007&quot;<sp/>id=&quot;ERRZDDY0007&quot;&gt;&lt;/a&gt;zerr:ZDDY0007,<sp/>Illegal<sp/>delete<sp/>from</highlight></codeline>
<codeline lineno="2397"><highlight class="comment">append-only<sp/>collection.</highlight></codeline>
<codeline lineno="2398"><highlight class="comment"></highlight></codeline>
<codeline lineno="2399"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0008&quot;<sp/>id=&quot;ERRZDDY0008&quot;&gt;&lt;/a&gt;zerr:ZDDY0008,<sp/>Illegal<sp/>delete<sp/>from</highlight></codeline>
<codeline lineno="2400"><highlight class="comment">queue<sp/>collection.</highlight></codeline>
<codeline lineno="2401"><highlight class="comment"></highlight></codeline>
<codeline lineno="2402"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0009&quot;<sp/>id=&quot;ERRZDDY0009&quot;&gt;&lt;/a&gt;zerr:ZDDY0009,<sp/>Not<sp/>all<sp/>the<sp/>nodes<sp/>to</highlight></codeline>
<codeline lineno="2403"><highlight class="comment">delete<sp/>are<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>queue<sp/>collection.</highlight></codeline>
<codeline lineno="2404"><highlight class="comment"></highlight></codeline>
<codeline lineno="2405"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0010&quot;<sp/>id=&quot;ERRZDDY0010&quot;&gt;&lt;/a&gt;zerr:ZDDY0010,<sp/>Illegal<sp/>update<sp/>of</highlight></codeline>
<codeline lineno="2406"><highlight class="comment">node<sp/>in<sp/>collection,<sp/>whose<sp/>nodes<sp/>are<sp/>read-only.</highlight></codeline>
<codeline lineno="2407"><highlight class="comment"></highlight></codeline>
<codeline lineno="2408"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0011&quot;<sp/>id=&quot;ERRZDDY0011&quot;&gt;&lt;/a&gt;zerr:ZDDY0011,<sp/>Node<sp/>is<sp/>not<sp/>contained</highlight></codeline>
<codeline lineno="2409"><highlight class="comment">in<sp/>collection.</highlight></codeline>
<codeline lineno="2410"><highlight class="comment"></highlight></codeline>
<codeline lineno="2411"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0012&quot;<sp/>id=&quot;ERRZDDY0012&quot;&gt;&lt;/a&gt;zerr:ZDDY0012,<sp/>Illegal<sp/>insert<sp/>in</highlight></codeline>
<codeline lineno="2412"><highlight class="comment">unordered<sp/>collection.</highlight></codeline>
<codeline lineno="2413"><highlight class="comment"></highlight></codeline>
<codeline lineno="2414"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0013&quot;<sp/>id=&quot;ERRZDDY0013&quot;&gt;&lt;/a&gt;zerr:ZDDY0013,<sp/>Cannot<sp/>delete</highlight></codeline>
<codeline lineno="2415"><highlight class="comment">collection<sp/>because<sp/>there<sp/>are<sp/>indexes<sp/>that<sp/>reference<sp/>it.</highlight></codeline>
<codeline lineno="2416"><highlight class="comment"></highlight></codeline>
<codeline lineno="2417"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0014&quot;<sp/>id=&quot;ERRZDDY0014&quot;&gt;&lt;/a&gt;zerr:ZDDY0014,<sp/>Cannot<sp/>delete</highlight></codeline>
<codeline lineno="2418"><highlight class="comment">collection<sp/>because<sp/>there<sp/>are<sp/>integrity<sp/>constraints<sp/>that<sp/>reference<sp/>it.</highlight></codeline>
<codeline lineno="2419"><highlight class="comment"></highlight></codeline>
<codeline lineno="2420"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0015&quot;<sp/>id=&quot;ERRZDDY0015&quot;&gt;&lt;/a&gt;zerr:ZDDY0015,<sp/>Cannot<sp/>delete</highlight></codeline>
<codeline lineno="2421"><highlight class="comment">collection<sp/>because<sp/>there<sp/>are<sp/>references<sp/>on<sp/>its<sp/>nodes.</highlight></codeline>
<codeline lineno="2422"><highlight class="comment"></highlight></codeline>
<codeline lineno="2423"><highlight class="comment">&lt;a<sp/>name=&quot;ERRZDDY0016&quot;<sp/>id=&quot;ERRZDDY0016&quot;&gt;&lt;/a&gt;zerr:ZDDY0016,<sp/>Cannot<sp/>invoke<sp/>the</highlight></codeline>
<codeline lineno="2424"><highlight class="comment">create<sp/>function<sp/>multiple<sp/>times<sp/>with<sp/>the<sp/>same<sp/>QName<sp/>in<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="2425"><highlight class="comment">snapshot.</highlight></codeline>
<codeline lineno="2426"><highlight class="comment"></highlight></codeline>
<codeline lineno="2427"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0020&quot;<sp/>id=&quot;ERRZDDY0020&quot;&gt;&lt;/a&gt;zerr:ZDDY0020,<sp/>The<sp/>domain<sp/>expression</highlight></codeline>
<codeline lineno="2428"><highlight class="comment">of<sp/>index<sp/>produces<sp/>nodes<sp/>that<sp/>are<sp/>not<sp/>in<sp/>collection.</highlight></codeline>
<codeline lineno="2429"><highlight class="comment"></highlight></codeline>
<codeline lineno="2430"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0021&quot;<sp/>id=&quot;ERRZDDY0021&quot;&gt;&lt;/a&gt;zerr:ZDDY0021,<sp/>Index<sp/>is<sp/>not<sp/>declared</highlight></codeline>
<codeline lineno="2431"><highlight class="comment">in<sp/>the<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="2432"><highlight class="comment"></highlight></codeline>
<codeline lineno="2433"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0022&quot;<sp/>id=&quot;ERRZDDY0022&quot;&gt;&lt;/a&gt;zerr:ZDDY0022,<sp/>Index<sp/>exists<sp/>already.</highlight></codeline>
<codeline lineno="2434"><highlight class="comment"></highlight></codeline>
<codeline lineno="2435"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0023&quot;<sp/>id=&quot;ERRZDDY0023&quot;&gt;&lt;/a&gt;zerr:ZDDY0023,<sp/>Index<sp/>does<sp/>not<sp/>exist.</highlight></codeline>
<codeline lineno="2436"><highlight class="comment"></highlight></codeline>
<codeline lineno="2437"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0024&quot;<sp/>id=&quot;ERRZDDY0024&quot;&gt;&lt;/a&gt;zerr:ZDDY0024,<sp/>The<sp/>uniqueness</highlight></codeline>
<codeline lineno="2438"><highlight class="comment">property<sp/>of<sp/>index<sp/>is<sp/>violated.</highlight></codeline>
<codeline lineno="2439"><highlight class="comment"></highlight></codeline>
<codeline lineno="2440"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0025&quot;<sp/>id=&quot;ERRZDDY0025&quot;&gt;&lt;/a&gt;zerr:ZDDY0025,<sp/>Invalid<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="2441"><highlight class="comment">arguments<sp/>in<sp/>probe<sp/>of<sp/>index.</highlight></codeline>
<codeline lineno="2442"><highlight class="comment"></highlight></codeline>
<codeline lineno="2443"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0026&quot;<sp/>id=&quot;ERRZDDY0026&quot;&gt;&lt;/a&gt;zerr:ZDDY0026,<sp/>Index<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="2444"><highlight class="comment">support<sp/>range<sp/>probes.</highlight></codeline>
<codeline lineno="2445"><highlight class="comment"></highlight></codeline>
<codeline lineno="2446"><highlight class="comment">&lt;a<sp/>name=&quot;ERRZDDY0027&quot;<sp/>id=&quot;ERRZDDY0027&quot;&gt;&lt;/a&gt;zerr:ZDDY0027,<sp/>Cannot<sp/>invoke<sp/>the</highlight></codeline>
<codeline lineno="2447"><highlight class="comment">create<sp/>function<sp/>multiple<sp/>times<sp/>with<sp/>the<sp/>same<sp/>QName<sp/>in<sp/>the<sp/>same<sp/>snapshot.</highlight></codeline>
<codeline lineno="2448"><highlight class="comment"></highlight></codeline>
<codeline lineno="2449"><highlight class="comment">&lt;a<sp/>name=&quot;ERRZDDY0030&quot;<sp/>id=&quot;ERRZDDY0030&quot;&gt;&lt;/a&gt;zerr:ZDDY0030,<sp/>Index<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="2450"><highlight class="comment">support<sp/>general<sp/>range<sp/>probes.</highlight></codeline>
<codeline lineno="2451"><highlight class="comment"></highlight></codeline>
<codeline lineno="2452"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0031&quot;<sp/>id=&quot;ERRZDDY0031&quot;&gt;&lt;/a&gt;zerr:ZDDY0031,<sp/>An<sp/>integrity</highlight></codeline>
<codeline lineno="2453"><highlight class="comment">constraint<sp/>with<sp/>URI<sp/>is<sp/>not<sp/>declared.</highlight></codeline>
<codeline lineno="2454"><highlight class="comment"></highlight></codeline>
<codeline lineno="2455"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0032&quot;<sp/>id=&quot;ERRZDDY0032&quot;&gt;&lt;/a&gt;zerr:ZDDY0032,<sp/>An<sp/>integrity</highlight></codeline>
<codeline lineno="2456"><highlight class="comment">constraint<sp/>with<sp/>URI<sp/>is<sp/>not<sp/>declared.</highlight></codeline>
<codeline lineno="2457"><highlight class="comment"></highlight></codeline>
<codeline lineno="2458"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0033&quot;<sp/>id=&quot;ERRZDDY0033&quot;&gt;&lt;/a&gt;zerr:ZDDY0033,<sp/>Conditions<sp/>for</highlight></codeline>
<codeline lineno="2459"><highlight class="comment">integrity<sp/>constraint<sp/>were<sp/>not<sp/>met<sp/>on<sp/>collection.</highlight></codeline>
<codeline lineno="2460"><highlight class="comment"></highlight></codeline>
<codeline lineno="2461"><highlight class="comment">\n<sp/>&lt;a<sp/>name=&quot;ERRZDDY0034&quot;<sp/>id=&quot;ERRZDDY0034&quot;&gt;&lt;/a&gt;zerr:ZDDY0034,<sp/>Index<sp/>range-value</highlight></codeline>
<codeline lineno="2462"><highlight class="comment"><sp/>probe<sp/>has<sp/>search<sp/>keys<sp/>with<sp/>incompatible<sp/>types</highlight></codeline>
<codeline lineno="2463"><highlight class="comment">&lt;/strong&gt;</highlight></codeline>
<codeline lineno="2464"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/doc/zorba/xqddf.dox"/>
  </compounddef>
</doxygen>
