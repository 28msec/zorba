<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classzorba_1_1hexbinary_1_1exception" kind="class" prot="public">
    <compoundname>zorba::hexbinary::exception</compoundname>
    <includes refid="hexbinary__util_8h" local="no">zorba/util/hexbinary_util.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classzorba_1_1hexbinary_1_1exception_1af1c8d8eb66e9cc4d71bd3323542ac722" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char zorba::hexbinary::exception::char_</definition>
        <argsstring></argsstring>
        <name>char_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" line="68" bodyfile="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzorba_1_1hexbinary_1_1exception_1ad71b9bf8fe63cdb352587c0156485d56" prot="private" static="no" mutable="no">
        <type><ref refid="namespacezorba_1_1hexbinary_1affb801817b9c5a956787f17b4e79edad" kindref="member">size_type</ref></type>
        <definition>size_type zorba::hexbinary::exception::offset_</definition>
        <argsstring></argsstring>
        <name>offset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" line="69" bodyfile="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classzorba_1_1hexbinary_1_1exception_1abae51e6a9c1f9070b74820eda7c5988e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacezorba_1_1hexbinary_1affb801817b9c5a956787f17b4e79edad" kindref="member">size_type</ref></type>
        <definition>size_type zorba::hexbinary::exception::char_offset</definition>
        <argsstring>() const </argsstring>
        <name>char_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" line="63" bodyfile="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1hexbinary_1_1exception_1ac21b1f0abe46508e38a201b66f313e36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zorba::hexbinary::exception::exception</definition>
        <argsstring>(char c, size_type offset, std::string const &amp;msg)</argsstring>
        <name>exception</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespacezorba_1_1hexbinary_1affb801817b9c5a956787f17b4e79edad" kindref="member">size_type</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" line="57" bodyfile="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" bodystart="56" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1hexbinary_1_1exception_1a712a62004d4044b6dd8887c2f0efa275" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char zorba::hexbinary::exception::invalid_char</definition>
        <argsstring>() const </argsstring>
        <name>invalid_char</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" line="59" bodyfile="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" bodystart="59" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A hexbinary::exception is-an invalid_argument that contains additional details about the exception such as the invalid character and its offset. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" line="54" bodyfile="/home/wcandillon/deadlinks/include/zorba/util/hexbinary_util.h" bodystart="54" bodyend="70"/>
    <listofallmembers>
      <member refid="classzorba_1_1hexbinary_1_1exception_1af1c8d8eb66e9cc4d71bd3323542ac722" prot="private" virt="non-virtual"><scope>zorba::hexbinary::exception</scope><name>char_</name></member>
      <member refid="classzorba_1_1hexbinary_1_1exception_1abae51e6a9c1f9070b74820eda7c5988e" prot="public" virt="non-virtual"><scope>zorba::hexbinary::exception</scope><name>char_offset</name></member>
      <member refid="classzorba_1_1hexbinary_1_1exception_1ac21b1f0abe46508e38a201b66f313e36" prot="public" virt="non-virtual"><scope>zorba::hexbinary::exception</scope><name>exception</name></member>
      <member refid="classzorba_1_1hexbinary_1_1exception_1a712a62004d4044b6dd8887c2f0efa275" prot="public" virt="non-virtual"><scope>zorba::hexbinary::exception</scope><name>invalid_char</name></member>
      <member refid="classzorba_1_1hexbinary_1_1exception_1ad71b9bf8fe63cdb352587c0156485d56" prot="private" virt="non-virtual"><scope>zorba::hexbinary::exception</scope><name>offset_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
