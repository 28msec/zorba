<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="modules__authoring__2_8dox" kind="file">
    <compoundname>modules_authoring_2.dox</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**<sp/>\page<sp/>modules_authoring_2<sp/>Module<sp/>Authoring,<sp/>Continued</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">\section<sp/>mod_author_declare<sp/>Basics<sp/>of<sp/>DECLARE_ZORBA_MODULE()</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">This<sp/>simple<sp/>module<sp/>example<sp/>uses<sp/>two<sp/>of<sp/>the<sp/>arguments<sp/>to</highlight></codeline>
<codeline lineno="6"><highlight class="comment">&lt;tt&gt;DECLARE_ZORBA_MODULE()&lt;/tt&gt;,<sp/>namely<sp/>&lt;tt&gt;FILE&lt;/tt&gt;<sp/>and</highlight></codeline>
<codeline lineno="7"><highlight class="comment">&lt;tt&gt;URI&lt;/tt&gt;.<sp/><sp/>These<sp/>are<sp/>in<sp/>fact<sp/>the<sp/>only<sp/>required<sp/>arguments.<sp/>(By<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment">way,<sp/>all<sp/>arguments<sp/>may<sp/>appear<sp/>in<sp/>any<sp/>order.)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">The<sp/>&lt;tt&gt;FILE&lt;/tt&gt;<sp/>argument<sp/>takes<sp/>a<sp/>single<sp/>value,<sp/>which<sp/>is<sp/>the<sp/>path<sp/>to</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>&lt;tt&gt;.xq&lt;/tt&gt;<sp/>for<sp/>the<sp/>module.<sp/>If<sp/>this<sp/>is<sp/>a<sp/>relative<sp/>path,<sp/>it<sp/>will</highlight></codeline>
<codeline lineno="12"><highlight class="comment">be<sp/>resolved<sp/>relative<sp/>to<sp/>the<sp/>current<sp/>source<sp/>directory<sp/>(that<sp/>is,<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment">directory<sp/>containing<sp/>&lt;tt&gt;CMakeLists.txt&lt;/tt&gt;).<sp/>It<sp/>may<sp/>also<sp/>be<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment">absolute<sp/>path.<sp/>It<sp/>is<sp/>not<sp/>required<sp/>to<sp/>put<sp/>double-quotes<sp/>around<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment">value<sp/>unless<sp/>the<sp/>path<sp/>contains<sp/>space<sp/>characters<sp/>(this<sp/>is<sp/>true<sp/>of<sp/>all</highlight></codeline>
<codeline lineno="16"><highlight class="comment">CMake<sp/>values).<sp/>However,<sp/>if<sp/>your<sp/>path<sp/>includes<sp/>any<sp/>CMake<sp/>variable</highlight></codeline>
<codeline lineno="17"><highlight class="comment">references,<sp/>such<sp/>as<sp/>&lt;tt&gt;&quot;${CMAKE_CURRENT_SOURCE_DIR}/mymod.xq&quot;&lt;/tt&gt;,</highlight></codeline>
<codeline lineno="18"><highlight class="comment">then<sp/>it<sp/>is<sp/>good<sp/>practice<sp/>to<sp/>surround<sp/>the<sp/>value<sp/>with<sp/>double-quotes<sp/>in</highlight></codeline>
<codeline lineno="19"><highlight class="comment">case<sp/>the<sp/>variable<sp/>ever<sp/>contains<sp/>space<sp/>characters<sp/>in<sp/>future.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">The<sp/>&lt;tt&gt;URI&lt;/tt&gt;<sp/>argument<sp/>also<sp/>takes<sp/>a<sp/>single<sp/>value,<sp/>which<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment">namespace<sp/>URI<sp/>of<sp/>the<sp/>module<sp/>file.<sp/>Note<sp/>that<sp/>it<sp/>is<sp/>very<sp/>important<sp/>that</highlight></codeline>
<codeline lineno="23"><highlight class="comment">this<sp/>URI<sp/>matches<sp/>the<sp/>&lt;tt&gt;module<sp/>namespace&lt;/tt&gt;<sp/>URI<sp/>in<sp/>the<sp/>&lt;tt&gt;.xq&lt;/tt&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="comment">file<sp/>itself.<sp/>Currently<sp/>the<sp/>CMake<sp/>macros<sp/>are<sp/>not<sp/>advanced<sp/>enough<sp/>to</highlight></codeline>
<codeline lineno="25"><highlight class="comment">parse<sp/>the<sp/>XQuery<sp/>file<sp/>and<sp/>verify<sp/>that<sp/>this<sp/>is<sp/>true.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">As<sp/>URIs<sp/>cannot<sp/>contain<sp/>space<sp/>characters,<sp/>it<sp/>is<sp/>not<sp/>necessary<sp/>to</highlight></codeline>
<codeline lineno="28"><highlight class="comment">surround<sp/>the<sp/>value<sp/>with<sp/>double-quotes.<sp/>However,<sp/>you<sp/>may<sp/>do<sp/>so<sp/>if<sp/>it</highlight></codeline>
<codeline lineno="29"><highlight class="comment">makes<sp/>the<sp/>statement<sp/>more<sp/>readable<sp/>for<sp/>you.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment">A<sp/>note:<sp/>the<sp/>filename<sp/>of<sp/>your<sp/>module<sp/>(as<sp/>passed<sp/>to<sp/>&lt;tt&gt;FILE&lt;/tt&gt;)<sp/>may</highlight></codeline>
<codeline lineno="32"><highlight class="comment">be<sp/>anything<sp/>you<sp/>like.<sp/>It<sp/>does<sp/>not<sp/>have<sp/>to<sp/>have<sp/>anything<sp/>in<sp/>common<sp/>with</highlight></codeline>
<codeline lineno="33"><highlight class="comment">the<sp/>namespace<sp/>URI.<sp/>Conventionally,<sp/>it<sp/>will<sp/>be<sp/>the<sp/>final<sp/>component<sp/>of</highlight></codeline>
<codeline lineno="34"><highlight class="comment">your<sp/>URI<sp/>with<sp/>&quot;.xq&quot;<sp/>appended,<sp/>as<sp/>in<sp/>our<sp/>example<sp/>where<sp/>the<sp/>filename<sp/>for</highlight></codeline>
<codeline lineno="35"><highlight class="comment">the<sp/>namespace<sp/>URI<sp/>&lt;tt&gt;http://zorba.io/mymod&lt;/tt&gt;<sp/>was</highlight></codeline>
<codeline lineno="36"><highlight class="comment">&lt;tt&gt;mymod.xq&lt;/tt&gt;.<sp/>This<sp/>is<sp/>a<sp/>good<sp/>convention,<sp/>because<sp/>once<sp/>the<sp/>module</highlight></codeline>
<codeline lineno="37"><highlight class="comment">is<sp/>&lt;i&gt;installed&lt;/i&gt;<sp/>into<sp/>the<sp/>&lt;tt&gt;URI_PATH&lt;/tt&gt;<sp/>directory<sp/>or<sp/>elsewhere,</highlight></codeline>
<codeline lineno="38"><highlight class="comment">this<sp/>is<sp/>the<sp/>filename<sp/>it<sp/>will<sp/>have.<sp/>However,<sp/>it<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">\section<sp/>mod_author_versioning<sp/>Introducing<sp/>Versioning</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">Zorba<sp/>extends<sp/>XQuery<sp/>by<sp/>offering<sp/>versioned<sp/>access<sp/>to<sp/>modules<sp/>(see<sp/>\ref</highlight></codeline>
<codeline lineno="43"><highlight class="comment">mod_versioning).<sp/>Adding<sp/>versioning<sp/>to<sp/>your<sp/>modules<sp/>is<sp/>very<sp/>easy.</highlight></codeline>
<codeline lineno="44"><highlight class="comment">There<sp/>are<sp/>two<sp/>steps:<sp/>Adding<sp/>the<sp/>&lt;tt&gt;module-version&lt;/tt&gt;<sp/>declaration<sp/>to</highlight></codeline>
<codeline lineno="45"><highlight class="comment">your<sp/>module<sp/>source<sp/>code;<sp/>and<sp/>passing<sp/>the<sp/>&lt;tt&gt;VERSION&lt;/tt&gt;<sp/>argument<sp/>to</highlight></codeline>
<codeline lineno="46"><highlight class="comment">&lt;tt&gt;DECLARE_ZORBA_MODULE&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment">\subsection<sp/>mod_auth_vers_option<sp/>The<sp/>module-version<sp/>Option</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">Zorba<sp/>looks<sp/>for<sp/>an<sp/>XQuery<sp/>option<sp/>to<sp/>define<sp/>the<sp/>version<sp/>of<sp/>the<sp/>module.</highlight></codeline>
<codeline lineno="51"><highlight class="comment">XQuery<sp/>options<sp/>are<sp/>identified<sp/>by<sp/>a<sp/>QName.<sp/>The<sp/>specific<sp/>QName<sp/>Zorba</highlight></codeline>
<codeline lineno="52"><highlight class="comment">looks<sp/>for<sp/>has<sp/>the<sp/>localname<sp/>&lt;tt&gt;module-version&lt;/tt&gt;,<sp/>and<sp/>is<sp/>located<sp/>in</highlight></codeline>
<codeline lineno="53"><highlight class="comment">the<sp/>namespace</highlight></codeline>
<codeline lineno="54"><highlight class="comment">&lt;tt&gt;http://zorba.io/options/versioning&lt;/tt&gt;.<sp/><sp/>Therefore,</highlight></codeline>
<codeline lineno="55"><highlight class="comment">put<sp/>the<sp/>following<sp/>two<sp/>lines<sp/>into<sp/>your<sp/>module,<sp/>after<sp/>the<sp/>module</highlight></codeline>
<codeline lineno="56"><highlight class="comment">declaration:</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="59"><highlight class="comment">declare<sp/>namespace<sp/>ver<sp/>=<sp/>&quot;http://zorba.io/options/versioning&quot;;</highlight></codeline>
<codeline lineno="60"><highlight class="comment">declare<sp/>option<sp/>ver:module-version<sp/>&quot;1.0&quot;;</highlight></codeline>
<codeline lineno="61"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="62"><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment">Note:<sp/>As<sp/>your<sp/>module<sp/>grows<sp/>more<sp/>complex,<sp/>you<sp/>may<sp/>find<sp/>that<sp/>you<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="64"><highlight class="comment">separate<sp/>the<sp/>above<sp/>two<sp/>lines.<sp/>The<sp/>XQuery<sp/>language<sp/>requires<sp/>that<sp/>all</highlight></codeline>
<codeline lineno="65"><highlight class="comment">&lt;i&gt;namespace<sp/>declarations&lt;/i&gt;<sp/>and<sp/>&lt;i&gt;import<sp/>statements&lt;/i&gt;<sp/>(&lt;tt&gt;import</highlight></codeline>
<codeline lineno="66"><highlight class="comment">module&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;import<sp/>schema&lt;/tt&gt;)<sp/>must<sp/>occur<sp/>before<sp/>any</highlight></codeline>
<codeline lineno="67"><highlight class="comment">&lt;i&gt;variable&lt;/i&gt;,<sp/>&lt;i&gt;function&lt;/i&gt;,<sp/>or<sp/>&lt;i&gt;option&lt;/i&gt;<sp/>declarations.<sp/><sp/>So</highlight></codeline>
<codeline lineno="68"><highlight class="comment">the<sp/>namespace<sp/>declaration<sp/>may<sp/>end<sp/>up<sp/>being<sp/>earlier<sp/>in<sp/>the<sp/>file<sp/>than</highlight></codeline>
<codeline lineno="69"><highlight class="comment">the<sp/>option<sp/>declaration.<sp/>This<sp/>is<sp/>fine.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment">Also<sp/>note<sp/>that,<sp/>while<sp/>the<sp/>XQuery<sp/>language<sp/>allows<sp/>you<sp/>to<sp/>have<sp/>your</highlight></codeline>
<codeline lineno="72"><highlight class="comment">variable,<sp/>function,<sp/>and<sp/>option<sp/>declarations<sp/>in<sp/>any<sp/>order,<sp/>Zorba</highlight></codeline>
<codeline lineno="73"><highlight class="comment">requires<sp/>the<sp/>&lt;tt&gt;module-version&lt;/tt&gt;<sp/>option<sp/>to<sp/>be<sp/>declared<sp/>before<sp/>any</highlight></codeline>
<codeline lineno="74"><highlight class="comment">variables<sp/>or<sp/>functions<sp/>in<sp/>order<sp/>to<sp/>function<sp/>correctly.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">\subsection<sp/>mod_auth_vers_declare<sp/>The<sp/>VERSION<sp/>Argument<sp/>to<sp/>DECLARE_ZORBA_MODULE()</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">Now<sp/>you<sp/>must<sp/>also<sp/>tell<sp/>&lt;tt&gt;DECLARE_ZORBA_MODULE()&lt;/tt&gt;<sp/>the<sp/>version<sp/>of</highlight></codeline>
<codeline lineno="79"><highlight class="comment">the<sp/>module,<sp/>so<sp/>that<sp/>it<sp/>can<sp/>copy<sp/>it<sp/>to<sp/>the<sp/>correct<sp/>locations<sp/>on<sp/>the<sp/>URI</highlight></codeline>
<codeline lineno="80"><highlight class="comment">path.<sp/>As<sp/>with<sp/>the<sp/>&lt;tt&gt;URI&lt;/tt&gt;<sp/>argument,<sp/>it<sp/>is<sp/>important<sp/>that<sp/>this</highlight></codeline>
<codeline lineno="81"><highlight class="comment">matches<sp/>the<sp/>actual<sp/>version<sp/>as<sp/>declared<sp/>in<sp/>the<sp/>&lt;tt&gt;.xq&lt;/tt&gt;<sp/>file.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="84"><highlight class="comment">DECLARE_ZORBA_MODULE</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/>(FILE<sp/>mymod.xq<sp/>URI<sp/>&quot;http://zorba.io/mymod&quot;<sp/>VERSION<sp/>1.0)</highlight></codeline>
<codeline lineno="86"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">As<sp/>with<sp/>&lt;tt&gt;URI&lt;/tt&gt;,<sp/>version<sp/>numbers<sp/>cannot<sp/>contain<sp/>space<sp/>characters,</highlight></codeline>
<codeline lineno="89"><highlight class="comment">and<sp/>therefore<sp/>double-quotes<sp/>surrounding<sp/>the<sp/>value<sp/>are<sp/>optional.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment">That&apos;s<sp/>it!<sp/>Now<sp/>query<sp/>authors<sp/>can<sp/>import<sp/>your<sp/>module<sp/>using<sp/>the<sp/>version</highlight></codeline>
<codeline lineno="92"><highlight class="comment">fragment,<sp/>as<sp/>discussed<sp/>in<sp/>\ref<sp/>mod_versioning.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">You<sp/>may<sp/>declare<sp/>multiple<sp/>versions<sp/>of<sp/>the<sp/>same<sp/>module<sp/>(that<sp/>is,<sp/>with</highlight></codeline>
<codeline lineno="95"><highlight class="comment">the<sp/>same<sp/>namespace<sp/>URI),<sp/>so<sp/>that<sp/>you<sp/>can<sp/>for<sp/>instance<sp/>maintain<sp/>and</highlight></codeline>
<codeline lineno="96"><highlight class="comment">contine<sp/>to<sp/>ship<sp/>version<sp/>1.x<sp/>of<sp/>your<sp/>module<sp/>even<sp/>after<sp/>you<sp/>have</highlight></codeline>
<codeline lineno="97"><highlight class="comment">developed<sp/>version<sp/>2.x.<sp/>However,<sp/>there<sp/>is<sp/>one<sp/>limitation<sp/>to</highlight></codeline>
<codeline lineno="98"><highlight class="comment">&lt;tt&gt;DECLARE_ZORBA_MODULE()&lt;/tt&gt;<sp/>regarding<sp/>this:<sp/>You<sp/>must<sp/>ensure<sp/>that</highlight></codeline>
<codeline lineno="99"><highlight class="comment">you<sp/>declare<sp/>all<sp/>versions<sp/>of<sp/>the<sp/>same<sp/>module<sp/>in<sp/>&lt;i&gt;decreasing<sp/>version</highlight></codeline>
<codeline lineno="100"><highlight class="comment">number<sp/>order&lt;/i&gt;,<sp/>that<sp/>is,<sp/>starting<sp/>with<sp/>the<sp/>highest<sp/>version<sp/>number</highlight></codeline>
<codeline lineno="101"><highlight class="comment">and<sp/>working<sp/>backwards.<sp/>So,<sp/>for<sp/>example,<sp/>if<sp/>you<sp/>are<sp/>shipping<sp/>versions</highlight></codeline>
<codeline lineno="102"><highlight class="comment">3.1,<sp/>2.4,<sp/>and<sp/>1.6<sp/>of<sp/>your<sp/>module,<sp/>you<sp/>may<sp/>have:</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="105"><highlight class="comment">DECLARE_ZORBA_MODULE</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/>(FILE<sp/>mymod-3.xq<sp/>URI<sp/>&quot;http://zorba.io/mymod&quot;<sp/>VERSION<sp/>3.1)</highlight></codeline>
<codeline lineno="107"><highlight class="comment">DECLARE_ZORBA_MODULE</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/>(FILE<sp/>mymod-2.xq<sp/>URI<sp/>&quot;http://zorba.io/mymod&quot;<sp/>VERSION<sp/>2.4)</highlight></codeline>
<codeline lineno="109"><highlight class="comment">DECLARE_ZORBA_MODULE</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/>(FILE<sp/>mymod-1.xq<sp/>URI<sp/>&quot;http://zorba.io/mymod&quot;<sp/>VERSION<sp/>1.6)</highlight></codeline>
<codeline lineno="111"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="112"><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment">If<sp/>you<sp/>do<sp/>this<sp/>incorrectly<sp/>(out<sp/>of<sp/>order),<sp/>you<sp/>will<sp/>get<sp/>an<sp/>error<sp/>when</highlight></codeline>
<codeline lineno="114"><highlight class="comment">you<sp/>invoke<sp/>CMake,<sp/>so<sp/>it<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>accidentally<sp/>do<sp/>it<sp/>wrong.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"></highlight></codeline>
<codeline lineno="116"><highlight class="comment">(Note<sp/>that<sp/>the<sp/>above<sp/>example<sp/>also<sp/>demonstrates,<sp/>as<sp/>noted<sp/>earlier,<sp/>that</highlight></codeline>
<codeline lineno="117"><highlight class="comment">the<sp/>filename<sp/>of<sp/>your<sp/>module<sp/>&lt;tt&gt;.xq&lt;/tt&gt;<sp/>file<sp/>need<sp/>not<sp/>directly</highlight></codeline>
<codeline lineno="118"><highlight class="comment">correspond<sp/>with<sp/>the<sp/>namespace<sp/>URI.<sp/>You<sp/>may<sp/>use<sp/>different<sp/>filenames<sp/>for</highlight></codeline>
<codeline lineno="119"><highlight class="comment">supporting<sp/>different<sp/>versions<sp/>if<sp/>you<sp/>wish.)</highlight></codeline>
<codeline lineno="120"><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment">Finally,<sp/>note<sp/>that<sp/>if<sp/>you<sp/>declare<sp/>a<sp/>module<sp/>&lt;i&gt;without&lt;/i&gt;<sp/>a<sp/>VERSION</highlight></codeline>
<codeline lineno="122"><highlight class="comment">argument,<sp/>it<sp/>will<sp/>internally<sp/>be<sp/>treated<sp/>as<sp/>though<sp/>the<sp/>version<sp/>was<sp/>&quot;0.0.0&quot;.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment">\section<sp/>mod_author_schemas<sp/>Adding<sp/>schemas</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment">If<sp/>you<sp/>develop<sp/>modules<sp/>that<sp/>make<sp/>use<sp/>of<sp/>your<sp/>own<sp/>XML<sp/>Schemas,<sp/>then<sp/>you</highlight></codeline>
<codeline lineno="127"><highlight class="comment">should<sp/>keep<sp/>those<sp/>schemas<sp/>as<sp/>part<sp/>of<sp/>your<sp/>module<sp/>project<sp/>and<sp/>install</highlight></codeline>
<codeline lineno="128"><highlight class="comment">them.<sp/>Zorba<sp/>provides<sp/>a<sp/>macro<sp/>&lt;tt&gt;DECLARE_ZORBA_SCHEMA()&lt;/tt&gt;<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="129"><highlight class="comment">purpose,<sp/>which<sp/>works<sp/>almost<sp/>identically<sp/>to</highlight></codeline>
<codeline lineno="130"><highlight class="comment">&lt;tt&gt;DECLARE_ZORBA_MODULE()&lt;/tt&gt;:</highlight></codeline>
<codeline lineno="131"><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="133"><highlight class="comment">DECLARE_ZORBA_SCHEMA</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/>(URI<sp/>&quot;http://zorba.io/myschema&quot;<sp/>FILE<sp/>&quot;schema.xsd&quot;)</highlight></codeline>
<codeline lineno="135"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">The<sp/>semantics<sp/>and<sp/>meanings<sp/>of<sp/>the<sp/>&lt;tt&gt;URI&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;FILE&lt;/tt&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="comment">arguments<sp/>are<sp/>the<sp/>same.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">One<sp/>important<sp/>distinction<sp/>is<sp/>that<sp/>Zorba<sp/>does<sp/>not<sp/>currently<sp/>support</highlight></codeline>
<codeline lineno="141"><highlight class="comment">versioning<sp/>of<sp/>schemas,<sp/>so<sp/>there<sp/>is<sp/>no<sp/>&lt;tt&gt;VERSION&lt;/tt&gt;<sp/>argument<sp/>to</highlight></codeline>
<codeline lineno="142"><highlight class="comment">&lt;tt&gt;DECLARE_ZORBA_SCHEMA()&lt;/tt&gt;.<sp/>We<sp/>hope<sp/>to<sp/>add<sp/>this<sp/>functionality<sp/>in</highlight></codeline>
<codeline lineno="143"><highlight class="comment">a<sp/>later<sp/>release.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment">\section<sp/>mod_author_testing<sp/>Writing<sp/>Tests</highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment">Now<sp/>that<sp/>you&apos;ve<sp/>written<sp/>a<sp/>module,<sp/>it<sp/>would<sp/>be<sp/>a<sp/>great<sp/>idea<sp/>to<sp/>write</highlight></codeline>
<codeline lineno="148"><highlight class="comment">some<sp/>test<sp/>cases<sp/>for<sp/>it<sp/>to<sp/>ensure<sp/>that<sp/>later<sp/>changes<sp/>don&apos;t<sp/>break<sp/>any</highlight></codeline>
<codeline lineno="149"><highlight class="comment">functionality.<sp/>(In<sp/>fact,<sp/>if<sp/>you<sp/>subscribe<sp/>to<sp/>the<sp/>Test-Driven</highlight></codeline>
<codeline lineno="150"><highlight class="comment">Development<sp/>philosophy,<sp/>you<sp/>probably<sp/>want<sp/>to<sp/>write<sp/>the<sp/>tests<sp/>first!)</highlight></codeline>
<codeline lineno="151"><highlight class="comment">Zorba<sp/>ships<sp/>a<sp/>testdriver<sp/>program<sp/>and<sp/>macros<sp/>to<sp/>easily<sp/>add<sp/>XQuery-based</highlight></codeline>
<codeline lineno="152"><highlight class="comment">tests<sp/>to<sp/>your<sp/>project.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment">\subsection<sp/>mod_author_testing_basic<sp/>Basic<sp/>Testing</highlight></codeline>
<codeline lineno="155"><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">The<sp/>basic<sp/>steps<sp/>are:</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">1.<sp/>Create<sp/>a<sp/>test<sp/>directory<sp/>with<sp/>two<sp/>subdirectories<sp/>named<sp/>&quot;Queries&quot;<sp/>and</highlight></codeline>
<codeline lineno="159"><highlight class="comment">&quot;ExpQueryResults&quot;.<sp/>Here<sp/>we<sp/>assume<sp/>that<sp/>directory<sp/>is<sp/>named<sp/>&lt;tt&gt;tests&lt;/tt&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="comment">and<sp/>is<sp/>located<sp/>at<sp/>the<sp/>top<sp/>of<sp/>your<sp/>project.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">2.<sp/>Inside<sp/>&lt;tt&gt;Queries&lt;/tt&gt;,<sp/>create<sp/>XQueries<sp/>in<sp/>files<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="163"><highlight class="comment">extension<sp/>&lt;tt&gt;.xq&lt;/tt&gt;.<sp/><sp/>You<sp/>may<sp/>use<sp/>any<sp/>directory<sp/>structure<sp/>you<sp/>like</highlight></codeline>
<codeline lineno="164"><highlight class="comment">inside<sp/>this<sp/>directory<sp/>to<sp/>organize<sp/>your<sp/>test<sp/>queries.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment">3.<sp/>Inside<sp/>&lt;tt&gt;ExpQueryResults&lt;/tt&gt;,<sp/>create<sp/>expected<sp/>results<sp/>files<sp/>for</highlight></codeline>
<codeline lineno="167"><highlight class="comment">your<sp/>queries<sp/>with<sp/>the<sp/>extension<sp/>&lt;tt&gt;.xml.res&lt;/tt&gt;.<sp/>The<sp/>directory</highlight></codeline>
<codeline lineno="168"><highlight class="comment">structure<sp/>should<sp/>be<sp/>exactly<sp/>the<sp/>same<sp/>as<sp/>inside<sp/>&lt;tt&gt;Queries&lt;/tt&gt;.<sp/>For</highlight></codeline>
<codeline lineno="169"><highlight class="comment">instance,<sp/>if<sp/>you<sp/>have<sp/>a<sp/>test<sp/>in<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="170"><highlight class="comment">&lt;tt&gt;tests/Queries/feature-A/test-1.xq&lt;/tt&gt;,<sp/>then<sp/>the<sp/>expected<sp/>results</highlight></codeline>
<codeline lineno="171"><highlight class="comment">should<sp/>be<sp/>in<sp/>&lt;tt&gt;tests/ExpQueryResults/feature-A/test-1.xml.res&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="172"><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment">4.<sp/>In<sp/>your<sp/>&lt;tt&gt;CMakeLists.txt&lt;/tt&gt;,<sp/>add<sp/>the<sp/>following<sp/>lines<sp/>near<sp/>the</highlight></codeline>
<codeline lineno="174"><highlight class="comment">top<sp/>-<sp/>for<sp/>example<sp/>right<sp/>after<sp/>the<sp/>&lt;tt&gt;PROJECT<sp/>(...)&lt;/tt&gt;<sp/>line:</highlight></codeline>
<codeline lineno="175"><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="177"><highlight class="comment">ENABLE_TESTING<sp/>()</highlight></codeline>
<codeline lineno="178"><highlight class="comment">INCLUDE<sp/>(CTest)</highlight></codeline>
<codeline lineno="179"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="180"><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment">5.<sp/>Finally,<sp/>elsewhere<sp/>in<sp/>your<sp/>&lt;tt&gt;CMakeLists.txt&lt;/tt&gt;,<sp/>add:</highlight></codeline>
<codeline lineno="182"><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="184"><highlight class="comment">ADD_TEST_DIRECTORY<sp/>(tests)</highlight></codeline>
<codeline lineno="185"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="186"><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment">That&apos;s<sp/>it!<sp/>Now,<sp/>from<sp/>your<sp/>build<sp/>directory,<sp/>after<sp/>re-building<sp/>your<sp/>project,</highlight></codeline>
<codeline lineno="188"><highlight class="comment">you<sp/>can<sp/>run<sp/>all<sp/>your<sp/>tests<sp/>by<sp/>simply<sp/>executing<sp/>the<sp/>command<sp/>&lt;tt&gt;ctest&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="189"><highlight class="comment">CTest<sp/>is<sp/>a<sp/>testing<sp/>framework<sp/>that<sp/>ships<sp/>with<sp/>CMake.<sp/>It<sp/>has<sp/>a<sp/>great<sp/>many</highlight></codeline>
<codeline lineno="190"><highlight class="comment">features,<sp/>but<sp/>the<sp/>two<sp/>most<sp/>important<sp/>command-line<sp/>options<sp/>are:</highlight></codeline>
<codeline lineno="191"><highlight class="comment"></highlight></codeline>
<codeline lineno="192"><highlight class="comment">1.<sp/>&lt;tt&gt;ctest<sp/>-R<sp/>[pattern]&lt;/tt&gt;<sp/>will<sp/>execute<sp/>only<sp/>those<sp/>tests<sp/>whose</highlight></codeline>
<codeline lineno="193"><highlight class="comment">name<sp/>matches<sp/>the<sp/>given<sp/>pattern.<sp/>Since<sp/>&lt;tt&gt;ADD_TEST_DIRECTORY()&lt;/tt&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="comment">creates<sp/>the<sp/>test<sp/>names<sp/>based<sp/>on<sp/>the<sp/>directory<sp/>structure<sp/>under</highlight></codeline>
<codeline lineno="195"><highlight class="comment">&lt;tt&gt;Queries&lt;/tt&gt;,<sp/>this<sp/>makes<sp/>it<sp/>easy<sp/>to<sp/>run<sp/>a<sp/>subset<sp/>of<sp/>your</highlight></codeline>
<codeline lineno="196"><highlight class="comment">tests.<sp/>For<sp/>instance,<sp/>&lt;tt&gt;ctest<sp/>-R<sp/>feature-A&lt;/tt&gt;<sp/>will<sp/>run<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="197"><highlight class="comment">tests<sp/>in<sp/>the<sp/>&quot;feature-A&quot;<sp/>directory.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment">2.<sp/>&lt;tt&gt;ctest<sp/>-V&lt;/tt&gt;<sp/>will<sp/>show<sp/>the<sp/>output<sp/>of<sp/>the<sp/>tests,<sp/>rather<sp/>than</highlight></codeline>
<codeline lineno="200"><highlight class="comment">just<sp/>a<sp/>synopsis<sp/>of<sp/>the<sp/>results.<sp/>This<sp/>is<sp/>useful<sp/>when<sp/>debugging.<sp/>Since</highlight></codeline>
<codeline lineno="201"><highlight class="comment">the<sp/>output<sp/>of<sp/>testdriver<sp/>is<sp/>fairly<sp/>verbose,<sp/>it<sp/>is<sp/>best<sp/>to<sp/>combine</highlight></codeline>
<codeline lineno="202"><highlight class="comment">&lt;tt&gt;-V&lt;/tt&gt;<sp/>with<sp/>a<sp/>&lt;tt&gt;-R&lt;/tt&gt;<sp/>option<sp/>that<sp/>limits<sp/>ctest<sp/>to<sp/>exactly<sp/>one</highlight></codeline>
<codeline lineno="203"><highlight class="comment">test;<sp/>for<sp/>example:<sp/>&lt;tt&gt;ctest<sp/>-V<sp/>-R<sp/>feature-A/test-1&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"></highlight></codeline>
<codeline lineno="205"><highlight class="comment">\subsection<sp/>mod_author_testing_advanced<sp/>More<sp/>Advanced<sp/>Testing</highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment">Zorba&apos;s<sp/>testdriver<sp/>has<sp/>several<sp/>other<sp/>features<sp/>-<sp/>it<sp/>is<sp/>actually<sp/>the</highlight></codeline>
<codeline lineno="208"><highlight class="comment">same<sp/>test<sp/>program<sp/>used<sp/>by<sp/>Zorba<sp/>itself<sp/>both<sp/>for<sp/>its<sp/>own<sp/>internal</highlight></codeline>
<codeline lineno="209"><highlight class="comment">testing<sp/>as<sp/>well<sp/>as<sp/>running<sp/>the<sp/>W3C&apos;s<sp/>XQuery<sp/>Test<sp/>Suite<sp/>conformance</highlight></codeline>
<codeline lineno="210"><highlight class="comment">suite,<sp/>which<sp/>has<sp/>a<sp/>number<sp/>of<sp/>complex<sp/>requirements.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment">testdriver<sp/>activates<sp/>additional<sp/>features<sp/>when<sp/>a<sp/>test<sp/>query<sp/>has<sp/>a</highlight></codeline>
<codeline lineno="213"><highlight class="comment">corresponding<sp/>&lt;tt&gt;.spec&lt;/tt&gt;<sp/>file.<sp/>This<sp/>is<sp/>a<sp/>file<sp/>in<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="214"><highlight class="comment">directory<sp/>as<sp/>an<sp/>&lt;tt&gt;.xq&lt;/tt&gt;<sp/>test<sp/>query,<sp/>with<sp/>the<sp/>same<sp/>file<sp/>name<sp/>but<sp/>a</highlight></codeline>
<codeline lineno="215"><highlight class="comment">&lt;tt&gt;.spec&lt;/tt&gt;<sp/>extension.<sp/>For<sp/>instance,<sp/>for<sp/>the<sp/>test<sp/>mentioned<sp/>in<sp/>step</highlight></codeline>
<codeline lineno="216"><highlight class="comment">3<sp/>above,<sp/>the<sp/>spec<sp/>file<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="217"><highlight class="comment">&lt;tt&gt;tests/Queries/feature-A/test-1.spec&lt;/tt&gt;.<sp/>We<sp/>will<sp/>briefly<sp/>document</highlight></codeline>
<codeline lineno="218"><highlight class="comment">the<sp/>two<sp/>most<sp/>useful<sp/>features<sp/>here.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"></highlight></codeline>
<codeline lineno="220"><highlight class="comment">1.<sp/>Negative<sp/>tests:<sp/>If<sp/>you<sp/>would<sp/>like<sp/>to<sp/>test<sp/>error<sp/>conditions,<sp/>you<sp/>can</highlight></codeline>
<codeline lineno="221"><highlight class="comment">add<sp/>a<sp/>line<sp/>such<sp/>as<sp/>the<sp/>following<sp/>to<sp/>your<sp/>.spec<sp/>file:</highlight></codeline>
<codeline lineno="222"><highlight class="comment"></highlight></codeline>
<codeline lineno="223"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="224"><highlight class="comment">Error:<sp/>http://www.w3.org/2005/xqt-errors:XPTY0004</highlight></codeline>
<codeline lineno="225"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="226"><highlight class="comment"></highlight></codeline>
<codeline lineno="227"><highlight class="comment">This<sp/>tells<sp/>testdriver<sp/>to<sp/>expect<sp/>that<sp/>the<sp/>query<sp/>will<sp/>raise<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="228"><highlight class="comment">with<sp/>the<sp/>given<sp/>QName.<sp/>If<sp/>any<sp/>other<sp/>error,<sp/>or<sp/>no<sp/>error<sp/>at<sp/>all,<sp/>is</highlight></codeline>
<codeline lineno="229"><highlight class="comment">raised,<sp/>then<sp/>the<sp/>test<sp/>will<sp/>fail.<sp/>In<sp/>this<sp/>case,<sp/>it<sp/>is<sp/>not<sp/>necessary<sp/>to</highlight></codeline>
<codeline lineno="230"><highlight class="comment">have<sp/>an<sp/>expected<sp/>results<sp/>&lt;tt&gt;.xml.res&lt;/tt&gt;<sp/>file,<sp/>as<sp/>the<sp/>expected</highlight></codeline>
<codeline lineno="231"><highlight class="comment">result<sp/>is<sp/>instead<sp/>the<sp/>error.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment">2.<sp/>Binding<sp/>external<sp/>variables:<sp/>If<sp/>your<sp/>query<sp/>has<sp/>external<sp/>variables,</highlight></codeline>
<codeline lineno="234"><highlight class="comment">you<sp/>may<sp/>bind<sp/>them<sp/>with<sp/>lines<sp/>in<sp/>your<sp/>.spec<sp/>file<sp/>such<sp/>as<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="235"><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="237"><highlight class="comment">Args:</highlight></codeline>
<codeline lineno="238"><highlight class="comment">-x</highlight></codeline>
<codeline lineno="239"><highlight class="comment">var:=value</highlight></codeline>
<codeline lineno="240"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="241"><highlight class="comment"></highlight></codeline>
<codeline lineno="242"><highlight class="comment">(Unfortunately,<sp/>it<sp/>is<sp/>necessary<sp/>to<sp/>put<sp/>the<sp/>above<sp/>assignment<sp/>exactly<sp/>as</highlight></codeline>
<codeline lineno="243"><highlight class="comment">shown,<sp/>on<sp/>three<sp/>separate<sp/>lines<sp/>in<sp/>the<sp/>.spec<sp/>file.)</highlight></codeline>
<codeline lineno="244"><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment">This<sp/>will<sp/>bind<sp/>the<sp/>string<sp/>value<sp/>&quot;value&quot;<sp/>to<sp/>the<sp/>variable<sp/>&lt;tt&gt;$var&lt;/tt&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="comment">in<sp/>the<sp/>query.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"></highlight></codeline>
<codeline lineno="248"><highlight class="comment">You<sp/>may<sp/>also<sp/>bind<sp/>an<sp/>XML<sp/>file<sp/>as<sp/>a<sp/>document<sp/>variable<sp/>by<sp/>using</highlight></codeline>
<codeline lineno="249"><highlight class="comment">&quot;=&quot;<sp/>instead<sp/>of<sp/>&quot;:=&quot;<sp/>in<sp/>the<sp/>assignment:</highlight></codeline>
<codeline lineno="250"><highlight class="comment"></highlight></codeline>
<codeline lineno="251"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="252"><highlight class="comment">Args:</highlight></codeline>
<codeline lineno="253"><highlight class="comment">-x</highlight></codeline>
<codeline lineno="254"><highlight class="comment">var=$RBKT_SRC_DIR/input.xml</highlight></codeline>
<codeline lineno="255"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="256"><highlight class="comment"></highlight></codeline>
<codeline lineno="257"><highlight class="comment">This<sp/>will<sp/>parse<sp/>the<sp/>specified<sp/>XML<sp/>file<sp/>and<sp/>bind<sp/>the<sp/>resulting<sp/>document</highlight></codeline>
<codeline lineno="258"><highlight class="comment">node<sp/>to<sp/>the<sp/>variable<sp/>&lt;tt&gt;$var&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"></highlight></codeline>
<codeline lineno="260"><highlight class="comment">The<sp/>expression<sp/>&lt;tt&gt;$RBKT_SRC_DIR&lt;/tt&gt;<sp/>will<sp/>be<sp/>replaced<sp/>by<sp/>the<sp/>full</highlight></codeline>
<codeline lineno="261"><highlight class="comment">path<sp/>to<sp/>the<sp/>directory<sp/>that<sp/>was<sp/>originally<sp/>passed<sp/>to</highlight></codeline>
<codeline lineno="262"><highlight class="comment">&lt;tt&gt;ADD_TEST_DIRECTORY()&lt;/tt&gt;.<sp/>(The<sp/>named<sp/>&lt;tt&gt;$RBKT_SRC_DIR&lt;/tt&gt;<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="263"><highlight class="comment">strange<sp/>historical<sp/>artifact<sp/>of<sp/>the<sp/>early<sp/>days<sp/>of<sp/>Zorba<sp/>testing.)</highlight></codeline>
<codeline lineno="264"><highlight class="comment"></highlight></codeline>
<codeline lineno="265"><highlight class="comment">\section<sp/>mod_author_cpp<sp/>External<sp/>Functions<sp/>in<sp/>C++</highlight></codeline>
<codeline lineno="266"><highlight class="comment"></highlight></codeline>
<codeline lineno="267"><highlight class="comment">The<sp/>final<sp/>advanced<sp/>feature<sp/>of<sp/>&lt;tt&gt;DECLARE_ZORBA_MODULE&lt;/tt&gt;<sp/>is</highlight></codeline>
<codeline lineno="268"><highlight class="comment">building<sp/>a<sp/>dynamic<sp/>library<sp/>for<sp/>any<sp/>external<sp/>module<sp/>functions<sp/>that<sp/>are</highlight></codeline>
<codeline lineno="269"><highlight class="comment">implemented<sp/>in<sp/>C++.<sp/>For<sp/>information<sp/>about<sp/>actually<sp/>writing<sp/>these</highlight></codeline>
<codeline lineno="270"><highlight class="comment">functions,<sp/>see<sp/>\ref<sp/>external_functions.<sp/>Here<sp/>we<sp/>describe<sp/>how</highlight></codeline>
<codeline lineno="271"><highlight class="comment">&lt;tt&gt;DECLARE_ZORBA_MODULE()&lt;/tt&gt;<sp/>automates<sp/>the<sp/>building<sp/>and</highlight></codeline>
<codeline lineno="272"><highlight class="comment">distributing<sp/>of<sp/>these<sp/>libraries.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"></highlight></codeline>
<codeline lineno="274"><highlight class="comment">If<sp/>you<sp/>have<sp/>a<sp/>module<sp/>with<sp/>external<sp/>function<sp/>declarations<sp/>named</highlight></codeline>
<codeline lineno="275"><highlight class="comment">&lt;tt&gt;module.xq&lt;/tt&gt;,<sp/>then<sp/>you<sp/>simply<sp/>create<sp/>a<sp/>subdirectory<sp/>named</highlight></codeline>
<codeline lineno="276"><highlight class="comment">&lt;tt&gt;module.xq.src&lt;/tt&gt;<sp/>in<sp/>the<sp/>same<sp/>directory<sp/>as<sp/>the<sp/>&lt;tt&gt;.xq&lt;/tt&gt;</highlight></codeline>
<codeline lineno="277"><highlight class="comment">file.<sp/>&lt;tt&gt;DECLARE_ZORBA_MODULE()&lt;/tt&gt;<sp/>will<sp/>identify<sp/>this<sp/>directory<sp/>and:</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment">1.<sp/>Add<sp/>build<sp/>rules<sp/>to<sp/>your<sp/>project<sp/>that<sp/>compiles<sp/>all<sp/>&lt;tt&gt;.cpp&lt;/tt&gt;</highlight></codeline>
<codeline lineno="280"><highlight class="comment">files<sp/>in<sp/>the<sp/>&lt;tt&gt;.xq.src&lt;/tt&gt;<sp/>directory<sp/>(or<sp/>any<sp/>subdirectories<sp/>of<sp/>that</highlight></codeline>
<codeline lineno="281"><highlight class="comment">directory)</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment">2.<sp/>Link<sp/>them<sp/>together<sp/>into<sp/>an<sp/>appropriately-named<sp/>shared<sp/>library<sp/>for</highlight></codeline>
<codeline lineno="284"><highlight class="comment">your<sp/>operating<sp/>system</highlight></codeline>
<codeline lineno="285"><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment">3.<sp/>Copy<sp/>the<sp/>resulting<sp/>shared<sp/>library<sp/>into</highlight></codeline>
<codeline lineno="287"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="288"><highlight class="comment">&lt;build_dir&gt;/LIB_PATH</highlight></codeline>
<codeline lineno="289"><highlight class="comment">\endcode<sp/>with<sp/>the<sp/>correct<sp/>name<sp/>and<sp/>location,<sp/>and</highlight></codeline>
<codeline lineno="290"><highlight class="comment"></highlight></codeline>
<codeline lineno="291"><highlight class="comment">4.<sp/>Create<sp/>an<sp/>&lt;tt&gt;INSTALL&lt;/tt&gt;<sp/>rule<sp/>so<sp/>that<sp/>the<sp/>shared<sp/>library<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="292"><highlight class="comment">installed<sp/>correctly<sp/>along<sp/>with<sp/>your<sp/>project.<sp/>It<sp/>will<sp/>be<sp/>automatically</highlight></codeline>
<codeline lineno="293"><highlight class="comment">installed<sp/>into<sp/>Zorba&apos;s<sp/>default<sp/>non-core<sp/>library<sp/>path<sp/>(see<sp/>\ref<sp/>libpath).</highlight></codeline>
<codeline lineno="294"><highlight class="comment"></highlight></codeline>
<codeline lineno="295"><highlight class="comment">If<sp/>your<sp/>code<sp/>depends<sp/>on<sp/>other<sp/>dynamic<sp/>libraries,<sp/>you<sp/>can<sp/>pass<sp/>the<sp/>full</highlight></codeline>
<codeline lineno="296"><highlight class="comment">paths<sp/>to<sp/>those<sp/>libraries<sp/>to<sp/>&lt;tt&gt;DECLARE_ZORBA_MODULE()&lt;/tt&gt;<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="297"><highlight class="comment">&lt;tt&gt;LINK_LIBRARIES&lt;/tt&gt;<sp/>option.<sp/>In<sp/>most<sp/>cases,<sp/>you<sp/>will<sp/>have<sp/>this<sp/>full</highlight></codeline>
<codeline lineno="298"><highlight class="comment">path<sp/>available<sp/>because<sp/>you<sp/>used<sp/>CMake&apos;s<sp/>&lt;tt&gt;FIND_PACKAGE()&lt;/tt&gt;</highlight></codeline>
<codeline lineno="299"><highlight class="comment">command<sp/>to<sp/>locate<sp/>it.<sp/>For<sp/>example,<sp/>here<sp/>is<sp/>a<sp/>bit<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="300"><highlight class="comment">&lt;tt&gt;CMakeLists.txt&lt;/tt&gt;<sp/>for<sp/>the<sp/>non-core<sp/>XSLT<sp/>module,<sp/>which<sp/>depends<sp/>on</highlight></codeline>
<codeline lineno="301"><highlight class="comment">libxslt:</highlight></codeline>
<codeline lineno="302"><highlight class="comment"></highlight></codeline>
<codeline lineno="303"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="304"><highlight class="comment">FIND_PACKAGE<sp/>(LibXslt)</highlight></codeline>
<codeline lineno="305"><highlight class="comment">IF<sp/>(LIBXSLT_FOUND)</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>INCLUDE_DIRECTORIES<sp/>(${LIBXSLT_INCLUDE_DIR})</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>DECLARE_ZORBA_MODULE<sp/>(FILE<sp/>xslt.xq<sp/>VERSION<sp/>1.0</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>URI<sp/>&quot;http://zorba.io/modules/xslt&quot;</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LINK_LIBRARIES<sp/>&quot;${LIBXSLT_LIBRARIES}&quot;)</highlight></codeline>
<codeline lineno="310"><highlight class="comment">ENDIF<sp/>(LIBXSLT_FOUND)</highlight></codeline>
<codeline lineno="311"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="312"><highlight class="comment"></highlight></codeline>
<codeline lineno="313"><highlight class="comment">Note<sp/>that<sp/>while<sp/>&lt;tt&gt;DECLARE_ZORBA_MODULE&lt;/tt&gt;<sp/>will<sp/>set<sp/>up<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="314"><highlight class="comment">above<sp/>build<sp/>rules<sp/>for<sp/>your<sp/>source<sp/>code,<sp/>it<sp/>is<sp/>still<sp/>your</highlight></codeline>
<codeline lineno="315"><highlight class="comment">responsibility<sp/>to<sp/>ensure<sp/>that<sp/>those<sp/>.cpp<sp/>files<sp/>can<sp/>find<sp/>the<sp/>necessary</highlight></codeline>
<codeline lineno="316"><highlight class="comment">header<sp/>files<sp/>by<sp/>using<sp/>CMake&apos;s<sp/>&lt;tt&gt;INCLUDE_DIRECTORIES()&lt;/tt&gt;</highlight></codeline>
<codeline lineno="317"><highlight class="comment">command.<sp/>Again,<sp/>generally<sp/>speaking<sp/>the<sp/>path<sp/>to<sp/>the<sp/>appropriate<sp/>include</highlight></codeline>
<codeline lineno="318"><highlight class="comment">directory<sp/>will<sp/>be<sp/>set<sp/>in<sp/>a<sp/>CMake<sp/>variable<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="319"><highlight class="comment">&lt;tt&gt;FIND_PACKAGE()&lt;/tt&gt;<sp/>command.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">Important<sp/>note:<sp/>&lt;tt&gt;DECLARE_ZORBA_MODULE&lt;/tt&gt;<sp/>discovers<sp/>all</highlight></codeline>
<codeline lineno="322"><highlight class="comment">&lt;tt&gt;.cpp&lt;/tt&gt;<sp/>files<sp/>in<sp/>the<sp/>source<sp/>directory<sp/>automatically,<sp/>using<sp/>a</highlight></codeline>
<codeline lineno="323"><highlight class="comment">glob<sp/>pattern<sp/>(i.e.,<sp/>&lt;tt&gt;*.cpp&lt;/tt&gt;).<sp/>This<sp/>is<sp/>convenient,<sp/>but<sp/>it<sp/>does</highlight></codeline>
<codeline lineno="324"><highlight class="comment">have<sp/>a<sp/>hidden<sp/>downside:<sp/>If<sp/>you<sp/>add<sp/>new<sp/>&lt;tt&gt;.cpp&lt;/tt&gt;<sp/>files<sp/>to<sp/>this</highlight></codeline>
<codeline lineno="325"><highlight class="comment">directory,<sp/>CMake<sp/>has<sp/>no<sp/>way<sp/>of<sp/>knowing<sp/>that<sp/>you<sp/>have<sp/>done<sp/>so,<sp/>and<sp/>so</highlight></codeline>
<codeline lineno="326"><highlight class="comment">those<sp/>files<sp/>will<sp/>not<sp/>automatically<sp/>get<sp/>built.<sp/>This<sp/>can<sp/>lead<sp/>to<sp/>strange</highlight></codeline>
<codeline lineno="327"><highlight class="comment">compilation<sp/>or<sp/>runtime<sp/>errors.<sp/>Fortunately,<sp/>there<sp/>is<sp/>a<sp/>simple</highlight></codeline>
<codeline lineno="328"><highlight class="comment">solution:<sp/>Whenever<sp/>you<sp/>add<sp/>new<sp/>&lt;tt&gt;.cpp&lt;/tt&gt;<sp/>files<sp/>for<sp/>a<sp/>module,</highlight></codeline>
<codeline lineno="329"><highlight class="comment">always<sp/>remember<sp/>to<sp/>immediately<sp/>re-run<sp/>&lt;tt&gt;cmake&lt;/tt&gt;<sp/>in<sp/>your<sp/>build</highlight></codeline>
<codeline lineno="330"><highlight class="comment">directory.<sp/>This<sp/>will<sp/>cause<sp/>the<sp/>glob<sp/>pattern<sp/>to<sp/>be<sp/>re-run<sp/>and<sp/>will<sp/>pick</highlight></codeline>
<codeline lineno="331"><highlight class="comment">up<sp/>any<sp/>new<sp/>source<sp/>code<sp/>files.<sp/>Likewise,<sp/>if<sp/>you<sp/>delete<sp/>any</highlight></codeline>
<codeline lineno="332"><highlight class="comment">&lt;tt&gt;.cpp&lt;/tt&gt;<sp/>files<sp/>from<sp/>your<sp/>source<sp/>directory,<sp/>you<sp/>will<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="333"><highlight class="comment">re-run<sp/>&lt;tt&gt;cmake&lt;/tt&gt;<sp/>for<sp/>the<sp/>same<sp/>reason<sp/>-<sp/>although<sp/>at<sp/>least<sp/>in<sp/>that</highlight></codeline>
<codeline lineno="334"><highlight class="comment">case<sp/>you<sp/>will<sp/>get<sp/>a<sp/>clear<sp/>error<sp/>message<sp/>if<sp/>you<sp/>forget<sp/>to<sp/>do<sp/>so.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"></highlight></codeline>
<codeline lineno="336"><highlight class="comment">\section<sp/>mod_author_declare_synopsis<sp/>Zorba<sp/>Module<sp/>CMake<sp/>Macros:<sp/>Summary</highlight></codeline>
<codeline lineno="337"><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">For<sp/>reference,<sp/>here<sp/>is<sp/>the<sp/>complete<sp/>set<sp/>of<sp/>options<sp/>for<sp/>all<sp/>macros</highlight></codeline>
<codeline lineno="339"><highlight class="comment">provided<sp/>by<sp/>Zorba:</highlight></codeline>
<codeline lineno="340"><highlight class="comment"></highlight></codeline>
<codeline lineno="341"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="342"><highlight class="comment">DECLARE_ZORBA_MODULE<sp/>(FILE<sp/>&lt;.xq<sp/>filename&gt;</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>URI<sp/>&lt;module<sp/>URI&gt;</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>VERSION<sp/>&lt;version<sp/>number&gt;<sp/>]</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>LINK_LIBRARIES<sp/>&lt;library&gt;<sp/>[<sp/>&lt;library&gt;<sp/>...]<sp/>]</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>TEST_ONLY<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="347"><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment">DECLARE_ZORBA_SCHEMA<sp/>(FILE<sp/>&lt;.xq<sp/>filename&gt;</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>URI<sp/>&lt;module<sp/>URI&gt;</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>TEST_ONLY<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="351"><highlight class="comment"></highlight></codeline>
<codeline lineno="352"><highlight class="comment">ADD_TEST_DIRECTORY<sp/>(&lt;test<sp/>directory&gt;)</highlight></codeline>
<codeline lineno="353"><highlight class="comment"></highlight></codeline>
<codeline lineno="354"><highlight class="comment">DONE_DECLARING_ZORBA_URIS<sp/>()</highlight></codeline>
<codeline lineno="355"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="356"><highlight class="comment"></highlight></codeline>
<codeline lineno="357"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/doc/zorba/modules_authoring_2.dox"/>
  </compounddef>
</doxygen>
