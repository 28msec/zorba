<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="static__context_8h" kind="file">
    <compoundname>static_context.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">zorba/config.h</includes>
    <includes refid="api__shared__types_8h" local="no">zorba/api_shared_types.h</includes>
    <includes refid="zorba__string_8h" local="no">zorba/zorba_string.h</includes>
    <includes refid="typeident_8h" local="no">zorba/typeident.h</includes>
    <includes refid="static__context__consts_8h" local="no">zorba/static_context_consts.h</includes>
    <includes refid="options_8h" local="no">zorba/options.h</includes>
    <includes refid="function_8h" local="no">zorba/function.h</includes>
    <includes refid="annotation_8h" local="no">zorba/annotation.h</includes>
    <includes refid="smart__ptr_8h" local="no">zorba/util/smart_ptr.h</includes>
    <includes refid="thesaurus_8h" local="no">zorba/thesaurus.h</includes>
    <includes refid="zorba_8h" local="no">zorba/zorba.h</includes>
    <includes refid="store__manager_8h" local="no">zorba/store_manager.h</includes>
    <includes refid="zorba__exception_8h" local="no">zorba/zorba_exception.h</includes>
    <includedby refid="zorba_8h" local="no">zorba.h</includedby>
    <incdepgraph>
      <node id="2120">
        <label>zorba/util/locale.h</label>
        <link refid="locale_8h"/>
      </node>
      <node id="2136">
        <label>zorba/xquery_stack_trace.h</label>
        <link refid="xquery__stack__trace_8h"/>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2133" relation="include">
        </childnode>
      </node>
      <node id="2112">
        <label>functional</label>
      </node>
      <node id="2095">
        <label>iterator</label>
      </node>
      <node id="2105">
        <label>zorba/internal/cxx_util.h</label>
        <link refid="cxx__util_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
      </node>
      <node id="2131">
        <label>zorba/diagnostic.h</label>
        <link refid="diagnostic_8h"/>
        <childnode refid="2111" relation="include">
        </childnode>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2132" relation="include">
        </childnode>
        <childnode refid="2133" relation="include">
        </childnode>
      </node>
      <node id="2093">
        <label>zorba/util/smart_ptr.h</label>
        <link refid="smart__ptr_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
      </node>
      <node id="2117">
        <label>zorba/item.h</label>
        <link refid="item_8h"/>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2118" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
      </node>
      <node id="2100">
        <label>zorba/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
      </node>
      <node id="2149">
        <label>zorba/item_sequence.h</label>
        <link refid="item__sequence_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
      </node>
      <node id="2130">
        <label>zorba/xquery_warning.h</label>
        <link refid="xquery__warning_8h"/>
        <childnode refid="2131" relation="include">
        </childnode>
        <childnode refid="2135" relation="include">
        </childnode>
      </node>
      <node id="2128">
        <label>zorba/xmldatamanager.h</label>
        <link refid="xmldatamanager_8h"/>
        <childnode refid="2115" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
      </node>
      <node id="2143">
        <label>zorba/document_manager.h</label>
        <link refid="document__manager_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
      </node>
      <node id="2133">
        <label>zorba/internal/qname.h</label>
        <link refid="qname_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2131" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
        <childnode refid="2134" relation="include">
        </childnode>
      </node>
      <node id="2145">
        <label>zorba/xquery.h</label>
        <link refid="xquery_8h"/>
        <childnode refid="2146" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2147" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2100" relation="include">
        </childnode>
      </node>
      <node id="2121">
        <label>zorba/zorba.h</label>
        <link refid="zorba_8h"/>
        <childnode refid="2115" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2122" relation="include">
        </childnode>
        <childnode refid="2123" relation="include">
        </childnode>
        <childnode refid="2129" relation="include">
        </childnode>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2141" relation="include">
        </childnode>
        <childnode refid="2100" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2142" relation="include">
        </childnode>
        <childnode refid="2128" relation="include">
        </childnode>
        <childnode refid="2143" relation="include">
        </childnode>
        <childnode refid="2144" relation="include">
        </childnode>
        <childnode refid="2145" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
        <childnode refid="2148" relation="include">
        </childnode>
        <childnode refid="2150" relation="include">
        </childnode>
      </node>
      <node id="2126">
        <label>zorba/external_function_parameter.h</label>
        <link refid="external__function__parameter_8h"/>
      </node>
      <node id="2141">
        <label>zorba/item_factory.h</label>
        <link refid="item__factory_8h"/>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2119" relation="include">
        </childnode>
      </node>
      <node id="2096">
        <label>string</label>
      </node>
      <node id="2144">
        <label>zorba/collection_manager.h</label>
        <link refid="collection__manager_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
      </node>
      <node id="2116">
        <label>map</label>
      </node>
      <node id="2152">
        <label>zorba/store_manager.h</label>
        <link refid="store__manager_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
      </node>
      <node id="2094">
        <label>zorba/zorba_string.h</label>
        <link refid="zorba__string_8h"/>
        <childnode refid="2095" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
      </node>
      <node id="2137">
        <label>zorba/zorba_exception.h</label>
        <link refid="zorba__exception_8h"/>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2138" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
        <childnode refid="2139" relation="include">
        </childnode>
      </node>
      <node id="2124">
        <label>time.h</label>
        <link refid="time_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2124" relation="include">
        </childnode>
        <childnode refid="2125" relation="include">
        </childnode>
      </node>
      <node id="2123">
        <label>zorba/dynamic_context.h</label>
        <link refid="dynamic__context_8h"/>
        <childnode refid="2124" relation="include">
        </childnode>
        <childnode refid="2115" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2126" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
        <childnode refid="2127" relation="include">
        </childnode>
        <childnode refid="2120" relation="include">
        </childnode>
        <childnode refid="2128" relation="include">
        </childnode>
      </node>
      <node id="2139">
        <label>zorba/error.h</label>
        <link refid="error_8h"/>
        <childnode refid="2140" relation="include">
        </childnode>
        <childnode refid="2133" relation="include">
        </childnode>
      </node>
      <node id="2119">
        <label>zorba/streams.h</label>
        <link refid="streams_8h"/>
        <childnode refid="2098" relation="include">
        </childnode>
      </node>
      <node id="2138">
        <label>exception</label>
      </node>
      <node id="2146">
        <label>ostream</label>
      </node>
      <node id="2122">
        <label>zorba/collection.h</label>
        <link refid="collection_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
      </node>
      <node id="2108">
        <label>type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2109" relation="include">
        </childnode>
      </node>
      <node id="2104">
        <label>zorba/thesaurus.h</label>
        <link refid="thesaurus_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
        <childnode refid="2114" relation="include">
        </childnode>
        <childnode refid="2120" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
      </node>
      <node id="2140">
        <label>zorba/internal/diagnostic.h</label>
        <link refid="internal_2diagnostic_8h"/>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2131" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
      </node>
      <node id="2150">
        <label>zorba/properties_base.h</label>
        <link refid="properties__base_8h"/>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2113" relation="include">
        </childnode>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2151" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
      </node>
      <node id="2134">
        <label>zorba/internal/qnames.h</label>
      </node>
      <node id="2090">
        <label>vector</label>
      </node>
      <node id="2118">
        <label>zorba/store_consts.h</label>
        <link refid="store__consts_8h"/>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
      </node>
      <node id="2132">
        <label>zorba/internal/system_diagnostic.h</label>
        <link refid="system__diagnostic_8h"/>
        <childnode refid="2116" relation="include">
        </childnode>
        <childnode refid="2131" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
      </node>
      <node id="2113">
        <label>sstream</label>
      </node>
      <node id="2148">
        <label>zorba/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2149" relation="include">
        </childnode>
      </node>
      <node id="2135">
        <label>zorba/xquery_exception.h</label>
        <link refid="xquery__exception_8h"/>
        <childnode refid="2136" relation="include">
        </childnode>
        <childnode refid="2137" relation="include">
        </childnode>
      </node>
      <node id="2129">
        <label>zorba/diagnostic_handler.h</label>
        <link refid="diagnostic__handler_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2130" relation="include">
        </childnode>
      </node>
      <node id="2151">
        <label>cctype</label>
      </node>
      <node id="2089">
        <label>static_context.h</label>
        <link refid="static_context.h"/>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
        <childnode refid="2100" relation="include">
        </childnode>
        <childnode refid="2101" relation="include">
        </childnode>
        <childnode refid="2103" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2121" relation="include">
        </childnode>
        <childnode refid="2152" relation="include">
        </childnode>
        <childnode refid="2137" relation="include">
        </childnode>
      </node>
      <node id="2125">
        <label>sys/time.h</label>
      </node>
      <node id="2098">
        <label>iostream</label>
      </node>
      <node id="2114">
        <label>zorba/uri_resolvers.h</label>
        <link refid="uri__resolvers_8h"/>
        <childnode refid="2115" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2116" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2119" relation="include">
        </childnode>
        <childnode refid="2120" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
      </node>
      <node id="2106">
        <label>zorba/internal/unique_ptr.h</label>
        <link refid="unique__ptr_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2107" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2108" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
      </node>
      <node id="2102">
        <label>cstddef</label>
      </node>
      <node id="2110">
        <label>ztd.h</label>
        <link refid="ztd_8h"/>
        <childnode refid="2111" relation="include">
        </childnode>
        <childnode refid="2112" relation="include">
        </childnode>
        <childnode refid="2113" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2108" relation="include">
        </childnode>
      </node>
      <node id="2097">
        <label>zorba/typeident.h</label>
        <link refid="typeident_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
        <childnode refid="2098" relation="include">
        </childnode>
      </node>
      <node id="2142">
        <label>zorba/version.h</label>
        <link refid="version_8h"/>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
      </node>
      <node id="2101">
        <label>zorba/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="2102" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
      </node>
      <node id="2109">
        <label>type_traits</label>
      </node>
      <node id="2091">
        <label>zorba/config.h</label>
      </node>
      <node id="2099">
        <label>zorba/static_context_consts.h</label>
        <link refid="static__context__consts_8h"/>
      </node>
      <node id="2127">
        <label>zorba/util/calendar.h</label>
        <link refid="calendar_8h"/>
      </node>
      <node id="2107">
        <label>algorithm</label>
      </node>
      <node id="2092">
        <label>zorba/api_shared_types.h</label>
        <link refid="api__shared__types_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
      </node>
      <node id="2147">
        <label>zorba/sax2.h</label>
        <link refid="sax2_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
      </node>
      <node id="2111">
        <label>cstring</label>
      </node>
      <node id="2103">
        <label>zorba/annotation.h</label>
        <link refid="annotation_8h"/>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
      </node>
      <node id="2115">
        <label>istream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2154">
        <label>zorba.h</label>
        <link refid="zorba_8h"/>
        <childnode refid="2153" relation="include">
        </childnode>
      </node>
      <node id="2153">
        <label>static_context.h</label>
        <link refid="static_context.h"/>
        <childnode refid="2154" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classzorba_1_1StaticContext" prot="public">zorba::StaticContext</innerclass>
    <innernamespace refid="namespacezorba">zorba</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006-2008<sp/>The<sp/>FLWOR<sp/>Foundation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>XQP_STATIC_CONTEXT_API_H</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>XQP_STATIC_CONTEXT_API_H</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zorba/config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="api__shared__types_8h" kindref="compound">zorba/api_shared_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="zorba__string_8h" kindref="compound">zorba/zorba_string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="typeident_8h" kindref="compound">zorba/typeident.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="static__context__consts_8h" kindref="compound">zorba/static_context_consts.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="options_8h" kindref="compound">zorba/options.h</ref>&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>compiler<sp/>hints<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="function_8h" kindref="compound">zorba/function.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="annotation_8h" kindref="compound">zorba/annotation.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="smart__ptr_8h" kindref="compound">zorba/util/smart_ptr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZORBA_NO_FULL_TEXT</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="thesaurus_8h" kindref="compound">zorba/thesaurus.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZORBA_NO_FULL_TEXT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="zorba_8h" kindref="compound">zorba/zorba.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="store__manager_8h" kindref="compound">zorba/store_manager.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="zorba__exception_8h" kindref="compound">zorba/zorba_exception.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">zorba<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment">/**<sp/>\brief<sp/>Instances<sp/>of<sp/>the<sp/>class<sp/>StaticContext<sp/>contain<sp/>the<sp/>information<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available<sp/>at<sp/>the<sp/>time<sp/>the<sp/>query<sp/>is<sp/>compiled<sp/>and<sp/>run.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>This<sp/>class<sp/>contains<sp/>the<sp/>information<sp/>that<sp/>is<sp/>defined<sp/>in<sp/>the<sp/>%XQuery<sp/>specification</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context).</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>A<sp/>StaticContext<sp/>can<sp/>be<sp/>created<sp/>by<sp/>calling<sp/>Zorba::createStaticContext<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>Zorba::compileQuery<sp/>or<sp/>XQuery::compile<sp/>functions.<sp/>If<sp/>no</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>static<sp/>context<sp/>has<sp/>been<sp/>passed<sp/>to<sp/>any<sp/>of<sp/>these<sp/>functions,<sp/>a<sp/>default<sp/>static</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>context<sp/>is<sp/>used.<sp/>It<sp/>can<sp/>be<sp/>accessed<sp/>by<sp/>calling<sp/>XQuery::getStaticContext<sp/>on</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>a<sp/>compiled<sp/>XQuery<sp/>object.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>Note:<sp/>This<sp/>class<sp/>is<sp/>reference<sp/>counted.<sp/>When<sp/>writing<sp/>multi-threaded<sp/>clients,</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>it<sp/>is<sp/>the<sp/>responibility<sp/>of<sp/>the<sp/>client<sp/>code<sp/>to<sp/>synchronize<sp/>assignments<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>SmartPtr<sp/>holding<sp/>this<sp/>object.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classzorba_1_1StaticContext" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1StaticContext" kindref="compound" tooltip="Instances of the class StaticContext contain the information that is available at the time the query ...">StaticContext</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SmartObject" kindref="compound">SmartObject</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Destructor</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classzorba_1_1StaticContext_1ac1ab635da9e4f744a7ea6179568610c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1StaticContext_1ac1ab635da9e4f744a7ea6179568610c5" kindref="member" tooltip="Destructor.">~StaticContext</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Loads<sp/>the<sp/>declarations<sp/>and<sp/>definitions<sp/>of<sp/>a<sp/>given<sp/>XQuery<sp/>prolog<sp/>into</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>compiles<sp/>the<sp/>prolog<sp/>passed<sp/>as<sp/>first<sp/>parameter<sp/>and<sp/>loads</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>*<sp/>all<sp/>declarations<sp/>and<sp/>definitions<sp/>into<sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>static<sp/>context<sp/>extended<sp/>by<sp/>this<sp/>prolog<sp/>can<sp/>then<sp/>be<sp/>used<sp/>for<sp/>creating</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>*<sp/>a<sp/>compiling<sp/>a<sp/>new<sp/>query.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>*<sp/>A<sp/>StaticException<sp/>is<sp/>raised<sp/>if<sp/>the<sp/>prolog<sp/>could<sp/>not<sp/>be<sp/>compiled<sp/>or</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/>*<sp/>if<sp/>the<sp/>prolog<sp/>does<sp/>not<sp/>contain<sp/>valid<sp/>declarations<sp/>(e.g.<sp/>duplicate<sp/>declarations).</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>loadProlog(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structZorba__CompilerHints" kindref="compound" tooltip="Set of hints that can be passed to the query compiler.">Zorba_CompilerHints_t</ref><sp/>&amp;hints)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Create<sp/>a<sp/>child<sp/>static<sp/>context,<sp/>i.e.<sp/>a<sp/>context<sp/>with<sp/>the<sp/>same<sp/>information,</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>given<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>*<sp/>A<sp/>child<sp/>static<sp/>context<sp/>carries<sp/>the<sp/>same<sp/>context<sp/>as<sp/>it&apos;s<sp/>parent<sp/>but</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>*<sp/>can<sp/>override<sp/>any<sp/>information.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SmartPtr" kindref="compound">StaticContext_t</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>createChildContext()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Add<sp/>a<sp/>pair<sp/>(prefix,<sp/>URI)<sp/>to<sp/>the<sp/>statically<sp/>known<sp/>namespaces<sp/>that</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>available<sp/>during<sp/>query<sp/>compilation.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>See<sp/>http://www.w3.org/TR/xquery/#static_context.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>aPrefix<sp/>the<sp/>prefix<sp/>String.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>aURI<sp/>the<sp/>URI<sp/>String.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>true<sp/>if<sp/>the<sp/>pair<sp/>was<sp/>added<sp/>to<sp/>the<sp/>set<sp/>of<sp/>statically<sp/>known<sp/>namespaces,</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occures.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>addNamespace(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aPrefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>namespace<sp/>URI<sp/>for<sp/>a<sp/>given<sp/>prefix.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aPrefix<sp/>the<sp/>prefix<sp/>for<sp/>which<sp/>to<sp/>retrieve<sp/>the<sp/>namespace<sp/>URI.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>String<sp/>the<sp/>URI<sp/>for<sp/>the<sp/>given<sp/>prefix<sp/>or<sp/>an<sp/>empty<sp/>String<sp/>if<sp/>no<sp/>URI</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>could<sp/>be<sp/>found<sp/>for<sp/>the<sp/>given<sp/>prefix<sp/>and<sp/>an<sp/>DiagnosticHandler<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registered.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>no<sp/>URI<sp/>could<sp/>be<sp/>found<sp/>for<sp/>the<sp/>given<sp/>prefix).</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@deprecated<sp/>This<sp/>function<sp/>is<sp/>deprecated.<sp/>Use<sp/>getNamespaceBindings<sp/>instead.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>getNamespaceURIByPrefix(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aPrefix<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>*<sp/>\brief<sp/>Get<sp/>the<sp/>list<sp/>of<sp/>all<sp/>namespace<sp/>bindings<sp/>(prefix,<sp/>uri)</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>declared<sp/>in<sp/>this<sp/>and<sp/>its<sp/>parent<sp/>static<sp/>contexts.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aBindings<sp/>the<sp/>bindings<sp/>are<sp/>added<sp/>to<sp/>this<sp/>list</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>getNamespaceBindings(<sp/><ref refid="namespacezorba_1a88f32864e73bd2d882541275f8cf1cdc" kindref="member" tooltip="Used for Item::getNamespaceBindings() and ItemFactory::createElementNode().">NsBindings</ref>&amp;<sp/>aBindings<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>default<sp/>element<sp/>and<sp/>type<sp/>namespace</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURI<sp/>of<sp/>the<sp/>default<sp/>element<sp/>and<sp/>type<sp/>namespace<sp/>URI.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>default<sp/>element<sp/>and<sp/>type<sp/>namespace<sp/>URI<sp/>has<sp/>been<sp/>set,<sp/>false<sp/>otherwise</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>an<sp/>DiagnosticHandler<sp/>has<sp/>been<sp/>registered.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>setDefaultElementAndTypeNamespace(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>default<sp/>element<sp/>and<sp/>type<sp/>namespace<sp/>URI.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>String<sp/>the<sp/>URI<sp/>for<sp/>the<sp/>default<sp/>element<sp/>and<sp/>type<sp/>namespace.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>getDefaultElementAndTypeNamespace(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>default<sp/>functionnamespace</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURI<sp/>of<sp/>the<sp/>default<sp/>function<sp/>namespace.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>default<sp/>function<sp/>namespace<sp/>URI<sp/>has<sp/>been<sp/>set,<sp/>false<sp/>otherwise</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>an<sp/>DiagnosticHandler<sp/>has<sp/>been<sp/>registered.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>setDefaultFunctionNamespace(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>default<sp/>function<sp/>namespace.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>String<sp/>the<sp/>URI<sp/>of<sp/>the<sp/>default<sp/>function<sp/>namespace.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DiagnosticHandler<sp/>has<sp/>been<sp/>registered.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>getDefaultFunctionNamespace(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Adds<sp/>a<sp/>collation<sp/>URI.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>URI<sp/>specifies<sp/>the<sp/>locale<sp/>and<sp/>collation<sp/>strength<sp/>of<sp/>the<sp/>collation<sp/>that<sp/>is<sp/>added.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>*<sp/>A<sp/>valid<sp/>collation<sp/>URI<sp/>must<sp/>begin<sp/>with<sp/>%http://zorba.io/collations/.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>prefix<sp/>is<sp/>followed<sp/>by<sp/>a<sp/>collation<sp/>strength<sp/>(i.e.<sp/>PRIMARY,<sp/>SECONDARY,<sp/>TERTIARY,</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/>*<sp/>QUATTERNARY,<sp/>or<sp/>IDENTICAL)<sp/>followed<sp/>by<sp/>a<sp/>&apos;/&apos;.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/>*<sp/>After<sp/>the<sp/>strength<sp/>a<sp/>lower-case<sp/>two-<sp/>or<sp/>three-letter<sp/>ISO-639<sp/>language<sp/>code<sp/>must<sp/>follow.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>URI<sp/>may<sp/>end<sp/>with<sp/>an<sp/>upper-case<sp/>two-letter<sp/>ISO-3166.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>*<sp/>For<sp/>example,<sp/>%http://zorba.io/collations/PRIMARY/en/US</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>*<sp/>specifies<sp/>an<sp/>english<sp/>language<sp/>with<sp/>US<sp/>begin<sp/>the<sp/>country..</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Internally,<sp/>ICU<sp/>is<sp/>used<sp/>for<sp/>comparing<sp/>strings.<sp/>For<sp/>detailed<sp/>description<sp/>see</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>*<sp/>http://www.icu-project.org/apiref/icu4c/classCollator.html</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>http://www.icu-project.org/apiref/icu4c/classLocale.html</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURI<sp/>the<sp/>URI<sp/>of<sp/>the<sp/>collation.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>the<sp/>URI<sp/>was<sp/>not<sp/>a<sp/>valid</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collation<sp/>URI).</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>addCollation(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>URI<sp/>of<sp/>the<sp/>default<sp/>collation.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURI<sp/>URI<sp/>of<sp/>the<sp/>default<sp/>collation.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.,<sp/>the<sp/>URI<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>identify<sp/>a<sp/>collation<sp/>among<sp/>the<sp/>statically<sp/>known<sp/>collations.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>setDefaultCollation(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>URI<sp/>of<sp/>the<sp/>default<sp/>collation</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>String<sp/>the<sp/>URI<sp/>of<sp/>the<sp/>default<sp/>collation.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>getDefaultCollation()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>XQuery<sp/>processing<sp/>mode<sp/>(version<sp/>1.0<sp/>or<sp/>3.0).</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aMode<sp/>the<sp/>XQuery<sp/>version.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>version<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>setXQueryVersion(<sp/><ref refid="namespacezorba_1a0b004b7103901f1b44b5b2ebc3035abd" kindref="member" tooltip="The XQuery version, taken from the version declaration, an XQuery 3.0 feature.">xquery_version_t</ref><sp/>aMode<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>JSONiq<sp/>processing<sp/>mode</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aMode<sp/>the<sp/>JSONiq<sp/>version</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>version<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>setJSONiqVersion(<sp/><ref refid="namespacezorba_1a93922af20969649ae76634c99192bfa8" kindref="member" tooltip="The JSONiq version.">jsoniq_version_t</ref><sp/>aMode<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>XQuery<sp/>processing<sp/>mode<sp/>(version<sp/>1.0<sp/>or<sp/>3.0).</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>xquery_version_t<sp/>the<sp/>XQuery<sp/>version<sp/>processing<sp/>mode.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1a0b004b7103901f1b44b5b2ebc3035abd" kindref="member" tooltip="The XQuery version, taken from the version declaration, an XQuery 3.0 feature.">xquery_version_t</ref></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>getXQueryVersion(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>JSONiq<sp/>processing<sp/>mode.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>jsoniq_version_t<sp/>the<sp/>JSONiq<sp/>version<sp/>processing<sp/>mode.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1a93922af20969649ae76634c99192bfa8" kindref="member" tooltip="The JSONiq version.">jsoniq_version_t</ref></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>getJSONiqVersion(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>XPath<sp/>1.0<sp/>compatibility<sp/>mode.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aMode<sp/>the<sp/>XPath<sp/>1.0<sp/>compatibility<sp/>mode.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>mode<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>setXPath1_0CompatibMode(<sp/><ref refid="namespacezorba_1a869910a131d93b8a3333d35bba8cb4c5" kindref="member" tooltip="XPath 1.0 compatibility mode as defined in http://www.w3.org/TR/xquery/#static_context.">xpath1_0compatib_mode_t</ref><sp/>aMode<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>XPath<sp/>1.0<sp/>compatibility<sp/>mode.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>xpath1_0compatib_mode_t<sp/>the<sp/>XPath<sp/>1.0<sp/>compatibility<sp/>mode.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1a869910a131d93b8a3333d35bba8cb4c5" kindref="member" tooltip="XPath 1.0 compatibility mode as defined in http://www.w3.org/TR/xquery/#static_context.">xpath1_0compatib_mode_t</ref></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>getXPath1_0CompatibMode(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>construction<sp/>mode.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aMode<sp/>the<sp/>construction<sp/>mode.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>mode<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>setConstructionMode(<sp/><ref refid="namespacezorba_1a4e1072d3044e494cb76e59289e30310f" kindref="member" tooltip="Construction mode as defined in http://www.w3.org/TR/xquery/#static_context.">construction_mode_t</ref><sp/>aMode<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>construction<sp/>mode.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>construction_mode_t<sp/>the<sp/>construction<sp/>mode.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1a4e1072d3044e494cb76e59289e30310f" kindref="member" tooltip="Construction mode as defined in http://www.w3.org/TR/xquery/#static_context.">construction_mode_t</ref></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>getConstructionMode(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>ordering<sp/>mode.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aMode<sp/>the<sp/>ordering<sp/>mode.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>mode<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>setOrderingMode(<sp/><ref refid="namespacezorba_1acf239253638cf017b2a8e29f47be25d3" kindref="member" tooltip="Ordering mode as defined in http://www.w3.org/TR/xquery/#static_context.">ordering_mode_t</ref><sp/>aMode<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>ordering<sp/>mode.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>ordering_mode_t<sp/>the<sp/>ordering<sp/>mode.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1acf239253638cf017b2a8e29f47be25d3" kindref="member" tooltip="Ordering mode as defined in http://www.w3.org/TR/xquery/#static_context.">ordering_mode_t</ref></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>getOrderingMode(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>default<sp/>order<sp/>for<sp/>the<sp/>empty<sp/>sequence.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aMode<sp/>the<sp/>default<sp/>order<sp/>for<sp/>the<sp/>empty<sp/>sequence.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>mode<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>setDefaultOrderForEmptySequences(<sp/><ref refid="namespacezorba_1a68a06499a5fa26a391e4ec8f8800f1eb" kindref="member" tooltip="Default order for empty sequences as defined in http://www.w3.org/TR/xquery/#static_context.">order_empty_mode_t</ref><sp/>aMode<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>default<sp/>order<sp/>for<sp/>the<sp/>empty<sp/>sequence.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>order_empty_mode_t<sp/>the<sp/>ordering<sp/>mode.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1a68a06499a5fa26a391e4ec8f8800f1eb" kindref="member" tooltip="Default order for empty sequences as defined in http://www.w3.org/TR/xquery/#static_context.">order_empty_mode_t</ref></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>getDefaultOrderForEmptySequences(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>boundary<sp/>space<sp/>policy.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aMode<sp/>the<sp/>boundary<sp/>space<sp/>policy.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>mode<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>setBoundarySpacePolicy(<sp/><ref refid="namespacezorba_1a6627dc4004037f565b99ccf00f4d63cb" kindref="member" tooltip="Boundary-space policy as defined in http://www.w3.org/TR/xquery/#static_context.">boundary_space_mode_t</ref><sp/>aMode)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>boundary<sp/>space<sp/>policy.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>boundary_space_mode_t<sp/>the<sp/>boundary<sp/>space<sp/>policy.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1a6627dc4004037f565b99ccf00f4d63cb" kindref="member" tooltip="Boundary-space policy as defined in http://www.w3.org/TR/xquery/#static_context.">boundary_space_mode_t</ref></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>getBoundarySpacePolicy(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>copy<sp/>namespace<sp/>mode.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aPreserve<sp/>the<sp/>preserve<sp/>mode.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aInherit<sp/>the<sp/>inherit<sp/>mode.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>mode<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>setCopyNamespacesMode(<sp/><ref refid="namespacezorba_1a4169935c02d1a13c22131558ef2f57cf" kindref="member" tooltip="Preserve part of the Copy-namespace mode as defined in http://www.w3.org/TR/xquery/#static_context.">preserve_mode_t</ref><sp/>aPreserve,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1a6d664ab06d77c71376b72583d9c76e94" kindref="member" tooltip="Inherit part of the Copy-namespace mode as defined in http://www.w3.org/TR/xquery/#static_context.">inherit_mode_t</ref><sp/>aInherit<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>copy<sp/>namespace<sp/>mode.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>aPreserve<sp/>the<sp/>preserve<sp/>mode.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>aInherit<sp/>the<sp/>inherit<sp/>mode.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>getCopyNamespacesMode(<sp/><ref refid="namespacezorba_1a4169935c02d1a13c22131558ef2f57cf" kindref="member" tooltip="Preserve part of the Copy-namespace mode as defined in http://www.w3.org/TR/xquery/#static_context.">preserve_mode_t</ref>&amp;<sp/>aPreserve,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1a6d664ab06d77c71376b72583d9c76e94" kindref="member" tooltip="Inherit part of the Copy-namespace mode as defined in http://www.w3.org/TR/xquery/#static_context.">inherit_mode_t</ref>&amp;<sp/>aInherit<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>base<sp/>URI.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aBaseURI<sp/>the<sp/>base<sp/>URI<sp/>as<sp/>String.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>base<sp/>URI<sp/>has<sp/>been<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>setBaseURI(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aBaseURI<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>base<sp/>URI.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>String<sp/>the<sp/>base<sp/>URI.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>getBaseURI(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>revalidation<sp/>mode.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>revalidation<sp/>mode.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1aac6ee488020881fdc19e9f325a9bf4ca" kindref="member" tooltip="Revalidation mode as defined in http://www.w3.org/TR/xquery-update-10/#id-revalidation-declaration No...">validation_mode_t</ref></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>getRevalidationMode()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>revalidation<sp/>mode.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aMode<sp/>the<sp/>revalidation<sp/>mode.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>setRevalidationMode(<ref refid="namespacezorba_1aac6ee488020881fdc19e9f325a9bf4ca" kindref="member" tooltip="Revalidation mode as defined in http://www.w3.org/TR/xquery-update-10/#id-revalidation-declaration No...">validation_mode_t</ref><sp/>aMode)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Register<sp/>a<sp/>module<sp/>providing<sp/>access<sp/>to<sp/>external<sp/>functions.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Register<sp/>a<sp/>module<sp/>that<sp/>provides<sp/>access<sp/>to<sp/>external<sp/>functions.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>caller<sp/>keeps<sp/>the<sp/>ownership<sp/>of<sp/>the<sp/>Module<sp/>and<sp/>the<sp/>StatelessExternalFunction</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/>*<sp/>objects<sp/>passed<sp/>to<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aModule<sp/>the<sp/>module<sp/>object</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>module<sp/>has<sp/>been<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>registerModule(<ref refid="classzorba_1_1ExternalModule" kindref="compound" tooltip="An external module represents a group of external functions, all belonging to the same target namespa...">ExternalModule</ref>*<sp/>aModule)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/>*<sp/>\brief<sp/>Register<sp/>a<sp/>URI<sp/>Mapper<sp/>which<sp/>will<sp/>transform<sp/>a<sp/>given<sp/>URI</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/>*<sp/>into<sp/>several<sp/>alternate<sp/>potential<sp/>URIs.</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/>*<sp/>QQQ<sp/>doc</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>registerURIMapper(<ref refid="classzorba_1_1URIMapper" kindref="compound" tooltip="Interface for URI mapping.">URIMapper</ref>*<sp/>aMapper)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/>*<sp/>\brief<sp/>Register<sp/>a<sp/>URL<sp/>Resolver<sp/>which<sp/>will<sp/>transform<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/>*<sp/>URL<sp/>into<sp/>a<sp/>Resource.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/>*<sp/>QQQ<sp/>doc</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>registerURLResolver(<ref refid="classzorba_1_1URLResolver" kindref="compound" tooltip="Interface for URL resolving.">URLResolver</ref>*<sp/>aResolver)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>type<sp/>of<sp/>a<sp/>statically<sp/>known<sp/>document</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>setDocumentType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aDocUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SequenceType" kindref="compound" tooltip="Representation and factory for xquery sequence types.">SequenceType</ref>&amp;<sp/><ref refid="namespacezorba_1_1time_1_1calendar_1a7c8c84a1ed5401ddae49da3f01861c87" kindref="member">type</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>type<sp/>of<sp/>a<sp/>statically<sp/>known<sp/>document</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SequenceType" kindref="compound" tooltip="Representation and factory for xquery sequence types.">SequenceType</ref></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>getDocumentType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aDocUri)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>type<sp/>of<sp/>a<sp/>statically<sp/>known<sp/>collection</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>setCollectionType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aCollectionUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SequenceType" kindref="compound" tooltip="Representation and factory for xquery sequence types.">SequenceType</ref>&amp;<sp/><ref refid="namespacezorba_1_1time_1_1calendar_1a7c8c84a1ed5401ddae49da3f01861c87" kindref="member">type</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>type<sp/>of<sp/>a<sp/>statically<sp/>known<sp/>collection</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SequenceType" kindref="compound" tooltip="Representation and factory for xquery sequence types.">SequenceType</ref></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>getCollectionType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aCollectionUri)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Check<sp/>if<sp/>a<sp/>function<sp/>with<sp/>the<sp/>given<sp/>name<sp/>and<sp/>arity<sp/>are<sp/>registered<sp/>in<sp/>the<sp/>context.</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>containsFunction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aFnNameUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aFnNameLocal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arity)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>findFunctions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aQName,<sp/>std::vector&lt;Function_t&gt;&amp;<sp/>aFunctions)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>disableFunction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SmartPtr" kindref="compound">Function_t</ref>&amp;<sp/>aFunction)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>disableFunction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aQName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arity)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>getFunctionAnnotations(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aQName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arity,<sp/>std::vector&lt;Annotation_t&gt;&amp;<sp/>aAnnotations)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>all<sp/>functions<sp/>declared<sp/>in<sp/>the<sp/>given<sp/>static<sp/>context</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>aFunctions<sp/>all<sp/>of<sp/>the<sp/>said<sp/>functions</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>getFunctions(std::vector&lt;Function_t&gt;&amp;<sp/>aFunctions)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>all<sp/>functions<sp/>with<sp/>a<sp/>specified<sp/>namespace<sp/>and<sp/>airty\</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>declared<sp/>in<sp/>the<sp/>given<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aFnNameUri<sp/>the<sp/>namespace<sp/>for<sp/>the<sp/>functions<sp/>to<sp/>return</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>arity<sp/>the<sp/>arity<sp/>for<sp/>the<sp/>functions<sp/>to<sp/>return</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aFunctions<sp/>all<sp/>of<sp/>the<sp/>said<sp/>functions</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>getFunctions(</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aFnNameUri,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>arity,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Function_t&gt;&amp;<sp/>aFunctions)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>type<sp/>of<sp/>the<sp/>context<sp/>item.</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>setContextItemStaticType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SequenceType" kindref="compound" tooltip="Representation and factory for xquery sequence types.">SequenceType</ref>&amp;<sp/><ref refid="namespacezorba_1_1time_1_1calendar_1a7c8c84a1ed5401ddae49da3f01861c87" kindref="member">type</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Fetch<sp/>the<sp/>type<sp/>of<sp/>the<sp/>context<sp/>item.</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SequenceType" kindref="compound" tooltip="Representation and factory for xquery sequence types.">SequenceType</ref></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>getContextItemStaticType()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Set<sp/>the<sp/>output<sp/>stream<sp/>that<sp/>is<sp/>used<sp/>by<sp/>the<sp/>fn:trace<sp/>function</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Sets<sp/>the<sp/>output<sp/>stream<sp/>that<sp/>is<sp/>used<sp/>by<sp/>the<sp/>fn:trace<sp/>function<sp/>to<sp/>the<sp/>given<sp/>output<sp/>stream.</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>default<sp/>stream<sp/>is<sp/>std::cerr.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>setTraceStream(std::ostream&amp;)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Resets<sp/>the<sp/>output<sp/>stream<sp/>that<sp/>is<sp/>used<sp/>by<sp/>the<sp/>fn:trace<sp/>function<sp/>to<sp/>std::cerr</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>resetTraceStream()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>an<sp/>option<sp/>that<sp/>was<sp/>declared<sp/>using<sp/>the<sp/>declare<sp/>option<sp/>syntax</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aQName<sp/>The<sp/>QName<sp/>of<sp/>the<sp/>option<sp/>to<sp/>get.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aOptionValue<sp/>The<sp/>value<sp/>of<sp/>the<sp/>option<sp/>if<sp/>found.</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>option<sp/>was<sp/>found,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>getOption(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aQName,<sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aOptionValue)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Declare<sp/>an<sp/>option<sp/>(same<sp/>as<sp/>using<sp/>declare<sp/>option<sp/>in<sp/>XQuery)</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aQName<sp/>The<sp/>QName<sp/>of<sp/>the<sp/>option<sp/>to<sp/>declare.</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aOptionValue<sp/>The<sp/>value<sp/>of<sp/>the<sp/>option<sp/>to<sp/>declare.</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>declareOption(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aQName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aOptionValue)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Set<sp/>the<sp/>URI<sp/>and<sp/>library<sp/>lookup<sp/>paths<sp/>(lists<sp/>of<sp/>filesystem</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/>*<sp/>directories)<sp/>for<sp/>this<sp/>static<sp/>context.<sp/>Note<sp/>that<sp/>calling<sp/>this<sp/>method</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/>*<sp/>will<sp/>override<sp/>any<sp/>values<sp/>previously<sp/>passed<sp/>to<sp/>StaticContext::setURIPath()</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>StaticContext::setLibPath().</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@deprecated<sp/>Use<sp/>StaticContext::setURIPath()<sp/>and<sp/>StaticContext::setLibPath().</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Convenience<sp/>method<sp/>which<sp/>adds<sp/>the<sp/>listed<sp/>directories<sp/>to<sp/>both<sp/>the</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/>*<sp/>URI<sp/>path<sp/>and<sp/>Library<sp/>path<sp/>for<sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>setModulePaths(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;String&gt;&amp;<sp/>aModulePaths<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>union<sp/>of<sp/>the<sp/>URI<sp/>and<sp/>library<sp/>lookup<sp/>paths<sp/>(lists<sp/>of</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/>*<sp/>filesystem<sp/>directories)<sp/>for<sp/>this<sp/>static<sp/>context.<sp/>@deprecated<sp/>Use<sp/></highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/>*<sp/>StaticContext::getURIPath()<sp/>and<sp/>StaticContext::getLibPath().</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@deprecated<sp/>Use<sp/>StaticContext::getURIPath()<sp/>and<sp/>StaticContext::getLibPath().</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Returns<sp/>any<sp/>values<sp/>set<sp/>by<sp/>StaticContext::setLibPath()<sp/>and/or<sp/>StaticContext::setURIPath()</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/>*<sp/>on<sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>getModulePaths(<sp/>std::vector&lt;String&gt;&amp;<sp/>aModulePaths<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>union<sp/>of<sp/>the<sp/>URI<sp/>and<sp/>library<sp/>lookup<sp/>paths<sp/>(lists<sp/>of</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/>*<sp/>filesystem<sp/>directories)<sp/>for<sp/>this<sp/>static<sp/>context<sp/>and<sp/>all<sp/>its<sp/>parents.</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@deprecated<sp/>Use<sp/>StaticContext::getFullURIPath()<sp/>and<sp/>StaticContext::getFullLibPath().</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>getFullModulePaths(<sp/>std::vector&lt;String&gt;&amp;<sp/>aFullModulePaths<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Resolves<sp/>the<sp/>given<sp/>URI<sp/>against<sp/>the<sp/>value<sp/>of<sp/>the<sp/>base-uri</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/>*<sp/>property<sp/>from<sp/>the<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aRelativeUri<sp/>The<sp/>relative<sp/>URI<sp/>to<sp/>be<sp/>resolved.</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>resolve(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aRelativeUri)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Resolves<sp/>the<sp/>given<sp/>relative<sp/>URI<sp/>against<sp/>the<sp/>absolute<sp/>base<sp/>URI.</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aRelativeUri<sp/>The<sp/>relative<sp/>URI<sp/>to<sp/>be<sp/>resolved.</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aBaseUri<sp/>The<sp/>absolute<sp/>URI<sp/>against<sp/>which<sp/>the<sp/>resolving<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>resolve(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aRelativeUri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aBaseUri)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Validates<sp/>this<sp/>Item.</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Note:<sp/>works<sp/>only<sp/>on<sp/>document<sp/>and<sp/>element<sp/>nodes,<sp/>otherwise<sp/>returns<sp/>false.</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>rootElement<sp/>the<sp/>root<sp/>of<sp/>the<sp/>tree<sp/>beeing<sp/>validated</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>validatedResult<sp/>the<sp/>result<sp/>of<sp/>the<sp/>validation</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>validationMode<sp/>Validation<sp/>mode:<sp/>default<sp/>value<sp/>is<sp/>validate_strict</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>validation<sp/>is<sp/>correct,<sp/>false<sp/>if<sp/>validation<sp/>is<sp/>disabled,<sp/>throws<sp/>errors<sp/>if<sp/>validation<sp/>fails</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>any<sp/>validation<sp/>error<sp/>occured</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1a91fa177bec263667b9c1187018a0ff43" kindref="member" tooltip="Validates a Base64-encoded buffer.">validate</ref>(</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>rootElement,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>validatedResult,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1aac6ee488020881fdc19e9f325a9bf4ca" kindref="member" tooltip="Revalidation mode as defined in http://www.w3.org/TR/xquery-update-10/#id-revalidation-declaration No...">validation_mode_t</ref><sp/>validationMode<sp/>=<sp/><ref refid="namespacezorba_1aac6ee488020881fdc19e9f325a9bf4caa4d338fc1285b3821c050247b5e84b2fe" kindref="member">validate_strict</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Validates<sp/>this<sp/>Item<sp/>while<sp/>loading<sp/>the<sp/>schema<sp/>for<sp/>targetNamespace</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Note:<sp/>works<sp/>only<sp/>on<sp/>document<sp/>or<sp/>element<sp/>nodes,<sp/>otherwise<sp/>returns<sp/>false.</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>rootElement<sp/>the<sp/>root<sp/>of<sp/>the<sp/>tree<sp/>beeing<sp/>validated<sp/></highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>validatedResult<sp/>the<sp/>result<sp/>of<sp/>the<sp/>validation</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>targetNamespace<sp/>the<sp/>expected<sp/>namespace<sp/>of<sp/>root<sp/>of<sp/>the<sp/>tree<sp/>beeing<sp/>validated<sp/>???</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>validationMode<sp/>Validation<sp/>mode:<sp/>default<sp/>value<sp/>is<sp/>validate_strict</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>validation<sp/>is<sp/>correct,<sp/>false<sp/>if<sp/>validation<sp/>is<sp/>disabled,<sp/>throws<sp/>errors<sp/>if<sp/>validation<sp/>fails</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>any<sp/>validation<sp/>error<sp/>occured</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1a91fa177bec263667b9c1187018a0ff43" kindref="member" tooltip="Validates a Base64-encoded buffer.">validate</ref>(</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>rootElement,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>validatedResult,<sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>targetNamespace,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1aac6ee488020881fdc19e9f325a9bf4ca" kindref="member" tooltip="Revalidation mode as defined in http://www.w3.org/TR/xquery-update-10/#id-revalidation-declaration No...">validation_mode_t</ref><sp/>validationMode<sp/>=<sp/><ref refid="namespacezorba_1aac6ee488020881fdc19e9f325a9bf4caa4d338fc1285b3821c050247b5e84b2fe" kindref="member">validate_strict</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Validates<sp/>stringValue<sp/>as<sp/>XML<sp/>simple<sp/>content,<sp/>i.e.<sp/>the<sp/>text<sp/>value<sp/>of<sp/>attributes<sp/>or<sp/></highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/>*<sp/>text<sp/>only<sp/>element<sp/>content.</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>stringValue<sp/>the<sp/>value<sp/>to<sp/>be<sp/>validated</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>typeQName</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>resultList<sp/>the<sp/>result<sp/>of<sp/>the<sp/>validation,<sp/>a<sp/>vector<sp/>of<sp/>atomic<sp/>Items</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>validation<sp/>is<sp/>correct,<sp/>false<sp/>if<sp/>validation<sp/>is<sp/>disabled,<sp/>throws<sp/>errors<sp/>if<sp/>validation<sp/>fails</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>any<sp/>validation<sp/>error<sp/>occured</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>validateSimpleContent(</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>stringValue,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>typeQName,<sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Item&gt;&amp;<sp/>resultList)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">=<sp/>0;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Invokes<sp/>the<sp/>XQuery<sp/>function<sp/>with<sp/>the<sp/>given<sp/>name<sp/>and</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>the<sp/>given<sp/>parameters.</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Note<sp/>that<sp/>the<sp/>function<sp/>to<sp/>be<sp/>invoked<sp/>needs<sp/>to<sp/>be<sp/>declared<sp/>in<sp/>this<sp/>static</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>context.<sp/>In<sp/>order<sp/>to<sp/>declare<sp/>a<sp/>function<sp/>in<sp/>the<sp/>static<sp/>context,<sp/>the</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>loadProlog<sp/>method<sp/>of<sp/>this<sp/>class<sp/>can<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Also<sp/>note<sp/>that<sp/>if<sp/>the<sp/>function<sp/>to<sp/>be<sp/>invoked<sp/>is<sp/>an<sp/>updating<sp/>function,</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>its<sp/>resulting<sp/>pending<sp/>update<sp/>list<sp/>is<sp/>implicitly<sp/>applied<sp/>by<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aQName<sp/>the<sp/>name<sp/>of<sp/>the<sp/>function<sp/>to<sp/>be<sp/>invoked</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aArgs<sp/>a<sp/>vector<sp/>of<sp/>ItemSequences.<sp/>One<sp/>entry<sp/>in<sp/>the<sp/>vector</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corresponds<sp/>to<sp/>one<sp/>argument<sp/>that<sp/>is<sp/>passed<sp/>to<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>that<sp/>is<sp/>invoked.<sp/>If<sp/>the<sp/>function</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>be<sp/>invoked<sp/>is<sp/>an<sp/>updating<sp/>function,<sp/>the<sp/>resulting<sp/>item<sp/>sequence</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>is<sp/>empty.</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SmartPtr" kindref="compound">ItemSequence_t</ref></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>invoke(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aQName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ItemSequence_t&gt;&amp;<sp/>aArgs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Returns<sp/>a<sp/>CollectionManager<sp/>responsible<sp/>for<sp/>all<sp/>collections</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/>*<sp/>which<sp/>are<sp/>statically<sp/>declared<sp/>in<sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>collection<sp/>manager<sp/>provides<sp/>a<sp/>set<sp/>of<sp/>functions<sp/>for<sp/>managing</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/><sp/><sp/>*<sp/>collections<sp/>and<sp/>their<sp/>contents.</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>The<sp/>collection<sp/>manager<sp/>responsible<sp/>for<sp/>managing</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>collections<sp/>of<sp/>this<sp/>context.</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1StaticCollectionManager" kindref="compound" tooltip="Using the StaticCollectionManager one can retrieve information about statically declared collections ...">StaticCollectionManager</ref>*</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>getStaticCollectionManager()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>sets<sp/>the<sp/>audit<sp/>event<sp/>that<sp/>will<sp/>be<sp/>populated<sp/>during<sp/>execution</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>anEvent<sp/>the<sp/>audit<sp/>event</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>setAuditEvent(<ref refid="classzorba_1_1audit_1_1Event" kindref="compound">audit::Event</ref>*<sp/>anEvent)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>gets<sp/>the<sp/>audit<sp/>event<sp/>that<sp/>is<sp/>populated<sp/>during<sp/>execution</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>audit<sp/>event</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1audit_1_1Event" kindref="compound">audit::Event</ref>*</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>getAuditEvent()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Returns<sp/>the<sp/>QName<sp/>of<sp/>all<sp/>external<sp/>variables<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>context</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aVarsIter<sp/>iterator<sp/>to<sp/>store<sp/>the<sp/>results.</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>getExternalVariables(<ref refid="classzorba_1_1SmartPtr" kindref="compound">Iterator_t</ref>&amp;<sp/>aVarsIter)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Set<sp/>the<sp/>URI<sp/>lookup<sp/>path<sp/>(list<sp/>of<sp/>filesystem<sp/>directories)<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/>*<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Queries<sp/>which<sp/>resolve<sp/>URIs<sp/>(for<sp/>instance,<sp/>importing<sp/>modules<sp/>or<sp/>schemas)</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/>*<sp/>will<sp/>look<sp/>in<sp/>these<sp/>directories.</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>setURIPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;String&gt;&amp;<sp/>aURIPath)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>URI<sp/>lookup<sp/>path<sp/>(list<sp/>of<sp/>filesystem<sp/>directories)<sp/>for</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Returns<sp/>any<sp/>values<sp/>set<sp/>by<sp/>StaticContext::setURIPath()<sp/>on<sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/>*<sp/>To<sp/>return<sp/>the<sp/>full<sp/>URI<sp/>lookup<sp/>path<sp/>for<sp/>this<sp/>static<sp/>context<sp/>and</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/><sp/>*<sp/>all<sp/>its<sp/>parents<sp/>(usually<sp/>most<sp/>useful),<sp/>call<sp/>StaticContext::getFullURIPath().</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>getURIPath(std::vector&lt;String&gt;&amp;<sp/>aURIPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>URI<sp/>lookup<sp/>path<sp/>(list<sp/>of<sp/>filesystem<sp/>directories)<sp/>for</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>static<sp/>context<sp/>and<sp/>all<sp/>its<sp/>parents.</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>getFullURIPath(std::vector&lt;String&gt;&amp;<sp/>aURIPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Set<sp/>the<sp/>library<sp/>lookup<sp/>path<sp/>(list<sp/>of<sp/>filesystem<sp/>directories)<sp/>for</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Queries<sp/>which<sp/>import<sp/>modules<sp/>that<sp/>have<sp/>external<sp/>function</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/>*<sp/>implementations<sp/>will<sp/>look<sp/>for<sp/>the<sp/>implementation<sp/>of<sp/>those<sp/>functions</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/><sp/><sp/>*<sp/>(shared<sp/>libraries)<sp/>in<sp/>these<sp/>directories.</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>setLibPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;String&gt;&amp;<sp/>aLibPath)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>URI<sp/>lookup<sp/>path<sp/>(list<sp/>of<sp/>filesystem<sp/>directories)<sp/>for</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Returns<sp/>any<sp/>values<sp/>set<sp/>by<sp/>StaticContext::setLibPath()<sp/>on<sp/>this<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/>*<sp/>To<sp/>return<sp/>the<sp/>full<sp/>library<sp/>lookup<sp/>path<sp/>for<sp/>this<sp/>static<sp/>context<sp/>and</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/>*<sp/>all<sp/>its<sp/>parents<sp/>(usually<sp/>most<sp/>useful),<sp/>call<sp/>StaticContext::getFullLibPath().</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>getLibPath(std::vector&lt;String&gt;&amp;<sp/>aLibPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@brief<sp/>Return<sp/>the<sp/>URI<sp/>lookup<sp/>path<sp/>(list<sp/>of<sp/>filesystem<sp/>directories)<sp/>for</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>static<sp/>context<sp/>and<sp/>all<sp/>its<sp/>parents.</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>getFullLibPath(std::vector&lt;String&gt;&amp;<sp/>aLibPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Fetches<sp/>an<sp/>resource<sp/>refered<sp/>to<sp/>by<sp/>the<sp/>given<sp/>URI.</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Resolution<sp/>is<sp/>done<sp/>using<sp/>the<sp/>URI<sp/>mappers<sp/>and<sp/>resolvers<sp/>registered</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>this<sp/>static<sp/>context.<sp/>If<sp/>no<sp/>such<sp/>mappers<sp/>or<sp/>resolvers<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/>*<sp/>registered,<sp/>the<sp/>built-in<sp/>ones<sp/>are<sp/>used.<sp/></highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>default<sp/>EntityKind<sp/>for<sp/>resources<sp/>fetched<sp/>by<sp/>this<sp/>function</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/>*<sp/>is<sp/>&quot;SOME_CONTENT&quot;.<sp/>The<sp/>default<sp/>encoding<sp/>that<sp/>is<sp/>used<sp/>to<sp/>read<sp/>the</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/>*<sp/>resource<sp/>is<sp/>&quot;UTF-8&quot;.</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURI<sp/>the<sp/>name<sp/>of<sp/>the<sp/>resource<sp/>to<sp/>fetch</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>fetched<sp/>resource</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>fetch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Fetches<sp/>an<sp/>resource<sp/>refered<sp/>to<sp/>by<sp/>the<sp/>given<sp/>URI.</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Resolution<sp/>is<sp/>done<sp/>using<sp/>the<sp/>URI<sp/>mappers<sp/>and<sp/>resolvers<sp/>registered</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>this<sp/>static<sp/>context.<sp/>If<sp/>no<sp/>such<sp/>mappers<sp/>or<sp/>resolvers<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/><sp/><sp/>*<sp/>registered,<sp/>the<sp/>built-in<sp/>ones<sp/>are<sp/>used.<sp/></highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>default<sp/>encoding<sp/>that<sp/>is<sp/>used<sp/>to<sp/>read<sp/>the<sp/>*<sp/>resource<sp/>is<sp/>&quot;UTF-8&quot;.</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURI<sp/>the<sp/>name<sp/>of<sp/>the<sp/>resource<sp/>to<sp/>fetch</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aEntityKind<sp/>the<sp/>kind<sp/>of<sp/>the<sp/>entity<sp/>to<sp/>fetch<sp/>(i.e.</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>SOME_CONTENT,<sp/>SCHEMA,<sp/>MODULE,<sp/>THESAURUS,<sp/>or<sp/>STOP_WORDS)</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>fetched<sp/>resource</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>fetch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aEntityKind)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Fetches<sp/>an<sp/>resource<sp/>refered<sp/>to<sp/>by<sp/>the<sp/>given<sp/>URI.</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Resolution<sp/>is<sp/>done<sp/>using<sp/>the<sp/>URI<sp/>mappers<sp/>and<sp/>resolvers<sp/>registered</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>this<sp/>static<sp/>context.<sp/>If<sp/>no<sp/>such<sp/>mappers<sp/>or<sp/>resolvers<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/>*<sp/>registered,<sp/>the<sp/>built-in<sp/>ones<sp/>are<sp/>used.<sp/></highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURI<sp/>the<sp/>name<sp/>of<sp/>the<sp/>resource<sp/>to<sp/>fetch</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aEncoding<sp/>the<sp/>encoding<sp/>to<sp/>use<sp/>when<sp/>reading<sp/>the<sp/>resource.</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aEntityKind<sp/>the<sp/>kind<sp/>of<sp/>the<sp/>entity<sp/>to<sp/>fetch<sp/>(i.e.</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>SOME_CONTENT,<sp/>SCHEMA,<sp/>MODULE,<sp/>THESAURUS,<sp/>or<sp/>STOP_WORDS)</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>fetched<sp/>resource</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>fetch(</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aEntityKind,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aEncoding)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Fetches<sp/>an<sp/>resource<sp/>refered<sp/>to<sp/>by<sp/>the<sp/>given<sp/>URI</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>and<sp/>returns<sp/>it<sp/>as<sp/>a<sp/>base64binary.</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Resolution<sp/>is<sp/>done<sp/>using<sp/>the<sp/>URI<sp/>mappers<sp/>and<sp/>resolvers<sp/>registered</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>this<sp/>static<sp/>context.<sp/>If<sp/>no<sp/>such<sp/>mappers<sp/>or<sp/>resolvers<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/><sp/><sp/>*<sp/>registered,<sp/>the<sp/>built-in<sp/>ones<sp/>are<sp/>used.<sp/></highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>default<sp/>EntityKind<sp/>for<sp/>resources<sp/>fetched<sp/>by<sp/>this<sp/>function</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/>*<sp/>is<sp/>&quot;SOME_CONTENT&quot;.</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURI<sp/>the<sp/>name<sp/>of<sp/>the<sp/>resource<sp/>to<sp/>fetch</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>fetched<sp/>resource</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>fetchBinary(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Fetches<sp/>an<sp/>resource<sp/>refered<sp/>to<sp/>by<sp/>the<sp/>given<sp/>URI</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>and<sp/>returns<sp/>it<sp/>as<sp/>a<sp/>base64binary.</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Resolution<sp/>is<sp/>done<sp/>using<sp/>the<sp/>URI<sp/>mappers<sp/>and<sp/>resolvers<sp/>registered</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>this<sp/>static<sp/>context.<sp/>If<sp/>no<sp/>such<sp/>mappers<sp/>or<sp/>resolvers<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/><sp/>*<sp/>registered,<sp/>the<sp/>built-in<sp/>ones<sp/>are<sp/>used.<sp/></highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURI<sp/>the<sp/>name<sp/>of<sp/>the<sp/>resource<sp/>to<sp/>fetch</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aEntityKind<sp/>the<sp/>kind<sp/>of<sp/>the<sp/>entity<sp/>to<sp/>fetch<sp/>(i.e.</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>SOME_CONTENT,<sp/>SCHEMA,<sp/>MODULE,<sp/>THESAURUS,<sp/>or<sp/>STOP_WORDS)</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>fetched<sp/>resource</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>fetchBinary(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aURI,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aEntityKind)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Clears<sp/>the<sp/>base<sp/>URI<sp/>and<sp/>sets<sp/>it<sp/>to<sp/>undefined<sp/>state.</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>http://www.w3.org/TR/xquery/#static_context)</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>clearBaseURI()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Sets<sp/>a<sp/>list<sp/>of<sp/>default<sp/>function<sp/>namespaces<sp/>that<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>used<sp/>in<sp/>order<sp/>during<sp/>the<sp/>lookup<sp/>of<sp/>functions.</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aURIs<sp/>the<sp/>list<sp/>of<sp/>default<sp/>function<sp/>namespaces.</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>said<sp/>namespaces<sp/>have<sp/>been<sp/>set,<sp/>false<sp/>otherwise</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>an<sp/>DiagnosticHandler<sp/>has<sp/>been<sp/>registered.</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>setDefaultFunctionNamespaces(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;String&gt;&amp;<sp/>aURIs<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="817"><highlight class="normal">};</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>zorba<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="821"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>vim:set<sp/>et<sp/>sw=2<sp/>ts=2:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/include/zorba/static_context.h"/>
  </compounddef>
</doxygen>
