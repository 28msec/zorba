<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structzorba_1_1internal_1_1ztd_1_1destroy__delete" kind="struct" prot="public">
    <compoundname>zorba::internal::ztd::destroy_delete</compoundname>
    <includes refid="ztd_8h" local="no">zorba/internal/ztd.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structzorba_1_1internal_1_1ztd_1_1destroy__delete_1af1fcc41a918a94ca12f39c5e3c92d759" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zorba::internal::ztd::destroy_delete&lt; T &gt;::destroy_delete</definition>
        <argsstring>()</argsstring>
        <name>destroy_delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/internal/ztd.h" line="203" bodyfile="/home/wcandillon/deadlinks/include/zorba/internal/ztd.h" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structzorba_1_1internal_1_1ztd_1_1destroy__delete_1a845e441cee09c22ac33452061a8a31aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>zorba::internal::ztd::destroy_delete&lt; T &gt;::destroy_delete</definition>
        <argsstring>(destroy_delete&lt; U &gt; const &amp;, typename std::enable_if&lt; ZORBA_TR1_NS::is_convertible&lt; U *, T * &gt;::value &gt;::type *=nullptr)</argsstring>
        <name>destroy_delete</name>
        <param>
          <type><ref refid="structzorba_1_1internal_1_1ztd_1_1destroy__delete" kindref="compound">destroy_delete</ref>&lt; U &gt; const &amp;</type>
        </param>
        <param>
          <type>typename <ref refid="structstd_1_1enable__if" kindref="compound">std::enable_if</ref>&lt; ZORBA_TR1_NS::is_convertible&lt; U *, T * &gt;::value &gt;::type *</type>
          <defval><ref refid="cxx__util_8h_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref></defval>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>The delete type of the deleter to copy-construct from such that <computeroutput>U*</computeroutput> is convertible to <computeroutput>T*</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/internal/ztd.h" line="216" bodyfile="/home/wcandillon/deadlinks/include/zorba/internal/ztd.h" bodystart="212" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="structzorba_1_1internal_1_1ztd_1_1destroy__delete_1a13b0183a198704fe0c543f05f40f10d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zorba::internal::ztd::destroy_delete&lt; T &gt;::operator()</definition>
        <argsstring>(T *p)</argsstring>
        <name>operator()</name>
        <param>
          <type>T *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Calls the <computeroutput>destroy()</computeroutput> member function of the pointed-to object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/internal/ztd.h" line="224" bodyfile="/home/wcandillon/deadlinks/include/zorba/internal/ztd.h" bodystart="224" bodyend="227"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A deleter class that can be used with unique_ptr. </para>    </briefdescription>
    <detaileddescription>
<para>Instead of calling <computeroutput>delete</computeroutput> on the pointed-to object, it calls its <computeroutput>destroy()</computeroutput> member function. </para>    </detaileddescription>
    <location file="/home/wcandillon/deadlinks/include/zorba/internal/ztd.h" line="202" bodyfile="/home/wcandillon/deadlinks/include/zorba/internal/ztd.h" bodystart="202" bodyend="228"/>
    <listofallmembers>
      <member refid="structzorba_1_1internal_1_1ztd_1_1destroy__delete_1af1fcc41a918a94ca12f39c5e3c92d759" prot="public" virt="non-virtual"><scope>zorba::internal::ztd::destroy_delete</scope><name>destroy_delete</name></member>
      <member refid="structzorba_1_1internal_1_1ztd_1_1destroy__delete_1a845e441cee09c22ac33452061a8a31aa" prot="public" virt="non-virtual"><scope>zorba::internal::ztd::destroy_delete</scope><name>destroy_delete</name></member>
      <member refid="structzorba_1_1internal_1_1ztd_1_1destroy__delete_1a13b0183a198704fe0c543f05f40f10d9" prot="public" virt="non-virtual"><scope>zorba::internal::ztd::destroy_delete</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
