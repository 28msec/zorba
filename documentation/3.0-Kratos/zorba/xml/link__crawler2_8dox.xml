<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="link__crawler2_8dox" kind="file">
    <compoundname>link_crawler2.dox</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2"><highlight class="comment">\page<sp/>link_crawler2<sp/><sp/>Web<sp/>Crawler<sp/>example<sp/>in<sp/>XQuery</highlight></codeline>
<codeline lineno="3"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="4"><highlight class="comment">(:</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>:<sp/>Copyright<sp/>2006-2011<sp/>The<sp/>FLWOR<sp/>Foundation.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>:<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>:<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>:<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>:<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>:<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>:<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>:<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>:<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>:<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">:)</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>http<sp/>=<sp/>&quot;http://www.zorba-xquery.com/modules/http-client&quot;;</highlight></codeline>
<codeline lineno="21"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>map<sp/>=<sp/>&quot;http://zorba.io/modules/store/data-structures/unordered-map&quot;;</highlight></codeline>
<codeline lineno="22"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>html<sp/>=<sp/>&quot;http://www.zorba-xquery.com/modules/converters/html&quot;;</highlight></codeline>
<codeline lineno="23"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>parse-xml<sp/>=<sp/>&quot;http://www.zorba-xquery.com/modules/xml&quot;;</highlight></codeline>
<codeline lineno="24"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>file<sp/>=<sp/>&quot;http://expath.org/ns/file&quot;;</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">declare<sp/>namespace<sp/>an<sp/>=<sp/>&quot;http://zorba.io/annotations&quot;;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">declare<sp/>namespace<sp/>xhtml=&quot;http://www.w3.org/1999/xhtml&quot;;</highlight></codeline>
<codeline lineno="28"><highlight class="comment">declare<sp/>namespace<sp/>output=&quot;http://www.w3.org/2010/xslt-xquery-serialization&quot;;</highlight></codeline>
<codeline lineno="29"><highlight class="comment">declare<sp/>namespace<sp/>err=&quot;http://www.w3.org/2005/xqt-errors&quot;;</highlight></codeline>
<codeline lineno="30"><highlight class="comment">declare<sp/>namespace<sp/>httpsch<sp/>=<sp/>&quot;http://expath.org/ns/http-client&quot;;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment">declare<sp/>variable<sp/>$top-uri<sp/><sp/>as<sp/>xs:string<sp/>:=<sp/>&quot;http://www.zorba.io/&quot;;</highlight></codeline>
<codeline lineno="33"><highlight class="comment">declare<sp/>variable<sp/>$uri-host<sp/>as<sp/>xs:string<sp/>:=<sp/>&quot;http://www.zorba.io&quot;;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">declare<sp/>variable<sp/>$local:processed-internal-links<sp/>:=<sp/>xs:QName(&quot;processed-internal-links&quot;);</highlight></codeline>
<codeline lineno="38"><highlight class="comment">declare<sp/>variable<sp/>$local:processed-external-links<sp/>:=<sp/>xs:QName(&quot;processed-external-links&quot;);</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight></codeline>
<codeline lineno="41"><highlight class="comment">declare<sp/>%an:sequential<sp/>function<sp/>local:create-containers()</highlight></codeline>
<codeline lineno="42"><highlight class="comment">{</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>map:create($local:processed-internal-links,<sp/>xs:QName(&quot;xs:string&quot;));</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/>map:create($local:processed-external-links,<sp/>xs:QName(&quot;xs:string&quot;));</highlight></codeline>
<codeline lineno="45"><highlight class="comment">};</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">declare<sp/>%an:sequential<sp/>function<sp/>local:delete-containers(){</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>for<sp/>$x<sp/>in<sp/>map:available-maps()</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>return<sp/>map:delete($x);</highlight></codeline>
<codeline lineno="50"><highlight class="comment">};</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">declare<sp/>function<sp/>local:is-internal($x<sp/>as<sp/>xs:string)<sp/>as<sp/>xs:boolean</highlight></codeline>
<codeline lineno="53"><highlight class="comment">{</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>starts-with($x,<sp/>$uri-host)</highlight></codeline>
<codeline lineno="55"><highlight class="comment">};</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment">declare<sp/>function<sp/>local:my-substring-before($s1<sp/>as<sp/>xs:string,<sp/>$s2<sp/>as<sp/>xs:string)<sp/>as<sp/>xs:string</highlight></codeline>
<codeline lineno="58"><highlight class="comment">{</highlight></codeline>
<codeline lineno="59"><highlight class="comment">let<sp/>$sb<sp/>:=<sp/>fn:substring-before($s1,<sp/>$s2)</highlight></codeline>
<codeline lineno="60"><highlight class="comment">return<sp/><sp/>if($sb<sp/>=<sp/>&quot;&quot;)<sp/>then<sp/><sp/>$s1<sp/>else<sp/>$sb</highlight></codeline>
<codeline lineno="61"><highlight class="comment">};</highlight></codeline>
<codeline lineno="62"><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment">declare<sp/>%an:sequential<sp/>function<sp/>local:get-real-link($href<sp/>as<sp/>xs:string,<sp/>$start-uri<sp/>as<sp/>xs:string)<sp/>as<sp/>xs:string?</highlight></codeline>
<codeline lineno="64"><highlight class="comment">{</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>variable<sp/>$absuri;</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>try{</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/>$absuri<sp/>:=<sp/>local:my-substring-before(resolve-uri(fn:normalize-space($href),<sp/>$start-uri),<sp/>&quot;#&quot;);</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>catch<sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>map:insert($local:processed-external-links,<sp/>(&lt;FROM&gt;{$start-uri}&lt;/FROM&gt;,<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;MESSAGE&gt;malformed&lt;/MESSAGE&gt;,</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;RESULT&gt;broken&lt;/RESULT&gt;),<sp/>$href);</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/>$absuri</highlight></codeline>
<codeline lineno="76"><highlight class="comment">};</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">declare<sp/><sp/>function<sp/>local:get-media-type<sp/>($http-call<sp/>as<sp/>node())<sp/>as<sp/>xs:string</highlight></codeline>
<codeline lineno="80"><highlight class="comment">{</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>local:my-substring-before($http-call/httpsch:header[@name<sp/>=<sp/>&apos;Content-Type&apos;][1]/string(@value),<sp/>&quot;;&quot;)</highlight></codeline>
<codeline lineno="82"><highlight class="comment">};</highlight></codeline>
<codeline lineno="83"><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment">declare<sp/>function<sp/>local:alive($http-call<sp/>as<sp/>item()*)<sp/>as<sp/>xs:boolean</highlight></codeline>
<codeline lineno="85"><highlight class="comment">{</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>if((count($http-call)<sp/>ge<sp/>1)<sp/>and<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>($http-call[1]/@status<sp/>eq<sp/>200))<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>then<sp/>true()<sp/>else<sp/>fn:trace(false(),<sp/>&quot;alive&quot;)</highlight></codeline>
<codeline lineno="89"><highlight class="comment">};</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment">declare<sp/>%an:sequential<sp/>function<sp/>local:get-out-links-parsed($content<sp/>as<sp/>node()*,<sp/>$uri<sp/>as<sp/>xs:string)<sp/>as<sp/>xs:string*</highlight></codeline>
<codeline lineno="93"><highlight class="comment">{<sp/><sp/>distinct-values(<sp/>for<sp/>$y<sp/>in<sp/><sp/>($content//*:a/string(@href),</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$content//*:link/string(@href),</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$content//*:script/string(@src),</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$content//*:img/string(@src),</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$content//*:area/string(@href)</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="comment">return<sp/><sp/>local:get-real-link($y,<sp/>$uri))</highlight></codeline>
<codeline lineno="100"><highlight class="comment">};</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">declare<sp/>%an:sequential<sp/>function<sp/>local:get-out-links-unparsed($content<sp/>as<sp/>xs:string,<sp/>$uri<sp/>as<sp/>xs:string)<sp/>as<sp/>xs:string*{</highlight></codeline>
<codeline lineno="104"><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>distinct-values(<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>let<sp/>$search<sp/>:=<sp/>fn:analyze-string($content,<sp/>&quot;(&amp;lt;|&amp;amp;lt;|&lt;)(((a|link|area).+?href)|((script|img).+?src))=([&quot;&quot;&apos;])(.*?)\7&quot;)</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>$other-uri2<sp/>in<sp/><sp/>$search//group[@nr=8]/string()</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>local:get-real-link($other-uri2,<sp/>$uri)</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="110"><highlight class="comment">};</highlight></codeline>
<codeline lineno="111"><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment">declare<sp/>%an:sequential<sp/>function<sp/>local:map-insert-result($map-name<sp/>as<sp/>xs:QName,<sp/>$url<sp/>as<sp/>xs:string,<sp/>$http-result<sp/>as<sp/>item()*)<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="comment">{</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/>if(count($http-result)<sp/>ge<sp/>1)<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>then<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>map:insert($map-name,<sp/>(&lt;STATUS&gt;{fn:string($http-result[1]/@status)}&lt;/STATUS&gt;,</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;MESSAGE&gt;{fn:string($http-result[1]/@message)}&lt;/MESSAGE&gt;,</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;RESULT&gt;{if(local:alive($http-result))<sp/>then<sp/>&quot;Ok&quot;<sp/>else<sp/>&quot;broken&quot;}&lt;/RESULT&gt;),<sp/>$url)</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/>else<sp/>map:insert($map-name,<sp/>&lt;RESULT&gt;broken&lt;/RESULT&gt;,<sp/>$url)</highlight></codeline>
<codeline lineno="121"><highlight class="comment">};</highlight></codeline>
<codeline lineno="122"><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">declare<sp/>%an:sequential<sp/>function<sp/>local:process-link($x<sp/>as<sp/>xs:string,<sp/>$baseUri<sp/>as<sp/>xs:string,<sp/>$n<sp/>as<sp/>xs:integer)<sp/>as<sp/>item()*{</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>if(local:is-internal($x))</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>local:process-internal-link($x,<sp/>$baseUri,<sp/>$n);</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>local:process-external-link($x,<sp/>$baseUri);</highlight></codeline>
<codeline lineno="127"><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment">};</highlight></codeline>
<codeline lineno="129"><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">declare<sp/><sp/>%an:sequential<sp/>function<sp/>local:process-external-link($x<sp/>as<sp/>xs:string,<sp/>$baseUri<sp/>as<sp/>xs:string){</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/>if(not(empty(map:get($local:processed-external-links,<sp/>$x))))</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/><sp/><sp/>exit<sp/>returning<sp/>false();</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{}</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/>fn:trace($x,<sp/>&quot;HEAD<sp/>external<sp/>link&quot;);</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/>map:insert($local:processed-external-links,<sp/>&lt;FROM&gt;{$baseUri}&lt;/FROM&gt;,<sp/>$x);</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/>variable<sp/>$http-call:=();</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/>try{</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$http-call:=http:send-request(&lt;httpsch:request<sp/>method=&quot;HEAD&quot;<sp/>href=&quot;{$x}&quot;/&gt;,<sp/>(),<sp/>());</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((count($http-call)<sp/>ge<sp/>1)<sp/>and<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn:not($http-call[1]/@status<sp/>eq<sp/>200))<sp/>then</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$http-call:=http:send-request(&lt;httpsch:request<sp/>method=&quot;GET&quot;<sp/>href=&quot;{$x}&quot;/&gt;,<sp/>(),<sp/>());</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>();</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/>catch<sp/>*<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/>local:map-insert-result($local:processed-external-links,<sp/>$x,<sp/>$http-call);<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="comment">};</highlight></codeline>
<codeline lineno="148"><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">declare<sp/>function<sp/>local:tidy-options()</highlight></codeline>
<codeline lineno="150"><highlight class="comment">{&lt;options<sp/>xmlns=&quot;http://www.zorba-xquery.com/modules/converters/html-options&quot;<sp/>&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tidyParam<sp/>name=&quot;output-xml&quot;<sp/>value=&quot;yes&quot;<sp/>/&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tidyParam<sp/>name=&quot;doctype&quot;<sp/>value=&quot;omit&quot;<sp/>/&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tidyParam<sp/>name=&quot;quote-nbsp&quot;<sp/>value=&quot;no&quot;<sp/>/&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tidyParam<sp/>name=&quot;char-encoding&quot;<sp/>value=&quot;utf8&quot;<sp/>/&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tidyParam<sp/>name=&quot;newline&quot;<sp/>value=&quot;LF&quot;<sp/>/&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tidyParam<sp/>name=&quot;tidy-mark&quot;<sp/>value=&quot;no&quot;<sp/>/&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tidyParam<sp/>name=&quot;new-inline-tags&quot;<sp/>value=&quot;nav<sp/>header<sp/>section<sp/>article<sp/>footer<sp/>xqdoc:custom<sp/>d<sp/>c<sp/>options<sp/>json-param&quot;<sp/>/&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/options&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="comment">};</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">declare<sp/><sp/>%an:sequential<sp/>function<sp/>local:process-internal-link($x<sp/>as<sp/>xs:string,<sp/>$baseUri<sp/>as<sp/>xs:string,<sp/>$n<sp/>as<sp/>xs:integer){</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>(:<sp/>if($n=3)<sp/>then<sp/>exit<sp/>returning<sp/>();<sp/>else<sp/>{}<sp/>:)</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if(not(empty(map:get($local:processed-internal-links,<sp/>$x))))</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>exit<sp/>returning<sp/>false();</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{}</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>fn:trace($x,<sp/>&quot;GET<sp/>internal<sp/>link&quot;);</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>map:insert($local:processed-internal-links,<sp/>&lt;FROM&gt;{$baseUri}&lt;/FROM&gt;,<sp/>$x);</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>$http-call:=();</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try{</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$http-call:=http:send-request(&lt;httpsch:request<sp/>method=&quot;GET&quot;<sp/>href=&quot;{$x}&quot;/&gt;,<sp/>(),<sp/>());</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catch<sp/>*<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>not(local:alive($http-call)))</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>{<sp/>local:map-insert-result($local:processed-internal-links,<sp/>$x,<sp/>$http-call);<sp/>exit<sp/>returning<sp/>();}</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{}</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(not<sp/>(local:get-media-type($http-call[1])<sp/>=<sp/>&quot;text/html&quot;))</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>{<sp/>local:map-insert-result($local:processed-internal-links,<sp/>$x,<sp/>$http-call);<sp/>exit<sp/>returning<sp/>();}</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{}</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>$string-content<sp/>:=<sp/>string($http-call[2]);</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>$content:=();</highlight></codeline>
<codeline lineno="183"><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try{</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$content:=html:parse($string-content,local:tidy-options()<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local:map-insert-result($local:processed-internal-links,<sp/>$x,<sp/>$http-call);<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catch<sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map:insert($local:processed-internal-links,<sp/>(&lt;MESSAGE&gt;{concat(&quot;cannot<sp/>tidy:<sp/>&quot;,<sp/>$err:description)}&lt;/MESSAGE&gt;,</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;RESULT&gt;broken&lt;/RESULT&gt;),<sp/>$x);<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try{</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$content:=parse-xml:parse-xml-fragment<sp/>($string-content,<sp/>&quot;&quot;);</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catch<sp/>*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>map:insert($local:processed-internal-links,<sp/>&lt;MESSAGE&gt;{concat(&quot;cannot<sp/>parse:<sp/>&quot;,<sp/>$err:description)}&lt;/MESSAGE&gt;,<sp/>$x);}</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>$links<sp/>:=();</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(empty($content))</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>$links:=local:get-out-links-unparsed($string-content,<sp/>fn:trace($x,<sp/>&quot;parse<sp/>with<sp/>regex,<sp/>because<sp/>tidy<sp/>failed&quot;));</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>$links:=local:get-out-links-parsed($content,<sp/>$x);</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>$l<sp/>in<sp/>$links</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/><sp/>local:process-link($l,<sp/>$x,<sp/>$n+1);</highlight></codeline>
<codeline lineno="204"><highlight class="comment">};</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment">declare<sp/>function<sp/>local:print-results()<sp/>as<sp/>element()*</highlight></codeline>
<codeline lineno="210"><highlight class="comment">{</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>$x<sp/>in<sp/>map:keys($local:processed-internal-links)/map:attribute/@value/string()</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>&lt;INTERNAL&gt;&lt;LINK&gt;{$x}&lt;/LINK&gt;{map:get($local:processed-internal-links,$x)}&lt;/INTERNAL&gt;,<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>for<sp/>$x<sp/>in<sp/>map:keys($local:processed-external-links)/map:attribute/@value/string()</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>return<sp/>&lt;EXTERNAL&gt;&lt;LINK&gt;{$x}&lt;/LINK&gt;{map:get($local:processed-external-links,$x)}&lt;/EXTERNAL&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="comment">};</highlight></codeline>
<codeline lineno="216"><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment">(:==========================================</highlight></codeline>
<codeline lineno="218"><highlight class="comment">===========================================:)</highlight></codeline>
<codeline lineno="219"><highlight class="comment"></highlight></codeline>
<codeline lineno="220"><highlight class="comment">variable<sp/>$uri:=<sp/>$top-uri;</highlight></codeline>
<codeline lineno="221"><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">variable<sp/>$result;</highlight></codeline>
<codeline lineno="223"><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment">local:create-containers();</highlight></codeline>
<codeline lineno="225"><highlight class="comment">local:process-link($uri,<sp/>&quot;&quot;,<sp/>1);</highlight></codeline>
<codeline lineno="226"><highlight class="comment">$result:=local:print-results()<sp/>;</highlight></codeline>
<codeline lineno="227"><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment">local:delete-containers();</highlight></codeline>
<codeline lineno="229"><highlight class="comment"></highlight></codeline>
<codeline lineno="230"><highlight class="comment">file:write(fn:resolve-uri(&quot;link_crawler_result.xml&quot;),</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;result&gt;{$result}&lt;/result&gt;,</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;output:serialization-parameters&gt;</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;output:indent<sp/>value=&quot;yes&quot;/&gt;</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/output:serialization-parameters&gt;)</highlight></codeline>
<codeline lineno="235"><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="238"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/doc/zorba/link_crawler2.dox"/>
  </compounddef>
</doxygen>
