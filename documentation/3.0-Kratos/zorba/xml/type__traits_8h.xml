<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="type__traits_8h" kind="file">
    <compoundname>type_traits.h</compoundname>
    <includes local="no">zorba/config.h</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="ztd_8h" local="yes">ztd.h</includedby>
    <includedby refid="unique__ptr_8h" local="yes">unique_ptr.h</includedby>
    <includedby refid="error__util_8h" local="no">error_util.h</includedby>
    <includedby refid="hexbinary__util_8h" local="no">hexbinary_util.h</includedby>
    <incdepgraph>
      <node id="2327">
        <label>type_traits.h</label>
        <link refid="type_traits.h"/>
        <childnode refid="2328" relation="include">
        </childnode>
        <childnode refid="2329" relation="include">
        </childnode>
      </node>
      <node id="2329">
        <label>type_traits</label>
      </node>
      <node id="2328">
        <label>zorba/config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2345">
        <label>xquery_stack_trace.h</label>
        <link refid="xquery__stack__trace_8h"/>
        <childnode refid="2338" relation="include">
        </childnode>
      </node>
      <node id="2342">
        <label>diagnostic.h</label>
        <link refid="diagnostic_8h"/>
        <childnode refid="2332" relation="include">
        </childnode>
        <childnode refid="2341" relation="include">
        </childnode>
        <childnode refid="2343" relation="include">
        </childnode>
        <childnode refid="2339" relation="include">
        </childnode>
      </node>
      <node id="2339">
        <label>xquery_warning.h</label>
        <link refid="xquery__warning_8h"/>
        <childnode refid="2340" relation="include">
        </childnode>
      </node>
      <node id="2341">
        <label>qname.h</label>
        <link refid="qname_8h"/>
        <childnode refid="2342" relation="include">
        </childnode>
        <childnode refid="2333" relation="include">
        </childnode>
        <childnode refid="2344" relation="include">
        </childnode>
        <childnode refid="2345" relation="include">
        </childnode>
      </node>
      <node id="2354">
        <label>error_util.h</label>
        <link refid="error__util_8h"/>
        <childnode refid="2355" relation="include">
        </childnode>
      </node>
      <node id="2337">
        <label>zorba.h</label>
        <link refid="zorba_8h"/>
        <childnode refid="2336" relation="include">
        </childnode>
      </node>
      <node id="2335">
        <label>zorba_exception.h</label>
        <link refid="zorba__exception_8h"/>
        <childnode refid="2336" relation="include">
        </childnode>
        <childnode refid="2338" relation="include">
        </childnode>
      </node>
      <node id="2333">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="2334" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
      </node>
      <node id="2352">
        <label>xquery_functions.h</label>
        <link refid="xquery__functions_8h"/>
      </node>
      <node id="2351">
        <label>transcode_stream.h</label>
        <link refid="transcode__stream_8h"/>
      </node>
      <node id="2330">
        <label>type_traits.h</label>
        <link refid="type_traits.h"/>
        <childnode refid="2331" relation="include">
        </childnode>
        <childnode refid="2346" relation="include">
        </childnode>
        <childnode refid="2354" relation="include">
        </childnode>
        <childnode refid="2356" relation="include">
        </childnode>
      </node>
      <node id="2348">
        <label>thesaurus.h</label>
        <link refid="thesaurus_8h"/>
        <childnode refid="2336" relation="include">
        </childnode>
      </node>
      <node id="2332">
        <label>diagnostic.h</label>
        <link refid="internal_2diagnostic_8h"/>
        <childnode refid="2333" relation="include">
        </childnode>
      </node>
      <node id="2356">
        <label>hexbinary_util.h</label>
        <link refid="hexbinary__util_8h"/>
      </node>
      <node id="2353">
        <label>base64_util.h</label>
        <link refid="base64__util_8h"/>
      </node>
      <node id="2343">
        <label>system_diagnostic.h</label>
        <link refid="system__diagnostic_8h"/>
        <childnode refid="2342" relation="include">
        </childnode>
      </node>
      <node id="2334">
        <label>user_exception.h</label>
        <link refid="user__exception_8h"/>
      </node>
      <node id="2347">
        <label>stemmer.h</label>
        <link refid="stemmer_8h"/>
      </node>
      <node id="2338">
        <label>xquery_exception.h</label>
        <link refid="xquery__exception_8h"/>
        <childnode refid="2334" relation="include">
        </childnode>
        <childnode refid="2339" relation="include">
        </childnode>
      </node>
      <node id="2340">
        <label>diagnostic_handler.h</label>
        <link refid="diagnostic__handler_8h"/>
        <childnode refid="2337" relation="include">
        </childnode>
      </node>
      <node id="2336">
        <label>static_context.h</label>
        <link refid="static__context_8h"/>
        <childnode refid="2337" relation="include">
        </childnode>
      </node>
      <node id="2350">
        <label>uri_resolvers.h</label>
        <link refid="uri__resolvers_8h"/>
        <childnode refid="2348" relation="include">
        </childnode>
      </node>
      <node id="2346">
        <label>unique_ptr.h</label>
        <link refid="unique__ptr_8h"/>
        <childnode refid="2347" relation="include">
        </childnode>
        <childnode refid="2348" relation="include">
        </childnode>
        <childnode refid="2349" relation="include">
        </childnode>
        <childnode refid="2350" relation="include">
        </childnode>
        <childnode refid="2351" relation="include">
        </childnode>
        <childnode refid="2352" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
      </node>
      <node id="2331">
        <label>ztd.h</label>
        <link refid="ztd_8h"/>
        <childnode refid="2332" relation="include">
        </childnode>
        <childnode refid="2341" relation="include">
        </childnode>
        <childnode refid="2343" relation="include">
        </childnode>
        <childnode refid="2346" relation="include">
        </childnode>
        <childnode refid="2347" relation="include">
        </childnode>
        <childnode refid="2348" relation="include">
        </childnode>
        <childnode refid="2349" relation="include">
        </childnode>
        <childnode refid="2350" relation="include">
        </childnode>
        <childnode refid="2353" relation="include">
        </childnode>
        <childnode refid="2354" relation="include">
        </childnode>
        <childnode refid="2355" relation="include">
        </childnode>
        <childnode refid="2356" relation="include">
        </childnode>
      </node>
      <node id="2355">
        <label>fs_util.h</label>
        <link refid="fs__util_8h"/>
      </node>
      <node id="2344">
        <label>diagnostic_list.h</label>
        <link refid="diagnostic__list_8h"/>
      </node>
      <node id="2349">
        <label>tokenizer.h</label>
        <link refid="tokenizer_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structzorba_1_1internal_1_1bool__value" prot="public">zorba::internal::bool_value</innerclass>
    <innerclass refid="structstd_1_1enable__if" prot="public">std::enable_if</innerclass>
    <innerclass refid="structstd_1_1enable__if_3_01true_00_01T_01_4" prot="public">std::enable_if&lt; true, T &gt;</innerclass>
    <innerclass refid="structzorba_1_1internal_1_1is__movable" prot="public">zorba::internal::is_movable</innerclass>
    <innerclass refid="structzorba_1_1internal_1_1is__movable_3_01rv_3_01T_01_4_01_4" prot="public">zorba::internal::is_movable&lt; rv&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classzorba_1_1internal_1_1rv" prot="public">zorba::internal::rv</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
    <innernamespace refid="namespacezorba">zorba</innernamespace>
    <innernamespace refid="namespacezorba_1_1internal">zorba::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006-2008<sp/>The<sp/>FLWOR<sp/>Foundation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZORBA_INTERNAL_TYPE_TRAITS_H</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ZORBA_INTERNAL_TYPE_TRAITS_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zorba/config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ZORBA_TR1_IN_TR1_SUBDIRECTORY</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;tr1/type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZORBA_TR1_IN_TR1_SUBDIRECTORY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="28"><highlight class="comment">///////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZORBA_HAVE_ENABLE_IF</highlight></codeline>
<codeline lineno="31" refid="namespacestd" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="33"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>\internal</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Define<sp/>our<sp/>own<sp/>version<sp/>of<sp/>\c<sp/>enable_if<sp/>since<sp/>g++<sp/>4.2.1<sp/>(the<sp/>version<sp/>that</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>comes<sp/>with<sp/>Xcode<sp/>3.x)<sp/>doesn&apos;t<sp/>have<sp/>\c<sp/>enable_if.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="39" refid="structstd_1_1enable__if" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstd_1_1enable__if" kindref="compound">enable_if</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>\internal</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>Specialization<sp/>of<sp/>\c<sp/>enable_if<sp/>for<sp/>the<sp/>\c<sp/>true<sp/>case.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="47" refid="structstd_1_1enable__if_3_01true_00_01T_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstd_1_1enable__if" kindref="compound">enable_if</ref>&lt;true,T&gt;<sp/>{</highlight></codeline>
<codeline lineno="48" refid="structstd_1_1enable__if_3_01true_00_01T_01_4_1a393d6c819541dce0cd0d1afcec0ba55d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structstd_1_1enable__if_3_01true_00_01T_01_4_1a393d6c819541dce0cd0d1afcec0ba55d" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>std</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZORBA_HAVE_ENABLE_IF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">///////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZORBA_HAVE_UNIQUE_PTR</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">zorba<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>\internal</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>Dummy<sp/>rvalue<sp/>class<sp/>used<sp/>by<sp/>unique_ptr<sp/>to<sp/>prevent<sp/>implicit<sp/>copying.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="65" refid="classzorba_1_1internal_1_1rv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classzorba_1_1internal_1_1rv" kindref="compound">rv</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>T<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1internal_1_1rv" kindref="compound">rv</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>~<ref refid="classzorba_1_1internal_1_1rv" kindref="compound">rv</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1internal_1_1rv" kindref="compound">rv</ref>(<sp/><ref refid="classzorba_1_1internal_1_1rv" kindref="compound">rv</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1internal_1_1rv" kindref="compound">rv</ref>&amp;<sp/>operator=(<sp/><ref refid="classzorba_1_1internal_1_1rv" kindref="compound">rv</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>struct<sp/>and<sp/>friend<sp/>declaration<sp/>below<sp/>eliminate<sp/>a<sp/>&quot;class<sp/>rv&lt;T&gt;<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>defines<sp/>a<sp/>private<sp/>destructor<sp/>and<sp/>has<sp/>no<sp/>friends&quot;<sp/>warning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classzorba_1_1internal_1_1rv_1aa7b1e6068831fa0ef4de12026e214915" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classzorba_1_1internal_1_1rv_1aa7b1e6068831fa0ef4de12026e214915" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classzorba_1_1internal_1_1rv_1aa7b1e6068831fa0ef4de12026e214915" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="79" refid="structzorba_1_1internal_1_1bool__value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzorba_1_1internal_1_1bool__value" kindref="compound">bool_value</ref><sp/>{</highlight></codeline>
<codeline lineno="80" refid="structzorba_1_1internal_1_1bool__value_1a4200381d9c2f96d3d797a8459de2d1d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structzorba_1_1internal_1_1bool__value_1a4200381d9c2f96d3d797a8459de2d1d1" kindref="member">value</ref><sp/>=<sp/>B;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="84" refid="structzorba_1_1internal_1_1is__movable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzorba_1_1internal_1_1is__movable" kindref="compound">is_movable</ref><sp/>:<sp/><ref refid="structzorba_1_1internal_1_1bool__value" kindref="compound">bool_value</ref>&lt;ZORBA_TR1_NS::is_convertible&lt;T,rv&lt;T&gt;&amp;&gt;::value&gt;<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="88" refid="structzorba_1_1internal_1_1is__movable_3_01rv_3_01T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzorba_1_1internal_1_1is__movable" kindref="compound">is_movable</ref>&lt;<sp/><ref refid="classzorba_1_1internal_1_1rv" kindref="compound">rv</ref>&lt;T&gt;<sp/>&gt;<sp/>:<sp/><ref refid="structzorba_1_1internal_1_1bool__value" kindref="compound">bool_value</ref>&lt;false&gt;<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>zorba</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZORBA_HAVE_UNIQUE_PTR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment">///////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZORBA_INTERNAL_TYPE_TRAITS_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vim:set<sp/>et<sp/>sw=2<sp/>ts=2:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/include/zorba/internal/type_traits.h"/>
  </compounddef>
</doxygen>
