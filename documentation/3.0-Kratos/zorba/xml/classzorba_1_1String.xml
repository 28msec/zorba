<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classzorba_1_1String" kind="class" prot="public">
    <compoundname>zorba::String</compoundname>
    <includes refid="zorba__string_8h" local="no">zorba/zorba_string.h</includes>
    <innerclass refid="structzorba_1_1String_1_1string__storage__type" prot="private">zorba::String::string_storage_type</innerclass>
    <innerclass refid="structzorba_1_1String_1_1zstring__ptr" prot="private">zorba::String::zstring_ptr</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classzorba_1_1String_1a30d5a0335733048de4d3fb5da65ff78c" prot="public" static="no">
        <type>std::allocator&lt; <ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref> &gt;</type>
        <definition>typedef std::allocator&lt;value_type&gt; zorba::String::allocator_type</definition>
        <argsstring></argsstring>
        <name>allocator_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="36" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1a943400c3ba7bf02f26dbc3c85ee5b26c" prot="public" static="no">
        <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
        <definition>typedef const_pointer zorba::String::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="46" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" prot="public" static="no">
        <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref> const *</type>
        <definition>typedef value_type const* zorba::String::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="41" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1ad259ae9c5c0fee907ad864884f34d1d1" prot="public" static="no">
        <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref> const &amp;</type>
        <definition>typedef value_type const&amp; zorba::String::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="43" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1a6f5fd0179bbb3da6b97413f2c905cdf3" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classzorba_1_1String_1a943400c3ba7bf02f26dbc3c85ee5b26c" kindref="member">const_iterator</ref> &gt;</type>
        <definition>typedef std::reverse_iterator&lt;const_iterator&gt; zorba::String::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="48" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1ace69b057c9c7756beb20f2148f663751" prot="public" static="no">
        <type>allocator_type::difference_type</type>
        <definition>typedef allocator_type::difference_type zorba::String::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="37" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" prot="public" static="no">
        <type><ref refid="classzorba_1_1String_1ac76228f11d11da225399d83c5dd7b3f4" kindref="member">pointer</ref></type>
        <definition>typedef pointer zorba::String::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="45" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1ac76228f11d11da225399d83c5dd7b3f4" prot="public" static="no">
        <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref> *</type>
        <definition>typedef value_type* zorba::String::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="40" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1abda1af11f0798c70f7448c0ac02001e1" prot="public" static="no">
        <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref> &amp;</type>
        <definition>typedef value_type&amp; zorba::String::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="42" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1adcb2f121b303280b4bd8c55bc800e8f7" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref> &gt;</type>
        <definition>typedef std::reverse_iterator&lt;iterator&gt; zorba::String::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="47" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" prot="public" static="no">
        <type>allocator_type::size_type</type>
        <definition>typedef allocator_type::size_type zorba::String::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="38" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1accf63404b1b45360fd5ef0d44c77fdee" prot="public" static="no">
        <type>std::char_traits&lt; <ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref> &gt;</type>
        <definition>typedef std::char_traits&lt;value_type&gt; zorba::String::traits_type</definition>
        <argsstring></argsstring>
        <name>traits_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="35" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" prot="public" static="no">
        <type>char</type>
        <definition>typedef char zorba::String::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="34" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" prot="public" static="yes" mutable="no">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref> const</type>
        <definition>size_type const zorba::String::npos</definition>
        <argsstring></argsstring>
        <name>npos</name>
        <initializer> static_cast&lt;<ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref>&gt;( -1 )</initializer>
        <briefdescription>
<para>The special value used to denote either (a) the maximum possible number as input or (b) &quot;not found&quot; as a result. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="54" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classzorba_1_1String_1a48bfc9a04c38c2dc86608ea63cd0c158" prot="private" static="no" mutable="no">
        <type>string_storage_type</type>
        <definition>string_storage_type zorba::String::string_storage_</definition>
        <argsstring></argsstring>
        <name>string_storage_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1285" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="1285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classzorba_1_1String_1a15480fef7755ac84b34897c71df0e82a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC <ref refid="classzorba_1_1String" kindref="compound">String</ref></type>
        <definition>ZORBA_DLL_PUBLIC String operator+</definition>
        <argsstring>(String const &amp;, String const &amp;)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1311"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1ab2931bd571fc2b461c3ae7e81f774ae9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC <ref refid="classzorba_1_1String" kindref="compound">String</ref></type>
        <definition>ZORBA_DLL_PUBLIC String operator+</definition>
        <argsstring>(String const &amp;, std::string const &amp;)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1312"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a4b9ff7560be2c1e4489914f7ba2bbf62" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC <ref refid="classzorba_1_1String" kindref="compound">String</ref></type>
        <definition>ZORBA_DLL_PUBLIC String operator+</definition>
        <argsstring>(String const &amp;, const_pointer)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1313"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a0758629d6c3e1bfdc964913d4567bded" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC <ref refid="classzorba_1_1String" kindref="compound">String</ref></type>
        <definition>ZORBA_DLL_PUBLIC String operator+</definition>
        <argsstring>(std::string const &amp;, String const &amp;)</argsstring>
        <name>operator+</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1314"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a46237fa44bcecede37c62f98a5a16528" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC <ref refid="classzorba_1_1String" kindref="compound">String</ref></type>
        <definition>ZORBA_DLL_PUBLIC String operator+</definition>
        <argsstring>(const_pointer, String const &amp;)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1315"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a56ec36d0b3b24ed888c4e9b030d7fe55" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;</definition>
        <argsstring>(String const &amp;, String const &amp;)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1299"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1ae3bddaa48ce3ac08f8213e632a72c451" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;</definition>
        <argsstring>(String const &amp;, std::string const &amp;)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1300"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a8d6b30fa8e000617cfec36eca7e8adfe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;</definition>
        <argsstring>(String const &amp;, const_pointer)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1301"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a0f46cd8f02425f93fa60651281515f31" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;</definition>
        <argsstring>(std::string const &amp;, String const &amp;)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1302"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a753e8869e3addb8017be475a5ef10fd3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;</definition>
        <argsstring>(const_pointer, String const &amp;)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1303"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a343191e7da6e1829349b8bb1bc37d096" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC std::ostream &amp;</type>
        <definition>ZORBA_DLL_PUBLIC std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, String const &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>o</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1318"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a23c8492cd83fb82e33224f21fd4fc821" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;=</definition>
        <argsstring>(String const &amp;, String const &amp;)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1305"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1ad39dbd50df05358bae787292e0b2b9ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;=</definition>
        <argsstring>(String const &amp;, std::string const &amp;)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1306"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1abda427eecdd8eebe42e9348186f305e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;=</definition>
        <argsstring>(String const &amp;, const_pointer)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1307"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1ab46c2ccd519b1dd03f97bba30db150d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;=</definition>
        <argsstring>(std::string const &amp;, String const &amp;)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>std::string const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1308"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a120d60450650e775eb815cdd1977a7c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator&lt;=</definition>
        <argsstring>(const_pointer, String const &amp;)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1309"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a687ecaa8514006137b96abd43955763f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator==</definition>
        <argsstring>(String const &amp;, String const &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1295"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1afe6c05bc9a077fe63923c6b3fe3da861" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator==</definition>
        <argsstring>(String const &amp;, std::string const &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1296"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a353c5b09b55a2c30f21973acc309994d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ZORBA_DLL_PUBLIC bool</type>
        <definition>ZORBA_DLL_PUBLIC bool operator==</definition>
        <argsstring>(String const &amp;, const_pointer)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <defname>s1</defname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <defname>s2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1297"/>
      </memberdef>
      <memberdef kind="friend" id="classzorba_1_1String_1a3e0633ac5ec941d1abf1a7b5b6ffce25" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Unmarshaller</definition>
        <argsstring></argsstring>
        <name>Unmarshaller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1320" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="1320" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classzorba_1_1String_1aa6206b0a46293ef028deab1278fcdf15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::append</definition>
        <argsstring>(String const &amp;s)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Appends the given string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="235"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a8ad16d6f1fed054e2472bf58ea35c074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::append</definition>
        <argsstring>(String const &amp;s, size_type s_pos, size_type s_n)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Appends a substring of the given string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to append. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position in <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="245"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a46bce915b9fd5de5e50c14fe395f5f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::append</definition>
        <argsstring>(std::string const &amp;s)</argsstring>
        <name>append</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Appends the given string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="253"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1abd8af3a13f0dc94ec8803a53adee3072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::append</definition>
        <argsstring>(std::string const &amp;s, size_type s_pos, size_type s_n)</argsstring>
        <name>append</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Appends a substring of the given string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to append. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position in <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="263"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1acf7334fdec4e87a273196a8281dfe074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::append</definition>
        <argsstring>(const_pointer s)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Appends the given C string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="271"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a92e403160059a9516d260239517f286f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::append</definition>
        <argsstring>(const_pointer s, size_type s_n)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Appends the given C string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The C string to append. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="280"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a4c6056a27820ff19bc63cdd654e3805b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::append</definition>
        <argsstring>(size_type n, value_type c)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Appends <emphasis>n</emphasis> copies of <emphasis>c</emphasis> to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The numer of copies of <emphasis>c</emphasis> to append. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="289"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a04a32eae572ee3e8d14d5875fdd97929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::assign</definition>
        <argsstring>(String const &amp;s)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Assigns another string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to assign from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="346"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ae45489ea6643c954ae9eb550776e6cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::assign</definition>
        <argsstring>(std::string const &amp;s)</argsstring>
        <name>assign</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Assigns a std::string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to assign from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="354"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ad7a77eda0b780756b8badf4c66d59ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::assign</definition>
        <argsstring>(String const &amp;s, size_type pos, size_type n)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Assigns a substring of a string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to assign from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position withing <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to assign. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="364"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a89a2d417f8f0916bf8766abddcb56665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::assign</definition>
        <argsstring>(std::string const &amp;s, size_type pos, size_type n)</argsstring>
        <name>assign</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Assigns a substring of a std::string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to assign from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position withing <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to assign. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="374"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ae884df0a04e819097948f7b0f63567e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::assign</definition>
        <argsstring>(const_pointer s)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Assigns a C to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string to assign from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="382"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ab081ff5251e91ae284e76167b1c85998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::assign</definition>
        <argsstring>(const_pointer s, size_type n)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Assigns a substring of a C to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The C string to assign from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to assign. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="391"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a491a5664aadba75a7b8bb2da75cfd65f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::assign</definition>
        <argsstring>(size_type n, value_type c)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Assigned <emphasis>n</emphasis> copies of a character to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of copies of the character. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="400"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a25d52ff4cc91d3e87e95c447f8f755f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::assign</definition>
        <argsstring>(const_iterator i, const_iterator j)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a943400c3ba7bf02f26dbc3c85ee5b26c" kindref="member">const_iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a943400c3ba7bf02f26dbc3c85ee5b26c" kindref="member">const_iterator</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Assigns characters from a range of characters [i,j). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="408"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a0b80876b565ccf0714f3f96832740911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1abda1af11f0798c70f7448c0ac02001e1" kindref="member">reference</ref></type>
        <definition>reference zorba::String::at</definition>
        <argsstring>(size_type pos)</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>References a particular character within the string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the character. The index is bounds-checked. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>said character as an l-value. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::out_of_range</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>pos</emphasis> &gt;= <computeroutput><ref refid="classzorba_1_1String_1a1be3687524c6b2a97418f1079daadfd1" kindref="member">size()</ref></computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="209"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aa1079df559aac2b65486b024dba7cda3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
        <definition>value_type zorba::String::at</definition>
        <argsstring>(size_type pos) const </argsstring>
        <name>at</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>References a particular character within the string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the character. The index is bounds-checked. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>said character as an r-value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="217"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a9f544233012b9a44046765ab799c081f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
        <definition>iterator zorba::String::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns a read/write iterator positioned at the first character of the string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1124"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aeb467031ccff08e09f6e5346aa7e5049" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a943400c3ba7bf02f26dbc3c85ee5b26c" kindref="member">const_iterator</ref></type>
        <definition>const_iterator zorba::String::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns a read-only iterator positioned at the first character of the string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1132"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a96b65111db89355b959066ccab039698" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
        <definition>const_pointer zorba::String::c_str</definition>
        <argsstring>() const </argsstring>
        <name>c_str</name>
        <briefdescription>
<para>Gets a pointer to a null-terminated array of characters representing the string&apos;s contents. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said pointer. </para></simplesect>
<simplesect kind="see"><para><ref refid="classzorba_1_1String_1a803668c0585d7f2e6e99c1c1d349038b" kindref="member">data()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1204"/>
        <referencedby refid="namespacezorba_1_1fn_1aec9cbe6bd918c599a9c4584190e3f2a9" compoundref="xquery__functions_8h" startline="222" endline="225">zorba::fn::tokenize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1af5210a3d2702db74e4d02c67e614c41b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::capacity</definition>
        <argsstring>() const </argsstring>
        <name>capacity</name>
        <briefdescription>
<para>Gets the capacity of this string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said capacity. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="172"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a805625d6456064bdda062d2dfe1dc68d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zorba::String::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Erases the string making it empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="527"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ac3c082a19d662ca7fcc4a91d3d397ec8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zorba::String::compare</definition>
        <argsstring>(String const &amp;s) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Compares this string against another. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to compare to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 only if this string &lt; <emphasis>s</emphasis>, 0 only if this string == <emphasis>s</emphasis>, or +1 only if this string &gt; <emphasis>s</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="420"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a66422212aa337820054a6968f90844d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zorba::String::compare</definition>
        <argsstring>(std::string const &amp;s) const </argsstring>
        <name>compare</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Compares this string against another. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to compare to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 only if this string &lt; <emphasis>s</emphasis>, 0 only if this string == <emphasis>s</emphasis>, or +1 only if this string &gt; <emphasis>s</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="430"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ab5a4f1088626dfdeea543ca7ff33acba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zorba::String::compare</definition>
        <argsstring>(const_pointer s) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Compares this string against a C string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string to compare to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 only if this string &lt; <emphasis>s</emphasis>, 0 only if this string == <emphasis>s</emphasis>, or +1 only if this string &gt; <emphasis>s</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="440"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a7655550f45a72ad0ffa8006a9e57ce0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zorba::String::compare</definition>
        <argsstring>(size_type pos, size_type n, String const &amp;s) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Compares a substring of this string against another. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to compare. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to compare to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 only if this string &lt; <emphasis>s</emphasis>, 0 only if this string == <emphasis>s</emphasis>, or +1 only if this string &gt; <emphasis>s</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="452"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ac6aab7c5ab943897021c9b84c205ba84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zorba::String::compare</definition>
        <argsstring>(size_type pos, size_type n, std::string const &amp;s) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Compares a substring of this string against another. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to compare. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to compare to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 only if this string &lt; <emphasis>s</emphasis>, 0 only if this string == <emphasis>s</emphasis>, or +1 only if this string &gt; <emphasis>s</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="464"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a2e25e74a565411c395a8433f975872d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zorba::String::compare</definition>
        <argsstring>(size_type pos, size_type n, const_pointer s) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Compares a substring of this string against a C string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to compare. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string to compare to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 only if this string &lt; <emphasis>s</emphasis>, 0 only if this string == <emphasis>s</emphasis>, or +1 only if this string &gt; <emphasis>s</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="476"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a0f4c837a4b20eb11ca5c52feab65f5b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zorba::String::compare</definition>
        <argsstring>(size_type pos, size_type n, String const &amp;s, size_type s_pos, size_type s_n) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Compares a substring of this string against a substring of another. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to compare. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to compare to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to compare. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 only if this string &lt; <emphasis>s</emphasis>, 0 only if this string == <emphasis>s</emphasis>, or +1 only if this string &gt; <emphasis>s</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="491"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a1e098b7fb53bea8110996f36a74060db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zorba::String::compare</definition>
        <argsstring>(size_type pos, size_type n, std::string const &amp;s, size_type s_pos, size_type s_n) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Compares a substring of this string against a substring of another. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to compare. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to compare to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to compare. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 only if this string &lt; <emphasis>s</emphasis>, 0 only if this string == <emphasis>s</emphasis>, or +1 only if this string &gt; <emphasis>s</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="506"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1afde51ce78b3ca75e2040a78d4e0d925d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int zorba::String::compare</definition>
        <argsstring>(size_type pos, size_type n, const_pointer s, size_type s_n) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Compares a substring of this string against a C string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to compare. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The C string to compare to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to compare. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 only if this string &lt; <emphasis>s</emphasis>, 0 only if this string == <emphasis>s</emphasis>, or +1 only if this string &gt; <emphasis>s</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="520"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aa2d139414d2d4a8d5c9120d97ae1f596" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::copy</definition>
        <argsstring>(pointer buf, size_type n, size_type pos=0) const </argsstring>
        <name>copy</name>
        <param>
          <type><ref refid="classzorba_1_1String_1ac76228f11d11da225399d83c5dd7b3f4" kindref="member">pointer</ref></type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Copies a substring to a C string buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to copy into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to copy. It&apos;s the caller&apos;s responsibility to ensure that the size of <emphasis>buf</emphasis> &lt;= <emphasis>n</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the first character to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of characters actually copied. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::out_of_range</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>pos</emphasis> &gt;= <ref refid="classzorba_1_1String_1a1be3687524c6b2a97418f1079daadfd1" kindref="member">size()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1195"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a803668c0585d7f2e6e99c1c1d349038b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
        <definition>const_pointer zorba::String::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
<para>Gets a pointer to the raw character data comprising the string, not necessarily null-terminated. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said pointer. </para></simplesect>
<simplesect kind="see"><para><ref refid="classzorba_1_1String_1a96b65111db89355b959066ccab039698" kindref="member">c_str()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1213"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ab32c3673a0235d0c843a965e0ee038e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zorba::String::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
<para>Checks whether the string is empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True only if it is. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="179" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aa24a117dc3e0c95446b7d6d53d72d919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
        <definition>iterator zorba::String::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns a read/write iterator positioned at one past the last character of the string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1140"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a6ab16ffe8877997784cb2e720fa21162" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a943400c3ba7bf02f26dbc3c85ee5b26c" kindref="member">const_iterator</ref></type>
        <definition>const_iterator zorba::String::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns a read-only iterator positioned at one past the last character of the string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1148"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a1866ab9e9d181a682d68e185a38473ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::erase</definition>
        <argsstring>(size_type pos=0, size_type n=npos)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Erases the given number of characters starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the first character to erase. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to erase. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a reference to this string. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::out_of_range</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>pos</emphasis> is beyond the end of the string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="537"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aa5744d86029c7a7591aa99862c362e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
        <definition>iterator zorba::String::erase</definition>
        <argsstring>(iterator i)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Erases the character at the given iterator&apos;s position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the position of the character to erase. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new iterator marking the same position (i.e., what becomes the next character). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="546"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a57556d42571556c990f0d84da780ebaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
        <definition>iterator zorba::String::erase</definition>
        <argsstring>(iterator i, iterator j)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Erases a range of characters [i,j). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new iterator marking the same position as <emphasis>i</emphasis>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="555"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a29c02ca220d6417b27fddadea99572b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find</definition>
        <argsstring>(String const &amp;s, size_type pos=0) const </argsstring>
        <name>find</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for the given string starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>s</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="566"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a5370ff82c0bff74dcabc4309f3d96a02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find</definition>
        <argsstring>(std::string const &amp;s, size_type pos=0) const </argsstring>
        <name>find</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for the given string starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>s</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="575"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ad078e0728f7dc1bc19d16942c781fe10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find</definition>
        <argsstring>(const_pointer s, size_type pos=0) const </argsstring>
        <name>find</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for the given string starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>s</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="584"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1afdd5f1995c0ab79927d3427b2024c172" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find</definition>
        <argsstring>(const_pointer s, size_type pos, size_type s_n) const </argsstring>
        <name>find</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Searches this string for the given string starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The C string to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to compare. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>s</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="594"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a115dda64770fbbafbc3a36fbbbd82068" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find</definition>
        <argsstring>(value_type c, size_type pos=0) const </argsstring>
        <name>find</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for the given character staring at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>c</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="604"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a1f1ad0baded674017b2ad15110f65a98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_not_of</definition>
        <argsstring>(String const &amp;s, size_type pos=0) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for any one of the characters not in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters not to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a non-matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="666"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a7ef84aa7b9de247b4184390bf15eb4f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_not_of</definition>
        <argsstring>(std::string const &amp;s, size_type pos=0) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for any one of the characters not in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters not to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a non-matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="676"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a52bb4812c283c9f9bbff11e52b8ee746" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_not_of</definition>
        <argsstring>(const_pointer s, size_type pos=0) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for any one of the characters not in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters not to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a non-matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="686"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1abfee6e9a2420ae410667ee07e3216f6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_not_of</definition>
        <argsstring>(const_pointer s, size_type pos, size_type s_n) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Searches this string for any one of the first <emphasis>s_n</emphasis> characters not in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters not to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to consider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a non-matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="698"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aba295b0f49b71d329e7b422f97484c21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_not_of</definition>
        <argsstring>(value_type c, size_type pos=0) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for any character except the given character starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character not to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of any character except <emphasis>c</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="708"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a267e7e29dd2cc0a05c967c64ceb5261f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_of</definition>
        <argsstring>(String const &amp;s, size_type pos=0) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for any one of the characters in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="614"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a83ecd766f1ea4796c9618a9dbd88fceb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_of</definition>
        <argsstring>(std::string const &amp;s, size_type pos=0) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for any one of the characters in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="624"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a995ce00e8b8248ac50249abe4017717b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_of</definition>
        <argsstring>(const_pointer s, size_type pos=0) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for any one of the characters in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="634"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ac3ef4d090be333ed3d42e6026de96c80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_of</definition>
        <argsstring>(const_pointer s, size_type pos, size_type s_n) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Searches this string for any one of the first <emphasis>s_n</emphasis> characters in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to consider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="646"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a4bdc79af2461533a65baabedaaee09f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_first_of</definition>
        <argsstring>(value_type c, size_type pos=0) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Searches this string for the given character starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>c</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="656"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aad4510ba639b433cf49079e719f3eb1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_not_of</definition>
        <argsstring>(String const &amp;s, size_type pos=npos) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this string backwards for any one of the characters not in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to not search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="769"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a0541de415db05390ac33802d23aceea9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_not_of</definition>
        <argsstring>(std::string const &amp;s, size_type pos=npos) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this string backwards for any one of the characters not in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to not search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="779"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ab61a0e1514f7a5ad2de911b622c2277a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_not_of</definition>
        <argsstring>(const_pointer s, size_type pos=npos) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this string backwards for any one of the characters not in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to not search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="789"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a6d24d8d02414595906fc8ce8bcbcb035" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_not_of</definition>
        <argsstring>(const_pointer s, size_type pos, size_type s_n) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Searches this string backwards for any one of the first <emphasis>s_n</emphasis> characters not in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to not search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to consider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="801"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a1c0f1a4d50e94215b0577dfd3150f8ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_not_of</definition>
        <argsstring>(value_type c, size_type pos=npos) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this string backwards for any character except the given character starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of any character except <emphasis>c</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="811"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a9fb90a6b57cba391cdda415234104121" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_of</definition>
        <argsstring>(String const &amp;s, size_type pos=npos) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this string backwards for any one of the characters in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="718"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a2ec9f8c0ab74f7f761101ce544223f04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_of</definition>
        <argsstring>(std::string const &amp;s, size_type pos=npos) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this string backwards for any one of the characters in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="728"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a7f65123b44e1ed545c3737e0f02e5f92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_of</definition>
        <argsstring>(const_pointer s, size_type pos=npos) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this string backwards for any one of the characters in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="738"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ab1ef2178c2595d07f9aec54249fa9c50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_of</definition>
        <argsstring>(const_pointer s, size_type pos, size_type s_n) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Searches this string backwards for any one of the first <emphasis>s_n</emphasis> characters in <emphasis>s</emphasis> starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The set of characters to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to consider. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of a matching character or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="749"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1addf908cd5ed027b28017094397b5a086" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::find_last_of</definition>
        <argsstring>(value_type c, size_type pos=npos) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this string backwards for the given character starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>c</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="759"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a48fb92578153393c24eddab4b9e81e2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::insert</definition>
        <argsstring>(size_type pos, String const &amp;s)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Inserts the given string into this string at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to insert at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="873"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a228b4f0296bcd35d34b28e6fd80c0fa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::insert</definition>
        <argsstring>(size_type pos, std::string const &amp;s)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Inserts the given string into this string at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to insert at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="882"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ab15e1a14dba99236c50b535ae54c429f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::insert</definition>
        <argsstring>(size_type pos, const_pointer s)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Inserts the given string into this string at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to insert at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated string to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="891"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1acd9ae67ebb7cce8117871ad291d74968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::insert</definition>
        <argsstring>(size_type pos, String const &amp;s, size_type s_pos, size_type s_n)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Inserts a substring of the given string into this string at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to insert at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string to insert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The numer of characters of <emphasis>s</emphasis> to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="904"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1abaa0ad6fdf665f28677f9e7e4d32717b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::insert</definition>
        <argsstring>(size_type pos, std::string const &amp;s, size_type s_pos, size_type s_n)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Inserts a substring of the given string into this string at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to insert at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string to insert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The numer of characters of <emphasis>s</emphasis> to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="917"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ae85daffed6282e5a8eb40873ef76af5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::insert</definition>
        <argsstring>(size_type pos, const_pointer s, size_type s_n)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Inserts a substring of the given string into this string at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to insert at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The C string to insert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The numer of characters of <emphasis>s</emphasis> to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="928"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aa283bc56b273a69a44383b868eaf1cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::insert</definition>
        <argsstring>(size_type pos, size_type n, value_type c)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Inserts <emphasis>n</emphasis> copies of <emphasis>c</emphasis> into this string at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to insert at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of copies of <emphasis>c</emphasis> to insert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="938"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aa676193cd2c270fea5ad2c128ed5c06f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
        <definition>iterator zorba::String::insert</definition>
        <argsstring>(iterator pos, value_type c)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Inserts the given character into this string at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the position within this string to insert at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an iterator positioned at the newly inserted character. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="948"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a223988a7e6892093db561e3aa3bbe4c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zorba::String::insert</definition>
        <argsstring>(iterator pos, size_type n, value_type c)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Inserts <emphasis>n</emphasis> copies of <emphasis>c</emphasis> into this string at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the position within this string to insert at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of copies of <emphasis>c</emphasis> to insert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="958"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a4c0b250d93a1f7b29526cac5840d313f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
<para>Gets the number of characters in this string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of UTF-8 characters. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="188"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a6da78e8d706c543b980e853a7fee351f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::operator+=</definition>
        <argsstring>(String const &amp;s)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Appends the given string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="304" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="304" bodyend="306"/>
        <references refid="namespacezorba_1_1fs_1aaa69709d8ced4b6aa9cc7873f369a832" compoundref="fs__util_8h" startline="549" endline="559">zorba::fs::append</references>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ad64dbacb91864d1199a0dba1b46250d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::operator+=</definition>
        <argsstring>(std::string const &amp;s)</argsstring>
        <name>operator+=</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Appends the given std::string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="314" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="314" bodyend="316"/>
        <references refid="namespacezorba_1_1fs_1aaa69709d8ced4b6aa9cc7873f369a832" compoundref="fs__util_8h" startline="549" endline="559">zorba::fs::append</references>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a95ebba50443b7acdc635611d048513ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::operator+=</definition>
        <argsstring>(const_pointer s)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Appends the given C string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="324" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="324" bodyend="326"/>
        <references refid="namespacezorba_1_1fs_1aaa69709d8ced4b6aa9cc7873f369a832" compoundref="fs__util_8h" startline="549" endline="559">zorba::fs::append</references>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ad4ebfbcab54b6f7426aa13cdf195f23f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::operator+=</definition>
        <argsstring>(value_type c)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Appends the given character to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="334" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="334" bodyend="336"/>
        <references refid="namespacezorba_1_1fs_1aaa69709d8ced4b6aa9cc7873f369a832" compoundref="fs__util_8h" startline="549" endline="559">zorba::fs::append</references>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1abceaf5b90384eac42f9096228b101a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::operator=</definition>
        <argsstring>(String const &amp;s)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Assigns another string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to assign from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="139"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a9d85e6c65b73ff2971249672ef103137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::operator=</definition>
        <argsstring>(std::string const &amp;s)</argsstring>
        <name>operator=</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Assigns a std::string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to assign from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="147"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aefd742f94c258ab5f9850d10c5a6d3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::operator=</definition>
        <argsstring>(const_pointer s)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Assigns a C string to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string to assign from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="155"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a4ce1086dca6262349fdd7a325b9ac321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::operator=</definition>
        <argsstring>(value_type c)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Assigns a character to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to assign. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="163"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1acc2f650cb355de3ae55d444c34aea725" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1ad259ae9c5c0fee907ad864884f34d1d1" kindref="member">const_reference</ref></type>
        <definition>const_reference zorba::String::operator[]</definition>
        <argsstring>(size_type pos) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>References a particular character within the string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the character. The index is not bounds-checked. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>said character as an r-value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="225"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ad210fcf8fbd8837f0b38632168680ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zorba::String::push_back</definition>
        <argsstring>(value_type c)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Appends the given character to this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="296"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a51ea92cd4531616644187ab6407a543a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1adcb2f121b303280b4bd8c55bc800e8f7" kindref="member">reverse_iterator</ref></type>
        <definition>reverse_iterator zorba::String::rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Returns a read/write reverse iterator positioned at the first character of the reversed string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1156"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a9e79c70591887447ce7de62269c482fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a6f5fd0179bbb3da6b97413f2c905cdf3" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator zorba::String::rbegin</definition>
        <argsstring>() const </argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Returns a read-only reverse iterator positioned at the first character of the reversed string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1164"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a1ea3723719c921f12aa802e5538a0c6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1adcb2f121b303280b4bd8c55bc800e8f7" kindref="member">reverse_iterator</ref></type>
        <definition>reverse_iterator zorba::String::rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <briefdescription>
<para>Returns a read/write reverse iterator positioned at one past the last character of the reversed string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1172"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a4f6a534822c74163fd410c6b7891cd8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a6f5fd0179bbb3da6b97413f2c905cdf3" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator zorba::String::rend</definition>
        <argsstring>() const </argsstring>
        <name>rend</name>
        <briefdescription>
<para>Returns a read-only reverse iterator positioned at one past the last character of the reversed string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>said iterator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1180"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a06ce1eb8f55d6270087c4a32cc9315cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(size_type pos, size_type n, String const &amp;s)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Replaces <emphasis>n</emphasis> characters of this string starting at the given position with the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to replace at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to replace. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The replacement string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="971"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a8c8322e147abe48a6d3edb408e98e05c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(size_type pos, size_type n, std::string const &amp;s)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Replaces <emphasis>n</emphasis> characters of this string starting at the given position with the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to replace at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to replace. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The replacement string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="982"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a25faa20749834da38bbc950e5b0dd743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(size_type pos, size_type n, const_pointer s)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Replaces <emphasis>n</emphasis> characters of this string starting at the given position with the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to replace at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to replace. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated replacement C string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="993"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a9fc8ac3462921755b45d068c26cd488c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(size_type pos, size_type n, String const &amp;s, size_type s_pos, size_type s_n)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Replaces <emphasis>n</emphasis> characters of this string starting at the given position with a substring of the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to replace at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to replace. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The replacement string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position in <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1007"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a78bb24dec9b729ad39e99f27b97defdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(size_type pos, size_type n, std::string const &amp;s, size_type s_pos, size_type s_n)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Replaces <emphasis>n</emphasis> characters of this string starting at the given position with a substring of the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to replace at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to replace. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The replacement string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position in <emphasis>s</emphasis>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1021"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a31258c7ed1d56eb86e5cef6eead313f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(size_type pos, size_type n, const_pointer s, size_type s_n)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Replaces <emphasis>n</emphasis> characters of this string starting at the given position with a substring of the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to replace at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to replace. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The replacement C string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1033"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ad8b3c259c5e71baa3e9e2bf88346bd9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(size_type pos, size_type n, size_type c_n, value_type c)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>c_n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Replaces <emphasis>n</emphasis> characters of this string starting at the given position with <emphasis>c_n</emphasis> copies of <emphasis>c</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position within this string to replace at. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to replace. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of copies of <computeroutput>to</computeroutput> replace with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to replace with. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1045"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a31f451a03dc8153ee94816abc5a487cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(iterator i, iterator j, String const &amp;s)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Replaces the range of characters [i,j) of this string with the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The replacement string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1056"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ae5336b4266dfca42cf7976434f36a8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(iterator i, iterator j, std::string const &amp;s)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Replaces the range of characters [i,j) of this string with the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The replacement string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1067"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a7fe0358a326f2fc8f96fda5cb62b842e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(iterator i, iterator j, const_pointer s)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Replaces the range of characters [i,j) of this string with the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated replacement C string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1078"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ab687599a0e1cf139ba45c9f76e11ab1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(iterator i, iterator j, const_pointer s, size_type s_n)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Replaces the range of characters [i,j) of this string with a substring of the given string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The replacement C string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of <emphasis>s</emphasis> to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1090"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a0e15502af6ebda785721b295f94d2491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(iterator i, iterator j, size_type n, value_type c)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Replaces the range of characters [i,j) of this string with <emphasis>c_n</emphasis> copies of <emphasis>c</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of copies of <computeroutput>to</computeroutput> replace with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to replace with. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1102"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aa71e31ed2f802e679be1c53a4287eb3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::replace</definition>
        <argsstring>(iterator i, iterator j, iterator si, iterator sj)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>si</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" kindref="member">iterator</ref></type>
          <declname>sj</declname>
        </param>
        <briefdescription>
<para>Replaces the range of characters [i,j) of this string with the range of characters [si,sj). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>si</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sj</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1114"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ac257b096e2b08daf4d16c430e153378a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zorba::String::reserve</definition>
        <argsstring>(size_type n)</argsstring>
        <name>reserve</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Attemts to pre-allocated enough memory to contain the given number of bytes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1221"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a5ae5be7c1ef83cc005703323db307ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zorba::String::resize</definition>
        <argsstring>(size_type n, value_type c=value_type())</argsstring>
        <name>resize</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
          <defval><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref>()</defval>
        </param>
        <briefdescription>
<para>Resizes the string to the given number of characters. </para>        </briefdescription>
        <detaileddescription>
<para>If the number &lt; <ref refid="classzorba_1_1String_1a1be3687524c6b2a97418f1079daadfd1" kindref="member">size()</ref>, the string will be truncated; if the number &gt; <ref refid="classzorba_1_1String_1a1be3687524c6b2a97418f1079daadfd1" kindref="member">size()</ref>, the string will be extended and the new elements will be set to <emphasis>c</emphasis>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Characters to fill any new positions. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1232"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a93e53893af8e5c4dadb66e01f49af139" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::rfind</definition>
        <argsstring>(String const &amp;s, size_type pos=npos) const </argsstring>
        <name>rfind</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this backwards string for the given string starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>s</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="821"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a3722dad02236e91e58a341da480f73d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::rfind</definition>
        <argsstring>(std::string const &amp;s, size_type pos=npos) const </argsstring>
        <name>rfind</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this backwards string for the given string starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>s</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="831"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ac706cb912dabd92063da941fe4255f86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::rfind</definition>
        <argsstring>(const_pointer s, size_type pos=npos) const </argsstring>
        <name>rfind</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this backwards string for the given string starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>s</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="841"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a08e274e09394184e457fba0bf2fd9be1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::rfind</definition>
        <argsstring>(const_pointer s, size_type pos, size_type s_n) const </argsstring>
        <name>rfind</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>s_n</declname>
        </param>
        <briefdescription>
<para>Searches this string backwards for the given string starting at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The C string to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to compare. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>s</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="852"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a09858a4b96ee03347c2d9f00a49a4e76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::rfind</definition>
        <argsstring>(value_type c, size_type pos=npos) const </argsstring>
        <name>rfind</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Searches this string backwards for the given character staring at the given position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position within this string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the offset of <emphasis>c</emphasis> or <computeroutput>npos</computeroutput> if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="862"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a1be3687524c6b2a97418f1079daadfd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
        <definition>size_type zorba::String::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Gets the number of characters in this string. </para>        </briefdescription>
        <detaileddescription>
<para>(This is a synonym for <ref refid="classzorba_1_1String_1a4c0b250d93a1f7b29526cac5840d313f" kindref="member">length()</ref>.)</para><para><simplesect kind="return"><para>The number of UTF-8 characters. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="196" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a562c464bbe75f0ed908c99651a104419" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string zorba::String::str</definition>
        <argsstring>() const </argsstring>
        <name>str</name>
        <briefdescription>
<para>Gets a <computeroutput>std::string</computeroutput> equivalent of this string. </para>        </briefdescription>
        <detaileddescription>
<para>(There intentionally is no <computeroutput>operator std::string() const</computeroutput> since its convenient use would mask the expense of creating a new <computeroutput>std::string</computeroutput>.) This function is an extension to the std::string API.</para><para><simplesect kind="return"><para>said <computeroutput>std::string</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1243"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1afbe6334ab580d107be7e3fdc999e8f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>()</argsstring>
        <name>String</name>
        <briefdescription>
<para>Constructs an empty string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1abf9f99cd3bca04c197c0b420e2b691bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>(String const &amp;s)</argsstring>
        <name>String</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Copy constructs a new string from an existing string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to copy from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a2a1d4c179b2ad62b626b0fd738872b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>(std::string const &amp;s)</argsstring>
        <name>String</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Constructs a new string from an existing std::string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to copy from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aacffcd33a8f44cdeb37357bec4b6bbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>(const_pointer s)</argsstring>
        <name>String</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Constructs a string from the given C string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The null-terminated C string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a7d1a8ae5b57ad617eb3e2e03ce8e6f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>(String const &amp;s, size_type pos, size_type n=npos)</argsstring>
        <name>String</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Copy constructs a new string from a substring of an existing string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to copy from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the first character to copy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="91"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a23ac28599f27fb664e341064eb2aa6e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>(std::string const &amp;s, size_type pos, size_type n=npos)</argsstring>
        <name>String</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Constructs a new string from a substring of an existing std::string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to copy from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position of the substring. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters of the substring. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="100"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a3d4087349f856e982295826a5e87d029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>(const_pointer s, size_type n)</argsstring>
        <name>String</name>
        <param>
          <type><ref refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" kindref="member">const_pointer</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Constructs a string from the given C string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The C string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="108"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1abc5648a13f4d6b8ad1f13f5080646201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>(size_type n, value_type c)</argsstring>
        <name>String</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" kindref="member">value_type</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructs a new string as <emphasis>n</emphasis> copies of <emphasis>c</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of times to repeat the character. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to repeat. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a5bffa4536bc562eb848fd2e8dde89861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>(const_iterator i, const_iterator j)</argsstring>
        <name>String</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a943400c3ba7bf02f26dbc3c85ee5b26c" kindref="member">const_iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a943400c3ba7bf02f26dbc3c85ee5b26c" kindref="member">const_iterator</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Constructs a string from a range of characters [i,j). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking the first character of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator marking one past the last character of the range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1ac0fcd86560d50a5418fb05de10063e97" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref></type>
        <definition>String zorba::String::substr</definition>
        <argsstring>(size_type pos=0, size_type n=npos) const </argsstring>
        <name>substr</name>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" kindref="member">size_type</ref></type>
          <declname>n</declname>
          <defval><ref refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Creates a new string that is a substring of this string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position in this string for first character of the new string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to extract. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new string. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::out_of_range</parametername>
</parameternamelist>
<parameterdescription>
<para>if <emphasis>pos</emphasis> &gt;= <ref refid="classzorba_1_1String_1a1be3687524c6b2a97418f1079daadfd1" kindref="member">size()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1254"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a76f1304a5bf5236234f8fe1fbae8e0d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zorba::String::swap</definition>
        <argsstring>(String &amp;s)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Swaps the contents of this string with another. </para>        </briefdescription>
        <detaileddescription>
<para>This is an O(1) operation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to swap with. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1262"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1a4af70cd8f3540143d6541fb8b42fc073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::~String</definition>
        <argsstring>()</argsstring>
        <name>~String</name>
        <briefdescription>
<para>Destructs this string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="129"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classzorba_1_1String_1aebca126eece10d7da4e156429eebd722" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classzorba_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; zorba::String::operator=</definition>
        <argsstring>(zstring_ptr)</argsstring>
        <name>operator=</name>
        <param>
          <type>zstring_ptr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1291"/>
      </memberdef>
      <memberdef kind="function" id="classzorba_1_1String_1aab3d2fbb2c2af0a02cc9cae4c3137510" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>zorba::String::String</definition>
        <argsstring>(zstring_ptr)</argsstring>
        <name>String</name>
        <param>
          <type>zstring_ptr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1290"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classzorba_1_1String_1a542817545535ea3398ab7b6c5a462b1e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void zorba::String::size_check</definition>
        <argsstring>()</argsstring>
        <name>size_check</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="1293"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classzorba_1_1Zorba" kindref="compound">Zorba</ref> string class. </para>    </briefdescription>
    <detaileddescription>
<para>Its API is mostly compatible with that of std::string. </para>    </detaileddescription>
    <location file="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" line="32" bodyfile="/home/wcandillon/deadlinks/include/zorba/zorba_string.h" bodystart="32" bodyend="1321"/>
    <listofallmembers>
      <member refid="classzorba_1_1String_1a30d5a0335733048de4d3fb5da65ff78c" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>allocator_type</name></member>
      <member refid="classzorba_1_1String_1aa6206b0a46293ef028deab1278fcdf15" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>append</name></member>
      <member refid="classzorba_1_1String_1a8ad16d6f1fed054e2472bf58ea35c074" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>append</name></member>
      <member refid="classzorba_1_1String_1a46bce915b9fd5de5e50c14fe395f5f42" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>append</name></member>
      <member refid="classzorba_1_1String_1abd8af3a13f0dc94ec8803a53adee3072" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>append</name></member>
      <member refid="classzorba_1_1String_1acf7334fdec4e87a273196a8281dfe074" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>append</name></member>
      <member refid="classzorba_1_1String_1a92e403160059a9516d260239517f286f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>append</name></member>
      <member refid="classzorba_1_1String_1a4c6056a27820ff19bc63cdd654e3805b" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>append</name></member>
      <member refid="classzorba_1_1String_1a04a32eae572ee3e8d14d5875fdd97929" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>assign</name></member>
      <member refid="classzorba_1_1String_1ae45489ea6643c954ae9eb550776e6cd9" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>assign</name></member>
      <member refid="classzorba_1_1String_1ad7a77eda0b780756b8badf4c66d59ff1" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>assign</name></member>
      <member refid="classzorba_1_1String_1a89a2d417f8f0916bf8766abddcb56665" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>assign</name></member>
      <member refid="classzorba_1_1String_1ae884df0a04e819097948f7b0f63567e8" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>assign</name></member>
      <member refid="classzorba_1_1String_1ab081ff5251e91ae284e76167b1c85998" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>assign</name></member>
      <member refid="classzorba_1_1String_1a491a5664aadba75a7b8bb2da75cfd65f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>assign</name></member>
      <member refid="classzorba_1_1String_1a25d52ff4cc91d3e87e95c447f8f755f7" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>assign</name></member>
      <member refid="classzorba_1_1String_1a0b80876b565ccf0714f3f96832740911" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>at</name></member>
      <member refid="classzorba_1_1String_1aa1079df559aac2b65486b024dba7cda3" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>at</name></member>
      <member refid="classzorba_1_1String_1a9f544233012b9a44046765ab799c081f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>begin</name></member>
      <member refid="classzorba_1_1String_1aeb467031ccff08e09f6e5346aa7e5049" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>begin</name></member>
      <member refid="classzorba_1_1String_1a96b65111db89355b959066ccab039698" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>c_str</name></member>
      <member refid="classzorba_1_1String_1af5210a3d2702db74e4d02c67e614c41b" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>capacity</name></member>
      <member refid="classzorba_1_1String_1a805625d6456064bdda062d2dfe1dc68d" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>clear</name></member>
      <member refid="classzorba_1_1String_1ac3c082a19d662ca7fcc4a91d3d397ec8" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>compare</name></member>
      <member refid="classzorba_1_1String_1a66422212aa337820054a6968f90844d8" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>compare</name></member>
      <member refid="classzorba_1_1String_1ab5a4f1088626dfdeea543ca7ff33acba" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>compare</name></member>
      <member refid="classzorba_1_1String_1a7655550f45a72ad0ffa8006a9e57ce0f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>compare</name></member>
      <member refid="classzorba_1_1String_1ac6aab7c5ab943897021c9b84c205ba84" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>compare</name></member>
      <member refid="classzorba_1_1String_1a2e25e74a565411c395a8433f975872d6" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>compare</name></member>
      <member refid="classzorba_1_1String_1a0f4c837a4b20eb11ca5c52feab65f5b6" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>compare</name></member>
      <member refid="classzorba_1_1String_1a1e098b7fb53bea8110996f36a74060db" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>compare</name></member>
      <member refid="classzorba_1_1String_1afde51ce78b3ca75e2040a78d4e0d925d" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>compare</name></member>
      <member refid="classzorba_1_1String_1a943400c3ba7bf02f26dbc3c85ee5b26c" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>const_iterator</name></member>
      <member refid="classzorba_1_1String_1aa8ee14c8eaa862982a480a9aeef07af6" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>const_pointer</name></member>
      <member refid="classzorba_1_1String_1ad259ae9c5c0fee907ad864884f34d1d1" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>const_reference</name></member>
      <member refid="classzorba_1_1String_1a6f5fd0179bbb3da6b97413f2c905cdf3" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>const_reverse_iterator</name></member>
      <member refid="classzorba_1_1String_1aa2d139414d2d4a8d5c9120d97ae1f596" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>copy</name></member>
      <member refid="classzorba_1_1String_1a803668c0585d7f2e6e99c1c1d349038b" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>data</name></member>
      <member refid="classzorba_1_1String_1ace69b057c9c7756beb20f2148f663751" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>difference_type</name></member>
      <member refid="classzorba_1_1String_1ab32c3673a0235d0c843a965e0ee038e7" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>empty</name></member>
      <member refid="classzorba_1_1String_1aa24a117dc3e0c95446b7d6d53d72d919" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>end</name></member>
      <member refid="classzorba_1_1String_1a6ab16ffe8877997784cb2e720fa21162" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>end</name></member>
      <member refid="classzorba_1_1String_1a1866ab9e9d181a682d68e185a38473ca" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>erase</name></member>
      <member refid="classzorba_1_1String_1aa5744d86029c7a7591aa99862c362e87" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>erase</name></member>
      <member refid="classzorba_1_1String_1a57556d42571556c990f0d84da780ebaa" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>erase</name></member>
      <member refid="classzorba_1_1String_1a29c02ca220d6417b27fddadea99572b3" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find</name></member>
      <member refid="classzorba_1_1String_1a5370ff82c0bff74dcabc4309f3d96a02" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find</name></member>
      <member refid="classzorba_1_1String_1ad078e0728f7dc1bc19d16942c781fe10" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find</name></member>
      <member refid="classzorba_1_1String_1afdd5f1995c0ab79927d3427b2024c172" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find</name></member>
      <member refid="classzorba_1_1String_1a115dda64770fbbafbc3a36fbbbd82068" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find</name></member>
      <member refid="classzorba_1_1String_1a1f1ad0baded674017b2ad15110f65a98" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_not_of</name></member>
      <member refid="classzorba_1_1String_1a7ef84aa7b9de247b4184390bf15eb4f7" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_not_of</name></member>
      <member refid="classzorba_1_1String_1a52bb4812c283c9f9bbff11e52b8ee746" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_not_of</name></member>
      <member refid="classzorba_1_1String_1abfee6e9a2420ae410667ee07e3216f6a" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_not_of</name></member>
      <member refid="classzorba_1_1String_1aba295b0f49b71d329e7b422f97484c21" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_not_of</name></member>
      <member refid="classzorba_1_1String_1a267e7e29dd2cc0a05c967c64ceb5261f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_of</name></member>
      <member refid="classzorba_1_1String_1a83ecd766f1ea4796c9618a9dbd88fceb" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_of</name></member>
      <member refid="classzorba_1_1String_1a995ce00e8b8248ac50249abe4017717b" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_of</name></member>
      <member refid="classzorba_1_1String_1ac3ef4d090be333ed3d42e6026de96c80" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_of</name></member>
      <member refid="classzorba_1_1String_1a4bdc79af2461533a65baabedaaee09f5" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_first_of</name></member>
      <member refid="classzorba_1_1String_1aad4510ba639b433cf49079e719f3eb1a" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_not_of</name></member>
      <member refid="classzorba_1_1String_1a0541de415db05390ac33802d23aceea9" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_not_of</name></member>
      <member refid="classzorba_1_1String_1ab61a0e1514f7a5ad2de911b622c2277a" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_not_of</name></member>
      <member refid="classzorba_1_1String_1a6d24d8d02414595906fc8ce8bcbcb035" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_not_of</name></member>
      <member refid="classzorba_1_1String_1a1c0f1a4d50e94215b0577dfd3150f8ad" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_not_of</name></member>
      <member refid="classzorba_1_1String_1a9fb90a6b57cba391cdda415234104121" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_of</name></member>
      <member refid="classzorba_1_1String_1a2ec9f8c0ab74f7f761101ce544223f04" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_of</name></member>
      <member refid="classzorba_1_1String_1a7f65123b44e1ed545c3737e0f02e5f92" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_of</name></member>
      <member refid="classzorba_1_1String_1ab1ef2178c2595d07f9aec54249fa9c50" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_of</name></member>
      <member refid="classzorba_1_1String_1addf908cd5ed027b28017094397b5a086" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>find_last_of</name></member>
      <member refid="classzorba_1_1String_1a48fb92578153393c24eddab4b9e81e2e" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>insert</name></member>
      <member refid="classzorba_1_1String_1a228b4f0296bcd35d34b28e6fd80c0fa1" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>insert</name></member>
      <member refid="classzorba_1_1String_1ab15e1a14dba99236c50b535ae54c429f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>insert</name></member>
      <member refid="classzorba_1_1String_1acd9ae67ebb7cce8117871ad291d74968" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>insert</name></member>
      <member refid="classzorba_1_1String_1abaa0ad6fdf665f28677f9e7e4d32717b" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>insert</name></member>
      <member refid="classzorba_1_1String_1ae85daffed6282e5a8eb40873ef76af5e" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>insert</name></member>
      <member refid="classzorba_1_1String_1aa283bc56b273a69a44383b868eaf1cca" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>insert</name></member>
      <member refid="classzorba_1_1String_1aa676193cd2c270fea5ad2c128ed5c06f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>insert</name></member>
      <member refid="classzorba_1_1String_1a223988a7e6892093db561e3aa3bbe4c4" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>insert</name></member>
      <member refid="classzorba_1_1String_1a25459a4094aeaec55be0e8e33776386d" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>iterator</name></member>
      <member refid="classzorba_1_1String_1a4c0b250d93a1f7b29526cac5840d313f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>length</name></member>
      <member refid="classzorba_1_1String_1abded9f355b840d9bf33e06491cfc755b" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>npos</name></member>
      <member refid="classzorba_1_1String_1a15480fef7755ac84b34897c71df0e82a" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator+</name></member>
      <member refid="classzorba_1_1String_1ab2931bd571fc2b461c3ae7e81f774ae9" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator+</name></member>
      <member refid="classzorba_1_1String_1a4b9ff7560be2c1e4489914f7ba2bbf62" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator+</name></member>
      <member refid="classzorba_1_1String_1a0758629d6c3e1bfdc964913d4567bded" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator+</name></member>
      <member refid="classzorba_1_1String_1a46237fa44bcecede37c62f98a5a16528" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator+</name></member>
      <member refid="classzorba_1_1String_1a6da78e8d706c543b980e853a7fee351f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>operator+=</name></member>
      <member refid="classzorba_1_1String_1ad64dbacb91864d1199a0dba1b46250d5" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>operator+=</name></member>
      <member refid="classzorba_1_1String_1a95ebba50443b7acdc635611d048513ce" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>operator+=</name></member>
      <member refid="classzorba_1_1String_1ad4ebfbcab54b6f7426aa13cdf195f23f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>operator+=</name></member>
      <member refid="classzorba_1_1String_1a56ec36d0b3b24ed888c4e9b030d7fe55" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;</name></member>
      <member refid="classzorba_1_1String_1ae3bddaa48ce3ac08f8213e632a72c451" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;</name></member>
      <member refid="classzorba_1_1String_1a8d6b30fa8e000617cfec36eca7e8adfe" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;</name></member>
      <member refid="classzorba_1_1String_1a0f46cd8f02425f93fa60651281515f31" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;</name></member>
      <member refid="classzorba_1_1String_1a753e8869e3addb8017be475a5ef10fd3" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;</name></member>
      <member refid="classzorba_1_1String_1a343191e7da6e1829349b8bb1bc37d096" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;&lt;</name></member>
      <member refid="classzorba_1_1String_1a23c8492cd83fb82e33224f21fd4fc821" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;=</name></member>
      <member refid="classzorba_1_1String_1ad39dbd50df05358bae787292e0b2b9ab" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;=</name></member>
      <member refid="classzorba_1_1String_1abda427eecdd8eebe42e9348186f305e4" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;=</name></member>
      <member refid="classzorba_1_1String_1ab46c2ccd519b1dd03f97bba30db150d4" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;=</name></member>
      <member refid="classzorba_1_1String_1a120d60450650e775eb815cdd1977a7c9" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator&lt;=</name></member>
      <member refid="classzorba_1_1String_1abceaf5b90384eac42f9096228b101a1f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>operator=</name></member>
      <member refid="classzorba_1_1String_1a9d85e6c65b73ff2971249672ef103137" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>operator=</name></member>
      <member refid="classzorba_1_1String_1aefd742f94c258ab5f9850d10c5a6d3cd" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>operator=</name></member>
      <member refid="classzorba_1_1String_1a4ce1086dca6262349fdd7a325b9ac321" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>operator=</name></member>
      <member refid="classzorba_1_1String_1aebca126eece10d7da4e156429eebd722" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator=</name></member>
      <member refid="classzorba_1_1String_1a687ecaa8514006137b96abd43955763f" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator==</name></member>
      <member refid="classzorba_1_1String_1afe6c05bc9a077fe63923c6b3fe3da861" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator==</name></member>
      <member refid="classzorba_1_1String_1a353c5b09b55a2c30f21973acc309994d" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>operator==</name></member>
      <member refid="classzorba_1_1String_1acc2f650cb355de3ae55d444c34aea725" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>operator[]</name></member>
      <member refid="classzorba_1_1String_1ac76228f11d11da225399d83c5dd7b3f4" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>pointer</name></member>
      <member refid="classzorba_1_1String_1ad210fcf8fbd8837f0b38632168680ed3" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>push_back</name></member>
      <member refid="classzorba_1_1String_1a51ea92cd4531616644187ab6407a543a" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>rbegin</name></member>
      <member refid="classzorba_1_1String_1a9e79c70591887447ce7de62269c482fb" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>rbegin</name></member>
      <member refid="classzorba_1_1String_1abda1af11f0798c70f7448c0ac02001e1" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>reference</name></member>
      <member refid="classzorba_1_1String_1a1ea3723719c921f12aa802e5538a0c6a" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>rend</name></member>
      <member refid="classzorba_1_1String_1a4f6a534822c74163fd410c6b7891cd8e" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>rend</name></member>
      <member refid="classzorba_1_1String_1a06ce1eb8f55d6270087c4a32cc9315cc" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1a8c8322e147abe48a6d3edb408e98e05c" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1a25faa20749834da38bbc950e5b0dd743" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1a9fc8ac3462921755b45d068c26cd488c" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1a78bb24dec9b729ad39e99f27b97defdc" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1a31258c7ed1d56eb86e5cef6eead313f9" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1ad8b3c259c5e71baa3e9e2bf88346bd9c" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1a31f451a03dc8153ee94816abc5a487cc" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1ae5336b4266dfca42cf7976434f36a8b6" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1a7fe0358a326f2fc8f96fda5cb62b842e" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1ab687599a0e1cf139ba45c9f76e11ab1d" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1a0e15502af6ebda785721b295f94d2491" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1aa71e31ed2f802e679be1c53a4287eb3f" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>replace</name></member>
      <member refid="classzorba_1_1String_1ac257b096e2b08daf4d16c430e153378a" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>reserve</name></member>
      <member refid="classzorba_1_1String_1a5ae5be7c1ef83cc005703323db307ba6" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>resize</name></member>
      <member refid="classzorba_1_1String_1adcb2f121b303280b4bd8c55bc800e8f7" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>reverse_iterator</name></member>
      <member refid="classzorba_1_1String_1a93e53893af8e5c4dadb66e01f49af139" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>rfind</name></member>
      <member refid="classzorba_1_1String_1a3722dad02236e91e58a341da480f73d3" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>rfind</name></member>
      <member refid="classzorba_1_1String_1ac706cb912dabd92063da941fe4255f86" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>rfind</name></member>
      <member refid="classzorba_1_1String_1a08e274e09394184e457fba0bf2fd9be1" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>rfind</name></member>
      <member refid="classzorba_1_1String_1a09858a4b96ee03347c2d9f00a49a4e76" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>rfind</name></member>
      <member refid="classzorba_1_1String_1a1be3687524c6b2a97418f1079daadfd1" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>size</name></member>
      <member refid="classzorba_1_1String_1a542817545535ea3398ab7b6c5a462b1e" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>size_check</name></member>
      <member refid="classzorba_1_1String_1a8a65cc2ad4058f7bbcf2719c93d8c763" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>size_type</name></member>
      <member refid="classzorba_1_1String_1a562c464bbe75f0ed908c99651a104419" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>str</name></member>
      <member refid="classzorba_1_1String_1afbe6334ab580d107be7e3fdc999e8f3b" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1abf9f99cd3bca04c197c0b420e2b691bd" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1a2a1d4c179b2ad62b626b0fd738872b47" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1aacffcd33a8f44cdeb37357bec4b6bbb1" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1a7d1a8ae5b57ad617eb3e2e03ce8e6f77" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1a23ac28599f27fb664e341064eb2aa6e3" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1a3d4087349f856e982295826a5e87d029" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1abc5648a13f4d6b8ad1f13f5080646201" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1a5bffa4536bc562eb848fd2e8dde89861" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1aab3d2fbb2c2af0a02cc9cae4c3137510" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>String</name></member>
      <member refid="classzorba_1_1String_1a48bfc9a04c38c2dc86608ea63cd0c158" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>string_storage_</name></member>
      <member refid="classzorba_1_1String_1ac0fcd86560d50a5418fb05de10063e97" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>substr</name></member>
      <member refid="classzorba_1_1String_1a76f1304a5bf5236234f8fe1fbae8e0d2" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>swap</name></member>
      <member refid="classzorba_1_1String_1accf63404b1b45360fd5ef0d44c77fdee" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>traits_type</name></member>
      <member refid="classzorba_1_1String_1a3e0633ac5ec941d1abf1a7b5b6ffce25" prot="private" virt="non-virtual"><scope>zorba::String</scope><name>Unmarshaller</name></member>
      <member refid="classzorba_1_1String_1a55c89432f1ba141cf1241768b013a0ff" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>value_type</name></member>
      <member refid="classzorba_1_1String_1a4af70cd8f3540143d6541fb8b42fc073" prot="public" virt="non-virtual"><scope>zorba::String</scope><name>~String</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
