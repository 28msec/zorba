<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="base64__util_8h" kind="file">
    <compoundname>base64_util.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">zorba/config.h</includes>
    <includes refid="cxx__util_8h" local="no">zorba/internal/cxx_util.h</includes>
    <includes refid="ztd_8h" local="no">zorba/internal/ztd.h</includes>
    <includes refid="stream__util_8h" local="no">zorba/util/stream_util.h</includes>
    <incdepgraph>
      <node id="1456">
        <label>functional</label>
      </node>
      <node id="1453">
        <label>zorba/internal/cxx_util.h</label>
        <link refid="cxx__util_8h"/>
        <childnode refid="1452" relation="include">
        </childnode>
      </node>
      <node id="1449">
        <label>stdexcept</label>
      </node>
      <node id="1461">
        <label>zorba/util/stream_util.h</label>
        <link refid="stream__util_8h"/>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
      </node>
      <node id="1458">
        <label>string</label>
      </node>
      <node id="1459">
        <label>type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
      </node>
      <node id="1450">
        <label>sys/types.h</label>
      </node>
      <node id="1447">
        <label>base64_util.h</label>
        <link refid="base64_util.h"/>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1461" relation="include">
        </childnode>
      </node>
      <node id="1451">
        <label>vector</label>
      </node>
      <node id="1457">
        <label>sstream</label>
      </node>
      <node id="1448">
        <label>iostream</label>
      </node>
      <node id="1454">
        <label>zorba/internal/ztd.h</label>
        <link refid="ztd_8h"/>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
      </node>
      <node id="1460">
        <label>type_traits</label>
      </node>
      <node id="1452">
        <label>zorba/config.h</label>
      </node>
      <node id="1455">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innerclass refid="classzorba_1_1base64_1_1exception" prot="public">zorba::base64::exception</innerclass>
    <innernamespace refid="namespacezorba">zorba</innernamespace>
    <innernamespace refid="namespacezorba_1_1base64">zorba::base64</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006-2008<sp/>The<sp/>FLWOR<sp/>Foundation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>ZORBA_BASE64_API_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ZORBA_BASE64_API_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>standard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>size_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Zorba</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zorba/config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cxx__util_8h" kindref="compound">zorba/internal/cxx_util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztd_8h" kindref="compound">zorba/internal/ztd.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stream__util_8h" kindref="compound">zorba/util/stream_util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">zorba<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">base64<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">//////////<sp/>Types<sp/>//////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Options<sp/>to<sp/>use<sp/>for<sp/>decoding.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497" kindref="member" tooltip="Options to use for decoding.">decode_options</ref><sp/>{</highlight></codeline>
<codeline lineno="44" refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" kindref="member" tooltip="No options.">dopt_none</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00,<sp/></highlight><highlight class="comment">///&lt;<sp/>No<sp/>options.</highlight></codeline>
<codeline lineno="45" refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a3a95ff1de61b2f4d6f2832026c2bddcd" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a3a95ff1de61b2f4d6f2832026c2bddcd" kindref="member" tooltip="Input length may be non-multiple of 4.">dopt_any_len</ref><sp/><sp/><sp/><sp/>=<sp/>0x01,<sp/></highlight><highlight class="comment">///&lt;<sp/>Input<sp/>length<sp/>may<sp/>be<sp/>non-multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="46" refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a7554c711484731e6aede33a975e49bf5" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a7554c711484731e6aede33a975e49bf5" kindref="member" tooltip="Ignore all whitespace.">dopt_ignore_ws</ref><sp/><sp/>=<sp/>0x02,<sp/></highlight><highlight class="comment">///&lt;<sp/>Ignore<sp/>all<sp/>whitespace.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment">//////////<sp/>Exception<sp/>//////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>A<sp/>%base64::exception<sp/>is-an<sp/>invalid_argument<sp/>that<sp/>contains<sp/>additional<sp/>details</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>about<sp/>the<sp/>exception<sp/>such<sp/>as<sp/>the<sp/>invalid<sp/>character<sp/>and<sp/>its<sp/>offset.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classzorba_1_1base64_1_1exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classzorba_1_1base64_1_1exception" kindref="compound" tooltip="A base64::exception is-an invalid_argument that contains additional details about the exception such ...">exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::invalid_argument<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57" refid="classzorba_1_1base64_1_1exception_1aaa1adcbd49d3a32dfe0b083113ac3cf8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1base64_1_1exception_1aaa1adcbd49d3a32dfe0b083113ac3cf8" kindref="member">exception</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>offset,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;msg<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::invalid_argument(<sp/>msg<sp/>),<sp/>char_(<sp/>c<sp/>),<sp/>offset_(<sp/>offset<sp/>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classzorba_1_1base64_1_1exception_1a887a819b73e75e4f28bd78f034e2676e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1base64_1_1exception_1a887a819b73e75e4f28bd78f034e2676e" kindref="member">invalid_char</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classzorba_1_1base64_1_1exception_1ab0cd7934031589d83f4180f6dfd3de32" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="classzorba_1_1base64_1_1exception_1ab0cd7934031589d83f4180f6dfd3de32" kindref="member">char_offset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset_;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>char_;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>offset_;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment">//////////<sp/>Decoding<sp/>///////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>Calculates<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>required<sp/>to<sp/>decode<sp/>\a<sp/>n<sp/>Base64-encoded<sp/>bytes.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>@param<sp/>n<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>decode.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>needed<sp/>for<sp/>Base64<sp/>decoding.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="namespacezorba_1_1base64_1a3c2caffd1fb57d1aa25734bdaf9f8241" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1a3c2caffd1fb57d1aa25734bdaf9f8241" kindref="member" tooltip="Calculates the number of bytes required to decode n Base64-encoded bytes.">decoded_size</ref>(<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>n<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((n<sp/>/<sp/>4)<sp/>+<sp/>!!(n<sp/>%<sp/>4))<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>Decodes<sp/>a<sp/>Base64-encoded<sp/>buffer.<sp/><sp/>Embedded<sp/>newlines<sp/>and<sp/>carriage-returns<sp/>are</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>skipped.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>Base64<sp/>buffer<sp/>to<sp/>be<sp/>decoded.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>@param<sp/>from_len<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>decode.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>@paran<sp/>to<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>buffer<sp/>to<sp/>receive<sp/>the<sp/>decoded<sp/>bytes.<sp/><sp/>The<sp/>buffer</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>must<sp/>be<sp/>large<sp/>enough<sp/>to<sp/>contain<sp/>them.<sp/><sp/>Note<sp/>that<sp/>the<sp/>buffer<sp/>is<sp/>\e<sp/>not<sp/>null</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>terminated.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>@param<sp/>options<sp/>The<sp/>decoding<sp/>options<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>bytes.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>@throws<sp/>invalid_argument<sp/>if<sp/>\a<sp/>options<sp/>does<sp/>not<sp/>have<sp/>the<sp/>\c<sp/>dtop_any_len<sp/>bit</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>set<sp/>and<sp/>\a<sp/>from_len<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>@throws<sp/>base64::exception<sp/>if<sp/>an<sp/>\c<sp/>=<sp/>is<sp/>encountered<sp/>unexpectedly<sp/>or<sp/>an</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>invalid<sp/>byte<sp/>is<sp/>encountered.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>@see<sp/>decoded_size()</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*from,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>from_len,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" kindref="member" tooltip="No options.">dopt_none</ref><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>Decodes<sp/>a<sp/>Base64-encoded<sp/>buffer<sp/>and<sp/>appends<sp/>the<sp/>decoded<sp/>bytes<sp/>onto<sp/>a</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>vector&amp;lt;char&amp;gt;.<sp/><sp/>Embedded<sp/>newlines<sp/>and<sp/>carriage-returns<sp/>are<sp/>skipped.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>buffer<sp/>to<sp/>be<sp/>encoded.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>@param<sp/>from_len<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>encode.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>vector<sp/>to<sp/>append<sp/>the<sp/>encoded<sp/>bytes<sp/>appended<sp/>onto.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>The<sp/>vector<sp/>is<sp/>made<sp/>large<sp/>enough<sp/>to<sp/>contain<sp/>the<sp/>additional<sp/>bytes.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>@param<sp/>options<sp/>The<sp/>decoding<sp/>options<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>bytes.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>@throws<sp/>invalid_argument<sp/>if<sp/>\a<sp/>options<sp/>does<sp/>not<sp/>have<sp/>the<sp/>\c<sp/>dopt_any_len<sp/>bit</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>set<sp/>and<sp/>the<sp/>number<sp/>of<sp/>Base64<sp/>bytes<sp/>decoded<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>@throws<sp/>base64::exception<sp/>if<sp/>an<sp/>\c<sp/>=<sp/>is<sp/>encountered<sp/>unexpectedly<sp/>or<sp/>an</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>invalid<sp/>byte<sp/>is<sp/>encountered.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*from,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>from_len,<sp/>std::vector&lt;char&gt;<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" kindref="member" tooltip="No options.">dopt_none</ref><sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>Base64-decodes<sp/>a<sp/>buffer<sp/>and<sp/>writes<sp/>the<sp/>decoded<sp/>bytes<sp/>to<sp/>the<sp/>given<sp/>stream.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>Base64<sp/>buffer<sp/>to<sp/>be<sp/>decoded.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>@param<sp/>from_len<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>decode.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>ostream<sp/>to<sp/>write<sp/>the<sp/>decoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>@param<sp/>options<sp/>The<sp/>options<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>bytes.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>@throws<sp/>invalid_argument<sp/>if<sp/>\a<sp/>options<sp/>does<sp/>not<sp/>have<sp/>the<sp/>\c<sp/>dopt_any_len<sp/>bit</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>set<sp/>and<sp/>the<sp/>number<sp/>of<sp/>Base64<sp/>bytes<sp/>decoded<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>@throws<sp/>base64::exception<sp/>if<sp/>an<sp/>\c<sp/>=<sp/>is<sp/>encountered<sp/>unexpectedly<sp/>or<sp/>an</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>invalid<sp/>byte<sp/>is<sp/>encountered.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*from,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>from_len,<sp/>std::ostream<sp/>&amp;<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref>,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" kindref="member" tooltip="No options.">dopt_none</ref><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>Decodes<sp/>a<sp/>Base64-encoded<sp/>buffer<sp/>and<sp/>appends<sp/>the<sp/>decoded<sp/>bytes<sp/>onto<sp/>a<sp/>string.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>Embedded<sp/>newlines<sp/>and<sp/>carriage-returns<sp/>are<sp/>skipped.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>ToStringType<sp/>The<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>Base64<sp/>buffer<sp/>to<sp/>be<sp/>decoded.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>@param<sp/>from_len<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>decode.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>string<sp/>to<sp/>append<sp/>the<sp/>decoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>@param<sp/>options<sp/>The<sp/>options<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>bytes.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@throws<sp/>invalid_argument<sp/>if<sp/>\a<sp/>options<sp/>does<sp/>not<sp/>have<sp/>the<sp/>\c<sp/>dopt_any_len<sp/>bit</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>set<sp/>and<sp/>the<sp/>number<sp/>of<sp/>Base64<sp/>bytes<sp/>decoded<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>@throws<sp/>base64::exception<sp/>if<sp/>an<sp/>\c<sp/>=<sp/>is<sp/>encountered<sp/>unexpectedly<sp/>or<sp/>an</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>invalid<sp/>byte<sp/>is<sp/>encountered.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ToStringType&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1enable__if" kindref="compound">std::enable_if&lt;ZORBA_IS_STRING(ToStringType),size_type&gt;::type</ref></highlight></codeline>
<codeline lineno="159" refid="namespacezorba_1_1base64_1ab5f20211217a1f3e06730aeb193f4657" refkind="member"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*from,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>from_len,<sp/>ToStringType<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref>,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" kindref="member" tooltip="No options.">dopt_none</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>decoded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>from_len<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">ToStringType::size_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>orig_size<sp/>=<sp/>to-&gt;size();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;resize(<sp/>orig_size<sp/>+<sp/><ref refid="namespacezorba_1_1base64_1a3c2caffd1fb57d1aa25734bdaf9f8241" kindref="member" tooltip="Calculates the number of bytes required to decode n Base64-encoded bytes.">decoded_size</ref>(<sp/>from_len<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>decoded<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/>from,<sp/>from_len,<sp/>&amp;to-&gt;at(<sp/>orig_size<sp/>),<sp/>options<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;resize(<sp/>orig_size<sp/>+<sp/>decoded<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decoded;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>Decodes<sp/>a<sp/>Base64-encoded<sp/>string<sp/>and<sp/>appends<sp/>the<sp/>decoded<sp/>bytes<sp/>onto<sp/>another</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>string.<sp/><sp/>Embedded<sp/>newlines<sp/>and<sp/>carriage-returns<sp/>are<sp/>skipped.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>FromStringType<sp/>The<sp/>\a<sp/>from<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>ToStringType<sp/>The<sp/>\a<sp/>to<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>Base64-encoded<sp/>string<sp/>to<sp/>be<sp/>decoded.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>string<sp/>to<sp/>append<sp/>the<sp/>decoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>@param<sp/>options<sp/>The<sp/>options<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>bytes.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@throws<sp/>invalid_argument<sp/>if<sp/>\a<sp/>options<sp/>does<sp/>not<sp/>have<sp/>the<sp/>\c<sp/>dopt_any_len<sp/>bit</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>set<sp/>and<sp/>the<sp/>number<sp/>of<sp/>Base64<sp/>bytes<sp/>decoded<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@throws<sp/>base64::exception<sp/>if<sp/>an<sp/>\c<sp/>=<sp/>is<sp/>encountered<sp/>unexpectedly<sp/>or<sp/>an</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>invalid<sp/>byte<sp/>is<sp/>encountered.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FromStringType,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ToStringType&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1enable__if" kindref="compound">std::enable_if</ref>&lt;<ref refid="ztd_8h_1a0958a26ba5538590ef945f07a2251f2d" kindref="member">ZORBA_IS_STRING</ref>(FromStringType)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="ztd_8h_1a0958a26ba5538590ef945f07a2251f2d" kindref="member">ZORBA_IS_STRING</ref>(ToStringType),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref>&gt;<ref refid="namespacezorba_1_1time_1_1calendar_1a7c8c84a1ed5401ddae49da3f01861c87" kindref="member">::type</ref></highlight></codeline>
<codeline lineno="190" refid="namespacezorba_1_1base64_1a3b34bfa413a39144e50f49475a5fd9b0" refkind="member"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/>FromStringType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;from,<sp/>ToStringType<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/>from.data(),<sp/>from.size(),<sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>Decodes<sp/>a<sp/>Base64-encoded<sp/>istream.<sp/><sp/>Embedded<sp/>newlines<sp/>and<sp/>carriage-returns</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>are<sp/>skipped.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>istream<sp/>to<sp/>read<sp/>from<sp/>until<sp/>EOF<sp/>is<sp/>reached.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>ostream<sp/>to<sp/>write<sp/>the<sp/>decoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@param<sp/>options<sp/>The<sp/>options<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>bytes.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@throws<sp/>invalid_argument<sp/>if<sp/>\a<sp/>options<sp/>does<sp/>not<sp/>have<sp/>the<sp/>\c<sp/>dopt_any_len<sp/>bit</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>set<sp/>and<sp/>the<sp/>number<sp/>of<sp/>Base64<sp/>bytes<sp/>decoded<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@throws<sp/>base64::exception<sp/>if<sp/>an<sp/>\c<sp/>=<sp/>is<sp/>encountered<sp/>unexpectedly<sp/>or<sp/>an</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>invalid<sp/>byte<sp/>is<sp/>encountered.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/>std::istream<sp/>&amp;from,<sp/>std::ostream<sp/>&amp;<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref>,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" kindref="member" tooltip="No options.">dopt_none</ref><sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>Base64-decodes<sp/>a<sp/>string<sp/>and<sp/>writes<sp/>the<sp/>decoded<sp/>bytes<sp/>to<sp/>a<sp/>stream.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>FromStringType<sp/>The<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>string<sp/>to<sp/>be<sp/>decoded.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>ostream<sp/>to<sp/>write<sp/>the<sp/>decoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>bytes.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FromStringType&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1enable__if" kindref="compound">std::enable_if&lt;ZORBA_IS_STRING(FromStringType),size_type&gt;::type</ref></highlight></codeline>
<codeline lineno="221" refid="namespacezorba_1_1base64_1ab2ccd71d85aff9c0ac5a9492ed89eacd" refkind="member"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/>FromStringType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;from,<sp/>std::ostream<sp/>&amp;<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>from.data(),<sp/>from.size(),<sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>Decodes<sp/>a<sp/>Base64-encoded<sp/>istream<sp/>and<sp/>appends<sp/>the<sp/>decoded<sp/>bytes<sp/>to<sp/>a<sp/>string.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>Embedded<sp/>newlines<sp/>and<sp/>carriage-returns<sp/>are<sp/>skipped.</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>ToStringType<sp/>The<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>istream<sp/>to<sp/>read<sp/>from<sp/>until<sp/>EOF<sp/>is<sp/>reached.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>string<sp/>to<sp/>append<sp/>the<sp/>decoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>@param<sp/>options<sp/>The<sp/>options<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>bytes.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@throws<sp/>invalid_argument<sp/>if<sp/>\a<sp/>options<sp/>does<sp/>not<sp/>have<sp/>the<sp/>\c<sp/>dopt_any_len<sp/>bit</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>set<sp/>and<sp/>the<sp/>number<sp/>of<sp/>Base64<sp/>bytes<sp/>decoded<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>@throws<sp/>base64::exception<sp/>if<sp/>an<sp/>\c<sp/>=<sp/>is<sp/>encountered<sp/>unexpectedly<sp/>or<sp/>an</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>invalid<sp/>byte<sp/>is<sp/>encountered.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ToStringType&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1enable__if" kindref="compound">std::enable_if&lt;ZORBA_IS_STRING(ToStringType),size_type&gt;::type</ref></highlight></codeline>
<codeline lineno="241" refid="namespacezorba_1_1base64_1ab7b4a9e5b8038da5c3d7c2eef3f9dca0" refkind="member"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/>std::istream<sp/>&amp;from,<sp/>ToStringType<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" kindref="member" tooltip="No options.">dopt_none</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ignore_ws<sp/>=<sp/>!!(options<sp/>&amp;<sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a7554c711484731e6aede33a975e49bf5" kindref="member" tooltip="Ignore all whitespace.">dopt_ignore_ws</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>total_decoded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!from.eof()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>from_buf[<sp/>1024<sp/>*<sp/>4<sp/>],<sp/>to_buf[<sp/>1024<sp/>*<sp/>3<sp/>];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streamsize<sp/>gcount;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ignore_ws<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gcount<sp/>=<sp/><ref refid="namespacezorba_1ac9b542ae24c7e4ac80b0bbaa4754042f" kindref="member" tooltip="Reads from the given istream until n non-whitespace characters are read or until EOF is encountered...">read_without_whitespace</ref>(<sp/>from,<sp/>from_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>from_buf<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>from.read(<sp/>from_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>from_buf<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gcount<sp/>=<sp/>from.gcount();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gcount<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>decoded<sp/>=</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/>from_buf,<sp/>static_cast&lt;size_type&gt;(<sp/>gcount<sp/>),<sp/>to_buf,<sp/>options<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;append(<sp/>to_buf,<sp/>decoded<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_decoded<sp/>+=<sp/>decoded;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_decoded;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>Decodes<sp/>a<sp/>Base64-encoded<sp/>stream<sp/>and<sp/>appends<sp/>the<sp/>decoded<sp/>bytes<sp/>onto<sp/>a</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>vector&amp;lt;char;&amp;gt;.</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>istream<sp/>to<sp/>read<sp/>from<sp/>until<sp/>EOF<sp/>is<sp/>reached.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>string<sp/>to<sp/>append<sp/>the<sp/>decoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>@param<sp/>options<sp/>The<sp/>options<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>bytes.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@throws<sp/>invalid_argument<sp/>if<sp/>\a<sp/>options<sp/>does<sp/>not<sp/>have<sp/>the<sp/>\c<sp/>dopt_any_len<sp/>bit</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>set<sp/>and<sp/>the<sp/>number<sp/>of<sp/>Base64<sp/>bytes<sp/>decoded<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>@throws<sp/>base64::exception<sp/>if<sp/>an<sp/>\c<sp/>=<sp/>is<sp/>encountered<sp/>unexpectedly<sp/>or<sp/>an</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>invalid<sp/>byte<sp/>is<sp/>encountered.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/>std::istream<sp/>&amp;from,<sp/>std::vector&lt;char&gt;<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref>,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" kindref="member" tooltip="No options.">dopt_none</ref><sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="281"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>Validates<sp/>a<sp/>Base64-encoded<sp/>buffer.<sp/><sp/>Embedded<sp/>newlines<sp/>and<sp/>carriage-returns</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>are<sp/>skipped.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>@param<sp/>buf<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>Base64<sp/>buffer<sp/>to<sp/>be<sp/>validated.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>@param<sp/>buf_len<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>validate.</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>@param<sp/>options<sp/>The<sp/>options<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>@throws<sp/>invalid_argument<sp/>if<sp/>\a<sp/>options<sp/>does<sp/>not<sp/>have<sp/>the<sp/>\c<sp/>dopt_any_len<sp/>bit</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>set<sp/>and<sp/>the<sp/>number<sp/>of<sp/>Base64<sp/>bytes<sp/>validated<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>4.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>@throws<sp/>base64::exception<sp/>if<sp/>an<sp/>\c<sp/>=<sp/>is<sp/>encountered<sp/>unexpectedly<sp/>or<sp/>an</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>invalid<sp/>byte<sp/>is<sp/>encountered.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>@see<sp/>decoded_size()</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="namespacezorba_1_1base64_1a91fa177bec263667b9c1187018a0ff43" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1a91fa177bec263667b9c1187018a0ff43" kindref="member" tooltip="Validates a Base64-encoded buffer.">validate</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*buf,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>buf_len,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1a6a1cf68e5f14be4e4c9261281d3cc497a780ca336a27a5410589850aea958f46c" kindref="member" tooltip="No options.">dopt_none</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad18050b7525834d08a4b766e595b39f2" kindref="member" tooltip="Decodes a Base64-encoded buffer.">decode</ref>(<sp/>buf,<sp/>buf_len,<sp/>static_cast&lt;char*&gt;(<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>),<sp/>options<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment">//////////<sp/>Encoding<sp/>///////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="300"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="301"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>Calculates<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>required<sp/>to<sp/>Base64-encode<sp/>\a<sp/>n<sp/>bytes.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>@param<sp/>n<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>encode.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>needed<sp/>for<sp/>Base64<sp/>encoding.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="namespacezorba_1_1base64_1ac3ec383d6be4fc97688a3dacd221abb1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ac3ec383d6be4fc97688a3dacd221abb1" kindref="member" tooltip="Calculates the number of bytes required to Base64-encode n bytes.">encoded_size</ref>(<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>n<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>+<sp/>2)<sp/>/<sp/>3<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>Base64-encodes<sp/>a<sp/>buffer.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>buffer<sp/>to<sp/>be<sp/>encoded.</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@param<sp/>from_len<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>encode.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>buffer<sp/>to<sp/>receive<sp/>the<sp/>encoded<sp/>bytes.<sp/><sp/>The<sp/>buffer</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>must<sp/>be<sp/>large<sp/>enough<sp/>to<sp/>contain<sp/>them.<sp/><sp/>Note<sp/>that<sp/>the<sp/>buffer<sp/>is<sp/>\e<sp/>not<sp/>null</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>terminated.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>encoded<sp/>bytes.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>@see<sp/>encoded_size()</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*from,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>from_len,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="325"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>Base64-encodes<sp/>a<sp/>buffer<sp/>and<sp/>appends<sp/>the<sp/>encoded<sp/>bytes<sp/>onto<sp/>a</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>vector&amp;lt;char&amp;gt;.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>buffer<sp/>to<sp/>be<sp/>encoded.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@param<sp/>from_len<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>encode.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>vector<sp/>to<sp/>append<sp/>the<sp/>encoded<sp/>bytes<sp/>appended<sp/>onto.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>The<sp/>vector<sp/>is<sp/>made<sp/>large<sp/>enough<sp/>to<sp/>contain<sp/>the<sp/>additional<sp/>bytes.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*from,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>from_len,<sp/>std::vector&lt;char&gt;<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="337"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>Base64-encodes<sp/>a<sp/>buffer<sp/>and<sp/>writes<sp/>the<sp/>encoded<sp/>bytes<sp/>to<sp/>the<sp/>given<sp/>stream.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>buffer<sp/>to<sp/>be<sp/>encoded.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@param<sp/>from_len<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>encode.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>ostream<sp/>to<sp/>write<sp/>the<sp/>encoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>encoded<sp/>bytes.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*from,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>from_len,<sp/>std::ostream<sp/>&amp;<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>Base64-encodes<sp/>a<sp/>buffer<sp/>and<sp/>appends<sp/>the<sp/>encoded<sp/>bytes<sp/>onto<sp/>a<sp/>string.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>ToStringType<sp/>The<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>buffer<sp/>to<sp/>be<sp/>encoded.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>@param<sp/>from_len<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>encode.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>string<sp/>to<sp/>append<sp/>the<sp/>encoded<sp/>bytes<sp/>onto.</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>encoded<sp/>bytes.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ToStringType&gt;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1enable__if" kindref="compound">std::enable_if&lt;ZORBA_IS_STRING(ToStringType),size_type&gt;::type</ref></highlight></codeline>
<codeline lineno="359" refid="namespacezorba_1_1base64_1ad28e55154f9426fb53e66ae081728431" refkind="member"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*from,<sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>from_len,<sp/>ToStringType<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>encoded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>from_len<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">ToStringType::size_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>orig_size<sp/>=<sp/>to-&gt;size();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;resize(<sp/>orig_size<sp/>+<sp/><ref refid="namespacezorba_1_1base64_1ac3ec383d6be4fc97688a3dacd221abb1" kindref="member" tooltip="Calculates the number of bytes required to Base64-encode n bytes.">encoded_size</ref>(<sp/>from_len<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>encoded<sp/>=<sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>from,<sp/>from_len,<sp/>&amp;to-&gt;at(<sp/>orig_size<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;resize(<sp/>orig_size<sp/>+<sp/>encoded<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encoded;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="370"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>Base64-encodes<sp/>a<sp/>string<sp/>and<sp/>appends<sp/>the<sp/>encoded<sp/>bytes<sp/>onto<sp/>another<sp/>string.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>FromStringType<sp/>The<sp/>\a<sp/>from<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>ToStringType<sp/>The<sp/>\a<sp/>to<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>string<sp/>to<sp/>be<sp/>encoded.</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>string<sp/>to<sp/>append<sp/>the<sp/>encoded<sp/>bytes<sp/>onto.</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>encoded<sp/>bytes.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FromStringType,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ToStringType&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1enable__if" kindref="compound">std::enable_if</ref>&lt;<ref refid="ztd_8h_1a0958a26ba5538590ef945f07a2251f2d" kindref="member">ZORBA_IS_STRING</ref>(FromStringType)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="ztd_8h_1a0958a26ba5538590ef945f07a2251f2d" kindref="member">ZORBA_IS_STRING</ref>(ToStringType),</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref>&gt;<ref refid="namespacezorba_1_1time_1_1calendar_1a7c8c84a1ed5401ddae49da3f01861c87" kindref="member">::type</ref></highlight></codeline>
<codeline lineno="383" refid="namespacezorba_1_1base64_1afe46148082a2b570ee101b7ee9fe7e13" refkind="member"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>FromStringType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;from,<sp/>ToStringType<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>from.data(),<sp/>from.size(),<sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>Base64-encodes<sp/>one<sp/>stream<sp/>and<sp/>writes<sp/>the<sp/>encoded<sp/>bytes<sp/>to<sp/>another.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>istream<sp/>to<sp/>read<sp/>from<sp/>until<sp/>EOF<sp/>is<sp/>reached.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>ostream<sp/>to<sp/>write<sp/>the<sp/>encoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>encoded<sp/>bytes.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>std::istream<sp/>&amp;from,<sp/>std::ostream<sp/>&amp;<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="397"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>Base64-encodes<sp/>a<sp/>string<sp/>and<sp/>writes<sp/>the<sp/>encoded<sp/>bytes<sp/>to<sp/>a<sp/>stream.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>FromStringType<sp/>The<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>string<sp/>to<sp/>be<sp/>encoded.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>ostream<sp/>to<sp/>write<sp/>the<sp/>encoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>encoded<sp/>bytes.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FromStringType&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1enable__if" kindref="compound">std::enable_if&lt;ZORBA_IS_STRING(FromStringType),size_type&gt;::type</ref></highlight></codeline>
<codeline lineno="407" refid="namespacezorba_1_1base64_1a05a8bd29eed75ae734c6a0d92d073500" refkind="member"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>FromStringType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;from,<sp/>std::ostream<sp/>&amp;<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>from.data(),<sp/>from.size(),<sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="411"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>Encodes<sp/>a<sp/>stream<sp/>to<sp/>Base64<sp/>and<sp/>appends<sp/>the<sp/>encoded<sp/>bytes<sp/>to<sp/>a<sp/>string.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>@tparam<sp/>ToStringType<sp/>The<sp/>string<sp/>type.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>istream<sp/>to<sp/>read<sp/>from<sp/>until<sp/>EOF<sp/>is<sp/>reached.</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>string<sp/>to<sp/>append<sp/>the<sp/>encoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>@return<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>encoded<sp/>bytes.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ToStringType&gt;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structstd_1_1enable__if" kindref="compound">std::enable_if&lt;ZORBA_IS_STRING(ToStringType),size_type&gt;::type</ref></highlight></codeline>
<codeline lineno="421" refid="namespacezorba_1_1base64_1a993f5eb83b39d6c12c967526a61ace84" refkind="member"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>std::istream<sp/>&amp;from,<sp/>ToStringType<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/>total_encoded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!from.eof()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>from_buf[<sp/>1024<sp/>*<sp/>3<sp/>],<sp/>to_buf[<sp/>1024<sp/>*<sp/>4<sp/>];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>from.read(<sp/>from_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>from_buf<sp/>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>std::streamsize<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gcount<sp/>=<sp/>from.gcount()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>encoded<sp/>=</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>from_buf,<sp/>static_cast&lt;size_type&gt;(<sp/>gcount<sp/>),<sp/>to_buf<sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;append(<sp/>to_buf,<sp/>encoded<sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_encoded<sp/>+=<sp/>encoded;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_encoded;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="437"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/>Base64-encodes<sp/>a<sp/>stream<sp/>and<sp/>appends<sp/>the<sp/>encoded<sp/>bytes<sp/>onto<sp/>a</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/>vector&amp;lt;char;&amp;gt;.</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>@param<sp/>from<sp/>The<sp/>istream<sp/>to<sp/>read<sp/>from<sp/>until<sp/>EOF<sp/>is<sp/>reached.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/>@param<sp/>to<sp/>The<sp/>vector<sp/>to<sp/>append<sp/>the<sp/>encoded<sp/>bytes<sp/>to.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>@param<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>encoded<sp/>bytes.</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">ZORBA_DLL_PUBLIC</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><ref refid="namespacezorba_1_1base64_1ad04b7fb8662aed83c48a9a87ae49aa88" kindref="member">size_type</ref><sp/><ref refid="namespacezorba_1_1base64_1ade0d7190a51da7c11c7726aa820715fd" kindref="member" tooltip="Base64-encodes a buffer.">encode</ref>(<sp/>std::istream<sp/>&amp;from,<sp/>std::vector&lt;char&gt;<sp/>*<ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781a0f4527a84781e2e19c9796b2b7fcacba" kindref="member" tooltip="Tonga.">to</ref><sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="448"><highlight class="comment">///////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="449"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>base64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>zorba</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZORBA_BASE64_API_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*<sp/>Local<sp/>variables:</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*<sp/>mode:<sp/>c++</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*<sp/>End:</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vim:set<sp/>et<sp/>sw=2<sp/>ts=2:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/include/zorba/util/base64_util.h"/>
  </compounddef>
</doxygen>
