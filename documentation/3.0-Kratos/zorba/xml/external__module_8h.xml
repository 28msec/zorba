<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="external__module_8h" kind="file">
    <compoundname>external_module.h</compoundname>
    <includes local="no">zorba/config.h</includes>
    <includes refid="zorba__string_8h" local="no">zorba/zorba_string.h</includes>
    <incdepgraph>
      <node id="1775">
        <label>iterator</label>
      </node>
      <node id="1776">
        <label>string</label>
      </node>
      <node id="1774">
        <label>zorba/zorba_string.h</label>
        <link refid="zorba__string_8h"/>
        <childnode refid="1775" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
      </node>
      <node id="1773">
        <label>zorba/config.h</label>
      </node>
      <node id="1772">
        <label>external_module.h</label>
        <link refid="external_module.h"/>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1774" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classzorba_1_1ExternalModule" prot="public">zorba::ExternalModule</innerclass>
    <innernamespace refid="namespacezorba">zorba</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006-2008<sp/>The<sp/>FLWOR<sp/>Foundation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZORBA_EXTERNAL_MODULE_H</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ZORBA_EXTERNAL_MODULE_H</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zorba/config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="zorba__string_8h" kindref="compound">zorba/zorba_string.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">zorba<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ExternalFunction;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************/</highlight><highlight class="comment">/**</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/>An<sp/>external<sp/>module<sp/>represents<sp/>a<sp/>group<sp/>of<sp/>external<sp/>functions,<sp/>all<sp/>belonging<sp/>to</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>the<sp/>same<sp/>target<sp/>namespace.<sp/>Class<sp/>ExternalModule<sp/>provides<sp/>the<sp/>interface<sp/>for</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>retrieving<sp/>the<sp/>target<sp/>namespace<sp/>URI<sp/>and/or<sp/>the<sp/>implementation<sp/>of<sp/>each<sp/>contained</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>external<sp/>function<sp/>by<sp/>function<sp/>name.<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>An<sp/>external<sp/>module<sp/>can<sp/>be<sp/>a<sp/>library<sp/>module<sp/>by<sp/>itself,<sp/>or<sp/>be<sp/>a<sp/>component<sp/>of</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/>a<sp/>library<sp/>module.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>Instances<sp/>of<sp/>this<sp/>class<sp/>must<sp/>be<sp/>implemented<sp/>by<sp/>the<sp/>application<sp/>and<sp/>provide<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>storage<sp/>for<sp/>the<sp/>implementations<sp/>of<sp/>the<sp/>external<sp/>functions.<sp/>The<sp/>instances<sp/>must</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>be<sp/>registered<sp/>in<sp/>the<sp/>static<sp/>context<sp/>in<sp/>order<sp/>for<sp/>the<sp/>functions<sp/>to<sp/>be<sp/>accessible</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/>by<sp/>a<sp/>query<sp/>(see<sp/>&lt;a<sp/>href=&quot;../../zorba/html/external_functions.html&quot;&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>here&lt;/a&gt;<sp/>for<sp/>more<sp/>details.).<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="comment">********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classzorba_1_1ExternalModule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1ExternalModule" kindref="compound" tooltip="An external module represents a group of external functions, all belonging to the same target namespa...">ExternalModule</ref><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47" refid="classzorba_1_1ExternalModule_1ad65cffd12c34a319efc9029c5ac645bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1ExternalModule_1ad65cffd12c34a319efc9029c5ac645bf" kindref="member">~ExternalModule</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>target<sp/>namespace<sp/>URI<sp/>of<sp/>the<sp/>module.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>getURI()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>function<sp/>with<sp/>the<sp/>given<sp/>name.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1ExternalFunction" kindref="compound" tooltip="The ExternalFunction class serves as the base of subclasses that represent the implementation/body of...">ExternalFunction</ref>*</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>getExternalFunction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aLocalname)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>*<sp/>\brief<sp/>Function<sp/>used<sp/>for<sp/>destroying<sp/>the<sp/>ExternalModule<sp/>object</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passed<sp/>as<sp/>parameter.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>user<sp/>needs<sp/>to<sp/>override<sp/>this<sp/>function<sp/>if<sp/>the<sp/>module</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>*<sp/>passed<sp/>as<sp/>parameter<sp/>was<sp/>created<sp/>using<sp/>the<sp/>createModule<sp/>function</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>*<sp/>which<sp/>is<sp/>used<sp/>for<sp/>dynamically<sp/>loading<sp/>modules<sp/>from<sp/>a<sp/>shared</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>*<sp/>library.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classzorba_1_1ExternalModule_1a906064655a1c8785395112ee6d2c6e16" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1ExternalModule_1a906064655a1c8785395112ee6d2c6e16" kindref="member" tooltip="Function used for destroying the ExternalModule object passed as parameter.">destroy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>zorba<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>Local<sp/>variables:</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>mode:<sp/>c++</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>End:</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vim:set<sp/>et<sp/>sw=2<sp/>ts=2:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/include/zorba/external_module.h"/>
  </compounddef>
</doxygen>
