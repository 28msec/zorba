<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="options_8dox" kind="file">
    <compoundname>options.dox</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**<sp/>\page<sp/>options_and_annotations<sp/>Zorba<sp/>Specific<sp/>Options<sp/>and<sp/>Annotations</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">In<sp/>XQuery,<sp/>&lt;a<sp/>href=&quot;http://www.w3.org/TR/xquery-30/#id-option-declaration&quot;&gt;options&lt;/a&gt;<sp/>and<sp/>&lt;a<sp/>href=&quot;http://www.w3.org/TR/xquery-30/#id-annotations&quot;&gt;annotations&lt;/a&gt;<sp/>can<sp/>both<sp/>be<sp/>used<sp/>to<sp/>change<sp/>the<sp/>behavior<sp/>of<sp/>a<sp/>particular<sp/>implementation.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Options<sp/>provide<sp/>a<sp/>way<sp/>to<sp/>affect<sp/>the<sp/>behavior<sp/>of<sp/>modules.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">Annotations<sp/>can<sp/>be<sp/>used<sp/>to<sp/>declare<sp/>properties<sp/>associated<sp/>with<sp/>functions,<sp/>variables,<sp/>collections,<sp/>and<sp/>indexes.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">In<sp/>the<sp/>following,<sp/>we<sp/>present<sp/>the<sp/>Zorba<sp/>specific<sp/>options<sp/>and<sp/>annotations.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">Also,<sp/>we<sp/>describe<sp/>how<sp/>they<sp/>can<sp/>be<sp/>dealt<sp/>with<sp/>using<sp/>the<sp/>C++<sp/>API<sp/>and<sp/>the<sp/>introspection<sp/>module.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">\section<sp/>option_introduction<sp/>Options</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">Options<sp/>provide<sp/>a<sp/>way<sp/>to<sp/>affect<sp/>the<sp/>behavior<sp/>of<sp/>a<sp/>particular<sp/>XQuery<sp/>module.<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment">They<sp/>can<sp/>be<sp/>interpreted<sp/>either<sp/>by<sp/>the<sp/>XQuery<sp/>processor<sp/>itself<sp/>or<sp/>by<sp/>the<sp/>implementation<sp/>of<sp/>a<sp/>particular<sp/>module<sp/>(i.e.<sp/>an<sp/>external<sp/>function).</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">The<sp/>syntax<sp/>for<sp/>declaring<sp/>options<sp/>in<sp/>the<sp/>prolog<sp/>of<sp/>an<sp/>XQuery<sp/>module<sp/>is<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>OptionDecl<sp/><sp/><sp/><sp/><sp/>::=<sp/><sp/><sp/><sp/>&quot;declare&quot;<sp/>&quot;option&quot;<sp/>QName<sp/>StringLiteral</highlight></codeline>
<codeline lineno="19"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">where<sp/>QName<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>option<sp/>and<sp/>StringLiteral<sp/>is<sp/>the<sp/>value<sp/>that<sp/>is<sp/>assigned<sp/>to<sp/>this<sp/>name.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">For<sp/>example,<sp/>the<sp/>following<sp/>declaration<sp/>disables<sp/>scripting<sp/>support<sp/>in<sp/>the<sp/>module<sp/>that<sp/>contains<sp/>the<sp/>option<sp/>declaration.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>declare<sp/>namespace<sp/>op<sp/>=<sp/>&quot;http://zorba.io/options/features&quot;;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>declare<sp/>option<sp/>op:disable<sp/>&quot;scripting&quot;;</highlight></codeline>
<codeline lineno="29"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment">\subsection<sp/>options_zorba<sp/>Available<sp/>Options</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">Zorba<sp/>provides<sp/>a<sp/>number<sp/>of<sp/>options<sp/>which<sp/>can<sp/>be<sp/>used<sp/>to<sp/>determine<sp/>the<sp/>behavior<sp/>of<sp/>a<sp/>module.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">The<sp/>namespace<sp/>for<sp/>all<sp/>such<sp/>options<sp/>starts<sp/>with<sp/>&lt;tt&gt;http://zorba.io/options&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="36"><highlight class="comment">An<sp/>error<sp/>is<sp/>raised<sp/>(zerr:ZXQP0060)<sp/>if<sp/>a<sp/>module<sp/>declares<sp/>an<sp/>option<sp/>with<sp/>a<sp/>namespace<sp/>that<sp/>is<sp/>equal<sp/>to<sp/>or<sp/>starts<sp/>with<sp/>this<sp/>namespace<sp/>but<sp/>the<sp/>local<sp/>name<sp/>refers<sp/>to<sp/>an<sp/>option<sp/>that<sp/>is<sp/>not<sp/>known<sp/>to<sp/>Zorba.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment">In<sp/>the<sp/>following,<sp/>we<sp/>describe<sp/>the<sp/>set<sp/>of<sp/>options<sp/>available<sp/>in<sp/>Zorba.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight></codeline>
<codeline lineno="41"><highlight class="comment">\subsubsection<sp/>options_features<sp/>Enabling<sp/>or<sp/>Disabling<sp/>Features</highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">Zorba<sp/>provides<sp/>a<sp/>couple<sp/>of<sp/>extensions<sp/>to<sp/>XQuery.<sp/>For<sp/>example,<sp/>the<sp/>scripting<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="comment">extension<sp/>and<sp/>the<sp/>data<sp/>definition<sp/>facility<sp/>are<sp/>both<sp/>features<sp/>not<sp/>defined<sp/>by<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="comment">the<sp/>W3C<sp/>but<sp/>available<sp/>in<sp/>Zorba.<sp/>The<sp/>user<sp/>can<sp/>enable<sp/>or<sp/>disable<sp/>any<sp/>of<sp/>these<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="comment">extensions<sp/>using<sp/>an<sp/>option<sp/>declaration,<sp/>respectively.<sp/>The<sp/>URI<sp/>of<sp/>the<sp/>names<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment">of<sp/>these<sp/>options<sp/>is<sp/>&lt;tt&gt;http://zorba.io/options/features&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="48"><highlight class="comment">The<sp/>local<sp/>name<sp/>to<sp/>enable<sp/>a<sp/>feature<sp/>is<sp/>&lt;tt&gt;enable&lt;/tt&gt;<sp/>and<sp/>to<sp/>disable<sp/>a<sp/>feature<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="comment">is<sp/>&lt;tt&gt;disable&lt;/tt&gt;,<sp/>respectively.<sp/>As<sp/>a<sp/>value,<sp/>any<sp/>of<sp/>these<sp/>options<sp/>allows<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="comment">a<sp/>comma<sp/>separated<sp/>list<sp/>of<sp/>feature<sp/>names<sp/>(QNames).</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">For<sp/>example,<sp/>to<sp/>disable<sp/>the<sp/>scripting<sp/>and<sp/>data<sp/>definition<sp/>facility<sp/>feature,</highlight></codeline>
<codeline lineno="53"><highlight class="comment">the<sp/>following<sp/>option<sp/>declaration<sp/>may<sp/>be<sp/>used:</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/>declare<sp/>namespace<sp/>op<sp/>=<sp/>&quot;http://zorba.io/options/features&quot;;</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/>declare<sp/>namespace<sp/>f<sp/>=<sp/>&quot;http://zorba.io/features&quot;;</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/>declare<sp/>option<sp/>op:disable<sp/>&quot;f:scripting,<sp/>f:ddl&quot;;</highlight></codeline>
<codeline lineno="60"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">If<sp/>a<sp/>given<sp/>feature<sp/>doesn&apos;t<sp/>specify<sp/>a<sp/>prefix,<sp/>the<sp/>name<sp/>is<sp/>resolved<sp/>against<sp/>the<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="comment">default<sp/>feature<sp/>namespace<sp/>&lt;tt&gt;http://zorba.io/features&lt;/tt&gt;.<sp/>All<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="comment">Zorba<sp/>specific<sp/>features<sp/>presented<sp/>in<sp/>the<sp/>following<sp/>are<sp/>declared<sp/>in<sp/>this<sp/>namespace.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="comment">&lt;li&gt;&lt;b&gt;scripting:&lt;/b&gt;<sp/>This<sp/>local<sp/>name<sp/>can<sp/>be<sp/>used<sp/>to<sp/>enable<sp/>or<sp/>disable<sp/>the<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="comment">Zorba<sp/>Scripting<sp/>Extension.<sp/>Per<sp/>default,<sp/>the<sp/>feature<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="69"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="comment">&lt;li&gt;&lt;b&gt;ddl:&lt;/b&gt;<sp/>The<sp/>&lt;tt&gt;ddl&lt;/tt&gt;<sp/>local<sp/>name<sp/>refers<sp/>to<sp/>the<sp/>static</highlight></codeline>
<codeline lineno="71"><highlight class="comment">(language-level)<sp/>Data<sp/>Description<sp/>Language<sp/>portion<sp/>of<sp/>the<sp/>\ref<sp/>xqddf.</highlight></codeline>
<codeline lineno="72"><highlight class="comment">The<sp/>feature<sp/>is<sp/>enabled<sp/>by<sp/>default.</highlight></codeline>
<codeline lineno="73"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="comment">&lt;li&gt;&lt;b&gt;trace:&lt;/b&gt;<sp/>The<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="comment">&lt;a<sp/>href=&quot;http://www.w3.org/TR/xpath-functions-30/#func-trace&quot;&gt;fn:trace&lt;/a&gt;<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="comment">function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>retrieve<sp/>an<sp/>execution<sp/>trace<sp/>of<sp/>a<sp/>query.<sp/>The<sp/>local<sp/>name</highlight></codeline>
<codeline lineno="77"><highlight class="comment">&lt;tt&gt;trace&lt;/tt&gt;<sp/>can<sp/>be<sp/>used<sp/>to<sp/>disable<sp/>execution<sp/>trace<sp/>printing,<sp/>i.e.<sp/>calls<sp/>to</highlight></codeline>
<codeline lineno="78"><highlight class="comment">fn:trace<sp/>are<sp/>eliminated.<sp/>Per<sp/>default,<sp/>the<sp/>feature<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="79"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="comment">&lt;li&gt;&lt;b&gt;hof:&lt;/b&gt;<sp/>Higher-order<sp/>functions<sp/>will<sp/>be<sp/>introduced<sp/>in<sp/>the<sp/>upcoming<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="comment">XQuery<sp/>3.0<sp/>recommendation.<sp/>This<sp/>feature<sp/>is<sp/>only<sp/>partially<sp/>implemented<sp/>in<sp/>Zorba.</highlight></codeline>
<codeline lineno="82"><highlight class="comment">Hence,<sp/>it<sp/>is<sp/>disabled<sp/>by<sp/>default.<sp/>However,<sp/>the<sp/>local<sp/>name<sp/>&lt;tt&gt;hof&lt;/tt&gt;<sp/>can<sp/>be<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="comment">used<sp/>to<sp/>enable<sp/>the<sp/>feature<sp/>if<sp/>requested.</highlight></codeline>
<codeline lineno="84"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="comment">&lt;li&gt;&lt;b&gt;dtd:&lt;/b&gt;<sp/>The<sp/>local<sp/>name<sp/>&lt;tt&gt;dtd&lt;/tt&gt;<sp/>can<sp/>be<sp/>used<sp/>to<sp/>enable<sp/>or<sp/>disable<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="comment">DTD<sp/>validation<sp/>when<sp/>parsing<sp/>resources<sp/>retrieved<sp/>by<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="comment">&lt;a<sp/>href=&quot;http://www.w3.org/TR/xpath-functions-30/#func-doc&quot;&gt;fn:doc&lt;/a&gt;.<sp/>DTD<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="comment">validation<sp/>is<sp/>disabled<sp/>by<sp/>default.</highlight></codeline>
<codeline lineno="89"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="comment">&lt;li&gt;&lt;b&gt;http-uri-resolution:&lt;/b&gt;<sp/>When<sp/>resolving<sp/>URIs<sp/>for<sp/>schema<sp/>and<sp/>module</highlight></codeline>
<codeline lineno="91"><highlight class="comment">import<sp/>statements,<sp/>Zorba<sp/>always<sp/>first<sp/>attempts<sp/>to<sp/>map<sp/>the<sp/>URI<sp/>to<sp/>a<sp/>local</highlight></codeline>
<codeline lineno="92"><highlight class="comment">filesystem<sp/>location<sp/>(see<sp/>\ref<sp/>builtin_uri_resolver).<sp/>As<sp/>a<sp/>fallback,<sp/>Zorba</highlight></codeline>
<codeline lineno="93"><highlight class="comment">will<sp/>then<sp/>by<sp/>default<sp/>attempt<sp/>to<sp/>use<sp/>HTTP,<sp/>HTTPS,<sp/>or<sp/>FTP<sp/>(depending<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="94"><highlight class="comment">URI<sp/>scheme)<sp/>to<sp/>download<sp/>the<sp/>resource<sp/>from<sp/>the<sp/>internet.<sp/>The<sp/>local<sp/>name</highlight></codeline>
<codeline lineno="95"><highlight class="comment">&lt;tt&gt;http-uri-resolution&lt;/tt&gt;<sp/>can<sp/>be<sp/>used<sp/>to<sp/>enable<sp/>or<sp/>disable<sp/>this<sp/>network</highlight></codeline>
<codeline lineno="96"><highlight class="comment">fallback.<sp/>By<sp/>default<sp/>it<sp/>is<sp/>enabled.</highlight></codeline>
<codeline lineno="97"><highlight class="comment">\note<sp/>Because<sp/>XQuery<sp/>options<sp/>must<sp/>appear<sp/>in<sp/>queries<sp/>after<sp/>import<sp/>statements,</highlight></codeline>
<codeline lineno="98"><highlight class="comment">unfortunately<sp/>the<sp/>&lt;tt&gt;http-uri-resolution&lt;/tt&gt;<sp/>option<sp/>can<sp/>have<sp/>no<sp/>effect<sp/>if</highlight></codeline>
<codeline lineno="99"><highlight class="comment">it<sp/>is<sp/>specified<sp/>inside<sp/>query<sp/>text.<sp/>It<sp/>must<sp/>be<sp/>specified<sp/>using<sp/>the<sp/>C++<sp/>API</highlight></codeline>
<codeline lineno="100"><highlight class="comment">or<sp/>a<sp/>Zorba<sp/>command-line<sp/>option.<sp/>An<sp/>error<sp/>will<sp/>be<sp/>raised<sp/>if<sp/>this<sp/>option<sp/>is</highlight></codeline>
<codeline lineno="101"><highlight class="comment">specified<sp/>inside<sp/>query<sp/>text<sp/>to<sp/>avoid<sp/>confusion.</highlight></codeline>
<codeline lineno="102"><highlight class="comment">\note<sp/>Also<sp/>note<sp/>that,<sp/>unlike<sp/>other<sp/>features,<sp/>this<sp/>feature<sp/>is<sp/>always<sp/>set<sp/>or</highlight></codeline>
<codeline lineno="103"><highlight class="comment">unset<sp/>Zorba-wide.</highlight></codeline>
<codeline lineno="104"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment">\subsubsection<sp/>options_Optimizations<sp/>Providing<sp/>Optimizer<sp/>Hints</highlight></codeline>
<codeline lineno="108"><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">Options<sp/>can<sp/>also<sp/>be<sp/>used<sp/>to<sp/>provide<sp/>the<sp/>Zorba<sp/>optimizer<sp/>with<sp/>certain<sp/>&quot;hints&quot;.</highlight></codeline>
<codeline lineno="110"><highlight class="comment">All<sp/>options<sp/>used<sp/>for<sp/>this<sp/>purpose<sp/>have<sp/>a<sp/>QName<sp/>whose<sp/>namespace<sp/>URI<sp/>is</highlight></codeline>
<codeline lineno="111"><highlight class="comment">&lt;tt&gt;http://zorba.io/options/optimizer&lt;/tt&gt;.<sp/>For<sp/>some<sp/>hints,<sp/>the</highlight></codeline>
<codeline lineno="112"><highlight class="comment">optimizer<sp/>needs<sp/>to<sp/>know<sp/>only<sp/>whether<sp/>the<sp/>hint<sp/>should<sp/>be<sp/>applied<sp/>or<sp/>not;<sp/>no</highlight></codeline>
<codeline lineno="113"><highlight class="comment">additional<sp/>information<sp/>is<sp/>required.<sp/>For<sp/>such<sp/>hints,<sp/>Zorba<sp/>recognizes<sp/>two<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="comment">options,<sp/>whose<sp/>local<sp/>name<sp/>is<sp/>&lt;tt&gt;enable&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;disable&lt;/tt&gt;,<sp/>respectivaly,</highlight></codeline>
<codeline lineno="115"><highlight class="comment">and<sp/>whose<sp/>value<sp/>is<sp/>a<sp/>comma<sp/>separated<sp/>list<sp/>of<sp/>hint<sp/>names.<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">Currently,<sp/>Zorba<sp/>recognizes<sp/>only<sp/>one<sp/>optimizer<sp/>hint,<sp/>called<sp/>the<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="comment">for-serialization-only<sp/>hint.<sp/>It<sp/>is<sp/>used<sp/>to<sp/>tell<sp/>the<sp/>optimizer<sp/>that<sp/>the<sp/>only</highlight></codeline>
<codeline lineno="119"><highlight class="comment">operation<sp/>that<sp/>me<sp/>be<sp/>applied<sp/>to<sp/>the<sp/>query<sp/>result<sp/>(i.e.,<sp/>to<sp/>the<sp/>sequence<sp/>of<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="comment">items<sp/>returned<sp/>by<sp/>the<sp/>query)<sp/>is<sp/>serialization.<sp/>With<sp/>this<sp/>knowledge,<sp/>the<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="comment">optimizer<sp/>may<sp/>be<sp/>able<sp/>to<sp/>apply<sp/>optimizations<sp/>that<sp/>would<sp/>not<sp/>be<sp/>possible</highlight></codeline>
<codeline lineno="122"><highlight class="comment">otherwise.<sp/>For<sp/>example,<sp/>it<sp/>may<sp/>be<sp/>able<sp/>to<sp/>avoid<sp/>the<sp/>copying<sp/>of<sp/>nodes<sp/>that</highlight></codeline>
<codeline lineno="123"><highlight class="comment">are<sp/>returned<sp/>by<sp/>an<sp/>enclosed<sp/>expression<sp/>within<sp/>a<sp/>node<sp/>constructor.<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment">The<sp/>following<sp/>query<sp/>shows<sp/>the<sp/>usage<sp/>of<sp/>this<sp/>hint.<sp/>The<sp/>query<sp/>groups<sp/>a<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="126"><highlight class="comment">sale<sp/>records<sp/>by<sp/>country,<sp/>and<sp/>prints<sp/>the<sp/>sales<sp/>in<sp/>each<sp/>country<sp/>within<sp/>a<sp/>\code<sp/>&lt;country&gt;<sp/>\endcode</highlight></codeline>
<codeline lineno="127"><highlight class="comment">tag<sp/>whose<sp/>name<sp/>attribute<sp/>gives<sp/>the<sp/>name<sp/>of<sp/>the<sp/>associated<sp/>country.<sp/>The<sp/>optimizer</highlight></codeline>
<codeline lineno="128"><highlight class="comment">can<sp/>use<sp/>the<sp/>for-serialization-only<sp/>hint<sp/>to<sp/>avoid<sp/>copying<sp/>the<sp/>$sale<sp/>nodes<sp/>when</highlight></codeline>
<codeline lineno="129"><highlight class="comment">it<sp/>constructs<sp/>each<sp/>of<sp/>the<sp/>new<sp/>\code<sp/>&lt;country&gt;<sp/>\endcode<sp/>nodes.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="132"><highlight class="comment">declare<sp/>namespace<sp/>opt<sp/>=<sp/>&quot;http://zorba.io/options/optimizer&quot;;</highlight></codeline>
<codeline lineno="133"><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment">declare<sp/>option<sp/>opt:enable<sp/>&quot;for-serialization-only&quot;;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment">for<sp/>$sale<sp/>in<sp/>doc(&quot;sales.xml&quot;)/sale</highlight></codeline>
<codeline lineno="137"><highlight class="comment">let<sp/>$country<sp/>:=<sp/>$sale/country</highlight></codeline>
<codeline lineno="138"><highlight class="comment">group<sp/>by<sp/>$country</highlight></codeline>
<codeline lineno="139"><highlight class="comment">return<sp/>&lt;country<sp/>name={$country}&gt;{$sale}&lt;/country&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="142"><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment">The<sp/>for-serialization-only<sp/>hint<sp/>can<sp/>also<sp/>be<sp/>turned<sp/>on<sp/>or<sp/>off<sp/>via<sp/>the<sp/>use<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="comment">Zorba_CompilerHints<sp/>struct<sp/>in<sp/>the<sp/>C++<sp/>API.<sp/>Using<sp/>an<sp/>option<sp/>declaration<sp/>to<sp/>enable</highlight></codeline>
<codeline lineno="145"><highlight class="comment">or<sp/>disable<sp/>the<sp/>hint<sp/>overwrites<sp/>the<sp/>value<sp/>stored<sp/>in<sp/>Zorba_CompilerHints.<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment"></highlight></codeline>
<codeline lineno="148"><highlight class="comment">\subsubsection<sp/>options_warning<sp/>Warnings<sp/>in<sp/>Zorba</highlight></codeline>
<codeline lineno="149"><highlight class="comment"></highlight></codeline>
<codeline lineno="150"><highlight class="comment">Warnings<sp/>are<sp/>diagnostic<sp/>messages<sp/>that<sp/>report<sp/>constructions<sp/>which<sp/>are<sp/>not<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="comment">inherently<sp/>erroneous<sp/>but<sp/>which<sp/>are<sp/>risky<sp/>or<sp/>suggest<sp/>there<sp/>may<sp/>have<sp/>been<sp/>an<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="comment">error.<sp/>Analogous<sp/>to<sp/>errors,<sp/>warnings<sp/>are<sp/>identified<sp/>by<sp/>QNames.<sp/>Using<sp/>options,</highlight></codeline>
<codeline lineno="153"><highlight class="comment">the<sp/>user<sp/>can<sp/>control<sp/>whether<sp/>a<sp/>particular<sp/>warning<sp/>(or<sp/>all<sp/>warnings)<sp/>is<sp/>(are)<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="comment">enabled,<sp/>disabled,<sp/>or<sp/>treated<sp/>as<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">For<sp/>example,<sp/>given<sp/>the<sp/>following<sp/>prolog,<sp/>all<sp/>warnings<sp/>are<sp/>treated<sp/>as<sp/>errors:</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/>declare<sp/>namespace<sp/>op<sp/>=<sp/>&quot;http://zorba.io/options/warnings&quot;;</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/>declare<sp/>namespace<sp/>w<sp/>=<sp/>&quot;http://zorba.io/warnings&quot;;</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/>declare<sp/>option<sp/>op:error<sp/>&quot;w:all&quot;;</highlight></codeline>
<codeline lineno="163"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="164"><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment">If<sp/>a<sp/>given<sp/>warning<sp/>doesn&apos;t<sp/>specify<sp/>a<sp/>prefix,<sp/>the<sp/>name<sp/>is<sp/>resolved<sp/>against<sp/>the<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="comment">default<sp/>warning<sp/>namespace<sp/>&lt;tt&gt;http://zorba.io/warnings&lt;/tt&gt;.<sp/>All<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="comment">Zorba<sp/>specific<sp/>warnings<sp/>are<sp/>defined<sp/>in<sp/>this<sp/>namespace.<sp/>A<sp/>comprehensive<sp/>list<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="comment">of<sp/>warnings<sp/>is<sp/>contained<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>C++<sp/>header<sp/>file<sp/>diagnostic_list.h.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment">The<sp/>following<sp/>snippet<sp/>causes<sp/>the<sp/>warning<sp/>&lt;tt&gt;ZWST0002&lt;/tt&gt;<sp/>(warn<sp/>for<sp/>unknown<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="comment">annotations)<sp/>to<sp/>be<sp/>suppressed:</highlight></codeline>
<codeline lineno="172"><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/>declare<sp/>namespace<sp/>op<sp/>=<sp/>&quot;http://zorba.io/options/warnings&quot;;</highlight></codeline>
<codeline lineno="175"><highlight class="comment"></highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/>declare<sp/>option<sp/>op:disable<sp/>&quot;ZWST0002&quot;;</highlight></codeline>
<codeline lineno="177"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="178"><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">\subsubsection<sp/>options_versioning<sp/>Zorba<sp/>Module<sp/>Versioning</highlight></codeline>
<codeline lineno="181"><highlight class="comment"></highlight></codeline>
<codeline lineno="182"><highlight class="comment">Zorba<sp/>provides<sp/>a<sp/>way<sp/>that<sp/>allows<sp/>the<sp/>developer<sp/>of<sp/>a<sp/>module<sp/>to<sp/>specify<sp/>a<sp/>version<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="comment">of<sp/>his<sp/>module<sp/>without<sp/>changing<sp/>the<sp/>target<sp/>namespace.<sp/>An<sp/>importing<sp/>module<sp/>can<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="comment">specify<sp/>restriction<sp/>on<sp/>the<sp/>version<sp/>of<sp/>a<sp/>module<sp/>it<sp/>wants<sp/>to<sp/>use.<sp/>This<sp/>allows<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="comment">developers<sp/>to<sp/>easily<sp/>declare<sp/>dependencies<sp/>between<sp/>particular<sp/>versions<sp/>of<sp/>a<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="comment">module.<sp/>In<sp/>addition,<sp/>a<sp/>module<sp/>can<sp/>specify<sp/>on<sp/>which<sp/>version<sp/>of<sp/>Zorba<sp/>it<sp/>depends.</highlight></codeline>
<codeline lineno="187"><highlight class="comment">Details<sp/>about<sp/>module<sp/>versioning<sp/>can<sp/>be<sp/>found<sp/>at<sp/>\ref<sp/>mod_versioning.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment">The<sp/>options<sp/>to<sp/>declare<sp/>the<sp/>module<sp/>and<sp/>zorba<sp/>version<sp/>are<sp/>listed<sp/>here<sp/>for<sp/>completeness.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment">To<sp/>declare<sp/>version<sp/>2.5<sp/>of<sp/>a<sp/>module<sp/>that<sp/>depends<sp/>on<sp/>version<sp/>2.0<sp/>of<sp/>Zorba,<sp/>the</highlight></codeline>
<codeline lineno="192"><highlight class="comment">following<sp/>option<sp/>declaration<sp/>may<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="195"><highlight class="comment">declare<sp/>namespace<sp/>ver<sp/>=<sp/>&quot;http://zorba.io/options/versioning&quot;;</highlight></codeline>
<codeline lineno="196"><highlight class="comment">declare<sp/>option<sp/>ver:module-version<sp/>&quot;2.5&quot;;</highlight></codeline>
<codeline lineno="197"><highlight class="comment">declare<sp/>option<sp/>ver:zorba-version<sp/>&quot;2.0&quot;;</highlight></codeline>
<codeline lineno="198"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"></highlight></codeline>
<codeline lineno="201"><highlight class="comment">\subsection<sp/>options_introspection<sp/>Introspecting<sp/>Options<sp/>in<sp/>XQuery</highlight></codeline>
<codeline lineno="202"><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">In<sp/>a<sp/>module,<sp/>the<sp/>introspection<sp/>module<sp/>of<sp/>Zorba<sp/>can<sp/>be<sp/>used<sp/>to<sp/>get<sp/>the<sp/>value<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="comment">of<sp/>an<sp/>option<sp/>that<sp/>is<sp/>declared.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment">Specifically,<sp/>the<sp/>following<sp/>function<sp/>retrieves<sp/>the<sp/>value<sp/>of<sp/>an<sp/>option<sp/>that<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="comment">is<sp/>declared<sp/>in<sp/>the<sp/>prolog<sp/>of<sp/>the<sp/>module.<sp/>The<sp/>function<sp/>returns<sp/>the<sp/>empty<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="comment">sequence<sp/>if<sp/>the<sp/>option<sp/>is<sp/>not<sp/>contained<sp/>in<sp/>the<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="211"><highlight class="comment">declare<sp/>function<sp/>sctx:option($name<sp/>as<sp/>xs:QName)<sp/>as<sp/>xs:string?<sp/>external;</highlight></codeline>
<codeline lineno="212"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="213"><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment"></highlight></codeline>
<codeline lineno="215"><highlight class="comment">\subsection<sp/>options_available<sp/>Options<sp/>in<sp/>Host<sp/>Languages<sp/>and<sp/>External<sp/>Functions</highlight></codeline>
<codeline lineno="216"><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment">Besides<sp/>declaring<sp/>an<sp/>option<sp/>in<sp/>the<sp/>prolog<sp/>of<sp/>a<sp/>module,<sp/>options<sp/>can<sp/>also<sp/>be<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="comment">declared<sp/>or<sp/>retrieved<sp/>using<sp/>the<sp/>StaticContext<sp/>representation<sp/>in<sp/>any<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="comment">language<sp/>bindings<sp/>(i.e.<sp/>C++,<sp/>C,<sp/>PHP,<sp/>Ruby,<sp/>Python,<sp/>or<sp/>Java).</highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment">For<sp/>instance,<sp/>the<sp/>C++<sp/>API<sp/>provides<sp/>the<sp/>following<sp/>two<sp/>functions<sp/>to<sp/>retrieve<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="comment">the<sp/>value<sp/>of<sp/>an<sp/>option<sp/>declared<sp/>in<sp/>a<sp/>query<sp/>and<sp/>declare<sp/>options<sp/>to<sp/>be<sp/>used<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="comment">in<sp/>a<sp/>query,<sp/>respectively.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/>&lt;li&gt;<sp/>bool<sp/>StaticContext::getOption(<sp/>const<sp/>Item&amp;<sp/>aQName,<sp/>String&amp;<sp/>aOptionValue)<sp/>const;</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/>&lt;li&gt;<sp/>void<sp/>StaticContext::declareOption(<sp/>const<sp/>Item&amp;<sp/>aQName,<sp/>const<sp/>String&amp;<sp/>aOptionValue);</highlight></codeline>
<codeline lineno="228"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="229"><highlight class="comment"></highlight></codeline>
<codeline lineno="230"><highlight class="comment">For<sp/>example,<sp/>the<sp/>following<sp/>code<sp/>snippet<sp/>depicts<sp/>how<sp/>the<sp/>higher-order<sp/>function<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="comment">feature<sp/>can<sp/>be<sp/>enabled<sp/>for<sp/>all<sp/>modules<sp/>compiled<sp/>with<sp/>the<sp/>given<sp/>static<sp/>context.</highlight></codeline>
<codeline lineno="232"><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="234"><highlight class="comment">zorba::StaticContext_t<sp/>lContext<sp/>=<sp/>zorba-&gt;createStaticContext();</highlight></codeline>
<codeline lineno="235"><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment">zorba::Item<sp/>lEnable<sp/>=<sp/>zorba-&gt;getItemFactory()-&gt;createQName(</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/>&quot;http://zorba.io/options/features&quot;,<sp/>&quot;&quot;,<sp/>&quot;enable&quot;);</highlight></codeline>
<codeline lineno="238"><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment">lContext-&gt;declareOption(lEnable,<sp/>&quot;hof&quot;);</highlight></codeline>
<codeline lineno="240"><highlight class="comment"></highlight></codeline>
<codeline lineno="241"><highlight class="comment">zorba::XQuery_t<sp/>lQuery<sp/>=<sp/>zorba-&gt;compileQuery(&quot;1+1&quot;,<sp/>lContext);</highlight></codeline>
<codeline lineno="242"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="243"><highlight class="comment"></highlight></codeline>
<codeline lineno="244"><highlight class="comment">Declaring<sp/>and<sp/>retrieving<sp/>the<sp/>value<sp/>of<sp/>an<sp/>option<sp/>is<sp/>particularly<sp/>useful<sp/>in<sp/></highlight></codeline>
<codeline lineno="245"><highlight class="comment">external<sp/>functions.<sp/>The<sp/>developer<sp/>of<sp/>an<sp/>external<sp/>function<sp/>can<sp/>retrieve<sp/>the<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="comment">value<sp/>of<sp/>an<sp/>option<sp/>(from<sp/>the<sp/>static<sp/>context<sp/>passed<sp/>to<sp/>the<sp/>function).<sp/>This<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="comment">way,<sp/>she<sp/>can<sp/>customize<sp/>the<sp/>behavior<sp/>of<sp/>her<sp/>function.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment"></highlight></codeline>
<codeline lineno="250"><highlight class="comment">\section<sp/>annotation_introduction<sp/>Annotations</highlight></codeline>
<codeline lineno="251"><highlight class="comment"></highlight></codeline>
<codeline lineno="252"><highlight class="comment">In<sp/>XQuery<sp/>(starting<sp/>with<sp/>version<sp/>3.0)<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="comment">&lt;a<sp/>href=&quot;http://www.w3.org/TR/xquery-30/#id-annotations&quot;&gt;annotations&lt;/a&gt;<sp/>may</highlight></codeline>
<codeline lineno="254"><highlight class="comment">be<sp/>used<sp/>to<sp/>properties<sp/>associated<sp/>with<sp/>functions<sp/>and<sp/>variables.<sp/>Zorba<sp/>also<sp/>uses<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="comment">annotations<sp/>for<sp/>collections<sp/>and<sp/>indexes.<sp/>Annotations<sp/>are<sp/>&lt;tt&gt;(QName,<sp/>value)&lt;/tt&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="comment">pairs.<sp/>The<sp/>prefix<sp/>of<sp/>the<sp/>QName<sp/>is<sp/>resolved<sp/>using<sp/>the<sp/>statically<sp/>known<sp/>namespaces.</highlight></codeline>
<codeline lineno="257"><highlight class="comment">If<sp/>no<sp/>prefix<sp/>is<sp/>present,<sp/>the<sp/>name<sp/>is<sp/>the<sp/>default<sp/>function<sp/>namespace.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"></highlight></codeline>
<codeline lineno="259"><highlight class="comment"></highlight></codeline>
<codeline lineno="260"><highlight class="comment">\subsection<sp/>annotations_available<sp/>Available<sp/>Annotations</highlight></codeline>
<codeline lineno="261"><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment">\subsubsection<sp/>xquery_annotations<sp/>XQuery<sp/>3.0<sp/>Annotation</highlight></codeline>
<codeline lineno="263"><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment">XQuery<sp/>3.0<sp/>itself<sp/>defines<sp/>two<sp/>annotations:<sp/>&lt;tt&gt;%fn:public&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;%fn:private&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="265"><highlight class="comment">Those<sp/>annotations<sp/>allow<sp/>the<sp/>user<sp/>to<sp/>declare<sp/>a<sp/>function<sp/>or<sp/>a<sp/>variable<sp/>as<sp/>public</highlight></codeline>
<codeline lineno="266"><highlight class="comment">or<sp/>private,<sp/>respectively.<sp/>A<sp/>private<sp/>variable<sp/>or<sp/>function<sp/>is<sp/>hidden<sp/>from<sp/>a<sp/>module<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="comment">import.<sp/>That<sp/>is,<sp/>it<sp/>can<sp/>not<sp/>be<sp/>used<sp/>in<sp/>the<sp/>importing<sp/>module.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"></highlight></codeline>
<codeline lineno="269"><highlight class="comment">For<sp/>example,<sp/>a<sp/>function<sp/>declared<sp/>a<sp/>module<sp/>as<sp/>follows,<sp/>can<sp/>not<sp/>be<sp/>used<sp/>in<sp/>a<sp/>module</highlight></codeline>
<codeline lineno="270"><highlight class="comment">which<sp/>imports<sp/>the<sp/>&lt;tt&gt;mymodule&lt;/tt&gt;<sp/>module:</highlight></codeline>
<codeline lineno="271"><highlight class="comment"></highlight></codeline>
<codeline lineno="272"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="273"><highlight class="comment">declare<sp/>%private<sp/>function<sp/>mymodule:foo()<sp/>{<sp/>&quot;foo&quot;<sp/>};</highlight></codeline>
<codeline lineno="274"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="275"><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment">\subsubsection<sp/>zorba_annotations<sp/>Zorba<sp/>Specific<sp/>Annotations</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment">Zorba<sp/>provides<sp/>a<sp/>number<sp/>of<sp/>annotations<sp/>that<sp/>allow<sp/>the<sp/>user<sp/>to<sp/>define<sp/>the<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="comment">semantics<sp/>of<sp/>functions,<sp/>variables,<sp/>collections,<sp/>and<sp/>indexes.<sp/>All<sp/>these<sp/></highlight></codeline>
<codeline lineno="281"><highlight class="comment">annotations<sp/>have<sp/>the<sp/>namespace<sp/>&lt;tt&gt;http://zorba.io/annotations&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment">\paragraph<sp/>deterministic_annotation<sp/>Deterministic<sp/>and<sp/>Nondeterministic<sp/>Functions</highlight></codeline>
<codeline lineno="285"><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment">A<sp/>deterministic<sp/>function<sp/>is<sp/>a<sp/>function<sp/>that<sp/>always<sp/>evaluates<sp/>to<sp/>the<sp/>same<sp/>result<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="comment">if<sp/>it<sp/>is<sp/>invoked<sp/>multiple<sp/>times<sp/>with<sp/>the<sp/>same<sp/>arguments<sp/>during<sp/>the<sp/>evaluation<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="comment">of<sp/>a<sp/>&lt;a<sp/>href=&quot;/scripting-spec?anchor=id-snapshot-scope&quot;&gt;snapshot&lt;/a&gt;.<sp/>In<sp/>general,<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="comment">all<sp/>functions<sp/>defined<sp/>by<sp/>XQuery<sp/>are<sp/>deterministic.<sp/>However,<sp/>a<sp/>module<sp/>developer<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="comment">might<sp/>develop<sp/>a<sp/>function<sp/>(in<sp/>a<sp/>host<sp/>language)<sp/>which<sp/>does<sp/>not<sp/>guarantee<sp/>to<sp/>be<sp/></highlight></codeline>
<codeline lineno="291"><highlight class="comment">deterministic.<sp/>For<sp/>example,<sp/>a<sp/>function<sp/>generating<sp/>random<sp/>numbers<sp/>is<sp/>clearly<sp/></highlight></codeline>
<codeline lineno="292"><highlight class="comment">not<sp/>deterministic.<sp/>Knowing<sp/>about<sp/>this<sp/>property<sp/>is<sp/>crucial<sp/>for<sp/>the<sp/>query<sp/>optimizer</highlight></codeline>
<codeline lineno="293"><highlight class="comment">to<sp/>retain<sp/>the<sp/>semantics<sp/>(e.g.<sp/>caching<sp/>would<sp/>lead<sp/>to<sp/>incorrect<sp/>results).</highlight></codeline>
<codeline lineno="294"><highlight class="comment"></highlight></codeline>
<codeline lineno="295"><highlight class="comment">For<sp/>this<sp/>reason,<sp/>Zorba<sp/>provides<sp/>two<sp/>annotations<sp/>(&lt;tt&gt;nondeterministic&lt;/tt&gt;<sp/>and</highlight></codeline>
<codeline lineno="296"><highlight class="comment">&lt;tt&gt;deterministic&lt;/tt&gt;)<sp/>that<sp/>allow<sp/>a<sp/>developer<sp/>to<sp/>declare<sp/>whether<sp/>a<sp/>function<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="comment">is<sp/>deterministic<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment">As<sp/>an<sp/>example,<sp/>the<sp/>following<sp/>snippet<sp/>declares<sp/>a<sp/>nondeterministic<sp/>random<sp/>function.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"></highlight></codeline>
<codeline lineno="301"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="302"><highlight class="comment">declare<sp/>namespace<sp/>an<sp/>=<sp/>&quot;http://zorba.io/annotations&quot;;</highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment">declare<sp/>%an:nondeterministic<sp/>function<sp/>random:random()<sp/>as<sp/>xs:integer<sp/>external;</highlight></codeline>
<codeline lineno="305"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="306"><highlight class="comment"></highlight></codeline>
<codeline lineno="307"><highlight class="comment">If<sp/>not<sp/>specified<sp/>otherwise,<sp/>all<sp/>functions<sp/>are<sp/>being<sp/>treated<sp/>as<sp/>deterministic.</highlight></codeline>
<codeline lineno="308"><highlight class="comment">If<sp/>some<sp/>function<sp/>invokes<sp/>a<sp/>nondeterministic<sp/>function,<sp/>the<sp/>invoking<sp/>function<sp/>itself<sp/>must<sp/>also<sp/>be<sp/>declared<sp/>as<sp/>nondeterministc,<sp/>otherwise<sp/>zerr::ZXQP0040<sp/>is<sp/>raised.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"></highlight></codeline>
<codeline lineno="310"><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment">\paragraph<sp/>sequential_annotation<sp/>Sequential<sp/>Functions</highlight></codeline>
<codeline lineno="312"><highlight class="comment"></highlight></codeline>
<codeline lineno="313"><highlight class="comment">In<sp/>XQuery<sp/>3.0,<sp/>an<sp/>expression<sp/>never<sp/>has<sp/>any<sp/>side<sp/>effects<sp/>other<sp/>than<sp/>constructing<sp/>new<sp/>nodes<sp/>(not<sp/>even<sp/>updating<sp/>expressions,<sp/>which<sp/>merely<sp/>produce<sp/>a<sp/>pending<sp/>update<sp/>list).</highlight></codeline>
<codeline lineno="314"><highlight class="comment">Zorba<sp/>Scripting<sp/>programs<sp/>may<sp/>have<sp/>side<sp/>effects.</highlight></codeline>
<codeline lineno="315"><highlight class="comment">Side<sp/>effects<sp/>can<sp/>be<sp/>made<sp/>with<sp/>statements.</highlight></codeline>
<codeline lineno="316"><highlight class="comment">An<sp/>expression<sp/>is<sp/>sequential<sp/>if<sp/>it<sp/>contains<sp/>statements<sp/>that<sp/>have<sp/>side<sp/>effects<sp/>(updating<sp/>some<sp/>XML,<sp/>assigning<sp/>a<sp/>variable<sp/>in<sp/>scope<sp/>outside<sp/>of<sp/>the<sp/>expression)<sp/>or<sp/>that<sp/>affect<sp/>the<sp/>control<sp/>flow<sp/>(break,<sp/>continue,<sp/>exit<sp/>returning),<sp/>or<sp/>if<sp/>it<sp/>invokes<sp/>a<sp/>sequential<sp/>function.</highlight></codeline>
<codeline lineno="317"><highlight class="comment">Analogously<sp/>to<sp/>nondeterministic<sp/>functions,<sp/>the<sp/>compiler<sp/>needs<sp/>to<sp/>be<sp/>able<sp/>to<sp/>infer<sp/>if<sp/>an<sp/>expression<sp/>is<sp/>sequential.</highlight></codeline>
<codeline lineno="318"><highlight class="comment">In<sp/>order<sp/>to<sp/>do<sp/>so,<sp/>Zorba<sp/>provides<sp/>the<sp/>&lt;tt&gt;%an:sequential&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;%an:nonsequential&lt;/tt&gt;<sp/>annotations.</highlight></codeline>
<codeline lineno="319"><highlight class="comment">The<sp/>&lt;tt&gt;%an:sequential&lt;/tt&gt;<sp/>annotation<sp/>must<sp/>be<sp/>used<sp/>to<sp/>declare<sp/>(external)<sp/>functions<sp/>that<sp/>have<sp/>side<sp/>effects.</highlight></codeline>
<codeline lineno="320"><highlight class="comment">If<sp/>non<sp/>of<sp/>these<sp/>annotations<sp/>is<sp/>present,<sp/>the<sp/>default<sp/>for<sp/>a<sp/>function<sp/>is<sp/>to<sp/>be<sp/>annotated<sp/>as<sp/>&lt;tt&gt;%an:nonsequential&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="321"><highlight class="comment">If<sp/>a<sp/>function<sp/>invokes<sp/>a<sp/>sequential<sp/>function<sp/>but<sp/>is<sp/>itself<sp/>not<sp/>declared<sp/>sequential<sp/>(i.e.<sp/>no<sp/>annotation<sp/>or<sp/>&lt;tt&gt;%an:nonsequential&lt;/tt&gt;),<sp/>an<sp/>error<sp/>is<sp/>raised<sp/>(zerr:XSST0004).</highlight></codeline>
<codeline lineno="322"><highlight class="comment"></highlight></codeline>
<codeline lineno="323"><highlight class="comment">For<sp/>example,<sp/>the<sp/>&lt;tt&gt;http:post&lt;/tt&gt;<sp/>function<sp/>of<sp/>the<sp/>http-client<sp/>module<sp/>is<sp/>declared<sp/>as<sp/>sequential<sp/>because<sp/>invoking<sp/>it<sp/>might<sp/>cause<sp/>a<sp/>side<sp/>effect<sp/>(e.g.<sp/>a<sp/>payment<sp/>with<sp/>paypal).</highlight></codeline>
<codeline lineno="324"><highlight class="comment"></highlight></codeline>
<codeline lineno="325"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="326"><highlight class="comment">declare<sp/>%an:sequential<sp/>function<sp/>http:post(</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/>$href<sp/>as<sp/>xs:string,</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/>$body<sp/>as<sp/>item(),</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/>$content-type<sp/>as<sp/>xs:string)<sp/>as<sp/>item()+<sp/>{<sp/>...<sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="331"><highlight class="comment"></highlight></codeline>
<codeline lineno="332"><highlight class="comment">\paragraph<sp/>assignable_annotation<sp/>Assignable<sp/>and<sp/>Nonassignale<sp/>Variables</highlight></codeline>
<codeline lineno="333"><highlight class="comment">In<sp/>plain<sp/>XQuery<sp/>without<sp/>scripting,<sp/>global<sp/>variables<sp/>(i.e.<sp/>those<sp/>declared<sp/>in<sp/>the<sp/>prolog<sp/>of<sp/>a<sp/>module)<sp/>can<sp/>not<sp/>be<sp/>assigned<sp/>a<sp/>value.</highlight></codeline>
<codeline lineno="334"><highlight class="comment">In<sp/>scripting<sp/>(i.e.<sp/>if<sp/>the<sp/>scripting<sp/>feature<sp/>is<sp/>enabled),<sp/>however,<sp/>values<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>a<sp/>variable.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"></highlight></codeline>
<codeline lineno="336"><highlight class="comment">In<sp/>order<sp/>to<sp/>allow<sp/>the<sp/>developer<sp/>to<sp/>prevent<sp/>variable<sp/>assignments<sp/>(even<sp/>with<sp/>scripting),<sp/>Zorba<sp/>provides<sp/>the<sp/>&lt;tt&gt;%an:nonassignable&lt;/tt&gt;<sp/>annotation.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment">For<sp/>example,<sp/>preventing<sp/>a<sp/>variable<sp/>from<sp/>being<sp/>assigned<sp/>in<sp/>scripting<sp/>mode<sp/>could<sp/>be<sp/>done<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="339"><highlight class="comment"></highlight></codeline>
<codeline lineno="340"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="341"><highlight class="comment">declare<sp/>namespace<sp/>an<sp/>=<sp/>&quot;http://zorba.io/annotations&quot;;</highlight></codeline>
<codeline lineno="342"><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment">declare<sp/>%an:nonassignable<sp/>variable<sp/>$var<sp/>:=<sp/>3;</highlight></codeline>
<codeline lineno="344"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="345"><highlight class="comment"></highlight></codeline>
<codeline lineno="346"><highlight class="comment">If<sp/>a<sp/>value<sp/>is<sp/>assigned<sp/>to<sp/>a<sp/>nonassignable<sp/>variable,<sp/>the<sp/>error<sp/>&lt;tt&gt;XSST0007&lt;/tt&gt;<sp/>in<sp/>the<sp/>Zorba<sp/>error<sp/>namespace<sp/>is<sp/>raised.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment">\paragraph<sp/>variadic_annotation<sp/>Variadic<sp/>Functions</highlight></codeline>
<codeline lineno="349"><highlight class="comment">A<sp/>function<sp/>annotated<sp/>with<sp/>the<sp/>&lt;tt&gt;%an:variadic&lt;/tt&gt;<sp/>annotation<sp/>is<sp/>a<sp/>function<sp/>of<sp/>indefinite<sp/>arity,<sp/>i.e.<sp/>one<sp/>that<sp/>accepts<sp/>a<sp/>variable<sp/>number<sp/>of<sp/>arguments.<sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="comment"></highlight></codeline>
<codeline lineno="351"><highlight class="comment">For<sp/>example,<sp/>the<sp/>function<sp/>to<sp/>create<sp/>an<sp/>unordered<sp/>map<sp/>with<sp/>an<sp/>arbitrary<sp/>number<sp/>of<sp/>key<sp/>types<sp/>(see<sp/>module<sp/>&lt;a<sp/>href=&quot;/modules/latest/zorba.io/modules/store/data-structures/unordered-map&quot;&gt;http://zorba.io/modules/store/data-structures/unordered-map&lt;/a&gt;)<sp/>is<sp/>declared<sp/>as<sp/>follow:</highlight></codeline>
<codeline lineno="352"><highlight class="comment"></highlight></codeline>
<codeline lineno="353"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="354"><highlight class="comment">declare<sp/>%an:variadic<sp/>%an:sequential<sp/>function<sp/>map:create(</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/>$name<sp/>as<sp/>xs:QName,</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/>$key-type<sp/>as<sp/>xs:QName)<sp/>as<sp/>empty-sequence()<sp/>external;</highlight></codeline>
<codeline lineno="357"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="358"><highlight class="comment"></highlight></codeline>
<codeline lineno="359"><highlight class="comment"></highlight></codeline>
<codeline lineno="360"><highlight class="comment">\paragraph<sp/>streamable_annotation<sp/>Streamable<sp/>Strings</highlight></codeline>
<codeline lineno="361"><highlight class="comment"></highlight></codeline>
<codeline lineno="362"><highlight class="comment">A<sp/>function<sp/>annotated<sp/>with<sp/>the<sp/>&lt;tt&gt;streamable&lt;/tt&gt;<sp/>annotation<sp/>is<sp/>a<sp/>function<sp/>that<sp/>may<sp/>return<sp/>an<sp/>xs:string<sp/>item<sp/>whose<sp/>content<sp/>is<sp/>streamed.</highlight></codeline>
<codeline lineno="363"><highlight class="comment">Such<sp/>a<sp/>string<sp/>is<sp/>called<sp/>a<sp/>streamable<sp/>string.</highlight></codeline>
<codeline lineno="364"><highlight class="comment">They<sp/>have<sp/>the<sp/>advantage<sp/>that<sp/>their<sp/>contents<sp/>does<sp/>not<sp/>need<sp/>to<sp/>be<sp/>materialized<sp/>in<sp/>memory.</highlight></codeline>
<codeline lineno="365"><highlight class="comment">If<sp/>a<sp/>function<sp/>consuming<sp/>such<sp/>a<sp/>string<sp/>is<sp/>able<sp/>to<sp/>process<sp/>the<sp/>string<sp/>in<sp/>a<sp/>streaming<sp/>fashion,<sp/>this<sp/>allows<sp/>for<sp/>processing<sp/>of<sp/>strings<sp/>with<sp/>a<sp/>virtually<sp/>infinite<sp/>length.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"></highlight></codeline>
<codeline lineno="367"><highlight class="comment">For<sp/>example,<sp/>the<sp/>following<sp/>XQuery<sp/>code,<sp/>reads<sp/>a<sp/>file<sp/>from<sp/>disk<sp/>and<sp/>returns<sp/>the<sp/>contents<sp/>to<sp/>the<sp/>standard<sp/>output<sp/>of<sp/>the<sp/>calling<sp/>process.</highlight></codeline>
<codeline lineno="368"><highlight class="comment">Because<sp/>the<sp/>file:read-text<sp/>function<sp/>is<sp/>annotated<sp/>using<sp/>the<sp/>&lt;tt&gt;streamable&lt;/tt&gt;<sp/>annotation,<sp/>the<sp/>file<sp/>does<sp/>not<sp/>have<sp/>to<sp/>be<sp/>materialized<sp/>in<sp/>memory.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"></highlight></codeline>
<codeline lineno="370"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="371"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>file<sp/>=<sp/>&quot;http://expath.org/ns/file&quot;;</highlight></codeline>
<codeline lineno="372"><highlight class="comment"></highlight></codeline>
<codeline lineno="373"><highlight class="comment">file:read-text(&quot;big_file.txt&quot;)</highlight></codeline>
<codeline lineno="374"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="375"><highlight class="comment"></highlight></codeline>
<codeline lineno="376"><highlight class="comment">However,<sp/>the<sp/>disadvantage<sp/>is<sp/>that<sp/>a<sp/>streamable<sp/>string<sp/>can<sp/>only<sp/>be<sp/>consumed<sp/>exactly<sp/>once.</highlight></codeline>
<codeline lineno="377"><highlight class="comment">If<sp/>a<sp/>streamable<sp/>string<sp/>is<sp/>consumed<sp/>more<sp/>than<sp/>once,<sp/>an<sp/>error<sp/>is<sp/>raised.</highlight></codeline>
<codeline lineno="378"><highlight class="comment">In<sp/>order<sp/>to<sp/>enable<sp/>multiple<sp/>consumers<sp/>of<sp/>a<sp/>streamable<sp/>string,<sp/>the<sp/>materialize<sp/>function<sp/>of<sp/>the<sp/>string<sp/>module<sp/>(&lt;a<sp/>href=&quot;/modules/latest/zorba.io/modules/string&quot;&gt;http://zorba.io/modules/string&lt;/a&gt;)<sp/>should<sp/>be<sp/>used<sp/>to<sp/>materialize<sp/>the<sp/>entire<sp/>contents<sp/>in<sp/>an<sp/>(regular)<sp/>xs:string<sp/>item.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"></highlight></codeline>
<codeline lineno="380"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="381"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>file<sp/>=<sp/>&quot;http://expath.org/ns/file&quot;;</highlight></codeline>
<codeline lineno="382"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>string<sp/>=<sp/>&quot;http://zorba.io/modules/string&quot;;</highlight></codeline>
<codeline lineno="383"><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment">let<sp/>$x<sp/>:=<sp/>string:materialize(file:read-text(&quot;myfile.txt&quot;)))</highlight></codeline>
<codeline lineno="385"><highlight class="comment">return<sp/>($x,<sp/>$x)</highlight></codeline>
<codeline lineno="386"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="387"><highlight class="comment"></highlight></codeline>
<codeline lineno="388"><highlight class="comment">In<sp/>this<sp/>example,<sp/>the<sp/>&lt;tt&gt;file:read-text&lt;/tt&gt;<sp/>function<sp/>returns<sp/>a<sp/>streamable<sp/>string<sp/>whose<sp/>contents<sp/>is<sp/>used<sp/>twice<sp/>in<sp/>the<sp/>query.</highlight></codeline>
<codeline lineno="389"><highlight class="comment">In<sp/>order<sp/>to<sp/>be<sp/>able<sp/>to<sp/>use<sp/>the<sp/>value<sp/>twice,<sp/>the<sp/>&lt;tt&gt;string:materialize&lt;/tt&gt;<sp/>function<sp/>must<sp/>be<sp/>used<sp/>to<sp/>materialize<sp/>the<sp/>entire<sp/>contents<sp/>of<sp/>the<sp/>file<sp/>&lt;tt&gt;myfile.txt&lt;/tt&gt;<sp/>in<sp/>memory.</highlight></codeline>
<codeline lineno="390"><highlight class="comment">Otherwise,<sp/>the<sp/>error<sp/>zerr:ZSTR0055<sp/>is<sp/>raised.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment"></highlight></codeline>
<codeline lineno="393"><highlight class="comment">\paragraph<sp/>caching_annotation<sp/>Caching<sp/>Results<sp/>of<sp/>Functions</highlight></codeline>
<codeline lineno="394"><highlight class="comment"></highlight></codeline>
<codeline lineno="395"><highlight class="comment">Caching<sp/>of<sp/>function<sp/>results<sp/>may<sp/>improve<sp/>performance<sp/>when<sp/>computationally<sp/></highlight></codeline>
<codeline lineno="396"><highlight class="comment">expensive<sp/>functions<sp/>are<sp/>invoked<sp/>multiple<sp/>times<sp/>with<sp/>the<sp/>same<sp/>arguments.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"></highlight></codeline>
<codeline lineno="398"><highlight class="comment">If<sp/>the<sp/>optimization<sp/>level<sp/>is<sp/>O1<sp/>or<sp/>higher,<sp/>Zorba<sp/>automatically<sp/>caches<sp/>results</highlight></codeline>
<codeline lineno="399"><highlight class="comment">of<sp/>recursive,<sp/>deterministic,<sp/>and<sp/>non-sequential<sp/>functions<sp/>whose<sp/>parameter<sp/>and<sp/></highlight></codeline>
<codeline lineno="400"><highlight class="comment">return<sp/>types<sp/>are<sp/>subtypes<sp/>of<sp/>xs:anyAtomicType.<sp/>Specifically,<sp/>if<sp/>such<sp/>a<sp/>function</highlight></codeline>
<codeline lineno="401"><highlight class="comment">is<sp/>called<sp/>more<sp/>than<sp/>once<sp/>with<sp/>the<sp/>same<sp/>arguments,<sp/>the<sp/>result<sp/>of<sp/>the<sp/>first<sp/>call</highlight></codeline>
<codeline lineno="402"><highlight class="comment">will<sp/>be<sp/>cached<sp/>and<sp/>subsequent<sp/>calls<sp/>will<sp/>return<sp/>the<sp/>cached<sp/>value<sp/>without<sp/></highlight></codeline>
<codeline lineno="403"><highlight class="comment">re-evaluating<sp/>the<sp/>function.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"></highlight></codeline>
<codeline lineno="405"><highlight class="comment">For<sp/>example,<sp/>in<sp/>the<sp/>following<sp/>recursive<sp/>function<sp/>computing<sp/>a<sp/>fibonacci<sp/>number,<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="comment">each<sp/>result<sp/>is<sp/>automatically<sp/>cached<sp/>and,<sp/>hence,<sp/>dramatically<sp/>improves<sp/>performance.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"></highlight></codeline>
<codeline lineno="408"><highlight class="comment">\include<sp/>zorba/udf/udf-fib-rec.xq</highlight></codeline>
<codeline lineno="409"><highlight class="comment"></highlight></codeline>
<codeline lineno="410"><highlight class="comment">Specifically,<sp/>this<sp/>optimization<sp/>reduces<sp/>the<sp/>complexity<sp/>of<sp/>the<sp/>function<sp/>from</highlight></codeline>
<codeline lineno="411"><highlight class="comment">O(1.6^n)<sp/>to<sp/>O(n).</highlight></codeline>
<codeline lineno="412"><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment">In<sp/>order<sp/>to<sp/>explicitly<sp/>disable<sp/>function<sp/>caching,<sp/>the<sp/>user<sp/>can<sp/>specify<sp/>the<sp/></highlight></codeline>
<codeline lineno="414"><highlight class="comment">&lt;tt&gt;%an:no-cache&lt;/tt&gt;<sp/>annotation.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"></highlight></codeline>
<codeline lineno="416"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>user<sp/>can<sp/>use<sp/>the<sp/>&lt;tt&gt;%an:cache&lt;/tt&gt;<sp/>annotation<sp/>to<sp/>cache<sp/>the<sp/></highlight></codeline>
<codeline lineno="417"><highlight class="comment">results<sp/>of<sp/>functions<sp/>other<sp/>than<sp/>the<sp/>ones<sp/>that<sp/>are<sp/>automatically<sp/>cached.<sp/>However,<sp/></highlight></codeline>
<codeline lineno="418"><highlight class="comment">this<sp/>will<sp/>only<sp/>work<sp/>if<sp/>the<sp/>function<sp/>is<sp/>not<sp/>updating<sp/>and<sp/>its<sp/>parameter<sp/>and<sp/>return</highlight></codeline>
<codeline lineno="419"><highlight class="comment">types<sp/>are<sp/>subtypes<sp/>of<sp/>xs:anyAtomicType;<sp/>otherwise,<sp/>Zorba<sp/>will<sp/>raise<sp/>a<sp/>warning<sp/></highlight></codeline>
<codeline lineno="420"><highlight class="comment">(zwarn:ZWST0005)<sp/>and<sp/>simply<sp/>ignore<sp/>the<sp/>%an:cache<sp/>annotation.</highlight></codeline>
<codeline lineno="421"><highlight class="comment"></highlight></codeline>
<codeline lineno="422"><highlight class="comment">Please<sp/>note,<sp/>that<sp/>explicitly<sp/>enforcing<sp/>caching<sp/>for<sp/>sequential<sp/>or<sp/>nondeterministic</highlight></codeline>
<codeline lineno="423"><highlight class="comment">functions<sp/>might<sp/>not<sp/>give<sp/>the<sp/>intended<sp/>result.<sp/>In<sp/>such<sp/>cases,<sp/>Zorba<sp/>will<sp/>raise<sp/>a</highlight></codeline>
<codeline lineno="424"><highlight class="comment">warning<sp/>(zwarn:ZWST0006)<sp/>but<sp/>obey<sp/>the<sp/>%an:cache<sp/>annotation.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"></highlight></codeline>
<codeline lineno="426"><highlight class="comment"></highlight></codeline>
<codeline lineno="427"><highlight class="comment">\paragraph<sp/>no_copy_rule_annotation<sp/>Avoiding<sp/>Node<sp/>Copying<sp/>in<sp/>Node<sp/>Constructors.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"></highlight></codeline>
<codeline lineno="429"><highlight class="comment">According<sp/>to<sp/>the<sp/>XQuery<sp/>specification,<sp/>any<sp/>nodes<sp/>(and<sp/>their<sp/>subtrees)<sp/>returned</highlight></codeline>
<codeline lineno="430"><highlight class="comment">by<sp/>an<sp/>enclosed<sp/>expression<sp/>appearing<sp/>inside<sp/>a<sp/>node<sp/>constructor<sp/>must<sp/>be<sp/>copied,</highlight></codeline>
<codeline lineno="431"><highlight class="comment">and<sp/>it<sp/>is<sp/>the<sp/>copied<sp/>subtrees<sp/>that<sp/>are<sp/>then<sp/>connected<sp/>to<sp/>the<sp/>newly<sp/>constructed</highlight></codeline>
<codeline lineno="432"><highlight class="comment">node.<sp/>However,<sp/>such<sp/>copying<sp/>is<sp/>not<sp/>always<sp/>necessary.<sp/>If<sp/>no<sp/>copying<sp/>is<sp/>done,<sp/>then</highlight></codeline>
<codeline lineno="433"><highlight class="comment">some<sp/>nodes<sp/>will<sp/>be<sp/>&quot;shared&quot;<sp/>by<sp/>multiple<sp/>trees.<sp/>XML<sp/>trees<sp/>that<sp/>do<sp/>not<sp/>contain</highlight></codeline>
<codeline lineno="434"><highlight class="comment">any<sp/>shared<sp/>nodes<sp/>will<sp/>be<sp/>referred<sp/>to<sp/>as<sp/>&quot;stand-alone<sp/>trees&quot;.<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="comment"></highlight></codeline>
<codeline lineno="436"><highlight class="comment">Whether<sp/>node<sp/>copying<sp/>is<sp/>really<sp/>necessary<sp/>or<sp/>not<sp/>depends<sp/>on<sp/>the<sp/>kind<sp/>of<sp/>operations<sp/></highlight></codeline>
<codeline lineno="437"><highlight class="comment">that<sp/>are<sp/>going<sp/>to<sp/>be<sp/>performed<sp/>on<sp/>the<sp/>nodes<sp/>and<sp/>their<sp/>associated<sp/>trees<sp/>after<sp/>the<sp/></highlight></codeline>
<codeline lineno="438"><highlight class="comment">node<sp/>construction.<sp/>For<sp/>example,<sp/>copying<sp/>is<sp/>necessary<sp/>if<sp/>any<sp/>operations<sp/>involving</highlight></codeline>
<codeline lineno="439"><highlight class="comment">node<sp/>identity,<sp/>document<sp/>ordering,<sp/>or<sp/>reverse<sp/>axis<sp/>traversals<sp/>are<sp/>to<sp/>be<sp/>performed</highlight></codeline>
<codeline lineno="440"><highlight class="comment">on<sp/>the<sp/>newly<sp/>constructed<sp/>tree.<sp/>Copying<sp/>is<sp/>also<sp/>necessary<sp/>if<sp/>the<sp/>relevant<sp/>nodes<sp/>may</highlight></codeline>
<codeline lineno="441"><highlight class="comment">be<sp/>involved<sp/>in<sp/>a<sp/>later<sp/>update<sp/>operation.<sp/>The<sp/>Zorba<sp/>optimizer<sp/>is<sp/>able<sp/>to<sp/>analyze</highlight></codeline>
<codeline lineno="442"><highlight class="comment">the<sp/>query<sp/>expressions<sp/>and<sp/>determine<sp/>automatically<sp/>whether<sp/>copying<sp/>is<sp/>required<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="443"><highlight class="comment">However,<sp/>the<sp/>optimizer<sp/>needs<sp/>some<sp/>help<sp/>from<sp/>the<sp/>user<sp/>in<sp/>the<sp/>case<sp/>of<sp/>external</highlight></codeline>
<codeline lineno="444"><highlight class="comment">functions,<sp/>because<sp/>it<sp/>cannot<sp/>look<sp/>into<sp/>the<sp/>operations<sp/>of<sp/>such<sp/>functions.<sp/>For<sp/>this,</highlight></codeline>
<codeline lineno="445"><highlight class="comment">Zorba<sp/>provides<sp/>two<sp/>annotations<sp/>that<sp/>users<sp/>may<sp/>annotate<sp/>their<sp/>external<sp/>functions<sp/></highlight></codeline>
<codeline lineno="446"><highlight class="comment">with<sp/>in<sp/>order<sp/>to<sp/>help<sp/>the<sp/>optimizer<sp/>determine<sp/>whether<sp/>to<sp/>copy<sp/>nodes<sp/>or<sp/>not.<sp/></highlight></codeline>
<codeline lineno="447"><highlight class="comment"></highlight></codeline>
<codeline lineno="448"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="449"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="450"><highlight class="comment">&lt;b&gt;%an:must-copy-input-nodes&lt;/b&gt;.<sp/>This<sp/>annotation<sp/>has<sp/>an<sp/>associated<sp/>value,<sp/>which</highlight></codeline>
<codeline lineno="451"><highlight class="comment">is<sp/>a<sp/>list<sp/>of<sp/>integer<sp/>literals.<sp/>The<sp/>meaning<sp/>of<sp/>the<sp/>annotation<sp/>is<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="452"><highlight class="comment">If<sp/>a<sp/>number<sp/>N<sp/>appears<sp/>in<sp/>the<sp/>value,<sp/>then<sp/>the<sp/>function<sp/>requires<sp/>that<sp/>any<sp/>nodes</highlight></codeline>
<codeline lineno="453"><highlight class="comment">that<sp/>are<sp/>bound<sp/>to<sp/>the<sp/>N-th<sp/>parameter<sp/>when<sp/>the<sp/>function<sp/>is<sp/>called,<sp/>must<sp/>belong<sp/>to</highlight></codeline>
<codeline lineno="454"><highlight class="comment">standalone<sp/>trees<sp/>(because<sp/>the<sp/>function<sp/>is<sp/>going<sp/>to<sp/>perform<sp/>on<sp/>such<sp/>nodes<sp/>an<sp/></highlight></codeline>
<codeline lineno="455"><highlight class="comment">operation<sp/>that<sp/>requires<sp/>standalone<sp/>trees).<sp/>As<sp/>a<sp/>result<sp/>of<sp/>this<sp/>information,<sp/>the</highlight></codeline>
<codeline lineno="456"><highlight class="comment">optimizer<sp/>makes<sp/>sure<sp/>that<sp/>node<sp/>copying<sp/>is<sp/>done<sp/>during<sp/>any<sp/>node<sp/>constructor<sp/>whose</highlight></codeline>
<codeline lineno="457"><highlight class="comment">result<sp/>(or<sp/>any<sp/>subtree<sp/>of<sp/>it)<sp/>may<sp/>be<sp/>given<sp/>as<sp/>input<sp/>to<sp/>such<sp/>an<sp/>external<sp/>function.</highlight></codeline>
<codeline lineno="458"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="459"><highlight class="comment">&lt;li&gt;</highlight></codeline>
<codeline lineno="460"><highlight class="comment">&lt;b&gt;%an:propagates-input-nodes&lt;/b&gt;.<sp/>This<sp/>annotation<sp/>has<sp/>an<sp/>associated<sp/>value,<sp/>which</highlight></codeline>
<codeline lineno="461"><highlight class="comment">is<sp/>a<sp/>list<sp/>of<sp/>integer<sp/>literals.<sp/>The<sp/>meaning<sp/>of<sp/>the<sp/>annotation<sp/>is<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="462"><highlight class="comment">If<sp/>a<sp/>number<sp/>N<sp/>appears<sp/>in<sp/>the<sp/>value,<sp/>then<sp/>the<sp/>function<sp/>may<sp/>return<sp/>to<sp/>its<sp/>caller</highlight></codeline>
<codeline lineno="463"><highlight class="comment">a<sp/>node<sp/>n<sp/>that<sp/>is<sp/>bound<sp/>to<sp/>the<sp/>N-th<sp/>parameter,<sp/>or<sp/>a<sp/>node<sp/>in<sp/>the<sp/>subtree<sp/>of<sp/>n.<sp/>This</highlight></codeline>
<codeline lineno="464"><highlight class="comment">annotation<sp/>helps<sp/>the<sp/>optimizer<sp/>determine<sp/>whether<sp/>nodes<sp/>consumed<sp/>by<sp/>an<sp/>expression</highlight></codeline>
<codeline lineno="465"><highlight class="comment">are<sp/>coming<sp/>from<sp/>a<sp/>node<sp/>constructor,<sp/>so<sp/>that<sp/>if<sp/>the<sp/>expression<sp/>requires<sp/>stand-alone</highlight></codeline>
<codeline lineno="466"><highlight class="comment">trees,<sp/>then<sp/>the<sp/>optimizer<sp/>will<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>relevant<sp/>node<sp/>constructor<sp/>does</highlight></codeline>
<codeline lineno="467"><highlight class="comment">copy<sp/>nodes.</highlight></codeline>
<codeline lineno="468"><highlight class="comment">&lt;/li&gt;</highlight></codeline>
<codeline lineno="469"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="470"><highlight class="comment"></highlight></codeline>
<codeline lineno="471"><highlight class="comment">The<sp/>absence<sp/>of<sp/>any<sp/>of<sp/>the<sp/>above<sp/><sp/>annotations<sp/>from<sp/>an<sp/>external<sp/>function<sp/>declaration</highlight></codeline>
<codeline lineno="472"><highlight class="comment">is<sp/>treated<sp/>as<sp/>if<sp/>the<sp/>annotation<sp/>was<sp/>present<sp/>with<sp/>a<sp/>value<sp/>listing<sp/>all<sp/>the<sp/>numbers<sp/></highlight></codeline>
<codeline lineno="473"><highlight class="comment">between<sp/>1<sp/>and<sp/>M,<sp/>where<sp/>M<sp/>is<sp/>the<sp/>function<sp/>arity.</highlight></codeline>
<codeline lineno="474"><highlight class="comment"></highlight></codeline>
<codeline lineno="475"><highlight class="comment">\paragraph<sp/>collection_index_annotations<sp/>Annotations<sp/>on<sp/>Collections<sp/>and<sp/>Indexes</highlight></codeline>
<codeline lineno="476"><highlight class="comment"></highlight></codeline>
<codeline lineno="477"><highlight class="comment">The<sp/>\ref<sp/>xqddf<sp/>uses<sp/>annotations<sp/>to<sp/>assign<sp/>properties<sp/>to<sp/>collections<sp/>and<sp/>indexes.</highlight></codeline>
<codeline lineno="478"><highlight class="comment">For<sp/>example,<sp/>annotations<sp/>can<sp/>be<sp/>used<sp/>to<sp/>specify<sp/>that<sp/>a<sp/>collection<sp/>is<sp/>unordered<sp/>or<sp/>that<sp/>an<sp/>index<sp/>is<sp/>a<sp/>value<sp/>equality<sp/>index.</highlight></codeline>
<codeline lineno="479"><highlight class="comment"></highlight></codeline>
<codeline lineno="480"><highlight class="comment">The<sp/>semantics<sp/>of<sp/>each<sp/>of<sp/>the<sp/>annotations<sp/>is<sp/>given<sp/>in<sp/>the<sp/>documentation<sp/>about<sp/>the<sp/>XQuery<sp/>Data<sp/>Definition<sp/>Facility.</highlight></codeline>
<codeline lineno="481"><highlight class="comment">However,<sp/>for<sp/>completeness,<sp/>we<sp/>also<sp/>list<sp/>all<sp/>of<sp/>the<sp/>annotations<sp/>here.</highlight></codeline>
<codeline lineno="482"><highlight class="comment"></highlight></codeline>
<codeline lineno="483"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;b&gt;%an:mutable,<sp/>%an:queue,<sp/>%an:append-only,<sp/>%an:const&lt;/b&gt;<sp/>Determines<sp/>whether<sp/>a<sp/>collection<sp/>is<sp/>mutable,<sp/>queue<sp/>(FIFO),<sp/>append-only,<sp/>or<sp/>const<sp/>(not<sp/>mutable).<sp/>The<sp/>default<sp/>annotation<sp/>is<sp/>mutable.<sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="485"><highlight class="comment"></highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;b&gt;%an:ordered,<sp/>%an:unordered&lt;/b&gt;<sp/><sp/>Annotations<sp/>to<sp/>specify<sp/>whether<sp/>the<sp/>order<sp/>of<sp/>nodes<sp/>in<sp/>a<sp/>collection<sp/>must<sp/>be<sp/>preserved.<sp/>The<sp/>default<sp/>is<sp/>ordered.&lt;/li&gt;</highlight></codeline>
<codeline lineno="487"><highlight class="comment"></highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;b&gt;%an:read-only-nodes,<sp/>%an:mutable-nodes&lt;/b&gt;<sp/>If<sp/>a<sp/>collection<sp/>is<sp/>annotated<sp/>with<sp/>read-only-nodes,<sp/>the<sp/>nodes<sp/>in<sp/>the<sp/>collection<sp/>can<sp/>not<sp/>be<sp/>modified<sp/>using<sp/>the<sp/>XQuery<sp/>Update<sp/>Facility.<sp/>The<sp/>default<sp/>is<sp/>%an:mutable-nodes.&lt;/li&gt;</highlight></codeline>
<codeline lineno="489"><highlight class="comment"></highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;b&gt;%an:unique,<sp/>%an:nonunique&lt;/b&gt;<sp/>Unique<sp/>indexes<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>relationship<sp/>between<sp/>index<sp/>keys<sp/>and<sp/>values<sp/>is<sp/>one-to-one.<sp/>The<sp/>default<sp/>is<sp/>%an:nonunique.&lt;/li&gt;</highlight></codeline>
<codeline lineno="491"><highlight class="comment"></highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;b&gt;%an:value-equality,<sp/>%an:value-range,<sp/>%an:general-range,<sp/>%an:general-equality&lt;/b&gt;<sp/>Determine<sp/>whether<sp/>the<sp/>index<sp/>is<sp/>a<sp/>value<sp/>or<sp/>general<sp/>equality<sp/>or<sp/>value<sp/>range<sp/>index,<sp/>respectively.<sp/>The<sp/>default<sp/>is<sp/>%an:value-equality.&lt;/li&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="comment"></highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;b&gt;%an:automatic,<sp/>%an:manual&lt;/b&gt;<sp/>If<sp/>an<sp/>index<sp/>is<sp/>declared<sp/>as<sp/>automatic,<sp/>Zorba<sp/>guarantees<sp/>that<sp/>the<sp/>index<sp/>is<sp/>maintained<sp/>automatically.<sp/>The<sp/>default<sp/>is<sp/>%an:manual.&lt;/li&gt;</highlight></codeline>
<codeline lineno="495"><highlight class="comment"></highlight></codeline>
<codeline lineno="496"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="497"><highlight class="comment"></highlight></codeline>
<codeline lineno="498"><highlight class="comment"></highlight></codeline>
<codeline lineno="499"><highlight class="comment">\subsection<sp/>annotations_introspection<sp/>Introspecting<sp/>Function<sp/>Annotations</highlight></codeline>
<codeline lineno="500"><highlight class="comment"></highlight></codeline>
<codeline lineno="501"><highlight class="comment">Analog<sp/>to<sp/>options,<sp/>the<sp/>introspection<sp/>module<sp/>of<sp/>that<sp/>comes<sp/>with<sp/>Zorba<sp/>allows<sp/>you<sp/>to<sp/>retrieve<sp/>all<sp/>annotations<sp/>declared<sp/>for<sp/>a<sp/>particular<sp/>function.</highlight></codeline>
<codeline lineno="502"><highlight class="comment"></highlight></codeline>
<codeline lineno="503"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="504"><highlight class="comment">declare<sp/>function<sp/>sctx:function-annotations(</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/>$name<sp/>as<sp/>xs:QName,</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/>$arity<sp/>as<sp/>xs:integer)<sp/>as<sp/>xs:QName*<sp/>external;</highlight></codeline>
<codeline lineno="507"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="508"><highlight class="comment"></highlight></codeline>
<codeline lineno="509"><highlight class="comment">\section<sp/>pragma_introduction<sp/>Extension<sp/>Expressions</highlight></codeline>
<codeline lineno="510"><highlight class="comment"></highlight></codeline>
<codeline lineno="511"><highlight class="comment">An<sp/>extension<sp/>expression<sp/>consists<sp/>of<sp/>one<sp/>or<sp/>more<sp/>pragmas,<sp/>followed<sp/>by<sp/>an<sp/>expression<sp/>enclosed<sp/>in<sp/>curly<sp/>braces.</highlight></codeline>
<codeline lineno="512"><highlight class="comment">A<sp/>pragma<sp/>might<sp/>be<sp/>used<sp/>to<sp/>modify<sp/>the<sp/>behavior<sp/>or<sp/>semantics<sp/>of<sp/>the<sp/>expression<sp/>enclosed<sp/>in<sp/>curly<sp/>braces.</highlight></codeline>
<codeline lineno="513"><highlight class="comment">Pragmas<sp/>are<sp/>denoted<sp/>by<sp/>the<sp/>delimiters<sp/>(#<sp/>and<sp/>#),<sp/>and<sp/>consists<sp/>of<sp/>an<sp/>identifying<sp/>EQName.</highlight></codeline>
<codeline lineno="514"><highlight class="comment">Zorba<sp/>recognizes<sp/>pragmas<sp/>having<sp/>the<sp/>namespace<sp/>&lt;tt&gt;http://zorba.io/extensions&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="515"><highlight class="comment">Specifically,<sp/>Zorba<sp/>recognizes<sp/>the<sp/>following<sp/>pragmas:</highlight></codeline>
<codeline lineno="516"><highlight class="comment"></highlight></codeline>
<codeline lineno="517"><highlight class="comment">&lt;ul&gt;</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/>&lt;li&gt;&lt;b&gt;no-copy&lt;/b&gt;<sp/>In<sp/>order<sp/>to<sp/>indicate<sp/>that<sp/>a<sp/>node<sp/>that<sp/>should<sp/>be<sp/>inserted<sp/>into<sp/>a<sp/>collection<sp/>does<sp/>not<sp/>need<sp/>to<sp/>be<sp/>copied<sp/>before<sp/>inserting<sp/>it.<sp/>Not<sp/>copying<sp/>a<sp/>node<sp/>improves<sp/>performance.<sp/>However,<sp/>the<sp/>user<sp/>needs<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>node<sp/>does<sp/>not<sp/>have<sp/>a<sp/>parent<sp/>and<sp/>is<sp/>not<sp/>modified<sp/>in<sp/>any<sp/>other<sp/>expression.<sp/>For<sp/>example,<sp/>in<sp/>the<sp/>following<sp/>example<sp/>snippet,<sp/>the<sp/>node<sp/>refered<sp/>to<sp/>by<sp/>&lt;tt&gt;$n&lt;/tt&gt;<sp/>will<sp/>not<sp/>be<sp/>copied<sp/>before<sp/>insertion<sp/>into<sp/>the<sp/>collection.</highlight></codeline>
<codeline lineno="519"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="520"><highlight class="comment">import<sp/>module<sp/>namespace<sp/>db<sp/>=<sp/>&quot;http://zorba.io/modules/store/dynamic/collections/dml&quot;;</highlight></codeline>
<codeline lineno="521"><highlight class="comment"></highlight></codeline>
<codeline lineno="522"><highlight class="comment">declare<sp/>namespace<sp/>ext<sp/>=<sp/>&quot;http://zorba.io/extensions&quot;;</highlight></codeline>
<codeline lineno="523"><highlight class="comment"></highlight></codeline>
<codeline lineno="524"><highlight class="comment">let<sp/>$n<sp/>:=<sp/>&lt;a/&gt;</highlight></codeline>
<codeline lineno="525"><highlight class="comment">return<sp/>(#<sp/>ext:no-copy<sp/>#)<sp/>{<sp/>$n<sp/>is<sp/><sp/>db:apply-insert-last(xs:QName(&quot;local:bar&quot;),<sp/>$n)<sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/>&lt;/li&gt;</highlight></codeline>
<codeline lineno="528"><highlight class="comment">&lt;/ul&gt;</highlight></codeline>
<codeline lineno="529"><highlight class="comment"></highlight></codeline>
<codeline lineno="530"><highlight class="comment"></highlight></codeline>
<codeline lineno="531"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/doc/zorba/options.dox"/>
  </compounddef>
</doxygen>
