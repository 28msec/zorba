<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="tokenizer_8h" kind="file">
    <compoundname>tokenizer.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">zorba/config.h</includes>
    <includes refid="cxx__util_8h" local="no">zorba/internal/cxx_util.h</includes>
    <includes refid="unique__ptr_8h" local="no">zorba/internal/unique_ptr.h</includes>
    <includes refid="ztd_8h" local="no">zorba/internal/ztd.h</includes>
    <includes refid="locale_8h" local="no">zorba/util/locale.h</includes>
    <incdepgraph>
      <node id="2307">
        <label>zorba/util/locale.h</label>
        <link refid="locale_8h"/>
      </node>
      <node id="2304">
        <label>functional</label>
      </node>
      <node id="2297">
        <label>zorba/internal/cxx_util.h</label>
        <link refid="cxx__util_8h"/>
        <childnode refid="2296" relation="include">
        </childnode>
      </node>
      <node id="2306">
        <label>string</label>
      </node>
      <node id="2300">
        <label>type_traits.h</label>
        <link refid="type__traits_8h"/>
        <childnode refid="2296" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
      </node>
      <node id="2295">
        <label>vector</label>
      </node>
      <node id="2305">
        <label>sstream</label>
      </node>
      <node id="2298">
        <label>zorba/internal/unique_ptr.h</label>
        <link refid="unique__ptr_8h"/>
        <childnode refid="2296" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2297" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2302" relation="include">
        </childnode>
      </node>
      <node id="2302">
        <label>ztd.h</label>
        <link refid="ztd_8h"/>
        <childnode refid="2303" relation="include">
        </childnode>
        <childnode refid="2304" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2306" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
        <childnode refid="2297" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
      </node>
      <node id="2301">
        <label>type_traits</label>
      </node>
      <node id="2296">
        <label>zorba/config.h</label>
      </node>
      <node id="2299">
        <label>algorithm</label>
      </node>
      <node id="2303">
        <label>cstring</label>
      </node>
      <node id="2294">
        <label>tokenizer.h</label>
        <link refid="tokenizer.h"/>
        <childnode refid="2295" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
        <childnode refid="2297" relation="include">
        </childnode>
        <childnode refid="2298" relation="include">
        </childnode>
        <childnode refid="2302" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classzorba_1_1Tokenizer_1_1Callback" prot="public">zorba::Tokenizer::Callback</innerclass>
    <innerclass refid="structzorba_1_1Tokenizer_1_1Properties" prot="public">zorba::Tokenizer::Properties</innerclass>
    <innerclass refid="structzorba_1_1Tokenizer_1_1State" prot="public">zorba::Tokenizer::State</innerclass>
    <innerclass refid="classzorba_1_1Tokenizer" prot="public">zorba::Tokenizer</innerclass>
    <innerclass refid="classzorba_1_1TokenizerProvider" prot="public">zorba::TokenizerProvider</innerclass>
    <innernamespace refid="namespacezorba">zorba</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006-2008<sp/>The<sp/>FLWOR<sp/>Foundation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>ZORBA_TOKENIZER_API_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ZORBA_TOKENIZER_API_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zorba/config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cxx__util_8h" kindref="compound">zorba/internal/cxx_util.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="unique__ptr_8h" kindref="compound">zorba/internal/unique_ptr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ztd_8h" kindref="compound">zorba/internal/ztd.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="locale_8h" kindref="compound">zorba/util/locale.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">zorba<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Item;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="33"><highlight class="comment">///////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="34"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>A<sp/>%Tokenizer<sp/>breaks<sp/>a<sp/>string<sp/>into<sp/>a<sp/>stream<sp/>of<sp/>word<sp/>tokens.<sp/><sp/>Each<sp/>token<sp/>is</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>assigned<sp/>a<sp/>token,<sp/>sentence,<sp/>and<sp/>paragraph<sp/>number.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>A<sp/>%Tokenizer<sp/>determines<sp/>word<sp/>and<sp/>sentence<sp/>boundaries<sp/>automatically,<sp/>but<sp/>must</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>be<sp/>told<sp/>when<sp/>to<sp/>increment<sp/>the<sp/>paragraph<sp/>number.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classzorba_1_1Tokenizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1Tokenizer" kindref="compound" tooltip="A Tokenizer breaks a string into a stream of word tokens.">Tokenizer</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classstd_1_1unique__ptr" kindref="compound">std::unique_ptr&lt;Tokenizer,internal::ztd::destroy_delete&lt;Tokenizer&gt;</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="45" refid="classzorba_1_1Tokenizer_1aca3811e6d2e00c3b1a16d262ee4c0049" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Tokenizer_1aca3811e6d2e00c3b1a16d262ee4c0049" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classzorba_1_1Tokenizer_1aa5e55ee2bd87d3ec759382c6bb104656" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Tokenizer_1aa5e55ee2bd87d3ec759382c6bb104656" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>/////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*<sp/>A<sp/>%State<sp/>contains<sp/>inter-Tokenizer<sp/>state,<sp/>currently<sp/>the<sp/>current<sp/>token,</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*<sp/>sentence,<sp/>and<sp/>paragraph<sp/>numbers.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structzorba_1_1Tokenizer_1_1State" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">State</ref><sp/>{</highlight></codeline>
<codeline lineno="56" refid="structzorba_1_1Tokenizer_1_1State_1a4e872f6efb8ffbf58057f26ea268cafe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Tokenizer_1aa5e55ee2bd87d3ec759382c6bb104656" kindref="member">Tokenizer::size_type</ref><sp/><ref refid="structzorba_1_1Tokenizer_1_1State_1a4e872f6efb8ffbf58057f26ea268cafe" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structzorba_1_1Tokenizer_1_1State_1a5d16a0871e2bdc9ecb1564ef0054686f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structzorba_1_1Tokenizer_1_1State_1a4e872f6efb8ffbf58057f26ea268cafe" kindref="member">value_type</ref><sp/><ref refid="structzorba_1_1Tokenizer_1_1State_1a5d16a0871e2bdc9ecb1564ef0054686f" kindref="member" tooltip="Token number.">token</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>Token<sp/>number.</highlight></codeline>
<codeline lineno="59" refid="structzorba_1_1Tokenizer_1_1State_1a8bcb47e615c7444e9f104ec18645df32" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structzorba_1_1Tokenizer_1_1State_1a4e872f6efb8ffbf58057f26ea268cafe" kindref="member">value_type</ref><sp/><ref refid="structzorba_1_1Tokenizer_1_1State_1a8bcb47e615c7444e9f104ec18645df32" kindref="member" tooltip="Sentence number.">sent</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Sentence<sp/>number.</highlight></codeline>
<codeline lineno="60" refid="structzorba_1_1Tokenizer_1_1State_1ab654bf2ed715ee0a98acb78135ae934a" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structzorba_1_1Tokenizer_1_1State_1a4e872f6efb8ffbf58057f26ea268cafe" kindref="member">value_type</ref><sp/><ref refid="structzorba_1_1Tokenizer_1_1State_1ab654bf2ed715ee0a98acb78135ae934a" kindref="member" tooltip="Paragraph number.">para</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Paragraph<sp/>number.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Default<sp/>constructor.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">State</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/>/////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>*<sp/>A<sp/>%Callback<sp/>is<sp/>called<sp/>once<sp/>per<sp/>token.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>only<sp/>internally<sp/>by<sp/>Zorba.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/>*<sp/>You<sp/>do<sp/>not<sp/>need<sp/>to<sp/>derive<sp/>from<sp/>this<sp/>class.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classzorba_1_1Tokenizer_1_1Callback" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classzorba_1_1Tokenizer_1_1Callback" kindref="compound" tooltip="A Callback is called once per token.">Callback</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classzorba_1_1Tokenizer_1_1Callback_1a766a0079d32feae9976f4d3f1f823b29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Tokenizer_1aa5e55ee2bd87d3ec759382c6bb104656" kindref="member">Tokenizer::size_type</ref><sp/><ref refid="classzorba_1_1Tokenizer_1_1Callback_1a766a0079d32feae9976f4d3f1f823b29" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classzorba_1_1Tokenizer_1_1Callback" kindref="compound" tooltip="A Callback is called once per token.">Callback</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>member-function<sp/>is<sp/>called<sp/>whenever<sp/>an<sp/>item<sp/>that<sp/>is<sp/>being<sp/>tokenized</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>entered<sp/>or<sp/>exited.<sp/><sp/>The<sp/>default<sp/>implementation<sp/>does<sp/>nothing.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>item<sp/>The<sp/>item<sp/>being<sp/>entered<sp/>or<sp/>exited.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>entering<sp/>If<sp/>\c<sp/>true,<sp/>the<sp/>item<sp/>is<sp/>being<sp/>entered;<sp/>if<sp/>\c<sp/>false,<sp/>the</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>item<sp/>is<sp/>being<sp/>exited.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>item(<sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;item,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>entering<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>member-function<sp/>is<sp/>called<sp/>once<sp/>per<sp/>token.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>utf8_s<sp/><sp/><sp/><sp/>The<sp/>UTF-8<sp/>token<sp/>string.<sp/><sp/>It<sp/>is<sp/>not<sp/>null-terminated.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>utf8_len<sp/><sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>in<sp/>the<sp/>token<sp/>string.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>lang<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>language<sp/>of<sp/>the<sp/>token.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>token_no<sp/><sp/>The<sp/>token<sp/>number.<sp/><sp/>Token<sp/>numbers<sp/>start<sp/>at<sp/>0.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>sent_no<sp/><sp/><sp/>The<sp/>sentence<sp/>number.<sp/><sp/>Sentence<sp/>numbers<sp/>start<sp/>at<sp/>1.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>para_no<sp/><sp/><sp/>The<sp/>paragraph<sp/>number.<sp/><sp/>Paragraph<sp/>numbers<sp/>start<sp/>at<sp/>1.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>item<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>Item<sp/>this<sp/>token<sp/>is<sp/>from,<sp/>if<sp/>any.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>token(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*utf8_s,<sp/><ref refid="classzorba_1_1Tokenizer_1_1Callback_1a766a0079d32feae9976f4d3f1f823b29" kindref="member">size_type</ref><sp/>utf8_len,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781" kindref="member">locale::iso639_1::type</ref><sp/>lang,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Tokenizer_1_1Callback_1a766a0079d32feae9976f4d3f1f823b29" kindref="member">size_type</ref><sp/>token_no,<sp/><ref refid="classzorba_1_1Tokenizer_1_1Callback_1a766a0079d32feae9976f4d3f1f823b29" kindref="member">size_type</ref><sp/>sent_no,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Tokenizer_1_1Callback_1a766a0079d32feae9976f4d3f1f823b29" kindref="member">size_type</ref><sp/>para_no,<sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*item<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/>/////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Various<sp/>properties<sp/>of<sp/>this<sp/>%Tokenizer.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structzorba_1_1Tokenizer_1_1Properties" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structzorba_1_1Tokenizer_1_1Properties" kindref="compound" tooltip="Various properties of this Tokenizer.">Properties</ref><sp/>{</highlight></codeline>
<codeline lineno="114" refid="structzorba_1_1Tokenizer_1_1Properties_1a0ac548e60e52893d02781884e58ea79f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;locale::iso639_1::type&gt;<sp/><ref refid="structzorba_1_1Tokenizer_1_1Properties_1a0ac548e60e52893d02781884e58ea79f" kindref="member">languages_type</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>\c<sp/>true,<sp/>XML<sp/>comments<sp/>separate<sp/>tokens.<sp/><sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\c<sp/>net&amp;lt;!----&amp;gt;work<sp/>would<sp/>be<sp/>2<sp/>tokens<sp/>instead<sp/>of<sp/>1.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="structzorba_1_1Tokenizer_1_1Properties_1a620e79be436f548d3fd7469be4459a51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structzorba_1_1Tokenizer_1_1Properties_1a620e79be436f548d3fd7469be4459a51" kindref="member" tooltip="If true, XML comments separate tokens.">comments_separate_tokens</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>\c<sp/>true,<sp/>XML<sp/>elements<sp/>separate<sp/>tokens.<sp/><sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\c<sp/>&amp;lt;b&amp;gt;B&amp;lt;/b&amp;gt;old<sp/>would<sp/>be<sp/>2<sp/>tokens<sp/>instead<sp/>of<sp/>1.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="structzorba_1_1Tokenizer_1_1Properties_1afa6f171307c94afbb4e75e490d327358" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structzorba_1_1Tokenizer_1_1Properties_1afa6f171307c94afbb4e75e490d327358" kindref="member" tooltip="If true, XML elements separate tokens.">elements_separate_tokens</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>\c<sp/>true,<sp/>XML<sp/>processing<sp/>instructions<sp/>separate<sp/>tokens.<sp/><sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>&lt;code&gt;net&amp;lt;?PI<sp/>pi?&amp;gt;work&lt;/code&gt;<sp/>would<sp/>be<sp/>2<sp/>tokens<sp/>instead<sp/>of<sp/>1.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structzorba_1_1Tokenizer_1_1Properties_1a8605c5db1eea69c4000cd00d58f9ea4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structzorba_1_1Tokenizer_1_1Properties_1a8605c5db1eea69c4000cd00d58f9ea4f" kindref="member" tooltip="If true, XML processing instructions separate tokens.">processing_instructions_separate_tokens</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>set<sp/>of<sp/>languages<sp/>supported.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="structzorba_1_1Tokenizer_1_1Properties_1a7aa68e42f6c9c830b3e686d84dab542b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structzorba_1_1Tokenizer_1_1Properties_1a0ac548e60e52893d02781884e58ea79f" kindref="member">languages_type</ref><sp/><ref refid="structzorba_1_1Tokenizer_1_1Properties_1a7aa68e42f6c9c830b3e686d84dab542b" kindref="member" tooltip="The set of languages supported.">languages</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>URI<sp/>that<sp/>uniquely<sp/>identifies<sp/>this<sp/>%Tokenizer.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="structzorba_1_1Tokenizer_1_1Properties_1ae93b36226ae697fe1c6369c6361b4116" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="structzorba_1_1Tokenizer_1_1Properties_1ae93b36226ae697fe1c6369c6361b4116" kindref="member" tooltip="The URI that uniquely identifies this Tokenizer.">uri</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Gets<sp/>the<sp/>Properties<sp/>of<sp/>this<sp/>%Tokenizer.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>result<sp/>The<sp/>Properties<sp/>to<sp/>populate.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>properties(<sp/><ref refid="structzorba_1_1Tokenizer_1_1Properties" kindref="compound" tooltip="Various properties of this Tokenizer.">Properties</ref><sp/>*result<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/>/////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="153"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Destroys<sp/>this<sp/>%Tokenizer.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>by<sp/>Zorba<sp/>when<sp/>the<sp/>%Tokenizer<sp/>is<sp/>no<sp/>longer<sp/>needed.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>your<sp/>TokenizerProvider<sp/>dynamically<sp/>allocates<sp/>%Tokenizer<sp/>objects,<sp/>then</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>implementation<sp/>can<sp/>simply<sp/>be<sp/>(and<sp/>usually<sp/>is)<sp/>&lt;code&gt;delete<sp/>this&lt;/code&gt;.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>your<sp/>TokenizerProvider<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>static<sp/>%Tokenizer<sp/>object,</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>*<sp/>then<sp/>the<sp/>implementation<sp/>should<sp/>do<sp/>nothing.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroy()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Gets<sp/>this<sp/>%Tokenizer&apos;s<sp/>associated<sp/>State.</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>Returns<sp/>said<sp/>State.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">State</ref>&amp;<sp/>state();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Gets<sp/>this<sp/>%Tokenizer&apos;s<sp/>associated<sp/>State.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>Returns<sp/>said<sp/>State.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">State</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>state()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Tokenizes<sp/>the<sp/>given<sp/>node.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>node<sp/>to<sp/>tokenize.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>lang<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>default<sp/>language<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>callback<sp/><sp/>The<sp/>Callback<sp/>to<sp/>call<sp/>once<sp/>per<sp/>token.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tokenize_node(<sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;node,<sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781" kindref="member">locale::iso639_1::type</ref><sp/>lang,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Tokenizer_1_1Callback" kindref="compound" tooltip="A Callback is called once per token.">Callback</ref><sp/>&amp;callback<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Tokenizes<sp/>the<sp/>given<sp/>string.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>utf8_s<sp/><sp/><sp/><sp/>The<sp/>UTF-8<sp/>string<sp/>to<sp/>tokenize.<sp/><sp/>It<sp/>need<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null-terminated.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>utf8_len<sp/><sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>in<sp/>the<sp/>string<sp/>to<sp/>be<sp/>tokenized.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>lang<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>language<sp/>of<sp/>the<sp/>string.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>wildcards<sp/>If<sp/>\c<sp/>true,<sp/>allows<sp/>XQuery<sp/>wildcard<sp/>syntax<sp/>characters<sp/>to</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>part<sp/>of<sp/>tokens.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>callback<sp/><sp/>The<sp/>Callback<sp/>to<sp/>call<sp/>once<sp/>per<sp/>token.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>item<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>Item<sp/>this<sp/>string<sp/>is<sp/>from,<sp/>if<sp/>any.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tokenize_string(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*utf8_s,<sp/><ref refid="classzorba_1_1Tokenizer_1aa5e55ee2bd87d3ec759382c6bb104656" kindref="member">size_type</ref><sp/>utf8_len,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781" kindref="member">locale::iso639_1::type</ref><sp/>lang,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wildcards,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Tokenizer_1_1Callback" kindref="compound" tooltip="A Callback is called once per token.">Callback</ref><sp/>&amp;callback,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*item<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/>/////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="208"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Constructs<sp/>a<sp/>%Tokenizer.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>state<sp/>the<sp/>State<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1Tokenizer" kindref="compound" tooltip="A Tokenizer breaks a string into a stream of word tokens.">Tokenizer</ref>(<sp/><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">State</ref><sp/>&amp;state<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Destroys<sp/>a<sp/>%Tokenizer.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classzorba_1_1Tokenizer" kindref="compound" tooltip="A Tokenizer breaks a string into a stream of word tokens.">Tokenizer</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Given<sp/>an<sp/>element,<sp/>finds<sp/>its<sp/>\c<sp/>xml:lang<sp/>attribute,<sp/>if<sp/>any,<sp/>and<sp/>gets<sp/>its</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/>*<sp/>value.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>element<sp/>The<sp/>element<sp/>to<sp/>check.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>lang<sp/>A<sp/>pointer<sp/>to<sp/>where<sp/>to<sp/>put<sp/>the<sp/>found<sp/>language,<sp/>if<sp/>any.</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>Returns<sp/>\c<sp/>true<sp/>only<sp/>if<sp/>an<sp/>\c<sp/>xml:lang<sp/>attribute<sp/>is<sp/>found<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/>*<sp/>value<sp/>is<sp/>a<sp/>known<sp/>language.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>find_lang_attribute(<sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;element,<sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781" kindref="member">locale::iso639_1::type</ref><sp/>*lang<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>member-function<sp/>is<sp/>called<sp/>whenever<sp/>an<sp/>item<sp/>that<sp/>is<sp/>being<sp/>tokenized<sp/>is</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/>*<sp/>entered<sp/>or<sp/>exited.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>item<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>item<sp/>being<sp/>entered<sp/>or<sp/>exited.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>entering<sp/><sp/>If<sp/>\c<sp/>true,<sp/>the<sp/>item<sp/>is<sp/>being<sp/>entered;<sp/>if<sp/>\c<sp/>false,<sp/>the</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>is<sp/>being<sp/>exited.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>item(<sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;item,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>entering<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Tokenizes<sp/>the<sp/>given<sp/>node<sp/>and<sp/>all<sp/>of<sp/>its<sp/>child<sp/>nodes,<sp/>if<sp/>any.<sp/><sp/>For<sp/>each</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/>*<sp/>node,<sp/>it<sp/>is<sp/>required<sp/>that<sp/>this<sp/>function<sp/>call<sp/>the<sp/>item()<sp/>member<sp/>function<sp/>of</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/>*<sp/>both<sp/>this<sp/>%Tokenizer<sp/>and<sp/>of<sp/>the<sp/>Callback<sp/>twice,<sp/>once<sp/>each<sp/>for<sp/>entrance<sp/>and</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/>*<sp/>exit.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>node<sp/>to<sp/>tokenize.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>lang<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>default<sp/>language<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>callback<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>Callback<sp/>to<sp/>call<sp/>per<sp/>token.</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>tokenize_acp<sp/><sp/>If<sp/>\c<sp/>true,<sp/>additionally<sp/>tokenize<sp/>all<sp/>attribute,</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comment,<sp/>and<sp/>processing-instruction<sp/>nodes<sp/>encountered;</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>\c<sp/>false,<sp/>skip<sp/>them.</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tokenize_node_impl(<sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;node,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781" kindref="member">locale::iso639_1::type</ref><sp/>lang,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Tokenizer_1_1Callback" kindref="compound" tooltip="A Callback is called once per token.">Callback</ref><sp/>&amp;callback,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tokenize_acp<sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">State</ref><sp/>*state_;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classzorba_1_1Tokenizer_1a8a3a36518144be3a6eaadeec541cc477" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Tokenizer_1a8a3a36518144be3a6eaadeec541cc477" kindref="member" tooltip="Constructs a Tokenizer.">Tokenizer::Tokenizer</ref>(<sp/><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">State</ref><sp/>&amp;state<sp/>)<sp/>:<sp/>state_(<sp/>&amp;state<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classzorba_1_1Tokenizer_1a2cbcc4bb9b9acb72650da650c7e60632" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">Tokenizer::State</ref>&amp;<sp/><ref refid="classzorba_1_1Tokenizer_1a2cbcc4bb9b9acb72650da650c7e60632" kindref="member" tooltip="Gets this Tokenizer&amp;#39;s associated State.">Tokenizer::state</ref>()<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*state_;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classzorba_1_1Tokenizer_1a6e0ab4fd18ac9733aa60a0d180b49838" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">Tokenizer::State</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classzorba_1_1Tokenizer_1a2cbcc4bb9b9acb72650da650c7e60632" kindref="member" tooltip="Gets this Tokenizer&amp;#39;s associated State.">Tokenizer::state</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*state_;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classzorba_1_1Tokenizer_1a91bb0bf2b10141b516de44e501d78d51" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Tokenizer_1a91bb0bf2b10141b516de44e501d78d51" kindref="member" tooltip="Tokenizes the given node.">Tokenizer::tokenize_node</ref>(<sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;item,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781" kindref="member">locale::iso639_1::type</ref><sp/>lang,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Tokenizer_1_1Callback" kindref="compound" tooltip="A Callback is called once per token.">Callback</ref><sp/>&amp;callback<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="classzorba_1_1Tokenizer_1a8a9c065343124b0ef37bc21714bcc849" kindref="member" tooltip="Tokenizes the given node and all of its child nodes, if any.">tokenize_node_impl</ref>(<sp/>item,<sp/>lang,<sp/>callback,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="281"><highlight class="comment">///////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>A<sp/>%TokenizerProvider<sp/>provides<sp/>a<sp/>Tokenizer<sp/>for<sp/>a<sp/>given<sp/>language.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classzorba_1_1TokenizerProvider" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1TokenizerProvider" kindref="compound" tooltip="A TokenizerProvider provides a Tokenizer for a given language.">TokenizerProvider</ref><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classzorba_1_1TokenizerProvider" kindref="compound" tooltip="A TokenizerProvider provides a Tokenizer for a given language.">TokenizerProvider</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Creates<sp/>a<sp/>new<sp/>%Tokenizer.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>lang<sp/>The<sp/>language<sp/>of<sp/>the<sp/>text<sp/>that<sp/>the<sp/>tokenizer<sp/>will<sp/>tokenize.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>state<sp/>The<sp/>State<sp/>to<sp/>use.<sp/><sp/>If<sp/>\c<sp/>null,<sp/>\a<sp/>t<sp/>is<sp/>not<sp/>set.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>t<sp/>If<sp/>not<sp/>\c<sp/>null,<sp/>set<sp/>to<sp/>point<sp/>to<sp/>a<sp/>Tokenizer<sp/>for<sp/>\a<sp/>lang.</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>Returns<sp/>\c<sp/>true<sp/>only<sp/>if<sp/>this<sp/>provider<sp/>can<sp/>provide<sp/>a<sp/>tokenizer<sp/>for</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/>*<sp/>\a<sp/>lang.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getTokenizer(<sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781" kindref="member">locale::iso639_1::type</ref><sp/>lang,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structzorba_1_1Tokenizer_1_1State" kindref="compound" tooltip="A State contains inter-Tokenizer state, currently the current token, sentence, and paragraph numbers...">Tokenizer::State</ref><sp/>*state<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classstd_1_1unique__ptr" kindref="compound">Tokenizer::ptr</ref><sp/>*t<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment">///////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="305"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>zorba</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>ZORBA_TOKENIZER_API_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vim:set<sp/>et<sp/>sw=2<sp/>ts=2:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/include/zorba/tokenizer.h"/>
  </compounddef>
</doxygen>
