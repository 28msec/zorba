<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="dynamic__context_8h" kind="file">
    <compoundname>dynamic_context.h</compoundname>
    <includes refid="time_8h" local="no">time.h</includes>
    <includes local="no">istream</includes>
    <includes local="no">zorba/config.h</includes>
    <includes refid="api__shared__types_8h" local="no">zorba/api_shared_types.h</includes>
    <includes refid="external__function__parameter_8h" local="no">zorba/external_function_parameter.h</includes>
    <includes refid="static__context__consts_8h" local="no">zorba/static_context_consts.h</includes>
    <includes refid="calendar_8h" local="no">zorba/util/calendar.h</includes>
    <includes refid="locale_8h" local="no">zorba/util/locale.h</includes>
    <includes refid="xmldatamanager_8h" local="no">zorba/xmldatamanager.h</includes>
    <includedby refid="zorba_8h" local="no">zorba.h</includedby>
    <incdepgraph>
      <node id="1704">
        <label>zorba/util/locale.h</label>
        <link refid="locale_8h"/>
      </node>
      <node id="1700">
        <label>zorba/util/smart_ptr.h</label>
        <link refid="smart__ptr_8h"/>
        <childnode refid="1696" relation="include">
        </childnode>
      </node>
      <node id="1705">
        <label>zorba/xmldatamanager.h</label>
        <link refid="xmldatamanager_8h"/>
        <childnode refid="1698" relation="include">
        </childnode>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1699" relation="include">
        </childnode>
        <childnode refid="1702" relation="include">
        </childnode>
      </node>
      <node id="1701">
        <label>zorba/external_function_parameter.h</label>
        <link refid="external__function__parameter_8h"/>
      </node>
      <node id="1695">
        <label>time.h</label>
        <link refid="time_8h"/>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
        <childnode refid="1697" relation="include">
        </childnode>
      </node>
      <node id="1694">
        <label>dynamic_context.h</label>
        <link refid="dynamic_context.h"/>
        <childnode refid="1695" relation="include">
        </childnode>
        <childnode refid="1698" relation="include">
        </childnode>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1699" relation="include">
        </childnode>
        <childnode refid="1701" relation="include">
        </childnode>
        <childnode refid="1702" relation="include">
        </childnode>
        <childnode refid="1703" relation="include">
        </childnode>
        <childnode refid="1704" relation="include">
        </childnode>
        <childnode refid="1705" relation="include">
        </childnode>
      </node>
      <node id="1697">
        <label>sys/time.h</label>
      </node>
      <node id="1696">
        <label>zorba/config.h</label>
      </node>
      <node id="1702">
        <label>zorba/static_context_consts.h</label>
        <link refid="static__context__consts_8h"/>
      </node>
      <node id="1703">
        <label>zorba/util/calendar.h</label>
        <link refid="calendar_8h"/>
      </node>
      <node id="1699">
        <label>zorba/api_shared_types.h</label>
        <link refid="api__shared__types_8h"/>
        <childnode refid="1696" relation="include">
        </childnode>
        <childnode refid="1700" relation="include">
        </childnode>
      </node>
      <node id="1698">
        <label>istream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1707">
        <label>zorba.h</label>
        <link refid="zorba_8h"/>
        <childnode refid="1708" relation="include">
        </childnode>
      </node>
      <node id="1706">
        <label>dynamic_context.h</label>
        <link refid="dynamic_context.h"/>
        <childnode refid="1707" relation="include">
        </childnode>
      </node>
      <node id="1708">
        <label>static_context.h</label>
        <link refid="static__context_8h"/>
        <childnode refid="1707" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classzorba_1_1DynamicContext" prot="public">zorba::DynamicContext</innerclass>
    <innernamespace refid="namespacezorba">zorba</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006-2008<sp/>The<sp/>FLWOR<sp/>Foundation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZORBA_DYNAMIC_CONTEXT_API_H</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ZORBA_DYNAMIC_CONTEXT_API_H</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="time_8h" kindref="compound">time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;istream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zorba/config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="api__shared__types_8h" kindref="compound">zorba/api_shared_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="external__function__parameter_8h" kindref="compound">zorba/external_function_parameter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="static__context__consts_8h" kindref="compound">zorba/static_context_consts.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="calendar_8h" kindref="compound">zorba/util/calendar.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="locale_8h" kindref="compound">zorba/util/locale.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="xmldatamanager_8h" kindref="compound">zorba/xmldatamanager.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">zorba<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">/**<sp/>\brief<sp/>Instances<sp/>of<sp/>the<sp/>class<sp/>DynamicContext<sp/>contain<sp/>the<sp/>information<sp/>that<sp/>is<sp/>available<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>the<sp/>query<sp/>is<sp/>executed.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>The<sp/>class<sp/>contains<sp/>the<sp/>information<sp/>that<sp/>is<sp/>defined<sp/>in<sp/>the<sp/>%XQuery</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>specification<sp/>(see<sp/>http://www.w3.org/TR/xquery/#eval_context).</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>A<sp/>dynamic<sp/>context<sp/>always<sp/>belongs<sp/>to<sp/>a<sp/>particular<sp/>query<sp/>and,<sp/>hence,<sp/>can<sp/>be<sp/>retrieved<sp/>by</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>calling<sp/>getDynamicContext<sp/>on<sp/>a<sp/>compiled<sp/>query<sp/>(see<sp/>XQuery::getDynamicContext()).</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classzorba_1_1DynamicContext" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ZORBA_DLL_PUBLIC<sp/><ref refid="classzorba_1_1DynamicContext" kindref="compound" tooltip="Instances of the class DynamicContext contain the information that is available at the time the query...">DynamicContext</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>*<sp/>\brief<sp/>Defines<sp/>the<sp/>external<sp/>variable<sp/>identified<sp/>by<sp/>aQName<sp/>and<sp/>assigns<sp/>it</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>value<sp/>of<sp/>aItem.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*<sp/>aQName<sp/>may<sp/>be<sp/>in<sp/>one<sp/>of<sp/>two<sp/>forms:<sp/>A<sp/>lexical<sp/>QName<sp/>(eg.<sp/>&quot;ns:foo&quot;),<sp/>or<sp/>a</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*<sp/>James<sp/>Clark-style<sp/>universal<sp/>name<sp/>(eg.<sp/>&quot;{nsuri}:foo&quot;).<sp/>If<sp/>it<sp/>is<sp/>a<sp/>universal</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>*<sp/>name,<sp/>then<sp/>this<sp/>method<sp/>will<sp/>find<sp/>the<sp/>named<sp/>external<sp/>variable<sp/>in<sp/>the<sp/>main</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>*<sp/>query<sp/>or<sp/>in<sp/>any<sp/>modules<sp/>imported<sp/>directly<sp/>or<sp/>indirectly<sp/>by<sp/>the<sp/>query.<sp/>If<sp/>it</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>*<sp/>is<sp/>a<sp/>lexical<sp/>QName,<sp/>then<sp/>it<sp/>is<sp/>only<sp/>possible<sp/>to<sp/>resolve<sp/>the<sp/>prefix<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>context<sp/>of<sp/>the<sp/>main<sp/>query,<sp/>hence<sp/>only<sp/>external<sp/>variables<sp/>in<sp/>the<sp/>main</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/>*<sp/>query<sp/>or<sp/>those<sp/>in<sp/>directly-imported<sp/>modules<sp/>may<sp/>be<sp/>bound.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aQName<sp/>the<sp/>QName<sp/>that<sp/>identifies<sp/>the<sp/>external<sp/>variable.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aItem<sp/>the<sp/>Item<sp/>that<sp/>is<sp/>used<sp/>as<sp/>value<sp/>for<sp/>the<sp/>variable.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>has<sp/>been<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>the<sp/>given<sp/>Item<sp/>is<sp/>not<sp/>valid).</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>setVariable(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aQName,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aItem)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/>/**<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>*<sp/>\brief<sp/>Defines<sp/>the<sp/>external<sp/>variable<sp/>identified<sp/>by<sp/>an<sp/>expanded<sp/>QName<sp/>and</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/>*<sp/>assigns<sp/>it<sp/>the<sp/>value<sp/>of<sp/>aItem.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>named<sp/>external<sp/>variable<sp/>may<sp/>be<sp/>located<sp/>in<sp/>the<sp/>main<sp/>query<sp/>or<sp/>in<sp/>any</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/>*<sp/>modules<sp/>imported<sp/>directly<sp/>or<sp/>indirectly<sp/>by<sp/>the<sp/>query.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aNamespace<sp/>the<sp/>namespace<sp/>URI<sp/>of<sp/>the<sp/>variable&apos;s<sp/>expanded<sp/>QName</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aLocalname<sp/>the<sp/>local<sp/>name<sp/>of<sp/>the<sp/>variable&apos;s<sp/>expanded<sp/>QName</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aItem<sp/>the<sp/>Item<sp/>that<sp/>is<sp/>used<sp/>as<sp/>value<sp/>for<sp/>the<sp/>variable.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>has<sp/>been<sp/>set<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>the<sp/>given<sp/>Item<sp/>is<sp/>not<sp/>valid).</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>setVariable(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>inNamespace,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>inLocalname,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>inValue)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/>/**</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/>*<sp/>\brief<sp/>Defines<sp/>the<sp/>external<sp/>variable<sp/>identified<sp/>by<sp/>aQName<sp/>and<sp/>assigns<sp/>it</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>sequence<sp/>that<sp/>is<sp/>returned<sp/>by<sp/>evaluating<sp/>aIterator.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>*<sp/>aQName<sp/>may<sp/>be<sp/>in<sp/>one<sp/>of<sp/>two<sp/>forms:<sp/>A<sp/>lexical<sp/>QName<sp/>(eg.<sp/>&quot;ns:foo&quot;),<sp/>or<sp/>a</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/>*<sp/>James<sp/>Clark-style<sp/>universal<sp/>name<sp/>(eg.<sp/>&quot;{nsuri}:foo&quot;).<sp/>If<sp/>it<sp/>is<sp/>a<sp/>universal</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/>*<sp/>name,<sp/>then<sp/>this<sp/>method<sp/>will<sp/>find<sp/>the<sp/>named<sp/>external<sp/>variable<sp/>in<sp/>the<sp/>main</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>*<sp/>query<sp/>or<sp/>in<sp/>any<sp/>modules<sp/>imported<sp/>directly<sp/>or<sp/>indirectly<sp/>by<sp/>the<sp/>query.<sp/>If<sp/>it</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>*<sp/>is<sp/>a<sp/>lexical<sp/>QName,<sp/>then<sp/>it<sp/>is<sp/>only<sp/>possible<sp/>to<sp/>resolve<sp/>the<sp/>prefix<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>context<sp/>of<sp/>the<sp/>main<sp/>query,<sp/>hence<sp/>only<sp/>external<sp/>variables<sp/>in<sp/>the<sp/>main</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>*<sp/>query<sp/>or<sp/>those<sp/>in<sp/>directly-imported<sp/>modules<sp/>may<sp/>be<sp/>bound.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aQName<sp/>the<sp/>QName<sp/>that<sp/>identifies<sp/>the<sp/>external<sp/>variable.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aIterator<sp/>the<sp/>Iterator<sp/>producing<sp/>the<sp/>sequence<sp/>that<sp/>is<sp/>assigned</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>variable.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>has<sp/>been<sp/>set<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>the<sp/>given<sp/>Iterator<sp/>is<sp/>not<sp/>valid).</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>setVariable(<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aQName,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SmartPtr" kindref="compound">Iterator_t</ref>&amp;<sp/>aIterator)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/>/**<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>*<sp/>\brief<sp/>Defines<sp/>the<sp/>external<sp/>variable<sp/>identified<sp/>by<sp/>an<sp/>expanded<sp/>QName<sp/>and</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>*<sp/>assigns<sp/>it<sp/>the<sp/>sequence<sp/>that<sp/>is<sp/>returned<sp/>by<sp/>evaluating<sp/>aIterator.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>named<sp/>external<sp/>variable<sp/>may<sp/>be<sp/>located<sp/>in<sp/>the<sp/>main<sp/>query<sp/>or<sp/>in<sp/>any</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>*<sp/>modules<sp/>imported<sp/>directly<sp/>or<sp/>indirectly<sp/>by<sp/>the<sp/>query.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aNamespace<sp/>the<sp/>namespace<sp/>URI<sp/>of<sp/>the<sp/>variable&apos;s<sp/>expanded<sp/>QName</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aLocalname<sp/>the<sp/>local<sp/>name<sp/>of<sp/>the<sp/>variable&apos;s<sp/>expanded<sp/>QName</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aIterator<sp/>the<sp/>Iterator<sp/>producing<sp/>the<sp/>sequence<sp/>that<sp/>is<sp/>assigned</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>variable.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>has<sp/>been<sp/>set<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>the<sp/>given<sp/>Iterator<sp/>is<sp/>not<sp/>valid).</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>setVariable(<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aNamespace,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aLocalname,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1SmartPtr" kindref="compound">Iterator_t</ref>&amp;<sp/>aIterator)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Returns<sp/>the<sp/>current<sp/>value<sp/>of<sp/>an<sp/>external</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/>*<sp/>variable.<sp/>Exactly<sp/>one<sp/>of<sp/>the<sp/>two<sp/>return<sp/>values<sp/>(aItem<sp/>or</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/>*<sp/>aIterator)<sp/>will<sp/>be<sp/>non-null;<sp/>that<sp/>is,<sp/>have<sp/>isNull()<sp/>==<sp/>false.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>named<sp/>external<sp/>variable<sp/>may<sp/>be<sp/>located<sp/>in<sp/>the<sp/>main<sp/>query<sp/>or<sp/>in<sp/>any</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/>*<sp/>modules<sp/>imported<sp/>directly<sp/>or<sp/>indirectly<sp/>by<sp/>the<sp/>query.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aNamespace<sp/>the<sp/>namespace<sp/>URI<sp/>of<sp/>the<sp/>variable&apos;s<sp/>expanded<sp/>QName</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aLocalname<sp/>the<sp/>local<sp/>name<sp/>of<sp/>the<sp/>variable&apos;s<sp/>expanded<sp/>QName</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aItem<sp/>an<sp/>Item<sp/>representing<sp/>the<sp/>current<sp/>(single-item)<sp/>value<sp/>of</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>the<sp/>external<sp/>variable.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aIterator<sp/>an<sp/>Iterator<sp/>representing<sp/>the<sp/>current<sp/>(possibly</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>multi-item)<sp/>value<sp/>of<sp/>the<sp/>external<sp/>variable.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>has<sp/>been<sp/>retrieved<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>getVariable(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aNamespace,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aLocalname,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aItem,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzorba_1_1SmartPtr" kindref="compound">Iterator_t</ref>&amp;<sp/>aIterator)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Defines<sp/>the<sp/>context<sp/>item.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aItem<sp/>the<sp/>Item<sp/>that<sp/>is<sp/>used<sp/>as<sp/>value<sp/>for<sp/>the<sp/>context<sp/>item.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>context<sp/>item<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>the<sp/>given<sp/>Item<sp/>is<sp/>not<sp/>valid).</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>setContextItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aItem)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Defines<sp/>the<sp/>context<sp/>item<sp/>size.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aItem<sp/>the<sp/>Item<sp/>that<sp/>is<sp/>used<sp/>as<sp/>value<sp/>for<sp/>the<sp/>context<sp/>item<sp/>size.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>context<sp/>item<sp/>size<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>the<sp/>given<sp/>Item<sp/>is<sp/>not<sp/>valid).</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>setContextSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aItem)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Defines<sp/>the<sp/>context<sp/>item<sp/>position.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aItem<sp/>the<sp/>Item<sp/>that<sp/>is<sp/>used<sp/>as<sp/>value<sp/>for<sp/>the<sp/>context<sp/>item<sp/>position.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>context<sp/>item<sp/>position<sp/>was<sp/>set,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>the<sp/>given<sp/>Item<sp/>is<sp/>not<sp/>valid).</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>setContextPosition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aItem)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Returns<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>context<sp/>item.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aItem<sp/>an<sp/>Item<sp/>representing<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>context<sp/>item.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>has<sp/>been<sp/>retrieved<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>getContextItem(<ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aItem)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Returns<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>context<sp/>item<sp/>size.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aItem<sp/>an<sp/>Item<sp/>representing<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>context<sp/>item<sp/>size.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>has<sp/>been<sp/>retrieved<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>getContextSize(<ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aItem)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Returns<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>context<sp/>item<sp/>position.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aItem<sp/>an<sp/>Item<sp/>representing<sp/>the<sp/>current<sp/>value<sp/>of<sp/>the<sp/>context<sp/>item<sp/>position.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>has<sp/>been<sp/>retrieved<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>getContextPosition(<ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aItem)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Defines<sp/>the<sp/>value<sp/>of<sp/>the<sp/>current<sp/>date<sp/>time<sp/>that<sp/>can<sp/>be<sp/>accessed<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn:current-dateTime()<sp/>function<sp/>at<sp/>the<sp/>time<sp/>the<sp/>query<sp/>is<sp/>executed.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>current<sp/>date<sp/>time<sp/>has<sp/>not<sp/>been<sp/>set<sp/>explicitly<sp/>the<sp/>value<sp/>of<sp/>the<sp/>date</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>time<sp/>is<sp/>used<sp/>at<sp/>the<sp/>time<sp/>the<sp/>query<sp/>is<sp/>created<sp/>or<sp/>cloned,<sp/>respectively.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aDateTimeItem<sp/>the<sp/>dateTime<sp/>Item.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>has<sp/>been<sp/>set<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>(e.g.<sp/>the<sp/>given<sp/>Item<sp/>is<sp/>invalid</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>not<sp/>a<sp/>Item<sp/>of<sp/>type<sp/>dateTime)</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>setCurrentDateTime(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aDateTimeItem<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Retrieve<sp/>the<sp/>dateTime<sp/>Item<sp/>used<sp/>at<sp/>the<sp/>time<sp/>the<sp/>query<sp/>is<sp/>executed</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>setCurrentDateTime()).</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>Item<sp/>the<sp/>dateTime<sp/>Item<sp/>used<sp/>at<sp/>the<sp/>time<sp/>the<sp/>query<sp/>is<sp/>executed.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>getCurrentDateTime(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Defines<sp/>the<sp/>variable<sp/>of<sp/>the<sp/>implicit<sp/>timezone<sp/>to<sp/>be<sp/>used<sp/>when<sp/>a<sp/>date,<sp/>time,</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>dateTime<sp/>value<sp/>that<sp/>does<sp/>not<sp/>have<sp/>a<sp/>timezone<sp/>is<sp/>used<sp/>in<sp/>a<sp/>comparison<sp/>or</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arithmetic<sp/>operation.</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aTimezone<sp/>the<sp/>number<sp/>of<sp/>seconds<sp/>east<sp/>of<sp/>the<sp/>prime<sp/>meridian.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>implicit<sp/>timezone<sp/>has<sp/>been<sp/>set<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>setImplicitTimezone(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aTimezone<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Retrieve<sp/>the<sp/>implicit<sp/>timezone<sp/>used<sp/>in<sp/>comparisons<sp/>or<sp/>arithmetic<sp/>operations</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>date,<sp/>time,<sp/>or<sp/>dateTime<sp/>values.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>implicit<sp/>timezone<sp/>as<sp/>the<sp/>number<sp/>of<sp/>seconds<sp/>east<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/>*<sp/>prime<sp/>medidian.<sp/>Note<sp/>that<sp/>0<sp/>is<sp/>returned<sp/>if<sp/>an<sp/>error<sp/>occured<sp/>and<sp/>an</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/>*<sp/>DiagnosticHandler<sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>getImplicitTimezone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Defines<sp/>the<sp/>value<sp/>of<sp/>the<sp/>default<sp/>collection<sp/>that<sp/>is<sp/>used<sp/>when<sp/>calling<sp/>the</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn:collection<sp/>function<sp/>without<sp/>a<sp/>parameter.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aCollectionUri<sp/>the<sp/>URI<sp/>of<sp/>the<sp/>collection<sp/>used<sp/>by<sp/>the<sp/>fn:collection<sp/>function.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>default<sp/>collection<sp/>has<sp/>been<sp/>set<sp/>successfully,<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>setDefaultCollection(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref>&amp;<sp/>aCollectionUri<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Return<sp/>the<sp/>value<sp/>of<sp/>the<sp/>default<sp/>collection<sp/>that<sp/>is<sp/>used<sp/>when<sp/>calling<sp/>the</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn:collection<sp/>function<sp/>without<sp/>a<sp/>parameter.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>Item<sp/>the<sp/>default<sp/>collection<sp/>that<sp/>is<sp/>set<sp/>in<sp/>this<sp/>dynamic<sp/>context.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@throw<sp/>ZorbaException<sp/>if<sp/>an<sp/>error<sp/>occured.</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1Item" kindref="compound" tooltip="The Zorba Item interface.">Item</ref></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>getDefaultCollection()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Sets<sp/>the<sp/>locale.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aLang<sp/>The<sp/>language<sp/>to<sp/>set.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aCountry<sp/>The<sp/>country<sp/>to<sp/>set.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>setLocale(<sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781" kindref="member">locale::iso639_1::type</ref><sp/>aLang,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1locale_1_1iso3166__1_1a3ab69a5f4b624ee5237517ed62409504" kindref="member">locale::iso3166_1::type</ref><sp/>aCountry<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Gets<sp/>the<sp/>locale.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aLang<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>\c<sp/>iso639_1::type<sp/>to<sp/>receive<sp/>the<sp/>language.</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>\c<sp/>null,<sp/>this<sp/>is<sp/>not<sp/>set.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aCountry<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>\c<sp/>iso3166_1::type<sp/>to<sp/>receive<sp/>the<sp/>country.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>\c<sp/>null,<sp/>this<sp/>is<sp/>not<sp/>set.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>getLocale(<sp/><ref refid="namespacezorba_1_1locale_1_1iso639__1_1aafd6e55905dc8efe50a3f9fd38616781" kindref="member">locale::iso639_1::type</ref><sp/>*aLang,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacezorba_1_1locale_1_1iso3166__1_1a3ab69a5f4b624ee5237517ed62409504" kindref="member">locale::iso3166_1::type</ref><sp/>*aCountry<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Sets<sp/>the<sp/>calendar.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aCalendar<sp/>The<sp/>calendar<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>setCalendar(<sp/><ref refid="namespacezorba_1_1time_1_1calendar_1a7c8c84a1ed5401ddae49da3f01861c87" kindref="member">time::calendar::type</ref><sp/>aCalendar<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Gets<sp/>the<sp/>current<sp/>calendar.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>current<sp/>calendar.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacezorba_1_1time_1_1calendar_1a7c8c84a1ed5401ddae49da3f01861c87" kindref="member">time::calendar::type</ref></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>getCalendar()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Add<sp/>a<sp/>name-value<sp/>pair<sp/>to<sp/>this<sp/>context.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>value<sp/>can<sp/>be<sp/>accessed<sp/>in<sp/>the<sp/>evaluate<sp/>method</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>external<sp/>functions<sp/>(see<sp/>ContextualExternalFunction).</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aName<sp/>the<sp/>name<sp/>of<sp/>the<sp/>parameter<sp/>to<sp/>add.<sp/>If<sp/>an<sp/>entry<sp/>with</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>the<sp/>same<sp/>name<sp/>already<sp/>exists,<sp/>the<sp/>existing<sp/>entry<sp/>is<sp/>replaced.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aValue<sp/>the<sp/>value<sp/>that<sp/>can<sp/>be<sp/>accessed<sp/>in<sp/>the<sp/>evaluate<sp/>method.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>returns<sp/>true<sp/>if<sp/>an<sp/>entry<sp/>with<sp/>the<sp/>same<sp/>name<sp/>did<sp/>not<sp/>already<sp/>exist,</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>addExternalFunctionParam(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aName,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aValue<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>value<sp/>of<sp/>a<sp/>pair<sp/>that<sp/>was<sp/>registered<sp/>using</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>addExternalFunctionParam<sp/>method.<sp/>This<sp/>can</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>used<sp/>in<sp/>the<sp/>evaluate<sp/>method</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>external<sp/>functions<sp/>(see<sp/>ContextualExternalFunction).</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aName<sp/>the<sp/>name<sp/>of<sp/>the<sp/>parameter<sp/>to<sp/>retrieve</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aValue<sp/>the<sp/>value<sp/>matching<sp/>the<sp/>given<sp/>name<sp/>if<sp/>true<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>an<sp/>entry<sp/>with<sp/>the<sp/>given<sp/>name<sp/>was<sp/>found,</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>getExternalFunctionParam<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aName,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;<sp/>aValue<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Add<sp/>a<sp/>name-value<sp/>pair<sp/>to<sp/>this<sp/>context.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>value<sp/>can<sp/>be<sp/>accessed<sp/>in<sp/>the<sp/>evaluate<sp/>method</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>external<sp/>functions<sp/>(see<sp/>ContextualExternalFunction).</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aName<sp/>the<sp/>name<sp/>of<sp/>the<sp/>parameter<sp/>to<sp/>add.<sp/>If<sp/>an<sp/>entry<sp/>with</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>the<sp/>same<sp/>name<sp/>already<sp/>exists,<sp/>the<sp/>existing<sp/>entry<sp/>is<sp/>replaced.</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aParam<sp/>the<sp/>parameter<sp/>to<sp/>add</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>an<sp/>entry<sp/>with<sp/>the<sp/>same<sp/>name<sp/>did<sp/>not<sp/>exist<sp/>already,</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>addExternalFunctionParameter<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aName,<sp/><ref refid="classzorba_1_1ExternalFunctionParameter" kindref="compound" tooltip="Instances of subclasses of this abstract class may be used as parameters to the DynamicContext::addEx...">ExternalFunctionParameter</ref>*<sp/>aParam<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Get<sp/>the<sp/>value<sp/>of<sp/>a<sp/>pair<sp/>that<sp/>was<sp/>registered<sp/>using</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>addExternalFunctionParam<sp/>method.<sp/>This<sp/>can</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>used<sp/>in<sp/>the<sp/>evaluate<sp/>method</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>external<sp/>functions<sp/>(see<sp/>ContextualExternalFunction).</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aName<sp/>the<sp/>name<sp/>of<sp/>the<sp/>parameter<sp/>to<sp/>retrieve</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>the<sp/>ExternalFunctionParameter*<sp/>that<sp/>was<sp/>added<sp/>using</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>addExternalFunctionParameter,<sp/>or<sp/>0<sp/>if<sp/>no<sp/>entry<sp/>with<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>name<sp/>was<sp/>found.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1ExternalFunctionParameter" kindref="compound" tooltip="Instances of subclasses of this abstract class may be used as parameters to the DynamicContext::addEx...">ExternalFunctionParameter</ref>*</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>getExternalFunctionParameter<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aName<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>variable<sp/>is<sp/>bound<sp/>to<sp/>a<sp/>value</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aNamespace<sp/>the<sp/>namespace<sp/>of<sp/>the<sp/>qname<sp/>of<sp/>the<sp/>variable<sp/>to<sp/>check</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>aLocalname<sp/>the<sp/>localname<sp/>of<sp/>the<sp/>qname<sp/>of<sp/>the<sp/>variable<sp/>to<sp/>check</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>isBoundExternalVariable(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aNamespace,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1String" kindref="compound" tooltip="The Zorba string class.">String</ref>&amp;<sp/>aLocalname)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Returns<sp/>true<sp/>if<sp/>a<sp/>context<sp/>item<sp/>has<sp/>been<sp/>bound<sp/>to<sp/>the<sp/>Dynamic<sp/>Context</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>isBoundContextItem()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/>/**<sp/>\brief<sp/>Destructor</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classzorba_1_1DynamicContext_1a5ca3479a17daeb5690a6a82d87e0dd3d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classzorba_1_1DynamicContext_1a5ca3479a17daeb5690a6a82d87e0dd3d" kindref="member" tooltip="Destructor.">~DynamicContext</ref>(<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="374"><highlight class="normal">};</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>zorba<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>vim:set<sp/>et<sp/>sw=2<sp/>ts=2:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wcandillon/deadlinks/include/zorba/dynamic_context.h"/>
  </compounddef>
</doxygen>
