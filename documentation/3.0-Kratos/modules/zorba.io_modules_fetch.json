{ "ns" : "http://zorba.io/modules/fetch", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functions to fetch the content of a resource identified\n by a URI. For example, it fetches the content of file or http resources.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In order to retrieve such content, the functions use the\n URI resolution and URL resolver process as documented at\n <a href=\"http://zorba.io/documentation/latest/zorba/architecture/uriresolvers\">\n URI Resolvers</a>.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/fetch", "prefix" : "fetch" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "arity" : 1, "name" : "content-binary", "qname" : "fetch:content-binary", "signature" : "($uri as xs:string) as xs:base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI and\n returning it as base64Binary.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind\n <tt>EntityData::SOME_CONTENT</tt>.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI and\n returning it as base64Binary.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the resource referred to by the given URI as streamble base64Binary." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_UNRESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>" ] }, { "arity" : 2, "name" : "content-binary", "qname" : "fetch:content-binary", "signature" : "($uri as xs:string, $entity-kind as xs:string) as xs:base64Binary external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI and\n returning it as base64Binary.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind the specified\n entity kind.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI and\n returning it as base64Binary.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" }, { "name" : "entity-kind", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the kind of resource to fetch.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the resource referred to by the given URI as streamble base64Binary." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_UNRESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>" ] }, { "arity" : 1, "name" : "content", "qname" : "fetch:content", "signature" : "($uri as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind\n <tt>EntityData::SOME_CONTENT</tt>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The content is assumed to be UTF-8 encoded.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the resource referred to by the given URI as streamble string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_UNRESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>" ] }, { "arity" : 2, "name" : "content", "qname" : "fetch:content", "signature" : "($uri as xs:string, $entity-kind as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind the specified\n entity kind.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The content is assumed to be UTF-8 encoded.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" }, { "name" : "entity-kind", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the kind of resource to fetch.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the resource referred to by the given URI as streamble string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_NOT_RESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>" ] }, { "arity" : 3, "name" : "content", "qname" : "fetch:content", "signature" : "($uri as xs:string, $entity-kind as xs:string, $encoding as xs:string) as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Tries to fetch the resource referred to by the given URI.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It queries all URI mappers and resolvers with kind the specified\n entity kind.</p>\n", "summary" : "<p>  Tries to fetch the resource referred to by the given URI.</p>", "annotation_str" : " %an:streamable", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "streamable", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "uri", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the resource to fetch.</div>" }, { "name" : "entity-kind", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the kind of resource to fetch.</div>" }, { "name" : "encoding", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the encoding of the content</div>" } ], "returns" : { "type" : "xs:string", "description" : "the resource referred to by the given URI as streamble string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:URI_UNRESOLVED_OR_NOSTREAM if the URI could not be resolved or did not resolve to a <tt>StreamResource</tt>.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uri:CHARSET_UNKNOWN if the given encoding is invalid or not supported.</xqdoc:error>" ] } ], "variables" : [  ] }