{ "ns" : "http://zorba.io/modules/zorba-query", "description" : " This module contains functions to compile and evaluate queries\n written in either JSONiq or XQuery. Also, it contains function that\n allow to parameterize the static or dynamic evaluation phase.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Juan Zacarias</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/features", "prefix" : "f" }, { "uri" : "http://zorba.io/options/features", "prefix" : "op" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/modules/zorba-query", "prefix" : "zq" } ], "functions" : [ { "arity" : 2, "name" : "bind-context-item", "qname" : "zq:bind-context-item", "signature" : "($query-key as xs:anyURI, $dot as item()) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function binds the context-item of the prepared query\n identified by the given key to the $dot argument.</p>\n", "summary" : "<p>  This function binds the context-item of the prepared query\n identified by the given key to the $dot argument.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" }, { "name" : "dot", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the context item to bind</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "arity" : 3, "name" : "bind-variable", "qname" : "zq:bind-variable", "signature" : "($query-key as xs:anyURI, $var as xs:QName, $value as item()*) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function binds the variable with name $name of\n the prepared query identified by $query-key to the given sequence.</p>\n", "summary" : "<p>  This function binds the variable with name $name of\n the prepared query identified by $query-key to the given sequence.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" }, { "name" : "var", "type" : "xs:QName", "occurence" : null, "description" : "" }, { "name" : "value", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the sequence to which the external variable $name should be bound</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:UNDECLARED_VARIABLE if the given variable is not declared in the query.</xqdoc:error>" ] }, { "arity" : 1, "name" : "delete-query", "qname" : "zq:delete-query", "signature" : "($query-key as xs:anyURI) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Deletes the prepared query associated with the given identifier.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">After the query is deleted, the corresponding identifier should\n not be used as argument to any of the functions of this module.</p>\n", "summary" : "<p>  Deletes the prepared query associated with the given identifier.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the function has side effects and returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "arity" : 1, "name" : "evaluate-sequential", "qname" : "zq:evaluate-sequential", "signature" : "($query-key as xs:string) as item()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Evaluates the given prepared query and returns the result\n of the evaluation. The query must be sequential.</p>\n", "summary" : "<p>  Evaluates the given prepared query and returns the result\n of the evaluation.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the query." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_NOT_SEQUENTIAL if the query is not sequential.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_IS_UPDATING if the query is an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any dynamic error that is raised by evaluating the given query.</xqdoc:error>" ] }, { "arity" : 1, "name" : "evaluate-updating", "qname" : "zq:evaluate-updating", "signature" : "($query-key as xs:anyURI) external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Evaluates the given prepared query and applies the updates\n computed by this query. The query must be an updating query.</p>\n", "summary" : "<p>  Evaluates the given prepared query and applies the updates\n computed by this query.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : null, "description" : "the function has side effects because it applies the updates of the query. It returns the empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_NOT_UPDATING if the query is not an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_IS_SEQUENTIAL if the query is sequential.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any dynamic error that is raised by evaluating the given query or applying its updates.</xqdoc:error>" ] }, { "arity" : 1, "name" : "evaluate", "qname" : "zq:evaluate", "signature" : "($query-key as xs:anyURI) as item()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Evaluates the given prepared query and returns the result\n of the evaluation. The query must not be sequential or\n updating.</p>\n", "summary" : "<p>  Evaluates the given prepared query and returns the result\n of the evaluation.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the given query" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_IS_UPDATING if the query is an updating query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:QUERY_IS_SEQUENTIAL if the query is sequential.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any dynamic error that is raised by evaluating the given query.</xqdoc:error>" ] }, { "arity" : 1, "name" : "external-variables", "qname" : "zq:external-variables", "signature" : "($query-key as xs:anyURI) as xs:QName* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function returns the names of the external variables that\n are declared in the given query (either in the main module or\n in any of the imported library modules).</p>\n", "summary" : "<p>  The function returns the names of the external variables that\n are declared in the given query (either in the main module or\n in any of the imported library modules).</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "xs:QName*", "description" : "the sequence of names of the said external variables." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "arity" : 1, "name" : "is-bound-context-item", "qname" : "zq:is-bound-context-item", "signature" : "($query-key as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function tests if the context-item is bound for the\n execution of the query referred to by the given query identifier.</p>\n", "summary" : "<p>  The function tests if the context-item is bound for the\n execution of the query referred to by the given query identifier.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the context-item is bound, false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "arity" : 2, "name" : "is-bound-variable", "qname" : "zq:is-bound-variable", "signature" : "($query-key as xs:anyURI, $var-name as xs:QName) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function tests if the given variable is bound for the\n execution of the query referred to by the given query identifier.</p>\n", "summary" : "<p>  The function tests if the given variable is bound for the\n execution of the query referred to by the given query identifier.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" }, { "name" : "var-name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the variable</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the variable is bound, false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:UNDECLARED_VARIABLE if the given variable is not declared in the query.</xqdoc:error>" ] }, { "arity" : 1, "name" : "is-sequential", "qname" : "zq:is-sequential", "signature" : "($query-key as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function tests if the query identified by the given key\n is sequential query.</p>\n", "summary" : "<p>  The function tests if the query identified by the given key\n is sequential query.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the query is a sequential, false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "arity" : 1, "name" : "is-updating", "qname" : "zq:is-updating", "signature" : "($query-key as xs:anyURI) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function tests if the query identified by the given key\n is an updating query.</p>\n", "summary" : "<p>  The function tests if the query identified by the given key\n is an updating query.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier for a compiled query</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if the query is an updating query, false otherwise." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>" ] }, { "arity" : 1, "name" : "load-from-query-plan", "qname" : "zq:load-from-query-plan", "signature" : "($plan as xs:base64Binary) as xs:anyURI external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function loads a given query for execution from a\n xs:base64Binary query plan, obtained through the zq:query-plan function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the query was successfully loaded, the function returns an\n identifier as xs:anyURI. This URI can be passed to other functions\n of this module (e.g. to actually evaluate the query). The URI\n is opaque and its lifetime is bound by the lifetime of the query\n that invoked this function. Further reference or uses\n of the identifier lead to unexpected results.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Successfully prepared queries need to be deleted by passing the resulting\n identifier to the zq:delete-query function of this module.</p>\n", "summary" : "<p>  The function loads a given query for execution from a\n xs:base64Binary query plan, obtained through the zq:query-plan function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "plan", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the binary query plan.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the compiled query that can be passed as arguments to other functions of this module." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the query. For example, err:XPST0003 if the given query could not be parsed.</xqdoc:error>" ] }, { "arity" : 3, "name" : "load-from-query-plan", "qname" : "zq:load-from-query-plan", "signature" : "($plan as xs:base64Binary, $resolver as item()?, $mapper as item()?) as xs:anyURI external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function loads a given query for execution from a\n xs:base64Binary query plan, obtained through the zq:query-plan function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the query was successfully loaded, the function returns an\n identifier as xs:anyURI. This URI can be passed to other functions\n of this module (e.g. to actually evaluate the query). The URI\n is opaque and its lilfetime is bound by the lifetime of the query\n that invoked this function. Further reference or uses\n of the identifier lead to unexpected results.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For important notes regarding the second and third parameters of the\n function, review the comments in zq:prepare-main-module#3.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Successfully prepared queries need to be deleted by passing the resulting\n identifier to the zq:delete-query function of this module.</p>\n", "summary" : "<p>  The function loads a given query for execution from a\n xs:base64Binary query plan, obtained through the zq:query-plan function.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "plan", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the binary query plan.</div>" }, { "name" : "resolver", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URL resolver function.</div>" }, { "name" : "mapper", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URI mapper function.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the compiled query that can be passed as arguments to other functions of this module." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the query. For example, err:XPST0003 if the given query could not be parsed.</xqdoc:error>" ] }, { "arity" : 1, "name" : "prepare-library-module", "qname" : "zq:prepare-library-module", "signature" : "($library-module-text as xs:string) as empty-sequence() external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function compiles a given XQuery or JSONiq library module.\n It can be used to compile-check a module.</p>\n", "summary" : "<p>  This function compiles a given XQuery or JSONiq library module.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "library-module-text", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the library module that should be prepared.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "the empty-sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the library module. For example, err:XPST0003 if the given library module could not be parsed.</xqdoc:error>" ] }, { "arity" : 1, "name" : "prepare-main-module", "qname" : "zq:prepare-main-module", "signature" : "($main-module-text as xs:string) as xs:anyURI external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function prepares a given a query for execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the query was successfully compiled, the function returns an\n identifier as xs:anyURI. This URI can be passed to other functions\n of this module (e.g. to actually evaluate the query). The URI\n is opaque and its lifetime is bound by the lifetime of the query\n that invoked this function. Further reference or uses\n of the identifier lead to unexpected results.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Successfully prepared queries need to be deleted by passing the resulting\n identifier to the zq:delete-query function of this module.</p>\n", "summary" : "<p>  The function prepares a given a query for execution.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "main-module-text", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query that should be prepared. The query needs to be a XQuery or JSONiq main module.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the compiled query that can be passed as arguments to other functions of this module." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the query. For example, err:XPST0003 if the given query could not be parsed.</xqdoc:error>" ] }, { "arity" : 3, "name" : "prepare-main-module", "qname" : "zq:prepare-main-module", "signature" : "($main-module-text as xs:string, $resolver as function (xs:string, xs:string) as item()??, $mapper as function (xs:string, xs:string) as xs:string*?) as xs:anyURI external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function prepares a given query for execution.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If the query was successfully compiled, the function returns an\n identifier as xs:anyURI. This URI can be passed to other functions\n of this module (e.g. to actually evaluate the query). The URI\n is opaque and its lifetime is bound by the lifetime of the query\n that invoked this function. Further reference or uses\n of the identifier lead to unexpected results.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Important notes regarding the second and third parameters of the function:</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">--------------------------------------------------------------------------</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">These parameters allow you to specify a URL resolver and a URI mapper\n for Zorba to use when executing this query. See\n <a href=\"http://www.zorba-xquery.com/html/documentation/2.7.0/zorba/uriresolvers\">here</a></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The second parameter is a function item for a URL\n resolver. The URL resolver function must recive 2 parameters:\n <li>A $namespace as xs:string that will contain the url to be resolved.</li>\n <li>A $entity as xs:string that will contain the type of resolving needed.\n   This can be one of two values: \"module\" or \"schema\".</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function must return the empty sequence when the specified $namespace\n or $entity are not the ones to be resolved.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">declare function mymod:url-resolver($namespace as xs:string, $entity as xs:string) as item()?\n {\n  if($namespace = 'http://test.xq')\n  then \"module namespace test = 'http://test'; declare function test:foo(){'foo'};\"\n  else ()\n };</pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URL resolver function's namespace, name, and parameter naming are\n not restricted by ZQ.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URL resolver function's return type is not restricted, it could be a string, a sequence,\n a node, etc. All the outputs types are to be serialized as a string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The third parameter is a function item for a URI mapper.</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URI mapper function, just like the URL resolver, receives 2 parameters:\n <li>A $namespace as xs:string that will contain the URI to be mapped.</li>\n <li>A $entity as xs:string that will contain the type of resolving needed.\n   This can be one of two values: \"module\" or \"schema\".</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URI mapper must return an empty sequence when the specified $namesapce or $entity\n are not to be mapped. Unlike the URL resolver this function must return a sequence of strings.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example:</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">declare function mymod:uri-mapper($namespace as xs:string, $entity as xs:string)\n {\n  if($namespace = 'http://test')\n  then (\"http://zorba.io/test\", \"http://foo.com/schema/test\")\n  else ()\n };</pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The URI mapper function's namespace, name, and parameter naming are\n not restricted by ZQ.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In order to pass the above URL resolver and URI mapper to this function,\n use the following syntax:</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n   <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">variable $queryID := zq:prepare-main-module(\"..query text..\",\n      mymod:url-resolver#2, mymod:uri-mapper#2);</pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">That is, the QName of the function followed by \"#2\". This is XQuery\n \"higher-order function\" syntax, meaning the function with the specified\n QName which takes two arguments. Since URL resolvers and URI mappers\n must take two arguments, both will always be specified with \"#2\".</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Both the URL resolver and URI mapper functions are optional, meaning you\n may pass the empty-sequence () for either.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Successfully prepared queries need to be deleted by passing the resulting\n identifier to the zq:delete-query function of this module.</p>\n", "summary" : "<p>  The function prepares a given query for execution.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "main-module-text", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query that should be prepared. The query needs to be a XQuery or JSONiq main module.</div>" }, { "name" : "resolver", "type" : "function (xs:string, xs:string) as item()?", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URL resolver function.</div>" }, { "name" : "mapper", "type" : "function (xs:string, xs:string) as xs:string*", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the URI mapper function.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "an identifier for the compiled query that can be passed as arguments to other functions of this module." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">any (static or type) error that may be raised during the compilation of the query. For example, err:XPST0003 if the given query could not be parsed.</xqdoc:error>" ] }, { "arity" : 1, "name" : "query-plan", "qname" : "zq:query-plan", "signature" : "($query-key as xs:anyURI) as xs:base64Binary external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the compiled query identified by the given query-key\n as binary data.</p>\n", "summary" : "<p>  Returns the compiled query identified by the given query-key\n as binary data.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier of a compiled query.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the query as xs:base64Binary." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_PLAN if there is an error serializing the query.</xqdoc:error>" ] }, { "arity" : 2, "name" : "variable-value", "qname" : "zq:variable-value", "signature" : "($query-key as xs:anyURI, $var-name as xs:QName) as item()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function returns the value of a variable that is bound in the\n given query.</p>\n", "summary" : "<p>  This function returns the value of a variable that is bound in the\n given query.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query-key", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the identifier of a compiled query.</div>" }, { "name" : "var-name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the name of the variable whose value should be returned.</div>" } ], "returns" : { "type" : "item()*", "description" : "the value bound to the given variable." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:NO_QUERY_MATCH if no query with the given identifier was prepared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:UNDECLARED_VARIABLE if the given variable is not declared in the query.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zq:UNBOUND_VARIABLE if the given variable doesn't have a value.</xqdoc:error>" ] } ], "variables" : [  ] }