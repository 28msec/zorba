{ "ns" : "http://expath.org/ns/http-client", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides an implementation of the\n <a href=\"http://expath.org/modules/http-client/\">EXPath Http Client</a>.\n It provides functions for making HTTP requests and is a superset of the\n module specified by EXPath.\n Specifically, it implements the <code>http:send-request()</code> functions\n as specified by EXPath. Moreover, it adds an additional function\n <code>http:read()</code> (with several arities for the sake of ease).\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n In general, both functions take a description of the HTTP request to make\n as parameter, execute the request, and return a representation of the HTTP\n response. For instance, in the following code snippet, we fetch the Zorba\n home page:\n </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">import module namespace http = \"http://expath.org/ns/http-client\";\n http:send-request(\n  &lt;http:request href=\"http://zorba.io\" method=\"get\" /&gt;\n )\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The <code>http:send-request()</code> functions are declared as sequential.\n Sequential functions are allowed to have side effects. For example, most probably,\n an HTTP POST request is a request that has side effects because it adds/changes\n a remote resource. Sequential functions are specified in the\n <a href=\"http://zorba.io/documentation/2.9/zorba/scripting_tutorial.html\">XQuery Scripting Extension</a>.\n In contrast, the http:read() functions are not declared as sequential -\n they are declared as nondeterministic though, which\n means that several calls may return different results.\n HTTP requests performed using these functions are <b>not</b> allowed to have\n side effects.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The response is returned as a sequence of one or more items. The first\n one is an <code>http:response</code> element with quite the same\n structure as an http:request, but without the content itself.\n The content is returned as the second item (or several items in case of\n a multipart response) as a string, a document node, or a binary item.\n This depends on the content-type returned.\n Specifically, the rules are as follows:\n <ul>\n  <li>A document node is returned if the media type has a MIME type of\n     text/xml, application/xml, text/xml-external-parsed-entity, or\n     application/xml-external-parsed-entity, as defined in [RFC 3023]\n     (except that application/xml-dtd is considered a text media type).\n     MIME types ending by +xml are also XML media types.</li>\n  <li>A document node is returned if the media type has a MIME type of\n      text/html. In order to be able to make HTML parseable, tidy is automatically\n      invoked. If you want to prevent that, you can also set your own content-type\n      by setting the override-media-type attribute in the request element.\n       For tidying, the following <a href=\"http://tidy.sourceforge.net/docs/quickref.html\">options</a>\n       will be used:\n       <ul>\n         <li>TidyXmlOut=yes</li>\n         <li>TidyDoctypeMode=TidyDoctypeOmit</li>\n         <li>TidyQuoteNbsp=yes</li>\n         <li>TidyCharEncoding=\"utf8\"</li>\n         <li>TidyNewline=\"LF\"</li>\n       </ul>\n  </li>\n  <li>An xs:string item is returned if the media type has a text MIME type,\n     i.e. beginning with text/.</li>\n  <li>An xs:base64Binary item is returned for all the other media types.</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n The structure of a request element is defined in the schema that is imported\n by this module. The details are described in the\n <a href=\"http://expath.org/spec/http-client#d2e183\">specification</a>.\n Analogously, the response element is also described in this\n <a href=\"http://expath.org/spec/http-client#d2e491\">specification</a>.\n </p>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xquery-3/#FunctionDeclns\">XQuery 3.0: Function Declaration</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Federico Cavalieri, Markus Pilman</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://expath.org/ns/error", "prefix" : "err" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http" }, { "uri" : "http://zorba.io/modules/http-client-wrapper", "prefix" : "http-wrapper" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "https" }, { "uri" : "http://www.zorba-xquery.com/modules/converters/html", "prefix" : "tidy" }, { "uri" : "http://www.zorba-xquery.com/modules/converters/html-options", "prefix" : "tidy-options" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 1, "name" : "send-request", "qname" : "http:send-request", "signature" : "($request as element(*)) as item()+", "description" : " Function for convenience.\n Calling this function is equivalent to calling\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n http:send-request($request, (), ())\n </code>\n", "summary" : "<p> Function for convenience.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> see request parameter of the sequential <a href=\"#send-request-3\">send-request</a> function with three parameters.</div>" } ], "returns" : { "type" : "item()+", "description" : "see return value of the sequential <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#send-request-3\">send-request</a> function with three parameters." }, "errors" : [  ] }, { "arity" : 2, "name" : "send-request", "qname" : "http:send-request", "signature" : "($request as element(*)?, $href as xs:string?) as item()+", "description" : " Function for convenience.\n Calling this function is equivalent to calling\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n http:send-request($request, $href, ())\n </code>\n", "summary" : "<p> Function for convenience.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> see request parameter of the sequential <a href=\"#send-request-3\">send-request</a> function with three parameters.</div>" }, { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> see href parameter of the sequential <a href=\"#send-request-3\">send-request</a> function with three parameters.</div>" } ], "returns" : { "type" : "item()+", "description" : "see return of <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#send-request-3\">send-request</a>" }, "errors" : [  ] }, { "arity" : 3, "name" : "send-request", "qname" : "http:send-request", "signature" : "($request as element(*)?, $href as xs:string?, $bodies as item()*) as item()+", "description" : " This function sends an HTTP request and returns the corresponding response.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This function is declared as sequential (see XQuery Scripting).\n Sequential functions are allowed to have side effects. For example, most probably,\n an HTTP POST request is a request that has side effects because it adds/changes\n a remote resource.\n </p>\n", "summary" : "<p> This function sends an HTTP request and returns the corresponding response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Contains the various parameters of the request. See the <a href=\"http://expath.org/spec/http-client#d2e183\">specification</a>. for a full description of the structure of this element.</div>" }, { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the HTTP or HTTPS URI to send the request to. It must be a valid xs:anyURI, but is declared as a string to be able to pass literal strings (without requiring to explicitly cast it to an xs:anyURI.)</div>" }, { "name" : "bodies", "type" : "item()", "occurence" : null, "description" : "" } ], "returns" : { "type" : "item()+", "description" : "a sequence of items, where the first item is a element of type http:responseType. The response element is also described in the <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://expath.org/spec/http-client#d2e483\">specification</a>. If there is one (or several, in case of multipart) response body, the response bodies are the next items in the sequence." }, "errors" : [  ] } ], "variables" : [  ] }