{ "ns" : "http://zorba.io/modules/data-cleaning/consolidation", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This library module provides data consolidation functions that generally take as input a sequence of XML nodes\n and apply some rule in order do decide which node is better suited to represent the entire sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The logic contained in this module is not specific to any particular XQuery implementation,\n although the consolidation functions based on matching sequences against XPath expressions require\n some form of dynamic evaluation for XPath expressions.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Bruno Martins</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/data-cleaning/consolidation", "prefix" : "con" }, { "uri" : "http://zorba.io/modules/data-cleaning/set-similarity", "prefix" : "set" }, { "uri" : "http://zorba.io/modules/data-cleaning/character-based-string-similarity", "prefix" : "simc" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 2, "name" : "all-xpaths", "qname" : "con:all-xpaths", "signature" : "($s as element(*)*, $paths as xs:string*) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the elements from an input sequence of elements that, when matched to a given set of XPath expressions,\n produce a non-empty set of nodes in all the cases.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> all-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;c&gt;&lt;d/&gt;&lt;/c&gt;, &lt;d/&gt;), (\".//b\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (&lt;a&gt;&lt;b/&gt;&lt;/a&gt;) </pre></p>\n", "summary" : "<p>  Returns the elements from an input sequence of elements that, when matched to a given set of XPath expressions,\n produce a non-empty set of nodes in all the cases.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "paths", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings denoting XPath expressions.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The elements that, when matched to the given set of XPath expressions, always return a non-empty set of nodes." }, "errors" : [  ] }, { "arity" : 1, "name" : "least-attributes", "qname" : "con:least-attributes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of descending attributes (attributes at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-attributes( ( &lt;a att1=\"a1\" att2=\"a2\"/&gt;, &lt;b att1=\"a1\" /&gt;, &lt;c/&gt; ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;c/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of descending attributes (attributes at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of descending attributes in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "least-distinct-attributes", "qname" : "con:least-distinct-attributes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of distinct descending attributes (attributes at any\n given depth) in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> least-distinct-attributes( ( &lt;a att1=\"a1\" att2=\"a2\"/&gt;, &lt;b att1=\"a1\" /&gt;, &lt;c/&gt; ) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (&lt;c/&gt;) </pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of distinct descending attributes (attributes at any\n given depth) in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of distinct descending attributes in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "least-distinct-elements", "qname" : "con:least-distinct-elements", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of distinct descending elements (sub-elements at any\n given depth) in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> least-distinct-elements( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;b&gt;&lt;c/&gt;&lt;/b&gt;, &lt;d/&gt;) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (&lt;d/&gt;) </pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of distinct descending elements (sub-elements at any\n given depth) in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of distinct descending elements in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "least-distinct-nodes", "qname" : "con:least-distinct-nodes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of distinct descending nodes (sub-nodes at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> least-distinct-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;b&gt;&lt;c/&gt;&lt;/b&gt;, &lt;d/&gt;) ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> (&lt;d/&gt;) </pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of distinct descending nodes (sub-nodes at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of distinct descending nodes in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "least-elements", "qname" : "con:least-elements", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of descending elements (sub-elements at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-elements( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;b&gt;&lt;c/&gt;&lt;/b&gt;, &lt;d/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;d/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of descending elements (sub-elements at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of descending elements in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "least-frequent", "qname" : "con:least-frequent", "signature" : "($s) as item()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single less frequent node in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-frequent( ( \"a\", \"a\", \"b\") )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"b\")</pre></p>\n", "summary" : "<p>  Returns the single less frequent node in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "item()", "description" : "The least frequent node in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "least-nodes", "qname" : "con:least-nodes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the smallest number of descending nodes (sub-nodes at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;b&gt;&lt;c/&gt;&lt;/b&gt;, &lt;d/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;d/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the smallest number of descending nodes (sub-nodes at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the smallest number of descending nodes in the input sequence." }, "errors" : [  ] }, { "arity" : 2, "name" : "least-similar-edit-distance", "qname" : "con:least-similar-edit-distance", "signature" : "($s as xs:string*, $m as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single least similar string, in terms of the edit distance metric towards an input string,\n in a sequence of strings provided as input. If more than one string has a minimum similarity (a maximum\n value for the edit distance metric), return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-similar-edit-distance( ( \"aaabbbccc\", \"aaabbb\", \"eeefff\" ), \"aaab\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">( \"eeefff\" )</pre></p>\n", "summary" : "<p>  Returns the single least similar string, in terms of the edit distance metric towards an input string,\n in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "m", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string towards which we want to measure the edit distance.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The least similar string in the input sequence." }, "errors" : [  ] }, { "arity" : 2, "name" : "least-tokens", "qname" : "con:least-tokens", "signature" : "($s as xs:string*, $r as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single shortest string, in terms of the number of tokens, in a sequence of strings provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">least-tokens( ( \"a b c\", \"a b\", \"a\"), \" +\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"a\")</pre></p>\n", "summary" : "<p>  Returns the single shortest string, in terms of the number of tokens, in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "r", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The shortest string in the input sequence, in terms of the number of tokens." }, "errors" : [  ] }, { "arity" : 2, "name" : "least-xpaths", "qname" : "con:least-xpaths", "signature" : "($s as element(*)*, $paths as xs:string*) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single element from an input sequence of elements that matches the smallest number of\n XPath expressions from a given set, producing a non-empty set of nodes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first element according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> least-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;d&gt;&lt;c/&gt;&lt;b/&gt;&lt;/d&gt;, &lt;d/&gt;) , (\".//b\", \".//c\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> ( $lt;d/&gt; ) </pre></p>\n", "summary" : "<p>  Returns the single element from an input sequence of elements that matches the smallest number of\n XPath expressions from a given set, producing a non-empty set of nodes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "paths", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings denoting XPath expressions.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The element that matches the smallest number of XPath expressions producing a non-empty set of nodes." }, "errors" : [  ] }, { "arity" : 1, "name" : "longest", "qname" : "con:longest", "signature" : "($s as xs:string*) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single longest string, in terms of the number of characters, in a sequence of strings provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">con:longest( ( \"a\", \"aa\", \"aaa\") )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"aaa\")</pre></p>\n", "summary" : "<p>  Returns the single longest string, in terms of the number of characters, in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The longest string in the input sequence." }, "errors" : [  ] }, { "arity" : 2, "name" : "matching", "qname" : "con:matching", "signature" : "($s as xs:string*, $r as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the strings from an input sequence of strings that match a particular regular expression.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">matching( ( \"a A b\", \"c AAA d\", \"e BB f\"), \"A+\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">( \"a A b\", \"c AAA d\")</pre></p>\n", "summary" : "<p>  Returns the strings from an input sequence of strings that match a particular regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "r", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The regular expression to be used in the matching.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The strings in the input sequence that match the input regular expression." }, "errors" : [  ] }, { "arity" : 1, "name" : "most-attributes", "qname" : "con:most-attributes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of descending attributes (attributes at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-attributes( ( &lt;a att1=\"a1\" att2=\"a2\"/&gt;, &lt;b att1=\"a1\" /&gt;, &lt;c/&gt; ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a att1=\"a1\" att2=\"a2\"/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of descending attributes (attributes at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of descending attributes in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "most-distinct-attributes", "qname" : "con:most-distinct-attributes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of distinct descending attributes (attributes at any\n given depth) in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-distinct-attributes( ( &lt;a att1=\"a1\" att2=\"a2\" att3=\"a3\"/&gt;, &lt;a att1=\"a1\" att2=\"a2\"&gt;&lt;b att2=\"a2\" /&gt;&lt;/a&gt;, &lt;c/&gt; ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a att1=\"a1\" att2=\"a2\" att3=\"a3\"/&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of distinct descending attributes (attributes at any\n given depth) in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of distinct descending attributes in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "most-distinct-elements", "qname" : "con:most-distinct-elements", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of distinct descending elements (sub-elements at any\n given depth) in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-distinct-elements( ( &lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;d/&gt;&lt;/a&gt;, &lt;a&gt;&lt;b/&gt;&lt;b/&gt;&lt;c/&gt;&lt;/a&gt;, &lt;a/&gt; ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;d/&gt;&lt;/a&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of distinct descending elements (sub-elements at any\n given depth) in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of distinct descending elements in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "most-distinct-nodes", "qname" : "con:most-distinct-nodes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of distinct descending nodes (sub-nodes at any given depth) in\n a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-distinct-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;a&gt;&lt;a/&gt;&lt;/a&gt;, &lt;b/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a&gt;&lt;b/&gt;&lt;/a&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of distinct descending nodes (sub-nodes at any given depth) in\n a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of distinct descending nodes in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "most-elements", "qname" : "con:most-elements", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of descending elements (sub-elements at any given depth)\n in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-elements( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;a/&gt;, &lt;b/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a&gt;&lt;b/&gt;&lt;/a&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of descending elements (sub-elements at any given depth)\n in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of descending elements in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "most-frequent", "qname" : "con:most-frequent", "signature" : "($s) as item()", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single most frequent node in a sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, returns the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-frequent( ( \"a\", \"a\", \"b\") )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"a\")</pre></p>\n", "summary" : "<p>  Returns the single most frequent node in a sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "item()", "description" : "The most frequent node in the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "most-nodes", "qname" : "con:most-nodes", "signature" : "($s) as element(*)", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single node having the largest number of descending nodes (sub-nodes at any given depth) in a\n sequence of nodes provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first node according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;a/&gt;, &lt;b/&gt;) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(&lt;a&gt;&lt;b/&gt;&lt;/a&gt;)</pre></p>\n", "summary" : "<p>  Returns the single node having the largest number of descending nodes (sub-nodes at any given depth) in a\n sequence of nodes provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : null, "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of nodes.</div>" } ], "returns" : { "type" : "element(*)", "description" : "The node having the largest number of descending nodes in the input sequence." }, "errors" : [  ] }, { "arity" : 2, "name" : "most-similar-edit-distance", "qname" : "con:most-similar-edit-distance", "signature" : "($s as xs:string*, $m as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single most similar string, in terms of the edit distance metric towards an input string,\n in a sequence of strings provided as input. If more than one string has a maximum similarity (a minimum\n value for the edit distance metric), the function return the first string according to the order of the\n input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-similar-edit-distance( ( \"aaabbbccc\", \"aaabbb\", \"eeefff\" ), \"aaab\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">( \"aaabbb\" )</pre></p>\n", "summary" : "<p>  Returns the single most similar string, in terms of the edit distance metric towards an input string,\n in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "m", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string towards which we want to measure the edit distance.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The most similar string in the input sequence." }, "errors" : [  ] }, { "arity" : 2, "name" : "most-tokens", "qname" : "con:most-tokens", "signature" : "($s as xs:string*, $r as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single longest string, in terms of the number of tokens, in a sequence of strings provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">most-tokens( ( \"a b c\", \"a b\", \"a\"), \" +\" )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"a b c\")</pre></p>\n", "summary" : "<p>  Returns the single longest string, in terms of the number of tokens, in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" }, { "name" : "r", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A regular expression forming the delimiter character(s) which mark the boundaries between adjacent tokens.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The longest string in the input sequence, in terms of the number of tokens." }, "errors" : [  ] }, { "arity" : 2, "name" : "most-xpaths", "qname" : "con:most-xpaths", "signature" : "($s as element(*)*, $paths as xs:string*) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single element from an input sequence of elements that matches the largest number of\n XPath expressions from a given set, producing a non-empty set of nodes.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first element according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> most-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;d&gt;&lt;c/&gt;&lt;b/&gt;&lt;/d&gt;, &lt;d/&gt;) , (\".//b\", \".//c\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> ( &lt;d&gt;&lt;c/&gt;&lt;b/&gt;&lt;/d&gt; ) </pre></p>\n", "summary" : "<p>  Returns the single element from an input sequence of elements that matches the largest number of\n XPath expressions from a given set, producing a non-empty set of nodes.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "paths", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings denoting XPath expressions.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The element that matches the largest number of XPath expressions producing a non-empty set of nodes." }, "errors" : [  ] }, { "arity" : 1, "name" : "shortest", "qname" : "con:shortest", "signature" : "($s as xs:string*) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single shortest string, in terms of the number of characters, in a sequence of strings provided as input.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, return the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">shortest( ( \"a\", \"aa\", \"aaa\") )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">(\"a\")</pre></p>\n", "summary" : "<p>  Returns the single shortest string, in terms of the number of characters, in a sequence of strings provided as input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The shortest string in the input sequence." }, "errors" : [  ] }, { "arity" : 2, "name" : "some-xpaths", "qname" : "con:some-xpaths", "signature" : "($s as element(*)*, $paths as xs:string*) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the elements from a sequence of elements that, when matched to a given set of XPath expressions,\n produce a non-empty set of nodes for some of the cases.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> some-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;d&gt;&lt;c/&gt;&lt;/d&gt;, &lt;d/&gt;), (\".//b\", \".//c\") ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt; , &lt;d&gt;&lt;c/&gt;&lt;/d&gt; ) </pre></p>\n", "summary" : "<p>  Returns the elements from a sequence of elements that, when matched to a given set of XPath expressions,\n produce a non-empty set of nodes for some of the cases.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "paths", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings denoting XPath expressions.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The elements that, when matched to the given set of XPath expressions, return a non-empty set of nodes for at least one of the cases." }, "errors" : [  ] }, { "arity" : 1, "name" : "superstring", "qname" : "con:superstring", "signature" : "($s as xs:string*) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the single string, from an input sequence of strings, that appears more frequently as part\n of the other strings in the sequence. If no such string exists, the function returns an empty sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">If more then one answer is possible, the function returns the first string according to the order of the input sequence.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\">super-string( ( \"aaa bbb ccc\", \"aaa bbb\", \"aaa ddd\", \"eee fff\" ) )</pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\">( \"aaa bbb\" )</pre></p>\n", "summary" : "<p>  Returns the single string, from an input sequence of strings, that appears more frequently as part\n of the other strings in the sequence.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of strings.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The string that appears more frequently as part of the other strings in the sequence." }, "errors" : [  ] }, { "arity" : 2, "name" : "validating-schema", "qname" : "con:validating-schema", "signature" : "($s as element(*)*, $schema as element(*)) as element(*)*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the nodes from an input sequence of nodes that validate against a given XML Schema.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example usage : <pre class=\"ace-static\" ace-mode=\"xquery\"> validating-schema ( ( &lt;a/&gt; , &lt;b/&gt; ), &lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;&lt;xs:element name=\"a\" /&gt;&lt;/xs:schema&gt; ) </pre></p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function invocation in the example above returns : <pre class=\"ace-static\" ace-mode=\"xquery\"> ( &lt;a/&gt; ) </pre></p>\n", "summary" : "<p>  Returns the nodes from an input sequence of nodes that validate against a given XML Schema.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of elements.</div>" }, { "name" : "schema", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An element encoding an XML Schema.</div>" } ], "returns" : { "type" : "element(*)*", "description" : "The nodes that validate against the XML Schema. <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Attention : This function is still not implemented. </b>" }, "errors" : [  ] } ], "variables" : [  ] }