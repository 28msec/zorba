{ "ns" : "http://expath.org/ns/file", "description" : " This module implements the file API EXPath specification available at http://expath.org/spec/file\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://expath.org/spec/file</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Gabriel Petrovay, Matthias Brantner, Markus Pilman</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://expath.org/ns/file", "prefix" : "file" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 2, "name" : "append-binary", "qname" : "file:append-binary", "signature" : "($file as xs:string, $content as xs:base64Binary) as empty-sequence() external", "description" : " Appends a sequence of Base64 items as binary to a file. If the file pointed\n by <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$file</pre> does not exist, a new file will be created.\n", "summary" : "<p> Appends a sequence of Base64 items as binary to a file.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 2, "name" : "append-text-lines", "qname" : "file:append-text-lines", "signature" : "($file as xs:string, $content as xs:string*) as empty-sequence()", "description" : " Appends a sequence of string to a file, each followed by a\n platform-dependent newline character(s), using the UTF-8 character encoding.\n", "summary" : "<p> Appends a sequence of string to a file, each followed by a\n platform-dependent newline character(s), using the UTF-8 character encoding.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 3, "name" : "append-text-lines", "qname" : "file:append-text-lines", "signature" : "($file as xs:string, $content as xs:string*, $encoding as xs:string) as empty-sequence() external", "description" : " Appends a sequence of string items to a file, each followed by a\n platform-dependent newline character(s).\n", "summary" : "<p> Appends a sequence of string items to a file, each followed by a\n platform-dependent newline character(s).</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" }, { "name" : "encoding", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The character encoding to append <code>$content</code> as.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 2, "name" : "append-text", "qname" : "file:append-text", "signature" : "($file as xs:string, $content as xs:string) as empty-sequence()", "description" : " Appends a sequence of string items to a file.\n", "summary" : "<p> Appends a sequence of string items to a file.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 3, "name" : "append-text", "qname" : "file:append-text", "signature" : "($file as xs:string, $content as xs:string, $encoding as xs:string) as empty-sequence() external", "description" : " Appends a sequence of string items to a file.\n", "summary" : "<p> Appends a sequence of string items to a file.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" }, { "name" : "encoding", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The character encoding to append <code>$content</code> as.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 1, "name" : "base-name", "qname" : "file:base-name", "signature" : "($path as xs:string) as xs:string external", "description" : " Returns the last component from the <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</pre>, deleting any\n trailing directory-separator characters. If <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</pre> consists\n entirely directory-separator characters, the empty string is returned. If\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</pre> is the empty string, the string <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\".\"</pre> is returned,\n signifying the current directory.\n No path existence check is made.\n", "summary" : "<p> Returns the last component from the  $path , deleting any\n trailing directory-separator characters.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A file path/URI.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The base name of this file." }, "errors" : [  ] }, { "arity" : 2, "name" : "base-name", "qname" : "file:base-name", "signature" : "($path as xs:string, $suffix as xs:string) as xs:string", "description" : " Returns the last component from the <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</pre>, deleting any\n trailing directory-separator characters and the <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$suffix</pre>. If path\n consists entirely directory-separator characters, the empty string is\n returned. If path is the empty string, the string <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\".\"</pre> is\n returned, signifying the current directory.\n No path existence check is made.\n The <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$suffix</pre> can be used for example to eliminate file extensions.\n", "summary" : "<p> Returns the last component from the  $path , deleting any\n trailing directory-separator characters and the  $suffix .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A file path/URI.</div>" }, { "name" : "suffix", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A suffix which should get deleted from the result.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The base-name of $path with a deleted $suffix." }, "errors" : [  ] }, { "arity" : 2, "name" : "copy", "qname" : "file:copy", "signature" : "($source as xs:string, $destination as xs:string) as empty-sequence()", "description" : " Copies a file or a directory given a source and a destination path/URI.\n", "summary" : "<p> Copies a file or a directory given a source and a destination path/URI.</p>", "annotation_str" : " %an:nondeterministic %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" }, { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "source", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file or directory to copy.</div>" }, { "name" : "destination", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The destination path/URI.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$source</pre> path does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0002 If the computed destination points to a file system item with a different type than the <pre>$source</pre>.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0003 If <pre>$destination</pre> does not exist and it's parent directory does not exist either.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 1, "name" : "create-directory", "qname" : "file:create-directory", "signature" : "($dir as xs:string) as empty-sequence() external", "description" : " Creates a directory.\n The operation is will create all the missing parent directories from the\n given path.\n", "summary" : "<p> Creates a directory.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "dir", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI denoting the directory to be created.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0002 If the directory cannot be created because of an already existing file.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 1, "name" : "delete", "qname" : "file:delete", "signature" : "($path as xs:string) as empty-sequence()", "description" : " Deletes a file or a directory from the file system.\n If <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</pre> points to a directory the directory will be deleted\n recursively.\n", "summary" : "<p> Deletes a file or a directory from the file system.</p>", "annotation_str" : " %an:nondeterministic %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" }, { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file or directory to delete.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$path</pre> path does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 1, "name" : "dir-name", "qname" : "file:dir-name", "signature" : "($path as xs:string) as xs:string external", "description" : " This function is the converse of <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:base-name</pre>. It returns a\n string denoting the parent directory of the <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</pre>. Any trailing\n directory-separator characters are not counted as part of the directory\n name. If path is the empty string or contains no directory-separator string,\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\".\"</pre> is returned, signifying the current directory.\n No path existence check is made.\n", "summary" : "<p> This function is the converse of  file:base-name .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The filename, of which the dirname should be get.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The name of the directory the file is in." }, "errors" : [  ] }, { "arity" : 0, "name" : "directory-separator", "qname" : "file:directory-separator", "signature" : "() as xs:string external", "description" : " This function returns the value of the operating system specific directory\n separator. For example, <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">/</pre> on Unix-based systems and <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\\</pre>\n on Windows systems.\n", "summary" : "<p> This function returns the value of the operating system specific directory\n separator.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The operating system specific directory separator." }, "errors" : [  ] }, { "arity" : 1, "name" : "exists", "qname" : "file:exists", "signature" : "($path as xs:string) as xs:boolean", "description" : " Tests if a path/URI is already used in the file system.\n", "summary" : "<p> Tests if a path/URI is already used in the file system.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</code> points to an existing file system item; for symbolic links, retuns true if the linked-to item exists." }, "errors" : [  ] }, { "arity" : 2, "name" : "exists", "qname" : "file:exists", "signature" : "($path as xs:string, $follow-symlinks as xs:boolean) as xs:boolean external", "description" : " Tests if a path/URI is already used in the file system.\n", "summary" : "<p> Tests if a path/URI is already used in the file system.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI to test.</div>" }, { "name" : "follow-symlinks", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> if <code>true</code>, follows symbolic links.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</code> points to an existing file system item." }, "errors" : [  ] }, { "arity" : 1, "name" : "glob-to-regex", "qname" : "file:glob-to-regex", "signature" : "($pattern as xs:string) as xs:string", "description" : " A helper function that performs a trivial (not complete) glob to regex\n pattern translation.\n", "summary" : "<p> A helper function that performs a trivial (not complete) glob to regex\n pattern translation.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "pattern", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The glob pattern.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A regex pattern corresponding to the glob pattern provided." }, "errors" : [  ] }, { "arity" : 1, "name" : "is-directory", "qname" : "file:is-directory", "signature" : "($path as xs:string) as xs:boolean external", "description" : " Tests if a path/URI points to a directory. On Unix-based systems, the root\n and the volume roots are considered directories.\n", "summary" : "<p> Tests if a path/URI points to a directory.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</code> points to a directory; for symbolic links, returns true if the linked-to item is a directory." }, "errors" : [  ] }, { "arity" : 1, "name" : "is-file", "qname" : "file:is-file", "signature" : "($path as xs:string) as xs:boolean external", "description" : " Tests if a path/URI points to a file.\n", "summary" : "<p> Tests if a path/URI points to a file.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</code> points to a file; for symbolic links, returns true if the linked-to item is a file." }, "errors" : [  ] }, { "arity" : 1, "name" : "is-symlink", "qname" : "file:is-symlink", "signature" : "($path as xs:string) as xs:boolean external", "description" : " Tests if a path/URI points to symbolic link.  This works on all Unix-based\n systems as well as Windows Vista or later.\n", "summary" : "<p> Tests if a path/URI points to symbolic link.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI to test.</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</code> points to a symbolic link." }, "errors" : [  ] }, { "arity" : 1, "name" : "last-modified", "qname" : "file:last-modified", "signature" : "($path as xs:string) as xs:dateTime external", "description" : " Retrieves the timestamp of the last modification of the file system item\n pointed by the path/URI.\n", "summary" : "<p> Retrieves the timestamp of the last modification of the file system item\n pointed by the path/URI.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The file system item to read the last modification timestamp from.</div>" } ], "returns" : { "type" : "xs:dateTime", "description" : "The date and time of the last modification of the item." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$path</pre> does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 1, "name" : "list", "qname" : "file:list", "signature" : "($dir as xs:string) as xs:string* external", "description" : " Lists the file system items in a certain directory.\n The operation is equivalent to calling:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:list($dir, fn:false())</pre>.\n", "summary" : "<p> Lists the file system items in a certain directory.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "dir", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the directory to retrieve the children from.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The sequence of names of the direct children." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0003 If <pre>$dir</pre> does not point to an existing directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 2, "name" : "list", "qname" : "file:list", "signature" : "($path as xs:string, $recursive as xs:boolean) as xs:string*", "description" : " Lists the file system items in a certain directory. The order of the items\n in the resulting sequence is not defined. The \".\" and \"..\" items are not\n returned. The returned paths are relative to the provided <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</pre>.\n If <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$recursive</pre> evaluates to <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">fn:true()</pre>, the operation\n will recurse in the subdirectories.\n", "summary" : "<p> Lists the file system items in a certain directory.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "" }, { "name" : "recursive", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A boolean flag indicating whether the operation should be performed recursively.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of relative paths." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0003 If <pre>$dir</pre> does not point to an existing directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 3, "name" : "list", "qname" : "file:list", "signature" : "($path as xs:string, $recursive as xs:boolean, $pattern as xs:string) as xs:string*", "description" : " Lists all files matching the given pattern in a given directory.\n The order of the items in the result is not defined.\n The \".\" and \"..\" items are not considered for the match.\n The file paths are relative to the provided $path.\n The pattern is a glob expression supporting:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li><pre>*</pre> for matching any number of unknown characters</li>\n   <li><pre>?</pre> for matching one unknown character</li>\n </ul>\n", "summary" : "<p> Lists all files matching the given pattern in a given directory.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI to retrieve the children from.</div>" }, { "name" : "recursive", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A boolean flag indicating whether the operation should be performed recursively.</div>" }, { "name" : "pattern", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The file name pattern.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of file names matching the pattern." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0003 If <pre>$dir</pre> does not point to an existing directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 2, "name" : "move", "qname" : "file:move", "signature" : "($source as xs:string, $destination as xs:string) as empty-sequence()", "description" : " Moves a file or directory given a source and a destination paths/URIs.\n", "summary" : "<p> Moves a file or directory given a source and a destination paths/URIs.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "source", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to move.</div>" }, { "name" : "destination", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The destination path/URI.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$source</pre> path does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0002 If <pre>$source</pre> points to a directory and <pre>$destination</pre> points to an existing file.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0003 If <pre>$destination</pre> does not exist and its parent directory does not exist either.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 0, "name" : "path-separator", "qname" : "file:path-separator", "signature" : "() as xs:string external", "description" : " This function returns the value of the operating system specific path\n separator. For example, <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">:</pre> on Unix-based systems and <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">;</pre>\n on Windows systems.\n", "summary" : "<p> This function returns the value of the operating system specific path\n separator.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [  ], "returns" : { "type" : "xs:string", "description" : "The operating system specific path separator." }, "errors" : [  ] }, { "arity" : 1, "name" : "path-to-native", "qname" : "file:path-to-native", "signature" : "($path as xs:string) as xs:string external", "description" : " Transforms a URI, an absolute path, or relative path to a native path on the\n running platform.\n No path existence check is made.\n", "summary" : "<p> Transforms a URI, an absolute path, or relative path to a native path on the\n running platform.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The uri or path to normalize.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The native path corresponding to <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$path</pre>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If an error occurs while trying to obtain the native path.</xqdoc:error>" ] }, { "arity" : 1, "name" : "path-to-uri", "qname" : "file:path-to-uri", "signature" : "($path as xs:string) as xs:anyURI external", "description" : " Transforms a file system path into a URI with the file:// scheme. If the\n path is relative, it is first resolved against the current working\n directory.\n No path existence check is made.\n", "summary" : "<p> Transforms a file system path into a URI with the file:// scheme.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path to transform.</div>" } ], "returns" : { "type" : "xs:anyURI", "description" : "The file URI corresponding to <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">path</pre>." }, "errors" : [  ] }, { "arity" : 1, "name" : "read-binary", "qname" : "file:read-binary", "signature" : "($file as xs:string) as xs:base64Binary external", "description" : " Reads the content of a file and returns a Base64 representation of the\n content.\n", "summary" : "<p> Reads the content of a file and returns a Base64 representation of the\n content.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The file to read.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "The content of the file as Base64." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$source</pre> path does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$source</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 1, "name" : "read-text-lines", "qname" : "file:read-text-lines", "signature" : "($file as xs:string) as xs:string*", "description" : " Reads the content of a file and returns a sequence of strings representing\n the lines in the content of the file.\n The operation is equivalent to calling:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:read-text-lines($file, \"UTF-8\")</pre>.\n", "summary" : "<p> Reads the content of a file and returns a sequence of strings representing\n the lines in the content of the file.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The file to read.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The content of the file as a sequence of strings." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$source</pre> path does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$source</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 2, "name" : "read-text-lines", "qname" : "file:read-text-lines", "signature" : "($file as xs:string, $encoding as xs:string) as xs:string* external", "description" : " Reads the content of a file using the specified encoding and returns a\n sequence of strings representing the lines in the content of the file.\n This implementation considers the LF (\n) character as the line\n separator. If a resulting line ends with the CR (&#xD;) character, this is\n trimmed as well. This implementation will uniformly treat LF and CRLF as\n line separators.\n", "summary" : "<p> Reads the content of a file using the specified encoding and returns a\n sequence of strings representing the lines in the content of the file.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The file to read.</div>" }, { "name" : "encoding", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The encoding used when reading the file. If compiled with ICU, then Zorba supports any encoding that ICU supports; otherwise Zorba only supports ASCII and UTF-8. The encoding parameter is case insensitive.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The content of the file as a sequence of strings." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$source</pre> path does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$source</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0006 If <pre>$encoding</pre> is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 1, "name" : "read-text", "qname" : "file:read-text", "signature" : "($file as xs:string) as xs:string", "description" : " Reads the content of a file and returns a string representation of the\n content.\n The operation is equivalent to calling:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:read-text($file, \"UTF-8\")</pre>.\n", "summary" : "<p> Reads the content of a file and returns a string representation of the\n content.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The file to read.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The content of the file as string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$source</pre> path does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$source</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 2, "name" : "read-text", "qname" : "file:read-text", "signature" : "($file as xs:string, $encoding as xs:string) as xs:string external", "description" : " Reads the content of a file using the specified encoding and returns a\n string representation of the content.\n", "summary" : "<p> Reads the content of a file using the specified encoding and returns a\n string representation of the content.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The file to read.</div>" }, { "name" : "encoding", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The encoding used when reading the file. If compiled with ICU, then Zorba supports any encoding that ICU supports; otherwise Zorba only supports ASCII and UTF-8. The encoding parameter is case insensitive.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The content of the file as string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$source</pre> path does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$source</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0006 If <pre>$encoding</pre> is not supported.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 1, "name" : "resolve-path", "qname" : "file:resolve-path", "signature" : "($path as xs:string) as xs:string external", "description" : " Transforms a relative path/URI into an absolute operating system path by\n resolving it against the current working directory.\n No path existence check is made.\n", "summary" : "<p> Transforms a relative path/URI into an absolute operating system path by\n resolving it against the current working directory.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "path", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI to transform.</div>" } ], "returns" : { "type" : "xs:string", "description" : "The operating system file path." }, "errors" : [  ] }, { "arity" : 1, "name" : "size", "qname" : "file:size", "signature" : "($file as xs:string) as xs:integer external", "description" : " Retrieves the size of a file.\n", "summary" : "<p> Retrieves the size of a file.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The file get the size.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "An integer representing the size in bytes of the file." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0001 If the <pre>$file</pre> does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If the <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 2, "name" : "write-binary", "qname" : "file:write-binary", "signature" : "($file as xs:string, $content as xs:base64Binary) as empty-sequence() external", "description" : " Writes a sequence of Base64 items as binary to a file.\n", "summary" : "<p> Writes a sequence of Base64 items as binary to a file.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 2, "name" : "write-text-lines", "qname" : "file:write-text-lines", "signature" : "($file as xs:string, $content as xs:string*) as empty-sequence()", "description" : " Writes a sequence of strings to a file, each followed by a\n platform-dependent newline character(s), using the UTF-8 character encoding.\n", "summary" : "<p> Writes a sequence of strings to a file, each followed by a\n platform-dependent newline character(s), using the UTF-8 character encoding.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 3, "name" : "write-text-lines", "qname" : "file:write-text-lines", "signature" : "($file as xs:string, $content as xs:string*, $encoding as xs:string) as empty-sequence() external", "description" : " Writes a sequence of strings to a file, each followed by a\n platform-dependent newline character(s).\n", "summary" : "<p> Writes a sequence of strings to a file, each followed by a\n platform-dependent newline character(s).</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" }, { "name" : "encoding", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The character encoding to write <code>$content</code> as.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 2, "name" : "write-text", "qname" : "file:write-text", "signature" : "($file as xs:string, $content as xs:string) as empty-sequence()", "description" : " Writes a sequence of strings to a file using the UTF-8 character encoding.\n", "summary" : "<p> Writes a sequence of strings to a file using the UTF-8 character encoding.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] }, { "arity" : 3, "name" : "write-text", "qname" : "file:write-text", "signature" : "($file as xs:string, $content as xs:string, $encoding as xs:string) as empty-sequence() external", "description" : " Writes a sequence of strings to a file.\n", "summary" : "<p> Writes a sequence of strings to a file.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "file", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The path/URI of the file to write the content to.</div>" }, { "name" : "content", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content to be written to the file.</div>" }, { "name" : "encoding", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The character encoding to write <code>$content</code> as.</div>" } ], "returns" : { "type" : "empty-sequence()", "description" : "The empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL0004 If <pre>$file</pre> points to a directory.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">file:FOFL9999 If any other error occurs.</xqdoc:error>" ] } ], "variables" : [  ] }