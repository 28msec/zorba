<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2013-12-04T01:28:38.942159+01:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://zorba.io/modules/sqlite</xqdoc:uri><xqdoc:name>sqlite</xqdoc:name><xqdoc:comment><xqdoc:description> This module provides functionality to extract, add and modify data
 from SQLite databases.<p/>
</xqdoc:description><xqdoc:author>Luis Rodgriguez</xqdoc:author><xqdoc:custom tag="library"><a href="http://www.sqlite.org/">SQLite</a></xqdoc:custom><xqdoc:custom tag="project">DB Drivers/SQLite</xqdoc:custom><xqdoc:custom tag="language">jsoniq</xqdoc:custom><xqdoc:custom tag="version">1.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="an" uri="http://zorba.io/annotations" isSchema="false"/><xqdoc:namespace prefix="s" uri="http://zorba.io/modules/sqlite" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports/><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Connect to a SQLite database.
</xqdoc:description><xqdoc:param>$db-name the SQLite database name to be opened as xs:string.</xqdoc:param><xqdoc:return>the SQLite database object as xs:anyURI.</xqdoc:return><xqdoc:error>s:CANT-OPEN-DB if the database name doesn't exist or it couldn't be opened.</xqdoc:error><xqdoc:error>s:COMPILED-WITHOUT-DISK-ACCESS if a non-in-memory database is requested and the module is built without filesystem access.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:connect</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s:connect($db-name as xs:string) as xs:anyURI external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db-name</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Connect to a SQLite database with optional options.<p/>
 All options are true/false values. Available options are: open-read-only,
 open-create, open-no-mutex, and open-shared-cache.
 The options are of the form:
 <pre>
 {
   "open_read_only" : true,
   "open_create     : false,
   ...
 }
 </pre>
 <p/>
</xqdoc:description><xqdoc:param>$db-name the SQLite database name to be opened as xs:string.</xqdoc:param><xqdoc:param>$options a JSON object containing SQLite connection options.</xqdoc:param><xqdoc:return>the SQLite database object as xs:anyURI.</xqdoc:return><xqdoc:error>s:CANT-OPEN-DB if the database name doesn't exist or it couldn't be opened.</xqdoc:error><xqdoc:error>s:UNKNOWN-OPTION if there is any unknown option specified.</xqdoc:error><xqdoc:error>s:COMPILED-WITHOUT-DISK-ACCESS if a non-in-memory database is requested and the module is built without filesystem access.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:connect</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s:connect($db-name as xs:string, $options as object()?) as xs:anyURI external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db-name</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Returns whether on not the passed SQLite database object is connected.
</xqdoc:description><xqdoc:param>$conn the SQLite database object as xs:anyURI.</xqdoc:param><xqdoc:return>true if the given SQLite database object is connected, false otherwise.</xqdoc:return><xqdoc:error>s:INVALID-SQLITE-OBJECT if $conn is not a valid SQLite database object.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:is-connected</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s:is-connected($conn as xs:anyURI) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Commits all pending update operations in this SQLite database.
</xqdoc:description><xqdoc:param>$conn the SQLite database object as xs:anyURI.</xqdoc:param><xqdoc:return>the passed SQLite object.</xqdoc:return><xqdoc:error>s:INVALID-SQLITE-OBJECT if $conn is not a valid SQLite database object.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:commit</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:commit($conn as xs:anyURI) as xs:anyURI external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Rollbacks all pending update operations in this SQLite database.
</xqdoc:description><xqdoc:param>$conn the SQLite database object as xs:anyURI.</xqdoc:param><xqdoc:return>the passed SQLite object.</xqdoc:return><xqdoc:error>s:INVALID-SQLITE-OBJECT if $conn is not a valid SQLite database object.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:rollback</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:rollback($conn as xs:anyURI) as xs:anyURI external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Executes a query (select command) over an already opened SQLite database
 object.
</xqdoc:description><xqdoc:param>$conn an already opened SQLite database object as xs:anyURI.</xqdoc:param><xqdoc:param>$sqlstr the query to be executed as xs:string.</xqdoc:param><xqdoc:return>a sequence of JSON objects describing each row returned.</xqdoc:return><xqdoc:error>s:INVALID-SQLITE-OBJECT if $conn is not a valid SQLite database object.</xqdoc:error><xqdoc:error>s:INVALID-SQL-STATEMENT if $stmnt is not a valid sql command.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:execute-query</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s:execute-query($conn as xs:anyURI, $sqlstr as xs:string) as object()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>sqlstr</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Executes an update command over an already opened SQLite database object.
</xqdoc:description><xqdoc:param>$conn an already opened SQLite database object as xs:anyURI.</xqdoc:param><xqdoc:param>$sqlstr the update command to be executed as xs:string.</xqdoc:param><xqdoc:return>the amount of rows modified by such update command.</xqdoc:return><xqdoc:error>s:INVALID-SQLITE-OBJECT if $conn is not a valid SQLite database object.</xqdoc:error><xqdoc:error>s:INVALID-SQL-STATEMENT if $stmnt is not a valid sql command.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:execute-update</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:execute-update($conn as xs:anyURI, $sqlstr as xs:string) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>sqlstr</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Returns the metadata associated to a given prepared SQLite statement.<p/>
 SQLite metadata is returned in the following form:
 <pre>
 {
   "columns" :
       [{
           "name"          : &lt;column name&gt;,
           "table"         : &lt;table name&gt;,
           "database"      : &lt;database name&gt;,
           "type"          : &lt;type name&gt;,
           "collation"     : [BINARY|NOCASE|RTRIM],
           "nullable"      : [true|false],
           "primary key"   : [true|false],
           "autoincrement" : [true|false]
       }*]
 }
 </pre>
</xqdoc:description><xqdoc:param>$pstmnt the sql command as xs:anyURI from which metadata will be extracted.</xqdoc:param><xqdoc:return>a object() with the associated the metadata.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error><xqdoc:error>s:UNAVAILABLE-METADATA if no metadata is available (SQLite library compiled without SQLITE_ENABLE_COLUMN_METADATA).</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:metadata</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s:metadata($pstmnt as xs:anyURI) as object() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Compiles a prepared statement based on an already connected SQLite database
 and a string that defines the sql command.<p/>
 You can use '?' in the sql command as placeholders so you will
 be able to bind variables later to such places.<p/>
</xqdoc:description><xqdoc:param>$conn the SQLite database object as xs:anyURI.</xqdoc:param><xqdoc:param>$stmnt the sql command as xs:string.</xqdoc:param><xqdoc:return>a xs:anyURI object representing the prepared statement.</xqdoc:return><xqdoc:error>s:INVALID-SQLITE-OBJECT if $conn is not a valid SQLite database object.</xqdoc:error><xqdoc:error>s:INVALID-SQL-STATEMENT if $stmnt is not a valid sql command.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:prepare-statement</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s:prepare-statement($conn as xs:anyURI, $stmnt as xs:string) as xs:anyURI external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>stmnt</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Binds a value to a placeholder inside a prepared statement using the
 same type as the item given.
</xqdoc:description><xqdoc:param>$pstmnt the prepared statement already compiled as xs:anyURI.</xqdoc:param><xqdoc:param>$param-num the placeholder position to be set.</xqdoc:param><xqdoc:param>$val the value to be bind in such placeholder.</xqdoc:param><xqdoc:return>nothing.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error><xqdoc:error>s:INVALID-PLACEHOLDER-POSITION if $param-num is not a valid position.</xqdoc:error><xqdoc:error>s:INVALID-VALUE if $val is not a valid value.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:set-value</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:set-value($pstmnt as xs:anyURI, $param-num as xs:integer, $val as item()) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>param-num</xqdoc:name><xqdoc:type>xs:integer</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>val</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Binds a boolean to a placeholder inside a prepared statement.
</xqdoc:description><xqdoc:param>$pstmnt the prepared statement already compiled as xs:anyURI.</xqdoc:param><xqdoc:param>$param-num the placeholder position to be set.</xqdoc:param><xqdoc:param>$val the boolean to be bind in such placeholder.</xqdoc:param><xqdoc:return>nothing.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error><xqdoc:error>s:INVALID-PLACEHOLDER-POSITION if $param-num is not a valid position.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:set-boolean</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:set-boolean($pstmnt as xs:anyURI, $param-num as xs:integer, $val as xs:boolean) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>param-num</xqdoc:name><xqdoc:type>xs:integer</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>val</xqdoc:name><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Binds a double variable to a placeholder inside a prepared statement.
</xqdoc:description><xqdoc:param>$pstmnt the prepared statement already compiled as xs:anyURI.</xqdoc:param><xqdoc:param>$param-num the placeholder position to be set.</xqdoc:param><xqdoc:param>$val a xs:double, xs:integer or xs:decimal to be bind in such placeholder.</xqdoc:param><xqdoc:return>nothing.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error><xqdoc:error>s:INVALID-PLACEHOLDER-POSITION if $param-num is not a valid position.</xqdoc:error><xqdoc:error>s:INVALID-VALUE if $val is not a valid numeric type.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:set-numeric</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:set-numeric($pstmnt as xs:anyURI, $param-num as xs:integer, $val as xs:anyAtomicType) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>param-num</xqdoc:name><xqdoc:type>xs:integer</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>val</xqdoc:name><xqdoc:type>xs:anyAtomicType</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Binds a string variable to a placeholder inside a prepared statement.
</xqdoc:description><xqdoc:param>$pstmnt the prepared statement already compiled as xs:anyURI.</xqdoc:param><xqdoc:param>$param-num the placeholder position to be set.</xqdoc:param><xqdoc:param>$val a string to be bind in such placeholder.</xqdoc:param><xqdoc:return>nothing.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error><xqdoc:error>s:INVALID-PLACEHOLDER-POSITION if $param-num is not a valid position.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:set-string</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:set-string($pstmnt as xs:anyURI, $param-num as xs:integer, $val as xs:string) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>param-num</xqdoc:name><xqdoc:type>xs:integer</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>val</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Set a null to a placeholder inside a prepared statement.
</xqdoc:description><xqdoc:param>$pstmnt the prepared statement already compiled as xs:anyURI.</xqdoc:param><xqdoc:param>$param-num the placeholder position to be set.</xqdoc:param><xqdoc:return>nothing.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error><xqdoc:error>s:INVALID-PLACEHOLDER-POSITION if $param-num is not a valid position.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:set-null</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:set-null($pstmnt as xs:anyURI, $param-num as xs:integer) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>param-num</xqdoc:name><xqdoc:type>xs:integer</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Set all parameters to null inside a prepared statement.
</xqdoc:description><xqdoc:param>$pstmnt the prepared statement already compiled as xs:anyURI.</xqdoc:param><xqdoc:return>nothing.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:clear-params</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:clear-params($pstmnt as xs:anyURI) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Close and free resources associated to a prepared statement.
</xqdoc:description><xqdoc:param>$pstmnt the prepared statement to be closed.</xqdoc:param><xqdoc:return>nothing.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error></xqdoc:comment><xqdoc:name>s:close-prepared</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:close-prepared($pstmnt as xs:anyURI) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Execute a query (select command) over an already connected SQLite
 database object.
</xqdoc:description><xqdoc:param>$pstmnt the query command to be executed as xs:anyURI.</xqdoc:param><xqdoc:return>a sequence of JSON objects representing the query results.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:execute-query-prepared</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:execute-query-prepared($pstmnt as xs:anyURI) as object()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Execute a update command over an already connected SQLite
 database object.
</xqdoc:description><xqdoc:param>$pstmnt the update command to be executed as xs:anyURI.</xqdoc:param><xqdoc:return>an integer that represents the amount of rows affected.</xqdoc:return><xqdoc:error>s:INVALID-PREPARED-STATEMENT if $pstmnt is not a valid SQLite prepared statement.</xqdoc:error><xqdoc:error>s:INTERNAL-SQLITE-PROBLEM if there was an internal error inside SQLite library.</xqdoc:error></xqdoc:comment><xqdoc:name>s:execute-update-prepared</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s:execute-update-prepared($pstmnt as xs:anyURI) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pstmnt</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>