<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2013-12-04T01:28:38.942159+01:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://www.zorba-xquery.com/modules/schema-tools</xqdoc:uri><xqdoc:name>schema-tools</xqdoc:name><xqdoc:comment><xqdoc:description> This module provides funtionality to get sample XMLSchema from XML instances
 and sample XML instances from XMLSchema.
 <a href="http://xmlbeans.apache.org/">Apache XMLBeans</a> library is used to implement
 inst2xsd and xsd2inst functions.
 <br/>
 <br/>
 <b>Note:</b> Since this module has a Java library dependency a JVM required
 to be installed on the system. For Windows: jvm.dll is required on the system
 path ( usually located in "C:\Program Files\Java\jre6\bin\client".
</xqdoc:description><xqdoc:author>Cezar Andrei</xqdoc:author><xqdoc:see>http://xmlbeans.apache.org/</xqdoc:see><xqdoc:see>http://xmlbeans.apache.org</xqdoc:see><xqdoc:custom tag="library"><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">JDK - Java Development Kit</a></xqdoc:custom><xqdoc:custom tag="library"><a href="http://xmlbeans.apache.org/">Apache XMLBeans</a></xqdoc:custom><xqdoc:custom tag="project">Zorba/Data Processing/Schema Tools</xqdoc:custom><xqdoc:custom tag="language">xquery</xqdoc:custom><xqdoc:custom tag="version">3.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="err" uri="http://www.w3.org/2005/xqt-errors" isSchema="false"/><xqdoc:namespace prefix="schema-options" uri="http://zorba.io/modules/schema" isSchema="false"/><xqdoc:namespace prefix="schema-tools" uri="http://www.zorba-xquery.com/modules/schema-tools" isSchema="false"/><xqdoc:namespace prefix="st-options" uri="http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options" isSchema="true"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports><xqdoc:import type="schema"><xqdoc:uri>http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>http://zorba.io/modules/schema</xqdoc:uri><xqdoc:comment><xqdoc:description> Import module for checking if options element is validated.
</xqdoc:description></xqdoc:comment></xqdoc:import></xqdoc:imports><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> The inst2xsd function takes a set of sample XML instance elements as input and
 generates a set of sample XMLSchema documents that define
 the content of the given input.
 <br/>
 Please consult the
 <a href="http://xmlbeans.apache.org/">official documentation for further
 information</a>.
 <br/>
 Example:<pre class="ace-static" ace-mode="xquery">
  import module namespace st = "http://www.zorba-xquery.com/modules/schema-tools";
  declare namespace sto =
      "http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options";
  let $instances := (&lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;/a&gt;, &lt;b/&gt;, &lt;c&gt;ccc&lt;/c&gt;)
  let $options  :=
     &lt;sto:inst2xsd-options xmlns:sto=
       "http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options"&gt;
       &lt;sto:design&gt;vbd&lt;/sto:design&gt;
       &lt;sto:simple-content-types&gt;smart&lt;/sto:simple-content-types&gt;
       &lt;sto:use-enumeration&gt;10&lt;/sto:use-enumeration&gt;
     &lt;/sto:inst2xsd-options&gt;
  return
      st:inst2xsd($instances, $options)
 </pre>
 <br/>
</xqdoc:description><xqdoc:param>$instances The input XML instance elements</xqdoc:param><xqdoc:param>$options Options:<br/> <ul> <li>design: Choose the generated schema design<br/> - rdd: Russian Doll Design - local elements and local types<br/> - ssd: Salami Slice Design - global elements and local types<br/> - vbd (default): Venetian Blind Design - local elements and global complex types</li> <li>simple-content-types: type of leaf nodes<br/> - smart (default): try to find the right simple XMLSchema type<br/> - always-string: use xsd:string for all simple types</li> <li>use-enumeration: - when there are multiple valid values in a list<br/> - 1: never use enumeration<br/> - 2 or more (default 10): use enumeration if less than this number of occurrences - number option</li> <li>verbose: - stdout verbose info<br/> - true: - output type holder information<br/> - false (default): no output</li></ul></xqdoc:param><xqdoc:return>The generated XMLSchema documents.</xqdoc:return><xqdoc:error>schema-tools:VM001 If Zorba was unable to start the JVM.</xqdoc:error><xqdoc:error>schema-tools:JAVA-EXCEPTION If Apache XMLBeans throws an exception.</xqdoc:error><xqdoc:custom tag="example">test/Queries/schema-tools/inst2xsd-opt1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/inst2xsd-opt2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/inst2xsd-opt3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/inst2xsd-simple.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/inst2xsd-tns-default.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/inst2xsd-tns.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/inst2xsd-multiTns.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/inst2xsd-err1-badOpt.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>schema-tools:inst2xsd</xqdoc:name><xqdoc:signature>declare function schema-tools:inst2xsd($instances as element(*)+, $options as element(st-options:inst2xsd-options)?) as document()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>instances</xqdoc:name><xqdoc:type occurrence="+">element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">element(st-options:inst2xsd-options)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">document()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.zorba-xquery.com/modules/schema-tools</xqdoc:uri><xqdoc:name>inst2xsd-internal</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/schema</xqdoc:uri><xqdoc:name>is-validated</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>schema-tools:inst2xsd-internal</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function schema-tools:inst2xsd-internal($instances as element(*)+, $options as element(st-options:inst2xsd-options,st-options:inst2xsdOptionsType)?) as document()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>instances</xqdoc:name><xqdoc:type occurrence="+">element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">element(st-options:inst2xsd-options,st-options:inst2xsdOptionsType)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">document()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> The xsd2inst function takes a set of XML Schema elements as input and the
 local name of the root element and
 generates a document that represents one sample XML instance of the given
 input schemas. The local name is searched in schema global element definitions
 in the order of schemas parameter.
 <br/>
 Please consult the
 <a href="http://xmlbeans.apache.org/">official documentation for further
   information</a>.
 <br/>
 Example: <pre class="ace-static" ace-static="xquery">
  import module namespace st = "http://www.zorba-xquery.com/modules/schema-tools";
  declare namespace sto =
      "http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options";
  let $xsds  :=
     ( &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           attributeFormDefault="unqualified"
           elementFormDefault="qualified"&gt;
         &lt;xs:element name="a" type="aType"/&gt;
         &lt;xs:complexType name="aType"&gt;
           &lt;xs:sequence&gt;
             &lt;xs:element type="xs:string" name="b"/&gt;
             &lt;xs:element type="xs:string" name="c"/&gt;
           &lt;/xs:sequence&gt;
         &lt;/xs:complexType&gt;
       &lt;/xs:schema&gt; )
  let $options :=
    &lt;sto:xsd2inst-options xmlns:sto=
      "http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options"&gt;
      &lt;sto:network-downloads&gt;false&lt;/sto:network-downloads&gt;
      &lt;sto:no-pvr&gt;false&lt;/sto:no-pvr&gt;
      &lt;sto:no-upa&gt;false&lt;/sto:no-upa&gt;
    &lt;/sto:xsd2inst-options&gt;
  return
      st:xsd2inst($xsds, "a", $options)
 </pre><br/>
</xqdoc:description><xqdoc:param>$schemas elements representing XMLSchema definitions</xqdoc:param><xqdoc:param>$rootElementName The local name of the instance root element. If multiple target namespaces are used, first one found - using the sequence order - will be used.</xqdoc:param><xqdoc:param>$options Options:<br/><ul> <li>network-downloads: boolean (default false)<br/> - true allows XMLBeans to use network when resolving schema imports and includes</li> <li>no-pvr: boolean (default false)<br/> - true to disable particle valid (restriction) rule, false otherwise</li> <li>no-upa: boolean (default false)<br/> - true to disable unique particle attribution rule, false otherwise</li></ul></xqdoc:param><xqdoc:return>The generated output document, representing a sample XML instance.</xqdoc:return><xqdoc:error>schema-tools:VM001 If Zorba was unable to start the JVM.</xqdoc:error><xqdoc:error>schema-tools:JAVA-EXCEPTION If Apache XMLBeans throws an exception.</xqdoc:error><xqdoc:custom tag="example">test/Queries/schema-tools/xsd2inst-opt1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/xsd2inst-simple.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/xsd2inst-tns.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/schema-tools/xsd2inst-err1-badOpt.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>schema-tools:xsd2inst</xqdoc:name><xqdoc:signature>declare function schema-tools:xsd2inst($schemas as element(*)+, $rootElementName as xs:string, $options as element(st-options:xsd2inst-options)?) as document()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>schemas</xqdoc:name><xqdoc:type occurrence="+">element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>rootElementName</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">element(st-options:xsd2inst-options)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>document()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.zorba-xquery.com/modules/schema-tools</xqdoc:uri><xqdoc:name>xsd2inst-internal</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/schema</xqdoc:uri><xqdoc:name>is-validated</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:name>schema-tools:xsd2inst-internal</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function schema-tools:xsd2inst-internal($schemas as element(*)+, $rootElementName as xs:string, $options as element(st-options:xsd2inst-options,st-options:xsd2instOptionsType)?) as document() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>schemas</xqdoc:name><xqdoc:type occurrence="+">element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>rootElementName</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">element(st-options:xsd2inst-options,st-options:xsd2instOptionsType)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>document()</xqdoc:type></xqdoc:return></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>