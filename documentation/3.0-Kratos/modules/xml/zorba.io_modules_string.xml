<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2013-12-04T01:28:38.942159+01:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://zorba.io/modules/string</xqdoc:uri><xqdoc:name>string</xqdoc:name><xqdoc:comment><xqdoc:description> <p>This module provides string related functions.</p>
 <p>Mostly, the functions in this module provide primitives
 to work with streamable strings. For example, it allows to
 check whether a given string is streamable or seekable.</p>
</xqdoc:description><xqdoc:author>Matthias Brantner</xqdoc:author><xqdoc:custom tag="project">Zorba/XML and JSON Data Model/Atomic/String</xqdoc:custom><xqdoc:custom tag="language">jsoniq</xqdoc:custom><xqdoc:custom tag="version">1.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="string" uri="http://zorba.io/modules/string" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports/><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Analyzes a string using a regular expression, returning sequence of JSON
 objects that identify which parts of the input string matched or failed to
 match the regular expression; and in the case of matched substrings, which
 substrings matched each capturing group in the regular expression.
 <p/>
 This function behaves like
 <a href="http://www.w3.org/TR/xpath-functions-30/#func-analyze-string"><code>fn:analyze-string</code></a>
 but returns a JSON array rather than an XML element.
</xqdoc:description><xqdoc:param>$input The string to analyze. If the empty sequence, the function behaves as if <code>$input</code> were a zero-length string.</xqdoc:param><xqdoc:param>$pattern The regular expression.</xqdoc:param><xqdoc:param>$flags The $flags argument is interpreted in the same way as for the <a href="http://www.w3.org/TR/xpath-functions-30/#func-matches"><code>fn:matches</code></a> function.</xqdoc:param><xqdoc:return>a JSON array of objects where each object contains a single key/value pair. Each key is either <code>match</code> or <code>non-match</code>. For <code>non-match</code>, the value is a string that is the part of <code>$input</code> that did not match; for <code>match</code>, the value is either a string that is the part of <code>$input</code> that matched (when <code>$pattern</code> contains no capturing groups) or an array containing values for both capturing groups and other matches. <p/> Capturing group matches are themselves arrays where the first element is the group number (1-based) and subsequent elements are either a string that is the part of <code>$input</code> that matched or sub-arrays for nested capturing groups.</xqdoc:return></xqdoc:comment><xqdoc:name>string:analyze-string</xqdoc:name><xqdoc:signature>declare function string:analyze-string($input as xs:string?, $pattern as xs:string, $flags as xs:string) as array() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>input</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>pattern</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>flags</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>array()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Analyzes a string using a regular expression, returning sequence of JSON
 objects that identify which parts of the input string matched or failed to
 match the regular expression; and in the case of matched substrings, which
 substrings matched each capturing group in the regular expression.
 <p/>
 This function behaves like
 <a href="http://www.w3.org/TR/xpath-functions-30/#func-analyze-string"><code>fn:analyze-string</code></a>
 but returns a JSON array rather than an XML element.
</xqdoc:description><xqdoc:param>$input The string to analyze. If the empty sequence, the function behaves as if <code>$input</code> were a zero-length string.</xqdoc:param><xqdoc:param>$pattern The regular expression.</xqdoc:param><xqdoc:return>a JSON array of objects where each object contains a single key/value pair. Each key is either <code>match</code> or <code>non-match</code>. For <code>non-match</code>, the value is a string that is the part of <code>$input</code> that did not match; for <code>match</code>, the value is either a string that is the part of <code>$input</code> that matched (when <code>$pattern</code> contains no capturing groups) or an array containing values for both capturing groups and other matches. <p/> Capturing group matches are themselves arrays where the first element is the group number (1-based) and subsequent elements are either a string that is the part of <code>$input</code> that matched or sub-arrays for nested capturing groups.</xqdoc:return></xqdoc:comment><xqdoc:name>string:analyze-string</xqdoc:name><xqdoc:signature>declare function string:analyze-string($input as xs:string?, $pattern as xs:string) as array()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>input</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>pattern</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>array()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://zorba.io/modules/string</xqdoc:uri><xqdoc:name>analyze-string</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>This function materializes a streamable string.</p>
 <p>The drawback of a streamable (non-seekable) string is that
 its value can only be consumed once. That is, only one function
 can access the value of astreamable string item.</p>
 <p>In order to remedy this situation, this function can be used to
 convert a streamable string into its non-streamable counterpart. As a
 result, the string returned by this function has the same value as its
 input but is materialized and, hence, can be consumed multiple times.</p>
</xqdoc:description><xqdoc:param>$s the streamable string item to materialize</xqdoc:param><xqdoc:return>a materialized string of its input or the input if the input item was not a streamable string.</xqdoc:return></xqdoc:comment><xqdoc:name>string:materialize</xqdoc:name><xqdoc:signature>declare function string:materialize($s as string) as string external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>This function checks whether a given string item is implemented by a
 streamable string.</p>
 <p>A streamable string is produced by some functions of a module.
 It's an optimized implementation of an string to handle arbitrary
 sized data. The drawback is that its value can only be consumed once.
 That is, only one function can access the value of a streamable string
 item.</p>
</xqdoc:description><xqdoc:param>$s the string to check</xqdoc:param><xqdoc:return>true if the given item is implemented using a streamable string or false otherwise.</xqdoc:return></xqdoc:comment><xqdoc:name>string:is-streamable</xqdoc:name><xqdoc:signature>declare function string:is-streamable($s as string) as boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>This function checks whether a given string item is a
 seekable stream string.</p>
 <p>For example, a seekable streamable string is returned by the
 file module.</p>
</xqdoc:description><xqdoc:param>$s the string to check</xqdoc:param><xqdoc:return>true if the given item is a seekable stream string or false otherwise.</xqdoc:return></xqdoc:comment><xqdoc:name>string:is-seekable</xqdoc:name><xqdoc:signature>declare function string:is-seekable($s as string) as boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns a sequence of strings constructed by splitting the input wherever
 the given separator is found.</p>
 <p>The function is different from tokenize. It doesn't allow
 the separator to be a regular expression. This restriction allows for more
 performant implementation. Specifically, the function processes
 streamable strings as input in a streamable way which is particularly useful
 to tokenize huge strings.</p>
</xqdoc:description><xqdoc:param>$s the input string to split</xqdoc:param><xqdoc:param>$separator the separator used for splitting the input string $s</xqdoc:param><xqdoc:return>a sequence of strings constructed by splitting the input</xqdoc:return></xqdoc:comment><xqdoc:name>string:split</xqdoc:name><xqdoc:signature>declare function string:split($s as string, $separator as string) as string* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>separator</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">string*</xqdoc:type></xqdoc:return></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>