<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2013-12-04T01:28:38.942159+01:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://expath.org/ns/geo</xqdoc:uri><xqdoc:name>geo</xqdoc:name><xqdoc:comment><xqdoc:description> <p>Function library providing geo processing using Simple Features api API GMLSF format.
 It uses the GEOS third party library, license LGPL. Version 3.2.2 or above is required.</p>
 <p/>
 <p>The data format supported is GML SF profile 0/1.
 This is a subset of GML, and covers the basic geometries of Point, Line and Surface and collections of those.
 GMLSF nodes have the namespace "http://www.opengis.net/gml".</p>
 <p/>
 <p>Possible GMLSF geometric structures are:</p>
 <p><dl>
  <dt><b>Point</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:Point [srsDimension='2|3']?&gt;
    &lt;gml:pos [srsDimension='2|3']?&gt;double_x double_y &lt;/gml:pos&gt;
  &lt;/gml:Point&gt;</pre>
  <dt><b>LineString</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:LineString [srsDimension='2|3']?&gt;
    &lt;gml:posList [srsDimension='2|3']?&gt; double_x1 double_y1 double_x2 double_y2 ... &lt;/gml:posList&gt;
  &lt;/gml:LineString&gt;</pre>
  <dt><b>Curve</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:Curve [srsDimension='2|3']?&gt;
    &lt;gml:segments&gt;
    [&lt;gml:LineStringSegment interpolation="linear" [srsDimension='2|3']?&gt;
       &lt;gml:posList [srsDimension='2|3']?&gt; double_x1 double_y1 double_x2 double_y2 ... &lt;/gml:posList&gt;;
     &lt;gml:LineStringSegment&gt;]*
    &lt;/gml:segments&gt;
  &lt;/gml:Curve&gt;</pre>
  <dt><b>LinearRing</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:LinearRing [srsDimension='2|3']?&gt;
    &lt;gml:posList [srsDimension='2|3']?&gt; double_x1 double_y1 double_x2 double_y2 ... &lt;/gml:posList&gt;
  &lt;/gml:LinearRing&gt;</pre>
  <dt><b>Surface</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:Surface [srsDimension='2|3']?&gt;
    &lt;gml:patches&gt;
    [&lt;gml:PolygonPatch [srsDimension='2|3']?&gt;
       &lt;gml:exterior&gt;
         &lt;gml:LinearRing&gt; ... &lt;/gml:LinearRing&gt;
       &lt;/gml:exterior&gt;
       &lt;gml:interior&gt;
         &lt;gml:LinearRing&gt; ... &lt;/gml:LinearRing&gt;
       &lt;/gml:interior&gt;]*
     &lt;/gml:PolygonPatch&gt;]*
    &lt;/gml:patches&gt;
  &lt;/gml:Surface&gt;</pre>
  <dt><b>Polygon</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:Polygon [srsDimension='2|3']?&gt;
    &lt;gml:exterior&gt;
      &lt;gml:LinearRing&gt; ... &lt;/gml:LinearRing&gt;
    &lt;/gml:exterior&gt;
    [&lt;gml:interior&gt;
       &lt;gml:LinearRing&gt; ... &lt;/gml:LinearRing&gt;
     &lt;/gml:interior&gt;]*
  &lt;/gml:Polygon&gt;</pre>
  <dt><b>MultiPoint</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:MultiPoint [srsDimension='2|3']?&gt;
    [&lt;gml:Point&gt; ... &lt;/gml:Point&gt;]*
  &lt;/gml:MultiPoint&gt;</pre>
  <dt><b>MultiCurve</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:MultiCurve [srsDimension='2|3']?&gt;
    [&lt;gml:LineString&gt; ... &lt;/gml:LineString&gt;]*
  &lt;/gml:MultiCurve&gt;</pre>
  <dt><b>MultiSurface</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:MultiSurface [srsDimension='2|3']?&gt;
    [&lt;gml:Polygon&gt; ... &lt;/gml:Polygon&gt;]*
  &lt;/gml:MultiSurface&gt;
  </pre>
  <dt><b>MultiGeometry (this is from GML 3 schema)</b></dt>
  <pre class="ace-static" ace-mode="xquery">&lt;gml:MultiGeometry [srsDimension='2|3']?&gt;
     [&lt;gml:geometryMember&gt;
          ...one geometry...
     &lt;/gml:geometryMember&gt;]*
    [&lt;gml:geometryMembers&gt;
      ...a list of geometries...
    &lt;/gml:geometryMembers&gt;]?
  &lt;/gml:MultiGeometry&gt;</pre>
 </dl></p>
 <p>Note: When using gml:posList, it is possible to replace this element with a list of gml:pos.</p>
 <p>Note: XLink referencing is not supported.</p>
 <p>Note: The <i>srsDimension</i> optional attribute specifies the coordinate dimension. The default value is 2 (for 2D).
    Another possible value is 3 (for 3D) in which case every point has to have three double values (x, y, z).
    This is an extension borrowed from GML 3 spec.</p>
 <p>The operations made on 3D objects work only on x-y coordinates, the z coordinate is not taken into account.
 When returning the result, the original z-coordinates of the points are preserved.
 For computed points, the z-coordinate is interpolated.</p>
 <p/>
 <p>The coordinates values have to be in cartesian coordinates, not in polar coordinates.
 Converting between coordinate systems and doing projections from polar to cartesian is outside the scope of this geo module.</p>
 <p/>
 <p>For operations between two geometries, the DE-9IM matrix is used. The DE-9IM matrix is defined like this:</p>
 <table>
	<tr>
		 <td/>
		 <td><b>Interior</b></td>
		 <td><b>Boundary</b></td>
		 <td><b>Exterior</b></td>
		</tr>
		<tr>
		 <td><b>Interior</b></td>
		 <td>dim(intersection of interior1 and interior2)</td>
		 <td>dim(intersection of interior1 and boundary2)</td>
		 <td>dim(intersection of interior1 and exterior2)</td>
		</tr>
		<tr>
		 <td><b>Boundary</b></td>
		 <td>dim(intersection of boundary1 and interior2)</td>
		 <td>dim(intersection of boundary1 and boundary2)</td>
		 <td>dim(intersection of boundary1 and exterior2)</td>
		</tr>
		<tr>
		 <td><b>Exterior</b></td>
		 <td>dim(intersection of exterior1 and interior2)</td>
		 <td>dim(intersection of exterior1 and boundary2)</td>
		 <td>dim(intersection of exterior1 and exterior2)</td>
		</tr>
	</table>
	<p/>
	<p>The values in the DE-9IM can be T, F, *, 0, 1, 2.</p>
  <p>- T means the intersection gives a non-empty result.</p>
  <p>- F means the intersection gives an empty result.</p>
  <p>- * means any result.</p>
  <p>- 0, 1, 2 gives the expected dimension of the result (point, curve, surface)</p>
  <p/>
</xqdoc:description><xqdoc:author>Daniel Turcanu</xqdoc:author><xqdoc:see>http://expath.org/spec/geo</xqdoc:see><xqdoc:see>http://www.opengeospatial.org/standards/sfa</xqdoc:see><xqdoc:see>http://www.opengeospatial.org/standards/gml</xqdoc:see><xqdoc:see>http://trac.osgeo.org/geos/</xqdoc:see><xqdoc:custom tag="library"><a href="http://trac.osgeo.org/geos/">GEOS (Geometry Engine - Open Source)</a></xqdoc:custom><xqdoc:custom tag="project">EXPath/EXPath Geo Module</xqdoc:custom><xqdoc:custom tag="language">xquery</xqdoc:custom><xqdoc:custom tag="version">1.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="geo" uri="http://expath.org/ns/geo" isSchema="false"/><xqdoc:namespace prefix="geo-err" uri="http://expath.org/ns/error" isSchema="false"/><xqdoc:namespace prefix="gml" uri="http://www.opengis.net/gml" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports/><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the dimension of the geo object.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>0 for point, 1 for line, 2 for surface.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/dimension1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/dimension2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/dimension3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/dimension4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/dimension5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/dimension6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/dimension7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/dimension8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/dimension9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/dimension10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:dimension</xqdoc:name><xqdoc:signature>declare function geo:dimension($geometry as element(*)) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the coordinate dimension of the geo object, as specified in the srsDimension attribute.</p>
 <p>Only two-dimensional and three-dimensional coordinates are supported.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>2 for 2D, 3 for 3D.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/coordinate_dimension1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/coordinate_dimension2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/coordinate_dimension3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/coordinate_dimension4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/coordinate_dimension5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/coordinate_dimension6.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:coordinate-dimension</xqdoc:name><xqdoc:signature>declare function geo:coordinate-dimension($geometry as element(*)) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the qname type of geo object.</p>
 <p>Returns empty sequence if the geometry is not recognized.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>"gml:Point" for Point, "gml:LineString" for LineString, "gml:Curve" for Curve, "gml:LineString" for LinearRing, "gml:Surface" for Surface, "gml:Polygon" for Polygon and PolygonPatch, "gml:MultiPoint" for MultiPoint, "gml:MultiCurve" for MultiCurve, "gml:MultiSurface" for MultiSurface, "gml:MultiGeometry" for MultiGeometry</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/geometry_type1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type10.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry_type11.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:geometry-type</xqdoc:name><xqdoc:signature>declare function geo:geometry-type($geometry as element(*)) as xs:QName? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">xs:QName?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the srid URI of geo object.</p>
 <p>SRID is contained in the srsName attribute in the geo element, or one of the parents,
 or in the boundedBy/Envelope element in one of the parents.</p>
 <p>This function searches recursively from this element up to the top-most parent.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>the SRID if it is found</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/srid1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/srid2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/srid3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/srid4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/srid5.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:srid</xqdoc:name><xqdoc:signature>declare function geo:srid($geometry as element(*)) as xs:anyURI? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">xs:anyURI?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the number of geometries in the collection, or 1 for non-collection.</p>
 <p>For gml:Point, gml:LineString, gml:LinearRing, gml:Polygon, return 1.</p>
 <p>For gml:Curve and gml:Surface, they are treated as geometric collections.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>number of geometries in collection</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/num-geometries1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/num-geometries2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/num-geometries3.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:num-geometries</xqdoc:name><xqdoc:signature>declare function geo:num-geometries($geometry as element(*)) as xs:unsignedInt external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Return the n-th geometry in the collection.</p>
 <p>Return this geometry if it is not a collection.</p>
 <p>For gml:Point, gml:LineString, gml:LinearRing, gml:Polygon, return this item if n is zero, otherwise error.</p>
 <p>For gml:Curve and gml:Surface, they are treated as geometric collections.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$n zero-based index in the collection</xqdoc:param><xqdoc:return>n-th geometry in collection. The node is the original node, not a copy.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/geometry-n1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry-n2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry-n3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/geometry-n4.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:geometry-n</xqdoc:name><xqdoc:signature>declare function geo:geometry-n($geometry as element(*), $n as xs:unsignedInt) as element(*) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>n</xqdoc:name><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(*)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>The envelope is the minimum bounding box of this geometry.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>An gml:Envelope element with content &lt;gml:Envelope&gt; &lt;gml:lowerCorner&gt;<i>minx miny</i>&lt;/gml:lowerCorner&gt; &lt;gml:upperCorner&gt;<i>maxx maxy</i>&lt;/gml:upperCorner&gt; &lt;/gml:Envelope&gt;</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/envelope1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope11.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/envelope12.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:envelope</xqdoc:name><xqdoc:signature>declare function geo:envelope($geometry as element(*)) as element(gml:Envelope) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(gml:Envelope)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the Well-known Text Representation of Geometry.</p>
 <p>This is defined in the Simple Features spec from OGC.</p>
 <p>gml:Curve is represented as MultiLineString.</p>
 <p>gml:Surface is represented as MultiPolygon.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>the Well-known Text Representation for the geo object.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/as_text1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/as_text2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/as_text3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/as_text4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/as_text5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/as_text6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/as_text7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/as_text8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/as_text9.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:as-text</xqdoc:name><xqdoc:signature>declare function geo:as-text($geometry as element(*)) as xs:string external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:string</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the Well-known Binary Representation of Geometry.</p>
 <p>This is defined in the Simple Features spec from OGC.</p>
 <p>gml:Curve is represented as MultiLineString.</p>
 <p>gml:Surface is represented as MultiPolygon.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>the Well-known Binary Representation for the geo object as base64.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/as_binary1.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:as-binary</xqdoc:name><xqdoc:signature>declare function geo:as-binary($geometry as element(*)) as xs:base64Binary external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Checks if the argument is empty or not and if it is a valid geometry or not.</p>
 <p>A geometry is considered empty if it has no points.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if $geometry is not a valid gmlsf object or if is empty.</xqdoc:return><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/is_empty1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_empty2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_empty3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_empty4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_empty5.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:is-empty</xqdoc:name><xqdoc:signature>declare function geo:is-empty($geometry as element(*)?) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type occurrence="?">element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Checks if this geometric object has no anomalous geometric points, such
	as self intersection or self tangency.</p>
 <p>Does not work for gml:Surface and gml:MultiGeometry.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:LinearRing, gml:Curve, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface</xqdoc:param><xqdoc:return>true if $geometry is simple.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/is_simple1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple10.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple11.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple12.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple13.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_simple14.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:is-simple</xqdoc:name><xqdoc:signature>declare function geo:is-simple($geometry as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Checks if this geometric object is 2D or 3D, as specified in srsDimension optional attribute.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if $geometry is 3D.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/is_3D1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is_3D2.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:is-3d</xqdoc:name><xqdoc:signature>declare function geo:is-3d($geometry as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Checks if this geometric object has measurements.</p>
 <p>Measurements is not supported in this geo module, so the function returns false.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>false.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/is_measured1.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:is-measured</xqdoc:name><xqdoc:signature>declare function geo:is-measured($geometry as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>A boundary is a set that represents the limit of an geometry.</p>
 <p>For a Point or MultiPoint, the boundary is the empty geometry, nothing is returned.</p>
 <p>For a LineString, the boundary is the MultiPoint set of start point and end point.</p>
 <p>For a LinearRing, the boundary is empty MultiPoint.</p>
 <p>For a Curve, it is treated as a MultiCurve.</p>
 <p>For a Polygon, the boundary is the MultiCurve set of exterior and interior rings.</p>
 <p>For a Surface, the boundary is the MultiCurve set formed from the exterior ring of all patches
  seen as a single surface and all the interior rings from all patches.</p>
 <p>For MultiCurve, the boundary is the MultiPoint set of all start and end points that appear
  in an odd number of linestrings.</p>
 <p>For MultiGeometry, a sequence of boundaries is returned, corresponding to each child geometry.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:LinearRing, gml:Curve, gml:Polygon, gml:Surface, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>the boundary of a Geometry as a set of Geometries of the next lower dimension.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/boundary1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary10.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary11.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary12.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary13.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/boundary14.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:boundary</xqdoc:name><xqdoc:signature>declare function geo:boundary($geometry as element(*)) as element(*)* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">element(*)*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Checks if the two geometries are equal.</p>
 <p/>
 <p>Note: Does not work for gml:Surface and gml:MultiSurface if they have multiple Polygons.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if the DE-9IM intersection matrix for the two Geometrys is T*F**FFF*.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/equals1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/equals2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/equals3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/equals4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/equals5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/equals6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/equals7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/equals8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/equals9.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:equals</xqdoc:name><xqdoc:signature>declare function geo:equals($geometry1 as element(*), $geometry2 as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Checks if geometry1 covers geometry2.</p>
 <p>It has to fulfill one of these conditions:</p>
  <p>- every point of geometry2 is a point of geometry1.</p>
  <p>- the DE-9IM Intersection Matrix for the two geometries is
     T*****FF* or *T****FF* or ***T**FF* or ****T*FF*.</p>
 Unlike contains it does not distinguish between points in the boundary and in the interior of geometries.
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if geometry1 covers geometry2.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/covers6.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:covers</xqdoc:name><xqdoc:signature>declare function geo:covers($geometry1 as element(*), $geometry2 as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Checks if geometry1 does not touch or intersects geometry2.</p>
 <p>It has to fulfill these conditions:</p>
  <p>- they have no point in common</p>
  <p>- the DE-9IM Intersection Matrix for the two geometries is
     FF*FF****.</p>
  <p>- geometry1 does not intersect geometry2.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if geometry1 and geometry2 are disjoint.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/disjoint1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/disjoint2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/disjoint3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/disjoint4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/disjoint5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/disjoint6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/disjoint7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/disjoint8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/disjoint9.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:disjoint</xqdoc:name><xqdoc:signature>declare function geo:disjoint($geometry1 as element(*), $geometry2 as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Checks if geometry1 intersects geometry2.</p>
 <p>This is true if disjoint returns false.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if geometry1 and geometry2 are not disjoint.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/intersects1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersects2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersects3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersects4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersects5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersects6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersects6_3d.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersects7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersects8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersects9.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:intersects</xqdoc:name><xqdoc:signature>declare function geo:intersects($geometry1 as element(*), $geometry2 as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Checks if geometry1 touches geometry2.</p>
 <p>Returns true if the DE-9IM intersection matrix for the two
 geometries is FT*******, F**T***** or F***T****.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if geometry1 touches geometry2.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/touches1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/touches2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/touches3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/touches4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/touches5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/touches6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/touches7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/touches8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/touches9.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:touches</xqdoc:name><xqdoc:signature>declare function geo:touches($geometry1 as element(*), $geometry2 as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Checks if geometry1 crosses geometry2.</p>
 <p>That is if the geometries have some but not all interior points in common.</p>
 <p>Returns true if the DE-9IM intersection matrix for the two
 geometries is:</p>
 <p>T*T****** (for P/L, P/A, and L/A situations).</p>
 <p>T*****T** (for L/P, A/P, and A/L situations).</p>
 <p>0******** (for L/L situations).</p>
 <p>This applies for situations:  P/L, P/A, L/L, L/A, L/P, A/P and A/L.</p>
 <p>For other situations it returns false.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if geometry1 crosses geometry2.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/crosses1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/crosses2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/crosses3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/crosses4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/crosses5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/crosses6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/crosses7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/crosses8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/crosses9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/crosses10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:crosses</xqdoc:name><xqdoc:signature>declare function geo:crosses($geometry1 as element(*), $geometry2 as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Checks if geometry1 is within geometry2.</p>
 <p>Returns true if the DE-9IM intersection matrix for the two
  geometries is T*F**F***.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if geometry1 is within geometry2.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/within1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/within2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/within3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/within4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/within5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/within6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/within7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/within8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/within9.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:within</xqdoc:name><xqdoc:signature>declare function geo:within($geometry1 as element(*), $geometry2 as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Checks if geometry1 contains geometry2.</p>
 <p>Returns true if within(geometry2, geometry1) is true.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if geometry1 contains geometry2.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/contains1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/contains2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/contains3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/contains4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/contains5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/contains6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/contains7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/contains8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/contains9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/contains10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:contains</xqdoc:name><xqdoc:signature>declare function geo:contains($geometry1 as element(*), $geometry2 as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Checks if geometry1 overlaps with geometry2.</p>
 <p>Returns true if DE-9IM intersection matrix for the two
 geometries is T*T***T** (for two points or two surfaces)
	 or * 1*T***T** (for two curves).</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>true if geometry1 overlaps geometry2.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/overlaps1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps10.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps11.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/overlaps12.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:overlaps</xqdoc:name><xqdoc:signature>declare function geo:overlaps($geometry1 as element(*), $geometry2 as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Checks if geometry1 relates with geometry2 relative to a DE-9IM matrix.</p>
 <p>The DE-9IM matrix is defined like this:</p>
 <table>
	<tr>
		 <td/>
		 <td><b>Interior</b></td>
		 <td><b>Boundary</b></td>
		 <td><b>Exterior</b></td>
		</tr>
		<tr>
		 <td><b>Interior</b></td>
		 <td>dim(intersection of interior1 and interior2)</td>
		 <td>dim(intersection of interior1 and boundary2)</td>
		 <td>dim(intersection of interior1 and exterior2)</td>
		</tr>
		<tr>
		 <td><b>Boundary</b></td>
		 <td>dim(intersection of boundary1 and interior2)</td>
		 <td>dim(intersection of boundary1 and boundary2)</td>
		 <td>dim(intersection of boundary1 and exterior2)</td>
		</tr>
		<tr>
		 <td><b>Exterior</b></td>
		 <td>dim(intersection of exterior1 and interior2)</td>
		 <td>dim(intersection of exterior1 and boundary2)</td>
		 <td>dim(intersection of exterior1 and exterior2)</td>
		</tr>
	</table>
	<p>The values in the DE-9IM can be T, F, *, 0, 1, 2 .</p>
  <p>- T means the intersection gives a non-empty result.</p>
  <p>- F means the intersection gives an empty result.</p>
  <p>- * means any result.</p>
  <p>- 0, 1, 2 gives the expected dimension of the result (point, curve, surface)</p>
 <p>For example, the matrix of "T*T***T**" checks for intersections of interior1 with interior2,
 interior1 with exterior2 and exterior1 with interior2.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:LinearRing, gml:Polygon</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:LinearRing, gml:Polygon</xqdoc:param><xqdoc:param>$intersection_matrix the DE-9IM matrix, with nine chars, three chars for each line in DE-9IM matrix.</xqdoc:param><xqdoc:return>true if geometry1 relates to geometry2 according to the intersection matrix.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/relate1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/relate2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/relate3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/relate4.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:relate</xqdoc:name><xqdoc:signature>declare function geo:relate($geometry1 as element(*), $geometry2 as element(*), $intersection_matrix as xs:string) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>intersection_matrix</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Compute the shortest distance between any two Points in geometry1 and geometry2.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>minimum distance as xs:double.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/distance1.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:distance</xqdoc:name><xqdoc:signature>declare function geo:distance($geometry1 as element(*), $geometry2 as element(*)) as xs:double external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:double</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns a polygon that represents all Points whose distance
   from this geometric object is less than or equal to distance.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$distance the distance from geometry, expressed in units of the current coordinate system</xqdoc:param><xqdoc:return>new geometry surrounding the input geometry.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/buffer1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/buffer2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/buffer3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/buffer4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/buffer5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/buffer6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/buffer7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/buffer8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/buffer9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/buffer10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:buffer</xqdoc:name><xqdoc:signature>declare function geo:buffer($geometry as element(*), $distance as xs:double) as element(*) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>distance</xqdoc:name><xqdoc:type>xs:double</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(*)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the smallest convex Polygon that contains all the points in the Geometry.</p>
 <p>Actually returns the object of smallest dimension possible (possible Point or LineString).</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>the convex polygon node.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/convex-hull1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull3_3d.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/convex-hull10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:convex-hull</xqdoc:name><xqdoc:signature>declare function geo:convex-hull($geometry as element(*)) as element(*) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(*)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns a geometric object that represents the Point set intersection of
    geometry1 and geometry2.</p>
 <p>For intersection of two polygons interiors, returns a polygon.</p>
 <p>If intersection is void, empty sequence is returned.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>point set geometry node.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/intersection1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection8_3d.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/intersection10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:intersection</xqdoc:name><xqdoc:signature>declare function geo:intersection($geometry1 as element(*), $geometry2 as element(*)) as element(*)? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">element(*)?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns a geometric object that represents the Point set union of
    geometry1 and geometry2.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>point set geometry node.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/union1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/union2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/union3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/union4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/union5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/union5_3d.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/union6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/union7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/union8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/union9.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:union</xqdoc:name><xqdoc:signature>declare function geo:union($geometry1 as element(*), $geometry2 as element(*)) as element(*) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(*)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns a geometric object that represents the Point set difference of
    geometry1 and geometry2. Points that are in geometry1 and are not in geometry2.</p>
 <p>If difference is empty geometry, empty sequence is returned.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>point set geometry node.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/difference1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/difference2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/difference3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/difference4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/difference5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/difference6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/difference7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/difference8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/difference9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/difference10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:difference</xqdoc:name><xqdoc:signature>declare function geo:difference($geometry1 as element(*), $geometry2 as element(*)) as element(*)? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">element(*)?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns a geometric object that represents the Point set symmetric difference of
    geometry1 and geometry2. Points that are in geometry1 and are not in geometry2
    and points that are in geometry2 and are not in geometry1.</p>
 <p>If difference is empty geometry, empty sequence is returned.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>point set geometry node.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/sym-difference1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/sym-difference2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/sym-difference3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/sym-difference4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/sym-difference5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/sym-difference6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/sym-difference7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/sym-difference8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/sym-difference9.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:sym-difference</xqdoc:name><xqdoc:signature>declare function geo:sym-difference($geometry1 as element(*), $geometry2 as element(*)) as element(*)? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">element(*)?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the area of this geometry.</p>
 <p>Returns zero for Point and Lines.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>geometry area as xs:double.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/area1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/area2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/area3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/area4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/area5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/area6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/area7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/area8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/area9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/area10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:area</xqdoc:name><xqdoc:signature>declare function geo:area($geometry as element(*)) as xs:double external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:double</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the length of the lines of this geometry.</p>
 <p>Returns zero for Points.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>geometry length as xs:double.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/length1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/length2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/length3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/length4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/length5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/length6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/length7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/length8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/length9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/length10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:length</xqdoc:name><xqdoc:signature>declare function geo:length($geometry as element(*)) as xs:double external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:double</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Checks if geometry2 is within a certain distance of geometry1.</p>
</xqdoc:description><xqdoc:param>$geometry1 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$geometry2 node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:param>$distance the distance from geometry1, expressed in units of the current coordinate system</xqdoc:param><xqdoc:return>true if distance from geometry1 to geometry2 is less than $distance.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:SRSNotIdenticalInBothGeometries</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/is-within-distance1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-within-distance2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-within-distance3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-within-distance4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-within-distance5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-within-distance6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-within-distance7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-within-distance8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-within-distance9.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:is-within-distance</xqdoc:name><xqdoc:signature>declare function geo:is-within-distance($geometry1 as element(*), $geometry2 as element(*), $distance as xs:double) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry1</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>geometry2</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>distance</xqdoc:name><xqdoc:type>xs:double</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns a Point that is the mathematical centroid of this geometry.</p>
 <p>The result is not guaranteed to be on the surface.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>centroid Point.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/centroid1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/centroid2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/centroid3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/centroid4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/centroid5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/centroid6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/centroid7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/centroid8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/centroid9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/centroid10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:centroid</xqdoc:name><xqdoc:signature>declare function geo:centroid($geometry as element(*)) as element(gml:Point) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(gml:Point)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns a Point that is interior of this geometry.</p>
 <p>If it cannot be inside the geometry, then it will be on the boundary.</p>
</xqdoc:description><xqdoc:param>$geometry node of one of GMLSF objects: gml:Point, gml:LineString, gml:Curve, gml:LinearRing, gml:Surface, gml:Polygon, gml:MultiPoint, gml:MultiCurve, gml:MultiSurface, gml:MultiGeometry</xqdoc:param><xqdoc:return>a Point inside the geometry.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/interior-point1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/interior-point2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/interior-point3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/interior-point4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/interior-point5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/interior-point6.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/interior-point7.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/interior-point8.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/interior-point9.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/interior-point10.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:point-on-surface</xqdoc:name><xqdoc:signature>declare function geo:point-on-surface($geometry as element(*)) as element(gml:Point) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geometry</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(gml:Point)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the X coordinate of a Point.</p>
</xqdoc:description><xqdoc:param>$point node of one of GMLSF objects: gml:Point</xqdoc:param><xqdoc:return>the X coordinate</xqdoc:return><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/point_xyz1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/point_xyz4.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:x</xqdoc:name><xqdoc:signature>declare function geo:x($point as element(gml:Point)) as xs:double external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>point</xqdoc:name><xqdoc:type>element(gml:Point)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:double</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the Y coordinate of a Point.</p>
</xqdoc:description><xqdoc:param>$point node of one of GMLSF objects: gml:Point</xqdoc:param><xqdoc:return>the Y coordinate</xqdoc:return><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/point_xyz2.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:y</xqdoc:name><xqdoc:signature>declare function geo:y($point as element(gml:Point)) as xs:double external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>point</xqdoc:name><xqdoc:type>element(gml:Point)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:double</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the Z coordinate of a Point, if is 3D.</p>
</xqdoc:description><xqdoc:param>$point node of one of GMLSF objects: gml:Point</xqdoc:param><xqdoc:return>the Z coordinate, or empty sequence if 2D</xqdoc:return><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/point_xyz3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/point_xyz5.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:z</xqdoc:name><xqdoc:signature>declare function geo:z($point as element(gml:Point)) as xs:double? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>point</xqdoc:name><xqdoc:type>element(gml:Point)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">xs:double?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Should return the Measure of a Point, but is not implemented,
 because it is not specified in GMLSF.</p>
</xqdoc:description><xqdoc:param>$point node of one of GMLSF objects: gml:Point</xqdoc:param><xqdoc:return>always empty sequence</xqdoc:return><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/point_xyz6.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:m</xqdoc:name><xqdoc:signature>declare function geo:m($point as element(gml:Point)) as xs:double? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>point</xqdoc:name><xqdoc:type>element(gml:Point)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">xs:double?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the start Point of a line.</p>
</xqdoc:description><xqdoc:param>$line node of one of GMLSF objects: gml:LineString, gml:LinearRing, gml:Curve</xqdoc:param><xqdoc:return>the starting gml:Point, constructed with the first coordinates in the line.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/start-point1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/start-point2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/start-point3.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:start-point</xqdoc:name><xqdoc:signature>declare function geo:start-point($line as element(*)) as element(gml:Point) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>line</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(gml:Point)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the end Point of a line.</p>
</xqdoc:description><xqdoc:param>$line node of one of GMLSF objects: gml:LineString, gml:LinearRing, gml:Curve</xqdoc:param><xqdoc:return>the end gml:Point, constructed with the last coordinates in the line.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/end-point1.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:end-point</xqdoc:name><xqdoc:signature>declare function geo:end-point($line as element(*)) as element(gml:Point) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>line</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(gml:Point)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Checks if the line is closed loop. That is, if the start Point is same with end Point.</p>
 <p>For gml:Curve, checks if the start point of the first segment is the same with the
   last point of the last segment. It also checks that all the segments are connected together,
   and returns false if they aren't.</p>
 <p>For gml:MultiCurve, checks recursively for each LineString.</p>
 <p>For gml:Surface, checks if the exterior boundary of each patch touches completely other patches,
   so the Surface encloses a solid.
   For this to happen there is a need for 3D objects, and full 3D processing is not supported in GEOS library,
   so the function always returns false in this case.</p>
</xqdoc:description><xqdoc:param>$geom node of one of GMLSF objects: gml:LineString, gml:LinearRing, gml:Curve, gml:MultiCurve, gml:Surface</xqdoc:param><xqdoc:return>true if the line or surface is closed.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/is-closed1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-closed2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-closed3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-closed4.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-closed5.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-closed6.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:is-closed</xqdoc:name><xqdoc:signature>declare function geo:is-closed($geom as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>geom</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Checks if the line is a ring. That is, if the line is closed and simple.</p>
</xqdoc:description><xqdoc:param>$line node of one of GMLSF objects: gml:LineString, gml:LinearRing, gml:Curve</xqdoc:param><xqdoc:return>true if the line is a closed ring.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/is-ring1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-ring2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-ring3.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/is-ring4.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:is-ring</xqdoc:name><xqdoc:signature>declare function geo:is-ring($line as element(*)) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>line</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the number of Points in a line.</p>
</xqdoc:description><xqdoc:param>$line node of one of GMLSF objects: gml:LineString, gml:LinearRing, gml:Curve, gml:MultiCurve</xqdoc:param><xqdoc:return>number of points in the line</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/num-points1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/num-points2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/num-points3.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:num-points</xqdoc:name><xqdoc:signature>declare function geo:num-points($line as element(*)) as xs:unsignedInt external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>line</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Return the n-th Point in a line.</p>
</xqdoc:description><xqdoc:param>$line node of one of GMLSF objects: gml:LineString, gml:LinearRing, gml:Curve, gml:MultiCurve</xqdoc:param><xqdoc:param>$n index in the list of coordinates, zero based.</xqdoc:param><xqdoc:return>n-th point in the line, zero-based. The node is gml:Point constructed with n-th coordinate from line.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/point-n1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/point-n2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/point-n3.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:point-n</xqdoc:name><xqdoc:signature>declare function geo:point-n($line as element(*), $n as xs:unsignedInt) as element(gml:Point) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>line</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>n</xqdoc:name><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(gml:Point)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the exterior ring of a Polygon.</p>
</xqdoc:description><xqdoc:param>$polygon node of one of GMLSF objects: gml:Polygon</xqdoc:param><xqdoc:return>the original gml:LinearRing node for exterior ring</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/exterior-ring1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/exterior-ring2.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:exterior-ring</xqdoc:name><xqdoc:signature>declare function geo:exterior-ring($polygon as element(gml:Polygon)) as element(gml:LinearRing) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>polygon</xqdoc:name><xqdoc:type>element(gml:Polygon)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(gml:LinearRing)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the number of interior rings of a Polygon.</p>
</xqdoc:description><xqdoc:param>$polygon node of one of GMLSF objects: gml:Polygon</xqdoc:param><xqdoc:return>the number of interior rings</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/num-interior-ring1.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:num-interior-ring</xqdoc:name><xqdoc:signature>declare function geo:num-interior-ring($polygon as element(gml:Polygon)) as xs:unsignedInt external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>polygon</xqdoc:name><xqdoc:type>element(gml:Polygon)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Return the n-th interior ring of a Polygon.</p>
</xqdoc:description><xqdoc:param>$polygon node of one of GMLSF objects: gml:Polygon</xqdoc:param><xqdoc:param>$n index in the list of interior rings, zero based.</xqdoc:param><xqdoc:return>n-th interior ring. The node is the original node, not a copy.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:IndexOutsideRange</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/interior-ring-n1.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:interior-ring-n</xqdoc:name><xqdoc:signature>declare function geo:interior-ring-n($polygon as element(gml:Polygon), $n as xs:unsignedInt) as element(gml:LinearRing) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>polygon</xqdoc:name><xqdoc:type>element(gml:Polygon)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>n</xqdoc:name><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(gml:LinearRing)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Return the number of surface patches inside a gml:Surface.</p>
 <p>This function has the same effect as num-geometries(), only it is restricted to gml:Surface.</p>
</xqdoc:description><xqdoc:param>$polyhedral-surface node of one of GMLSF objects: gml:Surface</xqdoc:param><xqdoc:return>the number of surface patches</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/num-patches1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/num-patches2.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:num-patches</xqdoc:name><xqdoc:signature>declare function geo:num-patches($polyhedral-surface as element(gml:Surface)) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>polyhedral-surface</xqdoc:name><xqdoc:type>element(gml:Surface)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Return the n-th Surface patch of a Surface.</p>
 <p>Only polygonal Surfaces are supported, so a gml:PolygonPatch is returned.</p>
 <p>The gml:PolygonPatch has the same content as gml:Polygon.</p>
 <p>This function has the same effect as geometry-n(), only it is restricted to gml:Surface.</p>
</xqdoc:description><xqdoc:param>$polyhedral-surface node of one of GMLSF objects: gml:Surface</xqdoc:param><xqdoc:param>$n index in the list of surface patches, zero based.</xqdoc:param><xqdoc:return>n-th polygon patch. The node is the original node, not a copy.</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:IndexOutsideRange</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/patch-n1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/patch-n2.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:patch-n</xqdoc:name><xqdoc:signature>declare function geo:patch-n($polyhedral-surface as element(gml:Surface), $n as xs:unsignedInt) as element(gml:PolygonPatch) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>polyhedral-surface</xqdoc:name><xqdoc:type>element(gml:Surface)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>n</xqdoc:name><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(gml:PolygonPatch)</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Return the list of PolygonPatches that share a boundary with the given $polygon.</p>
 <p>The gml:PolygonPatch has the same content as gml:Polygon.</p>
 <p>This function tests the exterior ring of each polygon patch if it overlaps
 with the exterior ring of the given polygon.</p>
</xqdoc:description><xqdoc:param>$polyhedral-surface node of one of GMLSF objects: gml:Surface</xqdoc:param><xqdoc:param>$polygon, of type gml:Polygon or gml:PolygonPatch</xqdoc:param><xqdoc:return>the list of neibourghing gml:PolygonPatch-es</xqdoc:return><xqdoc:error>geo-err:UnrecognizedGeoObject</xqdoc:error><xqdoc:error>geo-err:UnsupportedSRSDimensionValue</xqdoc:error><xqdoc:error>geo-err:GEOSError</xqdoc:error><xqdoc:custom tag="example">test/Queries/geo/bounding-polygons1.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/bounding-polygons2.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/geo/bounding-polygons3.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>geo:bounding-polygons</xqdoc:name><xqdoc:signature>declare function geo:bounding-polygons($polyhedral-surface as element(gml:Surface), $polygon as element(*)) as element(gml:PolygonPatch)* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>polyhedral-surface</xqdoc:name><xqdoc:type>element(gml:Surface)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>polygon</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">element(gml:PolygonPatch)*</xqdoc:type></xqdoc:return></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>