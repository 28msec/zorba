<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2013-12-04T01:28:38.942159+01:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://zorba.io/modules/sequence</xqdoc:uri><xqdoc:name>sequence</xqdoc:name><xqdoc:comment><xqdoc:description> This module provides an XQuery API to perform set operations on sequences.
</xqdoc:description><xqdoc:author>Paul J. Lucas</xqdoc:author><xqdoc:custom tag="project">Zorba/XML and JSON Data Model/Sequence/Sequence</xqdoc:custom><xqdoc:custom tag="language">xquery</xqdoc:custom><xqdoc:custom tag="version">3.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="seq" uri="http://zorba.io/modules/sequence" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports/><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Performs a set intersection of two sequences of atomic items based on their
 values.
</xqdoc:description><xqdoc:param>$seq1 The first sequence.</xqdoc:param><xqdoc:param>$seq2 The second sequence.</xqdoc:param><xqdoc:return>a sequence containing only items from <code>$seq1</code> that are also in <code>$seq2</code>.</xqdoc:return></xqdoc:comment><xqdoc:name>seq:value-intersect</xqdoc:name><xqdoc:signature>declare function seq:value-intersect($seq1 as xs:anyAtomicType*, $seq2 as xs:anyAtomicType*) as xs:anyAtomicType* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>seq1</xqdoc:name><xqdoc:type occurrence="*">xs:anyAtomicType</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>seq2</xqdoc:name><xqdoc:type occurrence="*">xs:anyAtomicType</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">xs:anyAtomicType*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Performs a set union of two sequences of atomic items based on their values.
</xqdoc:description><xqdoc:param>$seq1 The first sequence.</xqdoc:param><xqdoc:param>$seq2 The second sequence.</xqdoc:param><xqdoc:return>a sequence containing all items from <code>$seq1</code> and <code>seq2$</code> but without duplicates.</xqdoc:return></xqdoc:comment><xqdoc:name>seq:value-union</xqdoc:name><xqdoc:signature>declare function seq:value-union($seq1 as xs:anyAtomicType*, $seq2 as xs:anyAtomicType*) as xs:anyAtomicType* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>seq1</xqdoc:name><xqdoc:type occurrence="*">xs:anyAtomicType</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>seq2</xqdoc:name><xqdoc:type occurrence="*">xs:anyAtomicType</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">xs:anyAtomicType*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Filters the first sequence of atomic items such that they are not in the
 second sequence based on their values.
</xqdoc:description><xqdoc:param>$seq1 The first sequence.</xqdoc:param><xqdoc:param>$seq2 The second sequence.</xqdoc:param><xqdoc:return>a sequence only containing items from <code>$seq1</code> that are not in <code>$seq2</code>.</xqdoc:return></xqdoc:comment><xqdoc:name>seq:value-except</xqdoc:name><xqdoc:signature>declare function seq:value-except($seq1 as xs:anyAtomicType*, $seq2 as xs:anyAtomicType*) as xs:anyAtomicType* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>seq1</xqdoc:name><xqdoc:type occurrence="*">xs:anyAtomicType</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>seq2</xqdoc:name><xqdoc:type occurrence="*">xs:anyAtomicType</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">xs:anyAtomicType*</xqdoc:type></xqdoc:return></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>