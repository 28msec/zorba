<?xml version="1.0" encoding="UTF-8"?>
<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2013-12-02T23:35:58.405966+01:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://zorba.io/modules/oracle-nosqldb</xqdoc:uri><xqdoc:name></xqdoc:name><xqdoc:comment><xqdoc:description> This module provides minimal functionality to interact with an
 <a href="http://www.oracle.com/technetwork/products/nosqldb/overview/index.html">
 Oracle NoSQL Database</a>.
 Oracle NoSQL Database is built upon the proven Oracle Berkeley DB Java Edition
 high-availability storage engine, which is in widespread use in enterprises across
 industries. In addition to that it adds a layer of services for use in distributed environments.
 The resulting solution provides distributed, highly available key/value storage that is well
 suited to large-volume, latency-sensitive applications.<br/>
 The kvclient library is used to implement these functions. Set the NOSQLDB_HOME
 environment variable when compilling this module.
 <br/>
 <br/>
 <br/><b>Note:</b> Since this module has a Java library dependency a JVM required
 to be installed on the system. For Windows: jvm.dll is required on the system
 path ( usually located in "C:\Program Files\Java\jre6\bin\client".
</xqdoc:description><xqdoc:author>Cezar Andrei</xqdoc:author><xqdoc:custom tag="project">DB Drivers/ORACLE NoSQL</xqdoc:custom><xqdoc:custom tag="XQuery version">3.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="an" uri="http://zorba.io/annotations" isSchema="false"/><xqdoc:namespace prefix="base64" uri="http://zorba.io/modules/base64" isSchema="false"/><xqdoc:namespace prefix="jn" uri="http://jsoniq.org/functions" isSchema="false"/><xqdoc:namespace prefix="nosql" uri="http://zorba.io/modules/oracle-nosqldb" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>http://zorba.io/modules/base64</xqdoc:uri><xqdoc:comment><xqdoc:description> Import module for encoding/decoding base64Binary to/from string.
</xqdoc:description></xqdoc:comment></xqdoc:import></xqdoc:imports><xqdoc:variables><xqdoc:variable><xqdoc:uri>nosql:depth-CHILDREN_ONLY</xqdoc:uri><xqdoc:comment><xqdoc:description> The CHILDREN_ONLY depth.
</xqdoc:description><xqdoc:custom tag="type">xs:string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>nosql:depth-DESCENDANTS_ONLY</xqdoc:uri><xqdoc:comment><xqdoc:description> The DESCENDANTS_ONLY depth.
</xqdoc:description><xqdoc:custom tag="type">xs:string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>nosql:depth-PARENT_AND_CHILDREN</xqdoc:uri><xqdoc:comment><xqdoc:description> The PARENT_AND_CHILDREN depth.
</xqdoc:description><xqdoc:custom tag="type">xs:string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>nosql:depth-PARENT_AND_DESCENDANTS</xqdoc:uri><xqdoc:comment><xqdoc:description> The PARENT_AND_DESCENDANTS depth.
</xqdoc:description><xqdoc:custom tag="type">xs:string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>nosql:direction-REVERSE</xqdoc:uri><xqdoc:comment><xqdoc:description> The REVERSE direction.
</xqdoc:description><xqdoc:custom tag="type">xs:string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>nosql:direction-FORWARD</xqdoc:uri><xqdoc:comment><xqdoc:description> The FORWARD direction.
</xqdoc:description><xqdoc:custom tag="type">xs:string</xqdoc:custom></xqdoc:comment></xqdoc:variable></xqdoc:variables><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Connect to a NoSQL Database KVStore
</xqdoc:description><xqdoc:param>$options JSON object that contains "store-name" and "helper-host-ports". For example: <pre>{ "store-name" : "kvstore", "helper-host-ports" : ["localhost:5000"]}</pre></xqdoc:param><xqdoc:return>the function has side-effects and returns an identifier for a connection to the KVStore</xqdoc:return><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:connect</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:connect($options as object()) as xs:anyURI</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://jsoniq.org/functions</xqdoc:uri><xqdoc:name>members</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/oracle-nosqldb</xqdoc:uri><xqdoc:name>connect-internal</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>nosql:connect-internal</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %private %an:sequential function nosql:connect-internal($store-name as xs:string, $helper-host-ports as xs:string+) as xs:anyURI external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>store-name</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>helper-host-ports</xqdoc:name><xqdoc:type occurrence="+">xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Get the value as string and version associated with the key.<br/>
 Ex:  <pre>{ "value":"value as string", "version":"xs:long" }</pre>
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$key the key used to look up the key/value pair.</xqdoc:param><xqdoc:return>the value and version associated with the key, or empty sequence if no associated value was found.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:get</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:get($db as xs:anyURI, $key as xs:string) as xs:string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/oracle-nosqldb</xqdoc:uri><xqdoc:name>get-text</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Put a key/value pair, inserting or overwriting as appropriate.
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$key the key used to look up the key/value pair.</xqdoc:param><xqdoc:param>$value the value part of the key/value pair as string.</xqdoc:param><xqdoc:return>the version of the new value.</xqdoc:return><xqdoc:error>nosql:InvalidKeyParam If the $key parameter is not a JSON object.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:put</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:put($db as xs:anyURI, $key as xs:string, $value as xs:string) as xs:long</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>value</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:long</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://zorba.io/modules/oracle-nosqldb</xqdoc:uri><xqdoc:name>put-text</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Delete the key/value pair associated with the key.
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$key the key used to look up the key/value pair.</xqdoc:param><xqdoc:return>true if the delete is successful, or false if no existing value is present.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:delete</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:delete($db as xs:anyURI, $key as xs:string) as xs:boolean</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/oracle-nosqldb</xqdoc:uri><xqdoc:name>remove</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Put a key/value pair, inserting or overwriting as appropriate.
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$key the key used to look up the key/value pair. <pre>{ "major": ["major-key1","major-key2","major-key3"], "minor": ["minor-key1","minor-key2","minor-key3"] }</pre></xqdoc:param><xqdoc:param>$value the value part of the key/value pair as base64Binary.</xqdoc:param><xqdoc:return>the version of the new value.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:InvalidKeyParam If the $key parameter is not a JSON object.</xqdoc:error><xqdoc:error>nosql:NoMajorKeyComponent If $key doesn't contain a major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMajorKeyComponent If $key contains an invalid major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMinorKeyComponent If $key contains an invalid minor key component.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:put-binary</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:put-binary($db as xs:anyURI, $key as object(), $value as xs:base64Binary) as xs:long external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>value</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:long</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Put a key/value pair, inserting or overwriting as appropriate.
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$key the key used to look up the key/value pair. <pre>{ "major": ["major-key1","major-key2","major-key3"], "minor": ["minor-key1","minor-key2","minor-key3"] }</pre></xqdoc:param><xqdoc:param>$value the value part of the key/value pair as a string.</xqdoc:param><xqdoc:return>the version of the new value.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:InvalidKeyParam If the $key parameter is not a JSON object.</xqdoc:error><xqdoc:error>nosql:NoMajorKeyComponent If $key doesn't contain a major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMajorKeyComponent If $key contains an invalid major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMinorKeyComponent If $key contains an invalid minor key component.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:put-text</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:put-text($db as xs:anyURI, $key as object(), $string-value as xs:string) as xs:long</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>string-value</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:long</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/base64</xqdoc:uri><xqdoc:name>encode</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://zorba.io/modules/oracle-nosqldb</xqdoc:uri><xqdoc:name>put-binary</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Get the value as base64Binary and version associated with the key.<br/>
 Ex:  <pre>{ "value":"value as base64Binary", "version":"xs:long" }</pre>
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$key the key used to look up the key/value pair.</xqdoc:param><xqdoc:return>the value and version associated with the key, or empty sequence if no associated value was found.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:InvalidKeyParam If the $key parameter is not a JSON object.</xqdoc:error><xqdoc:error>nosql:NoMajorKeyComponent If $key doesn't contain a major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMajorKeyComponent If $key contains an invalid major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMinorKeyComponent If $key contains an invalid minor key component.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:get-binary</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:get-binary($db as xs:anyURI, $key as object()) as object()? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">object()?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Get the value as string and version associated with the key.<br/>
 Ex:  <pre>{ "value":"value as string", "version":"xs:long" }</pre>
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$key the key used to look up the key/value pair.</xqdoc:param><xqdoc:return>the value and version associated with the key, or empty sequence if no associated value was found.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:InvalidKeyParam If the $key parameter is not a JSON object.</xqdoc:error><xqdoc:error>nosql:NoMajorKeyComponent If $key doesn't contain a major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMajorKeyComponent If $key contains an invalid major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMinorKeyComponent If $key contains an invalid minor key component.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:get-text</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:get-text($db as xs:anyURI, $key as object()) as object()?</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">object()?</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/base64</xqdoc:uri><xqdoc:name>decode</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/oracle-nosqldb</xqdoc:uri><xqdoc:name>get-binary</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Removes the key/value pair associated with the key.
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$key the key used to look up the key/value pair.</xqdoc:param><xqdoc:return>true if the remove is successful, or false if no existing value is present.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:InvalidKeyParam If the $key parameter is not a JSON object.</xqdoc:error><xqdoc:error>nosql:NoMajorKeyComponent If $key doesn't contain a major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMajorKeyComponent If $key contains an invalid major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMinorKeyComponent If $key contains an invalid minor key component.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:remove</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:remove($db as xs:anyURI, $key as object()) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="5"><xqdoc:comment><xqdoc:description> Returns the descendant key/value pairs associated with the $parent-key.
 The $sub-range and $depth arguments can be used to further limit the
 key/value pairs that are retrieved. The key/value pairs are fetched within
 the scope of a single transaction that effectively provides serializable isolation.<br/>
 This API should be used with caution since it could result in an
 OutOfMemoryError, or excessive GC activity, if the results cannot all be held
 in memory at one time.<br/>
 This method only allows fetching key/value pairs that are descendants of a
 $parent-key that has a complete major path.<br/>
 Ex:  <pre>{ "value":"value as base64Binary", "version":"xs:long" }</pre>
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$parent-key the parent key whose "child" KV pairs are to be fetched. It must not be null. The major key path must be complete. The minor key path may be omitted or may be a partial path.</xqdoc:param><xqdoc:param>$sub-range further restricts the range under the $parent-key to the minor path components in this sub-range. It may be null.</xqdoc:param><xqdoc:param>$depth specifies whether the parent and only children or all descendants are returned. Values are: CHILDREN_ONLY, DESCENDANTS_ONLY, PARENT_AND_CHILDREN, PARENT_AND_DESCENDANTS. If anything else PARENT_AND_DESCENDANTS is implied.</xqdoc:param><xqdoc:param>$direction FORWARD or REVERSE. Specify the order of results, REVERSE for reverse or anything else for forward.</xqdoc:param><xqdoc:return>a list of objects containing key, value as base64Binary and version or empty sequence if no key was found.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:InvalidKeyParam If the $key parameter is not a JSON object.</xqdoc:error><xqdoc:error>nosql:NoMajorKeyComponent If $key doesn't contain a major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMajorKeyComponent If $key contains an invalid major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMinorKeyComponent If $key contains an invalid minor key component.</xqdoc:error><xqdoc:error>nosql:NoKeyRange If $sub-range is not a JSON object.</xqdoc:error><xqdoc:error>nosql:InvalidKeyRange If $sub-range is invalid.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:multi-get-binary</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:multi-get-binary($db as xs:anyURI, $parent-key as object(), $sub-range as object(), $depth as xs:string, $direction as xs:string) as object()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>parent-key</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>sub-range</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>depth</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>direction</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="5"><xqdoc:comment><xqdoc:description> Returns the descendant key/value pairs associated with the $parent-key.
 The $sub-range and $depth arguments can be used to further limit the
 key/value pairs that are retrieved. The key/value pairs are fetched within
 the scope of a single transaction that effectively provides serializable isolation.<br/>
 This API should be used with caution since it could result in an
 OutOfMemoryError, or excessive GC activity, if the results cannot all be held
 in memory at one time.<br/>
 This method only allows fetching key/value pairs that are descendants of a
 $parent-key that has a complete major path.<br/>
 Ex:  <pre>{ "value":"value as base64Binary", "version":"xs:long" }</pre>
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$parent-key the parent key whose "child" KV pairs are to be fetched. It must not be null. The major key path must be complete. The minor key path may be omitted or may be a partial path.</xqdoc:param><xqdoc:param>$sub-range further restricts the range under the $parent-key to the minor path components in this sub-range. It may be null.</xqdoc:param><xqdoc:param>$depth specifies whether the parent and only children or all descendants are returned. Values are: CHILDREN_ONLY, DESCENDANTS_ONLY, PARENT_AND_CHILDREN, PARENT_AND_DESCENDANTS. If anything else PARENT_AND_DESCENDANTS is implied.</xqdoc:param><xqdoc:param>$direction FORWARD or REVERSE. Specify the order of results, REVERSE for reverse or anything else for forward.</xqdoc:param><xqdoc:return>a list of objects containing key, value as string and version or empty sequence if no key was found.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:InvalidKeyParam If the $key parameter is not a JSON object.</xqdoc:error><xqdoc:error>nosql:NoMajorKeyComponent If $key doesn't contain a major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMajorKeyComponent If $key contains an invalid major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMinorKeyComponent If $key contains an invalid minor key component.</xqdoc:error><xqdoc:error>nosql:NoKeyRange If $sub-range is not a JSON object.</xqdoc:error><xqdoc:error>nosql:InvalidKeyRange If $sub-range is invalid.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:multi-get-text</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:multi-get-text($db as xs:anyURI, $parent-key as object(), $sub-range as object(), $depth as xs:string, $direction as xs:string) as object()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>parent-key</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>sub-range</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>depth</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>direction</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/base64</xqdoc:uri><xqdoc:name>decode</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="5"><xqdoc:uri>http://zorba.io/modules/oracle-nosqldb</xqdoc:uri><xqdoc:name>multi-get-binary</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> Removes the descendant Key/Value pairs associated with the $parent-key. The
 $sub-range and $depth arguments can be used to further limit the key/value
 pairs that are deleted.
</xqdoc:description><xqdoc:param>$db the KVStore reference</xqdoc:param><xqdoc:param>$parent-key the parent key whose "child" KV pairs are to be fetched. It must not be null. The major key path must be complete. The minor key path may be omitted or may be a partial path.</xqdoc:param><xqdoc:param>$sub-range further restricts the range under the $parent-key to the minor path components in this sub-range. It may be null. There are two ways to specify a sub-range: - by prefix: <code>{ "prefix" : "a" }</code> or by start-end: <code>{"start": "a", "start-inclusive": true, "end" : "z", "end-inclusive": true}</code>. For this case start-inclusive and end-inclusive are optional and they default to true.</xqdoc:param><xqdoc:param>$depth specifies whether the parent and only children or all descendants are returned. Values are: CHILDREN_ONLY, DESCENDANTS_ONLY, PARENT_AND_CHILDREN, PARENT_AND_DESCENDANTS. If null, PARENT_AND_DESCENDANTS is implied.</xqdoc:param><xqdoc:return>the count of deleted keys.</xqdoc:return><xqdoc:error>nosql:NoInstanceMatch If the $db parameter does not correspond to a valid connection.</xqdoc:error><xqdoc:error>nosql:InvalidKeyParam If the $key parameter is not a JSON object.</xqdoc:error><xqdoc:error>nosql:NoMajorKeyComponent If $key doesn't contain a major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMajorKeyComponent If $key contains an invalid major key component.</xqdoc:error><xqdoc:error>nosql:InvalidMinorKeyComponent If $key contains an invalid minor key component.</xqdoc:error><xqdoc:error>nosql:NoKeyRange If $sub-range is not a JSON object.</xqdoc:error><xqdoc:error>nosql:InvalidKeyRange If $sub-range is invalid.</xqdoc:error><xqdoc:error>nosql:VM001 If the JVM cannot be initialized correctly.</xqdoc:error><xqdoc:error>nosql:JAVA-EXCEPTION If a java exception is thrown.</xqdoc:error></xqdoc:comment><xqdoc:name>nosql:multi-remove</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function nosql:multi-remove($db as xs:anyURI, $parent-key as object(), $sub-range as object(), $depth as xs:string) as xs:int external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>parent-key</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>sub-range</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>depth</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:int</xqdoc:type></xqdoc:return></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>