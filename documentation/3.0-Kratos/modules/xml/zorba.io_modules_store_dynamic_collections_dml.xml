<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2013-12-04T01:28:38.942159+01:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://zorba.io/modules/store/dynamic/collections/dml</xqdoc:uri><xqdoc:name>dml</xqdoc:name><xqdoc:comment><xqdoc:description> This modules provides a set of functions to modify a collection
 and retrieve the items contained in a particular collection.
 <p/>
 Please refer to our documentation for
 <a href="http://zorba.io/documentation/latest/zorba/architecture/data_lifecycle">more information</a>
 about the lifecycle management and the manipulation of such collections.
</xqdoc:description><xqdoc:author>Matthias Brantner, David Graf, Till Westmann, Markos Zaharioudakis</xqdoc:author><xqdoc:see><a href="http://zorba.io/documentation/latest/zorba/architecture/data_lifecycle">Data Lifecycle</a></xqdoc:see><xqdoc:see>http://zorba.io/modules/zorba.io/modules/store/dynamic/collections/ddl</xqdoc:see><xqdoc:see>http://zorba.io/modules/zorba.io/errors</xqdoc:see><xqdoc:custom tag="project">Zorba/Data Store/Collections/Dynamic Data Manipulation</xqdoc:custom><xqdoc:custom tag="language">xquery</xqdoc:custom><xqdoc:custom tag="version">3.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="an" uri="http://zorba.io/annotations" isSchema="false"/><xqdoc:namespace prefix="dml" uri="http://zorba.io/modules/store/dynamic/collections/dml" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/><xqdoc:namespace prefix="zerr" uri="http://zorba.io/errors" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports/><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Inserts copies of the given items (nodes or JSON items)
 into a collection at the position directly preceding the given target item.
</xqdoc:description><xqdoc:param>$name The name of the collection to insert into.</xqdoc:param><xqdoc:param>$target The item in the collection before which <code>$content</code> will be inserted.</xqdoc:param><xqdoc:param>$content The sequence of items whose copies to insert.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, inserts the items into the collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:error>zerr:ZDDY0011 if <code>$target</code> is not in the collection.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:insert-before</xqdoc:name><xqdoc:signature>declare updating function dml:insert-before($name as xs:QName, $target as item(), $content as item()*) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>target</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Inserts copies of the given items (nodes or JSON items)
 at the beginning of the collection.
</xqdoc:description><xqdoc:param>$name The name of the collection to insert into.</xqdoc:param><xqdoc:param>$content The sequence of items whose copies to insert.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, inserts the items into the collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:insert-first</xqdoc:name><xqdoc:signature>declare updating function dml:insert-first($name as xs:QName, $content as item()*) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Inserts copies of the given items (nodes or JSON items)
 at the end of the collection.
</xqdoc:description><xqdoc:param>$name The name of the collection to insert into.</xqdoc:param><xqdoc:param>$content The sequence of items whose copies to insert.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, inserts the items into the collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:insert-last</xqdoc:name><xqdoc:signature>declare updating function dml:insert-last($name as xs:QName, $content as item()*) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Inserts copies of the given items (nodes or JSON items)
 into a collection at the position directly following the given target item.
</xqdoc:description><xqdoc:param>$name The name of the collection to insert into.</xqdoc:param><xqdoc:param>$target The item in the collection after which <code>$content</code> will be inserted.</xqdoc:param><xqdoc:param>$content The sequence of items whose copies to insert.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, inserts the items into the collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:error>zerr:ZDDY0011 if <code>$target</code> is not in the collection.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:insert-after</xqdoc:name><xqdoc:signature>declare updating function dml:insert-after($name as xs:QName, $pos as item(), $content as item()*) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>pos</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> This function does the same thing as <code>insert-first()</code> except it
 immediately applies the resulting pending updates and returns the items that
 have been inserted.
</xqdoc:description><xqdoc:param>$name The name of the collection to insert into.</xqdoc:param><xqdoc:param>$content The sequence of items whose copies to insert.</xqdoc:param><xqdoc:return>The sequence of items that have been inserted.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:see>dml:insert-first</xqdoc:see></xqdoc:comment><xqdoc:name>dml:apply-insert-first</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function dml:apply-insert-first($name as xs:QName, $content as item()*) as item()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> This function does the same thing as <code>insert-last()</code> except it
 immediately applies the resulting pending updates and returns the items that
 have been inserted.
</xqdoc:description><xqdoc:param>$name The name of the collection to insert into.</xqdoc:param><xqdoc:param>$content The sequence of items whose copies to insert.</xqdoc:param><xqdoc:return>The sequence of items that have been inserted.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:see>dml:insert-last</xqdoc:see></xqdoc:comment><xqdoc:name>dml:apply-insert-last</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function dml:apply-insert-last($name as xs:QName, $content as item()*) as item()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> This function does the same thing as <code>insert-before()</code> except it
 immediately applies the resulting pending updates and returns the items that
 have been inserted.
</xqdoc:description><xqdoc:param>$name The name of the collection to insert into.</xqdoc:param><xqdoc:param>$target The item in the collection before which <code>$content</code> will be inserted.</xqdoc:param><xqdoc:param>$content The sequence of items whose copies to insert.</xqdoc:param><xqdoc:return>The sequence of items that have been inserted.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:see>dml:insert-before</xqdoc:see></xqdoc:comment><xqdoc:name>dml:apply-insert-before</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function dml:apply-insert-before($name as xs:QName, $target as item(), $content as item()*) as item()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>target</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> This function does the same thing as <code>insert-after()</code> except it
 immediately applies the resulting pending updates and returns the items that
 have been inserted.
</xqdoc:description><xqdoc:param>$name The name of the collection to insert into.</xqdoc:param><xqdoc:param>$target The item in the collection after which <code>$content</code> will be inserted.</xqdoc:param><xqdoc:param>$content The sequence of items whose copies to insert.</xqdoc:param><xqdoc:return>The sequence of items that have been inserted.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:error>zerr:ZDDY0011 if <code>$target</code> is not in the collection.</xqdoc:error><xqdoc:see>dml:insert-after</xqdoc:see></xqdoc:comment><xqdoc:name>dml:apply-insert-after</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function dml:apply-insert-after($name as xs:QName, $target as item(), $content as item()*) as item()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>target</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Gets the sequence of nodes or JSON items from a collection.
</xqdoc:description><xqdoc:param>$name The name of the collection.</xqdoc:param><xqdoc:return>The sequence contained in the given collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:collection</xqdoc:name><xqdoc:signature>declare function dml:collection($name as xs:QName) as item()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Gets the sequence of items (nodes or JSON items) from a collection.
</xqdoc:description><xqdoc:param>$name The name of the collection.</xqdoc:param><xqdoc:param>$skip The number of collection items to skip.</xqdoc:param><xqdoc:return>The sub-sequence contained in the given collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:collection</xqdoc:name><xqdoc:signature>declare function dml:collection($name as xs:QName, $skip as xs:integer) as item()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>skip</xqdoc:name><xqdoc:type>xs:integer</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Gets the sequence of items (nodes or JSON items) from a collection.
 The parameters <code>$start</code> and <code>$skip</code> can be used to
 skip over items at the beginning of the collection.
 If both are given, both are applied: first, <code>$start</code> to skip to
 that item and then <code>$skip</code> to skip that additional number of
 items.
</xqdoc:description><xqdoc:param>$name The name of the collection.</xqdoc:param><xqdoc:param>$start A reference to the first item to return.</xqdoc:param><xqdoc:param>$skip The additional number of items to skip.</xqdoc:param><xqdoc:return>The sub-sequence from the given collection.</xqdoc:return><xqdoc:error>zerr:ZAPI0028 If the given URI is not a valid node position computed by the <code>np:node-position</code> function.</xqdoc:error><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:error>zerr:ZSTR0066 If <code>$start</code> does not reference a node from the collection <code>$name</code>.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:collection</xqdoc:name><xqdoc:signature>declare function dml:collection($name as xs:QName, $start as xs:anyURI, $skip as xs:integer) as item()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>start</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>skip</xqdoc:name><xqdoc:type>xs:integer</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Gets the name of the collection the given item (node or JSON item) belongs
 to.
</xqdoc:description><xqdoc:param>$item The item for which to get the name of the collection.</xqdoc:param><xqdoc:return>The name of the collection to which <code>$item</code> belongs.</xqdoc:return><xqdoc:error>zerr:ZDDY0011 if <code>$item</code> does not belong to a collection.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:collection-name</xqdoc:name><xqdoc:signature>declare function dml:collection-name($item as item()) as xs:QName external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>item</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:QName</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Deletes items (nodes or JSON items) from a collection.
</xqdoc:description><xqdoc:param>$items The items in the collection to delete.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, deletes the items from their collections.</xqdoc:return><xqdoc:error>zerr:ZDDY0011 if any item in <code>$items</code> is not a member of a collection or not all items belong to the same collection.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:delete</xqdoc:name><xqdoc:signature>declare updating function dml:delete($items as item()*) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>items</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Deletes the first item from a collection.
</xqdoc:description><xqdoc:param>$name The name of the collection to delete from.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, deletes the first item from the collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0011 if the collection is empty.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:delete-first</xqdoc:name><xqdoc:signature>declare updating function dml:delete-first($name as xs:QName) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Deletes the first <i>N</i> items from a collection.
</xqdoc:description><xqdoc:param>$name The name of the collection to delete from.</xqdoc:param><xqdoc:param>$number The number of items to delete.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, deletes the items from the collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:error>zerr:ZDDY0011 if the collection contains less than <code>$number</code> items.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:delete-first</xqdoc:name><xqdoc:signature>declare updating function dml:delete-first($name as xs:QName, $number as xs:integer) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>number</xqdoc:name><xqdoc:type>xs:integer</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Deletes the last item from a collection.
</xqdoc:description><xqdoc:param>$name The name of the collection to delete from.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, deletes the last item from the collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:error>zerr:ZDDY0011 if the collection is empty.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:delete-last</xqdoc:name><xqdoc:signature>declare updating function dml:delete-last($name as xs:QName) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Deletes the last <i>N</i> items from a collection.
</xqdoc:description><xqdoc:param>$name The name of the collection to delete from.</xqdoc:param><xqdoc:param>$number The number of items to delete.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, deletes the last N items.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error><xqdoc:error>zerr:ZDDY0011 if the collection contains less than <code>$number</code> items.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:delete-last</xqdoc:name><xqdoc:signature>declare updating function dml:delete-last($name as xs:QName, $number as xs:integer) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>number</xqdoc:name><xqdoc:type>xs:integer</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Edits the first supplied item so as to make it look exactly like a copy of
 the second supplied item while retaining its original identity.
</xqdoc:description><xqdoc:param>$target The target item to be edited.</xqdoc:param><xqdoc:param>$content The item that serves as an edit goal.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, performs the edit.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection to which <code>$target</code> belongs is not available.</xqdoc:error><xqdoc:error>zerr:ZDDY0006 if the collection to which <code>$target</code> belongs is append-only, const, or queue.</xqdoc:error><xqdoc:error>zerr:ZDDY0017 if <code>$target</code> is not a member of a collection.</xqdoc:error><xqdoc:error>zerr:ZDDY0037 if the collection is append-only.</xqdoc:error><xqdoc:error>zerr:ZDDY0038 if the collection is a queue.</xqdoc:error><xqdoc:error>zerr:ZDDY0039 if <code>$target</code> is not a root.</xqdoc:error><xqdoc:error>zerr:ZDDY0040 if <code>$target</code> cannot be updated to match the content (for example, because the target is a node and the content is an object).</xqdoc:error></xqdoc:comment><xqdoc:name>dml:edit</xqdoc:name><xqdoc:signature>declare updating function dml:edit($target as item(), $content as item()) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>target</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Gets the position of the given item (node or JSON item) within its
 collection.
</xqdoc:description><xqdoc:param>$item The item to get the index of.</xqdoc:param><xqdoc:return>The position of <code>$item</code> in its collection.</xqdoc:return><xqdoc:error>zerr:ZDDY0011 if <code>$item</code> does not belong to a collection.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:index-of</xqdoc:name><xqdoc:signature>declare function dml:index-of($item as item()) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>item</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> Deletes the entire contents of a collection.
</xqdoc:description><xqdoc:param>$name The name of the collection whose contents to delete.</xqdoc:param><xqdoc:return>An empty XDM instance and a pending update list that, once applied, deletes the contents.</xqdoc:return><xqdoc:error>zerr:ZDDY0003 if the collection is not available.</xqdoc:error></xqdoc:comment><xqdoc:name>dml:truncate</xqdoc:name><xqdoc:signature>declare updating function dml:truncate($name as xs:QName) external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:QName</xqdoc:type></xqdoc:parameter></xqdoc:parameters></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>