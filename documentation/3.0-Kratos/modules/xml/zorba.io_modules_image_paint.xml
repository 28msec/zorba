<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2013-12-04T01:28:38.942159+01:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://zorba.io/modules/image/paint</xqdoc:uri><xqdoc:name>paint</xqdoc:name><xqdoc:comment><xqdoc:description> <p>This module provides a function to extend an image with additional shapes.</p>
 <p/>
 <p>Fully supported image formats are:</p>
 <ul>
   <li>GIF</li>
   <li>JPEG</li>
   <li>PNG</li>
   <li>TIFF</li>
   <li>BMP</li>
 </ul>
 <p>The errors raised by functions of this module have the namespace
 <tt>http://zorba.io/modules/image/error</tt> (associated with prefix ierr).</p>
</xqdoc:description><xqdoc:author>Daniel Thomas</xqdoc:author><xqdoc:custom tag="library"><a href="http://www.imagemagick.org/Magick++/">Magick++ C++ Library</a></xqdoc:custom><xqdoc:custom tag="project">Zorba/Image/Paint</xqdoc:custom><xqdoc:custom tag="language">xquery</xqdoc:custom><xqdoc:custom tag="version">3.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="err" uri="http://www.w3.org/2005/xqt-errors" isSchema="false"/><xqdoc:namespace prefix="ierr" uri="http://zorba.io/modules/image/error" isSchema="false"/><xqdoc:namespace prefix="img" uri="http://zorba.io/modules/image/image" isSchema="true"/><xqdoc:namespace prefix="paint" uri="http://zorba.io/modules/image/paint" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports><xqdoc:import type="schema"><xqdoc:uri>http://zorba.io/modules/image/image</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Extends the passed image with a sequence of shapes.</p>
 <p>The shapes are passed as a sequence of elements.</p>
 <p>The possibilities for shape elements are:</p>
    <ul>
      <li> line:
        <pre class="brush: json">
          {
            "line" :
            {
              "start" : [0, 0],
              "end" : [80, 80]
            }
          }
          </pre>
      </li>
       <li> polyline:
         <pre class="">
           {
             "polyLine" :
             {
               "points" : [ [10, 10], [30, 10], [30, 30], [10, 30] ]
             }
           }
         </pre>
       </li>
       <li> stroked polyline:
         <pre class="brush: xml">
           {
             "strokedPolyLine" :
             {
               "points" : [ [10, 10], [40, 80], [50, 30] ],
               "strokeLength" : 10,
               "gapLength" : 2
             }
           }
         </pre>
       </li>
       <li> rectangle:
         <pre class="brush: xml">
           {
             "rectangle" :
             {
               "upperLeft" : [ 20, 20 ],
               "lowerRight" : [ 50, 50 ]
             }
           }
         </pre>
       </li>
       <li> rounded rectangle:
         <pre class="brush: json">
           { "roundedRectangle" :
             {
               "upperLeft" : [ 20, 20 ],
               "lowerRight" : [ 50, 50 ],
               "cornerWidth" : 10,
               "cornerHeight" : 10
             }
           }
         </pre>
       </li>
       <li> circle:
         <pre class="brush: json">
           {
             "circle" :
             {
               "origin" : [ 50, 50 ],
               "radius" : 5
             }
           }
         </pre>
       </li>
       <li> ellipse:
         <pre class="brush: json">
           {
             "ellipse" :
             {
               "origin" : [ 50, 50 ],
               "radiusX" : 30,
               "radiusY" : 20
             }
           }
         </pre>
       </li>
       <li> arc:
         <pre class="brush: json">
           {
             "arc" :
             {
               "origin" : [ 50, 50 ],
               "radiusX" : 10,
               "radiusY" : 20,
               "startDegrees" : 180,
               "endDegrees" : 270
             }
           }
         </pre>
       </li>
       <li> polygon:
         <pre class="brush: json">
           {
             "polygon" :
             {
               "points" : [ [10, 10], [30, 10], [30, 30] ]
             }
           }
         </pre>
       </li>
       <li> text:
         <pre class="brush: json">
           {
             "text" :
             {
               "origin" : [ 50, 50 ],
               "text" : "Hello World!",
               "font" : "Arial",
               "font-size" : 12
             }
           }
         </pre>
       </li>
     </ul>
 <p/>
 <p>Optionally, each of the shape elements can contain elements to define the stroke with, stroke color, fill color, and anti-aliasing.</p>
 <p>E.g.:</p>
 <p>
   <pre class="brush: json">
     {
       "polygon" :
       {
         "strokeWidth" : 3,
         "strokeColor" : "#FF0000",
         "fillColor" : "#00FF00",
         "antiAliasing" : fn:true(),
         "points" : [ [ 10, 10 ], [ 40, 80 ], [ 50, 30 ] ]
       }
     }
   </pre>
  </p>
</xqdoc:description><xqdoc:param>$image the passed image</xqdoc:param><xqdoc:param>$shapes the shapes</xqdoc:param><xqdoc:return>image with additional shapes</xqdoc:return><xqdoc:error>ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error><xqdoc:error>err::XPTY0004 empty sequence not allowed.</xqdoc:error><xqdoc:error>err:FORG0001 one of the passed shape objects is invalid.</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/paint_different_lines.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/image/paint_polyline.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/image/paint_stroked_polyline.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/image/paint_polygon.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/image/paint_rectangles.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/image/paint_circles.xq</xqdoc:custom><xqdoc:custom tag="example">test/Queries/image/paint_text.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>paint:paint</xqdoc:name><xqdoc:signature>declare function paint:paint($image as xs:base64Binary, $shapes as object()*) as xs:base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>shapes</xqdoc:name><xqdoc:type occurrence="*">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/image/paint</xqdoc:uri><xqdoc:name>paint-impl</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>paint:paint-impl</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function paint:paint-impl($image as xs:base64Binary, $shapes as object()*) as xs:base64Binary external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>shapes</xqdoc:name><xqdoc:type occurrence="*">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>