<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2013-12-04T01:28:38.942159+01:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://zorba.io/modules/image/basic</xqdoc:uri><xqdoc:name>basic</xqdoc:name><xqdoc:comment><xqdoc:description> <p>This module provides function to do the following basic image operations:</p>
 <ul>
   <li>create empty images</li>
   <li>compare images</li>
   <li>compress image</li>
   <li>convert an image one format to another</li>
   <li>retrieve with, height, format, and exif information from an image</li>
 </ul>
 <p/>
 <p>The following image formats are supported:
 <ul>
   <li>GIF</li>
   <li>JPEG</li>
   <li>PNG</li>
   <li>TIFF</li>
   <li>BMP</li>
 </ul>
 </p>
 <p>The errors raised by functions of this module have the namespace
 <tt>http://zorba.io/modules/image/error</tt> (associated with prefix ierr).</p>
</xqdoc:description><xqdoc:author>Daniel Thomas</xqdoc:author><xqdoc:custom tag="library"><a href="http://www.imagemagick.org/Magick++/">Magick++ C++ Library</a></xqdoc:custom><xqdoc:custom tag="project">Zorba/Image/Basic</xqdoc:custom><xqdoc:custom tag="language">xquery</xqdoc:custom><xqdoc:custom tag="version">3.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="basic" uri="http://zorba.io/modules/image/basic" isSchema="false"/><xqdoc:namespace prefix="err" uri="http://www.w3.org/2005/xqt-errors" isSchema="false"/><xqdoc:namespace prefix="ierr" uri="http://zorba.io/modules/image/error" isSchema="false"/><xqdoc:namespace prefix="image" uri="http://zorba.io/modules/image/image" isSchema="true"/><xqdoc:namespace prefix="svg" uri="http://www.w3.org/2000/svg" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports><xqdoc:import type="schema"><xqdoc:uri>http://zorba.io/modules/image/image</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the width of the passed image.</p>
</xqdoc:description><xqdoc:param>$image the image</xqdoc:param><xqdoc:return>the width in pixels</xqdoc:return><xqdoc:error>ierr:IM001 the passed image is invalid.</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_width.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:width</xqdoc:name><xqdoc:signature>declare function basic:width($image as xs:base64Binary) as xs:unsignedInt external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the height of the passed image.</p>
</xqdoc:description><xqdoc:param>$image the image</xqdoc:param><xqdoc:return>the height in pixels</xqdoc:return><xqdoc:error>ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_height.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:height</xqdoc:name><xqdoc:signature>declare function basic:height($image as xs:base64Binary) as xs:unsignedInt external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Compresses the passed image.</p>
 <p>Compressing means lowering the quality and reducing the size.</p>
</xqdoc:description><xqdoc:param>$image the image</xqdoc:param><xqdoc:param>$quality compression level, 0 to 100</xqdoc:param><xqdoc:return>the compressed image</xqdoc:return><xqdoc:error>ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_compress.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:compress</xqdoc:name><xqdoc:signature>declare function basic:compress($image as xs:base64Binary, $quality as xs:unsignedInt) as xs:base64Binary external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>quality</xqdoc:name><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Converts an image to another format.</p>
</xqdoc:description><xqdoc:param>$image the source image</xqdoc:param><xqdoc:param>$format the format (see supported formats above) of the resulting image.</xqdoc:param><xqdoc:return>A new image with the same content as the passed image but with the specified file format.</xqdoc:return><xqdoc:error>ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error><xqdoc:error>err:FORG0001 unsupported image format</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_convert.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:convert</xqdoc:name><xqdoc:signature>declare function basic:convert($image as xs:base64Binary, $format as xs:string) as xs:base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>format</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/image/basic</xqdoc:uri><xqdoc:name>convert-impl</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/image/image</xqdoc:uri><xqdoc:name>imageFormat</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>basic:convert-impl</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function basic:convert-impl($image as xs:base64Binary, $format as xs:string) as xs:base64Binary external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>format</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the format of the passed image.</p>
</xqdoc:description><xqdoc:param>$image the image</xqdoc:param><xqdoc:return>the format</xqdoc:return><xqdoc:error>ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_type.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:format</xqdoc:name><xqdoc:signature>declare function basic:format($image as xs:base64Binary) as xs:string external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:string</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Creates an empty image with background color white.</p>
</xqdoc:description><xqdoc:param>$width the width of the new image</xqdoc:param><xqdoc:param>$height the height of the new image</xqdoc:param><xqdoc:param>$format the format of the new image</xqdoc:param><xqdoc:return>newly created image</xqdoc:return><xqdoc:error>err:FORG0001 unsupported image format</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_create.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:create</xqdoc:name><xqdoc:signature>declare function basic:create($width as xs:unsignedInt, $height as xs:unsignedInt, $format as xs:string) as xs:base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>width</xqdoc:name><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>height</xqdoc:name><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>format</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://zorba.io/modules/image/basic</xqdoc:uri><xqdoc:name>create-impl</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/image/image</xqdoc:uri><xqdoc:name>imageFormat</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:name>basic:create-impl</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function basic:create-impl($width as xs:unsignedInt, $height as xs:unsignedInt, $format as xs:string) as xs:base64Binary external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>width</xqdoc:name><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>height</xqdoc:name><xqdoc:type>xs:unsignedInt</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>format</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Reads exif information from an image.</p>
 <p>This function works for JPEG and TIFF images only.</p>
 <p>It returns empty sequence if no exif information matching the passed tag is found.</p>
</xqdoc:description><xqdoc:param>$image the image</xqdoc:param><xqdoc:param>$tag the field name we want read (e.g. DateTime).</xqdoc:param><xqdoc:return>exif field content</xqdoc:return><xqdoc:error>ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_exif.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:exif</xqdoc:name><xqdoc:signature>declare function basic:exif($image as xs:base64Binary, $tag as xs:string) as xs:string? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>tag</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">xs:string?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Compares two images.</p>
</xqdoc:description><xqdoc:param>$image1 first image</xqdoc:param><xqdoc:param>$image2 second image</xqdoc:param><xqdoc:return>True if the images are equal.</xqdoc:return><xqdoc:error>ierr:INVALID_IMAGE one of the passed images is invalid.</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_equals.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:equals</xqdoc:name><xqdoc:signature>declare function basic:equals($image1 as xs:base64Binary, $image2 as xs:base64Binary) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>image1</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>image2</xqdoc:name><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Converts an SVG image to a supported image format.</p>
</xqdoc:description><xqdoc:param>$svg the image to convert</xqdoc:param><xqdoc:param>$format target format</xqdoc:param><xqdoc:return>the resulting image</xqdoc:return><xqdoc:error>ierr:INVALID_IMAGE the passed SVG is invalid.</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_svg.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:convert-svg</xqdoc:name><xqdoc:signature>declare function basic:convert-svg($svg as element(svg:svg), $format as xs:string) as xs:base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>svg</xqdoc:name><xqdoc:type>element(svg:svg)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>format</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>serialize</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/image/basic</xqdoc:uri><xqdoc:name>convert-svg-string</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Converts an SVG image to a supported image format.</p>
</xqdoc:description><xqdoc:param>$svg the image to convert as string</xqdoc:param><xqdoc:param>$format target format</xqdoc:param><xqdoc:return>the resulting image</xqdoc:return><xqdoc:error>ierr:INVALID_IMAGE the passed SVG is invalid.</xqdoc:error><xqdoc:custom tag="example">test/Queries/image/basic_svg.xq</xqdoc:custom></xqdoc:comment><xqdoc:name>basic:convert-svg-string</xqdoc:name><xqdoc:signature>declare function basic:convert-svg-string($svg as xs:string, $format as xs:string) as xs:base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>svg</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>format</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/image/basic</xqdoc:uri><xqdoc:name>convert-svg-impl</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/image/image</xqdoc:uri><xqdoc:name>imageFormat</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>basic:convert-svg-impl</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function basic:convert-svg-impl($svg as xs:string, $format as xs:string) as xs:base64Binary external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>svg</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>format</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:base64Binary</xqdoc:type></xqdoc:return></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>