{ "ns" : "http://zorba.io/modules/string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides string related functions.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Mostly, the functions in this module provide primitives\n to work with streamable strings. For example, it allows to\n check whether a given string is streamable or seekable.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/string", "prefix" : "string" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 2, "name" : "analyze-string", "qname" : "string:analyze-string", "signature" : "($input as xs:string?, $pattern as xs:string) as array()", "description" : " Analyzes a string using a regular expression, returning sequence of JSON\n objects that identify which parts of the input string matched or failed to\n match the regular expression; and in the case of matched substrings, which\n substrings matched each capturing group in the regular expression.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This function behaves like\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-analyze-string\"><code>fn:analyze-string</code></a>\n but returns a JSON array rather than an XML element.\n", "summary" : "<p> Analyzes a string using a regular expression, returning sequence of JSON\n objects that identify which parts of the input string matched or failed to\n match the regular expression; and in the case of matched substrings, which\n substrings matched each capturing group in the regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to analyze. If the empty sequence, the function behaves as if <code>$input</code> were a zero-length string.</div>" }, { "name" : "pattern", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The regular expression.</div>" } ], "returns" : { "type" : "array()", "description" : "a JSON array of objects where each object contains a single key/value pair. Each key is either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">match</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">non-match</code>. For <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">non-match</code>, the value is a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that did not match; for <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">match</code>, the value is either a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that matched (when <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$pattern</code> contains no capturing groups) or an array containing values for both capturing groups and other matches. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Capturing group matches are themselves arrays where the first element is the group number (1-based) and subsequent elements are either a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that matched or sub-arrays for nested capturing groups." }, "errors" : [  ] }, { "arity" : 3, "name" : "analyze-string", "qname" : "string:analyze-string", "signature" : "($input as xs:string?, $pattern as xs:string, $flags as xs:string) as array() external", "description" : " Analyzes a string using a regular expression, returning sequence of JSON\n objects that identify which parts of the input string matched or failed to\n match the regular expression; and in the case of matched substrings, which\n substrings matched each capturing group in the regular expression.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This function behaves like\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xpath-functions-30/#func-analyze-string\"><code>fn:analyze-string</code></a>\n but returns a JSON array rather than an XML element.\n", "summary" : "<p> Analyzes a string using a regular expression, returning sequence of JSON\n objects that identify which parts of the input string matched or failed to\n match the regular expression; and in the case of matched substrings, which\n substrings matched each capturing group in the regular expression.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string to analyze. If the empty sequence, the function behaves as if <code>$input</code> were a zero-length string.</div>" }, { "name" : "pattern", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The regular expression.</div>" }, { "name" : "flags", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The  argument is interpreted in the same way as for the <a href=\"http://www.w3.org/TR/xpath-functions-30/#func-matches\"><code>fn:matches</code></a> function.</div>" } ], "returns" : { "type" : "array()", "description" : "a JSON array of objects where each object contains a single key/value pair. Each key is either <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">match</code> or <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">non-match</code>. For <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">non-match</code>, the value is a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that did not match; for <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">match</code>, the value is either a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that matched (when <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$pattern</code> contains no capturing groups) or an array containing values for both capturing groups and other matches. <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/> Capturing group matches are themselves arrays where the first element is the group number (1-based) and subsequent elements are either a string that is the part of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$input</code> that matched or sub-arrays for nested capturing groups." }, "errors" : [  ] }, { "arity" : 1, "name" : "is-seekable", "qname" : "string:is-seekable", "signature" : "($s as string) as boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function checks whether a given string item is a\n seekable stream string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">For example, a seekable streamable string is returned by the\n file module.</p>\n", "summary" : "<p>  This function checks whether a given string item is a\n seekable stream string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to check</div>" } ], "returns" : { "type" : "boolean", "description" : "true if the given item is a seekable stream string or false otherwise." }, "errors" : [  ] }, { "arity" : 1, "name" : "is-streamable", "qname" : "string:is-streamable", "signature" : "($s as string) as boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function checks whether a given string item is implemented by a\n streamable string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A streamable string is produced by some functions of a module.\n It's an optimized implementation of an string to handle arbitrary\n sized data. The drawback is that its value can only be consumed once.\n That is, only one function can access the value of a streamable string\n item.</p>\n", "summary" : "<p>  This function checks whether a given string item is implemented by a\n streamable string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the string to check</div>" } ], "returns" : { "type" : "boolean", "description" : "true if the given item is implemented using a streamable string or false otherwise." }, "errors" : [  ] }, { "arity" : 1, "name" : "materialize", "qname" : "string:materialize", "signature" : "($s as string) as string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function materializes a streamable string.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The drawback of a streamable (non-seekable) string is that\n its value can only be consumed once. That is, only one function\n can access the value of astreamable string item.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In order to remedy this situation, this function can be used to\n convert a streamable string into its non-streamable counterpart. As a\n result, the string returned by this function has the same value as its\n input but is materialized and, hence, can be consumed multiple times.</p>\n", "summary" : "<p>  This function materializes a streamable string.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the streamable string item to materialize</div>" } ], "returns" : { "type" : "string", "description" : "a materialized string of its input or the input if the input item was not a streamable string." }, "errors" : [  ] }, { "arity" : 2, "name" : "split", "qname" : "string:split", "signature" : "($s as string, $separator as string) as string* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns a sequence of strings constructed by splitting the input wherever\n the given separator is found.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The function is different from tokenize. It doesn't allow\n the separator to be a regular expression. This restriction allows for more\n performant implementation. Specifically, the function processes\n streamable strings as input in a streamable way which is particularly useful\n to tokenize huge strings.</p>\n", "summary" : "<p>  Returns a sequence of strings constructed by splitting the input wherever\n the given separator is found.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "s", "type" : "string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the input string to split</div>" }, { "name" : "separator", "type" : "string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the separator used for splitting the input string $s</div>" } ], "returns" : { "type" : "string*", "description" : "a sequence of strings constructed by splitting the input" }, "errors" : [  ] } ], "variables" : [  ] }