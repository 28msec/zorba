{ "ns" : "http://zorba.io/modules/store/static/collections/dml", "description" : " This modules provides a set of functions to modify a collection\n and retrieve the items contained in a particular collection.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module is part of\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://zorba.io/documentation/latest/zorba/specifications/xqddf\">Zorba's XQuery Data Definition Facility</a>.\n All the collections managed by this module have to be pre-declared in the\n prolog of a module.\n Please refer to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://zorba.io/documentation/latest/zorba/architecture/data_lifecycle\">general documentation</a>\n for more information and examples.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://zorba.io/documentation/latest/zorba/architecture/data_lifecycle\">Data Lifecycle</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://zorba.io/documentation/latest/zorba/specifications/xqddf\">XQuery Data Definition Facility</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/collections/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/indexes/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/indexes/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/integrity-constraints/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/integrity-constraints/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/errors</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza, Matthias Brantner, David Graf, Till Westmann, Markos Zaharioudakis</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/store/static/collections/dml", "prefix" : "cdml" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "arity" : 3, "name" : "apply-insert-after", "qname" : "cdml:apply-insert-after", "signature" : "($name as xs:QName, $pos as item(), $content as item()*) as item()* external", "description" : " This function does the same thing as the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert-after()</code>\n function except it immediately applies the resulting pending updates and\n returns the items that have been inserted.\n", "summary" : "<p> This function does the same thing as the  insert-after() \n function except it immediately applies the resulting pending updates and\n returns the items that have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "pos", "type" : "item()", "occurence" : null, "description" : "" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$target</code> is not in the collection.</xqdoc:error>" ] }, { "arity" : 3, "name" : "apply-insert-before", "qname" : "cdml:apply-insert-before", "signature" : "($name as xs:QName, $target as item(), $content as item()*) as item()* external", "description" : " This function does the same thing as <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert-before()</code> except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.\n", "summary" : "<p> This function does the same thing as  insert-before()  except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "target", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item in the collection before which <code>$content</code> will be inserted.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection $name is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$target</code> is not an item that is contained in the collection.</xqdoc:error>" ] }, { "arity" : 2, "name" : "apply-insert-first", "qname" : "cdml:apply-insert-first", "signature" : "($name as xs:QName, $content as item()*) as item()* external", "description" : " This function does the same thing as <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert-first()</code> except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.\n", "summary" : "<p> This function does the same thing as  insert-first()  except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The Sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection $name is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "arity" : 2, "name" : "apply-insert-last", "qname" : "cdml:apply-insert-last", "signature" : "($name as xs:QName, $content as item()*) as item()* external", "description" : " This function does the same thing as <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert-last()</code> except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.\n", "summary" : "<p> This function does the same thing as  insert-last()  except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "arity" : 2, "name" : "apply-insert", "qname" : "cdml:apply-insert", "signature" : "($name as xs:QName, $content as item()*) as item()* external", "description" : " This function does the same thing as <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">insert()</code> except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.\n", "summary" : "<p> This function does the same thing as  insert()  except it\n immediately applies the resulting pending updates and returns the items that\n have been inserted.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sequence of items that have been inserted." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "arity" : 1, "name" : "collection-name", "qname" : "cdml:collection-name", "signature" : "($item as item()) as xs:QName external", "description" : " Gets the name of the collection the given item (node or JSON item) belongs\n to.\n", "summary" : "<p> Gets the name of the collection the given item (node or JSON item) belongs\n to.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item for which to get the name of its collection.</div>" } ], "returns" : { "type" : "xs:QName", "description" : "The name of the collection to which the given item belongs." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$item</code> does not belong to a collection.</xqdoc:error>" ] }, { "arity" : 1, "name" : "collection", "qname" : "cdml:collection", "signature" : "($name as xs:QName) as item()* external", "description" : " Gets the sequence of nodes or JSON items from a collection.\n", "summary" : "<p> Gets the sequence of nodes or JSON items from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection.</div>" } ], "returns" : { "type" : "item()*", "description" : "The seqnence of items from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>" ] }, { "arity" : 2, "name" : "collection", "qname" : "cdml:collection", "signature" : "($name as xs:QName, $skip as xs:integer) as item()* external", "description" : " Gets the sequence of nodes or JSON items from a collection.\n", "summary" : "<p> Gets the sequence of nodes or JSON items from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection.</div>" }, { "name" : "skip", "type" : "xs:integer", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The initial number of items to skip.</div>" } ], "returns" : { "type" : "item()*", "description" : "The (sub)sequence of items from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>" ] }, { "arity" : 3, "name" : "collection", "qname" : "cdml:collection", "signature" : "($name as xs:QName, $start as xs:anyURI, $skip as xs:integer) as item()* external", "description" : " Gets the sequence of items (nodes or JSON items) from a collection.\n The parameters <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$start</code> and <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$skip</code> can be used to\n skip over some items at the beginning of the collection.\n If both are given, both are applied:\n first <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$start</code> to skip to the referenced item\n and then <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$skip</code> to skip that additional number of items.\n", "summary" : "<p> Gets the sequence of items (nodes or JSON items) from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection.</div>" }, { "name" : "start", "type" : "xs:anyURI", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The reference to the first item to return.</div>" }, { "name" : "skip", "type" : "xs:integer", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of additional items to skip.</div>" } ], "returns" : { "type" : "item()*", "description" : "The sub-sequence from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZAPI0028 If the given URI is not a valid node position computed by the <code>np:node-position</code> function.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZSTR0066 if <code>$start</code> does not reference a node from the collection.</xqdoc:error>" ] }, { "arity" : 1, "name" : "delete-first", "qname" : "cdml:delete-first", "signature" : "($name as xs:QName) external", "description" : " Deletes the first item from a collection.\n", "summary" : "<p> Deletes the first item from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to delete from.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the first item from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const or append-only.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if the collection is empty.</xqdoc:error>" ] }, { "arity" : 2, "name" : "delete-first", "qname" : "cdml:delete-first", "signature" : "($name as xs:QName, $number as xs:integer) external", "description" : " Deletes the first <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i> items from a collection.\n", "summary" : "<p> Deletes the first  N  items from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to delete from.</div>" }, { "name" : "number", "type" : "xs:integer", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of items to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the items from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const or append-only.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if the collection contains less than <code>$number</code> items.</xqdoc:error>" ] }, { "arity" : 1, "name" : "delete-last", "qname" : "cdml:delete-last", "signature" : "($name as xs:QName) external", "description" : " Deletes the last item from a collection.\n", "summary" : "<p> Deletes the last item from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to delete from.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the last item from the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if the collection is empty.</xqdoc:error>" ] }, { "arity" : 2, "name" : "delete-last", "qname" : "cdml:delete-last", "signature" : "($name as xs:QName, $number as xs:integer) external", "description" : " Deletes the last <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i> items from a collection.\n", "summary" : "<p> Deletes the last  N  items from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to delete from.</div>" }, { "name" : "number", "type" : "xs:integer", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of items to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the items." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if the collection contains less than <code>$number</code> items.</xqdoc:error>" ] }, { "arity" : 1, "name" : "delete", "qname" : "cdml:delete", "signature" : "($items as item()*) external", "description" : " Deletes items (nodes or JSON items) from a collection.\n", "summary" : "<p> Deletes items (nodes or JSON items) from a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "items", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The items in the collection to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the items from their collections." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if any item in <code>$items</code> is not a member of a collection or not all items belong to the same collection.</xqdoc:error>" ] }, { "arity" : 2, "name" : "edit", "qname" : "cdml:edit", "signature" : "($target as item(), $content as item()) external", "description" : " Edits the first supplied item so as to make it look exactly like a copy of\n the second supplied item while retaining its original identity.\n", "summary" : "<p> Edits the first supplied item so as to make it look exactly like a copy of\n the second supplied item while retaining its original identity.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "target", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The target item to be edited.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item that serves as an edit goal.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, performs the edit." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection to which <code>$target</code> belongs is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection to which <code>$target</code> belongs is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection to which <code>$target</code> belongs is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0017 if <code>$target</code> is not a member of a collection.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0037 if the collection is append-only.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0038 if the collection is a queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0039 if <code>$target</code> is not a root.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0040 if <code>$target</code> cannot be updated to match the content (for example, because the target is a node and the content is an object).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type (as specified in the collection declaration) according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "arity" : 1, "name" : "index-of", "qname" : "cdml:index-of", "signature" : "($item as item()) as xs:integer external", "description" : " Gets the position of the given item (node or JSON item) within its\n collection.\n", "summary" : "<p> Gets the position of the given item (node or JSON item) within its\n collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "item", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item to get the index of.</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The position of <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$item</code> in its collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$item</code> does not belong to a collection.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>" ] }, { "arity" : 3, "name" : "insert-after", "qname" : "cdml:insert-after", "signature" : "($name as xs:QName, $target as item(), $content as item()*) external", "description" : " The insert-after function is an updating function that inserts copies of the\n given items (nodes or JSON items) into a collection at the position\n directly following the given target item.\n", "summary" : "<p> The insert-after function is an updating function that inserts copies of the\n given items (nodes or JSON items) into a collection at the position\n directly following the given target item.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "target", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item in the collection after which <code>$content</code> will be inserted.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$target</code> is not a node that is contained in the collection.</xqdoc:error>" ] }, { "arity" : 3, "name" : "insert-before", "qname" : "cdml:insert-before", "signature" : "($name as xs:QName, $target as item(), $content as item()*) external", "description" : " Inserts copies of the given items (nodes or JSON items) into a collection at\n the position directly preceding the given target item.\n", "summary" : "<p> Inserts copies of the given items (nodes or JSON items) into a collection at\n the position directly preceding the given target item.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "target", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The item in the collection before which <code>$content</code> will be inserted.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const, append-only, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0011 if <code>$target</code> is not an item that is contained in the collection.</xqdoc:error>" ] }, { "arity" : 2, "name" : "insert-first", "qname" : "cdml:insert-first", "signature" : "($name as xs:QName, $content as item()*) external", "description" : " Inserts copies of the given items (nodes or JSON items) at the beginning of\n a collection.\n", "summary" : "<p> Inserts copies of the given items (nodes or JSON items) at the beginning of\n a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "arity" : 2, "name" : "insert-last", "qname" : "cdml:insert-last", "signature" : "($name as xs:QName, $content as item()*) external", "description" : " Inserts copies of the given items (nodes or JSON items) at the end of a\n collection.\n", "summary" : "<p> Inserts copies of the given items (nodes or JSON items) at the end of a\n collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of itemss whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is const.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0012 if the collection is unordered.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "arity" : 2, "name" : "insert", "qname" : "cdml:insert", "signature" : "($name as xs:QName, $content as item()*) external", "description" : " Inserts copies of the given items (nodes or JSON items) into a collection.\n Note that the insertion position of the items in the collection is not\n defined.\n", "summary" : "<p> Inserts copies of the given items (nodes or JSON items) into a collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to insert into.</div>" }, { "name" : "content", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The sequence of items whose copies to insert.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, inserts the items into the collection." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0006 if the collection is append-only, const, or queue.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDTY0001 if <code>$content</code> does not match the expected type as specified in the collection declaration according to the rules for SequenceType Matching.</xqdoc:error>" ] }, { "arity" : 1, "name" : "truncate", "qname" : "cdml:truncate", "signature" : "($name as xs:QName) external", "description" : " Deletes the entire contents of collection.\n Please note that applying this function can not be undone in case\n an error happens during the application of the containing PUL.\n", "summary" : "<p> Deletes the entire contents of collection.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection whose content to delete.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, once applied, deletes the nodes." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0001 if the collection is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0003 if the collection is not available.</xqdoc:error>" ] } ], "variables" : [  ] }