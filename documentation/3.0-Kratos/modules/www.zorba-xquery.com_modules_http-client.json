{ "ns" : "http://www.zorba-xquery.com/modules/http-client", "description" : " <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Introduction</h1>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides provides simple functions for performing HTTP requests\n (GET, POST, DELETE etc.), as well as a more flexible general\n purpose function (<a href=\"?anchor=send-request-3\">send-request()</a>).\n </p>\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Examples of how to use this module</h1>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple GET Request</h4>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n declare namespace svg=\"http://www.w3.org/2000/svg\";\n http:get(\"http://www.w3.org/Graphics/SVG/svglogo.svg\")[2]/svg:svg/svg:title\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This example downloads an XML resource from the web (in this case,\n an SVG file, which is an XML-based image format) and returns it as\n a document node. Since the XML is in a namespace, we declare that\n namespace; we can then perform a path expression directly on the\n return value of http:get().\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple GET Request (retrieving XHTML)</h4>\n   <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n   import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n   declare namespace xhtml=\"http://www.w3.org/1999/xhtml\";\n   http:get-node( \"http://www.w3.org\" )[2]//xhtml:body\n   </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This example shows how to retrieve an XHTML resource. XHTML is\n XML, so the http:get-node() function will return it as a document node\n and you can operate on it with the full power of XQuery. As above, since this\n XML is in a particular namespace, the above query defines that namespace\n with the prefix \"xhtml\" so it can easily perform path expressions, etc.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Note: many webservers, include www.w3.org, return XHTML with the\n HTTP Content-Type \"text/html\". Zorba cannot assume that \"text/html\"\n is actually XHTML, and so http:get() would have returned raw text\n rather than a document node. That is why the example above uses\n http:get-node(), which overrides the server's Content-Type and tells\n Zorba to attempt to parse the result as XML.\n </p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple GET Request (retrieving HTML as text)</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Note that XQuery does <b>not</b> understand plain HTML, and so if the URL\n you retrieve contains plain HTML data (not XHTML), it will be treated as\n plain text as shown in the next example. If you want to operate on the HTML\n with XQuery, you should use the HTML language module which can transform\n HTML to XHTML. The HTML module is supported by the Zorba team, but it is\n not a \"core module\", meaning that it is not shipped with every Zorba\n installation and may not be available. See\n <a href=\"http://zorba.io/download\">the Zorba downloads\n page</a> for information about obtaining this module if you do not\n have it.</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n http:get(\"http://www.example.com\")[2]\n </pre>\n returns\n   <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xml\">\n   &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;\n   &lt;html&gt;\n     &lt;head&gt;\n       &lt;meta http-equiv=\"Content-Type\"\n       content=\"text/html; charset=utf-8\" /&gt;\n       &lt;title&gt;Example Web Page&lt;/title&gt;\n     &lt;/head&gt;\n     &lt;body&gt;\n       &lt;p&gt;You have reached this web page by typing \"example.com\",\n       \"example.net\", or \"example.org\" into your web browser.&lt;/p&gt;\n       &lt;p&gt;These domain names are reserved for use in documentation and are\n       Not available for registration. See\n       &lt;a href=\"http://www.rfc-editor.org/rfc/rfc2606.txt\"&gt;RFC 2606&lt;/a&gt;,\n       Section 3.&lt;/p&gt;\n     &lt;/body&gt;\n   &lt;/html&gt;\n   </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note that the response data above is a simple\n xs:string value containing the HTML data, not actual XML data. If you\n executed the above query using the Zorba command-line client, you would\n have actually seen data like the following:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xml\">\n   &amp;lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&amp;gt;\n   &amp;lt;html&amp;gt;\n      ...\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">because Zorba would attempt to serialize it as XML data, and would\n escape all the raw angle brackets in the original xs:string.</p>\n <h4 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Simple POST Request</h4>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n Here is a simple example which sends text content by making an HTTP POST\n request.\n </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace http=\"http://www.zorba-xquery.com/modules/http-client\";\n http:post( \"...\", \"Hello World\" )\n </pre>\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"standard_return\">Return Values</h1>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Most functions in this module (all except\n <a href=\"?anchor=options-1\">options()</a>) return one or more items.\n (<a href=\"?anchor=head-1\">head()</a> returns exactly one.) For all of these,\n the first item returned will be a &lt;http-schema:response&gt;\n element, as seen in the examples above. This element has \"status\" and\n \"message\" attributes, representing the result of the HTTP call. It\n also has any number of &lt;http-schema:header&gt; child elements that\n encode the HTTP headers returned by the HTTP server. Finally, it\n will generally contain a &lt;http-schema:body&gt; child element with\n a \"media-type\" attribute that identifies the content-type of the\n result data.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The full schema of this &lt;http-schema:response&gt; element is\n part of the <a href=\"http://expath.org/modules/http-client/\">EXPath\n HTTP Client module</a>. You can see the schema\n <a href=\"http://bazaar.launchpad.net/~zorba-coders/zorba/trunk/view/head:/modules/http-client/xml/http-client.xsd\" target=\"_blank\">here</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Any items in function return values after the initial\n &lt;http-schema:response&gt; element are the body/bodies of the HTTP\n response from the server. (MIME Multi-part responses will have\n more than one body.) The type of these items depends on the\n Content-Type for each body. Each item will be:</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li>\n    an element node, if the returned content type is one of:\n    <ul>\n      <li>text/xml</li>\n      <li>application/xml</li>\n      <li>text/xml-external-parsed-entity</li>\n      <li>application/xml-external-parsed-entity</li>\n      <li>or if the Content-Type ends with \"+xml\".</li>\n    </ul>\n  </li>\n  <li>\n    an xs:string, if the returned content type starts with \"text/\"\n    and does not match the above XML content types strings, or if\n    it is one of:\n    <ul>\n      <li>\"application/json\"</li>\n      <li>\"application/x-javascript\"</li>\n    </ul>\n  </li>\n  <li>xs:base64Binary for all other content types.</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This return value - a sequence of items comprising one\n &lt;http-schema:response&gt; element followed by zero or more\n response items - is referred to as the \"standard http-client\n return type\" in the function declarations below.</p>\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"url_string\">$href Arguments to Functions</h1>\n All functions in this module accept a URL argument named $href. In\n all cases, the value passed to $href must be a valid xs:anyURI.\n However, all functions declare $href to be of type xs:string. This\n is for convenience, since you can pass a string literal value (that\n is, a URL in double-quotes spelled out explicitly in your query)\n to an xs:string parameter.\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"get_warning\">Important Notice Regarding get() Functions</h1>\n All of the get() functions in this module -\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=get-1\">get()</a>, <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=get-node-1\">get-node()</a>,\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=get-text-1\">get-text()</a>, and\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=get-binary()\">get-binary()</a> - are declared to be\n <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">nondeterministic</i>, which means that Zorba will not cache\n their results. However, they are <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">not</b> declared to be\n <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sequential</i>, which means that Zorba may re-order them\n as part of its query optimization. According to the HTTP RFC,\n GET requests should only return data, and should not have any\n side-effects. However, in practice it is not uncommon for GET\n requests to have side-effects. If your application depends on\n the ordering of side-effects from making GET requests, you should\n either use the more complex <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"?anchor=send-request-3\">send-request()</a>\n function (which <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">is</b> declared <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">sequential</i>), or alterately\n wrap each call to get() in your own sequential function, to ensure\n that Zorba does not place the GET requests out of order.\n <h1 xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" id=\"expath_relation\">Relation to the EXPath http-client module</h1>\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://expath.org/\">EXPath</a> defines its own http-client\n module, which is available separately for Zorba as a non-core module.\n There are two primary differences between EXPath's http-client and\n Zorba's core http-client (this module):\n <ol xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>EXPath defines only the send-request() function, although it\n does include convenient 1- and 2-argument forms in addition to the\n full 3-argument form. EXPath does not include the simpler get(),\n post(), put(), delete(), head(), and options() functions defined by\n this module.</li>\n   <li>EXPath specifies that all HTML content returned from the\n HTTP server will be <i>tidied up</i> into valid XML, and then parsed\n into an element. As this required an additional third-party library\n dependency, Zorba's http-client module does not perform this tidying.\n Instead, HTML content is returned as a string (with special XML\n characters replaced with XML entity references, as shown in the\n above examples).</li>\n </ol>\n See <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.expath.org/spec/http-client\">the full spec\n of the EXPath http-client module</a> for more information.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xquery-11/#FunctionDeclns\">XQuery 1.1: Function Declaration</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Markus Pilman, Federico Cavalieri</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://expath.org/ns/error", "prefix" : "error" }, { "uri" : "http://www.zorba-xquery.com/modules/http-client", "prefix" : "http" }, { "uri" : "http://expath.org/ns/http-client", "prefix" : "http-schema" }, { "uri" : "http://zorba.io/modules/http-client-wrapper", "prefix" : "http-wrapper" }, { "uri" : "http://jsoniq.org/functions", "prefix" : "jn" }, { "uri" : "http://zorba.io/modules/http-client", "prefix" : "json-http" }, { "uri" : "http://jsoniq.org/function-library", "prefix" : "libjn" }, { "uri" : "http://www.w3.org/2010/xslt-xquery-serialization", "prefix" : "ser" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 1, "name" : "delete", "qname" : "http:delete", "signature" : "($href as xs:string) as item()+", "description" : " This function makes an HTTP DELETE request to a given URL.\n", "summary" : "<p> This function makes an HTTP DELETE request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a DELETE request.</xqdoc:error>" ] }, { "arity" : 1, "name" : "get-binary", "qname" : "http:get-binary", "signature" : "($href as xs:string) as item()+", "description" : " This function makes a GET request on a given URL. All returned bodies\n are forced to be interpreted as binary data, and will be returned\n as xs:base64Binary items.\n", "summary" : "<p> This function makes a GET request on a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "arity" : 1, "name" : "get-node", "qname" : "http:get-node", "signature" : "($href as xs:string) as item()+", "description" : " This function makes a GET request to a given URL. All returned bodies\n are forced to be interpreted as XML and parsed into elements.\n", "summary" : "<p> This function makes a GET request to a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "arity" : 1, "name" : "get-text", "qname" : "http:get-text", "signature" : "($href as xs:string) as item()+", "description" : " This function makes a GET request to a given URL. All returned bodies\n are forced to be interpreted as plain strings, and will be returned\n as xs:string items.\n", "summary" : "<p> This function makes a GET request to a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "arity" : 1, "name" : "get", "qname" : "http:get", "signature" : "($href as xs:string) as item()+", "description" : " This function makes a GET request to a given URL.\n", "summary" : "<p> This function makes a GET request to a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "arity" : 1, "name" : "head", "qname" : "http:head", "signature" : "($href as xs:string) as item()", "description" : " This function makes an HTTP HEAD request on a given URL.\n", "summary" : "<p> This function makes an HTTP HEAD request on a given URL.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "item()", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a> (since HEAD never returns any body data, only the &lt;http-schema:response&gt; element will be returned)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "arity" : 1, "name" : "options", "qname" : "http:options", "signature" : "($href as xs:string) as xs:string*", "description" : " This function makes an HTTP OPTIONS request, which asks the server\n which operations it supports.\n", "summary" : "<p> This function makes an HTTP OPTIONS request, which asks the server\n which operations it supports.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" } ], "returns" : { "type" : "xs:string*", "description" : "A sequence of xs:string values of the allowed operations." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>" ] }, { "arity" : 2, "name" : "post", "qname" : "http:post", "signature" : "($href as xs:string, $body as item()) as item()+", "description" : " This function makes an HTTP POST request to a given URL. If the body\n passed to this function is an element, it will be serialized to XML\n to be sent to the server, and the Content-Type sent to the server will\n be \"text/xml\". Otherwise, the body will be converted to\n a plain string, and the Content-Type will be \"text/plain\".\n", "summary" : "<p> This function makes an HTTP POST request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a POST request.</xqdoc:error>" ] }, { "arity" : 3, "name" : "post", "qname" : "http:post", "signature" : "($href as xs:string, $body as item(), $content-type as xs:string) as item()+", "description" : " This function makes an HTTP POST request to a given URL. If the body\n passed to this function is an element, it will be serialized\n according to the $content-type parameter as follows:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li>If $content-type is \"text/xml\", \"application/xml\",\n \"text/xml-external-parsed-entity\", or\n \"application/xml-external-parsed-entity\", or if it ends with \"+xml\",\n $body will be serialized to XML.</li>\n  <li>If $content-type starts with \"text/html\", $body will be\n serialized to HTML.</li>\n  <li>Otherwise, $body will be serialized to text.</li>\n </ul>\n If $body is not an element, $body will be serialized to text\n regardless of $content-type.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In any case, Content-Type of the request sent to the server will\n be $content-type.</p>\n", "summary" : "<p> This function makes an HTTP POST request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server</div>" }, { "name" : "content-type", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content type of the body as described above.</div>" } ], "returns" : { "type" : "item()+", "description" : "The first element of the result is the metadata (like headers, status etc), the next elements are the response" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a POST request.</xqdoc:error>" ] }, { "arity" : 2, "name" : "put", "qname" : "http:put", "signature" : "($href as xs:string, $body as item()) as item()+", "description" : " This function makes an HTTP PUT request to a given URL. If the body\n passed to this function is an element, it will be serialized to XML\n to be sent to the server, and the Content-Type sent to the server will\n be \"text/xml\". Otherwise, the body will be converted to\n a plain string, and the Content-Type will be \"text/plain\".\n", "summary" : "<p> This function makes an HTTP PUT request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a PUT request.</xqdoc:error>" ] }, { "arity" : 3, "name" : "put", "qname" : "http:put", "signature" : "($href as xs:string, $body as item(), $content-type as xs:string) as item()+", "description" : " This function makes an HTTP PUT request to a given URL. If the body\n passed to this function is an element, it will be serialized\n according to the $content-type parameter as follows:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n  <li>If $content-type is \"text/xml\", \"application/xml\",\n \"text/xml-external-parsed-entity\", or\n \"application/xml-external-parsed-entity\", or if it ends with \"+xml\",\n $body will be serialized to XML.</li>\n  <li>If $content-type starts with \"text/html\", $body will be\n serialized to HTML.</li>\n  <li>Otherwise, $body will be serialized to text.</li>\n </ul>\n If $body is not an element, $body will be serialized to text\n regardless of $content-type.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">In any case, Content-Type of the request sent to the server will\n be $content-type.</p>\n", "summary" : "<p> This function makes an HTTP PUT request to a given URL.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above).</div>" }, { "name" : "body", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The body which will be sent to the server.</div>" }, { "name" : "content-type", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The content type of $body as described above.</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a PUT request.</xqdoc:error>" ] }, { "arity" : 3, "name" : "send-request", "qname" : "http:send-request", "signature" : "($request as element(http-schema:request)?, $href as xs:string?, $bodies as item()*) as item()+", "description" : " This function sends an HTTP request and returns the corresponding response.\n Its inputs, outputs, and behavior are identical to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://expath.org/spec/http-client\">EXPath http-client</a>'s\n send-request() function (except that HTML responses are not tidied\n into XML - see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#expath_relation\">the note above</a>). It\n is provided here for use in Zorba installations that do not have\n the EXPath module available. If you have the option of using the\n EXPath module instead of this function, please do so, as it will\n allow your application to be more interoperable between different\n XQuery engines.\n Full documentation of the $request parameter can be found in\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://expath.org/spec/http-client#d2e183\">the EXPath\n specification</a>.\n", "summary" : "<p> This function sends an HTTP request and returns the corresponding response.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "request", "type" : "element(http-schema:request)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Contains the various parameters of the request (see above).</div>" }, { "name" : "href", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The URL to which the request will be made (see <a href=\"#url_string\">note</a> above). If this parameter is specified, it will override the \"href\" attribute of $request.</div>" }, { "name" : "bodies", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> is the request body content, for HTTP methods that can contain a body in the request (i.e. POST and PUT). It is an error if this param is not the empty sequence for methods</div>" } ], "returns" : { "type" : "item()+", "description" : "<a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"#standard_return\">standard http-client return type</a>." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC001 An HTTP error occurred.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC002 Error parsing the response content as XML.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC003 With a multipart response, the override-media-type must be either a multipart media type or application/octet-stream.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC004 The src attribute on the body element is mutually exclusive with all other attribute (except the media-type).</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC005 The input request element is not valid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HC006 A timeout occurred waiting for the response.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">error:HCV02 Trying to follow a redirect of a POST, PUT, or DELETE request</xqdoc:error>" ] } ], "variables" : [  ] }