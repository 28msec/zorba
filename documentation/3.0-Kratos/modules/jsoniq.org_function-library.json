{ "ns" : "http://jsoniq.org/function-library", "description" : " This module provides the functions defined by the JSONiq specification,\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://jsoniq.org/docs/JSONiq/html/chapter-functions.html\">chapter 8 (Function Library)</a>.\n JSONiq extends the XQuery specification to also deal with JSON data natively.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://jsoniq.org/</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://jsoniq.org/functions", "prefix" : "jn" }, { "uri" : "http://jsoniq.org/function-library", "prefix" : "libjn" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 1, "name" : "accumulate", "qname" : "libjn:accumulate", "signature" : "($items as item()*) as object()", "description" : " This function dynamically builds an object, like the {||} syntax, except that\n it does not throw an error upon pair collision. Instead, it accumulates them\n into an array, if more than one.\n", "summary" : "<p> This function dynamically builds an object, like the {||} syntax, except that\n it does not throw an error upon pair collision.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items, the objects of which are going to be accumulated into a single object.</div>" } ], "returns" : { "type" : "object()", "description" : "The accumulated object." }, "errors" : [  ] }, { "arity" : 1, "name" : "descendant-arrays", "qname" : "libjn:descendant-arrays", "signature" : "($items as item()*) as array()*", "description" : " This function returns all arrays contained at any depth within a sequence of items.\n", "summary" : "<p> This function returns all arrays contained at any depth within a sequence of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" } ], "returns" : { "type" : "array()*", "description" : "The descendant arrays of the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "descendant-objects", "qname" : "libjn:descendant-objects", "signature" : "($items as item()*) as object()*", "description" : " This function returns all objects contained at any depth within a sequence of items.\n", "summary" : "<p> This function returns all objects contained at any depth within a sequence of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" } ], "returns" : { "type" : "object()*", "description" : "The descendant objects of the input sequence." }, "errors" : [  ] }, { "arity" : 1, "name" : "descendant-pairs-priv", "qname" : "libjn:descendant-pairs-priv", "signature" : "($i as item()) as object()*", "description" : " Helper function for libjn:descendant-pairs()\n", "summary" : "<p> Helper function for libjn:descendant-pairs()\n</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "i", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An item</div>" } ], "returns" : { "type" : "object()*", "description" : "The descendant pairs of the item" }, "errors" : [  ] }, { "arity" : 1, "name" : "descendant-pairs", "qname" : "libjn:descendant-pairs", "signature" : "($items as item()*) as object()*", "description" : " This function returns all pairs contained at any depth within an sequence of items.\n", "summary" : "<p> This function returns all pairs contained at any depth within an sequence of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurence" : null, "description" : "" } ], "returns" : { "type" : "object()*", "description" : "All direct and indirect descendant pairs." }, "errors" : [  ] }, { "arity" : 1, "name" : "intersect", "qname" : "libjn:intersect", "signature" : "($items as item()*) as object()", "description" : " This function returns the intersection of the objects contained in the\n given sequence of items, aggregating values corresponding to the same key\n into an array.\n", "summary" : "<p> This function returns the intersection of the objects contained in the\n given sequence of items, aggregating values corresponding to the same key\n into an array.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" } ], "returns" : { "type" : "object()", "description" : "The insersection of the objects contained in $items." }, "errors" : [  ] }, { "arity" : 1, "name" : "values", "qname" : "libjn:values", "signature" : "($items as item()*) as item()*", "description" : " This functions returns all values of all objects contained in a sequence of items.\n", "summary" : "<p> This functions returns all values of all objects contained in a sequence of items.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "items", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A sequence of items.</div>" } ], "returns" : { "type" : "item()*", "description" : "The values inside the objects of the sequence." }, "errors" : [  ] } ], "variables" : [  ] }