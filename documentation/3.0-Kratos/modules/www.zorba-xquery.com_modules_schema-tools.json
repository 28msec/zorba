{ "ns" : "http://www.zorba-xquery.com/modules/schema-tools", "description" : " This module provides funtionality to get sample XMLSchema from XML instances\n and sample XML instances from XMLSchema.\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlbeans.apache.org/\">Apache XMLBeans</a> library is used to implement\n inst2xsd and xsd2inst functions.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <b xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note:</b> Since this module has a Java library dependency a JVM required\n to be installed on the system. For Windows: jvm.dll is required on the system\n path ( usually located in \"C:\\Program Files\\Java\\jre6\\bin\\client\".\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://xmlbeans.apache.org/</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://xmlbeans.apache.org</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Cezar Andrei</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "schema-options" }, { "uri" : "http://www.zorba-xquery.com/modules/schema-tools", "prefix" : "schema-tools" }, { "uri" : "http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options", "prefix" : "st-options" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 2, "name" : "inst2xsd", "qname" : "schema-tools:inst2xsd", "signature" : "($instances as element(*)+, $options as element(st-options:inst2xsd-options)?) as document()*", "description" : " The inst2xsd function takes a set of sample XML instance elements as input and\n generates a set of sample XMLSchema documents that define\n the content of the given input.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Please consult the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlbeans.apache.org/\">official documentation for further\n information</a>.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Example:<pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n  import module namespace st = \"http://www.zorba-xquery.com/modules/schema-tools\";\n  declare namespace sto =\n      \"http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options\";\n  let $instances := (&lt;a&gt;&lt;b/&gt;&lt;c/&gt;&lt;/a&gt;, &lt;b/&gt;, &lt;c&gt;ccc&lt;/c&gt;)\n  let $options  :=\n     &lt;sto:inst2xsd-options xmlns:sto=\n       \"http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options\"&gt;\n       &lt;sto:design&gt;vbd&lt;/sto:design&gt;\n       &lt;sto:simple-content-types&gt;smart&lt;/sto:simple-content-types&gt;\n       &lt;sto:use-enumeration&gt;10&lt;/sto:use-enumeration&gt;\n     &lt;/sto:inst2xsd-options&gt;\n  return\n      st:inst2xsd($instances, $options)\n </pre>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> The inst2xsd function takes a set of sample XML instance elements as input and\n generates a set of sample XMLSchema documents that define\n the content of the given input.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "instances", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The input XML instance elements</div>" }, { "name" : "options", "type" : "element(st-options:inst2xsd-options)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Options:<br/> <ul> <li>design: Choose the generated schema design<br/> - rdd: Russian Doll Design - local elements and local types<br/> - ssd: Salami Slice Design - global elements and local types<br/> - vbd (default): Venetian Blind Design - local elements and global complex types</li> <li>simple-content-types: type of leaf nodes<br/> - smart (default): try to find the right simple XMLSchema type<br/> - always-string: use xsd:string for all simple types</li> <li>use-enumeration: - when there are multiple valid values in a list<br/> - 1: never use enumeration<br/> - 2 or more (default 10): use enumeration if less than this number of occurrences - number option</li> <li>verbose: - stdout verbose info<br/> - true: - output type holder information<br/> - false (default): no output</li></ul></div>" } ], "returns" : { "type" : "document()*", "description" : "The generated XMLSchema documents." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">schema-tools:VM001 If Zorba was unable to start the JVM.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">schema-tools:JAVA-EXCEPTION If Apache XMLBeans throws an exception.</xqdoc:error>" ] }, { "arity" : 3, "name" : "xsd2inst", "qname" : "schema-tools:xsd2inst", "signature" : "($schemas as element(*)+, $rootElementName as xs:string, $options as element(st-options:xsd2inst-options)?) as document()", "description" : " The xsd2inst function takes a set of XML Schema elements as input and the\n local name of the root element and\n generates a document that represents one sample XML instance of the given\n input schemas. The local name is searched in schema global element definitions\n in the order of schemas parameter.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Please consult the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://xmlbeans.apache.org/\">official documentation for further\n   information</a>.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Example: <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-static=\"xquery\">\n  import module namespace st = \"http://www.zorba-xquery.com/modules/schema-tools\";\n  declare namespace sto =\n      \"http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options\";\n  let $xsds  :=\n     ( &lt;xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n           attributeFormDefault=\"unqualified\"\n           elementFormDefault=\"qualified\"&gt;\n         &lt;xs:element name=\"a\" type=\"aType\"/&gt;\n         &lt;xs:complexType name=\"aType\"&gt;\n           &lt;xs:sequence&gt;\n             &lt;xs:element type=\"xs:string\" name=\"b\"/&gt;\n             &lt;xs:element type=\"xs:string\" name=\"c\"/&gt;\n           &lt;/xs:sequence&gt;\n         &lt;/xs:complexType&gt;\n       &lt;/xs:schema&gt; )\n  let $options :=\n    &lt;sto:xsd2inst-options xmlns:sto=\n      \"http://www.zorba-xquery.com/modules/schema-tools/schema-tools-options\"&gt;\n      &lt;sto:network-downloads&gt;false&lt;/sto:network-downloads&gt;\n      &lt;sto:no-pvr&gt;false&lt;/sto:no-pvr&gt;\n      &lt;sto:no-upa&gt;false&lt;/sto:no-upa&gt;\n    &lt;/sto:xsd2inst-options&gt;\n  return\n      st:xsd2inst($xsds, \"a\", $options)\n </pre><br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> The xsd2inst function takes a set of XML Schema elements as input and the\n local name of the root element and\n generates a document that represents one sample XML instance of the given\n input schemas.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "schemas", "type" : "element(*)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> elements representing XMLSchema definitions</div>" }, { "name" : "rootElementName", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The local name of the instance root element. If multiple target namespaces are used, first one found - using the sequence order - will be used.</div>" }, { "name" : "options", "type" : "element(st-options:xsd2inst-options)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Options:<br/><ul> <li>network-downloads: boolean (default false)<br/> - true allows XMLBeans to use network when resolving schema imports and includes</li> <li>no-pvr: boolean (default false)<br/> - true to disable particle valid (restriction) rule, false otherwise</li> <li>no-upa: boolean (default false)<br/> - true to disable unique particle attribution rule, false otherwise</li></ul></div>" } ], "returns" : { "type" : "document()", "description" : "The generated output document, representing a sample XML instance." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">schema-tools:VM001 If Zorba was unable to start the JVM.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">schema-tools:JAVA-EXCEPTION If Apache XMLBeans throws an exception.</xqdoc:error>" ] } ], "variables" : [  ] }