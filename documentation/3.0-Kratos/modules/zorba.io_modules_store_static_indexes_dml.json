{ "ns" : "http://zorba.io/modules/store/static/indexes/dml", "description" : " This module defines a set of functions to probe and refresh indexes which are\n declared in the prolog of a module.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n This module is part of\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://zorba.io/documentation/latest/zorba/specifications/xqddf\">Zorba's XQuery Data Definition Facility</a>.\n All the indexes managed by this module have to be pre-declared in the prolog\n of a library module.\n Please refer to the\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://zorba.io/documentation/latest/zorba/architecture/data_lifecycle\">general documentation</a>\n for more information and examples.\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://zorba.io/documentation/latest/zorba/architecture/data_lifecycle\">Data Lifecycle</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://zorba.io/documentation/latest/zorba/specifications/xqddf\">XQuery Data Definition Facility</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/indexes/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/collections/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/collections/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/integrity-constraints/ddl</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/modules/store/static/integrity-constraints/dml</xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">http://zorba.io/modules/latest/zorba.io/errors</xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Zorba Team</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://zorba.io/modules/store/static/indexes/dml", "prefix" : "idml" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "arity" : 1, "name" : "keys", "qname" : "idml:keys", "signature" : "($name as xs:QName) as node()* external", "description" : " Gets a sequence of all keys contained in the index with the given name.\n Each element has the following structure:\n  <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"brush: xml;\">\n   &lt;key xmlns=\"http://zorba.io/modules/store/static/indexes/dml\"&gt;\n     &lt;attribute value=\"key1_value\"/&gt;\n     &lt;attribute value=\"key2_value\"/&gt;\n     &lt;attribute value=\"key3_value\"/&gt;\n   &lt;/key&gt;\n  </pre>\n Note that the order of the attribute elements reflects the order of\n the keys in the index specification. Also note that the values in\n these attributes have the type that is declared in the corresponding\n index specification.\n", "summary" : "<p> Gets a sequence of all keys contained in the index with the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to get the keys for.</div>" } ], "returns" : { "type" : "node()*", "description" : "A sequence of elements comprising the keys in the index." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index was not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>" ] }, { "arity" : 2, "name" : "probe-index-point-general", "qname" : "idml:probe-index-point-general", "signature" : "($name as xs:QName, $key as xs:anyAtomicType*) as node()* external", "description" : " Gets from an index the domain nodes associated by general equality with a\n given <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search sequence </em>.\n The search sequence consists of an arbitrary number of <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search keys</em>\n where each search key is an atomic item.\n The function is supported by general indexes only.\n", "summary" : "<p> Gets from an index the domain nodes associated by general equality with a\n given  search sequence  .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to probe.</div>" }, { "name" : "key", "type" : "xs:anyAtomicType", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The search sequence.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes for which the following XQuery expression returns true: <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> $keys = $node/keyExpr </pre> where keyExpr is the expression specified in the keyspec of the index (remember that for general indexes, there can be only one keyspec)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the search sequence contains a search key whose type does not match the sequence type specified in the keyspec of the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index with name $name is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index with name $name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0029 if the index is not general.</xqdoc:error>" ] }, { "arity" : 3, "name" : "probe-index-point-value-skip", "qname" : "idml:probe-index-point-value-skip", "signature" : "($name as xs:QName, $skip as xs:integer, $key_i as xs:anyAtomicType?) as node()* external", "description" : " This is an extension of the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">probe-index-point-value()</code> function\n in that it allows index items to be skipped.\n", "summary" : "<p> This is an extension of the  probe-index-point-value()  function\n in that it allows index items to be skipped.</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to probe.</div>" }, { "name" : "skip", "type" : "xs:integer", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of index items to skip.</div>" }, { "name" : "key_i", "type" : "xs:anyAtomicType", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The search keys used to probe the index with. The i-th search key corresponds to the i-th key expression in the index declaration.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes that satisfy the search condition." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the number of search keys passed as arguments is not the same as the number of keys declared for the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if a non-empty seach key is given whose type does not match the sequence type specified in the corresponding keyspec.</xqdoc:error>" ] }, { "arity" : 2, "name" : "probe-index-point-value", "qname" : "idml:probe-index-point-value", "signature" : "($name as xs:QName, $key_i as xs:anyAtomicType?) as node()* external", "description" : " Gets the domain nodes from an index associated by value equality with a\n given <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search tuple</em>.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The search tuple consists of a number of <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search keys</em> where each\n search key is either an atomic item or the empty sequence.  The number of\n search keys given must be equal to the number of keys declared for the\n index. Since the number of keys differs from one index to another, this\n function is variadic.\n", "summary" : "<p> Gets the domain nodes from an index associated by value equality with a\n given  search tuple .</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The of the index to probe.</div>" }, { "name" : "key_i", "type" : "xs:anyAtomicType", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> A search key used to probe the index with. The i-th search key corresponds to the i-th key expression in the index declaration.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes for which the following XQuery expression returns true: <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> $key1 eq $node/keyExpr1 and ... and $keyM eq $node/keyExprM </pre> where <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">keyExpr<sub>i</sub></i> is the expression specified in the i-th keyspec of the index." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the number of search keys passed as arguments is not the same as the number of keys declared for the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if a non-empty seach key is given whose type does not match the sequence type specified in the corresponding keyspec.</xqdoc:error>" ] }, { "arity" : 7, "name" : "probe-index-range-general", "qname" : "idml:probe-index-range-general", "signature" : "($name as xs:QName, $lowerBound as xs:anyAtomicType*, $upperBound as xs:anyAtomicType*, $haveLowerBound as xs:boolean, $haveUpperBound as xs:boolean, $lowerBoundIncluded as xs:boolean, $upperBoundIncluded as xs:boolean) as node()* external", "description" : " Gets the domain nodes associated by general order-comparison (operators\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;=</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&gt;=</code>,\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&gt;</code>) with one or two <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search sequences</em>.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Each search sequence consists of an arbitrary number of\n <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search keys</em> where each search key is an atomic item.\n This method is supported by general range indexes only.\n Its result is either an error or the set of domain nodes for which the\n following XQuery expression returns true:\n  <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    if ( $haveLowerBound and $haveUpperBound ) then\n      $lowerBoundKeys lop $node/keyExpr and $node/keyExpr uop $upperBoundKeys\n    else if ( $haveLowerBound ) then\n      $lowerBoundKeys lop $node/keyExpr\n    else if ( $haveUpperBound ) then\n      $node/keyExpr uop $upperBoundKeys\n    else\n      fn:true()\n  </pre>\n where <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">keyExpr</i> is the expression specified in the keyspec of the\n index, <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lop</i> is either the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;=</code> or the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;</code>\n operator depending on whether <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lowerBoundsIncluded</code> is true or\n false, and <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uop</i> is either the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;=</code> or the\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">&lt;</code> operator depending on whether\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$upperBoundsIncluded</code> is true or false.\n", "summary" : "<p> Gets the domain nodes associated by general order-comparison (operators\n  &lt;= ,  &lt; ,  &gt;= ,\n  &gt; ) with one or two  search sequences .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The of the index to probe.</div>" }, { "name" : "lowerBound", "type" : "xs:anyAtomicType", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The lower bound search sequence.</div>" }, { "name" : "upperBound", "type" : "xs:anyAtomicType", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The upper bound search sequence.</div>" }, { "name" : "haveLowerBound", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether a lower bound search sequence exists or not.</div>" }, { "name" : "haveUpperBound", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether an upper bound search sequence exists or not.</div>" }, { "name" : "lowerBoundIncluded", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether to use the <code>&lt;=</code> or the <code>&lt;</code> operator when comparing a search key from <code>$lowerBound</code> with an index key.</div>" }, { "name" : "upperBoundIncluded", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> Whether to use the <code>&lt;=</code> or the <code>&lt;</code> operator when comparing an index key with a search key from <code>$upperBound</code>.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes that satisfy the search condition." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index was not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0030 if the index is not a general range index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if <code>$haveLowerBound</code> is true and <code>$lowerBoundKeys</code> contains an atomic item whose type does not match the sequence type specified by the index keyspec, or <code>$haveUpperBound</code> is true and <code>$upperBoundKeys</code> contains an atomic item whose type does not match the sequence type specified by the index keyspec.</xqdoc:error>" ] }, { "arity" : 8, "name" : "probe-index-range-value-skip", "qname" : "idml:probe-index-range-value-skip", "signature" : "($name as xs:QName, $skip as xs:integer, $lowerBound-i as xs:anyAtomicType?, $upperBound-i as xs:anyAtomicType?, $haveLowerBound-i as xs:boolean, $haveUpperBound-i as xs:boolean, $lowerBoundIncluded-i as xs:boolean, $upperBoundIncluded-i as xs:boolean) as node()* external", "description" : " This function is an extension of the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">probe-index-range-value()</code>\n function that index items to be skipped.\n", "summary" : "<p> This function is an extension of the  probe-index-range-value() \n function that index items to be skipped.</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The QName of the index to probe</div>" }, { "name" : "skip", "type" : "xs:integer", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The number of index items to skip.</div>" }, { "name" : "lowerBound-i", "type" : "xs:anyAtomicType", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The lower bound in a range of key values.</div>" }, { "name" : "upperBound-i", "type" : "xs:anyAtomicType", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The upper bound in a range of key values.</div>" }, { "name" : "haveLowerBound-i", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then there is no lower bound, or equivalently, the lower bound is -INFINITY. Otherwise, the lower bound is the one given by the <code>$lowerBound-i</code> value.</div>" }, { "name" : "haveUpperBound-i", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then there is no upper bound, or equivalently, the upper bound is +INFINITY. Otherwise, the upper bound is the one given by the <code>$upperBound-i</code> value.</div>" }, { "name" : "lowerBoundIncluded-i", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then the range is open from below, i.e., the lowerBound-i value is not considered part of the range. Otherwise, the range is closed from below, i.e., the <code>$lowerBound-i</code> value is part of the range.</div>" }, { "name" : "upperBoundIncluded-i", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then the range is open from above, i.e., the upperBound-i value is not considered part of the range. Otherwise, the range is closed from above, i.e., the <code>$upperBound-i</code> value is part of the range.</div>" } ], "returns" : { "type" : "node()*", "description" : "The set of domain nodes that satisfy the search condition." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index with name $name is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index with name $name does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the number of rangespecs passed as arguments is zero or greater than the number of keys declared for the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0026 if the index is not a range index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if <code>$haveLowerBound-i</code> is true and <code>$lowerBound-i</code> is an atomic item whose type does not match the sequence type specified by the i<sup>th</sup> keyspec, or <code>$haveUpperBound-i</code> is true and <code>$upperBound-i</code> is an atomic item whose type does not match the sequence type specified by the i<sup>th</sup> keyspec.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0034 if (a) the index is general (in which case there is only one rangespac), (b) the index is untyped, (c) there is both a lower and an upper bound, and (d) if T1 and T2 are the types of the lower and upper bound, neither T1 is a subtype of T2 nor T2 is a subtype of T1.</xqdoc:error>" ] }, { "arity" : 7, "name" : "probe-index-range-value", "qname" : "idml:probe-index-range-value", "signature" : "($name as xs:QName, $lowerBound-i as xs:anyAtomicType?, $upperBound-i as xs:anyAtomicType?, $haveLowerBound-i as xs:boolean, $haveUpperBound-i as xs:boolean, $lowerBoundIncluded-i as xs:boolean, $upperBoundIncluded-i as xs:boolean) as node()* external", "description" : " Gets the domain nodes associated by value order-comparison (operators\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">le</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lt</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ge</code>, <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">gt</code>) with a\n given <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">search box</em>.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The search box is specified as a number <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> of <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">rangespecs</em>\n where each rangespec consists of six values.\n The number <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> must be greater than 0 and less than or equal to the\n number <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i> of keyspecs found in the index declaration.\n If <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> &lt; <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i>, then the \"missing\" rangespecs are assumed to have\n the following value: [(), (), false, false, false, false].\n As a result, we can assume that <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> = <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i>.\n Remember that for general indexes, there can be only one IndexKeySpec and,\n as a result for general indexes, <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">M</i> = <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">N</i> = 1.\n Since the number of keys differs from one index to another,\n this function is variadic.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The i<sup xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">th</sup> rangespec corresponds to the i<sup xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">th</sup> keyspec, and\n specifies a search condition on the key values that are produced by\n evaluating that keyspec for every domain node.\n Specifically, we define the i<sup xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">th</sup> <em xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">rangespec result</em> as the\n set of domain nodes for which the following XQuery expression returns\n true:\n  <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n    if ( $haveLowerBound-i and $haveUpperBound-i ) then\n      $lowerBound-i lop $node/keyExpr-i and $node/keyExpr-i uop $upperBound-i\n    else if ( $haveLowerBound-i ) then\n      $lowerBound-i lop $node/keyExpr-i\n    else if ( $haveUpperBound-i ) then\n      $node/keyExpr-i uop $upperBound-i\n    else\n      fn:true()\n  </pre>\n where <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">keyExpr-i</i> is the expression specified by the i<sup xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">th</sup>\n keyspec of the index, <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lop</i> is either the <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">le</code> or the\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lt</code> operator depending on whether\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$lowerBoundsIncluded-i</code> is true or false, and <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">uop</i> is\n either the <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">le</i> or the <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">lt</i> operator depending on whether\n <code xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">$upperBoundsIncluded-i</code> is true or false.\n", "summary" : "<p> Gets the domain nodes associated by value order-comparison (operators\n  le ,  lt ,  ge ,  gt ) with a\n given  search box .</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to probe.</div>" }, { "name" : "lowerBound-i", "type" : "xs:anyAtomicType", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The lower bound in a range of key values.</div>" }, { "name" : "upperBound-i", "type" : "xs:anyAtomicType", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The upper bound in a range of key values.</div>" }, { "name" : "haveLowerBound-i", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then there is no lower bound, or equivalently, the lower bound is -INFINITY. Otherwise, the lower bound is the one given by the <code>$lowerBound-i</code> value.</div>" }, { "name" : "haveUpperBound-i", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then there is no upper bound, or equivalently, the upper bound is +INFINITY. Otherwise, the upper bound is the one given by the <code>$upperBound-i</code> value.</div>" }, { "name" : "lowerBoundIncluded-i", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then the range is open from below, i.e., the <code>$lowerBound-i</code> value is not considered part of the range. Otherwise, the range is closed from below, i.e., the <code>$lowerBound-i</code> value is part of the range.</div>" }, { "name" : "upperBoundIncluded-i", "type" : "xs:boolean", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> If false, then the range is open from above, i.e., the <code>$upperBound-i</code> value is not considered part of the range. Otherwise, the range is closed from above, i.e., the <code>$upperBound-i</code> value is part of the range.</div>" } ], "returns" : { "type" : "node()*", "description" : "The intersection of all the rangespec results." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0025 if the number of rangespecs passed as arguments is zero or greater than the number of keys declared for the index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0026 if the index is not a range index.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if <code>$haveLowerBound-i</code> is true and <code>$lowerBound-i</code> is an atomic item whose type does not match the sequence type specified by the i<sup>th</sup> keyspec, or <code>$haveUpperBound-i</code> is true and <code>$upperBound-i</code> is an atomic item whose type does not match the sequence type specified by the i<sup>th</sup> keyspec.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0034 if (a) the index is general (in which case there is only one rangespac), (b) the index is untyped, (c) there is both a lower and an upper bound, and (d) if T1 and T2 are the types of the lower and upper bound, neither T1 is a subtype of T2 nor T2 is a subtype of T1.</xqdoc:error>" ] }, { "arity" : 1, "name" : "refresh-index", "qname" : "idml:refresh-index", "signature" : "($name as xs:QName) external", "description" : " Updates the index with the given name.  Note that if the maintenance\n property of the index is automatic, this function does nothing.\n", "summary" : "<p> Updates the index with the given name.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the index to refresh.</div>" } ], "returns" : { "type" : null, "description" : "An empty XDM instance and a pending update list that, when applied, refreshes the contents of the index." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0021 if the index is not declared.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZDDY0023 if the index does not exist.</xqdoc:error>" ] } ], "variables" : [  ] }