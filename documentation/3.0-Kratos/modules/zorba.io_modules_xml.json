{ "ns" : "http://zorba.io/modules/xml", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n This module provides functions for reading XML files from string inputs.\n It allows reading of well-formed XML documents as well as well-formed\n external parsed entities, described by\n <a href=\"http://www.w3.org/TR/xml/#wf-entities\">XML 1.0 Well-Formed\n Parsed Entities</a>. The functions can also perform Schema and DTD\n validation of the input documents.\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following example parses a sequence of XML elements and returns\n them in a streaming fashion - each at a time:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace x = \"http://zorba.io/modules/xml\";\n import schema namespace opt = \"http://zorba.io/modules/xml-options\";\n x:parse(\n   \"&lt;from1&gt;Jani&lt;/from1&gt;&lt;from2&gt;Jani&lt;/from2&gt;&lt;from3&gt;Jani&lt;/from3&gt;\",\n   &lt;opt:options&gt;\n     &lt;opt:parse-external-parsed-entity/&gt;\n   &lt;/opt:options&gt;\n )\n </pre>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Another useful option allows to skip an arbitrary number of levels\n before returning a sequence of nodes as shown in the following example:</p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n import module namespace x = \"http://zorba.io/modules/xml\";\n import schema namespace opt = \"http://zorba.io/modules/xml-options\";\n x:parse(\n   \"&lt;root&gt;\n     &lt;from1&gt;Jani1&lt;/from1&gt;\n     &lt;from2&gt;Jani2&lt;/from2&gt;\n     &lt;from3&gt;Jani3&lt;/from3&gt;\n   &lt;/root&gt;\",\n   &lt;opt:options&gt;\n     &lt;opt:parse-external-parsed-entity opt:skip-root-nodes=\"1\"/&gt;\n   &lt;/opt:options&gt;\n )\n </pre>\n", "sees" : [ "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xml/#wf-entities\">XML 1.0 Well-Formed Parsed Entities</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://www.w3.org/TR/xpath-functions-30/#func-parse-xml\"> fn:parse-xml() function in XPath and XQuery Functions and Operators 3.0</a></xqdoc:see>", "<xqdoc:see xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"><a href=\"http://xmlsoft.org/html/libxml-parser.html\">LibXml2 parser</a></xqdoc:see>" ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza, Juan Zacarias</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/xml-options", "prefix" : "opt" }, { "uri" : "http://zorba.io/modules/schema", "prefix" : "schema" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/modules/xml", "prefix" : "x" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "arity" : 1, "name" : "canonicalize", "qname" : "x:canonicalize", "signature" : "($xml-string as xs:string) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A function to canonicalize the given XML string, that is, transform\n it into Canonical XML as defined by <a href=\"http://www.w3.org/TR/xml-c14n\">Canonical XML</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note: This function is not streamable. If a streamable string is used\n as input for the function it will be materialized.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note: This function sets the\n <a href=\"http://xmlsoft.org/html/libxml-parser.html#xmlParserOption\">XML_PARSE_NOERROR</a>\n option when parsing the XML input.</p>\n", "summary" : "<p>  A function to canonicalize the given XML string, that is, transform\n it into Canonical XML as defined by  Canonical XML .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml-string", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a string representation of a well formed XML to canonicalize. XML fragments are not allowed.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the canonicalized XML string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:CANO0001 invalid input.</xqdoc:error>" ] }, { "arity" : 2, "name" : "canonicalize", "qname" : "x:canonicalize", "signature" : "($xml-string as xs:string, $options as element(opt:options)) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A function to canonicalize the given XML string, that is, transform\n it into Canonical XML as defined by <a href=\"http://www.w3.org/TR/xml-c14n\">Canonical XML</a>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This version of the function allows specifying certain options to be\n used when initially parsing the XML string. These are of the same form\n as the options to x:parse#2(), although the following options are\n currently ignored for this function:\n <ul>\n <li>&lt;opt:no-error/&gt;</li>\n <li>&lt;opt:base-uri/&gt;</li>\n <li>&lt;opt:schema-validate/&gt;</li>\n <li>&lt;opt:parse-external-parsed-entity/&gt;</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note: This function is not streamable, if a streamable string is used\n as input for the function it will be materialized.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Note: This function sets the\n <a href=\"http://xmlsoft.org/html/libxml-parser.html#xmlParserOption\">XML_PARSE_NOERROR</a>\n option when parsing the XML input.</p>\n", "summary" : "<p>  A function to canonicalize the given XML string, that is, transform\n it into Canonical XML as defined by  Canonical XML .</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml-string", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> a string representation of a well formed XML to canonicalize. XML fragments are not allowed.</div>" }, { "name" : "options", "type" : "element(opt:options)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> an XML containg options for the canonicalize function.</div>" } ], "returns" : { "type" : "xs:string", "description" : "the canonicalized XML string." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:CANO0001 invalid input.</xqdoc:error>" ] }, { "arity" : 2, "name" : "parse", "qname" : "x:parse", "signature" : "($xml-string as xs:string?, $options as element(opt:options)?) as node()* external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A function to parse XML files and fragments (i.e.\n <a href=\"http://www.w3.org/TR/xml/#wf-entities\">external general parsed\n entities</a>).</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The functions takes two arguments: the first one is the\n string to be parsed and the second argument is an &lt;options/&gt; element that\n passes a list of options to the parsing function. They are described below.\n The options element must conform to the xml-options:options element type\n from the xml-options.xsd schema. Some of these\n will be passed to the underlying library (LibXml2) and further documentation\n for them can be found at <a href=\"http://xmlsoft.org/html/libxml-parser.html\">\n LibXml2 parser</a>.</p>\n The list of available options:\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n <li>\n &lt;base-uri/&gt; - the element must have a \"value\" attribute, which will provide\n the baseURI that will be used as the baseURI for every node returned by this\n function.\n </li>\n <li>\n &lt;no-error/&gt; - if present, the option will disable fatal error processing. Any\n failure to parse or validate the input in the requested manner will result\n in the function returning an empty sequence and no error will raised.\n </li>\n <li>\n &lt;schema-validate/&gt; - if present, it will request that the input string be Schema\n validated. The element accepts an attribute named \"mode\" which can have two\n values: \"strict and \"lax\". Enabling the option will produce a result that is\n equivalent to processing the input with the option disabled, and then copying\n the result using the XQuery \"validate strict|lax\" expression. This option can not\n be used together with either the &lt;DTD-validate/&gt; or the &lt;parse-external-parsed-entity/&gt;\n option. Doing so will raise a zerr:ZXQD0003 error.\n </li>\n <li>\n &lt;DTD-validate/&gt; - the option will enable the DTD-based validation. If this\n option is enabled and the input references a DTD, then the input must be a\n well-formed and DTD-valid XML document. The &lt;DTD-load/&gt; option must be used for\n external DTD files to be loaded. If the option is enabled and the input does\n not reference a DTD then the option is ignored. If the option is disabled, the\n input is not required to reference a DTD and if it does reference a DTD then\n the DTD is ignored for validation purposes. This option can not\n be used together with either the &lt;schema-validate/&gt; or the &lt;parse-external-parsed-entity&gt;\n option. Doing so will raise a zerr:ZXQD0003 error.\n </li>\n <li>\n &lt;DTD-load/&gt; - if present, it will enable loading of external DTD files.\n </li>\n <li>\n &lt;default-DTD-attributes/&gt; - if present, it will enable the default DTD attributes.\n </li>\n <li>\n &lt;parse-external-parsed-entity/&gt; - if present, it will enable the processing of XML\n external entities. If the option\n is enabled, the input must conform to the syntax extParsedEnt (production\n [78] in XML 1.0, see <a href=\"http://www.w3.org/TR/xml/#wf-entities\">\n Well-Formed Parsed Entities</a>). In addition, by default a DOCTYPE declaration is allowed,\n as described by the [28] doctypedecl production, see <a href=\"http://www.w3.org/TR/xml/#NT-doctypedecl\">\n Document Type Definition</a>. A parameter is available to forbid the appearance of the DOCTYPE.\n The result of the function call is a list\n of nodes corresponding to the top-level components of the content of the\n external entity: that is, elements, processing instructions, comments, and\n text nodes. CDATA sections and character references are expanded, and\n adjacent characters are merged so the result contains no adjacent text\n nodes. If the option is disabled, the input must be a well-formed XML\n document conforming to the Document production\n (<a href=\"http://www.w3.org/TR/xml/#sec-well-formed\">production [1] in XML 1.0</a>).\n This option can not be used together with either the &lt;schema-validate/&gt; or the &lt;DTD-validate/&gt;\n option. Doing so will raise a zerr:ZXQD0003 error.\n The &lt;parse-external-parsed-entity/&gt; option has three parameters, given by attributes. The first\n attribute is \"skip-root-nodes\" and it can have a non-negative value. Specifying the paramter\n tells the parser to skip the given number of root nodes and return only their children. E.g.\n skip-root-nodes=\"1\" is equivalent to parse-xml($xml-string)/node()/node() . skip-root-nodes=\"2\" is equivalent\n to parse-xml($xml-string)/node()/node()/node() , etc. The second attribute is \"skip-top-level-text-nodes\" with a\n boolean value. Specifying \"true\" will tell the parser to skip top level text nodes, returning\n only the top level elements, comments, PIs, etc. This parameter works in combination with\n the \"skip-root-nodes\" paramter, thus top level text nodes are skipped after \"skip-root-nodes\" has\n been applied. The third paramter is \"error-on-doctype\" and will generate an error if a DOCTYPE\n declaration appears in the input, which by default is allowed.\n </li>\n <li>\n &lt;substitute-entities/&gt; - if present, it will enable the XML entities substitutions.\n </li>\n <li>\n &lt;remove-redundant-ns/&gt; - if present, the parser will remove redundant namespaces declarations.\n </li>\n <li>\n &lt;no-CDATA/&gt; - if present, the parser will merge CDATA nodes as text nodes.\n </li>\n <li>\n &lt;xinclude-substitutions/&gt; - if present, it will enable the XInclude substitutions.\n </li>\n <li>\n &lt;no-xinclude-nodes/&gt; - if present, the parser will not generate XInclude START/END nodes.\n </li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n An example that sets the base-uri of the parsed external entities:\n </p>\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n   import module namespace x = \"http://zorba.io/modules/xml\";\n   import schema namespace opt = \"http://zorba.io/modules/xml-options\";\n   x:parse(\"&lt;from1&gt;Jani&lt;/from1&gt;&lt;from2&gt;Jani&lt;/from2&gt;&lt;from3&gt;Jani&lt;/from3&gt;\",\n     &lt;opt:options&gt;\n       &lt;opt:base-uri opt:value=\"urn:test\"/&gt;\n       &lt;opt:parse-external-parsed-entity/&gt;\n     &lt;/opt:options&gt;\n   )\n </pre>\n", "summary" : "<p>  A function to parse XML files and fragments (i.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml-string", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The string that holds the XML to be parsed. If empty, the function will return an empty sequence</div>" }, { "name" : "options", "type" : "element(opt:options)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The options for the parsing</div>" } ], "returns" : { "type" : "node()*", "description" : "The parsed XML as a document node or a list of nodes, or an empty sequence." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZXQD0003 The error will be raised if the options to the function are inconsistent.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FODC0006 The error will be raised if the input string is not a valid XML document or fragment (external general parsed entity) or if DTD validation was enabled and the document has not passed it.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQDY0027 The error will be raised if schema validation was enabled and the input document has not passed it or if the parsing options are not conformant to the xml-options.xsd schema.</xqdoc:error>" ] } ], "variables" : [  ] }