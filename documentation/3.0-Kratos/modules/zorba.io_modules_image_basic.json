{ "ns" : "http://zorba.io/modules/image/basic", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides function to do the following basic image operations:</p>\n <ul xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">\n   <li>create empty images</li>\n   <li>compare images</li>\n   <li>compress image</li>\n   <li>convert an image one format to another</li>\n   <li>retrieve with, height, format, and exif information from an image</li>\n </ul>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The following image formats are supported:\n <ul>\n   <li>GIF</li>\n   <li>JPEG</li>\n   <li>PNG</li>\n   <li>TIFF</li>\n   <li>BMP</li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The errors raised by functions of this module have the namespace\n <tt>http://zorba.io/modules/image/error</tt> (associated with prefix ierr).</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Daniel Thomas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/image/basic", "prefix" : "basic" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/image/error", "prefix" : "ierr" }, { "uri" : "http://zorba.io/modules/image/image", "prefix" : "image" }, { "uri" : "http://www.w3.org/2000/svg", "prefix" : "svg" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 2, "name" : "compress", "qname" : "basic:compress", "signature" : "($image as xs:base64Binary, $quality as xs:unsignedInt) as xs:base64Binary external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Compresses the passed image.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Compressing means lowering the quality and reducing the size.</p>\n", "summary" : "<p>  Compresses the passed image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" }, { "name" : "quality", "type" : "xs:unsignedInt", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> compression level, 0 to 100</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the compressed image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error>" ] }, { "arity" : 2, "name" : "convert-svg-string", "qname" : "basic:convert-svg-string", "signature" : "($svg as xs:string, $format as xs:string) as xs:base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts an SVG image to a supported image format.</p>\n", "summary" : "<p>  Converts an SVG image to a supported image format.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "svg", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image to convert as string</div>" }, { "name" : "format", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> target format</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the resulting image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:INVALID_IMAGE the passed SVG is invalid.</xqdoc:error>" ] }, { "arity" : 2, "name" : "convert-svg", "qname" : "basic:convert-svg", "signature" : "($svg as element(svg:svg), $format as xs:string) as xs:base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts an SVG image to a supported image format.</p>\n", "summary" : "<p>  Converts an SVG image to a supported image format.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "svg", "type" : "element(svg:svg)", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image to convert</div>" }, { "name" : "format", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> target format</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "the resulting image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:INVALID_IMAGE the passed SVG is invalid.</xqdoc:error>" ] }, { "arity" : 2, "name" : "convert", "qname" : "basic:convert", "signature" : "($image as xs:base64Binary, $format as xs:string) as xs:base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Converts an image to another format.</p>\n", "summary" : "<p>  Converts an image to another format.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the source image</div>" }, { "name" : "format", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the format (see supported formats above) of the resulting image.</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "A new image with the same content as the passed image but with the specified file format." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0001 unsupported image format</xqdoc:error>" ] }, { "arity" : 3, "name" : "create", "qname" : "basic:create", "signature" : "($width as xs:unsignedInt, $height as xs:unsignedInt, $format as xs:string) as xs:base64Binary", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Creates an empty image with background color white.</p>\n", "summary" : "<p>  Creates an empty image with background color white.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "width", "type" : "xs:unsignedInt", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the width of the new image</div>" }, { "name" : "height", "type" : "xs:unsignedInt", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the height of the new image</div>" }, { "name" : "format", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the format of the new image</div>" } ], "returns" : { "type" : "xs:base64Binary", "description" : "newly created image" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FORG0001 unsupported image format</xqdoc:error>" ] }, { "arity" : 2, "name" : "equals", "qname" : "basic:equals", "signature" : "($image1 as xs:base64Binary, $image2 as xs:base64Binary) as xs:boolean external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Compares two images.</p>\n", "summary" : "<p>  Compares two images.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image1", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> first image</div>" }, { "name" : "image2", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> second image</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "True if the images are equal." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:INVALID_IMAGE one of the passed images is invalid.</xqdoc:error>" ] }, { "arity" : 2, "name" : "exif", "qname" : "basic:exif", "signature" : "($image as xs:base64Binary, $tag as xs:string) as xs:string? external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Reads exif information from an image.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This function works for JPEG and TIFF images only.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It returns empty sequence if no exif information matching the passed tag is found.</p>\n", "summary" : "<p>  Reads exif information from an image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" }, { "name" : "tag", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the field name we want read (e.g. DateTime).</div>" } ], "returns" : { "type" : "xs:string?", "description" : "exif field content" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error>" ] }, { "arity" : 1, "name" : "format", "qname" : "basic:format", "signature" : "($image as xs:base64Binary) as xs:string external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the format of the passed image.</p>\n", "summary" : "<p>  Returns the format of the passed image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" } ], "returns" : { "type" : "xs:string", "description" : "the format" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error>" ] }, { "arity" : 1, "name" : "height", "qname" : "basic:height", "signature" : "($image as xs:base64Binary) as xs:unsignedInt external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the height of the passed image.</p>\n", "summary" : "<p>  Returns the height of the passed image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" } ], "returns" : { "type" : "xs:unsignedInt", "description" : "the height in pixels" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:INVALID_IMAGE the passed image is invalid.</xqdoc:error>" ] }, { "arity" : 1, "name" : "width", "qname" : "basic:width", "signature" : "($image as xs:base64Binary) as xs:unsignedInt external", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the width of the passed image.</p>\n", "summary" : "<p>  Returns the width of the passed image.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "image", "type" : "xs:base64Binary", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the image</div>" } ], "returns" : { "type" : "xs:unsignedInt", "description" : "the width in pixels" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">ierr:IM001 the passed image is invalid.</xqdoc:error>" ] } ], "variables" : [  ] }