{ "ns" : "http://zorba.io/modules/json-xml", "description" : " Using this module, you can parse JSON data into XML, manipulate it like any\n other XML data using XQuery, and serialize the result back as JSON.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n There are many ways to represent JSON data in XML, some loss-less (\"round\n tripable\") and some lossy (\"one way\").  Loss-less representations preserve\n the JSON data types <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">boolean</i>, <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">number</i>, and <i xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">null</i>; lossy\n representations convert all data to strings.\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n For a loss-less representation, this module implements that proposed by\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://john.snelson.org.uk/parsing-json-into-xquery\">John Snelson</a>.\n For example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"java\">\n   {\n     \"firstName\" : \"John\",\n     \"lastName\" : \"Smith\",\n     \"address\" : {\n       \"streetAddress\" : \"21 2nd Street\",\n       \"city\" : \"New York\",\n       \"state\" : \"NY\",\n       \"postalCode\" : 10021\n     },\n     \"phoneNumbers\" : [ \"212 732-1234\", \"646 123-4567\" ]\n   }\n </pre>\n would be represented as:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n   &lt;json type=\"object\"&gt;\n     &lt;pair name=\"firstName\" type=\"string\"&gt;John&lt;/pair&gt;\n     &lt;pair name=\"lastName\" type=\"string\"&gt;Smith&lt;/pair&gt;\n     &lt;pair name=\"address\" type=\"object\"&gt;\n       &lt;pair name=\"streetAddress\" type=\"string\"&gt;21 2nd Street&lt;/pair&gt;\n       &lt;pair name=\"city\" type=\"string\"&gt;New York&lt;/pair&gt;\n       &lt;pair name=\"state\" type=\"string\"&gt;NY&lt;/pair&gt;\n       &lt;pair name=\"postalCode\" type=\"number\"&gt;10021&lt;/pair&gt;\n     &lt;/pair&gt;\n     &lt;pair name=\"phoneNumbers\" type=\"array\"&gt;\n       &lt;item type=\"string\"&gt;212 732-1234&lt;/item&gt;\n       &lt;item type=\"string\"&gt;646 123-4567&lt;/item&gt;\n     &lt;/pair&gt;\n   &lt;/json&gt;\n </pre>\n For a lossy representation, this module implements\n <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://jsonml.org/\">JsonML</a> (the array form).\n For example:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"java\">\n   [ \"person\",\n     { \"created\" : \"2006-11-11T19:23\",\n       \"modified\" : \"2006-12-31T23:59\" },\n     [ \"firstName\", \"Robert\" ],\n     [ \"lastName\", \"Smith\" ],\n     [ \"address\",\n       { \"type\" : \"home\" },\n       [ \"street\", \"12345 Sixth Ave\" ],\n       [ \"city\", \"Anytown\" ],\n       [ \"state\", \"CA\" ],\n       [ \"postalCode\", \"98765-4321\" ]\n     ]\n   ]\n </pre>\n would be represented as:\n <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" class=\"ace-static\" ace-mode=\"xquery\">\n   &lt;person created=\"2006-11-11T19:23\" modified=\"2006-12-31T23:59\"&gt;\n     &lt;firstName&gt;Robert&lt;/firstName&gt;\n     &lt;lastName&gt;Smith&lt;/lastName&gt;\n     &lt;address type=\"home\"&gt;\n       &lt;street&gt;12345 Sixth Ave&lt;/street&gt;\n       &lt;city&gt;Anytown&lt;/city&gt;\n       &lt;state&gt;CA&lt;/state&gt;\n       &lt;postalCode&gt;98765-4321&lt;/postalCode&gt;\n     &lt;/address&gt;\n   &lt;/person&gt;\n </pre>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Paul J. Lucas</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/json-xml", "prefix" : "jx" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" }, { "uri" : "http://zorba.io/errors", "prefix" : "zerr" } ], "functions" : [ { "arity" : 1, "name" : "json-to-xml", "qname" : "jx:json-to-xml", "signature" : "($json as json-item()?) as element(*,xs:untyped)?", "description" : " Converts JSON data into an XDM instance using the Snelson representation\n described above.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Converts JSON data into an XDM instance using the Snelson representation\n described above.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "json", "type" : "json-item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The JSON data.</div>" } ], "returns" : { "type" : "element(*,xs:untyped)?", "description" : "said XDM instance." }, "errors" : [  ] }, { "arity" : 2, "name" : "json-to-xml", "qname" : "jx:json-to-xml", "signature" : "($json as json-item()?, $options as object()) as element(*,xs:untyped)?", "description" : " Converts JSON data into an XDM instance using one of the representations\n described above.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Converts JSON data into an XDM instance using one of the representations\n described above.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "json", "type" : "json-item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The JSON data.</div>" }, { "name" : "options", "type" : "object()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The JSON conversion options, for example: <pre> { \"json-format\" : \"JsonML-array\" } </pre></div>" } ], "returns" : { "type" : "element(*,xs:untyped)?", "description" : "said XDM instance." }, "errors" : [  ] }, { "arity" : 1, "name" : "xml-to-json", "qname" : "jx:xml-to-json", "signature" : "($xml as item()*) as json-item()*", "description" : " Converts XML data into a JSON item using the Snelson representation\n described above.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Converts XML data into a JSON item using the Snelson representation\n described above.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The XML data to convert.</div>" } ], "returns" : { "type" : "json-item()*", "description" : "said JSON items." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0001 if $xml is not a document or element node.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0002 if $xml contains an element that is missing a required attribute.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0003 if $xml contains an attribute having an illegal value.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0004 if $xml contains an illegal element. type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0007 if $xml contains an element that is missing a required value.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0008 if $xml contains an illegal value for a JSON type.</xqdoc:error>" ] }, { "arity" : 2, "name" : "xml-to-json", "qname" : "jx:xml-to-json", "signature" : "($xml as item()*, $options as object()) as json-item()*", "description" : " Converts XML data into a JSON item using one of the respresentations\n described above.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n", "summary" : "<p> Converts XML data into a JSON item using one of the respresentations\n described above.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "xml", "type" : "item()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The XML data to convert.</div>" }, { "name" : "options", "type" : "object()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The conversion options, for example: <pre> { \"json-format\" : \"JsonML-array\" } </pre></div>" } ], "returns" : { "type" : "json-item()*", "description" : "said JSON items." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0001 if $xml is not a document or element node.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0002 if $xml contains an element that is missing a required attribute.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0003 if $xml contains an attribute having an illegal value.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0004 if $xml contains an illegal element. type.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0007 if $xml contains an element that is missing a required value.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">zerr:ZJSE0008 if $xml contains an illegal value for a JSON type.</xqdoc:error>" ] } ], "variables" : [  ] }