{ "ns" : "http://zorba.io/modules/reflection", "description" : " This module provides functions to dynamically invoke functions or main modules,\n respectively. Each of the functions (invoke or eval) come in four variants depending\n whether the expression being invoked is simple, nondeterministic, updating,\n or sequential.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Nicolae Brinza</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/annotations", "prefix" : "an" }, { "uri" : "http://www.w3.org/2005/xqt-errors", "prefix" : "err" }, { "uri" : "http://zorba.io/modules/reflection", "prefix" : "reflection" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 1, "name" : "eval-n", "qname" : "reflection:eval-n", "signature" : "($query as xs:string) as item()* external", "description" : " See documentation of reflection:eval() except the main module that is to\n be executed may be nondeterministc.\n", "summary" : "<p> See documentation of reflection:eval() except the main module that is to\n be executed may be nondeterministc.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query string to be evaluated</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the query" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the evaluated XQuery may return</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQST0031 If the XQuery version of the inner program is greater than the version of the outer program.</xqdoc:error>" ] }, { "arity" : 1, "name" : "eval-s", "qname" : "reflection:eval-s", "signature" : "($query as xs:string) as item()* external", "description" : " See documentation of reflection:eval() except the main module that is to\n be executed may be sequential, i.e. may have side-effects.\n", "summary" : "<p> See documentation of reflection:eval() except the main module that is to\n be executed may be sequential, i.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query string to be evaluated</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the query (the result is not supposed to contain any PUL)." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the evaluated XQuery may return</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQST0031 If the XQuery version of the inner program is greater than the version of the outer program.</xqdoc:error>" ] }, { "arity" : 1, "name" : "eval-u", "qname" : "reflection:eval-u", "signature" : "($query as xs:string) external", "description" : " See documentation of reflection:eval() except the main module that is to\n be executed may be updating, i.e. return a pending update list.\n", "summary" : "<p> See documentation of reflection:eval() except the main module that is to\n be executed may be updating, i.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" } ], "updating" : true, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query string to be evaluated</div>" } ], "returns" : { "type" : null, "description" : "the PUL resulting from evaluating the query" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the evaluated XQuery may return</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQST0031 If the XQuery version of the inner program is greater than the version of the outer program.</xqdoc:error>" ] }, { "arity" : 1, "name" : "eval", "qname" : "reflection:eval", "signature" : "($query as xs:string) as item()* external", "description" : " The purpose of this function is to (dynamically) execute an XQuery program\n from inside another XQuery program.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The XQuery program that invokes the\n eval function will be referred to as the \"outer\" program and the XQuery\n program that is executed by the eval invocation will be referred to as\n the \"inner\" program. The function is given as a string argument.\n Typically, the outer program constructs this string dynamically,\n e.g., based on data extracted from documents and/or the values of\n external variables. The eval function treats this string as\n an XQuery main module. That is, it parses the string, compiles the\n resulting parse tree, executes the resulting execution plan, and finally\n returns the result or error (if any) to the outer program.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The given XQuery program needs to be a valid according to XQuery's\n MainModule production (see <a xmlns:xqdoc=\"http://www.xqdoc.org/1.0\" href=\"http://www.w3.org/TR/xquery/#doc-xquery-MainModule\">\n http://www.w3.org/TR/xquery/#doc-xquery-MainModule</a>. Please note\n that the inner pogram must at least have the XQuery version of the\n outer program [err:XQST0031].<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The inner program \"inherits\" the static and dynamic context of the outer\n program. Specifically, evaluation of the inner program is done in static and\n dynamic contextes that are initialized as copies of the static and dynamic\n contextes of the outer program at the place where the eval invocation appears\n at. This means that, for example, all variables that are in-scope at the place\n where the eval function is invoked from, are also in-scope inside the inner\n program and can be referenced there without having to be re-declared. On the other\n hand, declarations that appear in the prolog of the inner main module or are\n imported by the inner main module from library modules, hide their corresponding\n inherited declarations. For example, if the inner main module declares\n a variable or function with the same name as an inherited variable or function,\n the inner variable/function hides the inherited one.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n If the inner program declares an external variable with the same name as an\n inherited variable, the value of the inherited variable is used to initialize\n the inner external variable. If, however, an inner external variable has no\n default initializer and no corresponding inherited variable, it will remain\n uninitialized, causing the inner program to raise an error when executed.\n", "summary" : "<p> The purpose of this function is to (dynamically) execute an XQuery program\n from inside another XQuery program.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "query", "type" : "xs:string", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the query string to be evaluated</div>" } ], "returns" : { "type" : "item()*", "description" : "the result of evaluating the query" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the evaluated XQuery may return.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XQST0031 If the XQuery version of the inner program is greater than the version of the outer program.</xqdoc:error>" ] }, { "arity" : 1, "name" : "invoke-n", "qname" : "reflection:invoke-n", "signature" : "($name as xs:QName) as item()* external", "description" : " See documentation for reflection:invoke except the function that\n is to be invoked may be nondeterministic.\n", "summary" : "<p> See documentation for reflection:invoke except the function that\n is to be invoked may be nondeterministic.</p>", "annotation_str" : " %an:nondeterministic %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" }, { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the QName of the function that is to be invoked</div>" } ], "returns" : { "type" : "item()*", "description" : "the result that is returned by the invoked function" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the invoked function may return</xqdoc:error>" ] }, { "arity" : 1, "name" : "invoke-s", "qname" : "reflection:invoke-s", "signature" : "($name as xs:QName) as item()* external", "description" : " See documentation for reflection:invoke except the function that\n is to be invoked may be sequential, i.e. may have side-effects.\n", "summary" : "<p> See documentation for reflection:invoke except the function that\n is to be invoked may be sequential, i.</p>", "annotation_str" : " %an:variadic %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" }, { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the QName of the function that is to be invoked</div>" } ], "returns" : { "type" : "item()*", "description" : "the result that is returned by the invoked function" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the invoked function may return</xqdoc:error>" ] }, { "arity" : 1, "name" : "invoke-u", "qname" : "reflection:invoke-u", "signature" : "($name as xs:QName) external", "description" : " See documentation for reflection:invoke-n except the function that\n is to be invoked may be updating, i.e. return a pending update list.\n", "summary" : "<p> See documentation for reflection:invoke-n except the function that\n is to be invoked may be updating, i.</p>", "annotation_str" : " %an:nondeterministic %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "nondeterministic", "value" : "" }, { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : true, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the QName of the function that is to be invoked</div>" } ], "returns" : { "type" : null, "description" : "the result that is returned by the invoked function" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the invoked function may return</xqdoc:error>" ] }, { "arity" : 1, "name" : "invoke", "qname" : "reflection:invoke", "signature" : "($name as xs:QName) as item()* external", "description" : " The invoke function allows to dynamically call a function given its QName\n and parameters.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n It is possible to invoke a function whose name is not known\n at compilation time -- it can be computed, passed through an external\n variable, taken from a file, etc. The first parameter must always be a\n QName identifying a known function.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n The function is declared with the %an:variadic annotation. Hence, it allows\n for an arbitrary number of parameters. All of these parameters (except the\n first one) will be passed to the function that is called.\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Example usage : <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> reflection:invoke ( xs:QName(\"fn:max\"), (1,2,3) ) </pre>\n <br xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Returns <pre xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> 3 </pre>.\n", "summary" : "<p> The invoke function allows to dynamically call a function given its QName\n and parameters.</p>", "annotation_str" : " %an:variadic", "annotations" : [ { "prefix" : "an", "ns" : "http://zorba.io/annotations", "name" : "variadic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "name", "type" : "xs:QName", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the QName of the function that is to be invoked</div>" } ], "returns" : { "type" : "item()*", "description" : "the result that is returned by the invoked function" }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">whatever error the invoked function may return</xqdoc:error>" ] } ], "variables" : [  ] }