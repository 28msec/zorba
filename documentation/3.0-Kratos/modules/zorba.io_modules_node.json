{ "ns" : "http://zorba.io/modules/node", "description" : " This module defines a set of function which can be used\n to determine (1) the relationship between two nodes (e.g. if one\n is the ancestor if another) and (2) properties of given\n nodes (e.g. their level in the tree).\n The same functionality can be achieved with simple XPath expressions.\n However, please note that using the functions in this modules instead\n of path expressions guarantees better performance.\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Matthias Brantner</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "http://zorba.io/modules/node", "prefix" : "node" }, { "uri" : "http://zorba.io/options/versioning", "prefix" : "ver" } ], "functions" : [ { "arity" : 2, "name" : "ancestor-of", "qname" : "node:ancestor-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is an\n ancestor of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is an\n ancestor of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential descendant</div>" }, { "name" : "node2", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential ancestor</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is an ancestor of $node1; false otherwise." }, "errors" : [  ] }, { "arity" : 2, "name" : "child-of", "qname" : "node:child-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n child of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n child of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential parent</div>" }, { "name" : "node2", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential child</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a child of $node1; false otherwise." }, "errors" : [  ] }, { "arity" : 1, "name" : "copy", "qname" : "node:copy", "signature" : "($input as node()*) as node()* external", "description" : " Return a deep copy of every given node according to the properties\n specified in the static context of the invoking module.<p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"/>\n Please note that a copy of a node is parentless.\n", "summary" : "<p> Return a deep copy of every given node according to the properties\n specified in the static context of the invoking module.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node to copy</div>" } ], "returns" : { "type" : "node()*", "description" : "a deep copy of every node in the input sequence or the empty sequence if $input is the empty sequence." }, "errors" : [  ] }, { "arity" : 2, "name" : "descendant-of", "qname" : "node:descendant-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n descendant of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n descendant of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential ancestor</div>" }, { "name" : "node2", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential descendant</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a descendant of $node1; false otherwise." }, "errors" : [  ] }, { "arity" : 2, "name" : "following-of", "qname" : "node:following-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is\n following the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is\n following the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding node</div>" }, { "name" : "node2", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following node</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is following the node $node1; false otherwise." }, "errors" : [  ] }, { "arity" : 2, "name" : "following-sibling-of", "qname" : "node:following-sibling-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n following-sibling of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n following-sibling of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding-sibling</div>" }, { "name" : "node2", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following-sibling</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a following-sibling of $node1; false otherwise." }, "errors" : [  ] }, { "arity" : 2, "name" : "least-common-ancestor", "qname" : "node:least-common-ancestor", "signature" : "($node1 as node(), $node2 as node()) as node()? external", "description" : " Computes the least common ancestor of two given nodes in\n the tree.\n", "summary" : "<p> Computes the least common ancestor of two given nodes in\n the tree.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the first node</div>" }, { "name" : "node2", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the second node</div>" } ], "returns" : { "type" : "node()?", "description" : "the least common ancestor of the two given nodes or the empty sequence if the two nodes are not part of the same tree." }, "errors" : [  ] }, { "arity" : 1, "name" : "level", "qname" : "node:level", "signature" : "($node as node()) as xs:integer external", "description" : " Computes the level of a given node in the tree.\n Note: The first level has the number one.\n", "summary" : "<p> Computes the level of a given node in the tree.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the node for which the level should be computed</div>" } ], "returns" : { "type" : "xs:integer", "description" : "The level as xs:integer of the given node in the tree." }, "errors" : [  ] }, { "arity" : 2, "name" : "parent-of", "qname" : "node:parent-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n parent of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n parent of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential child</div>" }, { "name" : "node2", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential parent</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a parent of $node1; false otherwise." }, "errors" : [  ] }, { "arity" : 2, "name" : "preceding-of", "qname" : "node:preceding-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is\n preceding the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is\n preceding the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following node</div>" }, { "name" : "node2", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding node</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is preceding the node $node1; false otherwise." }, "errors" : [  ] }, { "arity" : 2, "name" : "preceding-sibling-of", "qname" : "node:preceding-sibling-of", "signature" : "($node1 as node(), $node2 as node()) as xs:boolean external", "description" : " Determines whether the node given as second argument is a\n preceding-sibling of the node given as first argument.\n", "summary" : "<p> Determines whether the node given as second argument is a\n preceding-sibling of the node given as first argument.</p>", "annotation_str" : "", "annotations" : [  ], "updating" : false, "parameters" : [ { "name" : "node1", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential following-sibling</div>" }, { "name" : "node2", "type" : "node()", "occurence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the potential preceding-sibling</div>" } ], "returns" : { "type" : "xs:boolean", "description" : "true if $node2 is a preceding-sibling of $node1; false otherwise." }, "errors" : [  ] } ], "variables" : [  ] }